From skalpa at berlios.de  Wed Nov  2 19:34:35 2005
From: skalpa at berlios.de (Skalpa Keo at BerliOS)
Date: Wed, 2 Nov 2005 19:34:35 +0100
Subject: [Xoops4-svn] r2 - in XoopsCore/trunk: . docs docs/images htdocs htdocs/class htdocs/class/database htdocs/class/mail htdocs/class/mail/phpmailer htdocs/class/smarty htdocs/class/smarty/configs htdocs/class/smarty/core htdocs/class/smarty/plugins htdocs/class/xml htdocs/class/xml/rpc htdocs/class/xml/rss htdocs/class/xoopsform htdocs/extras htdocs/extras/theme_x2t htdocs/extras/theme_x2t/doc htdocs/images htdocs/images/banners htdocs/images/icons htdocs/images/subject htdocs/include htdocs/install htdocs/install/class htdocs/install/img htdocs/install/language htdocs/install/language/english htdocs/install/sql htdocs/kernel htdocs/language htdocs/language/english htdocs/modules htdocs/modules/system htdocs/modules/system/admin htdocs/modules/system/admin/avatars htdocs/modules/system/admin/banners htdocs/modules/system/admin/blocksadmin htdocs/modules/system/admin/comments htdocs/modules/system/admin/findusers htdocs/modules/system/admin/groups htdocs/modules/system/admin/images !
 htdocs/modules/system/admin/mailusers htdocs/modules/system/admin/modulesadmin htdocs/modules/system/admin/preferences htdocs/modules/system/admin/smilies htdocs/modules/system/admin/tplsets htdocs/modules/system/admin/userrank htdocs/modules/system/admin/users htdocs/modules/system/admin/version htdocs/modules/system/blocks htdocs/modules/system/images htdocs/modules/system/include htdocs/modules/system/language htdocs/modules/system/language/english htdocs/modules/system/language/english/admin htdocs/modules/system/templates htdocs/themes htdocs/themes/default htdocs/themes/phpkaox htdocs/themes/phpkaox/images htdocs/themes/x2t htdocs/uploads
Message-ID: <200511021834.jA2IYZmq023032@sheep.berlios.de>

Author: skalpa
Date: 2005-11-02 19:23:29 +0100 (Wed, 02 Nov 2005)
New Revision: 2

Added:
   XoopsCore/trunk/docs/
   XoopsCore/trunk/docs/changelog.txt
   XoopsCore/trunk/docs/images/
   XoopsCore/trunk/docs/images/install001.gif
   XoopsCore/trunk/docs/images/install002.gif
   XoopsCore/trunk/docs/images/install003.gif
   XoopsCore/trunk/docs/images/install004.gif
   XoopsCore/trunk/docs/images/install005.gif
   XoopsCore/trunk/docs/images/install006.gif
   XoopsCore/trunk/docs/images/install007.gif
   XoopsCore/trunk/docs/images/install008.gif
   XoopsCore/trunk/docs/images/install009.gif
   XoopsCore/trunk/docs/images/install010.gif
   XoopsCore/trunk/docs/images/install011.gif
   XoopsCore/trunk/docs/images/install024.gif
   XoopsCore/trunk/docs/install.html
   XoopsCore/trunk/docs/license.txt
   XoopsCore/trunk/htdocs/
   XoopsCore/trunk/htdocs/admin.php
   XoopsCore/trunk/htdocs/backend.php
   XoopsCore/trunk/htdocs/banners.php
   XoopsCore/trunk/htdocs/cache/
   XoopsCore/trunk/htdocs/class/
   XoopsCore/trunk/htdocs/class/class.tar.php
   XoopsCore/trunk/htdocs/class/class.zipfile.php
   XoopsCore/trunk/htdocs/class/commentrenderer.php
   XoopsCore/trunk/htdocs/class/criteria.php
   XoopsCore/trunk/htdocs/class/database/
   XoopsCore/trunk/htdocs/class/database/database.php
   XoopsCore/trunk/htdocs/class/database/databasefactory.php
   XoopsCore/trunk/htdocs/class/database/mysqldatabase.php
   XoopsCore/trunk/htdocs/class/database/sqlutility.php
   XoopsCore/trunk/htdocs/class/downloader.php
   XoopsCore/trunk/htdocs/class/errorhandler.php
   XoopsCore/trunk/htdocs/class/logger.php
   XoopsCore/trunk/htdocs/class/mail/
   XoopsCore/trunk/htdocs/class/mail/phpmailer/
   XoopsCore/trunk/htdocs/class/mail/phpmailer/LICENSE
   XoopsCore/trunk/htdocs/class/mail/phpmailer/README
   XoopsCore/trunk/htdocs/class/mail/phpmailer/class.phpmailer.php
   XoopsCore/trunk/htdocs/class/mail/phpmailer/class.smtp.php
   XoopsCore/trunk/htdocs/class/mail/xoopsmultimailer.php
   XoopsCore/trunk/htdocs/class/mimetypes.inc.php
   XoopsCore/trunk/htdocs/class/module.errorhandler.php
   XoopsCore/trunk/htdocs/class/module.textsanitizer.php
   XoopsCore/trunk/htdocs/class/pagenav.php
   XoopsCore/trunk/htdocs/class/smarty/
   XoopsCore/trunk/htdocs/class/smarty/Config_File.class.php
   XoopsCore/trunk/htdocs/class/smarty/Smarty.class.php
   XoopsCore/trunk/htdocs/class/smarty/Smarty_Compiler.class.php
   XoopsCore/trunk/htdocs/class/smarty/configs/
   XoopsCore/trunk/htdocs/class/smarty/configs/test.conf
   XoopsCore/trunk/htdocs/class/smarty/core/
   XoopsCore/trunk/htdocs/class/smarty/core/core.assemble_plugin_filepath.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.assign_smarty_interface.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.create_dir_structure.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.display_debug_console.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.get_include_path.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.get_microtime.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.get_php_resource.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.is_secure.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.is_trusted.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.load_plugins.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.load_resource_plugin.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.process_cached_inserts.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.process_compiled_include.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.read_cache_file.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.rm_auto.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.rmdir.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.run_insert_handler.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.smarty_include_php.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.write_cache_file.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.write_compiled_include.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.write_compiled_resource.php
   XoopsCore/trunk/htdocs/class/smarty/core/core.write_file.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/
   XoopsCore/trunk/htdocs/class/smarty/plugins/block.textformat.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/compiler.assign.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.assign.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.assign_debug_info.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.config_load.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.counter.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.cycle.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.debug.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.eval.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.fetch.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_checkboxes.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_image.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_options.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_radios.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_select_date.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_select_time.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_table.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.mailto.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.math.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.popup.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.popup_init.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/function.xoops_link.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.capitalize.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.cat.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_characters.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_paragraphs.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_sentences.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_words.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.date_format.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.debug_print_var.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.default.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.escape.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.indent.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.lower.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.nl2br.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.regex_replace.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.replace.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.spacify.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.string_format.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.strip.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.strip_tags.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.truncate.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.upper.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.wordwrap.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/outputfilter.trimwhitespace.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/resource.db.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/shared.escape_special_chars.php
   XoopsCore/trunk/htdocs/class/smarty/plugins/shared.make_timestamp.php
   XoopsCore/trunk/htdocs/class/snoopy.php
   XoopsCore/trunk/htdocs/class/tardownloader.php
   XoopsCore/trunk/htdocs/class/template.php
   XoopsCore/trunk/htdocs/class/tree.php
   XoopsCore/trunk/htdocs/class/uploader.php
   XoopsCore/trunk/htdocs/class/xml/
   XoopsCore/trunk/htdocs/class/xml/rpc/
   XoopsCore/trunk/htdocs/class/xml/rpc/bloggerapi.php
   XoopsCore/trunk/htdocs/class/xml/rpc/metaweblogapi.php
   XoopsCore/trunk/htdocs/class/xml/rpc/movabletypeapi.php
   XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpcapi.php
   XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpcparser.php
   XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpctag.php
   XoopsCore/trunk/htdocs/class/xml/rpc/xoopsapi.php
   XoopsCore/trunk/htdocs/class/xml/rss/
   XoopsCore/trunk/htdocs/class/xml/rss/xmlrss2parser.php
   XoopsCore/trunk/htdocs/class/xml/saxparser.php
   XoopsCore/trunk/htdocs/class/xml/themesetparser.php
   XoopsCore/trunk/htdocs/class/xml/xmltaghandler.php
   XoopsCore/trunk/htdocs/class/xoopsblock.php
   XoopsCore/trunk/htdocs/class/xoopscomments.php
   XoopsCore/trunk/htdocs/class/xoopsform/
   XoopsCore/trunk/htdocs/class/xoopsform/form.php
   XoopsCore/trunk/htdocs/class/xoopsform/formbutton.php
   XoopsCore/trunk/htdocs/class/xoopsform/formcheckbox.php
   XoopsCore/trunk/htdocs/class/xoopsform/formdatetime.php
   XoopsCore/trunk/htdocs/class/xoopsform/formdhtmltextarea.php
   XoopsCore/trunk/htdocs/class/xoopsform/formelement.php
   XoopsCore/trunk/htdocs/class/xoopsform/formelementtray.php
   XoopsCore/trunk/htdocs/class/xoopsform/formfile.php
   XoopsCore/trunk/htdocs/class/xoopsform/formhidden.php
   XoopsCore/trunk/htdocs/class/xoopsform/formhiddentoken.php
   XoopsCore/trunk/htdocs/class/xoopsform/formlabel.php
   XoopsCore/trunk/htdocs/class/xoopsform/formpassword.php
   XoopsCore/trunk/htdocs/class/xoopsform/formradio.php
   XoopsCore/trunk/htdocs/class/xoopsform/formradioyn.php
   XoopsCore/trunk/htdocs/class/xoopsform/formselect.php
   XoopsCore/trunk/htdocs/class/xoopsform/formselectcountry.php
   XoopsCore/trunk/htdocs/class/xoopsform/formselectgroup.php
   XoopsCore/trunk/htdocs/class/xoopsform/formselectlang.php
   XoopsCore/trunk/htdocs/class/xoopsform/formselectmatchoption.php
   XoopsCore/trunk/htdocs/class/xoopsform/formselecttheme.php
   XoopsCore/trunk/htdocs/class/xoopsform/formselecttimezone.php
   XoopsCore/trunk/htdocs/class/xoopsform/formselectuser.php
   XoopsCore/trunk/htdocs/class/xoopsform/formtext.php
   XoopsCore/trunk/htdocs/class/xoopsform/formtextarea.php
   XoopsCore/trunk/htdocs/class/xoopsform/formtextdateselect.php
   XoopsCore/trunk/htdocs/class/xoopsform/grouppermform.php
   XoopsCore/trunk/htdocs/class/xoopsform/simpleform.php
   XoopsCore/trunk/htdocs/class/xoopsform/tableform.php
   XoopsCore/trunk/htdocs/class/xoopsform/themeform.php
   XoopsCore/trunk/htdocs/class/xoopsformloader.php
   XoopsCore/trunk/htdocs/class/xoopslists.php
   XoopsCore/trunk/htdocs/class/xoopsmailer.php
   XoopsCore/trunk/htdocs/class/xoopsmodule.php
   XoopsCore/trunk/htdocs/class/xoopsobject.php
   XoopsCore/trunk/htdocs/class/xoopssecurity.php
   XoopsCore/trunk/htdocs/class/xoopsstory.php
   XoopsCore/trunk/htdocs/class/xoopstopic.php
   XoopsCore/trunk/htdocs/class/xoopstree.php
   XoopsCore/trunk/htdocs/class/xoopsuser.php
   XoopsCore/trunk/htdocs/class/zipdownloader.php
   XoopsCore/trunk/htdocs/edituser.php
   XoopsCore/trunk/htdocs/extras/
   XoopsCore/trunk/htdocs/extras/login.php
   XoopsCore/trunk/htdocs/extras/theme_x2t/
   XoopsCore/trunk/htdocs/extras/theme_x2t/doc/
   XoopsCore/trunk/htdocs/extras/theme_x2t/doc/readme.htm
   XoopsCore/trunk/htdocs/extras/theme_x2t/extras/
   XoopsCore/trunk/htdocs/extras/theme_x2t/x2t.tar.gz
   XoopsCore/trunk/htdocs/favicon.ico
   XoopsCore/trunk/htdocs/footer.php
   XoopsCore/trunk/htdocs/header.php
   XoopsCore/trunk/htdocs/image.php
   XoopsCore/trunk/htdocs/imagemanager.php
   XoopsCore/trunk/htdocs/images/
   XoopsCore/trunk/htdocs/images/aligncenter.gif
   XoopsCore/trunk/htdocs/images/alignleft.gif
   XoopsCore/trunk/htdocs/images/alignright.gif
   XoopsCore/trunk/htdocs/images/await.gif
   XoopsCore/trunk/htdocs/images/banners/
   XoopsCore/trunk/htdocs/images/banners/banner.swf
   XoopsCore/trunk/htdocs/images/banners/xoops_banner.gif
   XoopsCore/trunk/htdocs/images/banners/xoops_banner_2.gif
   XoopsCore/trunk/htdocs/images/blank.gif
   XoopsCore/trunk/htdocs/images/bold.gif
   XoopsCore/trunk/htdocs/images/code.gif
   XoopsCore/trunk/htdocs/images/download.gif
   XoopsCore/trunk/htdocs/images/email.gif
   XoopsCore/trunk/htdocs/images/icons/
   XoopsCore/trunk/htdocs/images/icons/aim.gif
   XoopsCore/trunk/htdocs/images/icons/delete.gif
   XoopsCore/trunk/htdocs/images/icons/edit.gif
   XoopsCore/trunk/htdocs/images/icons/em_small.gif
   XoopsCore/trunk/htdocs/images/icons/email.gif
   XoopsCore/trunk/htdocs/images/icons/icq_add.gif
   XoopsCore/trunk/htdocs/images/icons/ip.gif
   XoopsCore/trunk/htdocs/images/icons/msnm.gif
   XoopsCore/trunk/htdocs/images/icons/no_posticon.gif
   XoopsCore/trunk/htdocs/images/icons/pm.gif
   XoopsCore/trunk/htdocs/images/icons/pm_small.gif
   XoopsCore/trunk/htdocs/images/icons/posticon.gif
   XoopsCore/trunk/htdocs/images/icons/posticon2.gif
   XoopsCore/trunk/htdocs/images/icons/profile.gif
   XoopsCore/trunk/htdocs/images/icons/reply.gif
   XoopsCore/trunk/htdocs/images/icons/www.gif
   XoopsCore/trunk/htdocs/images/icons/yim.gif
   XoopsCore/trunk/htdocs/images/image.gif
   XoopsCore/trunk/htdocs/images/imgsrc.gif
   XoopsCore/trunk/htdocs/images/italic.gif
   XoopsCore/trunk/htdocs/images/linethrough.gif
   XoopsCore/trunk/htdocs/images/logo.gif
   XoopsCore/trunk/htdocs/images/pagact.gif
   XoopsCore/trunk/htdocs/images/paginact.gif
   XoopsCore/trunk/htdocs/images/pagneutral.gif
   XoopsCore/trunk/htdocs/images/pointer.gif
   XoopsCore/trunk/htdocs/images/poweredby.gif
   XoopsCore/trunk/htdocs/images/quote.gif
   XoopsCore/trunk/htdocs/images/read.gif
   XoopsCore/trunk/htdocs/images/s_poweredby.gif
   XoopsCore/trunk/htdocs/images/subject/
   XoopsCore/trunk/htdocs/images/subject/icon1.gif
   XoopsCore/trunk/htdocs/images/subject/icon2.gif
   XoopsCore/trunk/htdocs/images/subject/icon3.gif
   XoopsCore/trunk/htdocs/images/subject/icon4.gif
   XoopsCore/trunk/htdocs/images/subject/icon5.gif
   XoopsCore/trunk/htdocs/images/subject/icon6.gif
   XoopsCore/trunk/htdocs/images/subject/icon7.gif
   XoopsCore/trunk/htdocs/images/underline.gif
   XoopsCore/trunk/htdocs/images/url.gif
   XoopsCore/trunk/htdocs/include/
   XoopsCore/trunk/htdocs/include/calendarjs.php
   XoopsCore/trunk/htdocs/include/checklogin.php
   XoopsCore/trunk/htdocs/include/comment_constants.php
   XoopsCore/trunk/htdocs/include/comment_delete.php
   XoopsCore/trunk/htdocs/include/comment_edit.php
   XoopsCore/trunk/htdocs/include/comment_form.php
   XoopsCore/trunk/htdocs/include/comment_new.php
   XoopsCore/trunk/htdocs/include/comment_post.php
   XoopsCore/trunk/htdocs/include/comment_reply.php
   XoopsCore/trunk/htdocs/include/comment_view.php
   XoopsCore/trunk/htdocs/include/commentform.inc.php
   XoopsCore/trunk/htdocs/include/common.php
   XoopsCore/trunk/htdocs/include/cp_functions.php
   XoopsCore/trunk/htdocs/include/cp_header.php
   XoopsCore/trunk/htdocs/include/functions.php
   XoopsCore/trunk/htdocs/include/notification_constants.php
   XoopsCore/trunk/htdocs/include/notification_functions.php
   XoopsCore/trunk/htdocs/include/notification_select.php
   XoopsCore/trunk/htdocs/include/notification_update.php
   XoopsCore/trunk/htdocs/include/old_functions.php
   XoopsCore/trunk/htdocs/include/old_theme_functions.php
   XoopsCore/trunk/htdocs/include/registerform.php
   XoopsCore/trunk/htdocs/include/searchform.php
   XoopsCore/trunk/htdocs/include/version.php
   XoopsCore/trunk/htdocs/include/xoopscodes.php
   XoopsCore/trunk/htdocs/index.php
   XoopsCore/trunk/htdocs/install/
   XoopsCore/trunk/htdocs/install/class/
   XoopsCore/trunk/htdocs/install/class/cachemanager.php
   XoopsCore/trunk/htdocs/install/class/dbmanager.php
   XoopsCore/trunk/htdocs/install/class/mainfilemanager.php
   XoopsCore/trunk/htdocs/install/class/settingmanager.php
   XoopsCore/trunk/htdocs/install/class/textsanitizer.php
   XoopsCore/trunk/htdocs/install/img/
   XoopsCore/trunk/htdocs/install/img/bg_content_left.gif
   XoopsCore/trunk/htdocs/install/img/bg_content_right.gif
   XoopsCore/trunk/htdocs/install/img/bg_darkblue.gif
   XoopsCore/trunk/htdocs/install/img/bg_table.gif
   XoopsCore/trunk/htdocs/install/img/dummy.gif
   XoopsCore/trunk/htdocs/install/img/hbar_installer_right.gif
   XoopsCore/trunk/htdocs/install/img/hbar_left.gif
   XoopsCore/trunk/htdocs/install/img/hbar_middle.gif
   XoopsCore/trunk/htdocs/install/img/hbar_right.gif
   XoopsCore/trunk/htdocs/install/img/logo.gif
   XoopsCore/trunk/htdocs/install/img/no.gif
   XoopsCore/trunk/htdocs/install/img/xoops2.gif
   XoopsCore/trunk/htdocs/install/img/yes.gif
   XoopsCore/trunk/htdocs/install/index.php
   XoopsCore/trunk/htdocs/install/install_tpl.php
   XoopsCore/trunk/htdocs/install/language/
   XoopsCore/trunk/htdocs/install/language/english/
   XoopsCore/trunk/htdocs/install/language/english/finish.php
   XoopsCore/trunk/htdocs/install/language/english/install.php
   XoopsCore/trunk/htdocs/install/language/english/install2.php
   XoopsCore/trunk/htdocs/install/language/english/welcome.php
   XoopsCore/trunk/htdocs/install/makedata.php
   XoopsCore/trunk/htdocs/install/passwd.php
   XoopsCore/trunk/htdocs/install/sql/
   XoopsCore/trunk/htdocs/install/sql/upgrade/
   XoopsCore/trunk/htdocs/kernel/
   XoopsCore/trunk/htdocs/kernel/avatar.php
   XoopsCore/trunk/htdocs/kernel/block.php
   XoopsCore/trunk/htdocs/kernel/comment.php
   XoopsCore/trunk/htdocs/kernel/config.php
   XoopsCore/trunk/htdocs/kernel/configcategory.php
   XoopsCore/trunk/htdocs/kernel/configitem.php
   XoopsCore/trunk/htdocs/kernel/configoption.php
   XoopsCore/trunk/htdocs/kernel/group.php
   XoopsCore/trunk/htdocs/kernel/groupperm.php
   XoopsCore/trunk/htdocs/kernel/handlerregistry.php
   XoopsCore/trunk/htdocs/kernel/image.php
   XoopsCore/trunk/htdocs/kernel/imagecategory.php
   XoopsCore/trunk/htdocs/kernel/imageset.php
   XoopsCore/trunk/htdocs/kernel/imagesetimg.php
   XoopsCore/trunk/htdocs/kernel/member.php
   XoopsCore/trunk/htdocs/kernel/module.php
   XoopsCore/trunk/htdocs/kernel/notification.php
   XoopsCore/trunk/htdocs/kernel/object.php
   XoopsCore/trunk/htdocs/kernel/online.php
   XoopsCore/trunk/htdocs/kernel/privmessage.php
   XoopsCore/trunk/htdocs/kernel/session.php
   XoopsCore/trunk/htdocs/kernel/tplfile.php
   XoopsCore/trunk/htdocs/kernel/tplset.php
   XoopsCore/trunk/htdocs/kernel/user.php
   XoopsCore/trunk/htdocs/language/
   XoopsCore/trunk/htdocs/language/english/
   XoopsCore/trunk/htdocs/language/english/admin.php
   XoopsCore/trunk/htdocs/language/english/calendar.php
   XoopsCore/trunk/htdocs/language/english/comment.php
   XoopsCore/trunk/htdocs/language/english/global.php
   XoopsCore/trunk/htdocs/language/english/mail.php
   XoopsCore/trunk/htdocs/language/english/mail_template/
   XoopsCore/trunk/htdocs/language/english/misc.php
   XoopsCore/trunk/htdocs/language/english/notification.php
   XoopsCore/trunk/htdocs/language/english/pmsg.php
   XoopsCore/trunk/htdocs/language/english/search.php
   XoopsCore/trunk/htdocs/language/english/timezone.php
   XoopsCore/trunk/htdocs/language/english/user.php
   XoopsCore/trunk/htdocs/lostpass.php
   XoopsCore/trunk/htdocs/mainfile.dist.php
   XoopsCore/trunk/htdocs/mainfile.php
   XoopsCore/trunk/htdocs/misc.php
   XoopsCore/trunk/htdocs/modules/
   XoopsCore/trunk/htdocs/modules/system/
   XoopsCore/trunk/htdocs/modules/system/admin.php
   XoopsCore/trunk/htdocs/modules/system/admin/
   XoopsCore/trunk/htdocs/modules/system/admin/avatars/
   XoopsCore/trunk/htdocs/modules/system/admin/avatars/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/avatars/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/banners/
   XoopsCore/trunk/htdocs/modules/system/admin/banners/banners.php
   XoopsCore/trunk/htdocs/modules/system/admin/banners/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/banners/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/
   XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/blockform.php
   XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/blocksadmin.php
   XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/comments/
   XoopsCore/trunk/htdocs/modules/system/admin/comments/admin_header.php
   XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_delete.php
   XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_edit.php
   XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_post.php
   XoopsCore/trunk/htdocs/modules/system/admin/comments/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/comments/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/findusers/
   XoopsCore/trunk/htdocs/modules/system/admin/findusers/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/findusers/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/groupperm.php
   XoopsCore/trunk/htdocs/modules/system/admin/groups/
   XoopsCore/trunk/htdocs/modules/system/admin/groups/groupform.php
   XoopsCore/trunk/htdocs/modules/system/admin/groups/groups.php
   XoopsCore/trunk/htdocs/modules/system/admin/groups/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/groups/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/images/
   XoopsCore/trunk/htdocs/modules/system/admin/images/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/images/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/mailusers/
   XoopsCore/trunk/htdocs/modules/system/admin/mailusers/mailform.php
   XoopsCore/trunk/htdocs/modules/system/admin/mailusers/mailusers.php
   XoopsCore/trunk/htdocs/modules/system/admin/mailusers/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/mailusers/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/
   XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/modulesadmin.php
   XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/preferences/
   XoopsCore/trunk/htdocs/modules/system/admin/preferences/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/preferences/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/smilies/
   XoopsCore/trunk/htdocs/modules/system/admin/smilies/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/smilies/smileform.php
   XoopsCore/trunk/htdocs/modules/system/admin/smilies/smilies.php
   XoopsCore/trunk/htdocs/modules/system/admin/smilies/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/tplsets/
   XoopsCore/trunk/htdocs/modules/system/admin/tplsets/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/tplsets/themeimgform.php
   XoopsCore/trunk/htdocs/modules/system/admin/tplsets/tplform.php
   XoopsCore/trunk/htdocs/modules/system/admin/tplsets/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/userrank/
   XoopsCore/trunk/htdocs/modules/system/admin/userrank/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/userrank/rankform.php
   XoopsCore/trunk/htdocs/modules/system/admin/userrank/userrank.php
   XoopsCore/trunk/htdocs/modules/system/admin/userrank/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/users/
   XoopsCore/trunk/htdocs/modules/system/admin/users/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/users/userform.php
   XoopsCore/trunk/htdocs/modules/system/admin/users/users.php
   XoopsCore/trunk/htdocs/modules/system/admin/users/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/admin/version/
   XoopsCore/trunk/htdocs/modules/system/admin/version/main.php
   XoopsCore/trunk/htdocs/modules/system/admin/version/s_poweredby.gif
   XoopsCore/trunk/htdocs/modules/system/admin/version/xoops_version.php
   XoopsCore/trunk/htdocs/modules/system/blocks/
   XoopsCore/trunk/htdocs/modules/system/blocks/system_blocks.php
   XoopsCore/trunk/htdocs/modules/system/constants.php
   XoopsCore/trunk/htdocs/modules/system/images/
   XoopsCore/trunk/htdocs/modules/system/images/bg_content.gif
   XoopsCore/trunk/htdocs/modules/system/images/bg_menu.gif
   XoopsCore/trunk/htdocs/modules/system/images/check.gif
   XoopsCore/trunk/htdocs/modules/system/images/hbar_left.gif
   XoopsCore/trunk/htdocs/modules/system/images/hbar_middle.gif
   XoopsCore/trunk/htdocs/modules/system/images/hbar_right.gif
   XoopsCore/trunk/htdocs/modules/system/images/info.gif
   XoopsCore/trunk/htdocs/modules/system/images/install.gif
   XoopsCore/trunk/htdocs/modules/system/images/logo.gif
   XoopsCore/trunk/htdocs/modules/system/images/menu.gif
   XoopsCore/trunk/htdocs/modules/system/images/powered_by_xoops.gif
   XoopsCore/trunk/htdocs/modules/system/images/system_slogo.png
   XoopsCore/trunk/htdocs/modules/system/images/uninstall.gif
   XoopsCore/trunk/htdocs/modules/system/images/update.gif
   XoopsCore/trunk/htdocs/modules/system/images/xoops2.gif
   XoopsCore/trunk/htdocs/modules/system/include/
   XoopsCore/trunk/htdocs/modules/system/include/update.php
   XoopsCore/trunk/htdocs/modules/system/language/
   XoopsCore/trunk/htdocs/modules/system/language/english/
   XoopsCore/trunk/htdocs/modules/system/language/english/admin.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/avatars.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/banners.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/blocksadmin.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/comments.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/findusers.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/groups.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/images.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/mailusers.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/modulesadmin.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/preferences.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/smilies.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/tplsets.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/userrank.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/users.php
   XoopsCore/trunk/htdocs/modules/system/language/english/admin/version.php
   XoopsCore/trunk/htdocs/modules/system/language/english/blocks.php
   XoopsCore/trunk/htdocs/modules/system/language/english/modinfo.php
   XoopsCore/trunk/htdocs/modules/system/menu.php
   XoopsCore/trunk/htdocs/modules/system/templates/
   XoopsCore/trunk/htdocs/modules/system/templates/blocks/
   XoopsCore/trunk/htdocs/modules/system/xoops_version.php
   XoopsCore/trunk/htdocs/notifications.php
   XoopsCore/trunk/htdocs/pda.php
   XoopsCore/trunk/htdocs/pmlite.php
   XoopsCore/trunk/htdocs/readpmsg.php
   XoopsCore/trunk/htdocs/register.php
   XoopsCore/trunk/htdocs/search.php
   XoopsCore/trunk/htdocs/templates_c/
   XoopsCore/trunk/htdocs/themes/
   XoopsCore/trunk/htdocs/themes/default/
   XoopsCore/trunk/htdocs/themes/default/hbar.gif
   XoopsCore/trunk/htdocs/themes/default/logo.gif
   XoopsCore/trunk/htdocs/themes/default/poweredby.gif
   XoopsCore/trunk/htdocs/themes/phpkaox/
   XoopsCore/trunk/htdocs/themes/phpkaox/images/
   XoopsCore/trunk/htdocs/themes/phpkaox/images/leftbar.gif
   XoopsCore/trunk/htdocs/themes/phpkaox/images/logo.gif
   XoopsCore/trunk/htdocs/themes/phpkaox/images/mainbar.gif
   XoopsCore/trunk/htdocs/themes/phpkaox/images/rightbar.gif
   XoopsCore/trunk/htdocs/themes/x2t/
   XoopsCore/trunk/htdocs/themes/x2t/_cellpic_cat.gif
   XoopsCore/trunk/htdocs/themes/x2t/_foot_bg.gif
   XoopsCore/trunk/htdocs/themes/x2t/_foot_left.gif
   XoopsCore/trunk/htdocs/themes/x2t/_foot_right.gif
   XoopsCore/trunk/htdocs/themes/x2t/_toprow_bg.gif
   XoopsCore/trunk/htdocs/themes/x2t/_toprow_left.gif
   XoopsCore/trunk/htdocs/themes/x2t/_toprow_right.gif
   XoopsCore/trunk/htdocs/themes/x2t/avatar.gif
   XoopsCore/trunk/htdocs/themes/x2t/bg_left.gif
   XoopsCore/trunk/htdocs/themes/x2t/bg_left_blocktitle.gif
   XoopsCore/trunk/htdocs/themes/x2t/bg_right.gif
   XoopsCore/trunk/htdocs/themes/x2t/bg_right2.gif
   XoopsCore/trunk/htdocs/themes/x2t/bg_right_blocktitle.gif
   XoopsCore/trunk/htdocs/themes/x2t/bookopen.gif
   XoopsCore/trunk/htdocs/themes/x2t/center_bg.gif
   XoopsCore/trunk/htdocs/themes/x2t/center_left.gif
   XoopsCore/trunk/htdocs/themes/x2t/center_right.gif
   XoopsCore/trunk/htdocs/themes/x2t/deleteuser.gif
   XoopsCore/trunk/htdocs/themes/x2t/dots.gif
   XoopsCore/trunk/htdocs/themes/x2t/down.gif
   XoopsCore/trunk/htdocs/themes/x2t/dummy.gif
   XoopsCore/trunk/htdocs/themes/x2t/edityp.gif
   XoopsCore/trunk/htdocs/themes/x2t/folder.gif
   XoopsCore/trunk/htdocs/themes/x2t/hbar_bg.gif
   XoopsCore/trunk/htdocs/themes/x2t/hbar_left.gif
   XoopsCore/trunk/htdocs/themes/x2t/hbar_middle.gif
   XoopsCore/trunk/htdocs/themes/x2t/hbar_right.gif
   XoopsCore/trunk/htdocs/themes/x2t/inputbg.gif
   XoopsCore/trunk/htdocs/themes/x2t/klipper.gif
   XoopsCore/trunk/htdocs/themes/x2t/logo.gif
   XoopsCore/trunk/htdocs/themes/x2t/logout.gif
   XoopsCore/trunk/htdocs/themes/x2t/lostpass.gif
   XoopsCore/trunk/htdocs/themes/x2t/mainmenu_admin.gif
   XoopsCore/trunk/htdocs/themes/x2t/mainmenu_close.gif
   XoopsCore/trunk/htdocs/themes/x2t/mainmenu_home.gif
   XoopsCore/trunk/htdocs/themes/x2t/menu_arrow_norm.gif
   XoopsCore/trunk/htdocs/themes/x2t/online_guests.gif
   XoopsCore/trunk/htdocs/themes/x2t/online_members.gif
   XoopsCore/trunk/htdocs/themes/x2t/page.gif
   XoopsCore/trunk/htdocs/themes/x2t/pm.gif
   XoopsCore/trunk/htdocs/themes/x2t/searchButton.gif
   XoopsCore/trunk/htdocs/themes/x2t/submenu_box_norm.gif
   XoopsCore/trunk/htdocs/themes/x2t/up.gif
   XoopsCore/trunk/htdocs/themes/x2t/user_admin.gif
   XoopsCore/trunk/htdocs/themes/x2t/user_editaccount.gif
   XoopsCore/trunk/htdocs/themes/x2t/user_inbox.gif
   XoopsCore/trunk/htdocs/themes/x2t/user_logout.gif
   XoopsCore/trunk/htdocs/themes/x2t/user_notifications.gif
   XoopsCore/trunk/htdocs/uploads/
   XoopsCore/trunk/htdocs/uploads/blank.gif
   XoopsCore/trunk/htdocs/uploads/rank3dbf8e94a6f72.gif
   XoopsCore/trunk/htdocs/uploads/rank3dbf8e9e7d88d.gif
   XoopsCore/trunk/htdocs/uploads/rank3dbf8ea81e642.gif
   XoopsCore/trunk/htdocs/uploads/rank3dbf8eb1a72e7.gif
   XoopsCore/trunk/htdocs/uploads/rank3dbf8edf15093.gif
   XoopsCore/trunk/htdocs/uploads/rank3dbf8ee8681cd.gif
   XoopsCore/trunk/htdocs/uploads/rank3e632f95e81ca.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4bf386b36.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4d4e4c4f2.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4d6422f04.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4d75edb5e.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4d8676346.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4d99c6eaa.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4daabd491.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4dbc14f3f.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4dcd7b9f4.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4ddd6835f.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4df1944ee.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4e02c5440.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4e1748cc9.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4e29bbcc7.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4e398ff7b.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4e4c2e742.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4e5e7563a.gif
   XoopsCore/trunk/htdocs/uploads/smil3dbd4e7853679.gif
   XoopsCore/trunk/htdocs/user.php
   XoopsCore/trunk/htdocs/userinfo.php
   XoopsCore/trunk/htdocs/viewpmsg.php
   XoopsCore/trunk/htdocs/xmlrpc.php
Log:
Importing 2.0.13.2 into the XoopsCore trunk

Added: XoopsCore/trunk/docs/changelog.txt
===================================================================
--- XoopsCore/trunk/docs/changelog.txt	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/docs/changelog.txt	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,398 @@
+XOOPS v2.0.x Changelog
+============================
+2005/10/28: Version 2.0.13.2
+============================
+- SECURITY: Fix to prevent mail headers injection (Skalpa/XOOPS Cube)
+- SECURITY: Fix to prevent endless loop in PHPMailer (Skalpa/Minahito)
+- SECURITY: Fix to prevent XSS in the textsanitizer (Skalpa/XOOPS Cube)
+- SECURITY: Fix to prevent XSS in newbb and the comments system (Skalpa/Keigo Yamazaki of Little eArth Corporation Co., Ltd.)
+- SECURITY: Vaporfix to prevent uploading of invalid images (Skalpa/XOOPS Cube)
+
+============================
+2005/08/15: Version 2.0.13.1
+============================
+- Fixed server path disclosure issues on systems with error_reporting enabled (Mithrandir/ajaxbr,Dave_l)
+
+============================
+2005/07/02: Version 2.0.13
+============================
+- Fixed security hole in XML-RPC for both magic_quotes_gpc on and off (Mithrandir/James at Gulftech, Onokazu)
+- Fixed sanitation in Criteria class for both magic_quotes_gcp on and off (Mithrandir/Onokazu)
+- Fixed sanitation bug in include/checklogin.php (Mithrandir)
+
+============================
+2005/06/29: Version 2.0.12a
+============================
+- Fixed bug in comments, where editing a comment would post a new one
+- Removed PHP parsing in Saxparser's handleProcessingInstruction() method (Thanks to GIJOE)
+- Fixed parse error in modules/newbb/post.php
+
+============================
+2005/06/28: Version 2.0.12
+============================
+- Fixed sanitation bug in include/comment_form.php and include/comment_post.php (Mithrandir/James at Gulftech)
+- Fixed sanitation bug in class/xml/rpc/xmlrpcapi.php and class/criteria.php (Mithrandir/James at Gulftech/XOOPS JP)
+- Changed admin.php to fetch news from xoops.org via Snoopy (Mithrandir/XOOPS JP)
+- Fixed possible XSS hole in redirect_header (Mithrandir/XOOPS JP)
+- Security fixes in pda.php and misc.php (Mithrandir/XOOPS JP)
+- Fixed typos in kernel/object.php (Mithrandir/brandycoke)
+
+============================
+2005/06/24: Version 2.0.11
+============================
+- Fixed bug where lostpass.php would not accept emails and send new password (Ackbarr)
+- Fixed bug where search result links would be wrong if the item was in another module than the searched one (Ackbarr)
+- Fixed bug in groups admin where it was impossible to add users to a group if the site had 200+ users (Ackbarr)
+- Fixed bug with uploading smilies (Ackbarr)
+
+============================
+2005/04/23: Version 2.0.10
+============================
+- Fixed typo in newbb/post.php
+
+============================
+2005/04/03: Version 2.0.10 RC
+============================
+- Implemented new token system for validating form origination and increased protection against CSRF (Mithrandir/Onokazu)
+- Security fix to avoid the usage of fopen and unlink when previewing (Onokazu)
+- Fixed bug - Missing </a> in news/templates/blocks/news_block_bigstory.html (Mithrandir/blacKurd)
+- Fixed bug in header.php ? assign $xoops_lblocks (Mithrandir/phppp)
+- Fixed bug #1087786 Can"t assign to $this in PHP5 (Mithrandir)
+- Included 2.0.9.3 fixes in 2.0.10 patch for easy upgrade from 2.0.9.2 (Mithrandir/rowd)
+- Fixed bug #1157029 - Bug in include/checklogin.php (Onokazu/sudhaker)
+- Fixed bug #1060061 - renderValidationJS showing htmlentities instead of intended characters (Onokazu/theCat)
+
+2005/03/20: Version 2.0.9.3
+===============================
+- Security fix to prevent uploading of executable files (pokleyzz, GIJOE and the JP XOOPS community)
+
+2004/12/30: Version 2.0.9.2
+===============================
+- Security fix to prevent session hijacking (thanks goes to GIJOE and the JP XOOPS community)
+- Fixed duplicated blocks bug on module update
+- phpmailer back to the version included in 2.0.7.3, as it is more stable (onokazu)
+
+
+2004/12/25: Version 2.0.9
+===============================
+- Security fix in the newbb module for PHP version < 4.3.10 (GIJOE & onokazu)
+- Security fix in the newbb module to prevent XSS attacks (minahito)
+- Fixed various problems related to XoopsUser::isAdmin() and $xoops_isadmin patch in 2.0.7.1 (bugs #1014203/#1014403) (onokazu)
+- Fixed incorrect parameters being passed to CriteriaCompo in modulesadmin.php (onokazu)
+- Fixed incorrect parameters being passed to XoopsXmlRpcStruct::add() in BloggerApi::getUserInfo() (onokazu)
+- Fixed Bug #1023022 - XoopsFormDhtmlTextArea and array_push() error (Mithrandir)
+- Fixed Bug #1013989 - Inbox title shoud be plural "Private Messages" (Mithrandir)
+- Fixed Bug #1004998 - readpmsg.php typo:</th> html tag of subject is nothing (Mithrandir)
+- Fixed Bug #1035707 - Enable array type options in blocks (Mithrandir)
+- Fixed a typo in include/comment_form.php, patch #1041993 (Dave_l)
+- Fixed Bug #1044957 - xoopsmultimailer.php Username typo when SMTP-Auth (Mithrandir)
+- Fixed RFE #900348 - Sort user list alphabetically in System -> Groups. Also changed the way it fetches the users in the group so it fetches all of them with 2 queries instead of 1 + (1 per user in the group) (Mithrandir
+)
+- Added patch #1048384 - mysql_field_name and others, added (Mithrandir)
+- Fixed bug #1049017 - Blocks sharing a template are cached wrong (Mithrandir)
+- Added patch #1048382 - Module onUpdate function (Mithrandir)
+- Fixed bug #989462 - Handler object caching not working (Mithrandir)
+- Added RFE #900345 - View/Edit group membership in Admin -> System -> Edit User (Mithrandir)
+- Fixed Bug #1055901 - group.php(IN phrase is used ,query) (Mithrandir)
+- Fixed bug #1052403 - block update in module update (Mithrandir)
+- More fixes for register_globals off in the top 10 page of mylinks/mydownloads modules
+- Fixed a typo in modules/xoopsheadline/admin/index.php (onokazu)
+- Fixed bug where 2 headline forms were using the same form name/id, causing JS error (onokazu)
+- Fixed some html problems in mylinks/mydownloads admin page (onokazu)
+- Secured mainfile.dist.php from disclosing paths (Mithrandir)
+- Fixed bug #1073029 (onokazu)
+- Fixed bug #1073532 (onokazu)
+- Fixed bug #1080791 (onokazu)
+- Fixed lang phrase _NOT_ACTIVENOTIFICATIONS not being assing to template (onokazu)
+- Some PHP5 fixes (Mithrandir)
+- Updated Smarty to version 2.6.5
+- Updated PHPMailer to version 1.72
+ 
+
+2004/09/11: Version 2.0.7.3
+===============================
+!! SECURITY FIX !! fixed more bugs that allowed session hijacking under a certain circumstance (onokazu)
+
+
+2004/09/10: Version 2.0.7.2
+===============================
+!! SECURITY FIX !! fixed bugs that allowed session hijacking under a certain circumstance (onokazu)
+
+
+2004/08/21: Version 2.0.7.1
+===============================
+Fixed bug #1006511 about $xoops_isadmin misuse (skalpa/the jp.xoops.org community):
+- Changed XoopsUser::isAdmin() behavior to prevent problems with modules that misuse this function
+- Fixed permission checking in user profile page, to only show admin links to people who are supposed to see them
+- Fixed permission checking in the comments system, to only show admin links to people who are supposed to see them
+Fixed incorrect escaping of configuration values in 2.0.7 (skalpa)
+Changed db proxy class error message from "Action not allowed" to "Database update not allowed during a GET request" (skalpa)
+Fixed bug #964084: if comment title is long multi-byte character.last byte loss (Mithrandir/domifara)
+Fixed bug #977360: Wrong icon in comment bloc (Mithrandir/zoullou)
+Fixed bug #976534: modules incompatibilities in 2.0.7 (Mithrandir/gijoe_peak)
+Fixed bug #975803: Typo in class/pagenav.php (Mithrandir/Dave_l)
+Fixed bug #974655: slogan variable with Xoops 2.0.7 (Mithrandir/brashquido)
+Fixed bug #987171: typo in edituser.php (Mithrandir)
+Applied patch #928503: Search results for modules with granted permissions optimised (Mithrandir/malanciault)
+Applied patch #988715: cp_header.php language (Mithrandir/phppp)
+Fixed MyTextSanitizer PHP notices (Mithrandir)
+Fixed XoopsForm PHP Notices about an unset _extra property (Mithrandir)
+
+
+2004/06/14: Version 2.0.7
+===============================
+!! SECURITY FIX !! preventing code injection in media uploader (skalpa)
+!! SECURITY FIX !! preventing execution of external scripts in shared environments (skalpa/ackbarr)
+
+Fixed bug #963937: Typo in modules/system/admin/findusers/main.php (mithrandir/tom_g3x)
+Fixed typo in x2t theme css colteaser class definition (w4z004)
+Set formButton class to Xoops popups buttons (w4z004)
+Fixed bug #960970: Incorrect display of the graphical pagenav (w4z004)
+Modified the Word Censoring fix (#962025) for MySQL 4.x compat (skalpa + quick thx 2 hervet 4 help)
+Ensured page title and slogan are escaped for HTML (onokazu)
+Fixed bug #961565: Search form keywords not checked by JS (mithrandir/tom_g3x)
+Fixed bug #961118 in XoopsFormElementTray::getElements() (mithrandir/luckec)
+Fixed bug #961311: Incorrect definition of headers var in XoopsMailer class (mithrandir/tom_g3x)
+XoopsForm::assign() now indexes elements by name if possible (mithrandir/kerkness)
+Fixed bug #963197: xoopsHiddenText is hardcoded in formdhtmlarea (mithrandir/tom_g3x)
+Fixed bug #963301: XoopsMediaUploader checkMaxHeight() doesn't work (skalpa/onokazu)
+Fixed bug #963327: XoopsImageHandler delete() keeps rows in imagebody table (skalpa/tom_g3x)
+Fixed bug #962025: Word censoring can mess db config options up (skalpa/tom_g3x)
+Fixed bug #961313: XoopsMailer custom headers are duplicated (skalpa/tom_g3x)
+Fixed bug #960683: [code] wrong translation (skalpa/ryuji+gi_joe)
+Fixed snoopy bug due to language specific characters (onokazu)
+Fixed a bug preventing deletion of users from the admin user search results (onokazu)
+Fixed a bug preventing deletion of admin users (onokazu)
+Fixed bug #915976: module onInstall feature doesn't display module messages correctly (skalpa/feugy+dave_l)
+Fixed bug #898776: Xoops module resolution for www.host.com and host.com (wulff_dk)
+Fixed bug #906282: XoopsGroupPermForm::render() - throws Undefined variable (mithrandir)
+Fixed bug #946621: Comments system extra_param not working with register_globals off (mithrandir/gstarrett)
+Fixed bug #932200: Admin > Edit user shows wrong username :-(mithrandir)
+Fixed bug #936753: $xoops_module_header not in all themes (w4z004)
+Fixed bug #921930: SQL queries with leading whitespace don't work (mithrandir)
+Fixed bug #920480: xoops_substr always adds three dots (skalpa)
+Fixed bug #921448: Undefined variable in xoopscodes.php (skalpa/dave_l)
+Applied patch #953063: js Calendar first popup date bug fix (mithrandir/venezia)
+Applied patch #953060: xoopstree.php selbox - subcategories not ordered (mithrandir/venezia)
+Applied patch #928503: Only show search results for modules with granted permissions (mithrandir/malanciault)
+Fixed bug #922152 preventing notifications to work with some Windows configurations (skalpa/robekras)
+Fixed bug #930351 preventing XoopsThemeForm::insertBreak() to work
+Corrected the content of $xoopsRequestUri on IIS fixing bug #895984 (skalpa)
+
+
+2/6/2004: Version 2.0.6
+===============================
+- Removed calls to XoopsHandlerRegistry class (onokazu)
+- Fixed loop problem after retrieving a lost password (onokazu)
+- Changed all include() calls to include_once() for xoopscodes.php (onokazu)
+- Added routines to remove users from the online member list when a user is deleted (onokazu)
+- Added parameters to the Critreria class constructor to allow the use of DB functions in SQL criteria (skalpa)
+- Added fetchBoth() method to the XoopsDatabase class (skalpa)
+- Fixed typos in class/smarty/plugins/resource.db.php (skalpa)
+- Refactoring in /class/xoopsform/form.php (skalpa)
+- Added some methods to /class/xoopsform/formelement.php to allow the use of accesskey and class attributes in form element tags (skalpa)
+- Fixed extra HTML tags not being displayed when using the XoopsThemeForm::insertBreak() method (Catzwolf)
+- Changed the default HTTP method of the search form to GET (onokazu)
+- Fixed notification constants not being included during installation (onokazu)
+- Fixed session data not being properly escaped before inserting to the database (onokazu)
+- Some useful changes to the group permission form (onokazu)
+- Fixed the block cachetime selection being reset after preview (onokazu)
+- Fixed invalid regex patterns used for username filtering, also added fix to allow the safe use of multi-byte characters in username (contributed by GIJOE)
+- Fixed bug where some blocks were not being displayed in block admin page on certain occasions (onokazu)
+- Fixed the problem of system admin icon disappearing on certain occasions (onokazu)
+- Fixed the errorhandler class to check the current error_reporting level before handleing errors (onokazu)
+- Re-activated the errorhandler class (onokazu)
+- Updated class/Snoopy.php to the latest version, v1.01 (onokazu)
+- Fixed a typo in kernel/online.php (onokazu)
+- Added some useful functions to include/xoops.js (skalpa)
+- Fix for Opera in include/xoops.js (onokazu)
+- Fixed user bio and signature values causing corruption in the edit profile form on certain occasions (onokazu)
+- Fixed the module name being reset to the default value after module update (onokazu)
+- Fixed invalid regex patterns in xoopslists.php (onokazu)
+- Fixed a few issues with register_globals setting
+- Fix for the auto-login feature (not activated)
+- Fixed image categories not being displayed in the order set by admin (onokazu)- Fixed a typo in kernel/config.php (onokazu)
+- Fixed comments not being displayed in the order as requested (onokazu)
+- Fixed the mailer class not setting some header values (onokazu)
+- Fixed chmod problem in class/uploader.php
+- Fixed magic_quotes related problems in class/uploader.php
+- Fixed notification routines causing a fatal error while trying to notify non-existent users (onokazu)
+- Added fix to convert &amp; to & within mail messages (onokazu)
+- Fixed html special characters causing problem when submitting a new module name (onokazu)
+- Fixed javascript error in mailuser form (onokazu)
+- Fixed javascript error in calendar date select form
+- Added a new Smarty function <{xoops_link}> (skalpa)
+- Added check to prevent webmaster user/group from being removed completely (contributed by Ryuji)
+
+newbb
+- Security fix in modules/newbb/viewtopic.php (onokazu)
+- Security fix in modules/newbb/viewforum.php (onokazu)
+- Added register_globals related fix to topicmanager.php (onokazu)
+- Fixed topic moderation icons not being displayed for moderators in templates/newbb_thread.html (onokazu)
+- Fixed topic time not being displayed in recent posts block on certain occasions in blocks/newbb_new.php (onokazu)
+- Added fix to correctly navigate to the requested post even when the post is not on the first page of flat view (contrib by GIJOE in class/forumpost.php, viewtopic.php, viewforum.php)
+
+sections
+- Added missing global variable declarations to index.php (onokazu)
+
+mydownloads
+- Added register_globals related fix to modfile.php (onokazu)
+
+news
+- Added fix to always display published date in each article (onokazu)
+- Added missing ?> at the end of file in xoops_version.php (onokazu)
+- Some fixes in admin/index.php
+
+xoopspolls
+- Fixed color bar selections not working when creating/editing a new poll (onokazu)
+
+xoopsmembers
+- Fixed 'more than X posts' not working when set to 0 (onokazu)
+- Added a new language constant to language/english/main.php (Catzwolf)
+- Removed invalid HTML tags in templates/xoopsmembers_searchresults.html (Catzwolf)
+ 
+
+1/5/2004: Version 2.0.5.2
+===============================
+- Security fix in modules/mylinks/myheader.php
+- Security fix in modules/mylinks/visit.php
+- Security fix in modules/mylinks/admin/index.php
+
+
+11/22/2003: Version 2.0.5.1
+===============================
+- Added $option parameter to xoops_gethandler function (skalpa)
+- Security fix in banners.php (onokazu)
+- Security fix in modules/newss/include/forumform.inc.php (onokazu)
+- Security fix in include/common.php (onokazu)
+- Temporarily disabled XoopsErrorHandler class (onokazu)
+- Security fix in include/functions.php (onokazu)
+- Removed XoopsHandlerRegistry class (onokazu)
+- Added fix for preventing users entering infinite loop when recovering a lost password (onokazu)
+
+
+10/8/2003: Version 2.0.5
+===============================
+- Fixed template files not being updated even when the 'allow update from themes directory' option was enabled in preferences
+- Fixed RSS channel title being cutoff at special characters
+- Minor bug fix in pagenav.php
+- Fixed blocks disappearing from the block admin page on certain occasion
+- Additional fixes to work with register_globals off
+- Fixed problem with XoopsCode Img button not working on certain occasion
+- Added missing SQL query in kernel/avatar.php
+- Fixed problem with the newbb module where users could post without a thread title on certain occasion
+- Fixed problem in banner admin page where banner edit form not being displayed on certain occasion
+- Fixed group selection option in the blocks admin page not being selected on certain occasion
+- Fixed poll option textbox forms not displaying the correct values
+- Fixed show all link in user profile page not working in 2.0.5RC
+- Additional phrases in language/english/global.php(_NOTITLE), language/english/search.php(_SR_IGNOREDWORDS), install/language/english/install.php(_INSTALL_L128, _INSTALL_L200)
+- Added check in install/index.php to read $HTTP_ACCEPT_LANGUAGE on initial load
+
+
+9/30/2003: Version 2.0.5 RC
+===============================
+- Fixed email checking bug mentioned in http://www.xoops.org/modules/newbb/viewtopic.php?topic_id=12288&forum=2 (mvandam)
+- Fixed a number of bugs in blocks admin page (onokazu)
+- More usability fix in blocks admin page (onokazu)
+- Fixed forum topic links to correctly use the # feature in url (onokazu)
+- Fixed password checking bug mentioned in http://www.xoops.org/modules/newbb/viewtopic.php?topic_id=12301&post_id=49369&order=0&viewmode=flat&pid=49203&forum=21#forumpost49369
+- Fixed database connection error when creating database during install (onokazu)
+- Fixed mb_output_handler causing problems in backend.php/image.php/downloader (onokazu)
+- Fixed search feature to use GET requests for prev/next/showall links (onokazu)
+- Register_globals related fix in /include/comment_post.php (contrib by gstarrett)
+- Added $xoopsUserIsAdmin global variable (onokazu)
+- Added xoops_getLinkedUnameById function to /include/functions.php (Catzwolf)
+- Fixed invalid Smarty tags in /modules/system/templates/system_siteclosed.html, /modules/system/templates/system_redirect.html, /modules/system/templates/system_imagemanager2.html (onokazu)
+
+
+9/19/2003: Version 2.0.4
+===============================
+- XOOPS_CACHE_PATH, XOOPS_UPLOAD_PATH, XOOPS_THEME_PATH", XOOPS_COMPILE_PATH, XOOPS_THEME_URL, XOOPS_UPLOAD_URL are now set in include/common.php (onokazu)
+- Added [siteurl][/siteurl] tag to XoopsCode (mvandam)
+- Fixed a typo in class/uploader.php (onokazu)
+- Fixed some redirect problems after login (onokazu)
+- registre_globals fix in include/comment_view.php (onokazu)
+- Xoops.org news is disabled by default in the admin section (onokazu)
+- Added a new error handler class (class/errorhandler.php) (mvandam)
+- Fixed XoopsGroupPermHandler returning duplicate permissions (onokazu)
+- Fixed block-disappearing problem in blocks admin (onokazu)
+- Fixed typo in kernel/notification.php (mvandam)
+- Added XoopsGuestUser class in kernel/user.php (onokazu)
+- Fixed newbb module to correctly use the # feature in URL (onokazu)
+- Improved usability in blocks admin section
+- Reduced number of users to display in group/edituser page to max 200 users (onokazu)
+- Fixed bug where admins could add users with a existing username (onokazu)
+- Added files for module developers to easily add group permisson feature (modules/system/groupperm.php, class/xoopsform/groupperm.php) (onokazu)
+- Fixed typo in register.php (onokazu)
+
+
+6/17/2003: Version 2.0.3
+===============================
+- fixed CSS related bug in global search page
+- register_globals bug fix in comments
+- Smarty updated to 2.5.0
+- fixed typo in kernel/object.php
+- fixed group permission bug
+- fixed bug where image categories were deleted after group permission update
+- fixed bug where user votes could not be deleted in the mylinks module
+- fixed some language typos
+- changed XoopsGroupPermHandler::getItemIds to accept an array fot the second parameter (gperm_groupid), which was required in certain places..
+- removed avatar image files
+
+
+4/25/2003: Version 2.0.2
+===============================
+- security fix to prevent malicious cross site scripting attacks (onokazu)
+- fixed character encoding problem for some languages when using the mailer class (onokazu)
+- fixed some major bugs in the xoopsheadline module (onokazu)
+- fixed some cookie related problems in the forums module (mvandam)
+
+
+4/18/2003: Version 2.0.1
+===============================
+- fixed bug where notification feature could not be turned on
+- fixed character encoding problem for some languages when using the mailer class (onokazu)
+- fixed the theme selection block to work again
+- fixed typo in kernel/module.php
+- fixed incorrect table name in xoops_version.php of the new headline module
+- changed max limit size of some columns in the configoption table
+- fixed image manager bug when using db store method
+- xoops.org can now be disabled by adding nonews=1
+
+
+4/16/2003: Version 2.0.0
+===============================
+- xoopsheadlines module replaced with xoopsheadline module to fix character encoding problems
+- numerous bug fixes
+
+
+3/19/2003: Version 2.0.0 RC3
+===============================
+- a major change in the handling of theme files, the detail of which you can read in this [url=http://www.xoops.org/modules/news/article.php?storyid=677]article[/url] (onokazu)
+- a new global notification feature that can easily be incorporated into modules (that use Smarty) by only modifying xoops_version.php and template files (mvandam)
+- SMTP support using phpMailer (bunny)
+- group permission tables merged into one table (onokazu)
+- code refactoring
+
+
+2/9/2003: Version 2.0.0 RC2
+===============================
+A bug fix release..
+- avatar upload bug
+- themeset image upload bug
+- register_globals fix
+- recommend us block error
+- error message displayed upon submit of news article
+- page navigation bug in some modules
+- blank page bug on some servers
+- SQL displayed in blocks admin
+
+
+1/31/2003: Version 2.0.0 RC1
+===============================
+The first public release of 2.0 series.
+For new features that have been added from 1.3.x, please refer to 
+the articles listed below:
+http://www.xoops.org/modules/news/article.php?storyid=486
+http://www.xoops.org/modules/news/article.php?storyid=549
+http://www.xoops.org/modules/xoopsdocs/index.php?cat_id=6
\ No newline at end of file

Added: XoopsCore/trunk/docs/images/install001.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install001.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/images/install002.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install002.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/images/install003.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install003.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/images/install004.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install004.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/images/install005.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install005.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/images/install006.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install006.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/images/install007.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install007.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/images/install008.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install008.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/images/install009.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install009.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/images/install010.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install010.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/images/install011.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install011.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/images/install024.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/docs/images/install024.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/docs/install.html
===================================================================
--- XoopsCore/trunk/docs/install.html	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/docs/install.html	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,120 @@
+<html>
+<head>
+  <title>Xoops Install Guide</title>
+  <meta name="keywords" content="XOOPS docs" />
+  <meta name="description" content="XOOPS" />
+  <style>
+    P, TD, LI, INPUT, BODY, SELECT, TEXTAREA { font-family: Verdana; font-size: 13px; line-height: 1.3 }
+    .error { color: #CC3333; font-weight: bold; }
+    UL { margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; }
+    OL { margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; }
+    .indent { margin-left: 40px; }
+    FORM { margin: 0px; padding: 0px; }
+    
+    H1, H2, H3, H4, H5 { margin: 0px; padding: 0px; }
+    
+    .additions { color: #008800; }
+    .deletions { color: #880000; }
+    
+	.header { padding: 10px; padding-top: 0px }
+    .page { background-color: #FFFFFF; padding: 10px; border: 1px inset;}
+	.footer { background-color: #DDDDDD; padding: 5px 10px; border: 1px inset; border-top: none; border-top: 1px solid #CCCCCC }
+	.code { background: #FFFFFF; border: solid #888888 2px; font-family: "Courier New"; color: black; font-size: 10pt; width: 100%; height: 400px; overflow: scroll; padding: 3px; }
+
+    .revisioninfo { color: #AAAAAA; padding-bottom: 20px; }
+	
+	.copyright { font-size: 11px; color: #AAAAAA; text-align: right; }
+	.copyright A { color: #AAAAAA; }
+</style>
+</head>
+
+<body
+	bgcolor="#F8F8F8" text="#000000">
+
+<div class="page">
+<h3>Installing XOOPS</h3>
+<hr noshade size="1" />
+<br />
+<h4>First time installation</h4>
+<br />
+<h4>Preface:</h4>
+Before begining the install process, we (the XOOPS team) ask that you have a good understanding of how to install and support server/hosted based software.  As with anything in life, there's no easy answer or way.  Sinice XOOPS is server based, it's not as easy to install as normal desktop software which in itself can be daunting to install so, please be familiar with setting up and installing the software listed below.  Be familiar with how to configure CGI scripts and HTTP server software.  It can easily be demonstrated that 80% of our support questions wind up being improper configurations with the server componenets or two pieces of software conflict. No two servers are configured alike.<br />
+<br />
+<br />
+To install XOOPS for the first time, you'll need to have the minimum following server software pre-installed:<br />
+<div class="indent">* HTTP Server (<a href="http://www.apache.org">Apache</a> or IIS)  "Note, XOOPS only officially supports Apache"<br />
+* <a href="http://www.php.net">PHP</a> 4.1.0 and higher (4.1.1 or higher recommended)<br />
+* <a href="http://www.mysql.com">MySQL</a> Database 3.23.XX</div>
+<br />
+Before starting the install, be sure to have:<br />
+<div class="indent">* Setup the HTTP, PHP and database server properly.<br />
+* Create a database for your <a href="http://www.xoops.org">XOOPS 2</a> installation <br />
+<div class="indent">(Have your hosting company create one if you can't. The install script does provide this capability with the proper privileges).<br />
+</div>* A user account with the proper database permissions.<br />
+* The ability to set the following directories and files world writeable: uploads/, cache/ and templates_c/ and the file mainfile.php<br />
+* Turn cookie and <span class="missingpage">JavaScript</span><a href="http://wiki.xoops.org/wakka.php?wakka=JavaScript/edit">?</a> support in your browser on.</div>
+<br />
+<br />
+<h4>Installing locally</h4>
+If your running a local environment for development or testing, make sure that you have the previous requirements met.  Once this is done, copy the contents of the HTML directory (from the XOOPS 2 distribution file or CVS) to the root document path of your web environment. Once the files are copied there, you can start the install by typing <a href="http://yoursite.com">http://yoursite.com</a>.  This will start the install process.<br />
+<br />
+<h4>Installing on a hosted platform</h4>
+If your running in a hosted environment, unpack the XOOPS 2 files locally or on the server if you have telnet or SSH access. Once you done this, make sure to move or copy all XOOPS 2 files from the HTML directory to your root web directory (your provider usually provides this location with directions).  Once the files are copied there, you can start the install by typing <a href="http://yoursite.com">http://yoursite.com</a>.  This will start the install process.<br />
+<br />
+<h4>Continuing the install</h4>
+<img src="images/install001.gif" /><br />
+<br />
+After performing the above procedures, your ready to continue installing XOOPS 2 with the Install Wizard.  The first screen in the install Wizard takes you to will be the welcome screen. <br />
+<br />
+<img src="images/install002.gif" /><br />
+<br />
+Click the Next button to continue on to the next screen.  <br />
+<br />
+The next part of the install Wizard is designed to check your file and directory permissions. If your running in a <span class="missingpage">Win32</span><a href="http://wiki.xoops.org/wakka.php?wakka=Win32/edit">?</a> environment, this should be a pretty painless install.  If you running in a UNIX environment, the Wizard will display any problems and the corrective actions to take if there are problems.  <br />
+<br />
+<img src="images/install003.gif" /><br />
+<br />
+If all lights are green on the Wizard, click Next to continue. If not, please read the screen and perform the necessary actions recommended by the Wizard<br />
+<br />
+The next part of the Wizard is for writing the settings to the mainfile.php file. <br />
+<br />
+<img src="images/install004.gif" /><br />
+<br />
+The General Settings screen is self explanatory so, input the required information into the files and click next. <br />
+<br />
+The next four Wizard screens are informational displaying the settings from the General Settings screen for your confirmation and to show that the values were written correctly. <br />
+<br />
+<img src="images/install005.gif" /><br />
+<br />
+<img src="images/install006.gif" /><br />
+<br />
+<img src="images/install007.gif" /><br />
+<br />
+<img src="images/install008.gif" /><br />
+<br />
+If you seen any Red lights, please click the Back button to make the proper corrections.<br />
+<br />
+The next Wizard screen is will be to show the progress for accessing the database.<br />
+ <br />
+<img src="images/install009.gif" /><br />
+<br />
+If your in a hosted environment with out the proper access to create databases, please check with your provider for help in getting a database.  If your provider (or you) created the database, all  lights should be green.  If you get a red light stating the DB does not exist and your user name has the ability to create databases, then click next and the install Wizard will attempt to create the database for you.  If your user id does not have the rights to create a database, please correct this and continue the install.  The next two screens are informational on trying to create and access the database.  Click Next or Back depending on the Wizard screen.<br />
+<br />
+After clicking next a couple of times, you will come to an informational screen showing the results of table creation. If there is a problem, please refer to the <a href="http://wiki.xoops.org/wakka.php?wakka=Installation">FAQ</a> or <a href="http://www.xoops.org">XOOPS Forums</a> for further assistance. <br />
+<br />
+<img src="images/install011.gif" /><br />
+<br />
+ If all lights are green, your ready to proceed by clicking Next.<br />
+<br />
+The next Wizard screen is for inputting site administrative information. <br />
+<br />
+<img src="images/install024.gif" /><br />
+<br />
+Please be careful here and write down or remember your administrative password. You'll need this after the install to continue setting up your XOOPS 2 site.  Once you have completed inputting the correct information, click Next to continue.   * Note, try to refrain from using names with spaces for the Admin name. *<br />
+<br />
+The next screen is informational. If all the lights are green, click Next to continue.
+<br /><br />
+<h4>Congratulations!</h4>
+Your installation should now be complete.  You can check the site out by clicking the "HERE" text on the last screen. If all went well, then your new site should be up and running. If not, please refer to the <a href="http://www.xoops.org/modules/smartfaq">FAQ</a> or <a href="http://www.xoops.org">XOOPS Forums</a> for further assistance.</div>
+</body>
+</html>


Property changes on: XoopsCore/trunk/docs/install.html
___________________________________________________________________
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/docs/license.txt
===================================================================
--- XoopsCore/trunk/docs/license.txt	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/docs/license.txt	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,88 @@
+GNU GENERAL PUBLIC LICENSE Version 2, June 1991
+
+Copyright (C) 1989, 1991 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.
+
+Preamble
+
+The licenses for most software are designed to take away your freedom to share and change it.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users.  This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it.  (Some other Free Software Foundation software is covered by the GNU Library General Public License instead.)  You can apply it to your programs, too.
+
+When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.
+
+To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.
+
+For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.
+
+We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.
+
+Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software.  If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.
+
+Finally, any free program is threatened constantly by software patents.  We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary.  To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.
+
+The precise terms and conditions for copying, distribution and modification follow.
+
+GNU GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License.  The "Program", below, refers to any such program or work, and a "work based on the Program" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language.  (Hereinafter, translation is included without limitation in the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not covered by this License; they are outside its scope.  The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.
+
+1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.
+
+2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:
+
+a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change.
+
+b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.
+
+c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License.  (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works.  But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.
+
+3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:
+
+a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,
+
+b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,
+
+c) Accompany it with the information you received as to the offer to distribute corresponding source code.  (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for making modifications to it.  For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable.  However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.
+
+If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.
+
+4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License.  Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.
+
+5. You are not required to accept this License, since you have not signed it.  However, nothing else grants you permission to modify or distribute the Program or its derivative works.  These actions are prohibited by law if you do not accept this License.  Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.
+
+6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions.  You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.
+
+7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all.  For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.
+
+It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices.  Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.
+
+This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.
+
+8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded.  In such case, this License incorporates the limitation as if written in the body of this License.
+
+9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program specifies a version number of this License which applies to it and "any later version", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.
+
+10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission.  For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this.  Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.
+
+NO WARRANTY
+
+11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
+
+END OF TERMS AND CONDITIONS
+

Added: XoopsCore/trunk/htdocs/admin.php
===================================================================
--- XoopsCore/trunk/htdocs/admin.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/admin.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,171 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$xoopsOption['pagetype'] = "admin";
+include "mainfile.php";
+include XOOPS_ROOT_PATH."/include/cp_functions.php";
+/*********************************************************/
+/* Admin Authentication                                  */
+/*********************************************************/
+
+if ( $xoopsUser ) {
+	if ( !$xoopsUser->isAdmin(-1) ) {
+		redirect_header("index.php",2,_AD_NORIGHT);
+		exit();
+	}
+} else {
+	redirect_header("index.php",2,_AD_NORIGHT);
+	exit();
+}
+$op = "list";
+
+if ( !empty($_GET['op']) ) {
+	$op = $_GET['op'];
+}
+
+if ( !empty($_POST['op']) ) {
+	$op = $_POST['op'];
+}
+
+if (!file_exists(XOOPS_CACHE_PATH.'/adminmenu.php') && $op != 'generate') {
+	xoops_header();
+	xoops_confirm(array('op' => 'generate'), 'admin.php', _AD_PRESSGEN);
+	xoops_footer();
+	exit();
+}
+
+switch ($op) {
+case "list":
+	xoops_cp_header();
+	// ###### Output warn messages for security ######
+	if (is_dir(XOOPS_ROOT_PATH."/install/" )) {
+		xoops_error(sprintf(_WARNINSTALL2,XOOPS_ROOT_PATH.'/install/'));
+		echo '<br />';
+	}
+	if ( is_writable(XOOPS_ROOT_PATH."/mainfile.php" ) ) {
+		xoops_error(sprintf(_WARNINWRITEABLE,XOOPS_ROOT_PATH.'/mainfile.php'));
+		echo '<br />';
+	}
+	if (!empty($_GET['xoopsorgnews'])) {
+	/*
+		$rssurlfile = XOOPS_CACHE_PATH.'/adminnewsurl.xml';
+		$rssurldata = '';
+		if (!file_exists($rssurlfile) || filemtime($rssurlfile) < time() - 86400) {
+			if (false !== $fp = fopen('http://www.xoops.org/backendurl.xml', 'r')) {
+				while (!feof ($fp)) {
+					$rssurldata .= fgets($fp, 4096);
+				}
+				fclose($fp);
+				if (false !== $fp = fopen($rssurlfile, 'w')) {
+					fwrite($fp, $rssurldata);
+				}
+				fclose($fp);
+			}
+		} else {
+			if (false !== $fp = fopen($rssurlfile, 'r')) {
+				while (!feof ($fp)) {
+					$rssurldata .= fgets($fp, 4096);
+				}
+				fclose($fp);
+			}
+		}
+*/
+		$rssurl = 'http://www.xoops.org/backend.php';
+/*
+		if ($rssurldata != '') {
+			include_once XOOPS_ROOT_PATH.'/class/xml/rpc/xmlrpcparser.php';
+			$rpcparser = new XoopsXmlRpcParser($rssurldata);
+			if (false != $rpcparser->parse()) {
+				$params =& $rpcparser->getParam();
+				$langcode = _LANGCODE;
+				if (!is_array($params[0]) || !isset($params[0][$langcode])) {
+					$rssurl = 'http://www.xoops.org/backend.php';
+				} else {
+					$rssurl = $params[0][$langcode];
+				}
+			} else {
+				echo $rpcparser->getErrors();
+			}
+		}
+*/
+		$rssfile = XOOPS_CACHE_PATH.'/adminnews.xml';
+		$rssdata = '';
+		if (!file_exists($rssfile) || filemtime($rssfile) < time() - 86400) {
+			require_once XOOPS_ROOT_PATH.'/class/snoopy.php';
+            $snoopy = new Snoopy;
+            if ($snoopy->fetch($rssurl)) {
+                $rssdata = $snoopy->results;
+                if (false !== $fp = fopen($rssfile, 'w')) {
+                    fwrite($fp, $rssdata);
+                }
+                fclose($fp);
+            }
+		} else {
+			if (false !== $fp = fopen($rssfile, 'r')) {
+				while (!feof ($fp)) {
+					$rssdata .= fgets($fp, 4096);
+				}
+				fclose($fp);
+			}
+		}
+		if ($rssdata != '') {
+			include_once XOOPS_ROOT_PATH.'/class/xml/rss/xmlrss2parser.php';
+			$rss2parser = new XoopsXmlRss2Parser($rssdata);
+			if (false != $rss2parser->parse()) {
+				echo '<table class="outer" width="100%">';
+				$items =& $rss2parser->getItems();
+				$count = count($items);
+				$myts =& MyTextSanitizer::getInstance();
+				for ($i = 0; $i < $count; $i++) {
+					echo '<tr class="head"><td><a href="'.htmlspecialchars($items[$i]['link']).'" target="_blank">';
+					echo htmlspecialchars($items[$i]['title']).'</a> ('.htmlspecialchars($items[$i]['pubdate']).')</td></tr>';
+					if ($items[$i]['description'] != "") {
+						echo '<tr><td class="odd">'.utf8_decode($items[$i]['description']);
+						if ($items[$i]['guid'] != "") {
+							echo '&nbsp;&nbsp;<a href="'.htmlspecialchars($items[$i]['guid']).'" target="_blank">'._MORE.'</a>';
+						}
+						echo '</td></tr>';
+					} elseif ($items[$i]['guid'] != "") {
+						echo '<tr><td class="even" valign="top"></td><td colspan="2" class="odd"><a href="'.htmlspecialchars($items[$i]['guid']).'" target="_blank">'._MORE.'</a></td></tr>';
+					}
+				}
+				echo '</table>';
+			} else {
+				echo $rss2parser->getErrors();
+			}
+		}
+	}
+	xoops_cp_footer();
+	break;
+case 'generate':
+	xoops_module_write_admin_menu(xoops_module_get_admin_menu());
+	redirect_header('admin.php', 1, _AD_LOGINADMIN);
+	break;
+default:
+	break;
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/admin.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/backend.php
===================================================================
--- XoopsCore/trunk/htdocs/backend.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/backend.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,71 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+include 'mainfile.php';
+include_once XOOPS_ROOT_PATH.'/class/template.php';
+include_once XOOPS_ROOT_PATH.'/modules/news/class/class.newsstory.php';
+if (function_exists('mb_http_output')) {
+	mb_http_output('pass');
+}
+header ('Content-Type:text/xml; charset=utf-8');
+$tpl = new XoopsTpl();
+$tpl->xoops_setCaching(2);
+$tpl->xoops_setCacheTime(3600);
+if (!$tpl->is_cached('db:system_rss.html')) {
+	$sarray = NewsStory::getAllPublished(10, 0);
+	if (is_array($sarray)) {
+		$tpl->assign('channel_title', xoops_utf8_encode(htmlspecialchars($xoopsConfig['sitename'], ENT_QUOTES)));
+		$tpl->assign('channel_link', XOOPS_URL.'/');
+		$tpl->assign('channel_desc', xoops_utf8_encode(htmlspecialchars($xoopsConfig['slogan'], ENT_QUOTES)));
+		$tpl->assign('channel_lastbuild', formatTimestamp(time(), 'rss'));
+		$tpl->assign('channel_webmaster', $xoopsConfig['adminmail']);
+		$tpl->assign('channel_editor', $xoopsConfig['adminmail']);
+		$tpl->assign('channel_category', 'News');
+		$tpl->assign('channel_generator', 'XOOPS');
+		$tpl->assign('channel_language', _LANGCODE);
+		$tpl->assign('image_url', XOOPS_URL.'/images/logo.gif');
+		$dimention = getimagesize(XOOPS_ROOT_PATH.'/images/logo.gif');
+		if (empty($dimention[0])) {
+			$width = 88;
+		} else {
+			$width = ($dimention[0] > 144) ? 144 : $dimention[0];
+		}
+		if (empty($dimention[1])) {
+			$height = 31;
+		} else {
+			$height = ($dimention[1] > 400) ? 400 : $dimention[1];
+		}
+		$tpl->assign('image_width', $width);
+		$tpl->assign('image_height', $height);
+		$count = $sarray;
+		foreach ($sarray as $story) {
+			$tpl->append('items', array('title' => xoops_utf8_encode(htmlspecialchars($story->title(), ENT_QUOTES)), 'link' => XOOPS_URL.'/modules/news/article.php?storyid='.$story->storyid(), 'guid' => XOOPS_URL.'/modules/news/article.php?storyid='.$story->storyid(), 'pubdate' => formatTimestamp($story->published(), 'rss'), 'description' => xoops_utf8_encode(htmlspecialchars($story->hometext(), ENT_QUOTES))));
+		}
+	}
+}
+$tpl->display('db:system_rss.html');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/backend.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/banners.php
===================================================================
--- XoopsCore/trunk/htdocs/banners.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/banners.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,355 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+include "mainfile.php";
+
+/********************************************/
+/* Function to let your client login to see */
+/* the stats                                */
+/********************************************/
+function clientlogin()
+{
+    global $xoopsDB, $xoopsLogger, $xoopsConfig;
+    include("header.php");
+    echo "<style type='text/css'>
+                body {background-color : #fcfcfc;color: #000000;font-weight: normal;font-size: 12px;font-family: Trebuchet MS,Verdana, Arial, Helvetica, sans-serif;margin-left: 0px;margin-top: 0px;margin-right: 0px;margin-bottom: 0px;}
+                .redirect {width: 70%;margin: 110px;text-align: center;padding: 15px;text-align:center;border: #e0e0e0 1px solid;color: #666666;background-color: #f6f6f6;text-align: center;}
+                .redirect a:link {color: #666666;text-decoration: none;font-weight: bold;}
+                .redirect a:visited {color: #666666;text-decoration: none;font-weight: bold;}
+                .redirect a:hover {color: #999999;text-decoration: underline;font-weight: bold;}
+                hr {height: 3px;border: 3px #E18A00 solid;filter : Alpha(Opacity=100,FinishOpacity=10,Style=2);width: 95%;}
+                font.bigtext { font-size: 16px; font-weight: bold; }
+        </style>
+
+    <form action='banners.php' method='post'>
+    <table width='100%' class='redirect'>
+    <tr><td colspan='2' align='center'>
+    <b>Advertising Statistics</b><hr /></td></tr>
+    <tr><td align='right'><b>Login: </b></td>
+        <td><input class='textbox' type='text' name='login' size='12' maxlength='10' /></td></tr>
+    <tr><td align='right'><b>Password: </b></td>
+        <td><input class='textbox' type='password' name='pass' size='12' maxlength='10' /></td></tr>
+    <tr><td align='center' colspan='2'><input type='hidden' name='op' value='Ok' />".$GLOBALS['xoopsSecurity']->getTokenHTML()."
+        <input type='submit' value='Login'></td></tr>
+    <tr><td colspan='2' align='center'><hr />Please type your client information</td></tr>
+    </table></form>";
+    include "footer.php";
+}
+
+/*********************************************/
+/* Function to display the banners stats for */
+/* each client                               */
+/*********************************************/
+function bannerstats($login, $pass)
+{
+    global $xoopsDB, $xoopsConfig, $xoopsLogger;
+    if ($login == "" || $pass == "") {
+        redirect_header("banners.php",2);
+        exit();
+    }
+    $result = $xoopsDB->query(sprintf("SELECT cid, name, passwd FROM %s WHERE login=%s", $xoopsDB->prefix("bannerclient"), $xoopsDB->quoteString($login)));
+    list($cid, $name, $passwd) = $xoopsDB->fetchRow($result);
+        if ( $pass==$passwd ) {
+            include "header.php";
+            echo "<style type='text/css'>
+                         .b_td {color: #ffffff; background-color: #2F5376; padding: 3px; text-align: center;}
+                  </style>
+            <h4 style='text-align:center;'><b>Current Active Banners for $name</b><br /></h4>
+            <table width='100%' border='0'><tr>
+                <td class='b_td'><b>ID</b></td>
+                <td class='b_td'><b>Imp. Made</b></td>
+                <td class='b_td'><b>Imp. Total</b></td>
+                <td class='b_td'><b>Imp. Left</b></td>
+                <td class='b_td'><b>Clicks</b></td>
+                <td class='b_td'><b>% Clicks</b></td>
+                <td class='b_td'><b>Functions</b></td><tr>";
+            $result = $xoopsDB->query("select bid, imptotal, impmade, clicks, date from ".$xoopsDB->prefix("banner")." where cid=$cid");
+            while ( list($bid, $imptotal, $impmade, $clicks, $date) = $xoopsDB->fetchRow($result) ) {
+                if ( $impmade == 0 ) {
+                    $percent = 0;
+                } else {
+                    $percent = substr(100 * $clicks / $impmade, 0, 5);
+                }
+                if ( $imptotal == 0 ) {
+                    $left = "Unlimited";
+                } else {
+                    $left = $imptotal-$impmade;
+                }
+                echo "<td align='center'>$bid</td>
+                <td align='center'>$impmade</td>
+                <td align='center'>$imptotal</td>
+                <td align='center'>$left</td>
+                <td align='center'>$clicks</td>
+                <td align='center'>$percent%</td>
+                <td align='center'><a href='banners.php?op=EmailStats&amp;login=$login&amp;pass=$pass&amp;cid=$cid&amp;bid=$bid&amp;t=".$GLOBALS['xoopsSecurity']->createToken()."'>E-mail Stats</a></td><tr>";
+            }
+            echo "</table><br /><br /><div>Following are your running Banners in ".$xoopsConfig['sitename']." </div><br /><br />";
+            $result = $xoopsDB->query("select bid, imageurl, clickurl, htmlbanner, htmlcode from ".$xoopsDB->prefix("banner")." where cid=$cid");
+            while ( list($bid, $imageurl, $clickurl,$htmlbanner, $htmlcode) = $xoopsDB->fetchRow($result) ) {
+                $numrows = $xoopsDB->getRowsNum($result);
+                if ($numrows>1) {
+                    echo "<hr /><br />";
+                }
+                if (!empty($htmlbanner) && !empty($htmlcode)){
+                    echo $myts->displayTarea($htmlcode);
+                }else{
+                    if(strtolower(substr($imageurl,strrpos($imageurl,".")))==".swf") {
+                        echo "<object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/ swflash.cab#version=6,0,40,0\"; width=\"468\" height=\"60\">";
+                        echo "<param name=movie value=\"$imageurl\" />";
+                        echo "<param name=quality value='high' />";
+                        echo "<embed src=\"$imageurl\" quality='high' pluginspage=\"http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash\"; type=\"application/x-shockwave-flash\" width=\"468\" height=\"60\">";
+                        echo "</embed>";
+                        echo "</object>";
+                    } else {
+                        echo "<img src='$imageurl' border='1' alt='' />";
+                    }
+                }
+                echo"Banner ID: $bid<br />
+                Send <a href='banners.php?op=EmailStats&amp;login=$login&amp;cid=$cid&amp;bid=$bid&amp;pass=$pass&amp;t=".$GLOBALS['xoopsSecurity']->createToken()."'>E-Mail Stats</a> for this Banner<br />";
+                if (!$htmlbanner){
+                    $clickurl = htmlspecialchars($clickurl, ENT_QUOTES);
+                    echo "This Banner points to <a href='$clickurl'>this URL</a><br />
+                    <form action='banners.php' method='post'>
+                    Change URL: <input class='textbox' type='text' name='url' size='50' maxlength='200' value='$clickurl' />
+                    <input class='textbox' type='hidden' name='login' value='$login' />
+                    <input class='textbox' type='hidden' name='bid' value='$bid' />
+                    <input class='textbox' type='hidden' name='pass' value='$pass' />
+                    <input class='textbox' type='hidden' name='cid' value='$cid' />
+                    <input type='submit' name='op' value='Change' /></form>";
+                }
+            }
+
+            /* Finnished Banners */
+            echo "<br />";
+            if(!$result = $xoopsDB->query("select bid, impressions, clicks, datestart, dateend from ".$xoopsDB->prefix("bannerfinish")." where cid=$cid")){
+            echo "<h4 style='text-align:center;'>Banners Finished for $name</h4><br />
+            <table width='100%' border='0'><tr>
+            <td class='b_td'><b>ID</b></td>
+            <td class='b_td'><b>Impressions</b></td>
+            <td class='b_td'><b>Clicks</b></td>
+            <td class='b_td'><b>% Clicks</b></td>
+            <td class='b_td'><b>Start Date</b></td>
+            <td class='b_td'><b>End Date</b></td></tr>";
+            while ( list($bid, $impressions, $clicks, $datestart, $dateend) = $xoopsDB->fetchRow($result) ) {
+                $percent = substr(100 * $clicks / $impressions, 0, 5);
+                echo "<tr><td align='center'>$bid</td>
+                <td align='center'>$impressions</td>
+                <td align='center'>$clicks</td>
+                <td align='center'>$percent%</td>
+                <td align='center'>".formatTimestamp($datestart)."</td>
+                <td align='center'>".formatTimestamp($dateend)."</td></tr>";
+            }
+            echo "</table>";
+            }
+            include "footer.php";
+        } else {
+            redirect_header("banners.php",2);
+            exit();
+        }
+}
+
+/*********************************************/
+/* Function to let the client E-mail his     */
+/* banner Stats                              */
+/*********************************************/
+function EmailStats($login, $cid, $bid, $pass)
+{
+    global $xoopsDB, $xoopsConfig;
+    if ($login != "" && $pass != "") {
+        $cid = intval($cid);
+        $bid = intval($bid);
+        if ($result2 = $xoopsDB->query(sprintf("select name, email, passwd from %s where cid=%u AND login=%s", $xoopsDB->prefix("bannerclient"), $cid, $xoopsDB->quoteString($login)))) {
+            list($name, $email, $passwd) = $xoopsDB->fetchRow($result2);
+            if ($pass == $passwd) {
+                if ($email == "") {
+                    redirect_header("banners.php",3,"There isn't an email associated with client ".$name.".<br />Please contact the Administrator");
+                    exit();
+                } else {
+                    if ($result = $xoopsDB->query("select bid, imptotal, impmade, clicks, imageurl, clickurl, date from ".$xoopsDB->prefix("banner")." where bid=$bid and cid=$cid")) {
+                        list($bid, $imptotal, $impmade, $clicks, $imageurl, $clickurl, $date) = $xoopsDB->fetchRow($result);
+                        if ( $impmade == 0 ) {
+                            $percent = 0;
+                        } else {
+                            $percent = substr(100 * $clicks / $impmade, 0, 5);
+                        }
+                        if ( $imptotal == 0 ) {
+                            $left = "Unlimited";
+                            $imptotal = "Unlimited";
+                        } else {
+                            $left = $imptotal-$impmade;
+                        }
+                        $fecha = date("F jS Y, h:iA.");
+                        $subject = "Your Banner Statistics at ".$xoopsConfig['sitename'];
+                        $message = "Following are the complete stats for your advertising investment at ". $xoopsConfig['sitename']." :\n\n\nClient Name: $name\nBanner ID: $bid\nBanner Image: $imageurl\nBanner URL: $clickurl\n\nImpressions Purchased: $imptotal\nImpressions Made: $impmade\nImpressions Left: $left\nClicks Received: $clicks\nClicks Percent: $percent%\n\n\nReport Generated on: $fecha";
+                        $xoopsMailer =& getMailer();
+                        $xoopsMailer->useMail();
+                        $xoopsMailer->setToEmails($email);
+                        $xoopsMailer->setFromEmail($xoopsConfig['adminmail']);
+                        $xoopsMailer->setFromName($xoopsConfig['sitename']);
+                        $xoopsMailer->setSubject($subject);
+                        $xoopsMailer->setBody($message);
+                        $xoopsMailer->send();
+                        redirect_header("banners.php?op=Ok&amp;login=$login&amp;pass=$pass&amp;t=".$GLOBALS['xoopsSecurity']->createToken(), 3, "Statistics for your banner has been sent to your email address.");
+                        exit();
+                    }
+                }
+            }
+        }
+    }
+    redirect_header("banners.php",2);
+    exit();
+}
+
+/*********************************************/
+/* Function to let the client to change the  */
+/* url for his banner                        */
+/*********************************************/
+function change_banner_url_by_client($login, $pass, $cid, $bid, $url)
+{
+    global $xoopsDB;
+    if ($login != "" && $pass != "" && $url != "") {
+        $cid = intval($cid);
+        $bid = intval($bid);
+        $sql = sprintf("select passwd from %s where cid=%u and login=%s", $xoopsDB->prefix("bannerclient"), $cid, $xoopsDB->quoteString($login));
+        if ($result = $xoopsDB->query($sql)) {
+            list($passwd) = $xoopsDB->fetchRow($result);
+            if ( $pass == $passwd ) {
+                $sql = sprintf("update %s set clickurl=%s where bid=%u AND cid=%u", $xoopsDB->prefix("banner"), $xoopsDB->quoteString($url), $bid, $cid);
+                if ($xoopsDB->query($sql)) {
+                    redirect_header("banners.php?op=Ok&amp;login=$login&amp;pass=$pass&amp;t=".$GLOBALS['xoopsSecurity']->createToken(), 3, "URL has been changed.");
+                    exit();
+                }
+            }
+        }
+    }
+    redirect_header("banners.php",2);
+    exit();
+}
+
+function clickbanner($bid)
+{
+    global $xoopsDB;
+    if (is_int($bid) && $bid > 0) {
+        if (xoops_refcheck()) {
+            if ($bresult = $xoopsDB->query("select clickurl from ".$xoopsDB->prefix("banner")." where bid=$bid")) {
+                list($clickurl) = $xoopsDB->fetchRow($bresult);
+                $xoopsDB->queryF("update ".$xoopsDB->prefix("banner")." set clicks=clicks+1 where bid=$bid");
+                header ('Location: '.$clickurl);
+            }
+        }
+    }
+    exit();
+}
+$op = '';
+if (!empty($_POST['op'])) {
+  $op = $_POST['op'];
+} elseif (!empty($_GET['op'])) {
+  $op = $_GET['op'];
+}
+$myts =& MyTextSanitizer::getInstance();
+switch ( $op ) {
+case "click":
+    $bid = 0;
+    if (!empty($_GET['bid'])) {
+        $bid = intval($_GET['bid']);
+    }
+    clickbanner($bid);
+    break;
+case "login":
+    clientlogin();
+    break;
+case "Ok":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("banners.php", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        exit();
+    }
+    $login = $pass = '';
+    if (!empty($_GET['login'])) {
+        $login = $myts->stripslashesGPC(trim($_GET['login']));
+    }
+    if (!empty($_GET['pass'])) {
+        $pass = $myts->stripslashesGPC(trim($_GET['pass']));
+    }
+    if (!empty($_POST['login'])) {
+        $login = $myts->stripslashesGPC(trim($_POST['login']));
+    }
+    if (!empty($_POST['pass'])) {
+        $pass = $myts->stripslashesGPC(trim($_POST['pass']));
+    }
+    bannerstats($login, $pass);
+    break;
+case "Change":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("banners.php", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        exit();
+    }
+    $login = $pass = $url = '';
+    $bid = $cid = 0;
+    if (!empty($_POST['login'])) {
+        $login = $myts->stripslashesGPC(trim($_POST['login']));
+    }
+    if (!empty($_POST['pass'])) {
+        $pass = $myts->stripslashesGPC(trim($_POST['pass']));
+    }
+    if (!empty($_POST['url'])) {
+        $url = $myts->stripslashesGPC(trim($_POST['url']));
+    }
+    if (!empty($_POST['bid'])) {
+        $bid = intval($_POST['bid']);
+    }
+    if (!empty($_POST['cid'])) {
+        $cid = intval($_POST['cid']);
+    }
+    change_banner_url_by_client($login, $pass, $cid, $bid, $url);
+    break;
+case "EmailStats":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("banners.php", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        exit();
+    }
+    $login = $pass = '';
+    $bid = $cid = 0;
+    if (!empty($_GET['login'])) {
+        $login = $myts->stripslashesGPC(trim($_GET['login']));
+    }
+    if (!empty($_GET['pass'])) {
+        $pass = $myts->stripslashesGPC(trim($_GET['pass']));
+    }
+    if (!empty($_GET['bid'])) {
+        $bid = intval($_GET['bid']);
+    }
+    if (!empty($_GET['cid'])) {
+        $cid = intval($_GET['cid']);
+    }
+    EmailStats($login, $cid, $bid, $pass);
+    break;
+default:
+    clientlogin();
+    break;
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/banners.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/class.tar.php
===================================================================
--- XoopsCore/trunk/htdocs/class/class.tar.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/class.tar.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,714 @@
+<?php
+// $Id$
+/*
+	package::i.tools
+
+	php-downloader	v1.0	-	www.ipunkt.biz
+
+	(c)	2002 - www.ipunkt.biz (rok)
+*/
+
+/*
+=======================================================================
+Name:
+	tar Class
+
+Author:
+	Josh Barger <joshb at npt.com>
+
+Description:
+	This class reads and writes Tape-Archive (TAR) Files and Gzip
+	compressed TAR files, which are mainly used on UNIX systems.
+	This class works on both windows AND unix systems, and does
+	NOT rely on external applications!! Woohoo!
+
+Usage:
+	Copyright (C) 2002  Josh Barger
+
+	This library is free software; you can redistribute it and/or
+	modify it under the terms of the GNU Lesser General Public
+	License as published by the Free Software Foundation; either
+	version 2.1 of the License, or (at your option) any later version.
+
+	This library is distributed in the hope that it will be useful,
+	but WITHOUT ANY WARRANTY; without even the implied warranty of
+	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+	Lesser General Public License for more details at:
+		http://www.gnu.org/copyleft/lesser.html
+
+	If you use this script in your application/website, please
+	send me an e-mail letting me know about it :)
+
+Bugs:
+	Please report any bugs you might find to my e-mail address
+	at joshb at npt.com.  If you have already created a fix/patch
+	for the bug, please do send it to me so I can incorporate it into my release.
+
+Version History:
+	1.0	04/10/2002	- InitialRelease
+
+	2.0	04/11/2002	- Merged both tarReader and tarWriter
+				  classes into one
+				- Added support for gzipped tar files
+				  Remember to name for .tar.gz or .tgz
+				  if you use gzip compression!
+				  :: THIS REQUIRES ZLIB EXTENSION ::
+				- Added additional comments to
+				  functions to help users
+				- Added ability to remove files and
+				  directories from archive
+	2.1	04/12/2002	- Fixed serious bug in generating tar
+				- Created another example file
+				- Added check to make sure ZLIB is
+				  installed before running GZIP
+				  compression on TAR
+	2.2	05/07/2002	- Added automatic detection of Gzipped
+				  tar files (Thanks go to Jidgen Falch
+				  for the idea)
+				- Changed "private" functions to have
+				  special function names beginning with
+				  two underscores
+=======================================================================
+XOOPS changes onokazu <webmaster at xoops.org>
+
+	12/25/2002 - Added flag to addFile() function for binary files
+
+=======================================================================
+*/
+
+/**
+ * tar Class
+ * 
+ * This class reads and writes Tape-Archive (TAR) Files and Gzip
+ * compressed TAR files, which are mainly used on UNIX systems.
+ * This class works on both windows AND unix systems, and does
+ * NOT rely on external applications!! Woohoo!
+ * 
+ * @author	Josh Barger <joshb at npt.com>
+ * @copyright	Copyright (C) 2002  Josh Barger
+ * 
+ * @package     kernel
+ * @subpackage  core
+ */
+class tar
+{
+	/**#@+
+	 * Unprocessed Archive Information
+	 */
+	var $filename;
+	var $isGzipped;
+	var $tar_file;
+    /**#@-*/
+
+	/**#@+
+	 * Processed Archive Information
+	 */
+	var $files;
+	var $directories;
+	var $numFiles;
+	var $numDirectories;
+    /**#@-*/
+
+
+	/**
+	 * Class Constructor -- Does nothing...
+	 */
+	function tar()
+	{
+		return true;
+	}
+
+	/**
+	 * Computes the unsigned Checksum of a file's header
+     * to try to ensure valid file
+     * 
+     * @param	string  $bytestring
+     * 
+     * @access	private
+	 */
+	function __computeUnsignedChecksum($bytestring)
+	{
+		$unsigned_chksum = '';
+		for($i=0; $i<512; $i++)
+			$unsigned_chksum += ord($bytestring[$i]);
+		for($i=0; $i<8; $i++)
+			$unsigned_chksum -= ord($bytestring[148 + $i]);
+		$unsigned_chksum += ord(" ") * 8;
+
+		return $unsigned_chksum;
+	}
+
+
+	/**
+	 * Converts a NULL padded string to a non-NULL padded string
+	 * 
+	 * @param   string  $string
+     * 
+	 * @return  string 
+     * 
+     * @access	private
+	 **/
+	function __parseNullPaddedString($string)
+	{
+		$position = strpos($string,chr(0));
+		return substr($string,0,$position);
+	}
+
+	/**
+	 * This function parses the current TAR file
+	 * 
+	 * @return  bool    always TRUE
+     * 
+     * @access	private
+	 **/
+	function __parseTar()
+	{
+		// Read Files from archive
+		$tar_length = strlen($this->tar_file);
+		$main_offset = 0;
+		$this->numFiles = 0;
+		while ( $main_offset < $tar_length ) {
+			// If we read a block of 512 nulls, we are at the end of the archive
+			if(substr($this->tar_file,$main_offset,512) == str_repeat(chr(0),512))
+				break;
+
+			// Parse file name
+			$file_name		= $this->__parseNullPaddedString(substr($this->tar_file,$main_offset,100));
+
+			// Parse the file mode
+			$file_mode		= substr($this->tar_file,$main_offset + 100,8);
+
+			// Parse the file user ID
+			$file_uid		= octdec(substr($this->tar_file,$main_offset + 108,8));
+
+			// Parse the file group ID
+			$file_gid		= octdec(substr($this->tar_file,$main_offset + 116,8));
+
+			// Parse the file size
+			$file_size		= octdec(substr($this->tar_file,$main_offset + 124,12));
+
+			// Parse the file update time - unix timestamp format
+			$file_time		= octdec(substr($this->tar_file,$main_offset + 136,12));
+
+			// Parse Checksum
+			$file_chksum		= octdec(substr($this->tar_file,$main_offset + 148,6));
+
+			// Parse user name
+			$file_uname		= $this->__parseNullPaddedString(substr($this->tar_file,$main_offset + 265,32));
+
+			// Parse Group name
+			$file_gname		= $this->__parseNullPaddedString(substr($this->tar_file,$main_offset + 297,32));
+
+			// Make sure our file is valid
+			if($this->__computeUnsignedChecksum(substr($this->tar_file,$main_offset,512)) != $file_chksum)
+				return false;
+
+			// Parse File Contents
+			$file_contents		= substr($this->tar_file,$main_offset + 512,$file_size);
+
+			/*	### Unused Header Information ###
+				$activeFile["typeflag"]		= substr($this->tar_file,$main_offset + 156,1);
+				$activeFile["linkname"]		= substr($this->tar_file,$main_offset + 157,100);
+				$activeFile["magic"]		= substr($this->tar_file,$main_offset + 257,6);
+				$activeFile["version"]		= substr($this->tar_file,$main_offset + 263,2);
+				$activeFile["devmajor"]		= substr($this->tar_file,$main_offset + 329,8);
+				$activeFile["devminor"]		= substr($this->tar_file,$main_offset + 337,8);
+				$activeFile["prefix"]		= substr($this->tar_file,$main_offset + 345,155);
+				$activeFile["endheader"]	= substr($this->tar_file,$main_offset + 500,12);
+			*/
+
+			if ( $file_size > 0 ) {
+				// Increment number of files
+				$this->numFiles++;
+
+				// Create us a new file in our array
+				$activeFile = &$this->files[];
+
+				// Asign Values
+				$activeFile["name"]		= $file_name;
+				$activeFile["mode"]		= $file_mode;
+				$activeFile["size"]		= $file_size;
+				$activeFile["time"]		= $file_time;
+				$activeFile["user_id"]		= $file_uid;
+				$activeFile["group_id"]		= $file_gid;
+				$activeFile["user_name"]	= $file_uname;
+				$activeFile["group_name"]	= $file_gname;
+				$activeFile["checksum"]		= $file_chksum;
+				$activeFile["file"]		= $file_contents;
+			} else {
+				// Increment number of directories
+				$this->numDirectories++;
+
+				// Create a new directory in our array
+				$activeDir = &$this->directories[];
+
+				// Assign values
+				$activeDir["name"]		= $file_name;
+				$activeDir["mode"]		= $file_mode;
+				$activeDir["time"]		= $file_time;
+				$activeDir["user_id"]		= $file_uid;
+				$activeDir["group_id"]		= $file_gid;
+				$activeDir["user_name"]		= $file_uname;
+				$activeDir["group_name"]	= $file_gname;
+				$activeDir["checksum"]		= $file_chksum;
+			}
+
+			// Move our offset the number of blocks we have processed
+			$main_offset += 512 + (ceil($file_size / 512) * 512);
+		}
+
+		return true;
+	}
+
+	/**
+	 * Read a non gzipped tar file in for processing.
+	 * 
+	 * @param   string  $filename   full filename
+	 * @return  bool    always TRUE
+     * 
+     * @access	private
+	 **/
+	function __readTar($filename='')
+	{
+		// Set the filename to load
+		if(!$filename)
+			$filename = $this->filename;
+
+		// Read in the TAR file
+		$fp = fopen($filename,"rb");
+		$this->tar_file = fread($fp,filesize($filename));
+		fclose($fp);
+
+		if($this->tar_file[0] == chr(31) && $this->tar_file[1] == chr(139) && $this->tar_file[2] == chr(8)) {
+			if(!function_exists("gzinflate"))
+				return false;
+
+			$this->isGzipped = true;
+
+			$this->tar_file = gzinflate(substr($this->tar_file,10,-4));
+		}
+
+		// Parse the TAR file
+		$this->__parseTar();
+
+		return true;
+	}
+
+	/**
+	 * Generates a TAR file from the processed data
+	 * 
+	 * @return  bool    always TRUE
+     * 
+     * @access	private
+	 **/
+	function __generateTAR()
+	{
+		// Clear any data currently in $this->tar_file
+		unset($this->tar_file);
+
+		// Generate Records for each directory, if we have directories
+		if($this->numDirectories > 0) {
+			foreach($this->directories as $key => $information) {
+				unset($header);
+
+				// Generate tar header for this directory
+				// Filename, Permissions, UID, GID, size, Time, checksum, typeflag, linkname, magic, version, user name, group name, devmajor, devminor, prefix, end
+				$header .= str_pad($information["name"],100,chr(0));
+				$header .= str_pad(decoct($information["mode"]),7,"0",STR_PAD_LEFT) . chr(0);
+				$header .= str_pad(decoct($information["user_id"]),7,"0",STR_PAD_LEFT) . chr(0);
+				$header .= str_pad(decoct($information["group_id"]),7,"0",STR_PAD_LEFT) . chr(0);
+				$header .= str_pad(decoct(0),11,"0",STR_PAD_LEFT) . chr(0);
+				$header .= str_pad(decoct($information["time"]),11,"0",STR_PAD_LEFT) . chr(0);
+				$header .= str_repeat(" ",8);
+				$header .= "5";
+				$header .= str_repeat(chr(0),100);
+				$header .= str_pad("ustar",6,chr(32));
+				$header .= chr(32) . chr(0);
+				$header .= str_pad("",32,chr(0));
+				$header .= str_pad("",32,chr(0));
+				$header .= str_repeat(chr(0),8);
+				$header .= str_repeat(chr(0),8);
+				$header .= str_repeat(chr(0),155);
+				$header .= str_repeat(chr(0),12);
+
+				// Compute header checksum
+				$checksum = str_pad(decoct($this->__computeUnsignedChecksum($header)),6,"0",STR_PAD_LEFT);
+				for($i=0; $i<6; $i++) {
+					$header[(148 + $i)] = substr($checksum,$i,1);
+				}
+				$header[154] = chr(0);
+				$header[155] = chr(32);
+
+				// Add new tar formatted data to tar file contents
+				$this->tar_file .= $header;
+			}
+		}
+
+		// Generate Records for each file, if we have files (We should...)
+		if($this->numFiles > 0) {
+			$this->tar_file = '';
+			foreach($this->files as $key => $information) {
+				unset($header);
+
+				// Generate the TAR header for this file
+				// Filename, Permissions, UID, GID, size, Time, checksum, typeflag, linkname, magic, version, user name, group name, devmajor, devminor, prefix, end
+				$header = str_pad($information["name"],100,chr(0));
+				$header .= str_pad(decoct($information["mode"]),7,"0",STR_PAD_LEFT) . chr(0);
+				$header .= str_pad(decoct($information["user_id"]),7,"0",STR_PAD_LEFT) . chr(0);
+				$header .= str_pad(decoct($information["group_id"]),7,"0",STR_PAD_LEFT) . chr(0);
+				$header .= str_pad(decoct($information["size"]),11,"0",STR_PAD_LEFT) . chr(0);
+				$header .= str_pad(decoct($information["time"]),11,"0",STR_PAD_LEFT) . chr(0);
+				$header .= str_repeat(" ",8);
+				$header .= "0";
+				$header .= str_repeat(chr(0),100);
+				$header .= str_pad("ustar",6,chr(32));
+				$header .= chr(32) . chr(0);
+				$header .= str_pad($information["user_name"],32,chr(0));	// How do I get a file's user name from PHP?
+				$header .= str_pad($information["group_name"],32,chr(0));	// How do I get a file's group name from PHP?
+				$header .= str_repeat(chr(0),8);
+				$header .= str_repeat(chr(0),8);
+				$header .= str_repeat(chr(0),155);
+				$header .= str_repeat(chr(0),12);
+
+				// Compute header checksum
+				$checksum = str_pad(decoct($this->__computeUnsignedChecksum($header)),6,"0",STR_PAD_LEFT);
+				for($i=0; $i<6; $i++) {
+					$header[(148 + $i)] = substr($checksum,$i,1);
+				}
+				$header[154] = chr(0);
+				$header[155] = chr(32);
+
+				// Pad file contents to byte count divisible by 512
+				$file_contents = str_pad($information["file"],(ceil($information["size"] / 512) * 512),chr(0));
+
+				// Add new tar formatted data to tar file contents
+				$this->tar_file .= $header . $file_contents;
+			}
+		}
+
+		// Add 512 bytes of NULLs to designate EOF
+		$this->tar_file .= str_repeat(chr(0),512);
+
+		return true;
+	}
+
+
+	/**
+	 * Open a TAR file
+	 * 
+	 * @param   string  $filename
+	 * @return  bool 
+	 **/
+	function openTAR($filename)
+	{
+		// Clear any values from previous tar archives
+		unset($this->filename);
+		unset($this->isGzipped);
+		unset($this->tar_file);
+		unset($this->files);
+		unset($this->directories);
+		unset($this->numFiles);
+		unset($this->numDirectories);
+
+		// If the tar file doesn't exist...
+		if(!file_exists($filename))
+			return false;
+
+		$this->filename = $filename;
+
+		// Parse this file
+		$this->__readTar();
+
+		return true;
+	}
+
+	/**
+	 * Appends a tar file to the end of the currently opened tar file.
+	 * 
+	 * @param   string  $filename
+	 * @return  bool
+	 **/
+	function appendTar($filename)
+	{
+		// If the tar file doesn't exist...
+		if(!file_exists($filename))
+			return false;
+
+		$this->__readTar($filename);
+
+		return true;
+	}
+
+	/**
+	 * Retrieves information about a file in the current tar archive
+	 * 
+	 * @param   string  $filename
+	 * @return  string  FALSE on fail
+	 **/
+	function getFile($filename)
+	{
+		if ( $this->numFiles > 0 ) {
+			foreach($this->files as $key => $information) {
+				if($information["name"] == $filename)
+					return $information;
+			}
+		}
+
+		return false;
+	}
+
+	/**
+	 * Retrieves information about a directory in the current tar archive
+	 * 
+	 * @param   string  $dirname
+	 * @return  string  FALSE on fail
+	 **/
+	function getDirectory($dirname)
+	{
+		if($this->numDirectories > 0) {
+			foreach($this->directories as $key => $information) {
+				if($information["name"] == $dirname)
+					return $information;
+			}
+		}
+
+		return false;
+	}
+
+	/**
+	 * Check if this tar archive contains a specific file
+	 * 
+	 * @param   string  $filename
+	 * @return  bool
+	 **/
+	function containsFile($filename)
+	{
+		if ( $this->numFiles > 0 ) {
+			foreach($this->files as $key => $information) {
+				if($information["name"] == $filename)
+					return true;
+			}
+		}
+		return false;
+	}
+
+	/**
+	 * Check if this tar archive contains a specific directory
+	 * 
+	 * @param   string  $dirname
+	 * @return  bool
+	 **/
+	function containsDirectory($dirname)
+	{
+		if ( $this->numDirectories > 0 ) {
+			foreach ( $this->directories as $key => $information ) {
+				if ( $information["name"] == $dirname ) {
+					return true;
+				}
+			}
+		}
+		return false;
+	}
+
+	/**
+	 * Add a directory to this tar archive
+	 * 
+	 * @param   string  $dirname
+	 * @return  bool
+	 **/
+	function addDirectory($dirname)
+	{
+		if ( !file_exists($dirname) ) {
+			return false;
+		}
+
+		// Get directory information
+		$file_information = stat($dirname);
+
+		// Add directory to processed data
+		$this->numDirectories++;
+		$activeDir		= &$this->directories[];
+		$activeDir["name"]	= $dirname;
+		$activeDir["mode"]	= $file_information["mode"];
+		$activeDir["time"]	= $file_information["time"];
+		$activeDir["user_id"]	= $file_information["uid"];
+		$activeDir["group_id"]	= $file_information["gid"];
+		$activeDir["checksum"]	= $checksum;
+
+		return true;
+	}
+
+	/**
+	 * Add a file to the tar archive
+	 * 
+	 * @param   string  $filename
+	 * @param   boolean $binary     Binary file?
+	 * @return  bool
+	 **/
+	function addFile($filename, $binary = false)
+	{
+		// Make sure the file we are adding exists!
+		if ( !file_exists($filename) ) {
+			return false;
+		}
+
+		// Make sure there are no other files in the archive that have this same filename
+		if ( $this->containsFile($filename) ) {
+			return false;
+		}
+
+		// Get file information
+		$file_information = stat($filename);
+
+		// Read in the file's contents
+		if (!$binary) {
+			$fp = fopen($filename, "r");
+		} else {
+			$fp = fopen($filename, "rb");
+		}
+		$file_contents = fread($fp,filesize($filename));
+		fclose($fp);
+
+		// Add file to processed data
+		$this->numFiles++;
+		$activeFile			= &$this->files[];
+		$activeFile["name"]		= $filename;
+		$activeFile["mode"]		= $file_information["mode"];
+		$activeFile["user_id"]		= $file_information["uid"];
+		$activeFile["group_id"]		= $file_information["gid"];
+		$activeFile["size"]		= $file_information["size"];
+		$activeFile["time"]		= $file_information["mtime"];
+		$activeFile["checksum"]		= isset($checksum) ? $checksum : '';
+		$activeFile["user_name"]	= "";
+		$activeFile["group_name"]	= "";
+		$activeFile["file"]		= trim($file_contents);
+
+		return true;
+	}
+
+	/**
+	 * Remove a file from the tar archive
+	 * 
+	 * @param   string  $filename
+	 * @return  bool
+	 **/
+	function removeFile($filename)
+	{
+		if ( $this->numFiles > 0 ) {
+			foreach ( $this->files as $key => $information ) {
+				if ( $information["name"] == $filename ) {
+					$this->numFiles--;
+					unset($this->files[$key]);
+					return true;
+				}
+			}
+		}
+		return false;
+	}
+
+	/**
+	 * Remove a directory from the tar archive
+	 * 
+	 * @param   string  $dirname
+	 * @return  bool
+	 **/
+	function removeDirectory($dirname)
+	{
+		if ( $this->numDirectories > 0 ) {
+			foreach ( $this->directories as $key => $information ) {
+				if ( $information["name"] == $dirname ) {
+					$this->numDirectories--;
+					unset($this->directories[$key]);
+					return true;
+				}
+			}
+		}
+		return false;
+	}
+
+	/**
+	 * Write the currently loaded tar archive to disk
+	 * 
+	 * @return  bool 
+	 **/
+	function saveTar()
+	{
+		if ( !$this->filename ) {
+			return false;
+		}
+
+		// Write tar to current file using specified gzip compression
+		$this->toTar($this->filename,$this->isGzipped);
+
+		return true;
+	}
+
+	/**
+	 * Saves tar archive to a different file than the current file
+	 * 
+	 * @param   string  $filename
+	 * @param   bool    $useGzip    Use GZ compression?
+	 * @return  bool
+	 **/
+	function toTar($filename,$useGzip)
+	{
+		if ( !$filename ) {
+			return false;
+		}
+
+		// Encode processed files into TAR file format
+		$this->__generateTar();
+
+		// GZ Compress the data if we need to
+		if ( $useGzip ) {
+			// Make sure we have gzip support
+			if ( !function_exists("gzencode") ) {
+				return false;
+			}
+
+			$file = gzencode($this->tar_file);
+		} else {
+			$file = $this->tar_file;
+		}
+
+		// Write the TAR file
+		$fp = fopen($filename,"wb");
+		fwrite($fp,$file);
+		fclose($fp);
+
+		return true;
+	}
+
+	/**
+	 * Sends tar archive to stdout
+	 * 
+	 * @param   string  $filename
+	 * @param   bool    $useGzip    Use GZ compression?
+	 * @return  string
+	 **/
+	function toTarOutput($filename,$useGzip)
+	{
+		if ( !$filename ) {
+			return false;
+		}
+
+		// Encode processed files into TAR file format
+		$this->__generateTar();
+
+		// GZ Compress the data if we need to
+		if ( $useGzip ) {
+			// Make sure we have gzip support
+			if ( !function_exists("gzencode") ) {
+				return false;
+			}
+
+			$file = gzencode($this->tar_file);
+		} else {
+			$file = $this->tar_file;
+		}
+
+		return $file;
+	}
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/class.tar.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/class.zipfile.php
===================================================================
--- XoopsCore/trunk/htdocs/class/class.zipfile.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/class.zipfile.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,196 @@
+<?php
+// $Id$
+/*
+	package::i.tools
+
+	php-downloader	v1.0	-	www.ipunkt.biz
+
+	(c)	2002 - www.ipunkt.biz (rok)
+
+ * Zip file creation class.
+ * Makes zip files.
+ *
+ * Based on :
+ *
+ *  http://www.zend.com/codex.php?id=535&single=1
+ *  By Eric Mueller <eric at themepark.com>
+ *
+ *  http://www.zend.com/codex.php?id=470&single=1
+ *  by Denis125 <webmaster at atlant.ru>
+ *
+ *  a patch from Peter Listiak <mlady at users.sourceforge.net> for last modified
+ *  date and time of the compressed file
+ *
+ * Official ZIP file format: http://www.pkware.com/appnote.txt
+ *
+ * @copyright	(c)	2002 - www.ipunkt.biz (rok)
+ * @access  public
+ * 
+ * @package     kernel
+ * @subpackage  core
+ */
+class zipfile
+{
+    /**
+     * Array to store compressed data
+     *
+     * @var  array    $datasec
+     */
+    var $datasec      = array();
+
+    /**
+     * Central directory
+     *
+     * @var  array    $ctrl_dir
+     */
+    var $ctrl_dir     = array();
+
+    /**
+     * End of central directory record
+     *
+     * @var  string   $eof_ctrl_dir
+     */
+    var $eof_ctrl_dir = "\x50\x4b\x05\x06\x00\x00\x00\x00";
+
+    /**
+     * Last offset position
+     *
+     * @var  integer  $old_offset
+     */
+    var $old_offset   = 0;
+
+
+    /**
+     * Converts an Unix timestamp to a four byte DOS date and time format (date
+     * in high two bytes, time in low two bytes allowing magnitude comparison).
+     *
+     * @param  integer  the current Unix timestamp
+     *
+     * @return integer  the current date in a four byte DOS format
+     *
+     * @access private
+     */
+    function unix2DosTime($unixtime = 0)
+	{
+        $timearray = ($unixtime == 0) ? getdate() : getdate($unixtime);
+
+        if ($timearray['year'] < 1980) {
+        	$timearray['year']    = 1980;
+        	$timearray['mon']     = 1;
+        	$timearray['mday']    = 1;
+        	$timearray['hours']   = 0;
+        	$timearray['minutes'] = 0;
+        	$timearray['seconds'] = 0;
+        } // end if
+
+        return (($timearray['year'] - 1980) << 25) | ($timearray['mon'] << 21) | ($timearray['mday'] << 16) |
+                ($timearray['hours'] << 11) | ($timearray['minutes'] << 5) | ($timearray['seconds'] >> 1);
+    } // end of the 'unix2DosTime()' method
+
+
+    /**
+     * Adds "file" to archive
+     *
+     * @param  string   file contents
+     * @param  string   name of the file in the archive (may contains the path)
+     * @param  integer  the current timestamp
+     *
+     * @access public
+     */
+    function addFile($data, $name, $time = 0)
+    {
+        $name     = str_replace('\\', '/', $name);
+
+        $dtime    = dechex($this->unix2DosTime($time));
+        $hexdtime = '\x' . $dtime[6] . $dtime[7]
+                  . '\x' . $dtime[4] . $dtime[5]
+                  . '\x' . $dtime[2] . $dtime[3]
+                  . '\x' . $dtime[0] . $dtime[1];
+        eval('$hexdtime = "' . $hexdtime . '";');
+
+        $fr   = "\x50\x4b\x03\x04";
+        $fr   .= "\x14\x00";            // ver needed to extract
+        $fr   .= "\x00\x00";            // gen purpose bit flag
+        $fr   .= "\x08\x00";            // compression method
+        $fr   .= $hexdtime;             // last mod time and date
+
+        // "local file header" segment
+        $unc_len = strlen($data);
+        $crc     = crc32($data);
+        $zdata   = gzcompress($data);
+        $zdata   = substr(substr($zdata, 0, strlen($zdata) - 4), 2); // fix crc bug
+        $c_len   = strlen($zdata);
+        $fr      .= pack('V', $crc);             // crc32
+        $fr      .= pack('V', $c_len);           // compressed filesize
+        $fr      .= pack('V', $unc_len);         // uncompressed filesize
+        $fr      .= pack('v', strlen($name));    // length of filename
+        $fr      .= pack('v', 0);                // extra field length
+        $fr      .= $name;
+
+        // "file data" segment
+        $fr .= $zdata;
+
+        // "data descriptor" segment (optional but necessary if archive is not
+        // served as file)
+        $fr .= pack('V', $crc);                 // crc32
+        $fr .= pack('V', $c_len);               // compressed filesize
+        $fr .= pack('V', $unc_len);             // uncompressed filesize
+
+        // add this entry to array
+        $this -> datasec[] = $fr;
+        $new_offset        = strlen(implode('', $this->datasec));
+
+        // now add to central directory record
+        $cdrec = "\x50\x4b\x01\x02";
+        $cdrec .= "\x00\x00";                // version made by
+        $cdrec .= "\x14\x00";                // version needed to extract
+        $cdrec .= "\x00\x00";                // gen purpose bit flag
+        $cdrec .= "\x08\x00";                // compression method
+        $cdrec .= $hexdtime;                 // last mod time & date
+        $cdrec .= pack('V', $crc);           // crc32
+        $cdrec .= pack('V', $c_len);         // compressed filesize
+        $cdrec .= pack('V', $unc_len);       // uncompressed filesize
+        $cdrec .= pack('v', strlen($name) ); // length of filename
+        $cdrec .= pack('v', 0 );             // extra field length
+        $cdrec .= pack('v', 0 );             // file comment length
+        $cdrec .= pack('v', 0 );             // disk number start
+        $cdrec .= pack('v', 0 );             // internal file attributes
+        $cdrec .= pack('V', 32 );            // external file attributes - 'archive' bit set
+
+        $cdrec .= pack('V', $this -> old_offset ); // relative offset of local header
+        $this -> old_offset = $new_offset;
+
+        $cdrec .= $name;
+
+        // optional extra field, file comment goes here
+        // save to central directory
+        $this -> ctrl_dir[] = $cdrec;
+    } // end of the 'addFile()' method
+
+
+    /**
+     * Dumps out file
+     *
+     * @return  string  the zipped file
+     *
+     * @access public
+     */
+    function file()
+    {
+        $data    = implode('', $this -> datasec);
+        $ctrldir = implode('', $this -> ctrl_dir);
+
+        return
+            $data .
+            $ctrldir .
+            $this -> eof_ctrl_dir .
+            pack('v', count($this -> ctrl_dir)) .  // total # of entries "on this disk"
+            pack('v', count($this -> ctrl_dir)) .  // total # of entries overall
+            pack('V', strlen($ctrldir)) .           // size of central dir
+            pack('V', strlen($data)) .              // offset to start of central dir
+            "\x00\x00";                             // .zip file comment length
+    } // end of the 'file()' method
+
+} // end of the 'zipfile' class
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/class.zipfile.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/commentrenderer.php
===================================================================
--- XoopsCore/trunk/htdocs/class/commentrenderer.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/commentrenderer.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,388 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+/**
+ * Display comments
+ *
+ * @package		kernel
+ * @subpackage	comment
+ *
+ * @author		Kazumi Ono 	<onokazu at xoops.org>
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class XoopsCommentRenderer {
+
+	/**#@+
+     * @access	private
+     */
+    var $_tpl;
+	var $_comments = null;
+	var $_useIcons = true;
+	var $_doIconCheck = false;
+	var $_memberHandler;
+	var $_statusText;
+    /**#@-*/
+
+	/**
+	 * Constructor
+	 * 
+	 * @param   object  &$tpl   
+	 * @param   boolean $use_icons
+	 * @param   boolean $do_iconcheck
+	 **/
+	function XoopsCommentRenderer(&$tpl, $use_icons = true, $do_iconcheck = false)
+	{
+		$this->_tpl =& $tpl;
+		$this->_useIcons = $use_icons;
+		$this->_doIconCheck = $do_iconcheck;
+		$this->_memberHandler =& xoops_gethandler('member');
+		$this->_statusText = array(XOOPS_COMMENT_PENDING => '<span style="text-decoration: none; font-weight: bold; color: #00ff00;">'._CM_PENDING.'</span>', XOOPS_COMMENT_ACTIVE => '<span style="text-decoration: none; font-weight: bold; color: #ff0000;">'._CM_ACTIVE.'</span>', XOOPS_COMMENT_HIDDEN => '<span style="text-decoration: none; font-weight: bold; color: #0000ff;">'._CM_HIDDEN.'</span>');
+	}
+
+	/**
+	 * Access the only instance of this class
+	 * 
+	 * @param   object  $tpl        reference to a {@link Smarty} object
+	 * @param   boolean $use_icons
+	 * @param   boolean $do_iconcheck
+	 * @return 
+	 **/
+	function &instance(&$tpl, $use_icons = true, $do_iconcheck = false)
+	{
+		static $instance;
+		if (!isset($instance)) {
+			$instance = new XoopsCommentRenderer($tpl, $use_icons, $do_iconcheck);
+		}
+		return $instance;
+	}
+
+	/**
+	 * Accessor
+	 * 
+	 * @param   object  &$comments_arr  array of {@link XoopsComment} objects
+	 **/
+	function setComments(&$comments_arr)
+	{
+		if (isset($this->_comments)) {
+			unset($this->_comments);
+		}
+		$this->_comments =& $comments_arr;
+	}
+
+	/**
+	 * Render the comments in flat view
+	 * 
+	 * @param boolean $admin_view
+	 **/
+	function renderFlatView($admin_view = false)
+	{
+		$count = count($this->_comments);
+		for ($i = 0; $i < $count; $i++) {
+			if (false != $this->_useIcons) {
+				$title = $this->_getTitleIcon($this->_comments[$i]->getVar('com_icon')).'&nbsp;'.$this->_comments[$i]->getVar('com_title');
+			} else {
+				$title = $this->_comments[$i]->getVar('com_title');
+			}
+			$poster = $this->_getPosterArray($this->_comments[$i]->getVar('com_uid'));
+			if (false != $admin_view) {
+				$text = $this->_comments[$i]->getVar('com_text').'<div style="text-align:right; margin-top: 2px; margin-bottom: 0px; margin-right: 2px;">'._CM_STATUS.': '.$this->_statusText[$this->_comments[$i]->getVar('com_status')].'<br />IP: <span style="font-weight: bold;">'.$this->_comments[$i]->getVar('com_ip').'</span></div>';
+			} else {
+				// hide comments that are not active
+				if (XOOPS_COMMENT_ACTIVE != $this->_comments[$i]->getVar('com_status')) {
+					continue;
+				} else {
+					$text = $this->_comments[$i]->getVar('com_text');
+				}
+			}
+			$this->_tpl->append('comments', array('id' => $this->_comments[$i]->getVar('com_id'), 'title' => $title, 'text' => $text, 'date_posted' => formatTimestamp($this->_comments[$i]->getVar('com_created'), 'm'), 'date_modified' => formatTimestamp($this->_comments[$i]->getVar('com_modified'), 'm'), 'poster' => $poster));
+		}
+	}
+
+	/**
+	 * Render the comments in thread view
+     * 
+     * This method calls itself recursively
+	 * 
+	 * @param integer $comment_id   Should be "0" when called by client
+	 * @param boolean $admin_view
+	 * @param boolean $show_nav
+	 **/
+	function renderThreadView($comment_id = 0, $admin_view = false, $show_nav = true)
+	{
+		include_once XOOPS_ROOT_PATH.'/class/tree.php';
+		// construct comment tree
+		$xot = new XoopsObjectTree($this->_comments, 'com_id', 'com_pid', 'com_rootid');
+		$tree =& $xot->getTree();
+
+		if (false != $this->_useIcons) {
+			$title = $this->_getTitleIcon($tree[$comment_id]['obj']->getVar('com_icon')).'&nbsp;'.$tree[$comment_id]['obj']->getVar('com_title');
+		} else {
+			$title = $tree[$comment_id]['obj']->getVar('com_title');
+		}
+		if (false != $show_nav && $tree[$comment_id]['obj']->getVar('com_pid') != 0) {
+			$this->_tpl->assign('lang_top', _CM_TOP);
+			$this->_tpl->assign('lang_parent', _CM_PARENT);
+			$this->_tpl->assign('show_threadnav', true);
+		} else {
+			$this->_tpl->assign('show_threadnav', false);
+		}
+		if (false != $admin_view) {
+			// admins can see all
+			$text = $tree[$comment_id]['obj']->getVar('com_text').'<div style="text-align:right; margin-top: 2px; margin-bottom: 0px; margin-right: 2px;">'._CM_STATUS.': '.$this->_statusText[$tree[$comment_id]['obj']->getVar('com_status')].'<br />IP: <span style="font-weight: bold;">'.$tree[$comment_id]['obj']->getVar('com_ip').'</span></div>';
+		} else {
+			// hide comments that are not active
+			if (XOOPS_COMMENT_ACTIVE != $tree[$comment_id]['obj']->getVar('com_status')) {
+				// if there are any child comments, display them as root comments
+				if (isset($tree[$comment_id]['child']) && !empty($tree[$comment_id]['child'])) {
+					foreach ($tree[$comment_id]['child'] as $child_id) {
+						$this->renderThreadView($child_id, $admin_view, false);
+					}
+				}
+				return;
+			} else {
+				$text = $tree[$comment_id]['obj']->getVar('com_text');
+			}
+		}
+		$replies = array();
+		$this->_renderThreadReplies($tree, $comment_id, $replies, '&nbsp;&nbsp;', $admin_view);
+		$show_replies = (count($replies) > 0) ? true : false;
+		$this->_tpl->append('comments', array('pid' => $tree[$comment_id]['obj']->getVar('com_pid'), 'id' => $tree[$comment_id]['obj']->getVar('com_id'), 'itemid' => $tree[$comment_id]['obj']->getVar('com_itemid'), 'rootid' => $tree[$comment_id]['obj']->getVar('com_rootid'), 'title' => $title, 'text' => $text, 'date_posted' => formatTimestamp($tree[$comment_id]['obj']->getVar('com_created'), 'm'), 'date_modified' => formatTimestamp($tree[$comment_id]['obj']->getVar('com_modified'), 'm'), 'poster' => $this->_getPosterArray($tree[$comment_id]['obj']->getVar('com_uid')), 'replies' => $replies, 'show_replies' => $show_replies));
+	}
+
+	/**
+	 * Render replies to a thread
+	 * 
+	 * @param   array   &$thread
+	 * @param   int     $key
+	 * @param   array   $replies
+	 * @param   string  $prefix
+	 * @param   bool    $admin_view
+	 * @param   integer $depth
+	 * @param   string  $current_prefix
+     * 
+     * @access	private
+	 **/
+	function _renderThreadReplies(&$thread, $key, &$replies, $prefix, $admin_view, $depth = 0, $current_prefix = '')
+	{
+        if ($depth > 0) {
+			if (false != $this->_useIcons) {
+				$title = $this->_getTitleIcon($thread[$key]['obj']->getVar('com_icon')).'&nbsp;'.$thread[$key]['obj']->getVar('com_title');
+			} else {
+				$title = $thread[$key]['obj']->getVar('com_title');
+			}
+			$title = (false != $admin_view) ? $title.' '.$this->_statusText[$thread[$key]['obj']->getVar('com_status')] : $title;
+			$replies[] = array('id' => $key, 'prefix' => $current_prefix, 'date_posted' => formatTimestamp($thread[$key]['obj']->getVar('com_created'), 'm'), 'title' => $title, 'root_id' => $thread[$key]['obj']->getVar('com_rootid'), 'status' => $this->_statusText[$thread[$key]['obj']->getVar('com_status')], 'poster' => $this->_getPosterName($thread[$key]['obj']->getVar('com_uid')));
+            $current_prefix .= $prefix;
+        }
+        if (isset($thread[$key]['child']) && !empty($thread[$key]['child'])) {
+			$depth++;
+            foreach ($thread[$key]['child'] as $childkey) {
+                if (!$admin_view && $thread[$childkey]['obj']->getVar('com_status') != XOOPS_COMMENT_ACTIVE) {
+                    // skip this comment if it is not active and continue on processing its child comments instead
+                    if (isset($thread[$childkey]['child']) && !empty($thread[$childkey]['child'])) {
+                        foreach ($thread[$childkey]['child'] as $childchildkey) {
+                            $this->_renderThreadReplies($thread, $childchildkey, $replies, $prefix, $admin_view, $depth);
+                        }
+                    }
+                } else {
+                    $this->_renderThreadReplies($thread, $childkey, $replies, $prefix, $admin_view, $depth, $current_prefix);
+                }
+            }
+        }
+	}
+
+	/**
+	 * Render comments in nested view
+     * 
+     * Danger: Recursive!
+	 * 
+	 * @param integer $comment_id   Always "0" when called by client.
+	 * @param boolean $admin_view
+	 **/
+	function renderNestView($comment_id = 0, $admin_view = false)
+	{
+		include_once XOOPS_ROOT_PATH.'/class/tree.php';
+		$xot = new XoopsObjectTree($this->_comments, 'com_id', 'com_pid', 'com_rootid');
+		$tree =& $xot->getTree();
+		if (false != $this->_useIcons) {
+			$title = $this->_getTitleIcon($tree[$comment_id]['obj']->getVar('com_icon')).'&nbsp;'.$tree[$comment_id]['obj']->getVar('com_title');
+		} else {
+			$title = $tree[$comment_id]['obj']->getVar('com_title');
+		}
+		if (false != $admin_view) {
+			$text = $tree[$comment_id]['obj']->getVar('com_text').'<div style="text-align:right; margin-top: 2px; margin-bottom: 0px; margin-right: 2px;">'._CM_STATUS.': '.$this->_statusText[$tree[$comment_id]['obj']->getVar('com_status')].'<br />IP: <span style="font-weight: bold;">'.$tree[$comment_id]['obj']->getVar('com_ip').'</span></div>';
+		} else {
+			// skip this comment if it is not active and continue on processing its child comments instead
+			if (XOOPS_COMMENT_ACTIVE != $tree[$comment_id]['obj']->getVar('com_status')) {
+				// if there are any child comments, display them as root comments
+				if (isset($tree[$comment_id]['child']) && !empty($tree[$comment_id]['child'])) {
+					foreach ($tree[$comment_id]['child'] as $child_id) {
+						$this->renderNestView($child_id, $admin_view);
+					}
+				}
+				return;
+			} else {
+				$text = $tree[$comment_id]['obj']->getVar('com_text');
+			}
+		}
+		$replies = array();
+		$this->_renderNestReplies($tree, $comment_id, $replies, 25, $admin_view);
+		$this->_tpl->append('comments', array('pid' => $tree[$comment_id]['obj']->getVar('com_pid'), 'id' => $tree[$comment_id]['obj']->getVar('com_id'), 'itemid' => $tree[$comment_id]['obj']->getVar('com_itemid'), 'rootid' => $tree[$comment_id]['obj']->getVar('com_rootid'), 'title' => $title, 'text' => $text, 'date_posted' => formatTimestamp($tree[$comment_id]['obj']->getVar('com_created'), 'm'), 'date_modified' => formatTimestamp($tree[$comment_id]['obj']->getVar('com_modified'), 'm'), 'poster' => $this->_getPosterArray($tree[$comment_id]['obj']->getVar('com_uid')), 'replies' => $replies));
+	}
+
+	/**
+	 * Render replies in nested view
+	 * 
+	 * @param   array   $thread
+	 * @param   int     $key
+	 * @param   array   $replies
+	 * @param   string  $prefix
+	 * @param   bool    $admin_view
+	 * @param   integer $depth
+     * 
+     * @access	private 
+	 **/
+	function _renderNestReplies(&$thread, $key, &$replies, $prefix, $admin_view, $depth = 0)
+	{
+        if ($depth > 0) {
+			if (false != $this->_useIcons) {
+				$title = $this->_getTitleIcon($thread[$key]['obj']->getVar('com_icon')).'&nbsp;'.$thread[$key]['obj']->getVar('com_title');
+			} else {
+				$title = $thread[$key]['obj']->getVar('com_title');
+			}
+			$text = (false != $admin_view) ? $thread[$key]['obj']->getVar('com_text').'<div style="text-align:right; margin-top: 2px; margin-right: 2px;">'._CM_STATUS.': '.$this->_statusText[$thread[$key]['obj']->getVar('com_status')].'<br />IP: <span style="font-weight: bold;">'.$thread[$key]['obj']->getVar('com_ip').'</span></div>' : $thread[$key]['obj']->getVar('com_text');
+			$replies[] = array('id' => $key, 'prefix' => $prefix, 'pid' => $thread[$key]['obj']->getVar('com_pid'), 'itemid' => $thread[$key]['obj']->getVar('com_itemid'), 'rootid' => $thread[$key]['obj']->getVar('com_rootid'), 'title' => $title, 'text' => $text, 'date_posted' => formatTimestamp($thread[$key]['obj']->getVar('com_created'), 'm'), 'date_modified' => formatTimestamp($thread[$key]['obj']->getVar('com_modified'), 'm'), 'poster' => $this->_getPosterArray($thread[$key]['obj']->getVar('com_uid')));
+
+            $prefix = $prefix + 25;
+        }
+        if (isset($thread[$key]['child']) && !empty($thread[$key]['child'])) {
+			$depth++;
+            foreach ($thread[$key]['child'] as $childkey) {
+                if (!$admin_view && $thread[$childkey]['obj']->getVar('com_status') != XOOPS_COMMENT_ACTIVE) {
+                    // skip this comment if it is not active and continue on processing its child comments instead
+                    if (isset($thread[$childkey]['child']) && !empty($thread[$childkey]['child'])) {
+                        foreach ($thread[$childkey]['child'] as $childchildkey) {
+                            $this->_renderNestReplies($thread, $childchildkey, $replies, $prefix, $admin_view, $depth);
+                        }
+                    }
+                } else {
+                    $this->_renderNestReplies($thread, $childkey, $replies, $prefix, $admin_view, $depth);
+                }
+            }
+        }
+	}
+
+
+	/**
+	 * Get the name of the poster
+	 * 
+	 * @param   int $poster_id
+	 * @return  string
+     * 
+     * @access	private
+	 **/
+	function _getPosterName($poster_id)
+	{
+		$poster['id'] = intval($poster_id);
+		if ($poster['id'] > 0) {
+			$com_poster =& $this->_memberHandler->getUser($poster_id);
+			if (is_object($com_poster)) {
+				$poster['uname'] = '<a href="'.XOOPS_URL.'/userinfo.php?uid='.$poster['id'].'">'.$com_poster->getVar('uname').'</a>';
+				return $poster;
+			}
+		}
+        $poster['id'] = 0; // to cope with deleted user accounts
+		$poster['uname'] = $GLOBALS['xoopsConfig']['anonymous'];
+		return $poster;
+	}
+
+	/**
+	 * Get an array with info about the poster
+	 * 
+	 * @param   int $poster_id
+	 * @return  array
+     * 
+     * @access	private
+	 **/
+	function _getPosterArray($poster_id)
+	{
+		$poster['id'] = intval($poster_id);
+		if ($poster['id'] > 0) {
+			$com_poster =& $this->_memberHandler->getUser($poster['id']);
+			if (is_object($com_poster)) {
+				$poster['uname'] = '<a href="'.XOOPS_URL.'/userinfo.php?uid='.$poster['id'].'">'.$com_poster->getVar('uname').'</a>';
+				$poster_rank = $com_poster->rank();
+				$poster['rank_image'] = ($poster_rank['image'] != '') ? $poster_rank['image'] : 'blank.gif'; 
+				$poster['rank_title'] = $poster_rank['title'];
+				$poster['avatar'] = $com_poster->getVar('user_avatar');
+				$poster['regdate'] = formatTimestamp($com_poster->getVar('user_regdate'), 's');
+				$poster['from'] = $com_poster->getVar('user_from');
+				$poster['postnum'] = $com_poster->getVar('posts');
+				$poster['status'] = $com_poster->isOnline() ? _CM_ONLINE : '';
+				return $poster;
+			}
+		}
+        $poster['id'] = 0; // to cope with deleted user accounts
+		$poster['uname'] = $GLOBALS['xoopsConfig']['anonymous'];
+		$poster['rank_title'] = '';
+		$poster['avatar'] = 'blank.gif';
+		$poster['regdate'] = '';
+		$poster['from'] = '';
+		$poster['postnum'] = 0;
+		$poster['status'] = '';
+		return $poster;
+	}
+
+	/**
+	 * Get the IMG tag for the title icon
+	 * 
+	 * @param   string  $icon_image
+	 * @return  string  HTML IMG tag
+     * 
+     * @access	private
+	 **/
+	function _getTitleIcon($icon_image)
+	{
+		$icon_image = htmlspecialchars( trim( $icon_image ) );
+		if ($icon_image != '') {
+			if (false != $this->_doIconCheck) {
+				if (!file_exists(XOOPS_URL.'/images/subject/'.$icon_image)) {
+					return '<img src="'.XOOPS_URL.'/images/icons/no_posticon.gif" alt="" />';
+				} else {
+					return '<img src="'.XOOPS_URL.'/images/subject/'.$icon_image.'" alt="" />';
+				}
+			} else {
+				return '<img src="'.XOOPS_URL.'/images/subject/'.$icon_image.'" alt="" />';
+			}
+		}
+		return '<img src="'.XOOPS_URL.'/images/icons/no_posticon.gif" alt="" />';
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/commentrenderer.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/criteria.php
===================================================================
--- XoopsCore/trunk/htdocs/class/criteria.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/criteria.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,410 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+// Modified by: Nathan Dial                                                  //
+// Date: 20 March 2003                                                       //
+// Desc: added experimental LDAP filter generation code                      //
+//       also refactored to remove about 20 lines of redundant code.         //
+// ------------------------------------------------------------------------- //
+
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  database
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * A criteria (grammar?) for a database query.
+ * 
+ * Abstract base class should never be instantiated directly.
+ * 
+ * @abstract
+ * 
+ * @package     kernel
+ * @subpackage  database
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class CriteriaElement
+{
+    /**
+	 * Sort order
+     * @var	string
+	 */
+    var $order = 'ASC';
+
+    /**
+     * @var	string
+     */
+    var $sort = '';
+
+    /**
+     * Number of records to retrieve
+     * @var	int
+     */
+    var $limit = 0;
+
+    /**
+     * Offset of first record
+     * @var	int
+     */
+    var $start = 0;
+
+    /**
+     * @var	string
+     */
+    var $groupby = '';
+
+    /**
+     * Constructor
+     **/
+    function CriteriaElement()
+    {
+
+    }
+
+    /**
+     * Render the criteria element
+     */
+    function render()
+    {
+
+    }
+
+    /**#@+
+    * Accessor
+    */
+    /**
+     * @param	string  $sort
+     */
+    function setSort($sort)
+    {
+        $this->sort = $sort;
+    }
+
+    /**
+     * @return	string
+     */
+    function getSort()
+    {
+        return $this->sort;
+    }
+
+    /**
+     * @param	string  $order
+     */
+    function setOrder($order)
+    {
+        if ('DESC' == strtoupper($order)) {
+            $this->order = 'DESC';
+        }
+    }
+
+    /**
+     * @return	string
+     */
+    function getOrder()
+    {
+        return $this->order;
+    }
+
+    /**
+     * @param	int $limit
+     */
+    function setLimit($limit=0)
+    {
+        $this->limit = intval($limit);
+    }
+
+    /**
+     * @return	int
+     */
+    function getLimit()
+    {
+        return $this->limit;
+    }
+
+    /**
+     * @param	int $start
+     */
+    function setStart($start=0)
+    {
+        $this->start = intval($start);
+    }
+
+    /**
+     * @return	int
+     */
+    function getStart()
+    {
+        return $this->start;
+    }
+
+    /**
+     * @param	string  $group
+     */
+    function setGroupby($group){
+        $this->groupby = $group;
+    }
+
+    /**
+     * @return	string
+     */
+    function getGroupby(){
+        return ' GROUP BY '.$this->groupby;
+    }
+    /**#@-*/
+}
+
+/**
+ * Collection of multiple {@link CriteriaElement}s 
+ * 
+ * @package     kernel
+ * @subpackage  database
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class CriteriaCompo extends CriteriaElement
+{
+
+    /**
+     * The elements of the collection
+     * @var	array   Array of {@link CriteriaElement} objects
+     */
+    var $criteriaElements = array();
+
+    /**
+     * Conditions
+     * @var	array
+     */
+    var $conditions = array();
+
+    /**
+     * Constructor
+     * 
+     * @param   object  $ele
+     * @param   string  $condition
+     **/
+    function CriteriaCompo($ele=null, $condition='AND')
+    {
+        if (isset($ele) && is_object($ele)) {
+            $this->add($ele, $condition);
+        }
+    }
+
+    /**
+     * Add an element
+     * 
+     * @param   object  &$criteriaElement
+     * @param   string  $condition
+     * 
+     * @return  object  reference to this collection
+     **/
+    function &add(&$criteriaElement, $condition='AND')
+    {
+        $this->criteriaElements[] =& $criteriaElement;
+        $this->conditions[] = $condition;
+        return $this;
+    }
+
+    /**
+     * Make the criteria into a query string
+     * 
+     * @return	string
+     */
+    function render()
+    {
+        $ret = '';
+        $count = count($this->criteriaElements);
+        if ($count > 0) {
+            $ret = '('. $this->criteriaElements[0]->render();
+            for ($i = 1; $i < $count; $i++) {
+                $ret .= ' '.$this->conditions[$i].' '.$this->criteriaElements[$i]->render();
+            }
+            $ret .= ')';
+        }
+        return $ret;
+    }
+
+    /**
+     * Make the criteria into a SQL "WHERE" clause
+     * 
+     * @return	string
+     */
+    function renderWhere()
+    {
+        $ret = $this->render();
+        $ret = ($ret != '') ? 'WHERE ' . $ret : $ret;
+        return $ret;
+    }
+
+    /**
+     * Generate an LDAP filter from criteria
+     *
+     * @return string
+     * @author Nathan Dial ndial at trillion21.com
+     */
+    function renderLdap(){
+        $retval = '';
+        $count = count($this->criteriaElements);
+        if ($count > 0) {
+            $retval = $this->criteriaElements[0]->renderLdap();
+            for ($i = 1; $i < $count; $i++) {
+                $cond = $this->conditions[$i];
+                if(strtoupper($cond) == 'AND'){
+                    $op = '&';
+                } elseif (strtoupper($cond)=='OR'){
+                    $op = '|';
+                }
+                $retval = "($op$retval" . $this->criteriaElements[$i]->renderLdap().")";
+            }
+        }
+        return $retval;
+    }
+}
+
+
+/**
+ * A single criteria
+ * 
+ * @package     kernel
+ * @subpackage  database
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class Criteria extends CriteriaElement
+{
+
+    /**
+     * @var	string
+     */
+    var $prefix;
+    var $function;
+    var $column;
+    var $operator;
+    var $value;
+
+    /**
+     * Constructor
+     * 
+     * @param   string  $column
+     * @param   string  $value
+     * @param   string  $operator
+     **/
+    function Criteria($column, $value='', $operator='=', $prefix = '', $function = '') {
+        $this->prefix = $prefix;
+        $this->function = $function;
+        $this->column = $column;
+        $this->value = $value;
+        $this->operator = $operator;
+    }
+
+    /**
+     * Make a sql condition string
+     * 
+     * @return  string
+     **/
+    function render() {
+        if ( strtoupper($this->operator) == 'IN' || strtoupper($this->operator) == "NOT IN") {
+            $value = $this->value;
+        } else {
+            if ( '' === ($value = trim($this->value)) ) {
+                return '';
+            }
+            if ( (substr($value, 0, 1) != '`') && (substr($value, -1) != '`') ) {
+                if (!class_exists('MyTextSanitizer')) {
+                    include_once XOOPS_ROOT_PATH."/class/module.textsanitizer.php";
+                }
+                $value = "'".addslashes(stripslashes($value))."'";
+            }
+        }
+        $clause = (!empty($this->prefix) ? "{$this->prefix}." : "") . $this->column;
+        if ( !empty($this->function) ) {
+            $clause = sprintf($this->function, $clause);
+        }
+        $clause .= " {$this->operator} $value";
+        return $clause;
+    }
+
+    /**
+     * Generate an LDAP filter from criteria
+     *
+     * @return string
+     * @author Nathan Dial ndial at trillion21.com, improved by Pierre-Eric MENUET pemen at sourceforge.net
+     */
+    function renderLdap(){
+        if ($this->operator == '>') {
+            $this->operator = '>=';
+        }
+        if ($this->operator == '<') {
+            $this->operator = '<=';
+        }
+
+        if ($this->operator == '!=' || $this->operator == '<>') {
+            $operator = '=';
+            $clause = "(!(" . $this->column . $operator . $this->value . "))";
+        }
+        else {
+            if ($this->operator == 'IN') {
+                $newvalue = str_replace(array('(',')'),'',
+                $this->value);
+                $tab = explode(',',$newvalue);
+                foreach ($tab as $uid)
+                {
+                    $clause .= '(' . $this->column . '=' . $uid
+                    .')';
+                }
+                $clause = '(|' . $clause . ')';
+            }
+            else {
+                $clause = "(" . $this->column . $this->operator . $this->value . ")";
+            }
+        }
+        return $clause;
+    }
+
+    /**
+     * Make a SQL "WHERE" clause
+     * 
+     * @return	string
+     */
+    function renderWhere() {
+        $cond = $this->render();
+        return empty($cond) ? '' : "WHERE $cond";
+    }
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/class/criteria.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/database/database.php
===================================================================
--- XoopsCore/trunk/htdocs/class/database/database.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/database/database.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,132 @@
+<?php
+// $Id$
+// database.php - defines abstract database wrapper class 
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+/**
+ * @package     kernel
+ * @subpackage  database
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * make sure this is only included once!
+ */
+if ( !defined("XOOPS_C_DATABASE_INCLUDED") ) {
+	define("XOOPS_C_DATABASE_INCLUDED",1);
+
+/**
+ * Abstract base class for Database access classes
+ * 
+ * @abstract
+ * 
+ * @author Kazumi Ono <onokazu at xoops.org>
+ * @copyright copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package kernel
+ * @subpackage database
+ */
+class XoopsDatabase
+	{
+		/**
+		 * Prefix for tables in the database
+		 * @var string
+		 */
+		var $prefix = '';
+		/**
+		 * reference to a {@link XoopsLogger} object
+         * @see XoopsLogger
+		 * @var object XoopsLogger
+		 */
+		var $logger;
+
+		/**
+		 * constructor
+         * 
+         * will always fail, because this is an abstract class!
+		 */
+		function XoopsDatabase()
+		{
+			// exit("Cannot instantiate this class directly");
+		}
+
+		/**
+		 * assign a {@link XoopsLogger} object to the database
+		 * 
+         * @see XoopsLogger
+         * @param object $logger reference to a {@link XoopsLogger} object
+		 */
+		function setLogger(&$logger)
+		{
+			$this->logger =& $logger;
+		}
+
+		/**
+		 * set the prefix for tables in the database
+		 * 
+         * @param string $value table prefix
+		 */
+		function setPrefix($value)
+		{
+			$this->prefix = $value;
+		}
+		
+		/**
+		 * attach the prefix.'_' to a given tablename
+         * 
+         * if tablename is empty, only prefix will be returned
+		 * 
+         * @param string $tablename tablename
+         * @return string prefixed tablename, just prefix if tablename is empty
+		 */
+		function prefix($tablename='')
+		{
+			if ( $tablename != '' ) {
+				return $this->prefix .'_'. $tablename;
+			} else {
+				return $this->prefix;
+			}
+		}
+	}
+}
+
+
+/**
+ * Only for backward compatibility
+ * 
+ * @deprecated
+ */
+class Database
+{
+
+	function &getInstance()
+	{
+		return XoopsDatabaseFactory::getDatabaseConnection();
+	}
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/database/database.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/database/databasefactory.php
===================================================================
--- XoopsCore/trunk/htdocs/class/database/databasefactory.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/database/databasefactory.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,66 @@
+<?php
+class XoopsDatabaseFactory
+{
+
+	function XoopsDatabaseFactory()
+	{
+	}
+
+	/**
+	 * Get a reference to the only instance of database class and connects to DB
+     * 
+     * if the class has not been instantiated yet, this will also take 
+     * care of that
+	 * 
+     * @static
+     * @staticvar   object  The only instance of database class
+     * @return      object  Reference to the only instance of database class
+	 */
+	function &getDatabaseConnection()
+	{
+		static $instance;
+		if (!isset($instance)) {
+			$file = XOOPS_ROOT_PATH.'/class/database/'.XOOPS_DB_TYPE.'database.php';
+			require_once $file;
+			if (!defined('XOOPS_DB_PROXY')) {
+				$class = 'Xoops'.ucfirst(XOOPS_DB_TYPE).'DatabaseSafe';
+			} else {
+				$class = 'Xoops'.ucfirst(XOOPS_DB_TYPE).'DatabaseProxy';
+			}
+			$instance =& new $class();
+			$instance->setLogger(XoopsLogger::instance());
+			$instance->setPrefix(XOOPS_DB_PREFIX);
+			if (!$instance->connect()) {
+				trigger_error("Unable to connect to database", E_USER_ERROR);
+			}
+		}
+		return $instance;
+	}
+
+	/**
+	 * Gets a reference to the only instance of database class. Currently
+	 * only being used within the installer.
+	 * 
+     * @static
+     * @staticvar   object  The only instance of database class
+     * @return      object  Reference to the only instance of database class
+	 */
+	function &getDatabase()
+	{
+		static $database;
+		if (!isset($database)) {
+			$file = XOOPS_ROOT_PATH.'/class/database/'.XOOPS_DB_TYPE.'database.php';
+			require_once $file;
+			if (!defined('XOOPS_DB_PROXY')) {
+				$class = 'Xoops'.ucfirst(XOOPS_DB_TYPE).'DatabaseSafe';
+			} else {
+				$class = 'Xoops'.ucfirst(XOOPS_DB_TYPE).'DatabaseProxy';
+			}
+			$database =& new $class();
+		}
+		return $database;
+	}
+
+
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/database/databasefactory.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/database/mysqldatabase.php
===================================================================
--- XoopsCore/trunk/htdocs/class/database/mysqldatabase.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/database/mysqldatabase.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,392 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined("XOOPS_ROOT_PATH")) {
+    die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  database
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * base class
+ */
+include_once XOOPS_ROOT_PATH."/class/database/database.php";
+
+/**
+ * connection to a mysql database
+ * 
+ * @abstract
+ * 
+ * @author      Kazumi Ono  <onokazu at xoops.org>
+ * @copyright   copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ * @subpackage  database
+ */
+class XoopsMySQLDatabase extends XoopsDatabase
+{
+	/**
+	 * Database connection
+	 * @var resource
+	 */
+	var $conn;
+
+	/**
+	 * connect to the database
+	 * 
+     * @param bool $selectdb select the database now?
+     * @return bool successful?
+	 */
+	function connect($selectdb = true)
+	{
+		if (XOOPS_DB_PCONNECT == 1) {
+			$this->conn = @mysql_pconnect(XOOPS_DB_HOST, XOOPS_DB_USER, XOOPS_DB_PASS);
+		} else {
+			$this->conn = @mysql_connect(XOOPS_DB_HOST, XOOPS_DB_USER, XOOPS_DB_PASS);
+		}
+	
+		if (!$this->conn) {
+			$this->logger->addQuery('', $this->error(), $this->errno());
+			return false;
+		}
+		
+		if($selectdb != false){
+			if (!mysql_select_db(XOOPS_DB_NAME)) {
+				$this->logger->addQuery('', $this->error(), $this->errno());
+				return false;
+			}
+		}
+		return true;
+	}
+
+	/**
+	 * generate an ID for a new row
+     * 
+     * This is for compatibility only. Will always return 0, because MySQL supports
+     * autoincrement for primary keys.
+     * 
+     * @param string $sequence name of the sequence from which to get the next ID
+     * @return int always 0, because mysql has support for autoincrement
+	 */
+	function genId($sequence)
+	{
+		return 0; // will use auto_increment
+	}
+
+	/**
+	 * Get a result row as an enumerated array
+	 * 
+     * @param resource $result
+     * @return array
+	 */
+	function fetchRow($result)
+	{
+		return @mysql_fetch_row($result);
+	}
+
+	/**
+	 * Fetch a result row as an associative array
+	 *
+     * @return array
+	 */
+	function fetchArray($result)
+    {
+        return @mysql_fetch_assoc( $result );
+    }
+
+    /**
+     * Fetch a result row as an associative array
+     *
+     * @return array
+     */
+    function fetchBoth($result)
+    {
+        return @mysql_fetch_array( $result, MYSQL_BOTH );
+    }
+
+	/**
+	 * Get the ID generated from the previous INSERT operation
+	 * 
+     * @return int
+	 */
+	function getInsertId()
+	{
+		return mysql_insert_id($this->conn);
+	}
+
+	/**
+	 * Get number of rows in result
+	 * 
+     * @param resource query result
+     * @return int
+	 */
+	function getRowsNum($result)
+	{
+		return @mysql_num_rows($result);
+	}
+
+	/**
+	 * Get number of affected rows
+	 *
+     * @return int
+	 */
+	function getAffectedRows()
+	{
+		return mysql_affected_rows($this->conn);
+	}
+
+	/**
+	 * Close MySQL connection
+	 * 
+	 */
+	function close()
+	{
+		mysql_close($this->conn);
+	}
+
+	/**
+	 * will free all memory associated with the result identifier result.
+	 * 
+     * @param resource query result
+     * @return bool TRUE on success or FALSE on failure. 
+	 */
+	function freeRecordSet($result)
+	{
+		return mysql_free_result($result);
+	}
+
+	/**
+	 * Returns the text of the error message from previous MySQL operation
+	 * 
+     * @return bool Returns the error text from the last MySQL function, or '' (the empty string) if no error occurred. 
+	 */
+	function error()
+	{
+		return @mysql_error();
+	}
+
+	/**
+	 * Returns the numerical value of the error message from previous MySQL operation 
+	 * 
+     * @return int Returns the error number from the last MySQL function, or 0 (zero) if no error occurred. 
+	 */
+	function errno()
+	{
+		return @mysql_errno();
+	}
+
+    /**
+     * Returns escaped string text with single quotes around it to be safely stored in database
+     * 
+     * @param string $str unescaped string text
+     * @return string escaped string text with single quotes around
+     */
+    function quoteString($str)
+    {
+         $str = "'".str_replace('\\"', '"', addslashes($str))."'";
+         return $str;
+    }
+
+    /**
+     * perform a query on the database
+     * 
+     * @param string $sql a valid MySQL query
+     * @param int $limit number of records to return
+     * @param int $start offset of first record to return
+     * @return resource query result or FALSE if successful
+     * or TRUE if successful and no result
+     */
+    function &queryF($sql, $limit=0, $start=0)
+	{
+		if ( !empty($limit) ) {
+			if (empty($start)) {
+				$start = 0;
+			}
+			$sql = $sql. ' LIMIT '.(int)$start.', '.(int)$limit;
+		}
+		$result =& mysql_query($sql, $this->conn);
+		if ( $result ) {
+			$this->logger->addQuery($sql);
+			return $result;
+        } else {
+			$this->logger->addQuery($sql, $this->error(), $this->errno());
+			return false;
+        }
+    }
+
+	/**
+	 * perform a query
+     * 
+     * This method is empty and does nothing! It should therefore only be
+     * used if nothing is exactly what you want done! ;-)
+	 * 
+     * @param string $sql a valid MySQL query
+     * @param int $limit number of records to return
+     * @param int $start offset of first record to return
+     * 
+     * @abstract
+	 */
+	function &query($sql, $limit=0, $start=0)
+	{
+
+    }
+
+    /**
+	 * perform queries from SQL dump file in a batch
+	 * 
+     * @param string $file file path to an SQL dump file
+     * 
+     * @return bool FALSE if failed reading SQL file or TRUE if the file has been read and queries executed
+	 */
+	function queryFromFile($file){
+        if (false !== ($fp = fopen($file, 'r'))) {
+			include_once XOOPS_ROOT_PATH.'/class/database/sqlutility.php';
+            $sql_queries = trim(fread($fp, filesize($file)));
+            SqlUtility::splitMySqlFile($pieces, $sql_queries);
+            foreach ($pieces as $query) {
+                // [0] contains the prefixed query
+                // [4] contains unprefixed table name
+                $prefixed_query = SqlUtility::prefixQuery(trim($query), $this->prefix());
+                if ($prefixed_query != false) {
+                    $this->query($prefixed_query[0]);
+                }
+            }
+            return true;
+        }
+        return false;
+    }
+    
+    /**
+	 * Get field name
+	 *
+     * @param resource $result query result
+     * @param int numerical field index
+     * @return string
+	 */
+	function getFieldName($result, $offset)
+	{
+		return mysql_field_name($result, $offset);
+	}
+
+	/**
+	 * Get field type
+	 *
+     * @param resource $result query result
+     * @param int $offset numerical field index
+     * @return string
+	 */
+    function getFieldType($result, $offset)
+	{
+		return mysql_field_type($result, $offset);
+	}
+
+	/**
+	 * Get number of fields in result
+	 *
+     * @param resource $result query result
+     * @return int
+	 */
+	function getFieldsNum($result)
+	{
+		return mysql_num_fields($result);
+	}
+}
+
+/**
+ * Safe Connection to a MySQL database.
+ * 
+ * 
+ * @author Kazumi Ono <onokazu at xoops.org>
+ * @copyright copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package kernel
+ * @subpackage database
+ */
+class XoopsMySQLDatabaseSafe extends XoopsMySQLDatabase
+{
+
+    /**
+     * perform a query on the database
+     * 
+     * @param string $sql a valid MySQL query
+     * @param int $limit number of records to return
+     * @param int $start offset of first record to return
+     * @return resource query result or FALSE if successful
+     * or TRUE if successful and no result
+     */
+	function &query($sql, $limit=0, $start=0)
+	{
+		return $this->queryF($sql, $limit, $start);
+	}
+}
+
+/**
+ * Read-Only connection to a MySQL database.
+ * 
+ * This class allows only SELECT queries to be performed through its 
+ * {@link query()} method for security reasons.
+ * 
+ * 
+ * @author Kazumi Ono <onokazu at xoops.org>
+ * @copyright copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package kernel
+ * @subpackage database
+ */
+class XoopsMySQLDatabaseProxy extends XoopsMySQLDatabase
+{
+
+    /**
+     * perform a query on the database
+     * 
+     * this method allows only SELECT queries for safety.
+     * 
+     * @param string $sql a valid MySQL query
+     * @param int $limit number of records to return
+     * @param int $start offset of first record to return
+     * @return resource query result or FALSE if unsuccessful
+     */
+	function &query($sql, $limit=0, $start=0)
+	{
+	    $sql = ltrim($sql);
+		if (strtolower(substr($sql, 0, 6)) == 'select') {
+		//if (preg_match("/^SELECT.*/i", $sql)) {
+			return $this->queryF($sql, $limit, $start);
+		}
+		$this->logger->addQuery($sql, 'Database update not allowed during processing of a GET request', 0);
+		return false;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/database/mysqldatabase.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/database/sqlutility.php
===================================================================
--- XoopsCore/trunk/htdocs/class/database/sqlutility.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/database/sqlutility.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,160 @@
+<?php
+// $Id$
+// sqlutility.php - defines utility class for MySQL database
+/**
+ * @package     kernel
+ * @subpackage  database
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * provide some utility methods for databases
+ * 
+ * @author Kazumi Ono <onokazu at xoops.org>
+ * @copyright copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package kernel
+ * @subpackage  database
+ */
+class SqlUtility
+{
+	/**
+	* Function from phpMyAdmin (http://phpwizard.net/projects/phpMyAdmin/)
+	*
+ 	* Removes comment and splits large sql files into individual queries
+ 	*
+	* Last revision: September 23, 2001 - gandon
+ 	*
+ 	* @param   array    the splitted sql commands
+ 	* @param   string   the sql commands
+ 	* @return  boolean  always true
+ 	* @access  public
+ 	*/
+	function splitMySqlFile(&$ret, $sql)
+	{
+		$sql               = trim($sql);
+		$sql_len           = strlen($sql);
+		$char              = '';
+    	$string_start      = '';
+    	$in_string         = false;
+
+    	for ($i = 0; $i < $sql_len; ++$i) {
+        	$char = $sql[$i];
+
+           // We are in a string, check for not escaped end of
+		   // strings except for backquotes that can't be escaped
+           if ($in_string) {
+           		for (;;) {
+               		$i         = strpos($sql, $string_start, $i);
+					// No end of string found -> add the current
+					// substring to the returned array
+                	if (!$i) {
+						$ret[] = $sql;
+                    	return true;
+                	}
+					// Backquotes or no backslashes before 
+					// quotes: it's indeed the end of the 
+					// string -> exit the loop
+                	else if ($string_start == '`' || $sql[$i-1] != '\\') {
+						$string_start      = '';
+                   		$in_string         = false;
+                    	break;
+                	}
+                	// one or more Backslashes before the presumed 
+					// end of string...
+                	else {
+						// first checks for escaped backslashes
+                    	$j                     = 2;
+                    	$escaped_backslash     = false;
+						while ($i-$j > 0 && $sql[$i-$j] == '\\') {
+							$escaped_backslash = !$escaped_backslash;
+                        	$j++;
+                    	}
+                    	// ... if escaped backslashes: it's really the 
+						// end of the string -> exit the loop
+                    	if ($escaped_backslash) {
+							$string_start  = '';
+                        	$in_string     = false;
+							break;
+                    	}
+                    	// ... else loop
+                    	else {
+							$i++;
+                    	}
+                	} // end if...elseif...else
+            	} // end for
+        	} // end if (in string)
+        	// We are not in a string, first check for delimiter...
+        	else if ($char == ';') {
+				// if delimiter found, add the parsed part to the returned array
+            	$ret[]    = substr($sql, 0, $i);
+            	$sql      = ltrim(substr($sql, min($i + 1, $sql_len)));
+           		$sql_len  = strlen($sql);
+            	if ($sql_len) {
+					$i      = -1;
+            	} else {
+                	// The submited statement(s) end(s) here
+                	return true;
+				}
+        	} // end else if (is delimiter)
+        	// ... then check for start of a string,...
+        	else if (($char == '"') || ($char == '\'') || ($char == '`')) {
+				$in_string    = true;
+				$string_start = $char;
+        	} // end else if (is start of string)
+
+        	// for start of a comment (and remove this comment if found)...
+        	else if ($char == '#' || ($char == ' ' && $i > 1 && $sql[$i-2] . $sql[$i-1] == '--')) {
+            	// starting position of the comment depends on the comment type
+           		$start_of_comment = (($sql[$i] == '#') ? $i : $i-2);
+            	// if no "\n" exits in the remaining string, checks for "\r"
+            	// (Mac eol style)
+           		$end_of_comment   = (strpos(' ' . $sql, "\012", $i+2))
+                              ? strpos(' ' . $sql, "\012", $i+2)
+                              : strpos(' ' . $sql, "\015", $i+2);
+           		if (!$end_of_comment) {
+                // no eol found after '#', add the parsed part to the returned
+                // array and exit
+					// RMV fix for comments at end of file
+               		$last = trim(substr($sql, 0, $i-1));
+					if (!empty($last)) {
+						$ret[] = $last;
+					}
+               		return true;
+				} else {
+                	$sql     = substr($sql, 0, $start_of_comment) . ltrim(substr($sql, $end_of_comment));
+                	$sql_len = strlen($sql);
+                	$i--;
+            	} // end if...else
+        	} // end else if (is comment)
+    	} // end for
+
+    	// add any rest to the returned array
+    	if (!empty($sql) && trim($sql) != '') {
+			$ret[] = $sql;
+    	}
+    	return true;
+	}
+
+	/**
+	 * add a prefix.'_' to all tablenames in a query
+     * 
+     * @param   string  $query  valid SQL query string
+     * @param   string  $prefix prefix to add to all table names
+	 * @return  mixed   FALSE on failure
+	 */
+	function prefixQuery($query, $prefix)
+	{
+		$pattern = "/^(INSERT INTO|CREATE TABLE|ALTER TABLE|UPDATE)(\s)+([`]?)([^`\s]+)\\3(\s)+/siU";
+		$pattern2 = "/^(DROP TABLE)(\s)+([`]?)([^`\s]+)\\3(\s)?$/siU";
+		if (preg_match($pattern, $query, $matches) || preg_match($pattern2, $query, $matches)) {
+			$replace = "\\1 ".$prefix."_\\4\\5";
+			$matches[0] = preg_replace($pattern, $replace, $query);
+			return $matches;
+		}
+		return false;
+	}
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/class/database/sqlutility.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/downloader.php
===================================================================
--- XoopsCore/trunk/htdocs/class/downloader.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/downloader.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,141 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+/**
+ * Sends non HTML files through a http socket
+ * 
+ * @package     kernel
+ * @subpackage  core
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsDownloader
+{
+
+	/**#@+
+	 * file information
+	 */
+	var $mimetype;
+	var $ext;
+	var $archiver;
+    /**#@-*/
+
+	/**
+	 * Constructor
+	 */
+	function XoopsDownloader()
+	{
+		//EMPTY
+	}
+
+	/**
+	 * Send the HTTP header
+     * 
+     * @param	string  $filename
+     * 
+     * @access	private
+	 */
+	function _header($filename)
+	{
+		if (function_exists('mb_http_output')) {
+			mb_http_output('pass');
+		}
+		header('Content-Type: '.$this->mimetype);
+		if (preg_match("/MSIE ([0-9]\.[0-9]{1,2})/", $_SERVER['HTTP_USER_AGENT'])) {
+			header('Content-Disposition: inline; filename="'.$filename.'"');
+			header('Expires: 0');
+			header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
+			header('Pragma: public');
+		} else {
+			header('Content-Disposition: attachment; filename="'.$filename.'"');
+			header('Expires: 0');
+			header('Pragma: no-cache');
+		}
+	}
+
+	/**
+	 * XoopsDownloader::addFile()
+	 * 
+	 * @param   string  $filepath
+	 * @param   string   $newfilename
+	 **/
+	function addFile($filepath, $newfilename=null)
+	{
+		//EMPTY
+	}
+
+	/**
+	 * XoopsDownloader::addBinaryFile()
+	 * 
+	 * @param   string  $filepath
+	 * @param   string  $newfilename
+	 **/
+	function addBinaryFile($filepath, $newfilename=null)
+	{
+		//EMPTY
+	}
+
+	/**
+	 * XoopsDownloader::addFileData()
+	 * 
+	 * @param   mixed     $data
+	 * @param   string    $filename
+	 * @param   integer   $time
+	 **/
+	function addFileData(&$data, $filename, $time=0)
+	{
+		//EMPTY
+	}
+
+	/**
+	 * XoopsDownloader::addBinaryFileData()
+	 * 
+	 * @param   mixed   $data
+	 * @param   string  $filename
+	 * @param   integer $time
+	 **/
+	function addBinaryFileData(&$data, $filename, $time=0)
+	{
+		//EMPTY
+	}
+
+	/**
+	 * XoopsDownloader::download()
+	 * 
+	 * @param   string  $name
+	 * @param   boolean $gzip
+	 **/
+	function download($name, $gzip = true)
+	{
+		//EMPTY
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/downloader.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/errorhandler.php
===================================================================
--- XoopsCore/trunk/htdocs/class/errorhandler.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/errorhandler.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,215 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+/**
+ * Error handler class
+ *
+ * @author Michael van Dam
+ */
+class XoopsErrorHandler
+{
+	/**
+	 * List of errors
+	 * 
+	 * @var array 
+	 * @access private 
+	 */
+	var $_errors = array();
+
+	/**
+	 * Show error messages?
+	 *
+	 * @var boolean
+	 * @access private
+	 */
+	var $_showErrors = false;
+
+	/**
+	 * Was there a fatal error (E_USER_ERROR)
+	 *
+	 * @var boolean
+	 * @access private
+	 */
+	var $_isFatal = false;
+
+	/**
+	 * Constructor
+	 *
+	 * Registers the error handler and shutdown functions.  NOTE: when
+	 * registering an error handler, the setting or 'error_reporting' is
+	 * ignored and *everything* is trapped.
+	 */
+	function XoopsErrorHandler()
+	{
+		set_error_handler('XoopsErrorHandler_HandleError');
+		register_shutdown_function('XoopsErrorHandler_Shutdown'); 
+	}
+
+	/**
+	 * Get the (singleton) instance of the error handler
+	 *
+	 * @access public
+	 */
+	function &getInstance()
+	{
+		static $instance = null;
+		if (empty($instance)) {
+			$instance = new XoopsErrorHandler;
+		}
+		return $instance;
+	}
+
+	/**
+	 * Activate the error handler
+	 *
+	 * @access public 
+	 * @param boolean $showErrors True if debug mode is on
+	 * @return void 
+	 */
+	function activate($showErrors=false)
+	{ 
+		$this->_showErrors = $showErrors;
+	} 
+
+	/**
+	 * Handle an error
+	 * 
+	 * @param array $error Associative array containing error info
+	 * @access public 
+	 * @return void 
+	 */
+	function handleError($error)
+	{
+		if (($error['errno'] & error_reporting()) != $error['errno']) {
+			return;
+		}
+		$this->_errors[] = $error;
+		if ($error['errno'] == E_USER_ERROR) {
+			$this->_isFatal = true;
+			exit();
+		}
+	} 
+
+	/**
+	 * Render the list of errors
+	 *
+	 * NOTE: Unfortunately PHP 'fatal' and 'parse' errors are not trappable.
+	 * If the server has 'display_errors Off', then the result will be a
+	 * blank page.  It would be nice to print a message 'This page cannot
+	 * be displayed', but there seems to be no way to print this only when
+	 * exiting due to a fatal error rather than normal end of page.
+	 *
+	 * Thus, 'trigger_error' should be used to trap problems early and
+	 * display a meaningful message before a PHP fatal or parse error can
+	 * occur.
+	 * 
+	 * @TODO Use CSS
+	 * @TODO Use language? or allow customized message?
+	 *
+	 * @access public 
+	 * @return void 
+	 */
+	function renderErrors()
+	{
+		$output = '';
+		if ($this->_isFatal) {
+			$output .= 'This page cannot be displayed due to an internal error.<br/><br/>';
+			$output .= 'If you are the administrator of this site, please visit the <a href="http://wiki.xoops.org/wakka.php?wakka=TroubleshootingBlankPage">Xoops Troubleshooting Page</a> for assistance.<br/><br/>';
+		}
+		if (!$this->_showErrors || empty($this->_errors)) {
+			return $output;
+		}
+
+		foreach( $this->_errors as $error )
+		{
+			switch ( $error['errno'] )
+			{
+				case E_USER_NOTICE:
+					$output .= "Notice [Xoops]: ";
+					break;
+				case E_USER_WARNING:
+					$output .= "Warning [Xoops]: ";
+					break;
+				case E_USER_ERROR:
+					$output .= "Error [Xoops]: ";
+					break;
+				case E_NOTICE:
+					$output .= "Notice [PHP]: ";
+					break;
+				case E_WARNING:
+					$output .= "Warning [PHP]: ";
+					break;
+				default:
+					$output .= "Unknown Condition [" . $error['errno'] . "]: ";
+			} 
+			$output .= sprintf( "%s in file %s line %s<br>\n", $error['errstr'], $error['errfile'], $error['errline'] );
+		} 
+		return $output;
+	} 
+
+} 
+
+/**
+ * User-defined error handler (called from 'trigger_error')
+ * 
+ * NOTE: Some recent versions of PHP have a 5th parameter, &$p_ErrContext
+ * which is an associative array of all variables defined in scope in which
+ * error occurred.  We cannot support this, for compatibility with older PHP.
+ * 
+ * @access public 
+ * @param int $errNo Type of error
+ * @param string $errStr Error message
+ * @param string $errFile File in which error occurred
+ * @param int $errLine Line number on which error occurred
+ * @return void 
+ */
+function XoopsErrorHandler_HandleError($errNo, $errStr, $errFile, $errLine)
+{ 
+	// NOTE: we only store relative pathnames
+	$new_error = array( 
+		'errno' => $errNo,
+		'errstr' => $errStr,
+		'errfile' => preg_replace("|^" . XOOPS_ROOT_PATH . "/|", '', $errFile),
+		'errline' => $errLine 
+		);
+	$error_handler =& XoopsErrorHandler::getInstance();
+	$error_handler->handleError($new_error);
+} 
+
+/**
+ * User-defined shutdown function (called from 'exit')
+ * 
+ * @access public 
+ * @return void 
+ */
+function XoopsErrorHandler_Shutdown()
+{
+	$error_handler =& XoopsErrorHandler::getInstance();
+	echo $error_handler->renderErrors();
+} 
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/errorhandler.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/logger.php
===================================================================
--- XoopsCore/trunk/htdocs/class/logger.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/logger.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,238 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+/**
+ * Collects information for a page request
+ *
+ * <b>Singelton:</b> There can be only one instance of this class and it must
+ * be accessed through the {@link instance()} method!
+ *
+ * records information about database queries, blocks, and execution time
+ * and can display it as HTML
+ *
+ * @author  Kazumi Ono  <onokazu at xoops.org>
+ * @copyright   copyright (c) 2000-2003 XOOPS.org
+ *
+ * @package kernel
+ */
+class XoopsLogger
+{
+    /**#@+
+     * @var array
+     */
+    var $queries = array();
+    var $blocks = array();
+    var $extra = array();
+    var $logstart = array();
+    var $logend = array();
+    /**#@-*/
+
+    /**
+     * constructor
+     *
+     * @access  private
+     */
+    function XoopsLogger()
+    {
+
+    }
+
+    /**
+     * get a reference to the only instance of this class
+     *
+     * @return  object XoopsLogger  reference to the only instance
+     */
+    function &instance()
+    {
+        static $instance;
+        if (!isset($instance)) {
+            $instance = new XoopsLogger();
+        }
+        return $instance;
+    }
+
+    /**
+     * start a timer
+     *
+     * @param   string  $name   name of the timer
+     *
+     */
+    function startTime($name = 'XOOPS')
+    {
+        $this->logstart[$name] = explode(' ', microtime());
+    }
+
+    /**
+     * stop a timer
+     *
+     * @param   string  $name   name of the timer
+     */
+    function stopTime($name = 'XOOPS')
+    {
+        $this->logend[$name] = explode(' ', microtime());
+    }
+
+    /**
+     * log a database query
+     *
+     * @param   string  $sql    SQL string
+     * @param   string  $error  error message (if any)
+     * @param   int     $errno  error number (if any)
+     */
+    function addQuery($sql, $error=null, $errno=null)
+    {
+        $this->queries[] = array('sql' => $sql, 'error' => $error, 'errno' => $errno);
+    }
+
+    /**
+     * log display of a block
+     *
+     * @param   string  $name       name of the block
+     * @param   bool    $cached     was the block cached?
+     * @param   int     $cachetime  cachetime of the block
+     */
+    function addBlock($name, $cached = false, $cachetime = 0)
+    {
+        $this->blocks[] = array('name' => $name, 'cached' => $cached, 'cachetime' => $cachetime);
+    }
+
+    /**
+     * log extra information
+     *
+     * @param   string  $name       name for the entry
+     * @param   int     $msg  text message for the entry
+     */
+    function addExtra($name, $msg)
+    {
+        $this->extra[] = array('name' => $name, 'msg' => $msg);
+    }
+
+    /**
+     * get the logged queries in a HTML table
+     *
+     * @return  string  HTML table with queries
+     */
+    function dumpQueries()
+    {
+        $ret = '<table class="outer" width="100%" cellspacing="1"><tr><th>Queries</th></tr>';
+        $class = 'even';
+        foreach ($this->queries as $q) {
+            if (isset($q['error'])) {
+                $ret .= '<tr class="'.$class.'"><td><span style="color:#ff0000;">'.htmlentities($q['sql']).'<br /><b>Error number:</b> '.$q['errno'].'<br /><b>Error message:</b> '.$q['error'].'</span></td></tr>';
+            } else {
+                $ret .= '<tr class="'.$class.'"><td>'.htmlentities($q['sql']).'</td></tr>';
+            }
+            $class = ($class == 'odd') ? 'even' : 'odd';
+        }
+        $ret .= '<tr class="foot"><td>Total: <span style="color:#ff0000;">'.count($this->queries).'</span> queries</td></tr></table><br />';
+        return $ret;
+    }
+
+    /**
+     * get the logged blocks in a HTML table
+     *
+     * @return  string  HTML table with blocks
+     */
+    function dumpBlocks()
+    {
+        $ret = '<table class="outer" width="100%" cellspacing="1"><tr><th colspan="2">Blocks</th></tr>';
+        $class = 'even';
+        foreach ($this->blocks as $b) {
+            if ($b['cached']) {
+                $ret .= '<tr><td class="'.$class.'"><b>'.htmlspecialchars($b['name']).':</b> Cached (regenerates every '.intval($b['cachetime']).' seconds)</td></tr>';
+            } else {
+                $ret .= '<tr><td class="'.$class.'"><b>'.htmlspecialchars($b['name']).':</b> No Cache</td></tr>';
+            }
+            $class = ($class == 'odd') ? 'even' : 'odd';
+        }
+        $ret .= '<tr class="foot"><td>Total: <span style="color:#ff0000;">'.count($this->blocks).'</span> blocks</td></tr></table><br />';
+        return $ret;
+    }
+
+    /**
+     * get the current execution time of a timer
+     *
+     * @param   string  $name   name of the counter
+     * @return  float   current execution time of the counter
+     */
+    function dumpTime($name = 'XOOPS')
+    {
+        if (!isset($this->logstart[$name])) {
+            return 0;
+        }
+        if (!isset($this->logend[$name])) {
+            $stop_time = explode(' ', microtime());
+        } else {
+            $stop_time = $this->logend[$name];
+        }
+        return ((float)$stop_time[1] + (float)$stop_time[0]) - ((float)$this->logstart[$name][1] + (float)$this->logstart[$name][0]);
+    }
+
+    /**
+     * get extra information in a HTML table
+     *
+     * @return  string  HTML table with extra information
+     */
+    function dumpExtra()
+    {
+        $ret = '<table class="outer" width="100%" cellspacing="1"><tr><th colspan="2">Extra</th></tr>';
+        $class = 'even';
+        foreach ($this->extra as $ex) {
+            $ret .= '<tr><td class="'.$class.'"><b>'.htmlspecialchars($ex['name']).':</b> '.htmlspecialchars($ex['msg']).'</td></tr>';
+            $class = ($class == 'odd') ? 'even' : 'odd';
+        }
+        $ret .= '</table><br />';
+        return $ret;
+    }
+
+    /**
+     * get all logged information formatted in HTML tables
+     *
+     * @return  string  HTML output
+     */
+    function dumpAll()
+    {
+        $ret = $this->dumpQueries();
+        $ret .= $this->dumpBlocks();
+        if (count($this->logstart) > 0) {
+            $ret .= '<table class="outer" width="100%" cellspacing="1"><tr><th>Execution Time</th></tr>';
+            $class = 'even';
+            foreach ($this->logstart as $k => $v) {
+                $ret .= '<tr><td class="'.$class.'"><b>'.htmlspecialchars($k).'</b> took <span style="color:#ff0000;">'.$this->dumpTime($k).'</span> seconds to load.</td></tr>';
+                $class = ($class == 'odd') ? 'even' : 'odd';
+            }
+            $ret .= '</table><br />';
+        }
+        $ret .= $this->dumpExtra();
+        return $ret;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/logger.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/mail/phpmailer/LICENSE
===================================================================
--- XoopsCore/trunk/htdocs/class/mail/phpmailer/LICENSE	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/mail/phpmailer/LICENSE	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,504 @@
+		  GNU LESSER GENERAL PUBLIC LICENSE
+		       Version 2.1, February 1999
+
+ Copyright (C) 1991, 1999 Free Software Foundation, Inc.
+     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+[This is the first released version of the Lesser GPL.  It also counts
+ as the successor of the GNU Library Public License, version 2, hence
+ the version number 2.1.]
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+Licenses are intended to guarantee your freedom to share and change
+free software--to make sure the software is free for all its users.
+
+  This license, the Lesser General Public License, applies to some
+specially designated software packages--typically libraries--of the
+Free Software Foundation and other authors who decide to use it.  You
+can use it too, but we suggest you first think carefully about whether
+this license or the ordinary General Public License is the better
+strategy to use in any particular case, based on the explanations below.
+
+  When we speak of free software, we are referring to freedom of use,
+not price.  Our General Public Licenses are designed to make sure that
+you have the freedom to distribute copies of free software (and charge
+for this service if you wish); that you receive source code or can get
+it if you want it; that you can change the software and use pieces of
+it in new free programs; and that you are informed that you can do
+these things.
+
+  To protect your rights, we need to make restrictions that forbid
+distributors to deny you these rights or to ask you to surrender these
+rights.  These restrictions translate to certain responsibilities for
+you if you distribute copies of the library or if you modify it.
+
+  For example, if you distribute copies of the library, whether gratis
+or for a fee, you must give the recipients all the rights that we gave
+you.  You must make sure that they, too, receive or can get the source
+code.  If you link other code with the library, you must provide
+complete object files to the recipients, so that they can relink them
+with the library after making changes to the library and recompiling
+it.  And you must show them these terms so they know their rights.
+
+  We protect your rights with a two-step method: (1) we copyright the
+library, and (2) we offer you this license, which gives you legal
+permission to copy, distribute and/or modify the library.
+
+  To protect each distributor, we want to make it very clear that
+there is no warranty for the free library.  Also, if the library is
+modified by someone else and passed on, the recipients should know
+that what they have is not the original version, so that the original
+author's reputation will not be affected by problems that might be
+introduced by others.
+
+  Finally, software patents pose a constant threat to the existence of
+any free program.  We wish to make sure that a company cannot
+effectively restrict the users of a free program by obtaining a
+restrictive license from a patent holder.  Therefore, we insist that
+any patent license obtained for a version of the library must be
+consistent with the full freedom of use specified in this license.
+
+  Most GNU software, including some libraries, is covered by the
+ordinary GNU General Public License.  This license, the GNU Lesser
+General Public License, applies to certain designated libraries, and
+is quite different from the ordinary General Public License.  We use
+this license for certain libraries in order to permit linking those
+libraries into non-free programs.
+
+  When a program is linked with a library, whether statically or using
+a shared library, the combination of the two is legally speaking a
+combined work, a derivative of the original library.  The ordinary
+General Public License therefore permits such linking only if the
+entire combination fits its criteria of freedom.  The Lesser General
+Public License permits more lax criteria for linking other code with
+the library.
+
+  We call this license the "Lesser" General Public License because it
+does Less to protect the user's freedom than the ordinary General
+Public License.  It also provides other free software developers Less
+of an advantage over competing non-free programs.  These disadvantages
+are the reason we use the ordinary General Public License for many
+libraries.  However, the Lesser license provides advantages in certain
+special circumstances.
+
+  For example, on rare occasions, there may be a special need to
+encourage the widest possible use of a certain library, so that it becomes
+a de-facto standard.  To achieve this, non-free programs must be
+allowed to use the library.  A more frequent case is that a free
+library does the same job as widely used non-free libraries.  In this
+case, there is little to gain by limiting the free library to free
+software only, so we use the Lesser General Public License.
+
+  In other cases, permission to use a particular library in non-free
+programs enables a greater number of people to use a large body of
+free software.  For example, permission to use the GNU C Library in
+non-free programs enables many more people to use the whole GNU
+operating system, as well as its variant, the GNU/Linux operating
+system.
+
+  Although the Lesser General Public License is Less protective of the
+users' freedom, it does ensure that the user of a program that is
+linked with the Library has the freedom and the wherewithal to run
+that program using a modified version of the Library.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.  Pay close attention to the difference between a
+"work based on the library" and a "work that uses the library".  The
+former contains code derived from the library, whereas the latter must
+be combined with the library in order to run.
+
+		  GNU LESSER GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License Agreement applies to any software library or other
+program which contains a notice placed by the copyright holder or
+other authorized party saying it may be distributed under the terms of
+this Lesser General Public License (also called "this License").
+Each licensee is addressed as "you".
+
+  A "library" means a collection of software functions and/or data
+prepared so as to be conveniently linked with application programs
+(which use some of those functions and data) to form executables.
+
+  The "Library", below, refers to any such software library or work
+which has been distributed under these terms.  A "work based on the
+Library" means either the Library or any derivative work under
+copyright law: that is to say, a work containing the Library or a
+portion of it, either verbatim or with modifications and/or translated
+straightforwardly into another language.  (Hereinafter, translation is
+included without limitation in the term "modification".)
+
+  "Source code" for a work means the preferred form of the work for
+making modifications to it.  For a library, complete source code means
+all the source code for all modules it contains, plus any associated
+interface definition files, plus the scripts used to control compilation
+and installation of the library.
+
+  Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running a program using the Library is not restricted, and output from
+such a program is covered only if its contents constitute a work based
+on the Library (independent of the use of the Library in a tool for
+writing it).  Whether that is true depends on what the Library does
+and what the program that uses the Library does.
+  
+  1. You may copy and distribute verbatim copies of the Library's
+complete source code as you receive it, in any medium, provided that
+you conspicuously and appropriately publish on each copy an
+appropriate copyright notice and disclaimer of warranty; keep intact
+all the notices that refer to this License and to the absence of any
+warranty; and distribute a copy of this License along with the
+Library.
+
+  You may charge a fee for the physical act of transferring a copy,
+and you may at your option offer warranty protection in exchange for a
+fee.
+
+  2. You may modify your copy or copies of the Library or any portion
+of it, thus forming a work based on the Library, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) The modified work must itself be a software library.
+
+    b) You must cause the files modified to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    c) You must cause the whole of the work to be licensed at no
+    charge to all third parties under the terms of this License.
+
+    d) If a facility in the modified Library refers to a function or a
+    table of data to be supplied by an application program that uses
+    the facility, other than as an argument passed when the facility
+    is invoked, then you must make a good faith effort to ensure that,
+    in the event an application does not supply such function or
+    table, the facility still operates, and performs whatever part of
+    its purpose remains meaningful.
+
+    (For example, a function in a library to compute square roots has
+    a purpose that is entirely well-defined independent of the
+    application.  Therefore, Subsection 2d requires that any
+    application-supplied function or table used by this function must
+    be optional: if the application does not supply it, the square
+    root function must still compute square roots.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Library,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Library, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote
+it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Library.
+
+In addition, mere aggregation of another work not based on the Library
+with the Library (or with a work based on the Library) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may opt to apply the terms of the ordinary GNU General Public
+License instead of this License to a given copy of the Library.  To do
+this, you must alter all the notices that refer to this License, so
+that they refer to the ordinary GNU General Public License, version 2,
+instead of to this License.  (If a newer version than version 2 of the
+ordinary GNU General Public License has appeared, then you can specify
+that version instead if you wish.)  Do not make any other change in
+these notices.
+
+  Once this change is made in a given copy, it is irreversible for
+that copy, so the ordinary GNU General Public License applies to all
+subsequent copies and derivative works made from that copy.
+
+  This option is useful when you wish to copy part of the code of
+the Library into a program that is not a library.
+
+  4. You may copy and distribute the Library (or a portion or
+derivative of it, under Section 2) in object code or executable form
+under the terms of Sections 1 and 2 above provided that you accompany
+it with the complete corresponding machine-readable source code, which
+must be distributed under the terms of Sections 1 and 2 above on a
+medium customarily used for software interchange.
+
+  If distribution of object code is made by offering access to copy
+from a designated place, then offering equivalent access to copy the
+source code from the same place satisfies the requirement to
+distribute the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  5. A program that contains no derivative of any portion of the
+Library, but is designed to work with the Library by being compiled or
+linked with it, is called a "work that uses the Library".  Such a
+work, in isolation, is not a derivative work of the Library, and
+therefore falls outside the scope of this License.
+
+  However, linking a "work that uses the Library" with the Library
+creates an executable that is a derivative of the Library (because it
+contains portions of the Library), rather than a "work that uses the
+library".  The executable is therefore covered by this License.
+Section 6 states terms for distribution of such executables.
+
+  When a "work that uses the Library" uses material from a header file
+that is part of the Library, the object code for the work may be a
+derivative work of the Library even though the source code is not.
+Whether this is true is especially significant if the work can be
+linked without the Library, or if the work is itself a library.  The
+threshold for this to be true is not precisely defined by law.
+
+  If such an object file uses only numerical parameters, data
+structure layouts and accessors, and small macros and small inline
+functions (ten lines or less in length), then the use of the object
+file is unrestricted, regardless of whether it is legally a derivative
+work.  (Executables containing this object code plus portions of the
+Library will still fall under Section 6.)
+
+  Otherwise, if the work is a derivative of the Library, you may
+distribute the object code for the work under the terms of Section 6.
+Any executables containing that work also fall under Section 6,
+whether or not they are linked directly with the Library itself.
+
+  6. As an exception to the Sections above, you may also combine or
+link a "work that uses the Library" with the Library to produce a
+work containing portions of the Library, and distribute that work
+under terms of your choice, provided that the terms permit
+modification of the work for the customer's own use and reverse
+engineering for debugging such modifications.
+
+  You must give prominent notice with each copy of the work that the
+Library is used in it and that the Library and its use are covered by
+this License.  You must supply a copy of this License.  If the work
+during execution displays copyright notices, you must include the
+copyright notice for the Library among them, as well as a reference
+directing the user to the copy of this License.  Also, you must do one
+of these things:
+
+    a) Accompany the work with the complete corresponding
+    machine-readable source code for the Library including whatever
+    changes were used in the work (which must be distributed under
+    Sections 1 and 2 above); and, if the work is an executable linked
+    with the Library, with the complete machine-readable "work that
+    uses the Library", as object code and/or source code, so that the
+    user can modify the Library and then relink to produce a modified
+    executable containing the modified Library.  (It is understood
+    that the user who changes the contents of definitions files in the
+    Library will not necessarily be able to recompile the application
+    to use the modified definitions.)
+
+    b) Use a suitable shared library mechanism for linking with the
+    Library.  A suitable mechanism is one that (1) uses at run time a
+    copy of the library already present on the user's computer system,
+    rather than copying library functions into the executable, and (2)
+    will operate properly with a modified version of the library, if
+    the user installs one, as long as the modified version is
+    interface-compatible with the version that the work was made with.
+
+    c) Accompany the work with a written offer, valid for at
+    least three years, to give the same user the materials
+    specified in Subsection 6a, above, for a charge no more
+    than the cost of performing this distribution.
+
+    d) If distribution of the work is made by offering access to copy
+    from a designated place, offer equivalent access to copy the above
+    specified materials from the same place.
+
+    e) Verify that the user has already received a copy of these
+    materials or that you have already sent this user a copy.
+
+  For an executable, the required form of the "work that uses the
+Library" must include any data and utility programs needed for
+reproducing the executable from it.  However, as a special exception,
+the materials to be distributed need not include anything that is
+normally distributed (in either source or binary form) with the major
+components (compiler, kernel, and so on) of the operating system on
+which the executable runs, unless that component itself accompanies
+the executable.
+
+  It may happen that this requirement contradicts the license
+restrictions of other proprietary libraries that do not normally
+accompany the operating system.  Such a contradiction means you cannot
+use both them and the Library together in an executable that you
+distribute.
+
+  7. You may place library facilities that are a work based on the
+Library side-by-side in a single library together with other library
+facilities not covered by this License, and distribute such a combined
+library, provided that the separate distribution of the work based on
+the Library and of the other library facilities is otherwise
+permitted, and provided that you do these two things:
+
+    a) Accompany the combined library with a copy of the same work
+    based on the Library, uncombined with any other library
+    facilities.  This must be distributed under the terms of the
+    Sections above.
+
+    b) Give prominent notice with the combined library of the fact
+    that part of it is a work based on the Library, and explaining
+    where to find the accompanying uncombined form of the same work.
+
+  8. You may not copy, modify, sublicense, link with, or distribute
+the Library except as expressly provided under this License.  Any
+attempt otherwise to copy, modify, sublicense, link with, or
+distribute the Library is void, and will automatically terminate your
+rights under this License.  However, parties who have received copies,
+or rights, from you under this License will not have their licenses
+terminated so long as such parties remain in full compliance.
+
+  9. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Library or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Library (or any work based on the
+Library), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Library or works based on it.
+
+  10. Each time you redistribute the Library (or any work based on the
+Library), the recipient automatically receives a license from the
+original licensor to copy, distribute, link with or modify the Library
+subject to these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties with
+this License.
+
+  11. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Library at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Library by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Library.
+
+If any portion of this section is held invalid or unenforceable under any
+particular circumstance, the balance of the section is intended to apply,
+and the section as a whole is intended to apply in other circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  12. If the distribution and/or use of the Library is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Library under this License may add
+an explicit geographical distribution limitation excluding those countries,
+so that distribution is permitted only in or among countries not thus
+excluded.  In such case, this License incorporates the limitation as if
+written in the body of this License.
+
+  13. The Free Software Foundation may publish revised and/or new
+versions of the Lesser General Public License from time to time.
+Such new versions will be similar in spirit to the present version,
+but may differ in detail to address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Library
+specifies a version number of this License which applies to it and
+"any later version", you have the option of following the terms and
+conditions either of that version or of any later version published by
+the Free Software Foundation.  If the Library does not specify a
+license version number, you may choose any version ever published by
+the Free Software Foundation.
+
+  14. If you wish to incorporate parts of the Library into other free
+programs whose distribution conditions are incompatible with these,
+write to the author to ask for permission.  For software which is
+copyrighted by the Free Software Foundation, write to the Free
+Software Foundation; we sometimes make exceptions for this.  Our
+decision will be guided by the two goals of preserving the free status
+of all derivatives of our free software and of promoting the sharing
+and reuse of software generally.
+
+			    NO WARRANTY
+
+  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO
+WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
+EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
+OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY
+KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
+LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME
+THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
+WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
+AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU
+FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
+CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
+LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
+RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
+FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
+SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
+DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
+           How to Apply These Terms to Your New Libraries
+
+  If you develop a new library, and you want it to be of the greatest
+possible use to the public, we recommend making it free software that
+everyone can redistribute and change.  You can do so by permitting
+redistribution under these terms (or, alternatively, under the terms of the
+ordinary General Public License).
+
+  To apply these terms, attach the following notices to the library.  It is
+safest to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least the
+"copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the library's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library; if not, write to the Free Software
+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+Also add information on how to contact you by electronic and paper mail.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the library, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the
+  library `Frob' (a library for tweaking knobs) written by James Random Hacker.
+
+  <signature of Ty Coon>, 1 April 1990
+  Ty Coon, President of Vice
+
+That's all there is to it!
+
+

Added: XoopsCore/trunk/htdocs/class/mail/phpmailer/README
===================================================================
--- XoopsCore/trunk/htdocs/class/mail/phpmailer/README	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/mail/phpmailer/README	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,85 @@
+phpmailer - PHP email class
+==============================
+http://phpmailer.sourceforge.net
+
+Please read LICENSE for information on this softwares availability and
+distribution.
+
+Class Features:
+- Send emails with multiple TOs, CCs, BCCs and REPLY-TOs
+- Redundant SMTP servers
+- Multipart/alternative emails for mail clients that do not read HTML email
+- Support for 8bit, base64, binary, and quoted-printable encoding
+- Uses the same methods as the very popular AspEmail active server (COM) component
+- SMTP authentication
+- Word wrap
+- Many more...
+
+Why you might need it:
+
+Many PHP developers utilize email in their code.  The only PHP function
+that supports this is the mail() function.  However, it does not expose
+any of the popular features that many email clients use nowadays like
+HTML-based emails and attachments. There are two proprietary
+development tools out there that have all the functionality built into
+easy to use classes: AspEmail(tm) and AspMail.  Both of these
+programs are COM components only available on Windows.  They are also a
+little pricey for smaller projects.
+
+Since I do Linux development I?ve missed these tools for my PHP coding.
+So I built a version myself that implements the same methods (object
+calls) that the Windows-based components do. It is open source and the
+LGPL license allows you to place the class in your proprietary PHP
+projects.
+
+
+Installation:
+
+Copy class.phpmailer.php into your php.ini include_path. If you are
+using the SMTP mailer then place class.smtp.php in your path as well.
+
+Example
+
+<?php
+require("class.phpmailer.php");
+
+$mail = new phpmailer();
+
+$mail->IsSMTP();                                      // set mailer to use SMTP
+$mail->Host = "smtp1.example.com;smtp2.example.com";  // specify main and backup server
+$mail->SMTPAuth = true     // turn on SMTP authentication
+$mail->Username = "jswan"  // SMTP username
+$mail->Password = "secret" // SMTP password
+
+$mail->From = "from at example.com";
+$mail->FromName = "Mailer";
+$mail->AddAddress("josh at example.net", "Josh Adams");
+$mail->AddAddress("ellen at example.com");                  // name is optional
+$mail->AddReplyTo("info at example.com", "Information");
+
+$mail->WordWrap = 50;                                 // set word wrap to 50 characters
+$mail->AddAttachment("/var/tmp/file.tar.gz");         // add attachments
+$mail->AddAttachment("/tmp/image.jpg", "new.jpg");    // optional name
+$mail->IsHTML(true);                                  // set email format to HTML
+
+$mail->Subject = "Here is the subject";
+$mail->Body    = "This is the HTML message body <b>in bold!</b>";
+$mail->AltBody = "This is the body in plain text for non-HTML mail clients";
+
+if(!$mail->Send())
+{
+   echo "Message could not be sent. <p>";
+   echo "Mailer Error: " . $mail->ErrorInfo;
+   exit;
+}
+
+echo "Message has been sent";
+?>
+
+CHANGELOG
+
+See ChangeLog.txt
+
+Download: http://sourceforge.net/project/showfiles.php?group_id=26031
+
+Brent R. Matzelle <bmatzelle at yahoo.com>

Added: XoopsCore/trunk/htdocs/class/mail/phpmailer/class.phpmailer.php
===================================================================
--- XoopsCore/trunk/htdocs/class/mail/phpmailer/class.phpmailer.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/mail/phpmailer/class.phpmailer.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,1779 @@
+<?php
+////////////////////////////////////////////////////
+// phpmailer - PHP email class
+//
+// Version 1.65, Created 08/09/2002
+//
+// Class for sending email using either
+// sendmail, PHP mail(), or SMTP.  Methods are
+// based upon the standard AspEmail(tm) classes.
+//
+// Author: Brent R. Matzelle <bmatzelle at yahoo.com>
+//
+// License: LGPL, see LICENSE
+////////////////////////////////////////////////////
+
+/**
+ * phpmailer - PHP email transport class
+ * @author Brent R. Matzelle
+ */
+class phpmailer
+{
+    /////////////////////////////////////////////////
+    // PUBLIC VARIABLES
+    /////////////////////////////////////////////////
+
+    /**
+     * Email priority (1 = High, 3 = Normal, 5 = low).
+     * @access public
+     * @var int
+     */
+    var $Priority          = 3;
+
+    /**
+     * Sets the CharSet of the message.
+     * @access public
+     * @var string
+     */
+    var $CharSet           = "iso-8859-1";
+
+    /**
+     * Sets the Content-type of the message.
+     * @access public
+     * @var string
+     */
+    var $ContentType        = "text/plain";
+
+    /**
+     * Sets the Encoding of the message. Options for this are "8bit",
+     * "7bit", "binary", "base64", and "quoted-printable".
+     * @access public
+     * @var string
+     */
+    var $Encoding          = "8bit";
+
+    /**
+     * Holds the most recent mailer error message.
+     * @access public
+     * @var string
+     */
+    var $ErrorInfo         = "";
+
+    /**
+     * Sets the From email address for the message.
+     * @access public
+     * @var string
+     */
+    var $From               = "root at localhost";
+
+    /**
+     * Sets the From name of the message.
+     * @access public
+     * @var string
+     */
+    var $FromName           = "Root User";
+
+    /**
+     * Sets the Sender email of the message. If not empty, will be sent via -f to sendmail
+     * or as 'MAIL FROM' in smtp mode.
+     * @access public
+     * @var string
+     */
+    var $Sender            = "";
+
+    /**
+     * Sets the Subject of the message.
+     * @access public
+     * @var string
+     */
+    var $Subject           = "";
+
+    /**
+     * Sets the Body of the message.  This can be either an HTML or text body.
+     * If HTML then run IsHTML(true).
+     * @access public
+     * @var string
+     */
+    var $Body               = "";
+
+    /**
+     * Sets the text-only body of the message.  This automatically sets the
+     * email to multipart/alternative.  This body can be read by mail
+     * clients that do not have HTML email capability such as mutt. Clients
+     * that can read HTML will view the normal Body.
+     * @access public
+     * @var string
+     */
+    var $AltBody           = "";
+
+    /**
+     * Sets word wrapping on the body of the message to a given number of 
+     * characters.
+     * @access public
+     * @var int
+     */
+    var $WordWrap          = 0;
+
+    /**
+     * Method to send mail: ("mail", "sendmail", or "smtp").
+     * @access public
+     * @var string
+     */
+    var $Mailer            = "mail";
+
+    /**
+     * Sets the path of the sendmail program.
+     * @access public
+     * @var string
+     */
+    var $Sendmail          = "/usr/sbin/sendmail";
+
+    /**
+     *  Turns Microsoft mail client headers on and off.  Useful mostly
+     *  for older clients.
+     *  @access public
+     *  @var bool
+     */
+    var $UseMSMailHeaders = false;
+    
+    /**
+     * Path to phpmailer plugins.  This is now only useful if the SMTP class 
+     * is in a different directory than the PHP include path.  
+     * @access public
+     * @var string
+     */
+    var $PluginDir         = "";
+
+    /**
+     *  Holds phpmailer version.
+     *  @access public
+     *  @var string
+     */
+    var $Version           = "1.65";
+
+    /**
+     * Sets the email address that a reading confirmation will be sent.
+     * @access public
+     * @var string
+     */
+    var $ConfirmReadingTo  = "";
+
+    /**
+     *  Sets the line endings of the message.
+     *  @access public
+     *  @var string
+     */
+    var $LE           = "\n";
+
+    /**
+     *  Sets the hostname to use in Message-Id and Received headers
+     *  and as default HELO string. If empty, the value returned
+     *  by SERVER_NAME is used or 'localhost.localdomain'.
+     *  @access public
+     *  @var string
+     */
+    var $Hostname          = "";
+
+
+    /////////////////////////////////////////////////
+    // SMTP VARIABLES
+    /////////////////////////////////////////////////
+
+    /**
+     *  Sets the SMTP hosts.  All hosts must be separated by a
+     *  semicolon.  You can also specify a different port
+     *  for each host by using this format: [hostname:port]
+     *  (e.g. "smtp1.example.com:25;smtp2.example.com").
+     *  Hosts will be tried in order.
+     *  @access public
+     *  @var string
+     */
+    var $Host        = "localhost";
+
+    /**
+     *  Sets the default SMTP server port.
+     *  @access public
+     *  @var int
+     */
+    var $Port        = 25;
+
+    /**
+     *  Sets the SMTP HELO of the message (Default is $Hostname).
+     *  @access public
+     *  @var string
+     */
+    var $Helo        = "";
+
+    /**
+     *  Sets SMTP authentication. Utilizes the Username and Password variables.
+     *  @access public
+     *  @var bool
+     */
+    var $SMTPAuth     = false;
+
+    /**
+     *  Sets SMTP username.
+     *  @access public
+     *  @var string
+     */
+    var $Username     = "";
+
+    /**
+     *  Sets SMTP password.
+     *  @access public
+     *  @var string
+     */
+    var $Password     = "";
+
+    /**
+     *  Sets the SMTP server timeout in seconds. This function will not 
+     *  work with the win32 version.
+     *  @access public
+     *  @var int
+     */
+    var $Timeout      = 10;
+
+    /**
+     *  Sets SMTP class debugging on or off.
+     *  @access public
+     *  @var bool
+     */
+    var $SMTPDebug    = false;
+
+
+    /////////////////////////////////////////////////
+    // PRIVATE VARIABLES
+    /////////////////////////////////////////////////
+
+    /**
+     *  Holds all "To" addresses.
+     *  @access private
+     *  @var array
+     */
+    var $to              = array();
+
+    /**
+     *  Holds all "CC" addresses.
+     *  @access private
+     *  @var array
+     */
+    var $cc              = array();
+
+    /**
+     *  Holds all "BCC" addresses.
+     *  @access private
+     *  @var array
+     */
+    var $bcc             = array();
+
+    /**
+     *  Holds all "Reply-To" addresses.
+     *  @var array
+     */
+    var $ReplyTo         = array();
+
+    /**
+     *  Holds all string and binary attachments.
+     *  @access private
+     *  @var array
+     */
+    var $attachment      = array();
+
+    /**
+     *  Holds all custom headers.
+     *  @var array
+     */
+    var $CustomHeader    = array();
+
+    /**
+     *  Holds the type of the message.
+     *  @var string
+     */
+    var $message_type    = "";
+
+    /**
+     *  Holds the message boundaries.
+     *  @access private
+     *  @var string array
+     */
+    var $boundary        = array();
+
+    /////////////////////////////////////////////////
+    // VARIABLE METHODS
+    /////////////////////////////////////////////////
+
+    /**
+     * Sets message type to HTML.  Returns void.
+     * @access public
+     * @return void
+     */
+    function IsHTML($bool) {
+        if($bool == true)
+            $this->ContentType = "text/html";
+        else
+            $this->ContentType = "text/plain";
+    }
+
+    /**
+     * Sets Mailer to send message using SMTP.
+     * Returns void.
+     * @access public
+     * @return void
+     */
+    function IsSMTP() {
+        $this->Mailer = "smtp";
+    }
+
+    /**
+     * Sets Mailer to send message using PHP mail() function.
+     * Returns void.
+     * @access public
+     * @return void
+     */
+    function IsMail() {
+        $this->Mailer = "mail";
+    }
+
+    /**
+     * Sets Mailer to send message using the $Sendmail program.
+     * Returns void.
+     * @access public
+     * @return void
+     */
+    function IsSendmail() {
+        $this->Mailer = "sendmail";
+    }
+
+    /**
+     * Sets Mailer to send message using the qmail MTA.  Returns void.
+     * @access public
+     * @return void
+     */
+    function IsQmail() {
+        //$this->Sendmail = "/var/qmail/bin/qmail-inject";
+        $this->Sendmail = "/var/qmail/bin/sendmail";
+        $this->Mailer = "sendmail";
+    }
+
+
+    /////////////////////////////////////////////////
+    // RECIPIENT METHODS
+    /////////////////////////////////////////////////
+
+    /**
+     * Adds a "To" address.  Returns void.
+     * @access public
+     * @return void
+     */
+    function AddAddress($address, $name = "") {
+        $cur = count($this->to);
+        $this->to[$cur][0] = trim($address);
+        $this->to[$cur][1] = $name;
+    }
+
+    /**
+     * Adds a "Cc" address. Note: this function works
+     * with the SMTP mailer on win32, not with the "mail"
+     * mailer.  This is a PHP bug that has been submitted
+     * on http://bugs.php.net. The *NIX version of PHP
+     * functions correctly. Returns void.
+     * @access public
+     * @return void
+    */
+    function AddCC($address, $name = "") {
+        $cur = count($this->cc);
+        $this->cc[$cur][0] = trim($address);
+        $this->cc[$cur][1] = $name;
+    }
+
+    /**
+     * Adds a "Bcc" address. Note: this function works
+     * with the SMTP mailer on win32, not with the "mail"
+     * mailer.  This is a PHP bug that has been submitted
+     * on http://bugs.php.net. The *NIX version of PHP
+     * functions correctly.
+     * Returns void.
+     * @access public
+     * @return void
+     */
+    function AddBCC($address, $name = "") {
+        $cur = count($this->bcc);
+        $this->bcc[$cur][0] = trim($address);
+        $this->bcc[$cur][1] = $name;
+    }
+
+    /**
+     * Adds a "Reply-to" address.  Returns void.
+     * @access public
+     * @return void
+     */
+    function AddReplyTo($address, $name = "") {
+        $cur = count($this->ReplyTo);
+        $this->ReplyTo[$cur][0] = trim($address);
+        $this->ReplyTo[$cur][1] = $name;
+    }
+
+
+    /////////////////////////////////////////////////
+    // MAIL SENDING METHODS
+    /////////////////////////////////////////////////
+
+    /**
+     * Creates message and assigns Mailer. If the message is
+     * not sent successfully then it returns false.  Use the ErrorInfo
+     * variable to view description of the error.  Returns bool.
+     * @access public
+     * @return bool
+     */
+    function Send() {
+        $header = "";
+        $body = "";
+
+        if((count($this->to) + count($this->cc) + count($this->bcc)) < 1)
+        {
+            $this->error_handler("You must provide at least one recipient email address");
+            return false;
+        }
+
+        // Set whether the message is multipart/alternative
+        if(!empty($this->AltBody))
+            $this->ContentType = "multipart/alternative";
+
+        // Attach sender information & date
+        $header = $this->received();
+        $header .= sprintf("Date: %s%s", $this->rfc_date(), $this->LE);
+        $header .= $this->create_header();
+
+        if(!$body = $this->create_body())
+            return false;
+
+        //echo "<pre>".$header . $body . "</pre>"; // debugging
+
+        // Choose the mailer
+        if($this->Mailer == "sendmail")
+        {
+          if(!$this->sendmail_send($header, $body))
+              return false;
+        }
+        elseif($this->Mailer == "mail")
+        {
+          if(!$this->mail_send($header, $body))
+              return false;
+        }
+        elseif($this->Mailer == "smtp")
+        {
+          if(!$this->smtp_send($header, $body))
+              return false;
+        }
+        else
+        {
+            $this->error_handler(sprintf("%s mailer is not supported", $this->Mailer));
+            return false;
+        }
+
+        return true;
+    }
+    
+    /**
+     * Sends mail message to an assigned queue directory.  Has an optional 
+     * sendTime argument.  This is used when the user wants the 
+     * message to be sent from the queue at a predetermined time. 
+     * The data must be a valid timestamp like that returned from 
+     * the time() or strtotime() functions.  Returns false on failure 
+     * or the message file name if success.
+     * @access public
+     * @return string
+     */
+    function SendToQueue($queue_path, $send_time = 0) {
+        $message = array();
+        $header = "";
+        $body = "";
+        
+        // If invalid or empty just set to the current time
+        if($send_time == 0)
+            $send_time = time();
+        
+        if(!is_dir($queue_path))
+        {
+            $this->error_handler("The supplied queue directory does not exist");
+            return false;
+        }
+
+        if((count($this->to) + count($this->cc) + count($this->bcc)) < 1)
+        {
+            $this->error_handler("You must provide at least one recipient email address");
+            return false;
+        }
+
+        // Set whether the message is multipart/alternative
+        if(!empty($this->AltBody))
+            $this->ContentType = "multipart/alternative";
+
+        $header = $this->create_header();
+        if(!$body = $this->create_body())
+            return false;
+
+        // Seed randomizer
+        mt_srand(time());
+        $msg_id = md5(uniqid(mt_rand()));
+        
+        $fp = @fopen($queue_path . $msg_id . ".pqm", "wb");
+        if(!$fp)
+        {
+            $this->error_handler(sprintf("Could not write to %s directory", $queue_path));
+            return false;
+        }
+       
+        $message[] = sprintf("----START PQM HEADER----%s", $this->LE);
+        $message[] = sprintf("SendTime: %s%s", $send_time, $this->LE);
+        $message[] = sprintf("Mailer: %s%s", $this->Mailer, $this->LE);
+
+        // Choose the mailer
+        if($this->Mailer == "sendmail")
+        {
+            $message[] = sprintf("Sendmail: %s%s", $this->Sendmail, $this->LE);
+            $message[] = sprintf("Sender: %s%s", $this->Sender, $this->LE);
+        }
+        elseif($this->Mailer == "mail")
+        {
+            $message[] = sprintf("Sender: %s%s", $this->Sender, $this->LE);
+            $message[] = sprintf("Subject: %s%s", $this->Subject, $this->LE);
+            $message[] = sprintf("to: %s%s", $this->addr_list($this->to), $this->LE);
+        }
+        elseif($this->Mailer == "smtp")
+        {
+            $message[] = sprintf("Host: %s%s", $this->Host, $this->LE);
+            $message[] = sprintf("Port: %d%s", $this->Port, $this->LE);
+            $message[] = sprintf("Helo: %s%s", $this->Helo, $this->LE);
+            $message[] = sprintf("Timeout: %d%s", $this->Timeout, $this->LE);
+            
+            if($this->SMTPAuth)
+                $auth_no = 1;
+            else
+                $auth_no = 0;
+            $message[] = sprintf("SMTPAuth: %d%s", $auth_no, $this->LE);
+            $message[] = sprintf("Username: %s%s", $this->Username, $this->LE);
+            $message[] = sprintf("Password: %s%s", $this->Password, $this->LE);
+            $message[] = sprintf("From: %s%s", $this->From, $this->LE);
+
+            $message[] = sprintf("to: %s%s", $this->addr_list($this->to), $this->LE);
+            $message[] = sprintf("cc: %s%s", $this->addr_list($this->cc), $this->LE);
+            $message[] = sprintf("bcc: %s%s", $this->addr_list($this->bcc), $this->LE);
+        }
+        else
+        {
+            $this->error_handler(sprintf("%s mailer is not supported", $this->Mailer));
+            return false;
+        }
+
+        $message[] = sprintf("----END PQM HEADER----%s", $this->LE); // end of pqm header        
+        $message[] = $header;
+        $message[] = $body;
+       
+        if(fwrite($fp, join("", $message)) == -1)
+        {
+            $this->error_handler("Write to file failed");
+            return false;
+        }
+        fclose($fp);
+
+        return ($msg_id . ".pqm");
+    }
+
+    /**
+     * Sends mail using the $Sendmail program.  Returns bool.
+     * @access private
+     * @return bool
+     */
+    function sendmail_send($header, $body) {
+        if ($this->Sender != "")
+            $sendmail = sprintf("%s -oi -f %s -t", $this->Sendmail, $this->Sender);
+        else
+            $sendmail = sprintf("%s -oi -t", $this->Sendmail);
+
+        if(!@$mail = popen($sendmail, "w"))
+        {
+            $this->error_handler(sprintf("Could not execute %s", $this->Sendmail));
+            return false;
+        }
+
+        fputs($mail, $header);
+        fputs($mail, $body);
+        
+        $result = pclose($mail) >> 8 & 0xFF;
+        if($result != 0)
+        {
+            $this->error_handler(sprintf("Could not execute %s", $this->Sendmail));
+            return false;
+        }
+
+        return true;
+    }
+
+    /**
+     * Sends mail using the PHP mail() function.  Returns bool.
+     * @access private
+     * @return bool
+     */
+    function mail_send($header, $body) {
+        //$to = substr($this->addr_append("To", $this->to), 4, -2);
+
+        // Cannot add Bcc's to the $to
+        $to = $this->to[0][0]; // no extra comma
+        for($i = 1; $i < count($this->to); $i++)
+            $to .= sprintf(",%s", $this->to[$i][0]);
+
+        if ($this->Sender != "" && PHP_VERSION >= "4.0")
+        {
+            $old_from = ini_get("sendmail_from");
+            ini_set("sendmail_from", $this->Sender);
+        }
+
+        if ($this->Sender != "" && PHP_VERSION >= "4.0.5")
+        {
+            // The fifth parameter to mail is only available in PHP >= 4.0.5
+            $params = sprintf("-oi -f %s", $this->Sender);
+            $rt = @mail($to, $this->encode_header($this->Subject), $body, $header, $params);
+        }
+        else
+        {
+            $rt = @mail($to, $this->encode_header($this->Subject), $body, $header);
+        }
+
+        if (isset($old_from))
+            ini_set("sendmail_from", $old_from);
+
+        if(!$rt)
+        {
+            $this->error_handler("Could not instantiate mail()");
+            return false;
+        }
+
+        return true;
+    }
+
+    /**
+     * Sends mail via SMTP using PhpSMTP (Author:
+     * Chris Ryan).  Returns bool.  Returns false if there is a
+     * bad MAIL FROM, RCPT, or DATA input.
+     * @access private
+     * @return bool
+     */
+    function smtp_send($header, $body) {
+        // Include SMTP class code, but not twice
+        include_once($this->PluginDir . "class.smtp.php");
+
+        $smtp = new SMTP;
+
+        $smtp->do_debug = $this->SMTPDebug;
+
+        // Try to connect to all SMTP servers
+        $hosts = explode(";", $this->Host);
+        $index = 0;
+        $connection = false;
+        $smtp_from = "";
+        $bad_rcpt = array();
+        $e = "";
+
+        // Retry while there is no connection
+        while($index < count($hosts) && $connection == false)
+        {
+            if(strstr($hosts[$index], ":"))
+                list($host, $port) = explode(":", $hosts[$index]);
+            else
+            {
+                $host = $hosts[$index];
+                $port = $this->Port;
+            }
+
+            if($smtp->Connect($host, $port, $this->Timeout))
+                $connection = true;
+            //printf("%s host could not connect<br>", $hosts[$index]); //debug only
+            $index++;
+        }
+        if(!$connection)
+        {
+            $this->error_handler("SMTP Error: could not connect to SMTP host server(s)");
+            return false;
+        }
+
+        // Must perform HELO before authentication
+	if ($this->Helo != '')
+            $smtp->Hello($this->Helo);
+        else
+            $smtp->Hello($this->get_server_hostname());
+
+        // If user requests SMTP authentication
+        if($this->SMTPAuth)
+        {
+            if(!$smtp->Authenticate($this->Username, $this->Password))
+            {
+                $this->error_handler("SMTP Error: Could not authenticate");
+                return false;
+            }
+        }
+
+        if ($this->Sender == "")
+            $smtp_from = $this->From;
+        else
+            $smtp_from = $this->Sender;
+
+        if(!$smtp->Mail(sprintf("<%s>", $smtp_from)))
+        {
+            $e = sprintf("SMTP Error: From address [%s] failed", $smtp_from);
+            $this->error_handler($e);
+            return false;
+        }
+
+        // Attempt to send attach all recipients
+        for($i = 0; $i < count($this->to); $i++)
+        {
+            if(!$smtp->Recipient(sprintf("<%s>", $this->to[$i][0])))
+                $bad_rcpt[] = $this->to[$i][0];
+        }
+        for($i = 0; $i < count($this->cc); $i++)
+        {
+            if(!$smtp->Recipient(sprintf("<%s>", $this->cc[$i][0])))
+                $bad_rcpt[] = $this->cc[$i][0];
+        }
+        for($i = 0; $i < count($this->bcc); $i++)
+        {
+            if(!$smtp->Recipient(sprintf("<%s>", $this->bcc[$i][0])))
+                $bad_rcpt[] = $this->bcc[$i][0];
+        }
+
+        // Create error message
+        if(count($bad_rcpt) > 0)
+        {
+            for($i = 0; $i < count($bad_rcpt); $i++)
+            {
+                if($i != 0)
+                    $e .= ", ";
+                $e .= $bad_rcpt[$i];
+            }
+            $e = sprintf("SMTP Error: The following recipients failed [%s]", $e);
+            $this->error_handler($e);
+
+            return false;
+        }
+
+
+        if(!$smtp->Data(sprintf("%s%s", $header, $body)))
+        {
+            $this->error_handler("SMTP Error: Data not accepted");
+            return false;
+        }
+        $smtp->Quit();
+        $smtp->Close();
+
+        return true;
+    }
+
+
+    /////////////////////////////////////////////////
+    // MESSAGE CREATION METHODS
+    /////////////////////////////////////////////////
+
+    /**
+     * Creates recipient headers.  Returns string.
+     * @access private
+     * @return string
+     */
+    function addr_append($type, $addr) {
+        $addr_str = $type . ": ";
+        $addr_str .= $this->addr_format($addr[0]);
+        if(count($addr) > 1)
+        {
+            for($i = 1; $i < count($addr); $i++)
+            {
+                $addr_str .= sprintf(", %s", $this->addr_format($addr[$i]));
+            }
+            $addr_str .= $this->LE;
+        }
+        else
+            $addr_str .= $this->LE;
+
+        return($addr_str);
+    }
+    
+    /**
+     * Creates a semicolon delimited list for use in pqm files.
+     * @access private
+     * @return string
+     */
+    function addr_list($list_array) {
+        $addr_list = "";
+        for($i = 0; $i < count($list_array); $i++)
+        {
+            if($i > 0)
+                $addr_list .= ";";
+            $addr_list .= $list_array[$i][0];
+        }
+        
+        return $addr_list;
+    }
+    
+    /**
+     * Formats an address correctly. 
+     * @access private
+     * @return string
+     */
+    function addr_format($addr) {
+        if(empty($addr[1]))
+            $formatted = $addr[0];
+        else
+            $formatted = sprintf('%s <%s>', $this->encode_header($addr[1], 'phrase'), $addr[0]);
+
+        return $formatted;
+    }
+
+    /**
+     * Wraps message for use with mailers that do not
+     * automatically perform wrapping and for quoted-printable.
+     * Original written by philippe.  Returns string.
+     * @access private
+     * @return string
+     */
+    function word_wrap($message, $length, $qp_mode = false) {
+        if ($qp_mode)
+        $soft_break = sprintf(" =%s", $this->LE);
+        else
+        $soft_break = $this->LE;
+
+        $message = $this->fix_eol($message);
+        if (substr($message, -1) == $this->LE)
+        $message = substr($message, 0, -1);
+
+        $line = explode($this->LE, $message);
+        $message = "";
+        for ($i=0 ;$i < count($line); $i++)
+        {
+          $line_part = explode(" ", $line[$i]);
+          $buf = "";
+          for ($e = 0; $e<count($line_part); $e++)
+          {
+              $word = $line_part[$e];
+              if ($qp_mode and (strlen($word) > $length))
+              {
+                $space_left = $length - strlen($buf) - 1;
+                if ($e != 0)
+                {
+                    if ($space_left > 20)
+                    {
+                        $len = $space_left;
+                        if (substr($word, $len - 1, 1) == "=")
+                          $len--;
+                        elseif (substr($word, $len - 2, 1) == "=")
+                          $len -= 2;
+                        $part = substr($word, 0, $len);
+                        $word = substr($word, $len);
+                        $buf .= " " . $part;
+                        $message .= $buf . sprintf("=%s", $this->LE);
+                    }
+                    else
+                    {
+                        $message .= $buf . $soft_break;
+                    }
+                    $buf = "";
+                }
+                while (strlen($word) > 0)
+                {
+                    $len = $length;
+                    if (substr($word, $len - 1, 1) == "=")
+                        $len--;
+                    elseif (substr($word, $len - 2, 1) == "=")
+                        $len -= 2;
+                    $part = substr($word, 0, $len);
+                    $word = substr($word, $len);
+
+                    if (strlen($word) > 0)
+                        $message .= $part . sprintf("=%s", $this->LE);
+                    else
+                        $buf = $part;
+                }
+              }
+              else
+              {
+                $buf_o = $buf;
+                if ($e == 0)
+                    $buf .= $word;
+                else
+                    $buf .= " " . $word;
+                if (strlen($buf) > $length and $buf_o != "")
+                {
+                    $message .= $buf_o . $soft_break;
+                    $buf = $word;
+                }
+              }
+          }
+          $message .= $buf . $this->LE;
+        }
+
+        return ($message);
+    }
+    
+    /**
+     * Set the body wrapping.
+     * @access private
+     * @return void
+     */
+    function SetWordWrap() {
+        if($this->WordWrap < 1)
+            return;
+            
+        switch($this->message_type)
+        {
+           case "alt":
+           case "alt_attachment":
+              $this->AltBody = $this->word_wrap($this->AltBody, $this->WordWrap);
+              break;
+           default:
+              $this->Body = $this->word_wrap($this->Body, $this->WordWrap);
+              break;
+        }
+    }
+
+    /**
+     * Assembles message header.  Returns a string if successful
+     * or false if unsuccessful.
+     * @access private
+     * @return string
+     */
+    function create_header() {
+        $header = array();
+        
+        // Set the boundaries
+        $uniq_id = md5(uniqid(time()));
+        $this->boundary[1] = "b1_" . $uniq_id;
+        $this->boundary[2] = "b2_" . $uniq_id;
+
+        // To be created automatically by mail()
+        if($this->Mailer != "mail")
+        {
+            if(count($this->to) > 0)
+                $header[] = $this->addr_append("To", $this->to);
+            else if (count($this->cc) == 0)
+                $header[] = "To: undisclosed-recipients:;".$this->LE;
+        }
+
+        $from = array();
+        $from[0][0] = trim($this->From);
+        $from[0][1] = $this->FromName;
+        $header[] = $this->addr_append("From", $from); 
+
+        if(count($this->cc) > 0)
+            $header[] = $this->addr_append("Cc", $this->cc);
+
+        // sendmail and mail() extract Bcc from the header before sending
+        if((($this->Mailer == "sendmail") || ($this->Mailer == "mail")) && (count($this->bcc) > 0))
+            $header[] = $this->addr_append("Bcc", $this->bcc);
+
+        if(count($this->ReplyTo) > 0)
+            $header[] = $this->addr_append("Reply-to", $this->ReplyTo);
+
+        // mail() sets the subject itself
+        if($this->Mailer != "mail")
+            $header[] = sprintf("Subject: %s%s", $this->encode_header(trim($this->Subject)), $this->LE);
+
+        $header[] = sprintf("Message-ID: <%s@%s>%s", $uniq_id, $this->get_server_hostname(), $this->LE);
+        $header[] = sprintf("X-Priority: %d%s", $this->Priority, $this->LE);
+        $header[] = sprintf("X-Mailer: phpmailer [version %s]%s", $this->Version, $this->LE);
+        if($this->Sender == "")
+            $header[] = sprintf("Return-Path: %s%s", trim($this->From), $this->LE);
+        else
+            $header[] = sprintf("Return-Path: %s%s", trim($this->Sender), $this->LE);
+        
+        if($this->ConfirmReadingTo != "")
+            $header[] = sprintf("Disposition-Notification-To: <%s>%s", 
+                            trim($this->ConfirmReadingTo), $this->LE);
+
+        // Add custom headers
+        for($index = 0; $index < count($this->CustomHeader); $index++)
+            $header[] = sprintf("%s: %s%s", trim($this->CustomHeader[$index][0]), $this->encode_header(trim($this->CustomHeader[$index][1])), $this->LE);
+
+        if($this->UseMSMailHeaders)
+            $header[] = $this->AddMSMailHeaders();
+
+        $header[] = sprintf("MIME-Version: 1.0%s", $this->LE);
+
+        // Determine what type of message this is        
+        if(count($this->attachment) < 1 && strlen($this->AltBody) < 1)
+            $this->message_type = "plain";
+        else
+        {
+            if(count($this->attachment) > 0)
+                $this->message_type = "attachments";
+            if(strlen($this->AltBody) > 0 && count($this->attachment) < 1)
+                $this->message_type = "alt";
+            if(strlen($this->AltBody) > 0 && count($this->attachment) > 0)
+                $this->message_type = "alt_attachments";
+        }
+        
+        switch($this->message_type)
+        {
+            case "plain":
+                $header[] = sprintf("Content-Transfer-Encoding: %s%s", 
+                                    $this->Encoding, $this->LE);
+                $header[] = sprintf("Content-Type: %s; charset=\"%s\"",
+                                    $this->ContentType, $this->CharSet);
+                break;
+            case "attachments":
+            case "alt_attachments":
+                if($this->EmbeddedImageCount() > 0)
+                {
+                    $header[] = sprintf("Content-Type: %s;%s\ttype=\"text/html\";%s\tboundary=\"%s\"%s", 
+                                    "multipart/related", $this->LE, $this->LE, 
+                                    $this->boundary[1], $this->LE);
+                }
+                else
+                {
+                    $header[] = sprintf("Content-Type: %s;%s",
+                                    "multipart/mixed", $this->LE);
+                    $header[] = sprintf("\tboundary=\"%s\"%s", $this->boundary[1], $this->LE);
+                }
+                break;
+            case "alt":
+                $header[] = sprintf("Content-Type: %s;%s",
+                                    "multipart/alternative", $this->LE);
+                $header[] = sprintf("\tboundary=\"%s\"%s", $this->boundary[1], $this->LE);
+                break;
+        }
+
+        // No additional lines when using mail() function
+        if($this->Mailer != "mail")
+            $header[] = $this->LE.$this->LE;
+
+        return(join("", $header));
+    }
+
+    /**
+     * Assembles the message body.  Returns a string if successful
+     * or false if unsuccessful.
+     * @access private
+     * @return string
+     */
+    function create_body() {
+        $body = array();
+
+        $this->SetWordWrap();
+
+        switch($this->message_type)
+        {
+            case "alt":
+                // Return text of body
+                $bndry = new Boundary($this->boundary[1]);
+                $bndry->CharSet = $this->CharSet;
+                $bndry->Encoding = $this->Encoding;
+                $body[] = $bndry->GetSource();
+    
+                $body[] = $this->encode_string($this->AltBody, $this->Encoding);
+                $body[] = $this->LE.$this->LE;
+    
+                $bndry = new Boundary($this->boundary[1]);
+                $bndry->CharSet = $this->CharSet;
+                $bndry->ContentType = "text/html";
+                $bndry->Encoding = $this->Encoding;
+                $body[] = $bndry->GetSource();
+                
+                $body[] = $this->encode_string($this->Body, $this->Encoding);
+                $body[] = $this->LE.$this->LE;
+    
+                // End the boundary
+                $body[] = sprintf("%s--%s--%s", $this->LE, 
+                                  $this->boundary[1], $this->LE.$this->LE);
+                break;
+            case "plain":
+                $body[] = $this->encode_string($this->Body, $this->Encoding);
+                break;
+            case "attachments":
+                $bndry = new Boundary($this->boundary[1]);
+                $bndry->CharSet = $this->CharSet;
+                $bndry->ContentType = $this->ContentType;
+                $bndry->Encoding = $this->Encoding;
+                $body[] = $bndry->GetSource(false) . $this->LE;
+                $body[] = $this->encode_string($this->Body, $this->Encoding);
+                $body[] = $this->LE;
+     
+                if(!$body[] = $this->attach_all())
+                    return false;
+                break;
+            case "alt_attachments":
+                $body[] = sprintf("--%s%s", $this->boundary[1], $this->LE);
+                $body[] = sprintf("Content-Type: %s;%s" .
+                                  "\tboundary=\"%s\"%s",
+                                   "multipart/alternative", $this->LE, 
+                                   $this->boundary[2], $this->LE.$this->LE);
+    
+                // Create text body
+                $bndry = new Boundary($this->boundary[2]);
+                $bndry->CharSet = $this->CharSet;
+                $bndry->ContentType = "text/plain";
+                $bndry->Encoding = $this->Encoding;
+                $body[] = $bndry->GetSource() . $this->LE;
+    
+                $body[] = $this->encode_string($this->AltBody, $this->Encoding);
+                $body[] = $this->LE.$this->LE;
+    
+                // Create the HTML body
+                $bndry = new Boundary($this->boundary[2]);
+                $bndry->CharSet = $this->CharSet;
+                $bndry->ContentType = "text/html";
+                $bndry->Encoding = $this->Encoding;
+                $body[] = $bndry->GetSource() . $this->LE;
+    
+                $body[] = $this->encode_string($this->Body, $this->Encoding);
+                $body[] = $this->LE.$this->LE;
+
+                $body[] = sprintf("%s--%s--%s", $this->LE, 
+                                  $this->boundary[2], $this->LE.$this->LE);
+                
+                if(!$body[] = $this->attach_all())
+                    return false;
+                break;
+        }
+        $sBody = join("", $body);
+
+        return $sBody;
+    }
+
+
+    /////////////////////////////////////////////////
+    // ATTACHMENT METHODS
+    /////////////////////////////////////////////////
+
+    /**
+     * Adds an attachment from a path on the filesystem.
+     * Checks if attachment is valid and then adds
+     * the attachment to the list.
+     * Returns false if the file could not be found
+     * or accessed.
+     * @access public
+     * @return bool
+     */
+    function AddAttachment($path, $name = "", $encoding = "base64", $type = "application/octet-stream") {
+        if(!@is_file($path))
+        {
+            $this->error_handler(sprintf("Could not access [%s] file", $path));
+            return false;
+        }
+
+        $filename = basename($path);
+        if($name == "")
+            $name = $filename;
+
+        // Append to $attachment array
+        $cur = count($this->attachment);
+        $this->attachment[$cur][0] = $path;
+        $this->attachment[$cur][1] = $filename;
+        $this->attachment[$cur][2] = $name;
+        $this->attachment[$cur][3] = $encoding;
+        $this->attachment[$cur][4] = $type;
+        $this->attachment[$cur][5] = false; // isStringAttachment
+        $this->attachment[$cur][6] = "attachment";
+        $this->attachment[$cur][7] = 0;
+
+        return true;
+    }
+
+    /**
+     * Attaches all fs, string, and binary attachments to the message.
+     * Returns a string if successful or false if unsuccessful.
+     * @access private
+     * @return string
+     */
+    function attach_all() {
+        // Return text of body
+        $mime = array();
+
+        // Add all attachments
+        for($i = 0; $i < count($this->attachment); $i++)
+        {
+            // Check for string attachment
+            $bString = $this->attachment[$i][5];
+            if ($bString)
+            {
+                $string = $this->attachment[$i][0];
+            }
+            else
+            {
+                $path = $this->attachment[$i][0];
+            }
+            $filename    = $this->attachment[$i][1];
+            $name        = $this->attachment[$i][2];
+            $encoding    = $this->attachment[$i][3];
+            $type        = $this->attachment[$i][4];
+            $disposition = $this->attachment[$i][6];
+            $cid         = $this->attachment[$i][7];
+            
+            $mime[] = sprintf("--%s%s", $this->boundary[1], $this->LE);
+            $mime[] = sprintf("Content-Type: %s; name=\"%s\"%s", $type, $name, $this->LE);
+            $mime[] = sprintf("Content-Transfer-Encoding: %s%s", $encoding, $this->LE);
+
+            if($disposition == "inline")
+                $mime[] = sprintf("Content-ID: <%s>%s", $cid, $this->LE);
+
+            $mime[] = sprintf("Content-Disposition: %s; filename=\"%s\"%s", 
+                              $disposition, $name, $this->LE.$this->LE);
+
+            // Encode as string attachment
+            if($bString)
+            {
+                if(!$mime[] = $this->encode_string($string, $encoding))                
+                    return false;
+                $mime[] = $this->LE.$this->LE;
+            }
+            else
+            {
+                if(!$mime[] = $this->encode_file($path, $encoding))                
+                    return false;
+                $mime[] = $this->LE.$this->LE;
+            }
+        }
+
+        $mime[] = sprintf("--%s--%s", $this->boundary[1], $this->LE);
+
+        return(join("", $mime));
+    }
+    
+    /**
+     * Encodes attachment in requested format.  Returns a
+     * string if successful or false if unsuccessful.
+     * @access private
+     * @return string
+     */
+    function encode_file ($path, $encoding = "base64") {
+        if(!@$fd = fopen($path, "rb"))
+        {
+            $this->error_handler(sprintf("File Error: Could not open file %s", $path));
+            return false;
+        }
+        $file_buffer = fread($fd, filesize($path));
+        $file_buffer = $this->encode_string($file_buffer, $encoding);
+        fclose($fd);
+
+        return $file_buffer;
+    }
+
+    /**
+     * Encodes string to requested format. Returns a
+     * string if successful or false if unsuccessful.
+     * @access private
+     * @return string
+     */
+    function encode_string ($str, $encoding = "base64") {
+        switch(strtolower($encoding)) {
+          case "base64":
+              // chunk_split is found in PHP >= 3.0.6
+              $encoded = chunk_split(base64_encode($str));
+              break;
+
+          case "7bit":
+          case "8bit":
+              $encoded = $this->fix_eol($str);
+              if (substr($encoded, -2) != $this->LE)
+                $encoded .= $this->LE;
+              break;
+
+          case "binary":
+              $encoded = $str;
+              break;
+
+          case "quoted-printable":
+              $encoded = $this->encode_qp($str);
+              break;
+
+          default:
+              $this->error_handler(sprintf("Unknown encoding: %s", $encoding));
+              return false;
+        }
+        return($encoded);
+    }
+
+    /**
+     * Encode a header string to best of Q, B, quoted or none.  Returns a string.
+     * @access private
+     * @return string
+     */
+    function encode_header ($str, $position = 'text') {
+      $x = 0;
+      
+      switch (strtolower($position)) {
+        case 'phrase':
+          if (preg_match_all('/[\200-\377]/', $str, $matches) == 0) {
+            // Can't use addslashes as we don't know what value has magic_quotes_sybase.
+            $encoded = addcslashes($str, '\000-\037\177');
+            $encoded = preg_replace('/([\"])/', '\\"', $encoded);
+
+            if (($str == $encoded) && (preg_match_all('/[^A-Za-z0-9!#$%&\'*+\/=?^_`{|}~ -]/', $str, $matches) == 0))
+              return ($encoded);
+            else
+              return ("\"$encoded\"");
+          }
+          $x = preg_match_all('/[^\040\041\043-\133\135-\176]/', $str, $matches);
+          break;
+        case 'comment':
+          $x = preg_match_all('/[()"]/', $str, $matches);
+          // Fall-through
+        case 'text':
+        default:
+          $x += preg_match_all('/[\000-\010\013\014\016-\037\177-\377]/', $str, $matches);
+          break;
+      }
+
+      if ($x == 0)
+        return ($str);
+
+      $maxlen = 75 - 7 - strlen($this->CharSet);
+      // Try to select the encoding which should produce the shortest output
+//     if (strlen($str)/3 < $x) {
+        $encoding = 'B';
+        $encoded = base64_encode($str);
+        $maxlen -= $maxlen % 4;
+        $encoded = trim(chunk_split($encoded, $maxlen, "\n"));
+//      } else {
+//        $encoding = 'Q';
+//        $encoded = $this->encode_q($str, $position);
+//        $encoded = $this->word_wrap($encoded, $maxlen, true);
+//        $encoded = str_replace("=".$this->LE, "\n", trim($encoded));
+//      }
+
+      $encoded = preg_replace('/^(.*)$/m', " =?".$this->CharSet."?$encoding?\\1?=", $encoded);
+      $encoded = trim(str_replace("\n", $this->LE, $encoded));
+      
+      return($encoded);
+    }
+    
+    /**
+     * Encode string to quoted-printable.  Returns a string.
+     * @access private
+     * @return string
+     */
+    function encode_qp ($str) {
+        $encoded = $this->fix_eol($str);
+        if (substr($encoded, -2) != $this->LE)
+            $encoded .= $this->LE;
+
+        // Replace every high ascii, control and = characters
+        $encoded = preg_replace('/([\000-\010\013\014\016-\037\075\177-\377])/e',
+                  "'='.sprintf('%02X', ord('\\1'))", $encoded);
+        // Replace every spaces and tabs when it's the last character on a line
+        $encoded = preg_replace("/([\011\040])".$this->LE."/e",
+                  "'='.sprintf('%02X', ord('\\1')).'".$this->LE."'", $encoded);
+
+        // Maximum line length of 76 characters before CRLF (74 + space + '=')
+        $encoded = $this->word_wrap($encoded, 74, true);
+
+        return $encoded;
+    }
+
+    /**
+     * Encode string to q encoding.  Returns a string.
+     * @access private
+     * @return string
+     */
+    function encode_q ($str, $position = 'text') {
+        // There should not be any EOL in the string
+        $encoded = preg_replace("[\r\n]", "", $str);
+
+        switch (strtolower($position)) {
+          case 'phrase':
+            $encoded = preg_replace("/([^A-Za-z0-9!*+\/ -])/e", "'='.sprintf('%02X', ord('\\1'))", $encoded);
+            break;
+          case 'comment':
+            $encoded = preg_replace("/([\(\)\"])/e", "'='.sprintf('%02X', ord('\\1'))", $encoded);
+            // Fall-through
+          case 'text':
+          default:
+            // Replace every high ascii, control =, ? and _ characters
+            $encoded = preg_replace('/([\000-\011\013\014\016-\037\075\077\137\177-\377])/e',
+                  "'='.sprintf('%02X', ord('\\1'))", $encoded);
+            break;
+        }
+        
+        // Replace every spaces to _ (more readable than =20)
+        $encoded = str_replace(" ", "_", $encoded);
+
+        return $encoded;
+    }
+
+    /**
+     * Adds a string or binary attachment (non-filesystem) to the list.
+     * This method can be used to attach ascii or binary data,
+     * such as a BLOB record from a database.
+     * @access public
+     * @return void
+     */
+    function AddStringAttachment($string, $filename, $encoding = "base64", $type = "application/octet-stream") {
+        // Append to $attachment array
+        $cur = count($this->attachment);
+        $this->attachment[$cur][0] = $string;
+        $this->attachment[$cur][1] = $filename;
+        $this->attachment[$cur][2] = $filename;
+        $this->attachment[$cur][3] = $encoding;
+        $this->attachment[$cur][4] = $type;
+        $this->attachment[$cur][5] = true; // isString
+        $this->attachment[$cur][6] = "attachment";
+        $this->attachment[$cur][7] = 0;
+    }
+    
+    /**
+     * Adds an embedded attachment.  This can include images, sounds, and 
+     * just about any other document.  
+     * @param cid this is the Content Id of the attachment.  Use this to identify
+     *        the Id for accessing the image in an HTML form.
+     * @access public
+     * @return bool
+     */
+    function AddEmbeddedImage($path, $cid, $name = "", $encoding = "base64", $type = "application/octet-stream") {
+    
+        if(!@is_file($path))
+        {
+            $this->error_handler(sprintf("Could not access [%s] file", $path));
+            return false;
+        }
+
+        $filename = basename($path);
+        if($name == "")
+            $name = $filename;
+
+        // Append to $attachment array
+        $cur = count($this->attachment);
+        $this->attachment[$cur][0] = $path;
+        $this->attachment[$cur][1] = $filename;
+        $this->attachment[$cur][2] = $name;
+        $this->attachment[$cur][3] = $encoding;
+        $this->attachment[$cur][4] = $type;
+        $this->attachment[$cur][5] = false; // isStringAttachment
+        $this->attachment[$cur][6] = "inline";
+        $this->attachment[$cur][7] = $cid;
+    
+        return true;
+    }
+    
+    /**
+     * Returns the number of embedded images in an email.
+     * @access private
+     * @return int
+     */
+    function EmbeddedImageCount() {
+        $ret = 0;
+        for($i = 0; $i < count($this->attachment); $i++)
+        {
+            if($this->attachment[$i][6] == "inline")
+                $ret++;
+        }
+        
+        return $ret;
+    }
+
+    /////////////////////////////////////////////////
+    // MESSAGE RESET METHODS
+    /////////////////////////////////////////////////
+
+    /**
+     * Clears all recipients assigned in the TO array.  Returns void.
+     * @access public
+     * @return void
+     */
+    function ClearAddresses() {
+        $this->to = array();
+    }
+
+    /**
+     * Clears all recipients assigned in the CC array.  Returns void.
+     * @access public
+     * @return void
+     */
+    function ClearCCs() {
+        $this->cc = array();
+    }
+
+    /**
+     * Clears all recipients assigned in the BCC array.  Returns void.
+     * @access public
+     * @return void
+     */
+    function ClearBCCs() {
+        $this->bcc = array();
+    }
+
+    /**
+     * Clears all recipients assigned in the ReplyTo array.  Returns void.
+     * @access public
+     * @return void
+     */
+    function ClearReplyTos() {
+        $this->ReplyTo = array();
+    }
+
+    /**
+     * Clears all recipients assigned in the TO, CC and BCC
+     * array.  Returns void.
+     * @access public
+     * @return void
+     */
+    function ClearAllRecipients() {
+        $this->to = array();
+        $this->cc = array();
+        $this->bcc = array();
+    }
+
+    /**
+     * Clears all previously set filesystem, string, and binary
+     * attachments.  Returns void.
+     * @access public
+     * @return void
+     */
+    function ClearAttachments() {
+        $this->attachment = array();
+    }
+
+    /**
+     * Clears all custom headers.  Returns void.
+     * @access public
+     * @return void
+     */
+    function ClearCustomHeaders() {
+        $this->CustomHeader = array();
+    }
+
+
+    /////////////////////////////////////////////////
+    // MISCELLANEOUS METHODS
+    /////////////////////////////////////////////////
+
+    /**
+     * Adds the error message to the error container.
+     * Returns void.
+     * @access private
+     * @return void
+     */
+    function error_handler($msg) {
+        $this->ErrorInfo = $msg;
+    }
+
+    /**
+     * Returns the proper RFC 822 formatted date. Returns string.
+     * @access private
+     * @return string
+     */
+    function rfc_date() {
+        $tz = date("Z");
+        $tzs = ($tz < 0) ? "-" : "+";
+        $tz = abs($tz);
+        $tz = ($tz/3600)*100 + ($tz%3600)/60;
+        $date = sprintf("%s %s%04d", date("D, j M Y H:i:s"), $tzs, $tz);
+        return $date;
+    }
+
+    /**
+     * Returns received header for message tracing. Returns string.
+     * @access private
+     * @return string
+     */
+    function received() {
+        // Check for vars because they might not exist.  Possibly
+        // write a small retrieval function (that mailer can use too!)
+
+        if ($this->get_server_var('SERVER_NAME') != '')
+	{
+            $protocol = ($this->get_server_var('HTTPS') == 'on') ? 'HTTPS' : 'HTTP';
+	    $remote = $this->get_server_var('REMOTE_HOST');
+	    if ($remote == '')
+	        $remote = 'phpmailer';
+	    $remote .= ' (['.$this->get_server_var('REMOTE_ADDR').'])';
+	}
+        else
+	{
+            $protocol = 'local';
+	    $remote = $this->get_server_var('USER');
+	    if ($remote == '')
+	        $remote = 'phpmailer';
+	}
+
+        $str = sprintf("Received: from %s %s\tby %s " .
+               "with %s (phpmailer);%s\t%s%s",
+	       $remote,
+	       $this->LE,
+               $this->get_server_hostname(),
+	       $protocol,
+               $this->LE,
+               $this->rfc_date(),
+               $this->LE);
+
+        return $str;
+    }
+    
+    /**
+     * Returns the appropriate server variable.  Should work with both 
+     * PHP 4.1.0+ as well as older versions.  Returns an empty string 
+     * if nothing is found.
+     * @access private
+     * @return mixed
+     */
+    function get_server_var($varName) {
+        global $HTTP_SERVER_VARS;
+        global $HTTP_ENV_VARS;
+
+        if(!isset($_SERVER))
+        {
+            $_SERVER = $HTTP_SERVER_VARS;
+            if(!isset($_SERVER["REMOTE_ADDR"]))
+                $_SERVER = $HTTP_ENV_VARS; // must be Apache
+        }
+        
+        if(isset($_SERVER[$varName]))
+            return $_SERVER[$varName];
+        else
+            return "";
+    }
+
+    /**
+     * Returns the server hostname or 'localhost.localdomain' if unknown.
+     * @access private
+     * @return string
+     */
+    function get_server_hostname() {
+        if ($this->Hostname != '')
+	    return $this->Hostname;
+	elseif ($this->get_server_var('SERVER_NAME') != '')
+	    return $this->get_server_var('SERVER_NAME');
+	else
+	    return 'localhost.localdomain';
+    }
+
+    /**
+     * Changes every end of line from CR or LF to CRLF.  Returns string.
+     * @access private
+     * @return string
+     */
+    function fix_eol($str) {
+        $str = str_replace("\r\n", "\n", $str);
+        $str = str_replace("\r", "\n", $str);
+        $str = str_replace("\n", $this->LE, $str);
+        return $str;
+    }
+
+    /**
+     * Adds a custom header.  Returns void.
+     * @access public
+     * @return void
+     */
+    function AddCustomHeader($custom_header) {
+        // Append to $custom_header array
+        $this->CustomHeader[] = explode(":", $custom_header, 2);
+    }
+
+    /**
+     * Adds all the Microsoft message headers.  Returns string.
+     * @access private
+     * @return string
+     */
+    function AddMSMailHeaders() {
+        $MSHeader = "";
+        if($this->Priority == 1)
+            $MSPriority = "High";
+        elseif($this->Priority == 5)
+            $MSPriority = "Low";
+        else
+            $MSPriority = "Medium";
+
+        $MSHeader .= sprintf("X-MSMail-Priority: %s%s", $MSPriority, $this->LE);
+        $MSHeader .= sprintf("Importance: %s%s", $MSPriority, $this->LE);
+
+        return($MSHeader);
+    }
+
+}
+
+
+/**
+ * Boundary - MIME message boundary class
+ * @author Brent R. Matzelle
+ */
+class Boundary
+{
+    /**
+     * Sets the boundary ID.
+     * @access private
+     * @var string
+     */
+    var $ID = 0;
+
+    /**
+     * Sets the boundary Content Type.
+     * @access public
+     * @var string
+     */
+    var $ContentType = "text/plain";
+
+    /**
+     * Sets the Encoding.
+     * @access public
+     * @var string
+     */
+    var $Encoding = "";
+
+    /**
+     * Sets an attachment disposition.
+     * @access public
+     * @var string
+     */
+    var $Disposition = "";
+
+    /**
+     * Sets an attachment file name.
+     * @access public
+     * @var string
+     */
+    var $FileName = "";
+    
+    /**
+     * Sets the Char set.
+     * @access public
+     * @var string
+     */
+    var $CharSet = "";
+    
+    /**
+     *  Sets the line endings of the message.  Default is "\n";
+     *  @access public
+     *  @var string
+     */
+    var $LE           = "\n";
+    
+    /**
+     * Main constructor.
+     */
+    function Boundary($boundary_id) {
+        $this->ID = $boundary_id;
+    }
+    
+    /**
+     * Returns the source of the boundary.
+     * @access public
+     * @return string
+     */
+    function GetSource($bLineEnding = true) {
+        $mime = array();
+        $mime[] = sprintf("--%s%s", $this->ID, $this->LE);
+        $mime[] = sprintf("Content-Type: %s; charset = \"%s\"%s", 
+                          $this->ContentType, $this->CharSet, $this->LE);
+        $mime[] = sprintf("Content-Transfer-Encoding: %s%s", $this->Encoding, 
+                          $this->LE);
+        
+        if(strlen($this->Disposition) > 0)
+        {
+            $mime[] = sprintf("Content-Disposition: %s;");
+            if(strlen($this->FileName) > 0)
+                $mime[] = sprinf("filename=\"%s\"", $this->FileName);
+        }
+        
+        if($bLineEnding)
+            $mime[] = $this->LE;
+
+        return join("", $mime);
+    }
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/mail/phpmailer/class.phpmailer.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/mail/phpmailer/class.smtp.php
===================================================================
--- XoopsCore/trunk/htdocs/class/mail/phpmailer/class.smtp.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/mail/phpmailer/class.smtp.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,1010 @@
+<?php
+////////////////////////////////////////////////////
+// SMTP - PHP SMTP class
+//
+// Version 1.02
+//
+// Define an SMTP class that can be used to connect
+// and communicate with any SMTP server. It implements
+// all the SMTP functions defined in RFC821 except TURN.
+//
+// Author: Chris Ryan
+//
+// License: LGPL, see LICENSE
+////////////////////////////////////////////////////
+
+/**
+ * STMP is rfc 821 compliant and implements all the rfc 821 SMTP
+ * commands except TURN which will always return a not implemented
+ * error. SMTP also provides some utility methods for sending mail
+ * to an SMTP server.
+ * @author Chris Ryan
+ */
+class SMTP
+{
+    var $SMTP_PORT = 25; # the default SMTP PORT
+    var $CRLF = "\r\n";  # CRLF pair
+
+    var $smtp_conn;      # the socket to the server
+    var $error;          # error if any on the last call
+    var $helo_rply;      # the reply the server sent to us for HELO
+
+    var $do_debug;       # the level of debug to perform
+
+    /**
+     * Initialize the class so that the data is in a known state.
+     * @access public
+     * @return void
+     */
+    function SMTP() {
+        $this->smtp_conn = 0;
+        $this->error = null;
+        $this->helo_rply = null;
+
+        $this->do_debug = 0;
+    }
+
+    /*************************************************************
+     *                    CONNECTION FUNCTIONS                  *
+     ***********************************************************/
+
+    /**
+     * Connect to the server specified on the port specified.
+     * If the port is not specified use the default SMTP_PORT.
+     * If tval is specified then a connection will try and be
+     * established with the server for that number of seconds.
+     * If tval is not specified the default is 30 seconds to
+     * try on the connection.
+     *
+     * SMTP CODE SUCCESS: 220
+     * SMTP CODE FAILURE: 421
+     * @access public
+     * @return bool
+     */
+    function Connect($host,$port=0,$tval=30) {
+        # set the error val to null so there is no confusion
+        $this->error = null;
+
+        # make sure we are __not__ connected
+        if($this->connected()) {
+            # ok we are connected! what should we do?
+            # for now we will just give an error saying we
+            # are already connected
+            $this->error =
+                array("error" => "Already connected to a server");
+            return false;
+        }
+
+        if(empty($port)) {
+            $port = $this->SMTP_PORT;
+        }
+
+        #connect to the smtp server
+        $this->smtp_conn = fsockopen($host,    # the host of the server
+                                     $port,    # the port to use
+                                     $errno,   # error number if any
+                                     $errstr,  # error message if any
+                                     $tval);   # give up after ? secs
+        # verify we connected properly
+        if(empty($this->smtp_conn)) {
+            $this->error = array("error" => "Failed to connect to server",
+                                 "errno" => $errno,
+                                 "errstr" => $errstr);
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": $errstr ($errno)" . $this->CRLF;
+            }
+            return false;
+        }
+
+        # sometimes the SMTP server takes a little longer to respond
+        # so we will give it a longer timeout for the first read
+        // Windows still does not have support for this timeout function
+        if(substr(PHP_OS, 0, 3) != "WIN")
+           socket_set_timeout($this->smtp_conn, 1, 0);
+
+        # get any announcement stuff
+        $announce = $this->get_lines();
+
+        # set the timeout  of any socket functions at 1/10 of a second
+        //if(function_exists("socket_set_timeout"))
+        //   socket_set_timeout($this->smtp_conn, 0, 100000);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $announce;
+        }
+
+        return true;
+    }
+
+    /**
+     * Performs SMTP authentication.  Must be run after running the
+     * Hello() method.  Returns true if successfully authenticated.
+     * @access public
+     * @return bool
+     */
+    function Authenticate($username, $password) {
+        // Start authentication
+        fputs($this->smtp_conn,"AUTH LOGIN" . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($code != 334) {
+            $this->error =
+                array("error" => "AUTH not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+
+        // Send encoded username
+        fputs($this->smtp_conn, base64_encode($username) . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($code != 334) {
+            $this->error =
+                array("error" => "Username not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+
+        // Send encoded password
+        fputs($this->smtp_conn, base64_encode($password) . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($code != 235) {
+            $this->error =
+                array("error" => "Password not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+
+        return true;
+    }
+
+    /**
+     * Returns true if connected to a server otherwise false
+     * @access private
+     * @return bool
+     */
+    function Connected() {
+        if(!empty($this->smtp_conn)) {
+            $sock_status = socket_get_status($this->smtp_conn);
+            if($sock_status["eof"]) {
+                # hmm this is an odd situation... the socket is
+                # valid but we aren't connected anymore
+                if($this->do_debug >= 1) {
+                    echo "SMTP -> NOTICE:" . $this->CRLF .
+                         "EOF caught while checking if connected";
+                }
+                $this->Close();
+                return false;
+            }
+            return true; # everything looks good
+        }
+        return false;
+    }
+
+    /**
+     * Closes the socket and cleans up the state of the class.
+     * It is not considered good to use this function without
+     * first trying to use QUIT.
+     * @access public
+     * @return void
+     */
+    function Close() {
+        $this->error = null; # so there is no confusion
+        $this->helo_rply = null;
+        if(!empty($this->smtp_conn)) {
+            # close the connection and cleanup
+            fclose($this->smtp_conn);
+            $this->smtp_conn = 0;
+        }
+    }
+
+
+    /***************************************************************
+     *                        SMTP COMMANDS                       *
+     *************************************************************/
+
+    /**
+     * Issues a data command and sends the msg_data to the server
+     * finializing the mail transaction. $msg_data is the message
+     * that is to be send with the headers. Each header needs to be
+     * on a single line followed by a <CRLF> with the message headers
+     * and the message body being seperated by and additional <CRLF>.
+     *
+     * Implements rfc 821: DATA <CRLF>
+     *
+     * SMTP CODE INTERMEDIATE: 354
+     *     [data]
+     *     <CRLF>.<CRLF>
+     *     SMTP CODE SUCCESS: 250
+     *     SMTP CODE FAILURE: 552,554,451,452
+     * SMTP CODE FAILURE: 451,554
+     * SMTP CODE ERROR  : 500,501,503,421
+     * @access public
+     * @return bool
+     */
+    function Data($msg_data) {
+        $this->error = null; # so no confusion is caused
+
+        if(!$this->connected()) {
+            $this->error = array(
+                    "error" => "Called Data() without being connected");
+            return false;
+        }
+
+        fputs($this->smtp_conn,"DATA" . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 354) {
+            $this->error =
+                array("error" => "DATA command not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+
+        # the server is ready to accept data!
+        # according to rfc 821 we should not send more than 1000
+        # including the CRLF
+        # characters on a single line so we will break the data up
+        # into lines by \r and/or \n then if needed we will break
+        # each of those into smaller lines to fit within the limit.
+        # in addition we will be looking for lines that start with
+        # a period '.' and append and additional period '.' to that
+        # line. NOTE: this does not count towards are limit.
+
+        # normalize the line breaks so we know the explode works
+        $msg_data = str_replace("\r\n","\n",$msg_data);
+        $msg_data = str_replace("\r","\n",$msg_data);
+        $lines = explode("\n",$msg_data);
+
+        # we need to find a good way to determine is headers are
+        # in the msg_data or if it is a straight msg body
+        # currently I'm assuming rfc 822 definitions of msg headers
+        # and if the first field of the first line (':' sperated)
+        # does not contain a space then it _should_ be a header
+        # and we can process all lines before a blank "" line as
+        # headers.
+        $field = substr($lines[0],0,strpos($lines[0],":"));
+        $in_headers = false;
+        if(!empty($field) && !strstr($field," ")) {
+            $in_headers = true;
+        }
+
+        $max_line_length = 998; # used below; set here for ease in change
+
+        while(list(,$line) = @each($lines)) {
+            $lines_out = null;
+            if($line == "" && $in_headers) {
+                $in_headers = false;
+            }
+            # ok we need to break this line up into several
+            # smaller lines
+            while(strlen($line) > $max_line_length) {
+                $pos = strrpos(substr($line,0,$max_line_length)," ");
+                // @XOOPS: Manual fix from PHPMailer 1.73 to prevent endless loops
+                // @XOOPS: We must update to 1.73 and fix its multibyte related issues instead of keeping this
+				if ( !$pos ) {
+					$pos = $max_line_length - 1;
+				}
+                $lines_out[] = substr($line,0,$pos);
+                $line = substr($line,$pos + 1);
+                # if we are processing headers we need to
+                # add a LWSP-char to the front of the new line
+                # rfc 822 on long msg headers
+                if($in_headers) {
+                    $line = "\t" . $line;
+                }
+            }
+            $lines_out[] = $line;
+
+            # now send the lines to the server
+            while(list(,$line_out) = @each($lines_out)) {
+                if(strlen($line_out) > 0)
+                {
+                    if(substr($line_out, 0, 1) == ".") {
+                        $line_out = "." . $line_out;
+                    }
+                }
+                fputs($this->smtp_conn,$line_out . $this->CRLF);
+            }
+        }
+
+        # ok all the message data has been sent so lets get this
+        # over with aleady
+        fputs($this->smtp_conn, $this->CRLF . "." . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 250) {
+            $this->error =
+                array("error" => "DATA not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Expand takes the name and asks the server to list all the
+     * people who are members of the _list_. Expand will return
+     * back and array of the result or false if an error occurs.
+     * Each value in the array returned has the format of:
+     *     [ <full-name> <sp> ] <path>
+     * The definition of <path> is defined in rfc 821
+     *
+     * Implements rfc 821: EXPN <SP> <string> <CRLF>
+     *
+     * SMTP CODE SUCCESS: 250
+     * SMTP CODE FAILURE: 550
+     * SMTP CODE ERROR  : 500,501,502,504,421
+     * @access public
+     * @return string array
+     */
+    function Expand($name) {
+        $this->error = null; # so no confusion is caused
+
+        if(!$this->connected()) {
+            $this->error = array(
+                    "error" => "Called Expand() without being connected");
+            return false;
+        }
+
+        fputs($this->smtp_conn,"EXPN " . $name . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 250) {
+            $this->error =
+                array("error" => "EXPN not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+
+        # parse the reply and place in our array to return to user
+        $entries = explode($this->CRLF,$rply);
+        while(list(,$l) = @each($entries)) {
+            $list[] = substr($l,4);
+        }
+
+        return $list;
+    }
+
+    /**
+     * Sends the HELO command to the smtp server.
+     * This makes sure that we and the server are in
+     * the same known state.
+     *
+     * Implements from rfc 821: HELO <SP> <domain> <CRLF>
+     *
+     * SMTP CODE SUCCESS: 250
+     * SMTP CODE ERROR  : 500, 501, 504, 421
+     * @access public
+     * @return bool
+     */
+    function Hello($host="") {
+        $this->error = null; # so no confusion is caused
+
+        if(!$this->connected()) {
+            $this->error = array(
+                    "error" => "Called Hello() without being connected");
+            return false;
+        }
+
+        # if a hostname for the HELO wasn't specified determine
+        # a suitable one to send
+        if(empty($host)) {
+            # we need to determine some sort of appopiate default
+            # to send to the server
+            $host = "localhost";
+        }
+
+        fputs($this->smtp_conn,"HELO " . $host . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER: " . $this->CRLF . $rply;
+        }
+
+        if($code != 250) {
+            $this->error =
+                array("error" => "HELO not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+
+        $this->helo_rply = $rply;
+
+        return true;
+    }
+
+    /**
+     * Gets help information on the keyword specified. If the keyword
+     * is not specified then returns generic help, ussually contianing
+     * A list of keywords that help is available on. This function
+     * returns the results back to the user. It is up to the user to
+     * handle the returned data. If an error occurs then false is
+     * returned with $this->error set appropiately.
+     *
+     * Implements rfc 821: HELP [ <SP> <string> ] <CRLF>
+     *
+     * SMTP CODE SUCCESS: 211,214
+     * SMTP CODE ERROR  : 500,501,502,504,421
+     * @access public
+     * @return string
+     */
+    function Help($keyword="") {
+        $this->error = null; # to avoid confusion
+
+        if(!$this->connected()) {
+            $this->error = array(
+                    "error" => "Called Help() without being connected");
+            return false;
+        }
+
+        $extra = "";
+        if(!empty($keyword)) {
+            $extra = " " . $keyword;
+        }
+
+        fputs($this->smtp_conn,"HELP" . $extra . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 211 && $code != 214) {
+            $this->error =
+                array("error" => "HELP not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+
+        return $rply;
+    }
+
+    /**
+     * Starts a mail transaction from the email address specified in
+     * $from. Returns true if successful or false otherwise. If True
+     * the mail transaction is started and then one or more Recipient
+     * commands may be called followed by a Data command.
+     *
+     * Implements rfc 821: MAIL <SP> FROM:<reverse-path> <CRLF>
+     *
+     * SMTP CODE SUCCESS: 250
+     * SMTP CODE SUCCESS: 552,451,452
+     * SMTP CODE SUCCESS: 500,501,421
+     * @access public
+     * @return bool
+     */
+    function Mail($from) {
+        $this->error = null; # so no confusion is caused
+
+        if(!$this->connected()) {
+            $this->error = array(
+                    "error" => "Called Mail() without being connected");
+            return false;
+        }
+
+        fputs($this->smtp_conn,"MAIL FROM:" . $from . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 250) {
+            $this->error =
+                array("error" => "MAIL not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Sends the command NOOP to the SMTP server.
+     *
+     * Implements from rfc 821: NOOP <CRLF>
+     *
+     * SMTP CODE SUCCESS: 250
+     * SMTP CODE ERROR  : 500, 421
+     * @access public
+     * @return bool
+     */
+    function Noop() {
+        $this->error = null; # so no confusion is caused
+
+        if(!$this->connected()) {
+            $this->error = array(
+                    "error" => "Called Noop() without being connected");
+            return false;
+        }
+
+        fputs($this->smtp_conn,"NOOP" . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 250) {
+            $this->error =
+                array("error" => "NOOP not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Sends the quit command to the server and then closes the socket
+     * if there is no error or the $close_on_error argument is true.
+     *
+     * Implements from rfc 821: QUIT <CRLF>
+     *
+     * SMTP CODE SUCCESS: 221
+     * SMTP CODE ERROR  : 500
+     * @access public
+     * @return bool
+     */
+    function Quit($close_on_error=true) {
+        $this->error = null; # so there is no confusion
+
+        if(!$this->connected()) {
+            $this->error = array(
+                    "error" => "Called Quit() without being connected");
+            return false;
+        }
+
+        # send the quit command to the server
+        fputs($this->smtp_conn,"quit" . $this->CRLF);
+
+        # get any good-bye messages
+        $byemsg = $this->get_lines();
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $byemsg;
+        }
+
+        $rval = true;
+        $e = null;
+
+        $code = substr($byemsg,0,3);
+        if($code != 221) {
+            # use e as a tmp var cause Close will overwrite $this->error
+            $e = array("error" => "SMTP server rejected quit command",
+                       "smtp_code" => $code,
+                       "smtp_rply" => substr($byemsg,4));
+            $rval = false;
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $e["error"] . ": " .
+                         $byemsg . $this->CRLF;
+            }
+        }
+
+        if(empty($e) || $close_on_error) {
+            $this->Close();
+        }
+
+        return $rval;
+    }
+
+    /**
+     * Sends the command RCPT to the SMTP server with the TO: argument of $to.
+     * Returns true if the recipient was accepted false if it was rejected.
+     *
+     * Implements from rfc 821: RCPT <SP> TO:<forward-path> <CRLF>
+     *
+     * SMTP CODE SUCCESS: 250,251
+     * SMTP CODE FAILURE: 550,551,552,553,450,451,452
+     * SMTP CODE ERROR  : 500,501,503,421
+     * @access public
+     * @return bool
+     */
+    function Recipient($to) {
+        $this->error = null; # so no confusion is caused
+
+        if(!$this->connected()) {
+            $this->error = array(
+                    "error" => "Called Recipient() without being connected");
+            return false;
+        }
+
+        fputs($this->smtp_conn,"RCPT TO:" . $to . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 250 && $code != 251) {
+            $this->error =
+                array("error" => "RCPT not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Sends the RSET command to abort and transaction that is
+     * currently in progress. Returns true if successful false
+     * otherwise.
+     *
+     * Implements rfc 821: RSET <CRLF>
+     *
+     * SMTP CODE SUCCESS: 250
+     * SMTP CODE ERROR  : 500,501,504,421
+     * @access public
+     * @return bool
+     */
+    function Reset() {
+        $this->error = null; # so no confusion is caused
+
+        if(!$this->connected()) {
+            $this->error = array(
+                    "error" => "Called Reset() without being connected");
+            return false;
+        }
+
+        fputs($this->smtp_conn,"RSET" . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 250) {
+            $this->error =
+                array("error" => "RSET failed",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+
+        return true;
+    }
+
+    /**
+     * Starts a mail transaction from the email address specified in
+     * $from. Returns true if successful or false otherwise. If True
+     * the mail transaction is started and then one or more Recipient
+     * commands may be called followed by a Data command. This command
+     * will send the message to the users terminal if they are logged
+     * in.
+     *
+     * Implements rfc 821: SEND <SP> FROM:<reverse-path> <CRLF>
+     *
+     * SMTP CODE SUCCESS: 250
+     * SMTP CODE SUCCESS: 552,451,452
+     * SMTP CODE SUCCESS: 500,501,502,421
+     * @access public
+     * @return bool
+     */
+    function Send($from) {
+        $this->error = null; # so no confusion is caused
+
+        if(!$this->connected()) {
+            $this->error = array(
+                    "error" => "Called Send() without being connected");
+            return false;
+        }
+
+        fputs($this->smtp_conn,"SEND FROM:" . $from . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 250) {
+            $this->error =
+                array("error" => "SEND not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Starts a mail transaction from the email address specified in
+     * $from. Returns true if successful or false otherwise. If True
+     * the mail transaction is started and then one or more Recipient
+     * commands may be called followed by a Data command. This command
+     * will send the message to the users terminal if they are logged
+     * in and send them an email.
+     *
+     * Implements rfc 821: SAML <SP> FROM:<reverse-path> <CRLF>
+     *
+     * SMTP CODE SUCCESS: 250
+     * SMTP CODE SUCCESS: 552,451,452
+     * SMTP CODE SUCCESS: 500,501,502,421
+     * @access public
+     * @return bool
+     */
+    function SendAndMail($from) {
+        $this->error = null; # so no confusion is caused
+
+        if(!$this->connected()) {
+            $this->error = array(
+                "error" => "Called SendAndMail() without being connected");
+            return false;
+        }
+
+        fputs($this->smtp_conn,"SAML FROM:" . $from . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 250) {
+            $this->error =
+                array("error" => "SAML not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Starts a mail transaction from the email address specified in
+     * $from. Returns true if successful or false otherwise. If True
+     * the mail transaction is started and then one or more Recipient
+     * commands may be called followed by a Data command. This command
+     * will send the message to the users terminal if they are logged
+     * in or mail it to them if they are not.
+     *
+     * Implements rfc 821: SOML <SP> FROM:<reverse-path> <CRLF>
+     *
+     * SMTP CODE SUCCESS: 250
+     * SMTP CODE SUCCESS: 552,451,452
+     * SMTP CODE SUCCESS: 500,501,502,421
+     * @access public
+     * @return bool
+     */
+    function SendOrMail($from) {
+        $this->error = null; # so no confusion is caused
+
+        if(!$this->connected()) {
+            $this->error = array(
+                "error" => "Called SendOrMail() without being connected");
+            return false;
+        }
+
+        fputs($this->smtp_conn,"SOML FROM:" . $from . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 250) {
+            $this->error =
+                array("error" => "SOML not accepted from server",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * This is an optional command for SMTP that this class does not
+     * support. This method is here to make the RFC821 Definition
+     * complete for this class and __may__ be implimented in the future
+     *
+     * Implements from rfc 821: TURN <CRLF>
+     *
+     * SMTP CODE SUCCESS: 250
+     * SMTP CODE FAILURE: 502
+     * SMTP CODE ERROR  : 500, 503
+     * @access public
+     * @return bool
+     */
+    function Turn() {
+        $this->error = array("error" => "This method, TURN, of the SMTP ".
+                                        "is not implemented");
+        if($this->do_debug >= 1) {
+            echo "SMTP -> NOTICE: " . $this->error["error"] . $this->CRLF;
+        }
+        return false;
+    }
+
+    /**
+     * Verifies that the name is recognized by the server.
+     * Returns false if the name could not be verified otherwise
+     * the response from the server is returned.
+     *
+     * Implements rfc 821: VRFY <SP> <string> <CRLF>
+     *
+     * SMTP CODE SUCCESS: 250,251
+     * SMTP CODE FAILURE: 550,551,553
+     * SMTP CODE ERROR  : 500,501,502,421
+     * @access public
+     * @return int
+     */
+    function Verify($name) {
+        $this->error = null; # so no confusion is caused
+
+        if(!$this->connected()) {
+            $this->error = array(
+                    "error" => "Called Verify() without being connected");
+            return false;
+        }
+
+        fputs($this->smtp_conn,"VRFY " . $name . $this->CRLF);
+
+        $rply = $this->get_lines();
+        $code = substr($rply,0,3);
+
+        if($this->do_debug >= 2) {
+            echo "SMTP -> FROM SERVER:" . $this->CRLF . $rply;
+        }
+
+        if($code != 250 && $code != 251) {
+            $this->error =
+                array("error" => "VRFY failed on name '$name'",
+                      "smtp_code" => $code,
+                      "smtp_msg" => substr($rply,4));
+            if($this->do_debug >= 1) {
+                echo "SMTP -> ERROR: " . $this->error["error"] .
+                         ": " . $rply . $this->CRLF;
+            }
+            return false;
+        }
+        return $rply;
+    }
+
+    /*******************************************************************
+     *                       INTERNAL FUNCTIONS                       *
+     ******************************************************************/
+
+    /**
+     * Read in as many lines as possible
+     * either before eof or socket timeout occurs on the operation.
+     * With SMTP we can tell if we have more lines to read if the
+     * 4th character is '-' symbol. If it is a space then we don't
+     * need to read anything else.
+     * @access private
+     * @return string
+     */
+    function get_lines() {
+        $data = "";
+        while($str = fgets($this->smtp_conn,515)) {
+            if($this->do_debug >= 4) {
+                echo "SMTP -> get_lines(): \$data was \"$data\"" .
+                         $this->CRLF;
+                echo "SMTP -> get_lines(): \$str is \"$str\"" .
+                         $this->CRLF;
+            }
+            $data .= $str;
+            if($this->do_debug >= 4) {
+                echo "SMTP -> get_lines(): \$data is \"$data\"" . $this->CRLF;
+            }
+            # if the 4th character is a space then we are done reading
+            # so just break the loop
+            if(substr($str,3,1) == " ") { break; }
+        }
+        return $data;
+    }
+
+}
+
+
+ ?>


Property changes on: XoopsCore/trunk/htdocs/class/mail/phpmailer/class.smtp.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/mail/xoopsmultimailer.php
===================================================================
--- XoopsCore/trunk/htdocs/class/mail/xoopsmultimailer.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/mail/xoopsmultimailer.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,192 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Jochen B??nagel (job at buennagel.com)                               //
+// URL:  http://www.xoops.org												 //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined("XOOPS_ROOT_PATH")) {
+    die("XOOPS root path not defined");
+}
+/**
+ * @package		class
+ * @subpackage	mail
+ * 
+ * @filesource 
+ *
+ * @author		Jochen B??nagel	<jb at buennagel.com>
+ * @copyright	copyright (c) 2000-2003 The XOOPS Project (http://www.xoops.org)
+ *
+ * @version		$Revision$ - $Date$
+ */
+
+/**
+ * load the base class
+ */
+require_once(XOOPS_ROOT_PATH.'/class/mail/phpmailer/class.phpmailer.php');
+
+/**
+ * Mailer Class.
+ * 
+ * At the moment, this does nothing but send email through PHP's "mail()" function,
+ * but it has the abiltiy to do much more.
+ * 
+ * If you have problems sending mail with "mail()", you can edit the member variables
+ * to suit your setting. Later this will be possible through the admin panel.
+ *
+ * @todo		Make a page in the admin panel for setting mailer preferences.
+ * 
+ * @package		class
+ * @subpackage	mail
+ *
+ * @author		Jochen Buennagel	<job at buennagel.com>
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ * @version		$Revision$ - changed by $Author$ on $Date$
+ */
+class XoopsMultiMailer extends phpmailer {
+
+	/**
+	 * "from" address
+	 * @var 	string
+	 * @access	private
+	 */
+	var $From 		= "";
+	
+	/**
+	 * "from" name
+	 * @var 	string
+	 * @access	private
+	 */
+	var $FromName 	= "";
+
+	// can be "smtp", "sendmail", or "mail"
+	/**
+	 * Method to be used when sending the mail.
+	 * 
+	 * This can be:
+	 * <li>mail (standard PHP function "mail()") (default)
+	 * <li>smtp	(send through any SMTP server, SMTPAuth is supported.
+	 * You must set {@link $Host}, for SMTPAuth also {@link $SMTPAuth}, 
+	 * {@link $Username}, and {@link $Password}.)
+	 * <li>sendmail (manually set the path to your sendmail program 
+	 * to something different than "mail()" uses in {@link $Sendmail}) 
+	 * 
+	 * @var 	string
+	 * @access	private
+	 */
+	var $Mailer		= "mail";
+
+	/**
+	 * set if $Mailer is "sendmail"
+	 * 
+	 * Only used if {@link $Mailer} is set to "sendmail".
+	 * Contains the full path to your sendmail program or replacement.
+	 * @var 	string
+	 * @access	private
+	 */
+	var $Sendmail = "/usr/sbin/sendmail";
+
+	/**
+	 * SMTP Host.
+	 * 
+	 * Only used if {@link $Mailer} is set to "smtp"
+	 * @var 	string
+	 * @access	private
+	 */
+	var $Host		= "";
+
+	/**
+	 * Does your SMTP host require SMTPAuth authentication?
+	 * @var 	boolean
+	 * @access	private
+	 */
+	var $SMTPAuth	= FALSE;
+
+	/**
+	 * Username for authentication with your SMTP host.
+	 * 
+	 * Only used if {@link $Mailer} is "smtp" and {@link $SMTPAuth} is TRUE
+	 * @var 	string
+	 * @access	private
+	 */
+	var $Username	= "";
+
+	/**
+	 * Password for SMTPAuth.
+	 * 
+	 * Only used if {@link $Mailer} is "smtp" and {@link $SMTPAuth} is TRUE
+	 * @var 	string
+	 * @access	private
+	 */
+	var $Password	= "";
+	
+	/**
+	 * Constuctor
+	 * 
+	 * @access public
+	 * @return void 
+	 * 
+	 * @global	$xoopsConfig
+	 */
+	function XoopsMultiMailer(){
+		global $xoopsConfig;
+	
+		$config_handler =& xoops_gethandler('config');
+		$xoopsMailerConfig =& $config_handler->getConfigsByCat(XOOPS_CONF_MAILER);
+		$this->From = $xoopsMailerConfig['from'];
+		if ($this->From == '') {
+		    $this->From = $xoopsConfig['adminmail'];
+		}
+		
+		if ($xoopsMailerConfig["mailmethod"] == "smtpauth") {
+		    $this->Mailer = "smtp";
+			$this->SMTPAuth = TRUE;
+			$this->Host = implode(';',$xoopsMailerConfig['smtphost']);
+			$this->Username = $xoopsMailerConfig['smtpuser'];
+			$this->Password = $xoopsMailerConfig['smtppass'];
+		} else {
+			$this->Mailer = $xoopsMailerConfig['mailmethod'];
+			$this->SMTPAuth = FALSE;
+			$this->Sendmail = $xoopsMailerConfig['sendmailpath'];
+			$this->Host = implode(';',$xoopsMailerConfig['smtphost']);
+		}
+	}
+
+	/**
+     * Formats an address correctly. This overrides the default addr_format method which does not seem to encode $FromName correctly
+     * @access private
+     * @return string
+     */
+    function addr_format($addr) {
+        if(empty($addr[1]))
+            $formatted = $addr[0];
+        else
+            $formatted = sprintf('%s <%s>', '=?'.$this->CharSet.'?B?'.base64_encode($addr[1]).'?=', $addr[0]);
+
+        return $formatted;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/mail/xoopsmultimailer.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/mimetypes.inc.php
===================================================================
--- XoopsCore/trunk/htdocs/class/mimetypes.inc.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/mimetypes.inc.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,235 @@
+<?php
+
+// $Id$
+
+/**
+
+* Extension to mimetype lookup table
+
+*
+
+* This file is provided as an helper for objects who need to perform filename to mimetype translations.
+
+* Common types have been provided, but feel free to add your own one if you need it.
+
+* <br /><br />
+
+* See the enclosed file LICENSE for licensing information.
+
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+
+*
+
+* @copyright    The Xoops project http://www.xoops.org/
+
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+
+* @author       Skalpa Keo <skalpa at xoops.org>
+
+* @since        2.0.9.3
+
+*/
+
+return array(
+
+     "hqx"		=> "application/mac-binhex40",
+
+     "doc"		=> "application/msword",
+
+     "dot"		=> "application/msword",
+
+     "bin"		=> "application/octet-stream",
+
+     "lha"		=> "application/octet-stream",
+
+     "lzh"		=> "application/octet-stream",
+
+     "exe"		=> "application/octet-stream",
+
+     "class"	=> "application/octet-stream",
+
+     "so"		=> "application/octet-stream",
+
+     "dll"		=> "application/octet-stream",
+
+     "pdf"		=> "application/pdf",
+
+     "ai"		=> "application/postscript",
+
+     "eps"		=> "application/postscript",
+
+     "ps"		=> "application/postscript",
+
+     "smi"		=> "application/smil",
+
+     "smil"		=> "application/smil",
+
+     "wbxml"	=> "application/vnd.wap.wbxml",
+
+     "wmlc"		=> "application/vnd.wap.wmlc",
+
+     "wmlsc"	=> "application/vnd.wap.wmlscriptc",
+
+     "xla"		=> "application/vnd.ms-excel",
+
+     "xls"		=> "application/vnd.ms-excel",
+
+     "xlt"		=> "application/vnd.ms-excel",
+
+     "ppt"		=> "application/vnd.ms-powerpoint",
+
+     "csh"		=> "application/x-csh",
+
+     "dcr"		=> "application/x-director",
+
+     "dir"		=> "application/x-director",
+
+     "dxr"		=> "application/x-director",
+
+     "spl"		=> "application/x-futuresplash",
+
+     "gtar"		=> "application/x-gtar",
+
+     "php"		=> "application/x-httpd-php",
+
+     "php3"		=> "application/x-httpd-php",
+
+     "php5"		=> "application/x-httpd-php",
+
+     "phtml"	=> "application/x-httpd-php",
+
+     "js"		=> "application/x-javascript",
+
+     "sh"		=> "application/x-sh",
+
+     "swf"		=> "application/x-shockwave-flash",
+
+     "sit"		=> "application/x-stuffit",
+
+     "tar"		=> "application/x-tar",
+
+     "tcl"		=> "application/x-tcl",
+
+     "xhtml"	=> "application/xhtml+xml",
+
+     "xht"		=> "application/xhtml+xml",
+
+     "xhtml"	=> "application/xml",
+
+     "ent"		=> "application/xml-external-parsed-entity",
+
+     "dtd"		=> "application/xml-dtd",
+
+     "mod"		=> "application/xml-dtd",
+
+     "gz"		=> "application/x-gzip",
+
+     "zip"		=> "application/zip",
+
+     "au"		=> "audio/basic",
+
+     "snd"		=> "audio/basic",
+
+     "mid"		=> "audio/midi",
+
+     "midi"		=> "audio/midi",
+
+     "kar"		=> "audio/midi",
+
+     "mp1"		=> "audio/mpeg",
+
+     "mp2"		=> "audio/mpeg",
+
+     "mp3"		=> "audio/mpeg",
+
+     "aif"		=> "audio/x-aiff",
+
+     "aiff"		=> "audio/x-aiff",
+
+     "m3u"		=> "audio/x-mpegurl",
+
+     "ram"		=> "audio/x-pn-realaudio",
+
+     "rm"		=> "audio/x-pn-realaudio",
+
+     "rpm"		=> "audio/x-pn-realaudio-plugin",
+
+     "ra"		=> "audio/x-realaudio",
+
+     "wav"		=> "audio/x-wav",
+
+     "bmp"		=> "image/bmp",
+
+     "gif"		=> "image/gif",
+
+     "jpeg"		=> "image/jpeg",
+
+     "jpg"		=> "image/jpeg",
+
+     "jpe"		=> "image/jpeg",
+
+     "png"		=> "image/png",
+
+     "tiff"		=> "image/tiff",
+
+     "tif"		=> "image/tif",
+
+     "wbmp"		=> "image/vnd.wap.wbmp",
+
+     "pnm"		=> "image/x-portable-anymap",
+
+     "pbm"		=> "image/x-portable-bitmap",
+
+     "pgm"		=> "image/x-portable-graymap",
+
+     "ppm"		=> "image/x-portable-pixmap",
+
+     "xbm"		=> "image/x-xbitmap",
+
+     "xpm"		=> "image/x-xpixmap",
+
+	 "ics"		=> "text/calendar",
+
+	 "ifb"		=> "text/calendar",
+
+     "css"		=> "text/css",
+
+     "html"		=> "text/html",
+
+     "htm"		=> "text/html",
+
+     "asc"		=> "text/plain",
+
+     "txt"		=> "text/plain",
+
+     "rtf"		=> "text/rtf",
+
+     "sgml"		=> "text/x-sgml",
+
+     "sgm"		=> "text/x-sgml",
+
+     "tsv"		=> "text/tab-seperated-values",
+
+     "wml"		=> "text/vnd.wap.wml",
+
+     "wmls"		=> "text/vnd.wap.wmlscript",
+
+     "xsl"		=> "text/xml",
+
+     "mpeg"		=> "video/mpeg",
+
+     "mpg"		=> "video/mpeg",
+
+     "mpe"		=> "video/mpeg",
+
+     "qt"		=> "video/quicktime",
+
+     "mov"		=> "video/quicktime",
+
+     "avi"		=> "video/x-msvideo",
+
+);
+
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/mimetypes.inc.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/module.errorhandler.php
===================================================================
--- XoopsCore/trunk/htdocs/class/module.errorhandler.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/module.errorhandler.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,123 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author of File: Goghs (http://www.eqiao.com/)                             //
+################################################################################
+
+if ( !defined("XOOPS_C_ERRORHANDLER_INCLUDED") ) {
+	define("XOOPS_C_ERRORHANDLER_INCLUDED",1);
+
+	/**
+	 * Error Handler class
+	 *
+	 * @package		kernel
+	 * @subpackage	core
+	 *
+	 * @author		Goghs (http://www.eqiao.com/)  
+	 * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+	 */
+	class ErrorHandler
+	{
+		/**
+		 * Show an error message
+		 * 
+		 * @param   string  $e_code Errorcode
+		 * @param   integer $pages  How many pages should the link take you back?
+         * 
+         * @global  $xoopsConfig
+		 **/
+		function show($e_code, $pages=1)
+		{
+			global $xoopsConfig, $xoopsUser, $xoopsRequestUri, $xoopsModule, $xoopsLogger;
+			$errmsg = array(
+			"0001" =>"Could not connect to the forums database.",
+			"0002" => "The forum you selected does not exist. Please go back and try again.",
+			"0003" => "Password Incorrect.",
+			"0004" => "Could not query the topics database.",
+			"0005" => "Error getting messages from the database.",
+			"0006" => "Please enter the Nickname and the Password.",
+			"0007" => "You are not the Moderator of this forum therefore you can't perform this function.",
+			"0008" => "You did not enter the correct password, please go back and try again.",
+			"0009" => "Could not remove posts from the database.",
+			"0010" => "Could not move selected topic to selected forum. Please go back and try again.",
+			"0011" => "Could not lock the selected topic. Please go back and try again.",
+			"0012" => "Could not unlock the selected topic. Please go back and try again.",
+			"0013" => "Could not query the database. <br />Error: ".mysql_error()."",
+			"0014" => "No such user or post in the database.",
+			"0015" => "Search Engine was unable to query the forums database.",
+			"0016" => "That user does not exist. Please go back and search again.",
+			"0017" => "You must type a subject to post. You can't post an empty subject. Go back and enter the subject",
+			"0018" => "You must choose message icon to post. Go back and choose message icon.",
+			"0019" => "You must type a message to post. You can't post an empty message. Go back and enter a message.",
+			"0020" => "Could not enter data into the database. Please go back and try again.",
+			"0021" => "Can't delete the selected message.",
+			"0022" => "An error ocurred while querying the database.",
+			"0023" => "Selected message was not found in the forum database.",
+			"0024" => "You can't reply to that message. It wasn't sent to you.",
+			"0025" => "You can't post a reply to this topic, it has been locked. Contact the administrator if you have any question.",
+			"0026" => "The forum or topic you are attempting to post to does not exist. Please try again.",
+			"0027" => "You must enter your username and password. Go back and do so.",
+			"0028" => "You have entered an incorrect password. Go back and try again.",
+			"0029" => "Couldn't update post count.",
+			"0030" => "The forum you are attempting to post to does not exist. Please try again.",
+			"0031" => "Unknown Error",
+			"0035" => "You can't edit a post that's not yours.",
+			"0036" => "You do not have permission to edit this post.",
+			"0037" => "You did not supply the correct password or do not have permission to edit this post. Please go back and try again.",
+			"1001" => "Please enter value for Title.",
+			"1002" => "Please enter value for Phone.",
+			"1003" => "Please enter value for Summary.",
+			"1004" => "Please enter value for Address.",
+			"1005" => "Please enter value for City.",
+			"1006" => "Please enter value for State/Province.",
+			"1007" => "Please enter value for Zipcode.",
+			"1008" => "Please enter value for Description.",
+			"1009" => "Vote for the selected resource only once.<br />All votes are logged and reviewed.",
+			"1010" => "You cannot vote on the resource you submitted.<br />All votes are logged and reviewed.",
+			"1011" => "No rating selected - no vote tallied.",
+			"1013" => "Please enter a search query.",
+			"1016" => "Please enter value for URL.",
+			"1017" => "Please enter value for Home Page.",
+			"9999" => "OOPS! God Knows"
+			);
+
+			$errorno = array_keys($errmsg);
+			if (!in_array($e_code, $errorno)) {
+				$e_code = '9999';
+			}
+			include_once XOOPS_ROOT_PATH."/header.php";
+			//OpenTable();
+			echo "<div><b>".$xoopsConfig['sitename']." Error</b><br /><br />";
+			echo "Error Code: $e_code<br /><br /><br />";
+			echo "<b>ERROR:</b> $errmsg[$e_code]<br /><br /><br />";
+			echo "[ <a href='javascript:history.go(-".$pages.")'>Go Back</a> ]</div>";
+			//CloseTable();
+			include_once XOOPS_ROOT_PATH."/footer.php";
+			exit();
+		}
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/module.errorhandler.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/module.textsanitizer.php
===================================================================
--- XoopsCore/trunk/htdocs/class/module.textsanitizer.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/module.textsanitizer.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,572 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (http://www.myweb.ne.jp/, http://jp.xoops.org/)        //
+//         Goghs Cheng (http://www.eqiao.com, http://www.devbeez.com/)       //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+/**
+ * Class to "clean up" text for various uses
+ *
+ * <b>Singleton</b>
+ *
+ * @package		kernel
+ * @subpackage	core
+ *
+ * @author		Kazumi Ono 	<onokazu at xoops.org>
+ * @author      Goghs Cheng
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class MyTextSanitizer
+{
+	/**
+	 * @var	array
+	 */
+	var $smileys = array();
+
+	/**
+	 *
+	 */
+	var $censorConf;
+
+	/*
+	* Constructor of this class
+    *
+	* Gets allowed html tags from admin config settings
+	* <br> should not be allowed since nl2br will be used
+	* when storing data.
+    *
+    * @access	private
+    *
+    * @todo Sofar, this does nuttin' ;-)
+	*/
+	function MyTextSanitizer()
+	{
+
+	}
+
+	/**
+	 * Access the only instance of this class
+     *
+     * @return	object
+     *
+     * @static
+     * @staticvar   object
+	 */
+	function &getInstance()
+	{
+		static $instance;
+		if (!isset($instance)) {
+			$instance = new MyTextSanitizer();
+		}
+		return $instance;
+	}
+
+	/**
+	 * Get the smileys
+     *
+     * @return	array
+	 */
+	function getSmileys()
+	{
+		return $this->smileys;
+	}
+
+    /**
+     * Replace emoticons in the message with smiley images
+     *
+     * @param	string  $message
+     *
+     * @return	string
+     */
+    function &smiley($message)
+	{
+		$db =& Database::getInstance();
+		if (count($this->smileys) == 0) {
+			if ($getsmiles = $db->query("SELECT * FROM ".$db->prefix("smiles"))){
+				while ($smiles = $db->fetchArray($getsmiles)) {
+					$message =& str_replace($smiles['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smiles['smile_url']).'" alt="" />', $message);
+					array_push($this->smileys, $smiles);
+				}
+			}
+		} 
+		elseif (is_array($this->smileys)) {
+			foreach ($this->smileys as $smile) {
+				$message =& str_replace($smile['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smile['smile_url']).'" alt="" />', $message);
+			}
+		}
+		return $message;
+	}
+
+	/**
+	 * Make links in the text clickable
+	 *
+	 * @param   string  $text
+	 * @return  string
+	 **/
+	function &makeClickable(&$text)
+	{
+		$patterns = array("/(^|[^]_a-z0-9-=\"'\/])([a-z]+?):\/\/([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/])www\.([a-z0-9\-]+)\.([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/])ftp\.([a-z0-9\-]+)\.([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/:\.])([a-z0-9\-_\.]+?)@([^, \r\n\"\(\)'<>\[\]]+)/i");
+		$replacements = array("\\1<a href=\"\\2://\\3\" target=\"_blank\">\\2://\\3</a>", "\\1<a href=\"http://www.\\2.\\3\" target=\"_blank\">www.\\2.\\3</a>", "\\1<a href=\"ftp://ftp.\\2.\\3\" target=\"_blank\">ftp.\\2.\\3</a>", "\\1<a href=\"mailto:\\2@\\3\">\\2@\\3</a>");
+		return preg_replace($patterns, $replacements, $text);
+	}
+
+	/**
+	 * Replace XoopsCodes with their equivalent HTML formatting
+	 *
+	 * @param   string  $text
+	 * @param   bool    $allowimage Allow images in the text?
+     *                              On FALSE, uses links to images.
+	 * @return  string
+	 **/
+	function &xoopsCodeDecode(&$text, $allowimage = 1)
+	{
+		$patterns = array();
+		$replacements = array();
+		//$patterns[] = "/\[code](.*)\[\/code\]/esU";
+		//$replacements[] = "'<div class=\"xoopsCode\"><code><pre>'.wordwrap(MyTextSanitizer::htmlSpecialChars('\\1'), 100).'</pre></code></div>'";
+		// RMV: added new markup for intrasite url (allows easier site moves)
+		// TODO: automatically convert other URLs to this format if XOOPS_URL matches??
+		$patterns[] = "/\[siteurl=(['\"]?)([^\"'<>]*)\\1](.*)\[\/siteurl\]/sU";
+		$replacements[] = '<a href="'.XOOPS_URL.'/\\2" target="_blank">\\3</a>';
+		$patterns[] = "/\[url=(['\"]?)(http[s]?:\/\/[^\"'<>]*)\\1](.*)\[\/url\]/sU";
+		$replacements[] = '<a href="\\2" target="_blank">\\3</a>';
+		$patterns[] = "/\[url=(['\"]?)(ftp?:\/\/[^\"'<>]*)\\1](.*)\[\/url\]/sU";
+		$replacements[] = '<a href="\\2" target="_blank">\\3</a>';
+		$patterns[] = "/\[url=(['\"]?)([^\"'<>]*)\\1](.*)\[\/url\]/sU";
+		$replacements[] = '<a href="http://\\2" target="_blank">\\3</a>';
+		$patterns[] = "/\[color=(['\"]?)([a-zA-Z0-9]*)\\1](.*)\[\/color\]/sU";
+		$replacements[] = '<span style="color: #\\2;">\\3</span>';
+		$patterns[] = "/\[size=(['\"]?)([a-z0-9-]*)\\1](.*)\[\/size\]/sU";
+		$replacements[] = '<span style="font-size: \\2;">\\3</span>';
+		$patterns[] = "/\[font=(['\"]?)([^;<>\*\(\)\"']*)\\1](.*)\[\/font\]/sU";
+		$replacements[] = '<span style="font-family: \\2;">\\3</span>';
+		$patterns[] = "/\[email]([^;<>\*\(\)\"']*)\[\/email\]/sU";
+		$replacements[] = '<a href="mailto:\\1">\\1</a>';
+		$patterns[] = "/\[b](.*)\[\/b\]/sU";
+		$replacements[] = '<b>\\1</b>';
+		$patterns[] = "/\[i](.*)\[\/i\]/sU";
+		$replacements[] = '<i>\\1</i>';
+		$patterns[] = "/\[u](.*)\[\/u\]/sU";
+		$replacements[] = '<u>\\1</u>';
+		$patterns[] = "/\[d](.*)\[\/d\]/sU";
+		$replacements[] = '<del>\\1</del>';
+		//$patterns[] = "/\[li](.*)\[\/li\]/sU";
+		//$replacements[] = '<li>\\1</li>';
+		$patterns[] = "/\[img align=(['\"]?)(left|center|right)\\1]([^\"\(\)\?\&'<>]*)\[\/img\]/sU";
+		$patterns[] = "/\[img]([^\"\(\)\?\&'<>]*)\[\/img\]/sU";
+		$patterns[] = "/\[img align=(['\"]?)(left|center|right)\\1 id=(['\"]?)([0-9]*)\\3]([^\"\(\)\?\&'<>]*)\[\/img\]/sU";
+		$patterns[] = "/\[img id=(['\"]?)([0-9]*)\\1]([^\"\(\)\?\&'<>]*)\[\/img\]/sU";
+		if ($allowimage != 1) {
+			$replacements[] = '<a href="\\3" target="_blank">\\3</a>';
+			$replacements[] = '<a href="\\1" target="_blank">\\1</a>';
+			$replacements[] = '<a href="'.XOOPS_URL.'/image.php?id=\\4" target="_blank">\\4</a>';
+			$replacements[] = '<a href="'.XOOPS_URL.'/image.php?id=\\2" target="_blank">\\3</a>';
+		} else {
+			$replacements[] = '<img src="\\3" align="\\2" alt="" />';
+			$replacements[] = '<img src="\\1" alt="" />';
+			$replacements[] = '<img src="'.XOOPS_URL.'/image.php?id=\\4" align="\\2" alt="\\4" />';
+			$replacements[] = '<img src="'.XOOPS_URL.'/image.php?id=\\2" alt="\\3" />';
+		}
+		$patterns[] = "/\[quote]/sU";
+		$replacements[] = _QUOTEC.'<div class="xoopsQuote"><blockquote>';
+		//$replacements[] = 'Quote: <div class="xoopsQuote"><blockquote>';
+		$patterns[] = "/\[\/quote]/sU";
+		$replacements[] = '</blockquote></div>';
+		$text = str_replace( "\x00", "", $text );
+		$c = "[\x01-\x1f]*";
+		$patterns[] = "/j{$c}a{$c}v{$c}a{$c}s{$c}c{$c}r{$c}i{$c}p{$c}t{$c}:/si";
+		$replacements[] = "(tammairanslip)";
+		$patterns[] = "/a{$c}b{$c}o{$c}u{$c}t{$c}:/si";
+		$replacements[] = "about :";
+		return preg_replace($patterns, $replacements, $text);
+	}
+
+	/**
+	 * Convert linebreaks to <br /> tags
+     *
+     * @param	string  $text
+     *
+     * @return	string
+	 */
+	function &nl2Br($text)
+	{
+		return preg_replace("/(\015\012)|(\015)|(\012)/","<br />",$text);
+	}
+
+	/**
+	 * Add slashes to the text if magic_quotes_gpc is turned off.
+	 *
+	 * @param   string  $text
+	 * @return  string
+	 **/
+	function &addSlashes($text)
+	{
+		if (!get_magic_quotes_gpc()) {
+			$text =& addslashes($text);
+		}
+		return $text;
+	}
+	/*
+	* if magic_quotes_gpc is on, stirip back slashes
+    *
+    * @param	string  $text
+    *
+    * @return	string
+	*/
+	function &stripSlashesGPC($text)
+	{
+		if (get_magic_quotes_gpc()) {
+			$text =& stripslashes($text);
+		}
+		return $text;
+	}
+
+	/*
+	*  for displaying data in html textbox forms
+    *
+    * @param	string  $text
+    *
+    * @return	string
+	*/
+	function &htmlSpecialChars($text)
+	{
+		//return preg_replace("/&amp;/i", '&', htmlspecialchars($text, ENT_QUOTES));
+		return preg_replace(array("/&amp;/i", "/&nbsp;/i"), array('&', '&amp;nbsp;'), htmlspecialchars($text, ENT_QUOTES));
+	}
+
+	/**
+	 * Reverses {@link htmlSpecialChars()}
+	 *
+	 * @param   string  $text
+	 * @return  string
+	 **/
+	function &undoHtmlSpecialChars(&$text)
+	{
+		return preg_replace(array("/&gt;/i", "/&lt;/i", "/&quot;/i", "/&#039;/i"), array(">", "<", "\"", "'"), $text);
+	}
+
+	/**
+	 * Filters textarea form data in DB for display
+	 *
+	 * @param   string  $text
+	 * @param   bool    $html   allow html?
+	 * @param   bool    $smiley allow smileys?
+	 * @param   bool    $xcode  allow xoopscode?
+	 * @param   bool    $image  allow inline images?
+	 * @param   bool    $br     convert linebreaks?
+	 * @return  string
+	 **/
+	function &displayTarea(&$text, $html = 0, $smiley = 1, $xcode = 1, $image = 1, $br = 1)
+	{
+		if ($html != 1) {
+			// html not allowed
+			$text =& $this->htmlSpecialChars($text);
+		}
+		$text =& $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
+		$text =& $this->makeClickable($text);
+		if ($smiley != 0) {
+			// process smiley
+			$text =& $this->smiley($text);
+		}
+		if ($xcode != 0) {
+			// decode xcode
+			if ($image != 0) {
+				// image allowed
+				$text =& $this->xoopsCodeDecode($text);
+            		} else {
+                		// image not allowed
+                		$text =& $this->xoopsCodeDecode($text, 0);
+			}
+		}
+		if ($br != 0) {
+			$text =& $this->nl2Br($text);
+		}
+		$text =& $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
+		return $text;
+	}
+
+	/**
+	 * Filters textarea form data submitted for preview
+	 *
+	 * @param   string  $text
+	 * @param   bool    $html   allow html?
+	 * @param   bool    $smiley allow smileys?
+	 * @param   bool    $xcode  allow xoopscode?
+	 * @param   bool    $image  allow inline images?
+	 * @param   bool    $br     convert linebreaks?
+	 * @return  string
+	 **/
+	function &previewTarea(&$text, $html = 0, $smiley = 1, $xcode = 1, $image = 1, $br = 1)
+	{
+		$text =& $this->stripSlashesGPC($text);
+		if ($html != 1) {
+			// html not allowed
+			$text =& $this->htmlSpecialChars($text);
+		}
+		$text =& $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
+		$text =& $this->makeClickable($text);
+		if ($smiley != 0) {
+			// process smiley
+			$text =& $this->smiley($text);
+		}
+		if ($xcode != 0) {
+			// decode xcode
+			if ($image != 0) {
+				// image allowed
+				$text =& $this->xoopsCodeDecode($text);
+			} else {
+				// image not allowed
+				$text =& $this->xoopsCodeDecode($text, 0);
+			}
+		}
+		if ($br != 0) {
+			$text =& $this->nl2Br($text);
+		}
+		$text =& $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
+		return $text;
+	}
+
+	/**
+	 * Replaces banned words in a string with their replacements
+	 *
+	 * @param   string $text
+	 * @return  string
+     *
+     * @deprecated
+	 **/
+	function &censorString(&$text)
+	{
+		if (!isset($this->censorConf)) {
+			$config_handler =& xoops_gethandler('config');
+			$this->censorConf =& $config_handler->getConfigsByCat(XOOPS_CONF_CENSOR);
+		}
+		if ($this->censorConf['censor_enable'] == 1) {
+			$replacement = $this->censorConf['censor_replace'];
+			foreach ($this->censorConf['censor_words'] as $bad) {
+				if ( !empty($bad) ) {
+	 				$bad = quotemeta($bad);
+					$patterns[] = "/(\s)".$bad."/siU";
+					$replacements[] = "\\1".$replacement;
+					$patterns[] = "/^".$bad."/siU";
+					$replacements[] = $replacement;
+					$patterns[] = "/(\n)".$bad."/siU";
+					$replacements[] = "\\1".$replacement;
+					$patterns[] = "/]".$bad."/siU";
+					$replacements[] = "]".$replacement;
+					$text = preg_replace($patterns, $replacements, $text);
+				}
+   			}
+		}
+   		return $text;
+	}
+
+
+	/**#@+
+	 * Sanitizing of [code] tag
+	 */
+	function codePreConv($text, $xcode = 1) {
+		if($xcode != 0){
+			$patterns = "/\[code](.*)\[\/code\]/esU";
+			$replacements = "'[code]'.base64_encode('$1').'[/code]'";
+			$text =  preg_replace($patterns, $replacements, $text);
+		}
+		return $text;
+	}
+
+	function codeConv($text, $xcode = 1, $image = 1){
+		if($xcode != 0){
+			$patterns = "/\[code](.*)\[\/code\]/esU";
+			if ($image != 0) {
+				// image allowed
+				$replacements = "'<div class=\"xoopsCode\"><code><pre>'.MyTextSanitizer::codeSanitizer('$1').'</pre></code></div>'";
+				//$text =& $this->xoopsCodeDecode($text);
+			} else {
+				// image not allowed
+				$replacements = "'<div class=\"xoopsCode\"><code><pre>'.MyTextSanitizer::codeSanitizer('$1', 0).'</pre></code></div>'";
+				//$text =& $this->xoopsCodeDecode($text, 0);
+			}
+			$text =  preg_replace($patterns, $replacements, $text);
+		}
+		return $text;
+	}
+
+	function codeSanitizer($str, $image = 1){
+		if($image != 0){
+			$str = $this->xoopsCodeDecode(
+				$this->htmlSpecialChars(str_replace('\"', '"', base64_decode($str)))
+				);
+		}else{
+			$str = $this->xoopsCodeDecode(
+				$this->htmlSpecialChars(str_replace('\"', '"', base64_decode($str))),0
+				);
+		}
+		return $str;
+	}
+
+
+	/**#@-*/
+
+
+##################### Deprecated Methods ######################
+
+	/**#@+
+	 * @deprecated
+	 */
+	function sanitizeForDisplay($text, $allowhtml = 0, $smiley = 1, $bbcode = 1)
+	{
+		if ( $allowhtml == 0 ) {
+			$text = $this->htmlSpecialChars($text);
+		} else {
+			//$config =& $GLOBALS['xoopsConfig'];
+			//$allowed = $config['allowed_html'];
+			//$text = strip_tags($text, $allowed);
+			$text = $this->makeClickable($text);
+		}
+		if ( $smiley == 1 ) {
+			$text = $this->smiley($text);
+		}
+		if ( $bbcode == 1 ) {
+			$text = $this->xoopsCodeDecode($text);
+		}
+		$text = $this->nl2Br($text);
+		return $text;
+	}
+
+	function sanitizeForPreview($text, $allowhtml = 0, $smiley = 1, $bbcode = 1)
+	{
+		$text = $this->oopsStripSlashesGPC($text);
+		if ( $allowhtml == 0 ) {
+			$text = $this->htmlSpecialChars($text);
+		} else {
+			//$config =& $GLOBALS['xoopsConfig'];
+			//$allowed = $config['allowed_html'];
+			//$text = strip_tags($text, $allowed);
+			$text = $this->makeClickable($text);
+		}
+		if ( $smiley == 1 ) {
+			$text = $this->smiley($text);
+		}
+		if ( $bbcode == 1 ) {
+			$text = $this->xoopsCodeDecode($text);
+		}
+		$text = $this->nl2Br($text);
+		return $text;
+	}
+
+	function makeTboxData4Save($text)
+	{
+		//$text = $this->undoHtmlSpecialChars($text);
+		return $this->addSlashes($text);
+	}
+
+	function makeTboxData4Show($text, $smiley=0)
+	{
+		$text = $this->htmlSpecialChars($text);
+		return $text;
+	}
+
+	function makeTboxData4Edit($text)
+	{
+		return $this->htmlSpecialChars($text);
+	}
+
+	function makeTboxData4Preview($text, $smiley=0)
+	{
+		$text = $this->stripSlashesGPC($text);
+		$text = $this->htmlSpecialChars($text);
+		return $text;
+	}
+
+	function makeTboxData4PreviewInForm($text)
+	{
+		$text = $this->stripSlashesGPC($text);
+		return $this->htmlSpecialChars($text);
+	}
+
+	function makeTareaData4Save($text)
+	{
+		return $this->addSlashes($text);
+	}
+
+	function &makeTareaData4Show(&$text, $html=1, $smiley=1, $xcode=1)
+	{
+		return $this->displayTarea($text, $html, $smiley, $xcode);
+	}
+
+	function makeTareaData4Edit($text)
+	{
+		return $this->htmlSpecialChars($text);
+	}
+
+	function &makeTareaData4Preview(&$text, $html=1, $smiley=1, $xcode=1)
+	{
+		return $this->previewTarea($text, $html, $smiley, $xcode);
+	}
+
+	function makeTareaData4PreviewInForm($text)
+	{
+		//if magic_quotes_gpc is on, do stipslashes
+		$text = $this->stripSlashesGPC($text);
+		return $this->htmlSpecialChars($text);
+	}
+
+	function makeTareaData4InsideQuotes($text)
+	{
+		return $this->htmlSpecialChars($text);
+	}
+
+	function &oopsStripSlashesGPC($text)
+	{
+		return $this->stripSlashesGPC($text);
+	}
+
+	function &oopsStripSlashesRT($text)
+	{
+		if (get_magic_quotes_runtime()) {
+			$text =& stripslashes($text);
+		}
+		return $text;
+	}
+
+	function &oopsAddSlashes($text)
+	{
+		return $this->addSlashes($text);
+	}
+
+	function &oopsHtmlSpecialChars($text)
+	{
+		return $this->htmlSpecialChars($text);
+	}
+
+	function &oopsNl2Br($text)
+	{
+		return $this->nl2br($text);
+	}
+    /**#@-*/
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/module.textsanitizer.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/pagenav.php
===================================================================
--- XoopsCore/trunk/htdocs/class/pagenav.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/pagenav.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,194 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+/**
+ * Class to facilitate navigation in a multi page document/list
+ *
+ * @package		kernel
+ * @subpackage	util
+ *
+ * @author		Kazumi Ono 	<onokazu at xoops.org>
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class XoopsPageNav
+{
+	/**#@+
+	 * @access	private
+	 */
+	var $total;
+	var $perpage;
+	var $current;
+	var $url;
+    /**#@-*/
+
+	/**
+	 * Constructor
+	 *
+	 * @param   int     $total_items    Total number of items
+	 * @param   int     $items_perpage  Number of items per page
+	 * @param   int     $current_start  First item on the current page
+	 * @param   string  $start_name     Name for "start" or "offset"
+	 * @param   string  $extra_arg      Additional arguments to pass in the URL
+	 **/
+	function XoopsPageNav($total_items, $items_perpage, $current_start, $start_name="start", $extra_arg="")
+	{
+		$this->total = intval($total_items);
+		$this->perpage = intval($items_perpage);
+		$this->current = intval($current_start);
+		if ( $extra_arg != '' && ( substr($extra_arg, -5) != '&amp;' || substr($extra_arg, -1) != '&' ) ) {
+			$extra_arg .= '&amp;';
+		}
+		$this->url = $_SERVER['PHP_SELF'].'?'.$extra_arg.trim($start_name).'=';
+	}
+
+	/**
+	 * Create text navigation
+	 *
+	 * @param   integer $offset
+	 * @return  string
+	 **/
+	function renderNav($offset = 4)
+	{
+		$ret = '';
+		if ( $this->total <= $this->perpage ) {
+			return $ret;
+		}
+		$total_pages = ceil($this->total / $this->perpage);
+		if ( $total_pages > 1 ) {
+			$prev = $this->current - $this->perpage;
+			if ( $prev >= 0 ) {
+				$ret .= '<a href="'.$this->url.$prev.'"><u>&laquo;</u></a> ';
+			}
+			$counter = 1;
+			$current_page = intval(floor(($this->current + $this->perpage) / $this->perpage));
+			while ( $counter <= $total_pages ) {
+				if ( $counter == $current_page ) {
+					$ret .= '<b>('.$counter.')</b> ';
+				} elseif ( ($counter > $current_page-$offset && $counter < $current_page + $offset ) || $counter == 1 || $counter == $total_pages ) {
+					if ( $counter == $total_pages && $current_page < $total_pages - $offset ) {
+						$ret .= '... ';
+					}
+					$ret .= '<a href="'.$this->url.(($counter - 1) * $this->perpage).'">'.$counter.'</a> ';
+					if ( $counter == 1 && $current_page > 1 + $offset ) {
+						$ret .= '... ';
+					}
+				}
+				$counter++;
+			}
+			$next = $this->current + $this->perpage;
+			if ( $this->total > $next ) {
+				$ret .= '<a href="'.$this->url.$next.'"><u>&raquo;</u></a> ';
+			}
+		}
+		return $ret;
+	}
+
+	/**
+	 * Create a navigational dropdown list
+	 *
+	 * @param   boolean     $showbutton Show the "Go" button?
+	 * @return  string
+	 **/
+	function renderSelect($showbutton = false)
+	{
+		if ( $this->total < $this->perpage ) {
+			return;
+		}
+		$total_pages = ceil($this->total / $this->perpage);
+		$ret = '';
+		if ( $total_pages > 1 ) {
+   			$ret = '<form name="pagenavform">';
+			$ret .= '<select name="pagenavselect" onchange="location=this.options[this.options.selectedIndex].value;">';
+			$counter = 1;
+			$current_page = intval(floor(($this->current + $this->perpage) / $this->perpage));
+			while ( $counter <= $total_pages ) {
+				if ( $counter == $current_page ) {
+					$ret .= '<option value="'.$this->url.(($counter - 1) * $this->perpage).'" selected="selected">'.$counter.'</option>';
+				} else {
+					$ret .= '<option value="'.$this->url.(($counter - 1) * $this->perpage).'">'.$counter.'</option>';
+				}
+				$counter++;
+			}
+			$ret .= '</select>';
+			if ($showbutton) {
+				$ret .= '&nbsp;<input type="submit" value="'._GO.'" />';
+			}
+			$ret .= '</form>';
+		}
+		return $ret;
+	}
+
+	/**
+	 * Create navigation with images
+	 *
+	 * @param   integer     $offset
+	 * @return  string
+	 **/
+	function renderImageNav($offset = 4)
+	{
+		if ( $this->total < $this->perpage ) {
+			return;
+		}
+		$total_pages = ceil($this->total / $this->perpage);
+		$ret = '';
+		if ( $total_pages > 1 ) {
+   			$ret = '<table><tr>';
+			$prev = $this->current - $this->perpage;
+			if ( $prev >= 0 ) {
+				$ret .= '<td class="pagneutral"><a href="'.$this->url.$prev.'">&lt;</a></td><td><img src="'.XOOPS_URL.'/images/blank.gif" width="6" alt="" /></td>';
+			}
+			$counter = 1;
+			$current_page = intval(floor(($this->current + $this->perpage) / $this->perpage));
+			while ( $counter <= $total_pages ) {
+				if ( $counter == $current_page ) {
+					$ret .= '<td class="pagact"><b>'.$counter.'</b></td>';
+				} elseif ( ($counter > $current_page-$offset && $counter < $current_page + $offset ) || $counter == 1 || $counter == $total_pages ) {
+					if ( $counter == $total_pages && $current_page < $total_pages - $offset ) {
+						$ret .= '<td class="paginact">...</td>';
+					}
+					$ret .= '<td class="paginact"><a href="'.$this->url.(($counter - 1) * $this->perpage).'">'.$counter.'</a></td>';
+					if ( $counter == 1 && $current_page > 1 + $offset ) {
+						$ret .= '<td class="paginact">...</td>';
+					}
+				}
+				$counter++;
+			}
+			$next = $this->current + $this->perpage;
+			if ( $this->total > $next ) {
+				$ret .= '<td><img src="'.XOOPS_URL.'/images/blank.gif" width="6" alt="" /></td><td class="pagneutral"><a href="'.$this->url.$next.'">&gt;</a></td>';
+			}
+			$ret .= '</tr></table>';
+		}
+		return $ret;
+	}
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/pagenav.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/Config_File.class.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/Config_File.class.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/Config_File.class.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,389 @@
+<?php
+
+/**
+ * Config_File class.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ * @link http://smarty.php.net/
+ * @version 2.6.5-dev
+ * @copyright Copyright: 2001-2004 ispi of Lincoln, Inc.
+ * @author Andrei Zmievski <andrei at php.net>
+ * @access public
+ * @package Smarty
+ */
+
+/* $Id$ */
+
+/**
+ * Config file reading class
+ * @package Smarty
+ */
+class Config_File {
+    /**#@+
+     * Options
+     * @var boolean
+     */
+    /**
+     * Controls whether variables with the same name overwrite each other.
+     */
+    var $overwrite        =    true;
+
+    /**
+     * Controls whether config values of on/true/yes and off/false/no get
+     * converted to boolean values automatically.
+     */
+    var $booleanize        =    true;
+
+    /**
+     * Controls whether hidden config sections/vars are read from the file.
+     */
+    var $read_hidden     =    true;
+
+    /**
+     * Controls whether or not to fix mac or dos formatted newlines.
+     * If set to true, \r or \r\n will be changed to \n.
+     */
+    var $fix_newlines =    true;
+    /**#@-*/
+
+    /** @access private */
+    var $_config_path    = "";
+    var $_config_data    = array();
+    /**#@-*/
+
+    /**
+     * Constructs a new config file class.
+     *
+     * @param string $config_path (optional) path to the config files
+     */
+    function Config_File($config_path = NULL)
+    {
+        if (isset($config_path))
+            $this->set_path($config_path);
+    }
+
+
+    /**
+     * Set the path where configuration files can be found.
+     *
+     * @param string $config_path path to the config files
+     */
+    function set_path($config_path)
+    {
+        if (!empty($config_path)) {
+            if (!is_string($config_path) || !file_exists($config_path) || !is_dir($config_path)) {
+                $this->_trigger_error_msg("Bad config file path '$config_path'");
+                return;
+            }
+            if(substr($config_path, -1) != DIRECTORY_SEPARATOR) {
+                $config_path .= DIRECTORY_SEPARATOR;
+            }
+
+            $this->_config_path = $config_path;
+        }
+    }
+
+
+    /**
+     * Retrieves config info based on the file, section, and variable name.
+     *
+     * @param string $file_name config file to get info for
+     * @param string $section_name (optional) section to get info for
+     * @param string $var_name (optional) variable to get info for
+     * @return string|array a value or array of values
+     */
+    function &get($file_name, $section_name = NULL, $var_name = NULL)
+    {
+        if (empty($file_name)) {
+            $this->_trigger_error_msg('Empty config file name');
+            return;
+        } else {
+            $file_name = $this->_config_path . $file_name;
+            if (!isset($this->_config_data[$file_name]))
+                $this->load_file($file_name, false);
+        }
+
+        if (!empty($var_name)) {
+            if (empty($section_name)) {
+                return $this->_config_data[$file_name]["vars"][$var_name];
+            } else {
+                if(isset($this->_config_data[$file_name]["sections"][$section_name]["vars"][$var_name]))
+                    return $this->_config_data[$file_name]["sections"][$section_name]["vars"][$var_name];
+                else
+                    return array();
+            }
+        } else {
+            if (empty($section_name)) {
+                return (array)$this->_config_data[$file_name]["vars"];
+            } else {
+                if(isset($this->_config_data[$file_name]["sections"][$section_name]["vars"]))
+                    return (array)$this->_config_data[$file_name]["sections"][$section_name]["vars"];
+                else
+                    return array();
+            }
+        }
+    }
+
+
+    /**
+     * Retrieves config info based on the key.
+     *
+     * @param $file_name string config key (filename/section/var)
+     * @return string|array same as get()
+     * @uses get() retrieves information from config file and returns it
+     */
+    function &get_key($config_key)
+    {
+        list($file_name, $section_name, $var_name) = explode('/', $config_key, 3);
+        $result = &$this->get($file_name, $section_name, $var_name);
+        return $result;
+    }
+
+    /**
+     * Get all loaded config file names.
+     *
+     * @return array an array of loaded config file names
+     */
+    function get_file_names()
+    {
+        return array_keys($this->_config_data);
+    }
+
+
+    /**
+     * Get all section names from a loaded file.
+     *
+     * @param string $file_name config file to get section names from
+     * @return array an array of section names from the specified file
+     */
+    function get_section_names($file_name)
+    {
+        $file_name = $this->_config_path . $file_name;
+        if (!isset($this->_config_data[$file_name])) {
+            $this->_trigger_error_msg("Unknown config file '$file_name'");
+            return;
+        }
+
+        return array_keys($this->_config_data[$file_name]["sections"]);
+    }
+
+
+    /**
+     * Get all global or section variable names.
+     *
+     * @param string $file_name config file to get info for
+     * @param string $section_name (optional) section to get info for
+     * @return array an array of variables names from the specified file/section
+     */
+    function get_var_names($file_name, $section = NULL)
+    {
+        if (empty($file_name)) {
+            $this->_trigger_error_msg('Empty config file name');
+            return;
+        } else if (!isset($this->_config_data[$file_name])) {
+            $this->_trigger_error_msg("Unknown config file '$file_name'");
+            return;
+        }
+
+        if (empty($section))
+            return array_keys($this->_config_data[$file_name]["vars"]);
+        else
+            return array_keys($this->_config_data[$file_name]["sections"][$section]["vars"]);
+    }
+
+
+    /**
+     * Clear loaded config data for a certain file or all files.
+     *
+     * @param string $file_name file to clear config data for
+     */
+    function clear($file_name = NULL)
+    {
+        if ($file_name === NULL)
+            $this->_config_data = array();
+        else if (isset($this->_config_data[$file_name]))
+            $this->_config_data[$file_name] = array();
+    }
+
+
+    /**
+     * Load a configuration file manually.
+     *
+     * @param string $file_name file name to load
+     * @param boolean $prepend_path whether current config path should be
+     *                              prepended to the filename
+     */
+    function load_file($file_name, $prepend_path = true)
+    {
+        if ($prepend_path && $this->_config_path != "")
+            $config_file = $this->_config_path . $file_name;
+        else
+            $config_file = $file_name;
+
+        ini_set('track_errors', true);
+        $fp = @fopen($config_file, "r");
+        if (!is_resource($fp)) {
+            $this->_trigger_error_msg("Could not open config file '$config_file'");
+            return false;
+        }
+
+        $contents = ($size = filesize($config_file)) ? fread($fp, $size) : '';
+        fclose($fp);
+
+        $this->_config_data[$config_file] = $this->parse_contents($contents);
+        return true;
+    }
+
+    /**
+     * Store the contents of a file manually.
+     *
+     * @param string $config_file file name of the related contents
+     * @param string $contents the file-contents to parse
+     */
+    function set_file_contents($config_file, $contents)
+    {
+        $this->_config_data[$config_file] = $this->parse_contents($contents);
+        return true;
+    }
+
+    /**
+     * parse the source of a configuration file manually.
+     *
+     * @param string $contents the file-contents to parse
+     */
+    function parse_contents($contents)
+    {
+        if($this->fix_newlines) {
+            // fix mac/dos formatted newlines
+            $contents = preg_replace('!\r\n?!', "\n", $contents);
+        }
+
+        $config_data = array();
+        $config_data['sections'] = array();
+        $config_data['vars'] = array();
+
+        /* reference to fill with data */
+        $vars =& $config_data['vars'];
+
+        /* parse file line by line */
+        preg_match_all('!^.*\r?\n?!m', $contents, $match);
+        $lines = $match[0];
+        for ($i=0, $count=count($lines); $i<$count; $i++) {
+            $line = $lines[$i];
+            if (empty($line)) continue;
+
+            if ( $line{0} == '[' && preg_match('!^\[(.*?)\]!', $line, $match) ) {
+                /* section found */
+                if ($match[1]{0} == '.') {
+                    /* hidden section */
+                    if ($this->read_hidden) {
+                        $section_name = substr($match[1], 1);
+                    } else {
+                        /* break reference to $vars to ignore hidden section */
+                        unset($vars);
+                        $vars = array();
+                        continue;
+                    }
+                } else {                    
+                    $section_name = $match[1];
+                }
+                if (!isset($config_data['sections'][$section_name]))
+                    $config_data['sections'][$section_name] = array('vars' => array());
+                $vars =& $config_data['sections'][$section_name]['vars'];
+                continue;
+            }
+
+            if (preg_match('/^\s*(\.?\w+)\s*=\s*(.*)/s', $line, $match)) {
+                /* variable found */
+                $var_name = rtrim($match[1]);
+                if (strpos($match[2], '"""') === 0) {
+                    /* handle multiline-value */
+                    $lines[$i] = substr($match[2], 3);
+                    $var_value = '';
+                    while ($i<$count) {
+                        if (($pos = strpos($lines[$i], '"""')) === false) {
+                            $var_value .= $lines[$i++];
+                        } else {
+                            /* end of multiline-value */
+                            $var_value .= substr($lines[$i], 0, $pos);
+                            break;
+                        }
+                    }
+                    $booleanize = false;
+
+                } else {
+                    /* handle simple value */
+                    $var_value = preg_replace('/^([\'"])(.*)\1$/', '\2', rtrim($match[2]));
+                    $booleanize = $this->booleanize;
+
+                }
+                $this->_set_config_var($vars, $var_name, $var_value, $booleanize);
+            }
+            /* else unparsable line / means it is a comment / means ignore it */
+        }
+        return $config_data;
+    }
+
+    /**#@+ @access private */
+    /**
+     * @param array &$container
+     * @param string $var_name
+     * @param mixed $var_value
+     * @param boolean $booleanize determines whether $var_value is converted to
+     *                            to true/false
+     */
+    function _set_config_var(&$container, $var_name, $var_value, $booleanize)
+    {
+        if ($var_name{0} == '.') {
+            if (!$this->read_hidden)
+                return;
+            else
+                $var_name = substr($var_name, 1);
+        }
+
+        if (!preg_match("/^[a-zA-Z_]\w*$/", $var_name)) {
+            $this->_trigger_error_msg("Bad variable name '$var_name'");
+            return;
+        }
+
+        if ($booleanize) {
+            if (preg_match("/^(on|true|yes)$/i", $var_value))
+                $var_value = true;
+            else if (preg_match("/^(off|false|no)$/i", $var_value))
+                $var_value = false;
+        }
+
+        if (!isset($container[$var_name]) || $this->overwrite)
+            $container[$var_name] = $var_value;
+        else {
+            settype($container[$var_name], 'array');
+            $container[$var_name][] = $var_value;
+        }
+    }
+
+    /**
+     * @uses trigger_error() creates a PHP warning/error
+     * @param string $error_msg
+     * @param integer $error_type one of
+     */
+    function _trigger_error_msg($error_msg, $error_type = E_USER_WARNING)
+    {
+        trigger_error("Config_File error: $error_msg", $error_type);
+    }
+    /**#@-*/
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/Config_File.class.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/Smarty.class.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/Smarty.class.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/Smarty.class.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,1932 @@
+<?php
+
+/**
+ * Project:     Smarty: the PHP compiling template engine
+ * File:        Smarty.class.php
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ * For questions, help, comments, discussion, etc., please join the
+ * Smarty mailing list. Send a blank e-mail to
+ * smarty-general-subscribe at lists.php.net
+ *
+ * @link http://smarty.php.net/
+ * @copyright 2001-2004 ispi of Lincoln, Inc.
+ * @author Monte Ohrt <monte at ispi.net>
+ * @author Andrei Zmievski <andrei at php.net>
+ * @package Smarty
+ * @version 2.6.5-dev
+ */
+
+/* $Id$ */
+
+/**
+ * DIR_SEP isn't used anymore, but third party apps might
+ */
+if(!defined('DIR_SEP')) {
+    define('DIR_SEP', DIRECTORY_SEPARATOR);
+}
+
+/**
+ * set SMARTY_DIR to absolute path to Smarty library files.
+ * if not defined, include_path will be used. Sets SMARTY_DIR only if user
+ * application has not already defined it.
+ */
+
+if (!defined('SMARTY_DIR')) {
+    define('SMARTY_DIR', dirname(__FILE__) . DIRECTORY_SEPARATOR);
+}
+
+define('SMARTY_PHP_PASSTHRU',   0);
+define('SMARTY_PHP_QUOTE',      1);
+define('SMARTY_PHP_REMOVE',     2);
+define('SMARTY_PHP_ALLOW',      3);
+
+/**
+ * @package Smarty
+ */
+class Smarty
+{
+    /**#@+
+     * Smarty Configuration Section
+     */
+
+    /**
+     * The name of the directory where templates are located.
+     *
+     * @var string
+     */
+    var $template_dir    =  'templates';
+
+    /**
+     * The directory where compiled templates are located.
+     *
+     * @var string
+     */
+    var $compile_dir     =  'templates_c';
+
+    /**
+     * The directory where config files are located.
+     *
+     * @var string
+     */
+    var $config_dir      =  'configs';
+
+    /**
+     * An array of directories searched for plugins.
+     *
+     * @var array
+     */
+    var $plugins_dir     =  array('plugins');
+
+    /**
+     * If debugging is enabled, a debug console window will display
+     * when the page loads (make sure your browser allows unrequested
+     * popup windows)
+     *
+     * @var boolean
+     */
+    var $debugging       =  false;
+
+    /**
+     * When set, smarty does uses this value as error_reporting-level.
+     *
+     * @var boolean
+     */
+    var $error_reporting  =  null;
+
+    /**
+     * This is the path to the debug console template. If not set,
+     * the default one will be used.
+     *
+     * @var string
+     */
+    var $debug_tpl       =  '';
+
+    /**
+     * This determines if debugging is enable-able from the browser.
+     * <ul>
+     *  <li>NONE => no debugging control allowed</li>
+     *  <li>URL => enable debugging when SMARTY_DEBUG is found in the URL.</li>
+     * </ul>
+     * @link http://www.foo.dom/index.php?SMARTY_DEBUG
+     * @var string
+     */
+    var $debugging_ctrl  =  'NONE';
+
+    /**
+     * This tells Smarty whether to check for recompiling or not. Recompiling
+     * does not need to happen unless a template or config file is changed.
+     * Typically you enable this during development, and disable for
+     * production.
+     *
+     * @var boolean
+     */
+    var $compile_check   =  true;
+
+    /**
+     * This forces templates to compile every time. Useful for development
+     * or debugging.
+     *
+     * @var boolean
+     */
+    var $force_compile   =  false;
+
+    /**
+     * This enables template caching.
+     * <ul>
+     *  <li>0 = no caching</li>
+     *  <li>1 = use class cache_lifetime value</li>
+     *  <li>2 = use cache_lifetime in cache file</li>
+     * </ul>
+     * @var integer
+     */
+    var $caching         =  0;
+
+    /**
+     * The name of the directory for cache files.
+     *
+     * @var string
+     */
+    var $cache_dir       =  'cache';
+
+    /**
+     * This is the number of seconds cached content will persist.
+     * <ul>
+     *  <li>0 = always regenerate cache</li>
+     *  <li>-1 = never expires</li>
+     * </ul>
+     *
+     * @var integer
+     */
+    var $cache_lifetime  =  3600;
+
+    /**
+     * Only used when $caching is enabled. If true, then If-Modified-Since headers
+     * are respected with cached content, and appropriate HTTP headers are sent.
+     * This way repeated hits to a cached page do not send the entire page to the
+     * client every time.
+     *
+     * @var boolean
+     */
+    var $cache_modified_check = false;
+
+    /**
+     * This determines how Smarty handles "<?php ... ?>" tags in templates.
+     * possible values:
+     * <ul>
+     *  <li>SMARTY_PHP_PASSTHRU -> print tags as plain text</li>
+     *  <li>SMARTY_PHP_QUOTE    -> escape tags as entities</li>
+     *  <li>SMARTY_PHP_REMOVE   -> remove php tags</li>
+     *  <li>SMARTY_PHP_ALLOW    -> execute php tags</li>
+     * </ul>
+     *
+     * @var integer
+     */
+    var $php_handling    =  SMARTY_PHP_PASSTHRU;
+
+    /**
+     * This enables template security. When enabled, many things are restricted
+     * in the templates that normally would go unchecked. This is useful when
+     * untrusted parties are editing templates and you want a reasonable level
+     * of security. (no direct execution of PHP in templates for example)
+     *
+     * @var boolean
+     */
+    var $security       =   false;
+
+    /**
+     * This is the list of template directories that are considered secure. This
+     * is used only if {@link $security} is enabled. One directory per array
+     * element.  {@link $template_dir} is in this list implicitly.
+     *
+     * @var array
+     */
+    var $secure_dir     =   array();
+
+    /**
+     * These are the security settings for Smarty. They are used only when
+     * {@link $security} is enabled.
+     *
+     * @var array
+     */
+    var $security_settings  = array(
+                                    'PHP_HANDLING'    => false,
+                                    'IF_FUNCS'        => array('array', 'list',
+                                                               'isset', 'empty',
+                                                               'count', 'sizeof',
+                                                               'in_array', 'is_array',
+                                                               'true','false'),
+                                    'INCLUDE_ANY'     => false,
+                                    'PHP_TAGS'        => false,
+                                    'MODIFIER_FUNCS'  => array('count'),
+                                    'ALLOW_CONSTANTS'  => false
+                                   );
+
+    /**
+     * This is an array of directories where trusted php scripts reside.
+     * {@link $security} is disabled during their inclusion/execution.
+     *
+     * @var array
+     */
+    var $trusted_dir        = array();
+
+    /**
+     * The left delimiter used for the template tags.
+     *
+     * @var string
+     */
+    var $left_delimiter  =  '{';
+
+    /**
+     * The right delimiter used for the template tags.
+     *
+     * @var string
+     */
+    var $right_delimiter =  '}';
+
+    /**
+     * The order in which request variables are registered, similar to
+     * variables_order in php.ini E = Environment, G = GET, P = POST,
+     * C = Cookies, S = Server
+     *
+     * @var string
+     */
+    var $request_vars_order    = 'EGPCS';
+
+    /**
+     * Indicates wether $HTTP_*_VARS[] (request_use_auto_globals=false)
+     * are uses as request-vars or $_*[]-vars. note: if
+     * request_use_auto_globals is true, then $request_vars_order has
+     * no effect, but the php-ini-value "gpc_order"
+     *
+     * @var boolean
+     */
+    var $request_use_auto_globals      = true;
+
+    /**
+     * Set this if you want different sets of compiled files for the same
+     * templates. This is useful for things like different languages.
+     * Instead of creating separate sets of templates per language, you
+     * set different compile_ids like 'en' and 'de'.
+     *
+     * @var string
+     */
+    var $compile_id            = null;
+
+    /**
+     * This tells Smarty whether or not to use sub dirs in the cache/ and
+     * templates_c/ directories. sub directories better organized, but
+     * may not work well with PHP safe mode enabled.
+     *
+     * @var boolean
+     *
+     */
+    var $use_sub_dirs          = false;
+
+    /**
+     * This is a list of the modifiers to apply to all template variables.
+     * Put each modifier in a separate array element in the order you want
+     * them applied. example: <code>array('escape:"htmlall"');</code>
+     *
+     * @var array
+     */
+    var $default_modifiers        = array();
+
+    /**
+     * This is the resource type to be used when not specified
+     * at the beginning of the resource path. examples:
+     * $smarty->display('file:index.tpl');
+     * $smarty->display('db:index.tpl');
+     * $smarty->display('index.tpl'); // will use default resource type
+     * {include file="file:index.tpl"}
+     * {include file="db:index.tpl"}
+     * {include file="index.tpl"} {* will use default resource type *}
+     *
+     * @var array
+     */
+    var $default_resource_type    = 'file';
+
+    /**
+     * The function used for cache file handling. If not set, built-in caching is used.
+     *
+     * @var null|string function name
+     */
+    var $cache_handler_func   = null;
+
+    /**
+     * This indicates which filters are automatically loaded into Smarty.
+     *
+     * @var array array of filter names
+     */
+    var $autoload_filters = array();
+
+    /**#@+
+     * @var boolean
+     */
+    /**
+     * This tells if config file vars of the same name overwrite each other or not.
+     * if disabled, same name variables are accumulated in an array.
+     */
+    var $config_overwrite = true;
+
+    /**
+     * This tells whether or not to automatically booleanize config file variables.
+     * If enabled, then the strings "on", "true", and "yes" are treated as boolean
+     * true, and "off", "false" and "no" are treated as boolean false.
+     */
+    var $config_booleanize = true;
+
+    /**
+     * This tells whether hidden sections [.foobar] are readable from the
+     * tempalates or not. Normally you would never allow this since that is
+     * the point behind hidden sections: the application can access them, but
+     * the templates cannot.
+     */
+    var $config_read_hidden = false;
+
+    /**
+     * This tells whether or not automatically fix newlines in config files.
+     * It basically converts \r (mac) or \r\n (dos) to \n
+     */
+    var $config_fix_newlines = true;
+    /**#@-*/
+
+    /**
+     * If a template cannot be found, this PHP function will be executed.
+     * Useful for creating templates on-the-fly or other special action.
+     *
+     * @var string function name
+     */
+    var $default_template_handler_func = '';
+
+    /**
+     * The file that contains the compiler class. This can a full
+     * pathname, or relative to the php_include path.
+     *
+     * @var string
+     */
+    var $compiler_file        =    'Smarty_Compiler.class.php';
+
+    /**
+     * The class used for compiling templates.
+     *
+     * @var string
+     */
+    var $compiler_class        =   'Smarty_Compiler';
+
+    /**
+     * The class used to load config vars.
+     *
+     * @var string
+     */
+    var $config_class          =   'Config_File';
+
+/**#@+
+ * END Smarty Configuration Section
+ * There should be no need to touch anything below this line.
+ * @access private
+ */
+    /**
+     * where assigned template vars are kept
+     *
+     * @var array
+     */
+    var $_tpl_vars             = array();
+
+    /**
+     * stores run-time $smarty.* vars
+     *
+     * @var null|array
+     */
+    var $_smarty_vars          = null;
+
+    /**
+     * keeps track of sections
+     *
+     * @var array
+     */
+    var $_sections             = array();
+
+    /**
+     * keeps track of foreach blocks
+     *
+     * @var array
+     */
+    var $_foreach              = array();
+
+    /**
+     * keeps track of tag hierarchy
+     *
+     * @var array
+     */
+    var $_tag_stack            = array();
+
+    /**
+     * configuration object
+     *
+     * @var Config_file
+     */
+    var $_conf_obj             = null;
+
+    /**
+     * loaded configuration settings
+     *
+     * @var array
+     */
+    var $_config               = array(array('vars'  => array(), 'files' => array()));
+
+    /**
+     * md5 checksum of the string 'Smarty'
+     *
+     * @var string
+     */
+    var $_smarty_md5           = 'f8d698aea36fcbead2b9d5359ffca76f';
+
+    /**
+     * Smarty version number
+     *
+     * @var string
+     */
+    var $_version              = '2.6.5-dev';
+
+    /**
+     * current template inclusion depth
+     *
+     * @var integer
+     */
+    var $_inclusion_depth      = 0;
+
+    /**
+     * for different compiled templates
+     *
+     * @var string
+     */
+    var $_compile_id           = null;
+
+    /**
+     * text in URL to enable debug mode
+     *
+     * @var string
+     */
+    var $_smarty_debug_id      = 'SMARTY_DEBUG';
+
+    /**
+     * debugging information for debug console
+     *
+     * @var array
+     */
+    var $_smarty_debug_info    = array();
+
+    /**
+     * info that makes up a cache file
+     *
+     * @var array
+     */
+    var $_cache_info           = array();
+
+    /**
+     * default file permissions
+     *
+     * @var integer
+     */
+    var $_file_perms           = 0644;
+
+    /**
+     * default dir permissions
+     *
+     * @var integer
+     */
+    var $_dir_perms               = 0771;
+
+    /**
+     * registered objects
+     *
+     * @var array
+     */
+    var $_reg_objects           = array();
+
+    /**
+     * table keeping track of plugins
+     *
+     * @var array
+     */
+    var $_plugins              = array(
+                                       'modifier'      => array(),
+                                       'function'      => array(),
+                                       'block'         => array(),
+                                       'compiler'      => array(),
+                                       'prefilter'     => array(),
+                                       'postfilter'    => array(),
+                                       'outputfilter'  => array(),
+                                       'resource'      => array(),
+                                       'insert'        => array());
+
+
+    /**
+     * cache serials
+     *
+     * @var array
+     */
+    var $_cache_serials = array();
+
+    /**
+     * name of optional cache include file
+     *
+     * @var string
+     */
+    var $_cache_include = null;
+
+    /**
+     * indicate if the current code is used in a compiled
+     * include
+     *
+     * @var string
+     */
+    var $_cache_including = false;
+
+    /**#@-*/
+    /**
+     * The class constructor.
+     */
+    function Smarty()
+    {
+      $this->assign('SCRIPT_NAME', isset($_SERVER['SCRIPT_NAME']) ? $_SERVER['SCRIPT_NAME']
+                    : @$GLOBALS['HTTP_SERVER_VARS']['SCRIPT_NAME']);
+    }
+
+    /**
+     * assigns values to template variables
+     *
+     * @param array|string $tpl_var the template variable name(s)
+     * @param mixed $value the value to assign
+     */
+    function assign($tpl_var, $value = null)
+    {
+        if (is_array($tpl_var)){
+            foreach ($tpl_var as $key => $val) {
+                if ($key != '') {
+                    $this->_tpl_vars[$key] = $val;
+                }
+            }
+        } else {
+            if ($tpl_var != '')
+                $this->_tpl_vars[$tpl_var] = $value;
+        }
+    }
+
+    /**
+     * assigns values to template variables by reference
+     *
+     * @param string $tpl_var the template variable name
+     * @param mixed $value the referenced value to assign
+     */
+    function assign_by_ref($tpl_var, &$value)
+    {
+        if ($tpl_var != '')
+            $this->_tpl_vars[$tpl_var] = &$value;
+    }
+
+    /**
+     * appends values to template variables
+     *
+     * @param array|string $tpl_var the template variable name(s)
+     * @param mixed $value the value to append
+     */
+    function append($tpl_var, $value=null, $merge=false)
+    {
+        if (is_array($tpl_var)) {
+            // $tpl_var is an array, ignore $value
+            foreach ($tpl_var as $_key => $_val) {
+                if ($_key != '') {
+                    if(!@is_array($this->_tpl_vars[$_key])) {
+                        settype($this->_tpl_vars[$_key],'array');
+                    }
+                    if($merge && is_array($_val)) {
+                        foreach($_val as $_mkey => $_mval) {
+                            $this->_tpl_vars[$_key][$_mkey] = $_mval;
+                        }
+                    } else {
+                        $this->_tpl_vars[$_key][] = $_val;
+                    }
+                }
+            }
+        } else {
+            if ($tpl_var != '' && isset($value)) {
+                if(!@is_array($this->_tpl_vars[$tpl_var])) {
+                    settype($this->_tpl_vars[$tpl_var],'array');
+                }
+                if($merge && is_array($value)) {
+                    foreach($value as $_mkey => $_mval) {
+                        $this->_tpl_vars[$tpl_var][$_mkey] = $_mval;
+                    }
+                } else {
+                    $this->_tpl_vars[$tpl_var][] = $value;
+                }
+            }
+        }
+    }
+
+    /**
+     * appends values to template variables by reference
+     *
+     * @param string $tpl_var the template variable name
+     * @param mixed $value the referenced value to append
+     */
+    function append_by_ref($tpl_var, &$value, $merge=false)
+    {
+        if ($tpl_var != '' && isset($value)) {
+            if(!@is_array($this->_tpl_vars[$tpl_var])) {
+             settype($this->_tpl_vars[$tpl_var],'array');
+            }
+            if ($merge && is_array($value)) {
+                foreach($value as $_key => $_val) {
+                    $this->_tpl_vars[$tpl_var][$_key] = &$value[$_key];
+                }
+            } else {
+                $this->_tpl_vars[$tpl_var][] = &$value;
+            }
+        }
+    }
+
+
+    /**
+     * clear the given assigned template variable.
+     *
+     * @param string $tpl_var the template variable to clear
+     */
+    function clear_assign($tpl_var)
+    {
+        if (is_array($tpl_var))
+            foreach ($tpl_var as $curr_var)
+                unset($this->_tpl_vars[$curr_var]);
+        else
+            unset($this->_tpl_vars[$tpl_var]);
+    }
+
+
+    /**
+     * Registers custom function to be used in templates
+     *
+     * @param string $function the name of the template function
+     * @param string $function_impl the name of the PHP function to register
+     */
+    function register_function($function, $function_impl, $cacheable=true, $cache_attrs=null)
+    {
+        $this->_plugins['function'][$function] =
+            array($function_impl, null, null, false, $cacheable, $cache_attrs);
+
+    }
+
+    /**
+     * Unregisters custom function
+     *
+     * @param string $function name of template function
+     */
+    function unregister_function($function)
+    {
+        unset($this->_plugins['function'][$function]);
+    }
+
+    /**
+     * Registers object to be used in templates
+     *
+     * @param string $object name of template object
+     * @param object &$object_impl the referenced PHP object to register
+     * @param null|array $allowed list of allowed methods (empty = all)
+     * @param boolean $smarty_args smarty argument format, else traditional
+     * @param null|array $block_functs list of methods that are block format
+     */
+    function register_object($object, &$object_impl, $allowed = array(), $smarty_args = true, $block_methods = array())
+    {
+        settype($allowed, 'array');
+        settype($smarty_args, 'boolean');
+        $this->_reg_objects[$object] =
+            array(&$object_impl, $allowed, $smarty_args, $block_methods);
+    }
+
+    /**
+     * Unregisters object
+     *
+     * @param string $object name of template object
+     */
+    function unregister_object($object)
+    {
+        unset($this->_reg_objects[$object]);
+    }
+
+
+    /**
+     * Registers block function to be used in templates
+     *
+     * @param string $block name of template block
+     * @param string $block_impl PHP function to register
+     */
+    function register_block($block, $block_impl, $cacheable=true, $cache_attrs=null)
+    {
+        $this->_plugins['block'][$block] =
+            array($block_impl, null, null, false, $cacheable, $cache_attrs);
+    }
+
+    /**
+     * Unregisters block function
+     *
+     * @param string $block name of template function
+     */
+    function unregister_block($block)
+    {
+        unset($this->_plugins['block'][$block]);
+    }
+
+    /**
+     * Registers compiler function
+     *
+     * @param string $function name of template function
+     * @param string $function_impl name of PHP function to register
+     */
+    function register_compiler_function($function, $function_impl, $cacheable=true)
+    {
+        $this->_plugins['compiler'][$function] =
+            array($function_impl, null, null, false, $cacheable);
+    }
+
+    /**
+     * Unregisters compiler function
+     *
+     * @param string $function name of template function
+     */
+    function unregister_compiler_function($function)
+    {
+        unset($this->_plugins['compiler'][$function]);
+    }
+
+    /**
+     * Registers modifier to be used in templates
+     *
+     * @param string $modifier name of template modifier
+     * @param string $modifier_impl name of PHP function to register
+     */
+    function register_modifier($modifier, $modifier_impl)
+    {
+        $this->_plugins['modifier'][$modifier] =
+            array($modifier_impl, null, null, false);
+    }
+
+    /**
+     * Unregisters modifier
+     *
+     * @param string $modifier name of template modifier
+     */
+    function unregister_modifier($modifier)
+    {
+        unset($this->_plugins['modifier'][$modifier]);
+    }
+
+    /**
+     * Registers a resource to fetch a template
+     *
+     * @param string $type name of resource
+     * @param array $functions array of functions to handle resource
+     */
+    function register_resource($type, $functions)
+    {
+        if (count($functions)==4) {
+            $this->_plugins['resource'][$type] =
+                array($functions, false);
+
+        } elseif (count($functions)==5) {
+            $this->_plugins['resource'][$type] =
+                array(array(array(&$functions[0], $functions[1])
+                            ,array(&$functions[0], $functions[2])
+                            ,array(&$functions[0], $functions[3])
+                            ,array(&$functions[0], $functions[4]))
+                      ,false);
+
+        } else {
+            $this->trigger_error("malformed function-list for '$type' in register_resource");
+
+        }
+    }
+
+    /**
+     * Unregisters a resource
+     *
+     * @param string $type name of resource
+     */
+    function unregister_resource($type)
+    {
+        unset($this->_plugins['resource'][$type]);
+    }
+
+    /**
+     * Registers a prefilter function to apply
+     * to a template before compiling
+     *
+     * @param string $function name of PHP function to register
+     */
+    function register_prefilter($function)
+    {
+    $_name = (is_array($function)) ? $function[1] : $function;
+        $this->_plugins['prefilter'][$_name]
+            = array($function, null, null, false);
+    }
+
+    /**
+     * Unregisters a prefilter function
+     *
+     * @param string $function name of PHP function
+     */
+    function unregister_prefilter($function)
+    {
+        unset($this->_plugins['prefilter'][$function]);
+    }
+
+    /**
+     * Registers a postfilter function to apply
+     * to a compiled template after compilation
+     *
+     * @param string $function name of PHP function to register
+     */
+    function register_postfilter($function)
+    {
+    $_name = (is_array($function)) ? $function[1] : $function;
+        $this->_plugins['postfilter'][$_name]
+            = array($function, null, null, false);
+    }
+
+    /**
+     * Unregisters a postfilter function
+     *
+     * @param string $function name of PHP function
+     */
+    function unregister_postfilter($function)
+    {
+        unset($this->_plugins['postfilter'][$function]);
+    }
+
+    /**
+     * Registers an output filter function to apply
+     * to a template output
+     *
+     * @param string $function name of PHP function
+     */
+    function register_outputfilter($function)
+    {
+    $_name = (is_array($function)) ? $function[1] : $function;
+        $this->_plugins['outputfilter'][$_name]
+            = array($function, null, null, false);
+    }
+
+    /**
+     * Unregisters an outputfilter function
+     *
+     * @param string $function name of PHP function
+     */
+    function unregister_outputfilter($function)
+    {
+        unset($this->_plugins['outputfilter'][$function]);
+    }
+
+    /**
+     * load a filter of specified type and name
+     *
+     * @param string $type filter type
+     * @param string $name filter name
+     */
+    function load_filter($type, $name)
+    {
+        switch ($type) {
+            case 'output':
+                $_params = array('plugins' => array(array($type . 'filter', $name, null, null, false)));
+                require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_plugins.php');
+                smarty_core_load_plugins($_params, $this);
+                break;
+
+            case 'pre':
+            case 'post':
+                if (!isset($this->_plugins[$type . 'filter'][$name]))
+                    $this->_plugins[$type . 'filter'][$name] = false;
+                break;
+        }
+    }
+
+    /**
+     * clear cached content for the given template and cache id
+     *
+     * @param string $tpl_file name of template file
+     * @param string $cache_id name of cache_id
+     * @param string $compile_id name of compile_id
+     * @param string $exp_time expiration time
+     * @return boolean
+     */
+    function clear_cache($tpl_file = null, $cache_id = null, $compile_id = null, $exp_time = null)
+    {
+
+        if (!isset($compile_id))
+            $compile_id = $this->compile_id;
+
+        if (!isset($tpl_file))
+            $compile_id = null;
+
+        $_auto_id = $this->_get_auto_id($cache_id, $compile_id);
+
+        if (!empty($this->cache_handler_func)) {
+            return call_user_func_array($this->cache_handler_func,
+                                  array('clear', &$this, &$dummy, $tpl_file, $cache_id, $compile_id, $exp_time));
+        } else {
+            $_params = array('auto_base' => $this->cache_dir,
+                            'auto_source' => $tpl_file,
+                            'auto_id' => $_auto_id,
+                            'exp_time' => $exp_time);
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.rm_auto.php');
+            return smarty_core_rm_auto($_params, $this);
+        }
+
+    }
+
+
+    /**
+     * clear the entire contents of cache (all templates)
+     *
+     * @param string $exp_time expire time
+     * @return boolean results of {@link smarty_core_rm_auto()}
+     */
+    function clear_all_cache($exp_time = null)
+    {
+        return $this->clear_cache(null, null, null, $exp_time);
+    }
+
+
+    /**
+     * test to see if valid cache exists for this template
+     *
+     * @param string $tpl_file name of template file
+     * @param string $cache_id
+     * @param string $compile_id
+     * @return string|false results of {@link _read_cache_file()}
+     */
+    function is_cached($tpl_file, $cache_id = null, $compile_id = null)
+    {
+        if (!$this->caching)
+            return false;
+
+        if (!isset($compile_id))
+            $compile_id = $this->compile_id;
+
+        $_params = array(
+            'tpl_file' => $tpl_file,
+            'cache_id' => $cache_id,
+            'compile_id' => $compile_id
+        );
+        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.read_cache_file.php');
+        return smarty_core_read_cache_file($_params, $this);
+    }
+
+
+    /**
+     * clear all the assigned template variables.
+     *
+     */
+    function clear_all_assign()
+    {
+        $this->_tpl_vars = array();
+    }
+
+    /**
+     * clears compiled version of specified template resource,
+     * or all compiled template files if one is not specified.
+     * This function is for advanced use only, not normally needed.
+     *
+     * @param string $tpl_file
+     * @param string $compile_id
+     * @param string $exp_time
+     * @return boolean results of {@link smarty_core_rm_auto()}
+     */
+    function clear_compiled_tpl($tpl_file = null, $compile_id = null, $exp_time = null)
+    {
+        if (!isset($compile_id)) {
+            $compile_id = $this->compile_id;
+        }
+        $_params = array('auto_base' => $this->compile_dir,
+                        'auto_source' => $tpl_file,
+                        'auto_id' => $compile_id,
+                        'exp_time' => $exp_time,
+                        'extensions' => array('.inc', '.php'));
+        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.rm_auto.php');
+        return smarty_core_rm_auto($_params, $this);
+    }
+
+    /**
+     * Checks whether requested template exists.
+     *
+     * @param string $tpl_file
+     * @return boolean
+     */
+    function template_exists($tpl_file)
+    {
+        $_params = array('resource_name' => $tpl_file, 'quiet'=>true, 'get_source'=>false);
+        return $this->_fetch_resource_info($_params);
+    }
+
+    /**
+     * Returns an array containing template variables
+     *
+     * @param string $name
+     * @param string $type
+     * @return array
+     */
+    function &get_template_vars($name=null)
+    {
+        if(!isset($name)) {
+            return $this->_tpl_vars;
+        }
+        if(isset($this->_tpl_vars[$name])) {
+            return $this->_tpl_vars[$name];
+        }
+    }
+
+    /**
+     * Returns an array containing config variables
+     *
+     * @param string $name
+     * @param string $type
+     * @return array
+     */
+    function &get_config_vars($name=null)
+    {
+        if(!isset($name) && is_array($this->_config[0])) {
+            return $this->_config[0]['vars'];
+        } else if(isset($this->_config[0]['vars'][$name])) {
+            return $this->_config[0]['vars'][$name];
+        }
+    }
+
+    /**
+     * trigger Smarty error
+     *
+     * @param string $error_msg
+     * @param integer $error_type
+     */
+    function trigger_error($error_msg, $error_type = E_USER_WARNING)
+    {
+        trigger_error("Smarty error: $error_msg", $error_type);
+    }
+
+
+    /**
+     * executes & displays the template results
+     *
+     * @param string $resource_name
+     * @param string $cache_id
+     * @param string $compile_id
+     */
+    function display($resource_name, $cache_id = null, $compile_id = null)
+    {
+        $this->fetch($resource_name, $cache_id, $compile_id, true);
+    }
+
+    /**
+     * executes & returns or displays the template results
+     *
+     * @param string $resource_name
+     * @param string $cache_id
+     * @param string $compile_id
+     * @param boolean $display
+     */
+    function fetch($resource_name, $cache_id = null, $compile_id = null, $display = false)
+    {
+        static $_cache_info = array();
+        
+        $_smarty_old_error_level = $this->debugging ? error_reporting() : error_reporting(isset($this->error_reporting)
+               ? $this->error_reporting : error_reporting() & ~E_NOTICE);
+
+        if (!$this->debugging && $this->debugging_ctrl == 'URL') {
+            $_query_string = $this->request_use_auto_globals ? $_SERVER['QUERY_STRING'] : $GLOBALS['HTTP_SERVER_VARS']['QUERY_STRING'];
+            if (@strstr($_query_string, $this->_smarty_debug_id)) {
+                if (@strstr($_query_string, $this->_smarty_debug_id . '=on')) {
+                    // enable debugging for this browser session
+                    @setcookie('SMARTY_DEBUG', true);
+                    $this->debugging = true;
+                } elseif (@strstr($_query_string, $this->_smarty_debug_id . '=off')) {
+                    // disable debugging for this browser session
+                    @setcookie('SMARTY_DEBUG', false);
+                    $this->debugging = false;
+                } else {
+                    // enable debugging for this page
+                    $this->debugging = true;
+                }
+            } else {
+                $_cookie_var = $this->request_use_auto_globals ? $_COOKIE['SMARTY_DEBUG'] : $GLOBALS['HTTP_COOKIE_VARS']['SMARTY_DEBUG'];
+                $this->debugging = $_cookie_var ? true : false;
+            }
+        }
+
+        if ($this->debugging) {
+            // capture time for debugging info
+            $_params = array();
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
+            $_debug_start_time = smarty_core_get_microtime($_params, $this);
+            $this->_smarty_debug_info[] = array('type'      => 'template',
+                                                'filename'  => $resource_name,
+                                                'depth'     => 0);
+            $_included_tpls_idx = count($this->_smarty_debug_info) - 1;
+        }
+
+        if (!isset($compile_id)) {
+            $compile_id = $this->compile_id;
+        }
+
+        $this->_compile_id = $compile_id;
+        $this->_inclusion_depth = 0;
+
+        if ($this->caching) {
+            // save old cache_info, initialize cache_info
+            array_push($_cache_info, $this->_cache_info);
+            $this->_cache_info = array();
+            $_params = array(
+                'tpl_file' => $resource_name,
+                'cache_id' => $cache_id,
+                'compile_id' => $compile_id,
+                'results' => null
+            );
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.read_cache_file.php');
+            if (smarty_core_read_cache_file($_params, $this)) {
+                $_smarty_results = $_params['results'];
+                if (@count($this->_cache_info['insert_tags'])) {
+                    $_params = array('plugins' => $this->_cache_info['insert_tags']);
+                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_plugins.php');
+                    smarty_core_load_plugins($_params, $this);
+                    $_params = array('results' => $_smarty_results);
+                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.process_cached_inserts.php');
+                    $_smarty_results = smarty_core_process_cached_inserts($_params, $this);
+                }
+                if (@count($this->_cache_info['cache_serials'])) {
+                    $_params = array('results' => $_smarty_results);
+                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.process_compiled_include.php');
+                    $_smarty_results = smarty_core_process_compiled_include($_params, $this);
+                }
+
+
+                if ($display) {
+                    if ($this->debugging)
+                    {
+                        // capture time for debugging info
+                        $_params = array();
+                        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
+                        $this->_smarty_debug_info[$_included_tpls_idx]['exec_time'] = smarty_core_get_microtime($_params, $this) - $_debug_start_time;
+                        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.display_debug_console.php');
+                        $_smarty_results .= smarty_core_display_debug_console($_params, $this);
+                    }
+                    if ($this->cache_modified_check) {
+                        $_server_vars = ($this->request_use_auto_globals) ? $_SERVER : $GLOBALS['HTTP_SERVER_VARS'];
+                        $_last_modified_date = @substr($_server_vars['HTTP_IF_MODIFIED_SINCE'], 0, strpos($_server_vars['HTTP_IF_MODIFIED_SINCE'], 'GMT') + 3);
+                        $_gmt_mtime = gmdate('D, d M Y H:i:s', $this->_cache_info['timestamp']).' GMT';
+                        if (@count($this->_cache_info['insert_tags']) == 0
+                            && !$this->_cache_serials
+                            && $_gmt_mtime == $_last_modified_date) {
+                            if (php_sapi_name()=='cgi')
+                                header('Status: 304 Not Modified');
+                            else
+                                header('HTTP/1.1 304 Not Modified');
+
+                        } else {
+                            header('Last-Modified: '.$_gmt_mtime);
+                            echo $_smarty_results;
+                        }
+                    } else {
+                            echo $_smarty_results;
+                    }
+                    error_reporting($_smarty_old_error_level);
+                    // restore initial cache_info
+                    $this->_cache_info = array_pop($_cache_info);
+                    return true;
+                } else {
+                    error_reporting($_smarty_old_error_level);
+                    // restore initial cache_info
+                    $this->_cache_info = array_pop($_cache_info);
+                    return $_smarty_results;
+                }
+            } else {
+                $this->_cache_info['template'][$resource_name] = true;
+                if ($this->cache_modified_check && $display) {
+                    header('Last-Modified: '.gmdate('D, d M Y H:i:s', time()).' GMT');
+                }
+            }
+        }
+
+        // load filters that are marked as autoload
+        if (count($this->autoload_filters)) {
+            foreach ($this->autoload_filters as $_filter_type => $_filters) {
+                foreach ($_filters as $_filter) {
+                    $this->load_filter($_filter_type, $_filter);
+                }
+            }
+        }
+
+        $_smarty_compile_path = $this->_get_compile_path($resource_name);
+
+        // if we just need to display the results, don't perform output
+        // buffering - for speed
+        $_cache_including = $this->_cache_including;
+        $this->_cache_including = false;
+        if ($display && !$this->caching && count($this->_plugins['outputfilter']) == 0) {
+            if ($this->_is_compiled($resource_name, $_smarty_compile_path)
+                    || $this->_compile_resource($resource_name, $_smarty_compile_path))
+            {
+                include($_smarty_compile_path);
+            }
+        } else {
+            ob_start();
+            if ($this->_is_compiled($resource_name, $_smarty_compile_path)
+                    || $this->_compile_resource($resource_name, $_smarty_compile_path))
+            {
+                include($_smarty_compile_path);
+            }
+            $_smarty_results = ob_get_contents();
+            ob_end_clean();
+
+            foreach ((array)$this->_plugins['outputfilter'] as $_output_filter) {
+                $_smarty_results = call_user_func_array($_output_filter[0], array($_smarty_results, &$this));
+            }
+        }
+
+        if ($this->caching) {
+            $_params = array('tpl_file' => $resource_name,
+                        'cache_id' => $cache_id,
+                        'compile_id' => $compile_id,
+                        'results' => $_smarty_results);
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.write_cache_file.php');
+            smarty_core_write_cache_file($_params, $this);
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.process_cached_inserts.php');
+            $_smarty_results = smarty_core_process_cached_inserts($_params, $this);
+
+            if ($this->_cache_serials) {
+                // strip nocache-tags from output
+                $_smarty_results = preg_replace('!(\{/?nocache\:[0-9a-f]{32}#\d+\})!s'
+                                                ,''
+                                                ,$_smarty_results);
+            }
+            // restore initial cache_info
+            $this->_cache_info = array_pop($_cache_info);
+        }
+        $this->_cache_including = $_cache_including;
+
+        if ($display) {
+            if (isset($_smarty_results)) { echo $_smarty_results; }
+            if ($this->debugging) {
+                // capture time for debugging info
+                $_params = array();
+                require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
+                $this->_smarty_debug_info[$_included_tpls_idx]['exec_time'] = (smarty_core_get_microtime($_params, $this) - $_debug_start_time);
+                require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.display_debug_console.php');
+                echo smarty_core_display_debug_console($_params, $this);
+            }
+            error_reporting($_smarty_old_error_level);
+            return;
+        } else {
+            error_reporting($_smarty_old_error_level);
+            if (isset($_smarty_results)) { return $_smarty_results; }
+        }
+    }
+
+    /**
+     * load configuration values
+     *
+     * @param string $file
+     * @param string $section
+     * @param string $scope
+     */
+    function config_load($file, $section = null, $scope = 'global')
+    {
+        require_once($this->_get_plugin_filepath('function', 'config_load'));
+        smarty_function_config_load(array('file' => $file, 'section' => $section, 'scope' => $scope), $this);
+    }
+
+    /**
+     * return a reference to a registered object
+     *
+     * @param string $name
+     * @return object
+     */
+    function &get_registered_object($name) {
+        if (!isset($this->_reg_objects[$name]))
+        $this->_trigger_fatal_error("'$name' is not a registered object");
+
+        if (!is_object($this->_reg_objects[$name][0]))
+        $this->_trigger_fatal_error("registered '$name' is not an object");
+
+        return $this->_reg_objects[$name][0];
+    }
+
+    /**
+     * clear configuration values
+     *
+     * @param string $var
+     */
+    function clear_config($var = null)
+    {
+        if(!isset($var)) {
+            // clear all values
+            $this->_config = array(array('vars'  => array(),
+                                         'files' => array()));
+        } else {
+            unset($this->_config[0]['vars'][$var]);
+        }
+    }
+
+    /**
+     * get filepath of requested plugin
+     *
+     * @param string $type
+     * @param string $name
+     * @return string|false
+     */
+    function _get_plugin_filepath($type, $name)
+    {
+        $_params = array('type' => $type, 'name' => $name);
+        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.assemble_plugin_filepath.php');
+        return smarty_core_assemble_plugin_filepath($_params, $this);
+    }
+
+   /**
+     * test if resource needs compiling
+     *
+     * @param string $resource_name
+     * @param string $compile_path
+     * @return boolean
+     */
+    function _is_compiled($resource_name, $compile_path)
+    {
+        if (!$this->force_compile && file_exists($compile_path)) {
+            if (!$this->compile_check) {
+                // no need to check compiled file
+                return true;
+            } else {
+                // get file source and timestamp
+                $_params = array('resource_name' => $resource_name, 'get_source'=>false);
+                if (!$this->_fetch_resource_info($_params)) {
+                    return false;
+                }
+                if ($_params['resource_timestamp'] <= filemtime($compile_path)) {
+                    // template not expired, no recompile
+                    return true;
+                } else {
+                    // compile template
+                    return false;
+                }
+            }
+        } else {
+            // compiled template does not exist, or forced compile
+            return false;
+        }
+    }
+
+   /**
+     * compile the template
+     *
+     * @param string $resource_name
+     * @param string $compile_path
+     * @return boolean
+     */
+    function _compile_resource($resource_name, $compile_path)
+    {
+
+        $_params = array('resource_name' => $resource_name);
+        if (!$this->_fetch_resource_info($_params)) {
+            return false;
+        }
+
+        $_source_content = $_params['source_content'];
+        $_cache_include    = substr($compile_path, 0, -4).'.inc';
+
+        if ($this->_compile_source($resource_name, $_source_content, $_compiled_content, $_cache_include)) {
+            // if a _cache_serial was set, we also have to write an include-file:
+            if ($this->_cache_include_info) {
+                require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.write_compiled_include.php');
+                smarty_core_write_compiled_include(array_merge($this->_cache_include_info, array('compiled_content'=>$_compiled_content)),  $this);
+            }
+
+            $_params = array('compile_path'=>$compile_path, 'compiled_content' => $_compiled_content);
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.write_compiled_resource.php');
+            smarty_core_write_compiled_resource($_params, $this);
+
+            return true;
+        } else {
+            return false;
+        }
+
+    }
+
+   /**
+     * compile the given source
+     *
+     * @param string $resource_name
+     * @param string $source_content
+     * @param string $compiled_content
+     * @return boolean
+     */
+    function _compile_source($resource_name, &$source_content, &$compiled_content, $cache_include_path=null)
+    {
+        if (file_exists(SMARTY_DIR . $this->compiler_file)) {
+            require_once(SMARTY_DIR . $this->compiler_file);
+        } else {
+            // use include_path
+            require_once($this->compiler_file);
+        }
+
+
+        $smarty_compiler = new $this->compiler_class;
+
+        $smarty_compiler->template_dir      = $this->template_dir;
+        $smarty_compiler->compile_dir       = $this->compile_dir;
+        $smarty_compiler->plugins_dir       = $this->plugins_dir;
+        $smarty_compiler->config_dir        = $this->config_dir;
+        $smarty_compiler->force_compile     = $this->force_compile;
+        $smarty_compiler->caching           = $this->caching;
+        $smarty_compiler->php_handling      = $this->php_handling;
+        $smarty_compiler->left_delimiter    = $this->left_delimiter;
+        $smarty_compiler->right_delimiter   = $this->right_delimiter;
+        $smarty_compiler->_version          = $this->_version;
+        $smarty_compiler->security          = $this->security;
+        $smarty_compiler->secure_dir        = $this->secure_dir;
+        $smarty_compiler->security_settings = $this->security_settings;
+        $smarty_compiler->trusted_dir       = $this->trusted_dir;
+        $smarty_compiler->use_sub_dirs      = $this->use_sub_dirs;
+        $smarty_compiler->_reg_objects      = &$this->_reg_objects;
+        $smarty_compiler->_plugins          = &$this->_plugins;
+        $smarty_compiler->_tpl_vars         = &$this->_tpl_vars;
+        $smarty_compiler->default_modifiers = $this->default_modifiers;
+        $smarty_compiler->compile_id        = $this->_compile_id;
+        $smarty_compiler->_config            = $this->_config;
+        $smarty_compiler->request_use_auto_globals  = $this->request_use_auto_globals;
+
+        $smarty_compiler->_cache_serial = null;
+        $smarty_compiler->_cache_include = $cache_include_path;
+
+
+        $_results = $smarty_compiler->_compile_file($resource_name, $source_content, $compiled_content);
+
+        if ($smarty_compiler->_cache_serial) {
+            $this->_cache_include_info = array(
+                'cache_serial'=>$smarty_compiler->_cache_serial
+                ,'plugins_code'=>$smarty_compiler->_plugins_code
+                ,'include_file_path' => $cache_include_path);
+
+        } else {
+            $this->_cache_include_info = null;
+
+        }
+
+        return $_results;
+    }
+
+    /**
+     * Get the compile path for this resource
+     *
+     * @param string $resource_name
+     * @return string results of {@link _get_auto_filename()}
+     */
+    function _get_compile_path($resource_name)
+    {
+        return $this->_get_auto_filename($this->compile_dir, $resource_name,
+                                         $this->_compile_id) . '.php';
+    }
+
+    /**
+     * fetch the template info. Gets timestamp, and source
+     * if get_source is true
+     *
+     * sets $source_content to the source of the template, and
+     * $resource_timestamp to its time stamp
+     * @param string $resource_name
+     * @param string $source_content
+     * @param integer $resource_timestamp
+     * @param boolean $get_source
+     * @param boolean $quiet
+     * @return boolean
+     */
+
+    function _fetch_resource_info(&$params)
+    {
+        if(!isset($params['get_source'])) { $params['get_source'] = true; }
+        if(!isset($params['quiet'])) { $params['quiet'] = false; }
+
+        $_return = false;
+        $_params = array('resource_name' => $params['resource_name']) ;
+        if (isset($params['resource_base_path']))
+            $_params['resource_base_path'] = $params['resource_base_path'];
+        else
+            $_params['resource_base_path'] = $this->template_dir;
+
+        if ($this->_parse_resource_name($_params)) {
+            $_resource_type = $_params['resource_type'];
+            $_resource_name = $_params['resource_name'];
+            switch ($_resource_type) {
+                case 'file':
+                    if ($params['get_source']) {
+                        $params['source_content'] = $this->_read_file($_resource_name);
+                    }
+                    $params['resource_timestamp'] = filemtime($_resource_name);
+                    $_return = is_file($_resource_name);
+                    break;
+
+                default:
+                    // call resource functions to fetch the template source and timestamp
+                    if ($params['get_source']) {
+                        $_source_return = isset($this->_plugins['resource'][$_resource_type]) &&
+                            call_user_func_array($this->_plugins['resource'][$_resource_type][0][0],
+                                                 array($_resource_name, &$params['source_content'], &$this));
+                    } else {
+                        $_source_return = true;
+                    }
+
+                    $_timestamp_return = isset($this->_plugins['resource'][$_resource_type]) &&
+                        call_user_func_array($this->_plugins['resource'][$_resource_type][0][1],
+                                             array($_resource_name, &$params['resource_timestamp'], &$this));
+
+                    $_return = $_source_return && $_timestamp_return;
+                    break;
+            }
+        }
+
+        if (!$_return) {
+            // see if we can get a template with the default template handler
+            if (!empty($this->default_template_handler_func)) {
+                if (!is_callable($this->default_template_handler_func)) {
+                    $this->trigger_error("default template handler function \"$this->default_template_handler_func\" doesn't exist.");
+                } else {
+                    $_return = call_user_func_array(
+                        $this->default_template_handler_func,
+                        array($_params['resource_type'], $_params['resource_name'], &$params['source_content'], &$params['resource_timestamp'], &$this));
+                }
+            }
+        }
+
+        if (!$_return) {
+            if (!$params['quiet']) {
+                $this->trigger_error('unable to read resource: "' . $params['resource_name'] . '"');
+            }
+        } else if ($_return && $this->security) {
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.is_secure.php');
+            if (!smarty_core_is_secure($_params, $this)) {
+                if (!$params['quiet'])
+                    $this->trigger_error('(secure mode) accessing "' . $params['resource_name'] . '" is not allowed');
+                $params['source_content'] = null;
+                $params['resource_timestamp'] = null;
+                return false;
+            }
+        }
+        return $_return;
+    }
+
+
+    /**
+     * parse out the type and name from the resource
+     *
+     * @param string $resource_base_path
+     * @param string $resource_name
+     * @param string $resource_type
+     * @param string $resource_name
+     * @return boolean
+     */
+
+    function _parse_resource_name(&$params)
+    {
+
+        // split tpl_path by the first colon
+        $_resource_name_parts = explode(':', $params['resource_name'], 2);
+
+        if (count($_resource_name_parts) == 1) {
+            // no resource type given
+            $params['resource_type'] = $this->default_resource_type;
+            $params['resource_name'] = $_resource_name_parts[0];
+        } else {
+            if(strlen($_resource_name_parts[0]) == 1) {
+                // 1 char is not resource type, but part of filepath
+                $params['resource_type'] = $this->default_resource_type;
+                $params['resource_name'] = $params['resource_name'];
+            } else {
+                $params['resource_type'] = $_resource_name_parts[0];
+                $params['resource_name'] = $_resource_name_parts[1];
+            }
+        }
+
+        if ($params['resource_type'] == 'file') {
+            if (!preg_match('/^([\/\\\\]|[a-zA-Z]:[\/\\\\])/', $params['resource_name'])) {
+                // relative pathname to $params['resource_base_path']
+                // use the first directory where the file is found
+                foreach ((array)$params['resource_base_path'] as $_curr_path) {
+                    $_fullpath = $_curr_path . DIRECTORY_SEPARATOR . $params['resource_name'];
+                    if (file_exists($_fullpath) && is_file($_fullpath)) {
+                        $params['resource_name'] = $_fullpath;
+                        return true;
+                    }
+                    // didn't find the file, try include_path
+                    $_params = array('file_path' => $_fullpath);
+                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_include_path.php');
+                    if(smarty_core_get_include_path($_params, $this)) {
+                        $params['resource_name'] = $_params['new_file_path'];
+                        return true;
+                    }
+                }
+                return false;
+            } else {
+                /* absolute path */
+                return file_exists($params['resource_name']);
+            }
+        } elseif (empty($this->_plugins['resource'][$params['resource_type']])) {
+            $_params = array('type' => $params['resource_type']);
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_resource_plugin.php');
+            smarty_core_load_resource_plugin($_params, $this);
+        }
+
+        return true;
+    }
+
+
+    /**
+     * Handle modifiers
+     *
+     * @param string|null $modifier_name
+     * @param array|null $map_array
+     * @return string result of modifiers
+     */
+    function _run_mod_handler()
+    {
+        $_args = func_get_args();
+        list($_modifier_name, $_map_array) = array_splice($_args, 0, 2);
+        list($_func_name, $_tpl_file, $_tpl_line) =
+            $this->_plugins['modifier'][$_modifier_name];
+
+        $_var = $_args[0];
+        foreach ($_var as $_key => $_val) {
+            $_args[0] = $_val;
+            $_var[$_key] = call_user_func_array($_func_name, $_args);
+        }
+        return $_var;
+    }
+
+    /**
+     * Remove starting and ending quotes from the string
+     *
+     * @param string $string
+     * @return string
+     */
+    function _dequote($string)
+    {
+        if (($string{0} == "'" || $string{0} == '"') &&
+            $string{strlen($string)-1} == $string{0})
+            return substr($string, 1, -1);
+        else
+            return $string;
+    }
+
+
+    /**
+     * read in a file from line $start for $lines.
+     * read the entire file if $start and $lines are null.
+     *
+     * @param string $filename
+     * @param integer $start
+     * @param integer $lines
+     * @return string
+     */
+    function _read_file($filename)
+    {
+        if ( file_exists($filename) && ($fd = @fopen($filename, 'rb')) ) {
+            $contents = ($size = filesize($filename)) ? fread($fd, $size) : '';
+            fclose($fd);
+            return $contents;
+        } else {
+            return false;
+        }
+    }
+
+    /**
+     * get a concrete filename for automagically created content
+     *
+     * @param string $auto_base
+     * @param string $auto_source
+     * @param string $auto_id
+     * @return string
+     * @staticvar string|null
+     * @staticvar string|null
+     */
+    function _get_auto_filename($auto_base, $auto_source = null, $auto_id = null)
+    {
+        $_compile_dir_sep =  $this->use_sub_dirs ? DIRECTORY_SEPARATOR : '^';
+        $_return = $auto_base . DIRECTORY_SEPARATOR;
+
+        if(isset($auto_id)) {
+            // make auto_id safe for directory names
+            $auto_id = str_replace('%7C',$_compile_dir_sep,(urlencode($auto_id)));
+            // split into separate directories
+            $_return .= $auto_id . $_compile_dir_sep;
+        }
+
+        if(isset($auto_source)) {
+            // make source name safe for filename
+            $_filename = urlencode(basename($auto_source));
+            $_crc32 = sprintf('%08X', crc32($auto_source));
+            // prepend %% to avoid name conflicts with
+            // with $params['auto_id'] names
+            $_crc32 = substr($_crc32, 0, 2) . $_compile_dir_sep .
+                      substr($_crc32, 0, 3) . $_compile_dir_sep . $_crc32;
+            $_return .= '%%' . $_crc32 . '%%' . $_filename;
+        }
+
+        return $_return;
+    }
+
+    /**
+     * unlink a file, possibly using expiration time
+     *
+     * @param string $resource
+     * @param integer $exp_time
+     */
+    function _unlink($resource, $exp_time = null)
+    {
+        if(isset($exp_time)) {
+            if(time() - @filemtime($resource) >= $exp_time) {
+                return @unlink($resource);
+            }
+        } else {
+            return @unlink($resource);
+        }
+    }
+
+    /**
+     * returns an auto_id for auto-file-functions
+     *
+     * @param string $cache_id
+     * @param string $compile_id
+     * @return string|null
+     */
+    function _get_auto_id($cache_id=null, $compile_id=null) {
+    if (isset($cache_id))
+        return (isset($compile_id)) ? $cache_id . '|' . $compile_id  : $cache_id;
+    elseif(isset($compile_id))
+        return $compile_id;
+    else
+        return null;
+    }
+
+    /**
+     * trigger Smarty plugin error
+     *
+     * @param string $error_msg
+     * @param string $tpl_file
+     * @param integer $tpl_line
+     * @param string $file
+     * @param integer $line
+     * @param integer $error_type
+     */
+    function _trigger_fatal_error($error_msg, $tpl_file = null, $tpl_line = null,
+            $file = null, $line = null, $error_type = E_USER_ERROR)
+    {
+        if(isset($file) && isset($line)) {
+            $info = ' ('.basename($file).", line $line)";
+        } else {
+            $info = '';
+        }
+        if (isset($tpl_line) && isset($tpl_file)) {
+            $this->trigger_error('[in ' . $tpl_file . ' line ' . $tpl_line . "]: $error_msg$info", $error_type);
+        } else {
+            $this->trigger_error($error_msg . $info, $error_type);
+        }
+    }
+
+
+    /**
+     * callback function for preg_replace, to call a non-cacheable block
+     * @return string
+     */
+    function _process_compiled_include_callback($match) {
+        $_func = '_smarty_tplfunc_'.$match[2].'_'.$match[3];
+        ob_start();
+        $_func($this);
+        $_ret = ob_get_contents();
+        ob_end_clean();
+        return $_ret;
+    }
+
+
+    /**
+     * called for included templates
+     *
+     * @param string $_smarty_include_tpl_file
+     * @param string $_smarty_include_vars
+     */
+
+    // $_smarty_include_tpl_file, $_smarty_include_vars
+
+    function _smarty_include($params)
+    {
+        if ($this->debugging) {
+            $_params = array();
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
+            $debug_start_time = smarty_core_get_microtime($_params, $this);
+            $this->_smarty_debug_info[] = array('type'      => 'template',
+                                                  'filename'  => $params['smarty_include_tpl_file'],
+                                                  'depth'     => ++$this->_inclusion_depth);
+            $included_tpls_idx = count($this->_smarty_debug_info) - 1;
+        }
+
+        $this->_tpl_vars = array_merge($this->_tpl_vars, $params['smarty_include_vars']);
+
+        // config vars are treated as local, so push a copy of the
+        // current ones onto the front of the stack
+        array_unshift($this->_config, $this->_config[0]);
+
+        $_smarty_compile_path = $this->_get_compile_path($params['smarty_include_tpl_file']);
+
+
+        if ($this->_is_compiled($params['smarty_include_tpl_file'], $_smarty_compile_path)
+            || $this->_compile_resource($params['smarty_include_tpl_file'], $_smarty_compile_path))
+        {
+            include($_smarty_compile_path);
+        }
+
+        // pop the local vars off the front of the stack
+        array_shift($this->_config);
+
+        $this->_inclusion_depth--;
+
+        if ($this->debugging) {
+            // capture time for debugging info
+            $_params = array();
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
+            $this->_smarty_debug_info[$included_tpls_idx]['exec_time'] = smarty_core_get_microtime($_params, $this) - $debug_start_time;
+        }
+
+        if ($this->caching) {
+            $this->_cache_info['template'][$params['smarty_include_tpl_file']] = true;
+        }
+    }
+
+
+    /**
+     * get or set an array of cached attributes for function that is
+     * not cacheable
+     * @return array
+     */
+    function &_smarty_cache_attrs($cache_serial, $count) {
+        $_cache_attrs =& $this->_cache_info['cache_attrs'][$cache_serial][$count];
+
+        if ($this->_cache_including) {
+            /* return next set of cache_attrs */
+            $_return =& current($_cache_attrs);
+            next($_cache_attrs);
+            return $_return;
+
+        } else {
+            /* add a reference to a new set of cache_attrs */
+            $_cache_attrs[] = array();
+            return $_cache_attrs[count($_cache_attrs)-1];
+
+        }
+
+    }
+
+
+    /**
+     * wrapper for include() retaining $this
+     * @return mixed
+     */
+    function _include($filename, $once=false, $params=null)
+    {
+        if ($once) {
+            return include_once($filename);
+        } else {
+            return include($filename);
+        }
+    }
+
+
+    /**
+     * wrapper for eval() retaining $this
+     * @return mixed
+     */
+    function _eval($code, $params=null)
+    {
+        return eval($code);
+    }
+    /**#@-*/
+
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/Smarty.class.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/Smarty_Compiler.class.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/Smarty_Compiler.class.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/Smarty_Compiler.class.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,2259 @@
+<?php
+
+if (!defined('SMARTY_DIR')) {
+	exit();
+}
+/**
+ * Project:     Smarty: the PHP compiling template engine
+ * File:        Smarty_Compiler.class.php
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ * @link http://smarty.php.net/
+ * @author Monte Ohrt <monte at ispi.net>
+ * @author Andrei Zmievski <andrei at php.net>
+ * @version 2.6.5-dev
+ * @copyright 2001-2004 ispi of Lincoln, Inc.
+ * @package Smarty
+ */
+
+/* $Id$ */
+
+/**
+ * Template compiling class
+ * @package Smarty
+ */
+class Smarty_Compiler extends Smarty {
+
+    // internal vars
+    /**#@+
+     * @access private
+     */
+    var $_folded_blocks         =   array();    // keeps folded template blocks
+    var $_current_file          =   null;       // the current template being compiled
+    var $_current_line_no       =   1;          // line number for error messages
+    var $_capture_stack         =   array();    // keeps track of nested capture buffers
+    var $_plugin_info           =   array();    // keeps track of plugins to load
+    var $_init_smarty_vars      =   false;
+    var $_permitted_tokens      =   array('true','false','yes','no','on','off','null');
+    var $_db_qstr_regexp        =   null;        // regexps are setup in the constructor
+    var $_si_qstr_regexp        =   null;
+    var $_qstr_regexp           =   null;
+    var $_func_regexp           =   null;
+    var $_var_bracket_regexp    =   null;
+    var $_dvar_guts_regexp      =   null;
+    var $_dvar_regexp           =   null;
+    var $_cvar_regexp           =   null;
+    var $_svar_regexp           =   null;
+    var $_avar_regexp           =   null;
+    var $_mod_regexp            =   null;
+    var $_var_regexp            =   null;
+    var $_parenth_param_regexp  =   null;
+    var $_func_call_regexp      =   null;
+    var $_obj_ext_regexp        =   null;
+    var $_obj_start_regexp      =   null;
+    var $_obj_params_regexp     =   null;
+    var $_obj_call_regexp       =   null;
+    var $_cacheable_state       =   0;
+    var $_cache_attrs_count     =   0;
+    var $_nocache_count         =   0;
+    var $_cache_serial          =   null;
+    var $_cache_include         =   null;
+
+    var $_strip_depth           =   0;
+    var $_additional_newline    =   "\n";
+
+    /**#@-*/
+    /**
+     * The class constructor.
+     */
+    function Smarty_Compiler()
+    {
+        // matches double quoted strings:
+        // "foobar"
+        // "foo\"bar"
+        $this->_db_qstr_regexp = '"[^"\\\\]*(?:\\\\.[^"\\\\]*)*"';
+
+        // matches single quoted strings:
+        // 'foobar'
+        // 'foo\'bar'
+        $this->_si_qstr_regexp = '\'[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*\'';
+
+        // matches single or double quoted strings
+        $this->_qstr_regexp = '(?:' . $this->_db_qstr_regexp . '|' . $this->_si_qstr_regexp . ')';
+
+        // matches bracket portion of vars
+        // [0]
+        // [foo]
+        // [$bar]
+        $this->_var_bracket_regexp = '\[\$?[\w\.]+\]';
+
+        // matches numerical constants
+        // 30
+        // -12
+        // 13.22
+        $this->_num_const_regexp = '\-?\d+(?:\.\d+)?';
+
+        // matches $ vars (not objects):
+        // $foo
+        // $foo.bar
+        // $foo.bar.foobar
+        // $foo[0]
+        // $foo[$bar]
+        // $foo[5][blah]
+        // $foo[5].bar[$foobar][4]
+        $this->_dvar_math_regexp = '(?:[\+\*\/\%]|(?:-(?!>)))';
+        $this->_dvar_math_var_regexp = '[\$\w\.\+\-\*\/\%\d\>\[\]]';
+        $this->_dvar_guts_regexp = '\w+(?:' . $this->_var_bracket_regexp
+                . ')*(?:\.\$?\w+(?:' . $this->_var_bracket_regexp . ')*)*(?:' . $this->_dvar_math_regexp . '(?:' . $this->_num_const_regexp . '|' . $this->_dvar_math_var_regexp . ')*)?';
+        $this->_dvar_regexp = '\$' . $this->_dvar_guts_regexp;
+
+        // matches config vars:
+        // #foo#
+        // #foobar123_foo#
+        $this->_cvar_regexp = '\#\w+\#';
+
+        // matches section vars:
+        // %foo.bar%
+        $this->_svar_regexp = '\%\w+\.\w+\%';
+
+        // matches all valid variables (no quotes, no modifiers)
+        $this->_avar_regexp = '(?:' . $this->_dvar_regexp . '|'
+           . $this->_cvar_regexp . '|' . $this->_svar_regexp . ')';
+
+        // matches valid variable syntax:
+        // $foo
+        // $foo
+        // #foo#
+        // #foo#
+        // "text"
+        // "text"
+        $this->_var_regexp = '(?:' . $this->_avar_regexp . '|' . $this->_num_const_regexp . '|' . $this->_qstr_regexp . ')';
+
+        // matches valid object call (one level of object nesting allowed in parameters):
+        // $foo->bar
+        // $foo->bar()
+        // $foo->bar("text")
+        // $foo->bar($foo, $bar, "text")
+        // $foo->bar($foo, "foo")
+        // $foo->bar->foo()
+        // $foo->bar->foo->bar()
+        // $foo->bar($foo->bar)
+        // $foo->bar($foo->bar())
+        // $foo->bar($foo->bar($blah,$foo,44,"foo",$foo[0].bar))
+        $this->_obj_ext_regexp = '\->(?:\$?' . $this->_dvar_guts_regexp . ')';
+        $this->_obj_restricted_param_regexp = '(?:'
+                . $this->_var_regexp . '(?:' . $this->_obj_ext_regexp . '(?:\((?:' . $this->_var_regexp
+                . '(?:\s*,\s*' . $this->_var_regexp . ')*)?\))?)*)';
+        $this->_obj_single_param_regexp = '(?:\w+|' . $this->_obj_restricted_param_regexp . '(?:\s*,\s*(?:(?:\w+|'
+                . $this->_var_regexp . $this->_obj_restricted_param_regexp . ')))*)';
+        $this->_obj_params_regexp = '\((?:' . $this->_obj_single_param_regexp
+                . '(?:\s*,\s*' . $this->_obj_single_param_regexp . ')*)?\)';
+        $this->_obj_start_regexp = '(?:' . $this->_dvar_regexp . '(?:' . $this->_obj_ext_regexp . ')+)';
+        $this->_obj_call_regexp = '(?:' . $this->_obj_start_regexp . '(?:' . $this->_obj_params_regexp . ')?(?:' . $this->_dvar_math_regexp . '(?:' . $this->_num_const_regexp . '|' . $this->_dvar_math_var_regexp . ')*)?)';
+        
+        // matches valid modifier syntax:
+        // |foo
+        // |@foo
+        // |foo:"bar"
+        // |foo:$bar
+        // |foo:"bar":$foobar
+        // |foo|bar
+        // |foo:$foo->bar
+        $this->_mod_regexp = '(?:\|@?\w+(?::(?>-?\w+|'
+           . $this->_obj_call_regexp . '|' . $this->_avar_regexp . '|' . $this->_qstr_regexp .'))*)';
+
+        // matches valid function name:
+        // foo123
+        // _foo_bar
+        $this->_func_regexp = '[a-zA-Z_]\w*';
+
+        // matches valid registered object:
+        // foo->bar
+        $this->_reg_obj_regexp = '[a-zA-Z_]\w*->[a-zA-Z_]\w*';
+
+        // matches valid parameter values:
+        // true
+        // $foo
+        // $foo|bar
+        // #foo#
+        // #foo#|bar
+        // "text"
+        // "text"|bar
+        // $foo->bar
+        $this->_param_regexp = '(?:\s*(?:' . $this->_obj_call_regexp . '|'
+           . $this->_var_regexp  . '|\w+)(?>' . $this->_mod_regexp . '*)\s*)';
+
+        // matches valid parenthesised function parameters:
+        //
+        // "text"
+        //    $foo, $bar, "text"
+        // $foo|bar, "foo"|bar, $foo->bar($foo)|bar
+        $this->_parenth_param_regexp = '(?:\((?:\w+|'
+                . $this->_param_regexp . '(?:\s*,\s*(?:(?:\w+|'
+                . $this->_param_regexp . ')))*)?\))';
+
+        // matches valid function call:
+        // foo()
+        // foo_bar($foo)
+        // _foo_bar($foo,"bar")
+        // foo123($foo,$foo->bar(),"foo")
+        $this->_func_call_regexp = '(?:' . $this->_func_regexp . '\s*(?:'
+           . $this->_parenth_param_regexp . '))';
+    }
+
+    /**
+     * compile a resource
+     *
+     * sets $compiled_content to the compiled source
+     * @param string $resource_name
+     * @param string $source_content
+     * @param string $compiled_content
+     * @return true
+     */
+    function _compile_file($resource_name, $source_content, &$compiled_content)
+    {
+
+        if ($this->security) {
+            // do not allow php syntax to be executed unless specified
+            if ($this->php_handling == SMARTY_PHP_ALLOW &&
+                !$this->security_settings['PHP_HANDLING']) {
+                $this->php_handling = SMARTY_PHP_PASSTHRU;
+            }
+        }
+
+        $this->_load_filters();
+
+        $this->_current_file = $resource_name;
+        $this->_current_line_no = 1;
+        $ldq = preg_quote($this->left_delimiter, '~');
+        $rdq = preg_quote($this->right_delimiter, '~');
+
+        // run template source through prefilter functions
+        if (count($this->_plugins['prefilter']) > 0) {
+            foreach ($this->_plugins['prefilter'] as $filter_name => $prefilter) {
+                if ($prefilter === false) continue;
+                if ($prefilter[3] || is_callable($prefilter[0])) {
+                    $source_content = call_user_func_array($prefilter[0],
+                                                            array($source_content, &$this));
+                    $this->_plugins['prefilter'][$filter_name][3] = true;
+                } else {
+                    $this->_trigger_fatal_error("[plugin] prefilter '$filter_name' is not implemented");
+                }
+            }
+        }
+
+        /* fetch all special blocks */
+        $search = "~{$ldq}\*(.*?)\*{$rdq}|{$ldq}\s*literal\s*{$rdq}(.*?){$ldq}\s*/literal\s*{$rdq}|{$ldq}\s*php\s*{$rdq}(.*?){$ldq}\s*/php\s*{$rdq}~s";
+
+        preg_match_all($search, $source_content, $match,  PREG_SET_ORDER);
+        $this->_folded_blocks = $match;
+        reset($this->_folded_blocks);
+
+        /* replace special blocks by "{php}" */
+        $source_content = preg_replace($search.'e', "'"
+                                       . $this->_quote_replace($this->left_delimiter) . 'php'
+                                       . "' . str_repeat(\"\n\", substr_count('\\0', \"\n\")) .'"
+                                       . $this->_quote_replace($this->right_delimiter)
+                                       . "'"
+                                       , $source_content);
+
+        /* Gather all template tags. */
+        preg_match_all("~{$ldq}\s*(.*?)\s*{$rdq}~s", $source_content, $_match);
+        $template_tags = $_match[1];
+        /* Split content by template tags to obtain non-template content. */
+        $text_blocks = preg_split("~{$ldq}.*?{$rdq}~s", $source_content);
+
+        /* loop through text blocks */
+        for ($curr_tb = 0, $for_max = count($text_blocks); $curr_tb < $for_max; $curr_tb++) {
+            /* match anything resembling php tags */
+            if (preg_match_all('~(<\?(?:\w+|=)?|\?>|language\s*=\s*[\"\']?php[\"\']?)~is', $text_blocks[$curr_tb], $sp_match)) {
+                /* replace tags with placeholders to prevent recursive replacements */
+                $sp_match[1] = array_unique($sp_match[1]);
+                usort($sp_match[1], '_smarty_sort_length');
+                for ($curr_sp = 0, $for_max2 = count($sp_match[1]); $curr_sp < $for_max2; $curr_sp++) {
+                    $text_blocks[$curr_tb] = str_replace($sp_match[1][$curr_sp],'%%%SMARTYSP'.$curr_sp.'%%%',$text_blocks[$curr_tb]);
+                }
+                /* process each one */
+                for ($curr_sp = 0, $for_max2 = count($sp_match[1]); $curr_sp < $for_max2; $curr_sp++) {
+                    if ($this->php_handling == SMARTY_PHP_PASSTHRU) {
+                        /* echo php contents */
+                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', '<?php echo \''.str_replace("'", "\'", $sp_match[1][$curr_sp]).'\'; ?>'."\n", $text_blocks[$curr_tb]);
+                    } else if ($this->php_handling == SMARTY_PHP_QUOTE) {
+                        /* quote php tags */
+                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', htmlspecialchars($sp_match[1][$curr_sp]), $text_blocks[$curr_tb]);
+                    } else if ($this->php_handling == SMARTY_PHP_REMOVE) {
+                        /* remove php tags */
+                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', '', $text_blocks[$curr_tb]);
+                    } else {
+                        /* SMARTY_PHP_ALLOW, but echo non php starting tags */
+                        $sp_match[1][$curr_sp] = preg_replace('~(<\?(?!php|=|$))~i', '<?php echo \'\\1\'?>'."\n", $sp_match[1][$curr_sp]);
+                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', $sp_match[1][$curr_sp], $text_blocks[$curr_tb]);
+                    }
+                }
+            }
+        }
+
+        /* Compile the template tags into PHP code. */
+        $compiled_tags = array();
+        for ($i = 0, $for_max = count($template_tags); $i < $for_max; $i++) {
+            $this->_current_line_no += substr_count($text_blocks[$i], "\n");
+            $compiled_tags[] = $this->_compile_tag($template_tags[$i]);
+            $this->_current_line_no += substr_count($template_tags[$i], "\n");
+        }
+        if (count($this->_tag_stack)>0) {
+            list($_open_tag, $_line_no) = end($this->_tag_stack);
+            $this->_syntax_error("unclosed tag \{$_open_tag} (opened line $_line_no).", E_USER_ERROR, __FILE__, __LINE__);
+            return;
+        }
+
+        $compiled_content = '';
+
+        /* Interleave the compiled contents and text blocks to get the final result. */
+        for ($i = 0, $for_max = count($compiled_tags); $i < $for_max; $i++) {
+            if ($compiled_tags[$i] == '') {
+                // tag result empty, remove first newline from following text block
+                $text_blocks[$i+1] = preg_replace('~^(\r\n|\r|\n)~', '', $text_blocks[$i+1]);
+            }
+            $compiled_content .= $text_blocks[$i].$compiled_tags[$i];
+        }
+        $compiled_content .= $text_blocks[$i];
+
+        /* Reformat data between 'strip' and '/strip' tags, removing spaces, tabs and newlines. */
+        if (preg_match_all("~{$ldq}strip{$rdq}.*?{$ldq}/strip{$rdq}~s", $compiled_content, $_match)) {
+            $strip_tags = $_match[0];
+            $strip_tags_modified = preg_replace("~{$ldq}/?strip{$rdq}|[\t ]+$|^[\t ]+~m", '', $strip_tags);
+            $strip_tags_modified = preg_replace('~[\r\n]+~m', '', $strip_tags_modified);
+            for ($i = 0, $for_max = count($strip_tags); $i < $for_max; $i++)
+                $compiled_content = preg_replace("~{$ldq}strip{$rdq}.*?{$ldq}/strip{$rdq}~s",
+                                                  $this->_quote_replace($strip_tags_modified[$i]),
+                                                  $compiled_content, 1);
+        }
+
+        // remove \n from the end of the file, if any
+        if (($_len=strlen($compiled_content)) && ($compiled_content{$_len - 1} == "\n" )) {
+            $compiled_content = substr($compiled_content, 0, -1);
+        }
+
+        if (!empty($this->_cache_serial)) {
+            $compiled_content = "<?php \$this->_cache_serials['".$this->_cache_include."'] = '".$this->_cache_serial."'; ?>" . $compiled_content;
+        }
+
+        // remove unnecessary close/open tags
+        $compiled_content = preg_replace('~\?>\n?<\?php~', '', $compiled_content);
+
+        // run compiled template through postfilter functions
+        if (count($this->_plugins['postfilter']) > 0) {
+            foreach ($this->_plugins['postfilter'] as $filter_name => $postfilter) {
+                if ($postfilter === false) continue;
+                if ($postfilter[3] || is_callable($postfilter[0])) {
+                    $compiled_content = call_user_func_array($postfilter[0],
+                                                              array($compiled_content, &$this));
+                    $this->_plugins['postfilter'][$filter_name][3] = true;
+                } else {
+                    $this->_trigger_fatal_error("Smarty plugin error: postfilter '$filter_name' is not implemented");
+                }
+            }
+        }
+
+        // put header at the top of the compiled template
+        $template_header = "<?php /* Smarty version ".$this->_version.", created on ".strftime("%Y-%m-%d %H:%M:%S")."\n";
+        $template_header .= "         compiled from ".strtr(urlencode($resource_name), array('%2F'=>'/', '%3A'=>':'))." */ ?>\n";
+
+        /* Emit code to load needed plugins. */
+        $this->_plugins_code = '';
+        if (count($this->_plugin_info)) {
+            $_plugins_params = "array('plugins' => array(";
+            foreach ($this->_plugin_info as $plugin_type => $plugins) {
+                foreach ($plugins as $plugin_name => $plugin_info) {
+                    $_plugins_params .= "array('$plugin_type', '$plugin_name', '$plugin_info[0]', $plugin_info[1], ";
+                    $_plugins_params .= $plugin_info[2] ? 'true),' : 'false),';
+                }
+            }
+            $_plugins_params .= '))';
+            $plugins_code = "<?php require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_plugins.php');\nsmarty_core_load_plugins($_plugins_params, \$this); ?>\n";
+            $template_header .= $plugins_code;
+            $this->_plugin_info = array();
+            $this->_plugins_code = $plugins_code;
+        }
+
+        if ($this->_init_smarty_vars) {
+            $template_header .= "<?php require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.assign_smarty_interface.php');\nsmarty_core_assign_smarty_interface(null, \$this); ?>\n";
+            $this->_init_smarty_vars = false;
+        }
+
+        $compiled_content = $template_header . $compiled_content;
+        return true;
+    }
+
+    /**
+     * Compile a template tag
+     *
+     * @param string $template_tag
+     * @return string
+     */
+    function _compile_tag($template_tag)
+    {
+        /* Matched comment. */
+        if ($template_tag{0} == '*' && $template_tag{strlen($template_tag) - 1} == '*')
+            return '';
+        
+        /* Split tag into two three parts: command, command modifiers and the arguments. */
+        if(! preg_match('~^(?:(' . $this->_num_const_regexp . '|' . $this->_obj_call_regexp . '|' . $this->_var_regexp
+                . '|\/?' . $this->_reg_obj_regexp . '|\/?' . $this->_func_regexp . ')(' . $this->_mod_regexp . '*))
+                      (?:\s+(.*))?$
+                    ~xs', $template_tag, $match)) {
+            $this->_syntax_error("unrecognized tag: $template_tag", E_USER_ERROR, __FILE__, __LINE__);
+        }
+        
+        $tag_command = $match[1];
+        $tag_modifier = isset($match[2]) ? $match[2] : null;
+        $tag_args = isset($match[3]) ? $match[3] : null;
+
+        if (preg_match('~^' . $this->_num_const_regexp . '|' . $this->_obj_call_regexp . '|' . $this->_var_regexp . '$~', $tag_command)) {
+            /* tag name is a variable or object */
+            $_return = $this->_parse_var_props($tag_command . $tag_modifier, $this->_parse_attrs($tag_args));
+            if(isset($_tag_attrs['assign'])) {
+                return "<?php \$this->assign('" . $this->_dequote($_tag_attrs['assign']) . "', $_return ); ?>\n";
+            } else {
+                return "<?php echo $_return; ?>" . $this->_additional_newline;
+            }
+        }
+
+        /* If the tag name is a registered object, we process it. */
+        if (preg_match('~^\/?' . $this->_reg_obj_regexp . '$~', $tag_command)) {
+            return $this->_compile_registered_object_tag($tag_command, $this->_parse_attrs($tag_args), $tag_modifier);
+        }
+
+        switch ($tag_command) {
+            case 'include':
+                return $this->_compile_include_tag($tag_args);
+
+            case 'include_php':
+                return $this->_compile_include_php_tag($tag_args);
+
+            case 'if':
+                $this->_push_tag('if');
+                return $this->_compile_if_tag($tag_args);
+
+            case 'else':
+                list($_open_tag) = end($this->_tag_stack);
+                if ($_open_tag != 'if' && $_open_tag != 'elseif')
+                    $this->_syntax_error('unexpected {else}', E_USER_ERROR, __FILE__, __LINE__);
+                else
+                    $this->_push_tag('else');
+                return '<?php else: ?>';
+
+            case 'elseif':
+                list($_open_tag) = end($this->_tag_stack);
+                if ($_open_tag != 'if' && $_open_tag != 'elseif')
+                    $this->_syntax_error('unexpected {elseif}', E_USER_ERROR, __FILE__, __LINE__);
+                if ($_open_tag == 'if')
+                    $this->_push_tag('elseif');
+                return $this->_compile_if_tag($tag_args, true);
+
+            case '/if':
+                $this->_pop_tag('if');
+                return '<?php endif; ?>';
+
+            case 'capture':
+                return $this->_compile_capture_tag(true, $tag_args);
+
+            case '/capture':
+                return $this->_compile_capture_tag(false);
+
+            case 'ldelim':
+                return $this->left_delimiter;
+
+            case 'rdelim':
+                return $this->right_delimiter;
+
+            case 'section':
+                $this->_push_tag('section');
+                return $this->_compile_section_start($tag_args);
+
+            case 'sectionelse':
+                $this->_push_tag('sectionelse');
+                return "<?php endfor; else: ?>";
+                break;
+
+            case '/section':
+                $_open_tag = $this->_pop_tag('section');
+                if ($_open_tag == 'sectionelse')
+                    return "<?php endif; ?>";
+                else
+                    return "<?php endfor; endif; ?>";
+
+            case 'foreach':
+                $this->_push_tag('foreach');
+                return $this->_compile_foreach_start($tag_args);
+                break;
+
+            case 'foreachelse':
+                $this->_push_tag('foreachelse');
+                return "<?php endforeach; unset(\$_from); else: ?>";
+
+            case '/foreach':
+                $_open_tag = $this->_pop_tag('foreach');
+                if ($_open_tag == 'foreachelse')
+                    return "<?php endif; ?>";
+                else
+                    return "<?php endforeach; unset(\$_from); endif; ?>";
+                break;
+
+            case 'strip':
+            case '/strip':
+                if ($tag_command{0}=='/') {
+                    $this->_pop_tag('strip');
+                    if (--$this->_strip_depth==0) { /* outermost closing {/strip} */
+                        $this->_additional_newline = "\n";
+                        return $this->left_delimiter.$tag_command.$this->right_delimiter;
+                    }
+                } else {
+                    $this->_push_tag('strip');
+                    if ($this->_strip_depth++==0) { /* outermost opening {strip} */
+                        $this->_additional_newline = "";
+                        return $this->left_delimiter.$tag_command.$this->right_delimiter;
+                    }
+                }
+                return '';
+
+            case 'php':
+                /* handle folded tags replaced by {php} */
+                list(, $block) = each($this->_folded_blocks);
+                $this->_current_line_no += substr_count($block[0], "\n");
+                /* the number of matched elements in the regexp in _compile_file()
+                   determins the type of folded tag that was found */
+                switch (count($block)) {
+                    case 2: /* comment */
+                        return '';
+
+                    case 3: /* literal */
+                        return "<?php echo '" . strtr($block[2], array("'"=>"\'", "\\"=>"\\\\")) . "'; ?>" . $this->_additional_newline;
+
+                    case 4: /* php */
+                        if ($this->security && !$this->security_settings['PHP_TAGS']) {
+                            $this->_syntax_error("(secure mode) php tags not permitted", E_USER_WARNING, __FILE__, __LINE__);
+                            return;
+                        }
+                        return '<?php ' . $block[3] .' ?>';
+                }
+                break;
+
+            case 'insert':
+                return $this->_compile_insert_tag($tag_args);
+
+            default:
+                if ($this->_compile_compiler_tag($tag_command, $tag_args, $output)) {
+                    return $output;
+                } else if ($this->_compile_block_tag($tag_command, $tag_args, $tag_modifier, $output)) {
+                    return $output;
+                } else if ($this->_compile_custom_tag($tag_command, $tag_args, $tag_modifier, $output)) {
+                    return $output;                    
+                } else {
+                    $this->_syntax_error("unrecognized tag '$tag_command'", E_USER_ERROR, __FILE__, __LINE__);
+                }
+
+        }
+    }
+
+
+    /**
+     * compile the custom compiler tag
+     *
+     * sets $output to the compiled custom compiler tag
+     * @param string $tag_command
+     * @param string $tag_args
+     * @param string $output
+     * @return boolean
+     */
+    function _compile_compiler_tag($tag_command, $tag_args, &$output)
+    {
+        $found = false;
+        $have_function = true;
+
+        /*
+         * First we check if the compiler function has already been registered
+         * or loaded from a plugin file.
+         */
+        if (isset($this->_plugins['compiler'][$tag_command])) {
+            $found = true;
+            $plugin_func = $this->_plugins['compiler'][$tag_command][0];
+            if (!is_callable($plugin_func)) {
+                $message = "compiler function '$tag_command' is not implemented";
+                $have_function = false;
+            }
+        }
+        /*
+         * Otherwise we need to load plugin file and look for the function
+         * inside it.
+         */
+        else if ($plugin_file = $this->_get_plugin_filepath('compiler', $tag_command)) {
+            $found = true;
+
+            include_once $plugin_file;
+
+            $plugin_func = 'smarty_compiler_' . $tag_command;
+            if (!is_callable($plugin_func)) {
+                $message = "plugin function $plugin_func() not found in $plugin_file\n";
+                $have_function = false;
+            } else {
+                $this->_plugins['compiler'][$tag_command] = array($plugin_func, null, null, null, true);
+            }
+        }
+
+        /*
+         * True return value means that we either found a plugin or a
+         * dynamically registered function. False means that we didn't and the
+         * compiler should now emit code to load custom function plugin for this
+         * tag.
+         */
+        if ($found) {
+            if ($have_function) {
+                $output = call_user_func_array($plugin_func, array($tag_args, &$this));
+                if($output != '') {
+                $output = '<?php ' . $this->_push_cacheable_state('compiler', $tag_command)
+                                   . $output
+                                   . $this->_pop_cacheable_state('compiler', $tag_command) . ' ?>';
+                }
+            } else {
+                $this->_syntax_error($message, E_USER_WARNING, __FILE__, __LINE__);
+            }
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+
+    /**
+     * compile block function tag
+     *
+     * sets $output to compiled block function tag
+     * @param string $tag_command
+     * @param string $tag_args
+     * @param string $tag_modifier
+     * @param string $output
+     * @return boolean
+     */
+    function _compile_block_tag($tag_command, $tag_args, $tag_modifier, &$output)
+    {
+        if ($tag_command{0} == '/') {
+            $start_tag = false;
+            $tag_command = substr($tag_command, 1);
+        } else
+            $start_tag = true;
+
+        $found = false;
+        $have_function = true;
+
+        /*
+         * First we check if the block function has already been registered
+         * or loaded from a plugin file.
+         */
+        if (isset($this->_plugins['block'][$tag_command])) {
+            $found = true;
+            $plugin_func = $this->_plugins['block'][$tag_command][0];
+            if (!is_callable($plugin_func)) {
+                $message = "block function '$tag_command' is not implemented";
+                $have_function = false;
+            }
+        }
+        /*
+         * Otherwise we need to load plugin file and look for the function
+         * inside it.
+         */
+        else if ($plugin_file = $this->_get_plugin_filepath('block', $tag_command)) {
+            $found = true;
+
+            include_once $plugin_file;
+
+            $plugin_func = 'smarty_block_' . $tag_command;
+            if (!function_exists($plugin_func)) {
+                $message = "plugin function $plugin_func() not found in $plugin_file\n";
+                $have_function = false;
+            } else {
+                $this->_plugins['block'][$tag_command] = array($plugin_func, null, null, null, true);
+
+            }
+        }
+
+        if (!$found) {
+            return false;
+        } else if (!$have_function) {
+            $this->_syntax_error($message, E_USER_WARNING, __FILE__, __LINE__);
+            return true;
+        }
+
+        /*
+         * Even though we've located the plugin function, compilation
+         * happens only once, so the plugin will still need to be loaded
+         * at runtime for future requests.
+         */
+        $this->_add_plugin('block', $tag_command);
+
+        if ($start_tag)
+            $this->_push_tag($tag_command);
+        else
+            $this->_pop_tag($tag_command);
+
+        if ($start_tag) {
+            $output = '<?php ' . $this->_push_cacheable_state('block', $tag_command);
+            $attrs = $this->_parse_attrs($tag_args);
+            $arg_list = $this->_compile_arg_list('block', $tag_command, $attrs, $_cache_attrs='');
+            $output .= "$_cache_attrs\$this->_tag_stack[] = array('$tag_command', array(".implode(',', $arg_list).')); ';
+            $output .= $this->_compile_plugin_call('block', $tag_command).'($this->_tag_stack[count($this->_tag_stack)-1][1], null, $this, $_block_repeat=true);';
+            $output .= 'while ($_block_repeat) { ob_start(); ?>';
+        } else {
+            $output = '<?php $this->_block_content = ob_get_contents(); ob_end_clean(); ';
+            $_out_tag_text = $this->_compile_plugin_call('block', $tag_command).'($this->_tag_stack[count($this->_tag_stack)-1][1], $this->_block_content, $this, $_block_repeat=false)';
+            if ($tag_modifier != '') {
+                $this->_parse_modifiers($_out_tag_text, $tag_modifier);
+            }
+            $output .= 'echo '.$_out_tag_text.'; } ';
+            $output .= " array_pop(\$this->_tag_stack); " . $this->_pop_cacheable_state('block', $tag_command) . '?>';
+        }
+
+        return true;
+    }
+
+
+    /**
+     * compile custom function tag
+     *
+     * @param string $tag_command
+     * @param string $tag_args
+     * @param string $tag_modifier
+     * @return string
+     */
+    function _compile_custom_tag($tag_command, $tag_args, $tag_modifier, &$output)
+    {
+        $found = false;
+        $have_function = true;
+
+        /*
+         * First we check if the custom function has already been registered
+         * or loaded from a plugin file.
+         */
+        if (isset($this->_plugins['function'][$tag_command])) {
+            $found = true;
+            $plugin_func = $this->_plugins['function'][$tag_command][0];
+            if (!is_callable($plugin_func)) {
+                $message = "custom function '$tag_command' is not implemented";
+                $have_function = false;
+            }
+        }
+        /*
+         * Otherwise we need to load plugin file and look for the function
+         * inside it.
+         */
+        else if ($plugin_file = $this->_get_plugin_filepath('function', $tag_command)) {
+            $found = true;
+
+            include_once $plugin_file;
+
+            $plugin_func = 'smarty_function_' . $tag_command;
+            if (!function_exists($plugin_func)) {
+                $message = "plugin function $plugin_func() not found in $plugin_file\n";
+                $have_function = false;
+            } else {
+                $this->_plugins['function'][$tag_command] = array($plugin_func, null, null, null, true);
+
+            }
+        }
+
+        if (!$found) {
+            return false;
+        } else if (!$have_function) {
+            $this->_syntax_error($message, E_USER_WARNING, __FILE__, __LINE__);
+            return true;
+        }
+
+        /* declare plugin to be loaded on display of the template that
+           we compile right now */
+        $this->_add_plugin('function', $tag_command);
+
+        $_cacheable_state = $this->_push_cacheable_state('function', $tag_command);
+        $attrs = $this->_parse_attrs($tag_args);
+        $arg_list = $this->_compile_arg_list('function', $tag_command, $attrs, $_cache_attrs='');
+
+        $output = $this->_compile_plugin_call('function', $tag_command).'(array('.implode(',', $arg_list)."), \$this)";
+        if($tag_modifier != '') {
+            $this->_parse_modifiers($output, $tag_modifier);
+        }
+
+        if($output != '') {
+            $output =  '<?php ' . $_cacheable_state . $_cache_attrs . 'echo ' . $output . ';'
+                . $this->_pop_cacheable_state('function', $tag_command) . "?>" . $this->_additional_newline;
+        }
+
+        return true;
+    }
+
+    /**
+     * compile a registered object tag
+     *
+     * @param string $tag_command
+     * @param array $attrs
+     * @param string $tag_modifier
+     * @return string
+     */
+    function _compile_registered_object_tag($tag_command, $attrs, $tag_modifier)
+    {
+        if ($tag_command{0} == '/') {
+            $start_tag = false;
+            $tag_command = substr($tag_command, 1);
+        } else {
+            $start_tag = true;
+        }
+
+        list($object, $obj_comp) = explode('->', $tag_command);
+
+        $arg_list = array();
+        if(count($attrs)) {
+            $_assign_var = false;
+            foreach ($attrs as $arg_name => $arg_value) {
+                if($arg_name == 'assign') {
+                    $_assign_var = $arg_value;
+                    unset($attrs['assign']);
+                    continue;
+                }
+                if (is_bool($arg_value))
+                    $arg_value = $arg_value ? 'true' : 'false';
+                $arg_list[] = "'$arg_name' => $arg_value";
+            }
+        }
+
+        if($this->_reg_objects[$object][2]) {
+            // smarty object argument format
+            $args = "array(".implode(',', (array)$arg_list)."), \$this";
+        } else {
+            // traditional argument format
+            $args = implode(',', array_values($attrs));
+            if (empty($args)) {
+                $args = 'null';
+            }
+        }
+
+        $prefix = '';
+        $postfix = '';
+        $newline = '';
+        if(!is_object($this->_reg_objects[$object][0])) {
+            $this->_trigger_fatal_error("registered '$object' is not an object" , $this->_current_file, $this->_current_line_no, __FILE__, __LINE__);
+        } elseif(!empty($this->_reg_objects[$object][1]) && !in_array($obj_comp, $this->_reg_objects[$object][1])) {
+            $this->_trigger_fatal_error("'$obj_comp' is not a registered component of object '$object'", $this->_current_file, $this->_current_line_no, __FILE__, __LINE__);
+        } elseif(method_exists($this->_reg_objects[$object][0], $obj_comp)) {
+            // method
+            if(in_array($obj_comp, $this->_reg_objects[$object][3])) {
+                // block method
+                if ($start_tag) {
+                    $prefix = "\$this->_tag_stack[] = array('$obj_comp', $args); ";
+                    $prefix .= "\$this->_reg_objects['$object'][0]->$obj_comp(\$this->_tag_stack[count(\$this->_tag_stack)-1][1], null, \$this, \$_block_repeat=true); ";
+                    $prefix .= "while (\$_block_repeat) { ob_start();";
+                    $return = null;
+                    $postfix = '';
+            } else {
+                    $prefix = "\$this->_obj_block_content = ob_get_contents(); ob_end_clean(); ";
+                    $return = "\$this->_reg_objects['$object'][0]->$obj_comp(\$this->_tag_stack[count(\$this->_tag_stack)-1][1], \$this->_obj_block_content, \$this, \$_block_repeat=false)";
+                    $postfix = "} array_pop(\$this->_tag_stack);";
+                }
+            } else {
+                // non-block method
+                $return = "\$this->_reg_objects['$object'][0]->$obj_comp($args)";
+            }
+        } else {
+            // property
+            $return = "\$this->_reg_objects['$object'][0]->$obj_comp";
+        }
+
+        if($return != null) {
+            if($tag_modifier != '') {
+                $this->_parse_modifiers($return, $tag_modifier);
+            }
+
+            if(!empty($_assign_var)) {
+                $output = "\$this->assign('" . $this->_dequote($_assign_var) ."',  $return);";
+            } else {
+                $output = 'echo ' . $return . ';';
+                $newline = $this->_additional_newline;
+            }
+        } else {
+            $output = '';
+        }
+
+        return '<?php ' . $prefix . $output . $postfix . "?>" . $newline;
+    }
+
+    /**
+     * Compile {insert ...} tag
+     *
+     * @param string $tag_args
+     * @return string
+     */
+    function _compile_insert_tag($tag_args)
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+        $name = $this->_dequote($attrs['name']);
+
+        if (empty($name)) {
+            $this->_syntax_error("missing insert name", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        if (!empty($attrs['script'])) {
+            $delayed_loading = true;
+        } else {
+            $delayed_loading = false;
+        }
+
+        foreach ($attrs as $arg_name => $arg_value) {
+            if (is_bool($arg_value))
+                $arg_value = $arg_value ? 'true' : 'false';
+            $arg_list[] = "'$arg_name' => $arg_value";
+        }
+
+        $this->_add_plugin('insert', $name, $delayed_loading);
+
+        $_params = "array('args' => array(".implode(', ', (array)$arg_list)."))";
+
+        return "<?php require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.run_insert_handler.php');\necho smarty_core_run_insert_handler($_params, \$this); ?>" . $this->_additional_newline;
+    }
+
+    /**
+     * Compile {include ...} tag
+     *
+     * @param string $tag_args
+     * @return string
+     */
+    function _compile_include_tag($tag_args)
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+        $arg_list = array();
+
+        if (empty($attrs['file'])) {
+            $this->_syntax_error("missing 'file' attribute in include tag", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        foreach ($attrs as $arg_name => $arg_value) {
+            if ($arg_name == 'file') {
+                $include_file = $arg_value;
+                continue;
+            } else if ($arg_name == 'assign') {
+                $assign_var = $arg_value;
+                continue;
+            }
+            if (is_bool($arg_value))
+                $arg_value = $arg_value ? 'true' : 'false';
+            $arg_list[] = "'$arg_name' => $arg_value";
+        }
+
+        $output = '<?php ';
+
+        if (isset($assign_var)) {
+            $output .= "ob_start();\n";
+        }
+
+        $output .=
+            "\$_smarty_tpl_vars = \$this->_tpl_vars;\n";
+
+
+        $_params = "array('smarty_include_tpl_file' => " . $include_file . ", 'smarty_include_vars' => array(".implode(',', (array)$arg_list)."))";
+        $output .= "\$this->_smarty_include($_params);\n" .
+        "\$this->_tpl_vars = \$_smarty_tpl_vars;\n" .
+        "unset(\$_smarty_tpl_vars);\n";
+
+        if (isset($assign_var)) {
+            $output .= "\$this->assign(" . $assign_var . ", ob_get_contents()); ob_end_clean();\n";
+        }
+
+        $output .= ' ?>';
+
+        return $output;
+
+    }
+
+    /**
+     * Compile {include ...} tag
+     *
+     * @param string $tag_args
+     * @return string
+     */
+    function _compile_include_php_tag($tag_args)
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+
+        if (empty($attrs['file'])) {
+            $this->_syntax_error("missing 'file' attribute in include_php tag", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        $assign_var = (empty($attrs['assign'])) ? '' : $this->_dequote($attrs['assign']);
+        $once_var = (empty($attrs['once']) || $attrs['once']=='false') ? 'false' : 'true';
+
+        $arg_list = array();
+        foreach($attrs as $arg_name => $arg_value) {
+            if($arg_name != 'file' AND $arg_name != 'once' AND $arg_name != 'assign') {
+                if(is_bool($arg_value))
+                    $arg_value = $arg_value ? 'true' : 'false';
+                $arg_list[] = "'$arg_name' => $arg_value";
+            }
+        }
+
+        $_params = "array('smarty_file' => " . $attrs['file'] . ", 'smarty_assign' => '$assign_var', 'smarty_once' => $once_var, 'smarty_include_vars' => array(".implode(',', $arg_list)."))";
+
+        return "<?php require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.smarty_include_php.php');\nsmarty_core_smarty_include_php($_params, \$this); ?>" . $this->_additional_newline;
+    }
+
+
+    /**
+     * Compile {section ...} tag
+     *
+     * @param string $tag_args
+     * @return string
+     */
+    function _compile_section_start($tag_args)
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+        $arg_list = array();
+
+        $output = '<?php ';
+        $section_name = $attrs['name'];
+        if (empty($section_name)) {
+            $this->_syntax_error("missing section name", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        $output .= "unset(\$this->_sections[$section_name]);\n";
+        $section_props = "\$this->_sections[$section_name]";
+
+        foreach ($attrs as $attr_name => $attr_value) {
+            switch ($attr_name) {
+                case 'loop':
+                    $output .= "{$section_props}['loop'] = is_array(\$_loop=$attr_value) ? count(\$_loop) : max(0, (int)\$_loop); unset(\$_loop);\n";
+                    break;
+
+                case 'show':
+                    if (is_bool($attr_value))
+                        $show_attr_value = $attr_value ? 'true' : 'false';
+                    else
+                        $show_attr_value = "(bool)$attr_value";
+                    $output .= "{$section_props}['show'] = $show_attr_value;\n";
+                    break;
+
+                case 'name':
+                    $output .= "{$section_props}['$attr_name'] = $attr_value;\n";
+                    break;
+
+                case 'max':
+                case 'start':
+                    $output .= "{$section_props}['$attr_name'] = (int)$attr_value;\n";
+                    break;
+
+                case 'step':
+                    $output .= "{$section_props}['$attr_name'] = ((int)$attr_value) == 0 ? 1 : (int)$attr_value;\n";
+                    break;
+
+                default:
+                    $this->_syntax_error("unknown section attribute - '$attr_name'", E_USER_ERROR, __FILE__, __LINE__);
+                    break;
+            }
+        }
+
+        if (!isset($attrs['show']))
+            $output .= "{$section_props}['show'] = true;\n";
+
+        if (!isset($attrs['loop']))
+            $output .= "{$section_props}['loop'] = 1;\n";
+
+        if (!isset($attrs['max']))
+            $output .= "{$section_props}['max'] = {$section_props}['loop'];\n";
+        else
+            $output .= "if ({$section_props}['max'] < 0)\n" .
+                       "    {$section_props}['max'] = {$section_props}['loop'];\n";
+
+        if (!isset($attrs['step']))
+            $output .= "{$section_props}['step'] = 1;\n";
+
+        if (!isset($attrs['start']))
+            $output .= "{$section_props}['start'] = {$section_props}['step'] > 0 ? 0 : {$section_props}['loop']-1;\n";
+        else {
+            $output .= "if ({$section_props}['start'] < 0)\n" .
+                       "    {$section_props}['start'] = max({$section_props}['step'] > 0 ? 0 : -1, {$section_props}['loop'] + {$section_props}['start']);\n" .
+                       "else\n" .
+                       "    {$section_props}['start'] = min({$section_props}['start'], {$section_props}['step'] > 0 ? {$section_props}['loop'] : {$section_props}['loop']-1);\n";
+        }
+
+        $output .= "if ({$section_props}['show']) {\n";
+        if (!isset($attrs['start']) && !isset($attrs['step']) && !isset($attrs['max'])) {
+            $output .= "    {$section_props}['total'] = {$section_props}['loop'];\n";
+        } else {
+            $output .= "    {$section_props}['total'] = min(ceil(({$section_props}['step'] > 0 ? {$section_props}['loop'] - {$section_props}['start'] : {$section_props}['start']+1)/abs({$section_props}['step'])), {$section_props}['max']);\n";
+        }
+        $output .= "    if ({$section_props}['total'] == 0)\n" .
+                   "        {$section_props}['show'] = false;\n" .
+                   "} else\n" .
+                   "    {$section_props}['total'] = 0;\n";
+
+        $output .= "if ({$section_props}['show']):\n";
+        $output .= "
+            for ({$section_props}['index'] = {$section_props}['start'], {$section_props}['iteration'] = 1;
+                 {$section_props}['iteration'] <= {$section_props}['total'];
+                 {$section_props}['index'] += {$section_props}['step'], {$section_props}['iteration']++):\n";
+        $output .= "{$section_props}['rownum'] = {$section_props}['iteration'];\n";
+        $output .= "{$section_props}['index_prev'] = {$section_props}['index'] - {$section_props}['step'];\n";
+        $output .= "{$section_props}['index_next'] = {$section_props}['index'] + {$section_props}['step'];\n";
+        $output .= "{$section_props}['first']      = ({$section_props}['iteration'] == 1);\n";
+        $output .= "{$section_props}['last']       = ({$section_props}['iteration'] == {$section_props}['total']);\n";
+
+        $output .= "?>";
+
+        return $output;
+    }
+
+
+    /**
+     * Compile {foreach ...} tag.
+     *
+     * @param string $tag_args
+     * @return string
+     */
+    function _compile_foreach_start($tag_args)
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+        $arg_list = array();
+
+        if (empty($attrs['from'])) {
+            return $this->_syntax_error("foreach: missing 'from' attribute", E_USER_ERROR, __FILE__, __LINE__);
+        }
+        $from = $attrs['from'];
+
+        if (empty($attrs['item'])) {
+            return $this->_syntax_error("foreach: missing 'item' attribute", E_USER_ERROR, __FILE__, __LINE__);
+        }
+        $item = $this->_dequote($attrs['item']);
+        if (!preg_match('~^\w+$~', $item)) {
+            return $this->_syntax_error("'foreach: item' must be a variable name (literal string)", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        if (isset($attrs['key'])) {
+            $key  = $this->_dequote($attrs['key']);
+            if (!preg_match('~^\w+$~', $key)) {
+                return $this->_syntax_error("foreach: 'key' must to be a variable name (literal string)", E_USER_ERROR, __FILE__, __LINE__);
+            }
+            $key_part = "\$this->_tpl_vars['$key'] => ";
+        } else {
+            $key = null;
+            $key_part = '';
+        }
+
+        if (isset($attrs['name'])) {
+            $name = $attrs['name'];
+        } else {
+            $name = null;
+        }
+
+        $output = '<?php ';
+        if (isset($name)) {
+            $foreach_props = "\$this->_foreach[$name]";
+            $output .= "if (isset(\$this->_foreach[$name])) unset(\$this->_foreach[$name]);\n";
+            $output .= "{$foreach_props}['total'] = count(\$_from = (array)$from);\n";
+            $output .= "{$foreach_props}['show'] = {$foreach_props}['total'] > 0;\n";
+            $output .= "if ({$foreach_props}['show']):\n";
+            $output .= "{$foreach_props}['iteration'] = 0;\n";
+            $output .= "    foreach (\$_from as $key_part\$this->_tpl_vars['$item']):\n";
+            $output .= "        {$foreach_props}['iteration']++;\n";
+            $output .= "        {$foreach_props}['first'] = ({$foreach_props}['iteration'] == 1);\n";
+            $output .= "        {$foreach_props}['last']  = ({$foreach_props}['iteration'] == {$foreach_props}['total']);\n";
+        } else {
+            $output .= "if (count(\$_from = (array)$from)):\n";
+            $output .= "    foreach (\$_from as $key_part\$this->_tpl_vars['$item']):\n";
+        }
+        $output .= '?>';
+
+        return $output;
+    }
+
+
+    /**
+     * Compile {capture} .. {/capture} tags
+     *
+     * @param boolean $start true if this is the {capture} tag
+     * @param string $tag_args
+     * @return string
+     */
+
+    function _compile_capture_tag($start, $tag_args = '')
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+
+        if ($start) {
+            if (isset($attrs['name']))
+                $buffer = $attrs['name'];
+            else
+                $buffer = "'default'";
+
+            if (isset($attrs['assign']))
+                $assign = $attrs['assign'];
+            else
+                $assign = null;
+            $output = "<?php ob_start(); ?>";
+            $this->_capture_stack[] = array($buffer, $assign);
+        } else {
+            list($buffer, $assign) = array_pop($this->_capture_stack);
+            $output = "<?php \$this->_smarty_vars['capture'][$buffer] = ob_get_contents(); ";
+            if (isset($assign)) {
+                $output .= " \$this->assign($assign, ob_get_contents());";
+            }
+            $output .= "ob_end_clean(); ?>";
+        }
+
+        return $output;
+    }
+
+    /**
+     * Compile {if ...} tag
+     *
+     * @param string $tag_args
+     * @param boolean $elseif if true, uses elseif instead of if
+     * @return string
+     */
+    function _compile_if_tag($tag_args, $elseif = false)
+    {
+
+        /* Tokenize args for 'if' tag. */
+        preg_match_all('~(?>
+                ' . $this->_obj_call_regexp . '(?:' . $this->_mod_regexp . '*)? | # valid object call
+                ' . $this->_var_regexp . '(?:' . $this->_mod_regexp . '*)?    | # var or quoted string
+                \-?0[xX][0-9a-fA-F]+|\-?\d+(?:\.\d+)?|\.\d+|!==|===|==|!=|<>|<<|>>|<=|>=|\&\&|\|\||\(|\)|,|\!|\^|=|\&|\~|<|>|\||\%|\+|\-|\/|\*|\@    | # valid non-word token
+                \b\w+\b                                                        | # valid word token
+                \S+                                                           # anything else
+                )~x', $tag_args, $match);
+
+        $tokens = $match[0];
+
+        // make sure we have balanced parenthesis
+        $token_count = array_count_values($tokens);
+        if(isset($token_count['(']) && $token_count['('] != $token_count[')']) {
+            $this->_syntax_error("unbalanced parenthesis in if statement", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        $is_arg_stack = array();
+
+        for ($i = 0; $i < count($tokens); $i++) {
+
+            $token = &$tokens[$i];
+
+            switch (strtolower($token)) {
+                case '!':
+                case '%':
+                case '!==':
+                case '==':
+                case '===':
+                case '>':
+                case '<':
+                case '!=':
+                case '<>':
+                case '<<':
+                case '>>':
+                case '<=':
+                case '>=':
+                case '&&':
+                case '||':
+                case '|':
+                case '^':
+                case '&':
+                case '~':
+                case ')':
+                case ',':
+                case '+':
+                case '-':
+                case '*':
+                case '/':
+                case '@':
+                    break;
+
+                case 'eq':
+                    $token = '==';
+                    break;
+
+                case 'ne':
+                case 'neq':
+                    $token = '!=';
+                    break;
+
+                case 'lt':
+                    $token = '<';
+                    break;
+
+                case 'le':
+                case 'lte':
+                    $token = '<=';
+                    break;
+
+                case 'gt':
+                    $token = '>';
+                    break;
+
+                case 'ge':
+                case 'gte':
+                    $token = '>=';
+                    break;
+
+                case 'and':
+                    $token = '&&';
+                    break;
+
+                case 'or':
+                    $token = '||';
+                    break;
+
+                case 'not':
+                    $token = '!';
+                    break;
+
+                case 'mod':
+                    $token = '%';
+                    break;
+
+                case '(':
+                    array_push($is_arg_stack, $i);
+                    break;
+
+                case 'is':
+                    /* If last token was a ')', we operate on the parenthesized
+                       expression. The start of the expression is on the stack.
+                       Otherwise, we operate on the last encountered token. */
+                    if ($tokens[$i-1] == ')')
+                        $is_arg_start = array_pop($is_arg_stack);
+                    else
+                        $is_arg_start = $i-1;
+                    /* Construct the argument for 'is' expression, so it knows
+                       what to operate on. */
+                    $is_arg = implode(' ', array_slice($tokens, $is_arg_start, $i - $is_arg_start));
+
+                    /* Pass all tokens from next one until the end to the
+                       'is' expression parsing function. The function will
+                       return modified tokens, where the first one is the result
+                       of the 'is' expression and the rest are the tokens it
+                       didn't touch. */
+                    $new_tokens = $this->_parse_is_expr($is_arg, array_slice($tokens, $i+1));
+
+                    /* Replace the old tokens with the new ones. */
+                    array_splice($tokens, $is_arg_start, count($tokens), $new_tokens);
+
+                    /* Adjust argument start so that it won't change from the
+                       current position for the next iteration. */
+                    $i = $is_arg_start;
+                    break;
+
+                default:
+                    if(preg_match('~^' . $this->_func_regexp . '$~', $token) ) {
+                            // function call
+                            if($this->security &&
+                               !in_array($token, $this->security_settings['IF_FUNCS'])) {
+                                $this->_syntax_error("(secure mode) '$token' not allowed in if statement", E_USER_ERROR, __FILE__, __LINE__);
+                            }
+                    } elseif(preg_match('~^' . $this->_obj_call_regexp . '|' . $this->_var_regexp . '(?:' . $this->_mod_regexp . '*)$~', $token)) {
+                        // object or variable
+                        $token = $this->_parse_var_props($token);
+                    } elseif(is_numeric($token)) {
+                        // number, skip it
+                    } else {
+                        $this->_syntax_error("unidentified token '$token'", E_USER_ERROR, __FILE__, __LINE__);
+                    }
+                    break;
+            }
+        }
+
+        if ($elseif)
+            return '<?php elseif ('.implode(' ', $tokens).'): ?>';
+        else
+            return '<?php if ('.implode(' ', $tokens).'): ?>';
+    }
+
+
+    function _compile_arg_list($type, $name, $attrs, &$cache_code) {
+        $arg_list = array();
+
+        if (isset($type) && isset($name)
+            && isset($this->_plugins[$type])
+            && isset($this->_plugins[$type][$name])
+            && empty($this->_plugins[$type][$name][4])
+            && is_array($this->_plugins[$type][$name][5])
+            ) {
+            /* we have a list of parameters that should be cached */
+            $_cache_attrs = $this->_plugins[$type][$name][5];
+            $_count = $this->_cache_attrs_count++;
+            $cache_code = "\$_cache_attrs =& \$this->_smarty_cache_attrs('$this->_cache_serial','$_count');";
+
+        } else {
+            /* no parameters are cached */
+            $_cache_attrs = null;
+        }
+
+        foreach ($attrs as $arg_name => $arg_value) {
+            if (is_bool($arg_value))
+                $arg_value = $arg_value ? 'true' : 'false';
+            if (is_null($arg_value))
+                $arg_value = 'null';
+            if ($_cache_attrs && in_array($arg_name, $_cache_attrs)) {
+                $arg_list[] = "'$arg_name' => (\$this->_cache_including) ? \$_cache_attrs['$arg_name'] : (\$_cache_attrs['$arg_name']=$arg_value)";
+            } else {
+                $arg_list[] = "'$arg_name' => $arg_value";
+            }
+        }
+        return $arg_list;
+    }
+
+    /**
+     * Parse is expression
+     *
+     * @param string $is_arg
+     * @param array $tokens
+     * @return array
+     */
+    function _parse_is_expr($is_arg, $tokens)
+    {
+        $expr_end = 0;
+        $negate_expr = false;
+
+        if (($first_token = array_shift($tokens)) == 'not') {
+            $negate_expr = true;
+            $expr_type = array_shift($tokens);
+        } else
+            $expr_type = $first_token;
+
+        switch ($expr_type) {
+            case 'even':
+                if (isset($tokens[$expr_end]) && $tokens[$expr_end] == 'by') {
+                    $expr_end++;
+                    $expr_arg = $tokens[$expr_end++];
+                    $expr = "!(1 & ($is_arg / " . $this->_parse_var_props($expr_arg) . "))";
+                } else
+                    $expr = "!(1 & $is_arg)";
+                break;
+
+            case 'odd':
+                if (isset($tokens[$expr_end]) && $tokens[$expr_end] == 'by') {
+                    $expr_end++;
+                    $expr_arg = $tokens[$expr_end++];
+                    $expr = "(1 & ($is_arg / " . $this->_parse_var_props($expr_arg) . "))";
+                } else
+                    $expr = "(1 & $is_arg)";
+                break;
+
+            case 'div':
+                if (@$tokens[$expr_end] == 'by') {
+                    $expr_end++;
+                    $expr_arg = $tokens[$expr_end++];
+                    $expr = "!($is_arg % " . $this->_parse_var_props($expr_arg) . ")";
+                } else {
+                    $this->_syntax_error("expecting 'by' after 'div'", E_USER_ERROR, __FILE__, __LINE__);
+                }
+                break;
+
+            default:
+                $this->_syntax_error("unknown 'is' expression - '$expr_type'", E_USER_ERROR, __FILE__, __LINE__);
+                break;
+        }
+
+        if ($negate_expr) {
+            $expr = "!($expr)";
+        }
+
+        array_splice($tokens, 0, $expr_end, $expr);
+
+        return $tokens;
+    }
+
+
+    /**
+     * Parse attribute string
+     *
+     * @param string $tag_args
+     * @return array
+     */
+    function _parse_attrs($tag_args)
+    {
+
+        /* Tokenize tag attributes. */
+        preg_match_all('~(?:' . $this->_obj_call_regexp . '|' . $this->_qstr_regexp . ' | (?>[^"\'=\s]+)
+                         )+ |
+                         [=]
+                        ~x', $tag_args, $match);
+        $tokens       = $match[0];
+
+        $attrs = array();
+        /* Parse state:
+            0 - expecting attribute name
+            1 - expecting '='
+            2 - expecting attribute value (not '=') */
+        $state = 0;
+
+        foreach ($tokens as $token) {
+            switch ($state) {
+                case 0:
+                    /* If the token is a valid identifier, we set attribute name
+                       and go to state 1. */
+                    if (preg_match('~^\w+$~', $token)) {
+                        $attr_name = $token;
+                        $state = 1;
+                    } else
+                        $this->_syntax_error("invalid attribute name: '$token'", E_USER_ERROR, __FILE__, __LINE__);
+                    break;
+
+                case 1:
+                    /* If the token is '=', then we go to state 2. */
+                    if ($token == '=') {
+                        $state = 2;
+                    } else
+                        $this->_syntax_error("expecting '=' after attribute name '$last_token'", E_USER_ERROR, __FILE__, __LINE__);
+                    break;
+
+                case 2:
+                    /* If token is not '=', we set the attribute value and go to
+                       state 0. */
+                    if ($token != '=') {
+                        /* We booleanize the token if it's a non-quoted possible
+                           boolean value. */
+                        if (preg_match('~^(on|yes|true)$~', $token)) {
+                            $token = 'true';
+                        } else if (preg_match('~^(off|no|false)$~', $token)) {
+                            $token = 'false';
+                        } else if ($token == 'null') {
+                            $token = 'null';
+                        } else if (preg_match('~^-?([0-9]+|0[xX][0-9a-fA-F]+)$~', $token)) {
+                            /* treat integer literally */
+                        } else if (!preg_match('~^' . $this->_obj_call_regexp . '|' . $this->_var_regexp . '(?:' . $this->_mod_regexp . ')*$~', $token)) {
+                            /* treat as a string, double-quote it escaping quotes */
+                            $token = '"'.addslashes($token).'"';
+                        }
+
+                        $attrs[$attr_name] = $token;
+                        $state = 0;
+                    } else
+                        $this->_syntax_error("'=' cannot be an attribute value", E_USER_ERROR, __FILE__, __LINE__);
+                    break;
+            }
+            $last_token = $token;
+        }
+
+        if($state != 0) {
+            if($state == 1) {
+                $this->_syntax_error("expecting '=' after attribute name '$last_token'", E_USER_ERROR, __FILE__, __LINE__);
+            } else {
+                $this->_syntax_error("missing attribute value", E_USER_ERROR, __FILE__, __LINE__);
+            }
+        }
+
+        $this->_parse_vars_props($attrs);
+
+        return $attrs;
+    }
+
+    /**
+     * compile multiple variables and section properties tokens into
+     * PHP code
+     *
+     * @param array $tokens
+     */
+    function _parse_vars_props(&$tokens)
+    {
+        foreach($tokens as $key => $val) {
+            $tokens[$key] = $this->_parse_var_props($val);
+        }
+    }
+
+    /**
+     * compile single variable and section properties token into
+     * PHP code
+     *
+     * @param string $val
+     * @param string $tag_attrs
+     * @return string
+     */
+    function _parse_var_props($val)
+    {
+        $val = trim($val);
+
+        if(preg_match('~^(' . $this->_obj_call_regexp . '|' . $this->_dvar_regexp . ')(' . $this->_mod_regexp . '*)$~', $val, $match)) {
+            // $ variable or object
+            $return = $this->_parse_var($match[1]);
+            $modifiers = $match[2];
+            if (!empty($this->default_modifiers) && !preg_match('~(^|\|)smarty:nodefaults($|\|)~',$modifiers)) {
+                $_default_mod_string = implode('|',(array)$this->default_modifiers);
+                $modifiers = empty($modifiers) ? $_default_mod_string : $_default_mod_string . '|' . $modifiers;
+            }
+            $this->_parse_modifiers($return, $modifiers);
+            return $return;
+        } elseif (preg_match('~^' . $this->_db_qstr_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
+                // double quoted text
+                preg_match('~^(' . $this->_db_qstr_regexp . ')('. $this->_mod_regexp . '*)$~', $val, $match);
+                $return = $this->_expand_quoted_text($match[1]);
+                if($match[2] != '') {
+                    $this->_parse_modifiers($return, $match[2]);
+                }
+                return $return;
+            }
+        elseif(preg_match('~^' . $this->_num_const_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
+                // numerical constant
+                preg_match('~^(' . $this->_num_const_regexp . ')('. $this->_mod_regexp . '*)$~', $val, $match);
+                if($match[2] != '') {
+                    $this->_parse_modifiers($match[1], $match[2]);
+                    return $match[1];
+                }
+            }
+        elseif(preg_match('~^' . $this->_si_qstr_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
+                // single quoted text
+                preg_match('~^(' . $this->_si_qstr_regexp . ')('. $this->_mod_regexp . '*)$~', $val, $match);
+                if($match[2] != '') {
+                    $this->_parse_modifiers($match[1], $match[2]);
+                    return $match[1];
+                }
+            }
+        elseif(preg_match('~^' . $this->_cvar_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
+                // config var
+                return $this->_parse_conf_var($val);
+            }
+        elseif(preg_match('~^' . $this->_svar_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
+                // section var
+                return $this->_parse_section_prop($val);
+            }
+        elseif(!in_array($val, $this->_permitted_tokens) && !is_numeric($val)) {
+            // literal string
+            return $this->_expand_quoted_text('"' . $val .'"');
+        }
+        return $val;
+    }
+
+    /**
+     * expand quoted text with embedded variables
+     *
+     * @param string $var_expr
+     * @return string
+     */
+    function _expand_quoted_text($var_expr)
+    {
+        // if contains unescaped $, expand it
+        if(preg_match_all('~(?:\`(?<!\\\\)\$' . $this->_dvar_guts_regexp . '\`)|(?:(?<!\\\\)\$\w+(\[[a-zA-Z0-9]+\])*)~', $var_expr, $_match)) {
+            $_match = $_match[0];
+            rsort($_match);
+            reset($_match);
+            foreach($_match as $_var) {
+                $var_expr = str_replace ($_var, '".(' . $this->_parse_var(str_replace('`','',$_var)) . ')."', $var_expr);
+            }
+            $_return = preg_replace('~\.""|(?<!\\\\)""\.~', '', $var_expr);
+        } else {
+            $_return = $var_expr;
+        }
+        // replace double quoted literal string with single quotes
+        $_return = preg_replace('~^"([\s\w]+)"$~',"'\\1'",$_return);
+        return $_return;
+    }
+
+    /**
+     * parse variable expression into PHP code
+     *
+     * @param string $var_expr
+     * @param string $output
+     * @return string
+     */
+    function _parse_var($var_expr)
+    {
+        $_has_math = false;
+        $_math_vars = preg_split('~('.$this->_dvar_math_regexp.'|'.$this->_qstr_regexp.')~', $var_expr, -1, PREG_SPLIT_DELIM_CAPTURE);
+
+        if(count($_math_vars) > 1) {
+            $_first_var = "";
+            $_complete_var = "";
+            $_output = "";
+            // simple check if there is any math, to stop recursion (due to modifiers with "xx % yy" as parameter)
+            foreach($_math_vars as $_k => $_math_var) {
+                $_math_var = $_math_vars[$_k];
+
+                if(!empty($_math_var) || is_numeric($_math_var)) {
+                    // hit a math operator, so process the stuff which came before it
+                    if(preg_match('~^' . $this->_dvar_math_regexp . '$~', $_math_var)) {
+                        $_has_math = true;
+                        if(!empty($_complete_var) || is_numeric($_complete_var)) {
+                            $_output .= $this->_parse_var($_complete_var);
+                        }
+
+                        // just output the math operator to php
+                        $_output .= $_math_var;
+
+                        if(empty($_first_var))
+                            $_first_var = $_complete_var;
+
+                        $_complete_var = "";
+                    } else {
+                        $_complete_var .= $_math_var;
+                    }
+                }
+            }
+            if($_has_math) {
+                if(!empty($_complete_var) || is_numeric($_complete_var))
+                    $_output .= $this->_parse_var($_complete_var);
+
+                // get the modifiers working (only the last var from math + modifier is left)
+                $var_expr = $_complete_var;
+            }
+        }
+
+        // prevent cutting of first digit in the number (we _definitly_ got a number if the first char is a digit)
+        if(is_numeric($var_expr{0}))
+            $_var_ref = $var_expr;
+        else
+            $_var_ref = substr($var_expr, 1);
+        
+        if(!$_has_math) {
+            
+            // get [foo] and .foo and ->foo and (...) pieces
+            preg_match_all('~(?:^\w+)|' . $this->_obj_params_regexp . '|(?:' . $this->_var_bracket_regexp . ')|->\$?\w+|\.\$?\w+|\S+~', $_var_ref, $match);
+                        
+            $_indexes = $match[0];
+            $_var_name = array_shift($_indexes);
+
+            /* Handle $smarty.* variable references as a special case. */
+            if ($_var_name == 'smarty') {
+                /*
+                 * If the reference could be compiled, use the compiled output;
+                 * otherwise, fall back on the $smarty variable generated at
+                 * run-time.
+                 */
+                if (($smarty_ref = $this->_compile_smarty_ref($_indexes)) !== null) {
+                    $_output = $smarty_ref;
+                } else {
+                    $_var_name = substr(array_shift($_indexes), 1);
+                    $_output = "\$this->_smarty_vars['$_var_name']";
+                }
+            } elseif(is_numeric($_var_name) && is_numeric($var_expr{0})) {
+                // because . is the operator for accessing arrays thru inidizes we need to put it together again for floating point numbers
+                if(count($_indexes) > 0)
+                {
+                    $_var_name .= implode("", $_indexes);
+                    $_indexes = array();
+                }
+                $_output = $_var_name;
+            } else {
+                $_output = "\$this->_tpl_vars['$_var_name']";
+            }
+
+            foreach ($_indexes as $_index) {
+                if ($_index{0} == '[') {
+                    $_index = substr($_index, 1, -1);
+                    if (is_numeric($_index)) {
+                        $_output .= "[$_index]";
+                    } elseif ($_index{0} == '$') {
+                        if (strpos($_index, '.') !== false) {
+                            $_output .= '[' . $this->_parse_var($_index) . ']';
+                        } else {
+                            $_output .= "[\$this->_tpl_vars['" . substr($_index, 1) . "']]";
+                        }
+                    } else {
+                        $_var_parts = explode('.', $_index);
+                        $_var_section = $_var_parts[0];
+                        $_var_section_prop = isset($_var_parts[1]) ? $_var_parts[1] : 'index';
+                        $_output .= "[\$this->_sections['$_var_section']['$_var_section_prop']]";
+                    }
+                } else if ($_index{0} == '.') {
+                    if ($_index{1} == '$')
+                        $_output .= "[\$this->_tpl_vars['" . substr($_index, 2) . "']]";
+                    else
+                        $_output .= "['" . substr($_index, 1) . "']";
+                } else if (substr($_index,0,2) == '->') {
+                    if(substr($_index,2,2) == '__') {
+                        $this->_syntax_error('call to internal object members is not allowed', E_USER_ERROR, __FILE__, __LINE__);
+                    } elseif($this->security && substr($_index, 2, 1) == '_') {
+                        $this->_syntax_error('(secure) call to private object member is not allowed', E_USER_ERROR, __FILE__, __LINE__);
+                    } elseif ($_index{2} == '$') {
+                        if ($this->security) {
+                            $this->_syntax_error('(secure) call to dynamic object member is not allowed', E_USER_ERROR, __FILE__, __LINE__);
+                        } else {
+                            $_output .= '->{(($_var=$this->_tpl_vars[\''.substr($_index,3).'\']) && substr($_var,0,2)!=\'__\') ? $_var : $this->trigger_error("cannot access property \\"$_var\\"")}';
+                        }
+                    } else {
+                        $_output .= $_index;
+                    }
+                } elseif ($_index{0} == '(') {
+                    $_index = $this->_parse_parenth_args($_index);
+                    $_output .= $_index;
+                } else {
+                    $_output .= $_index;
+                }
+            }
+        }
+
+        return $_output;
+    }
+
+    /**
+     * parse arguments in function call parenthesis
+     *
+     * @param string $parenth_args
+     * @return string
+     */
+    function _parse_parenth_args($parenth_args)
+    {
+        preg_match_all('~' . $this->_param_regexp . '~',$parenth_args, $match);
+        $orig_vals = $match = $match[0];
+        $this->_parse_vars_props($match);
+        $replace = array();
+        for ($i = 0, $count = count($match); $i < $count; $i++) {
+            $replace[$orig_vals[$i]] = $match[$i];
+        }
+        return strtr($parenth_args, $replace);
+    }
+
+    /**
+     * parse configuration variable expression into PHP code
+     *
+     * @param string $conf_var_expr
+     */
+    function _parse_conf_var($conf_var_expr)
+    {
+        $parts = explode('|', $conf_var_expr, 2);
+        $var_ref = $parts[0];
+        $modifiers = isset($parts[1]) ? $parts[1] : '';
+
+        $var_name = substr($var_ref, 1, -1);
+
+        $output = "\$this->_config[0]['vars']['$var_name']";
+
+        $this->_parse_modifiers($output, $modifiers);
+
+        return $output;
+    }
+
+    /**
+     * parse section property expression into PHP code
+     *
+     * @param string $section_prop_expr
+     * @return string
+     */
+    function _parse_section_prop($section_prop_expr)
+    {
+        $parts = explode('|', $section_prop_expr, 2);
+        $var_ref = $parts[0];
+        $modifiers = isset($parts[1]) ? $parts[1] : '';
+
+        preg_match('!%(\w+)\.(\w+)%!', $var_ref, $match);
+        $section_name = $match[1];
+        $prop_name = $match[2];
+
+        $output = "\$this->_sections['$section_name']['$prop_name']";
+
+        $this->_parse_modifiers($output, $modifiers);
+
+        return $output;
+    }
+
+
+    /**
+     * parse modifier chain into PHP code
+     *
+     * sets $output to parsed modified chain
+     * @param string $output
+     * @param string $modifier_string
+     */
+    function _parse_modifiers(&$output, $modifier_string)
+    {
+        preg_match_all('~\|(@?\w+)((?>:(?:'. $this->_qstr_regexp . '|[^|]+))*)~', '|' . $modifier_string, $_match);
+        list(, $_modifiers, $modifier_arg_strings) = $_match;
+
+        for ($_i = 0, $_for_max = count($_modifiers); $_i < $_for_max; $_i++) {
+            $_modifier_name = $_modifiers[$_i];
+
+            if($_modifier_name == 'smarty') {
+                // skip smarty modifier
+                continue;
+            }
+
+            preg_match_all('~:(' . $this->_qstr_regexp . '|[^:]+)~', $modifier_arg_strings[$_i], $_match);
+            $_modifier_args = $_match[1];
+
+            if ($_modifier_name{0} == '@') {
+                $_map_array = false;
+                $_modifier_name = substr($_modifier_name, 1);
+            } else {
+                $_map_array = true;
+            }
+
+            if (empty($this->_plugins['modifier'][$_modifier_name])
+                && !$this->_get_plugin_filepath('modifier', $_modifier_name)
+                && function_exists($_modifier_name)) {
+                if ($this->security && !in_array($_modifier_name, $this->security_settings['MODIFIER_FUNCS'])) {
+                    $this->_trigger_fatal_error("[plugin] (secure mode) modifier '$_modifier_name' is not allowed" , $this->_current_file, $this->_current_line_no, __FILE__, __LINE__);
+                } else {
+                    $this->_plugins['modifier'][$_modifier_name] = array($_modifier_name,  null, null, false);
+                }
+            }
+            $this->_add_plugin('modifier', $_modifier_name);
+
+            $this->_parse_vars_props($_modifier_args);
+
+            if($_modifier_name == 'default') {
+                // supress notifications of default modifier vars and args
+                if($output{0} == '$') {
+                    $output = '@' . $output;
+                }
+                if(isset($_modifier_args[0]) && $_modifier_args[0]{0} == '$') {
+                    $_modifier_args[0] = '@' . $_modifier_args[0];
+                }
+            }
+            if (count($_modifier_args) > 0)
+                $_modifier_args = ', '.implode(', ', $_modifier_args);
+            else
+                $_modifier_args = '';
+
+            if ($_map_array) {
+                $output = "((is_array(\$_tmp=$output)) ? \$this->_run_mod_handler('$_modifier_name', true, \$_tmp$_modifier_args) : " . $this->_compile_plugin_call('modifier', $_modifier_name) . "(\$_tmp$_modifier_args))";
+
+            } else {
+
+                $output = $this->_compile_plugin_call('modifier', $_modifier_name)."($output$_modifier_args)";
+
+            }
+        }
+    }
+
+
+    /**
+     * add plugin
+     *
+     * @param string $type
+     * @param string $name
+     * @param boolean? $delayed_loading
+     */
+    function _add_plugin($type, $name, $delayed_loading = null)
+    {
+        if (!isset($this->_plugin_info[$type])) {
+            $this->_plugin_info[$type] = array();
+        }
+        if (!isset($this->_plugin_info[$type][$name])) {
+            $this->_plugin_info[$type][$name] = array($this->_current_file,
+                                                      $this->_current_line_no,
+                                                      $delayed_loading);
+        }
+    }
+
+
+    /**
+     * Compiles references of type $smarty.foo
+     *
+     * @param string $indexes
+     * @return string
+     */
+    function _compile_smarty_ref(&$indexes)
+    {
+        /* Extract the reference name. */
+        $_ref = substr($indexes[0], 1);
+        foreach($indexes as $_index_no=>$_index) {
+            if ($_index{0} != '.' && $_index_no<2 || !preg_match('~^(\.|\[|->)~', $_index)) {
+                $this->_syntax_error('$smarty' . implode('', array_slice($indexes, 0, 2)) . ' is an invalid reference', E_USER_ERROR, __FILE__, __LINE__);
+            }
+        }
+
+        switch ($_ref) {
+            case 'now':
+                $compiled_ref = 'time()';
+                $_max_index = 1;
+                break;
+
+            case 'foreach':
+            case 'section':
+                array_shift($indexes);
+                $_var = $this->_parse_var_props(substr($indexes[0], 1));
+                if ($_ref == 'foreach')
+                    $compiled_ref = "\$this->_foreach[$_var]";
+                else
+                    $compiled_ref = "\$this->_sections[$_var]";
+                break;
+
+            case 'get':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_GET' : "\$GLOBALS['HTTP_GET_VARS']";
+                break;
+
+            case 'post':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_POST' : "\$GLOBALS['HTTP_POST_VARS']";
+                break;
+
+            case 'cookies':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_COOKIE' : "\$GLOBALS['HTTP_COOKIE_VARS']";
+                break;
+
+            case 'env':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_ENV' : "\$GLOBALS['HTTP_ENV_VARS']";
+                break;
+
+            case 'server':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_SERVER' : "\$GLOBALS['HTTP_SERVER_VARS']";
+                break;
+
+            case 'session':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_SESSION' : "\$GLOBALS['HTTP_SESSION_VARS']";
+                break;
+
+            /*
+             * These cases are handled either at run-time or elsewhere in the
+             * compiler.
+             */
+            case 'request':
+                if ($this->request_use_auto_globals) {
+                    $compiled_ref = '$_REQUEST';
+                    break;
+                } else {
+                    $this->_init_smarty_vars = true;
+                }
+                return null;
+
+            case 'capture':
+                return null;
+
+            case 'template':
+                $compiled_ref = "'$this->_current_file'";
+                $_max_index = 1;
+                break;
+
+            case 'version':
+                $compiled_ref = "'$this->_version'";
+                $_max_index = 1;
+                break;
+
+            case 'const':
+                if ($this->security && !$this->security_settings['ALLOW_CONSTANTS']) {
+                    $this->_syntax_error("(secure mode) constants not permitted",
+                                         E_USER_WARNING, __FILE__, __LINE__);
+                    return;
+                }
+                array_shift($indexes);
+                $_val = $this->_parse_var_props(substr($indexes[0],1));
+                $compiled_ref = '@constant(' . $_val . ')';
+                $_max_index = 1;
+                break;
+
+            case 'config':
+                $compiled_ref = "\$this->_config[0]['vars']";
+                $_max_index = 3;
+                break;
+
+            case 'ldelim':
+                $compiled_ref = "'$this->left_delimiter'";
+                break;
+
+            case 'rdelim':
+                $compiled_ref = "'$this->right_delimiter'";
+                break;
+                
+            default:
+                $this->_syntax_error('$smarty.' . $_ref . ' is an unknown reference', E_USER_ERROR, __FILE__, __LINE__);
+                break;
+        }
+
+        if (isset($_max_index) && count($indexes) > $_max_index) {
+            $this->_syntax_error('$smarty' . implode('', $indexes) .' is an invalid reference', E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        array_shift($indexes);
+        return $compiled_ref;
+    }
+
+    /**
+     * compiles call to plugin of type $type with name $name
+     * returns a string containing the function-name or method call
+     * without the paramter-list that would have follow to make the
+     * call valid php-syntax
+     *
+     * @param string $type
+     * @param string $name
+     * @return string
+     */
+    function _compile_plugin_call($type, $name) {
+        if (isset($this->_plugins[$type][$name])) {
+            /* plugin loaded */
+            if (is_array($this->_plugins[$type][$name][0])) {
+                return ((is_object($this->_plugins[$type][$name][0][0])) ?
+                        "\$this->_plugins['$type']['$name'][0][0]->"    /* method callback */
+                        : (string)($this->_plugins[$type][$name][0][0]).'::'    /* class callback */
+                       ). $this->_plugins[$type][$name][0][1];
+
+            } else {
+                /* function callback */
+                return $this->_plugins[$type][$name][0];
+
+            }
+        } else {
+            /* plugin not loaded -> auto-loadable-plugin */
+            return 'smarty_'.$type.'_'.$name;
+
+        }
+    }
+
+    /**
+     * load pre- and post-filters
+     */
+    function _load_filters()
+    {
+        if (count($this->_plugins['prefilter']) > 0) {
+            foreach ($this->_plugins['prefilter'] as $filter_name => $prefilter) {
+                if ($prefilter === false) {
+                    unset($this->_plugins['prefilter'][$filter_name]);
+                    $_params = array('plugins' => array(array('prefilter', $filter_name, null, null, false)));
+                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_plugins.php');
+                    smarty_core_load_plugins($_params, $this);
+                }
+            }
+        }
+        if (count($this->_plugins['postfilter']) > 0) {
+            foreach ($this->_plugins['postfilter'] as $filter_name => $postfilter) {
+                if ($postfilter === false) {
+                    unset($this->_plugins['postfilter'][$filter_name]);
+                    $_params = array('plugins' => array(array('postfilter', $filter_name, null, null, false)));
+                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_plugins.php');
+                    smarty_core_load_plugins($_params, $this);
+                }
+            }
+        }
+    }
+
+
+    /**
+     * Quote subpattern references
+     *
+     * @param string $string
+     * @return string
+     */
+    function _quote_replace($string)
+    {
+        return strtr($string, array('\\' => '\\\\', '$' => '\\$'));
+    }
+
+    /**
+     * display Smarty syntax error
+     *
+     * @param string $error_msg
+     * @param integer $error_type
+     * @param string $file
+     * @param integer $line
+     */
+    function _syntax_error($error_msg, $error_type = E_USER_ERROR, $file=null, $line=null)
+    {
+        $this->_trigger_fatal_error("syntax error: $error_msg", $this->_current_file, $this->_current_line_no, $file, $line, $error_type);
+    }
+
+
+    /**
+     * check if the compilation changes from cacheable to
+     * non-cacheable state with the beginning of the current
+     * plugin. return php-code to reflect the transition.
+     * @return string
+     */
+    function _push_cacheable_state($type, $name) {
+        $_cacheable = !isset($this->_plugins[$type][$name]) || $this->_plugins[$type][$name][4];
+        if ($_cacheable
+            || 0<$this->_cacheable_state++) return '';
+        if (!isset($this->_cache_serial)) $this->_cache_serial = md5(uniqid('Smarty'));
+        $_ret = 'if ($this->caching) { echo \'{nocache:'
+            . $this->_cache_serial . '#' . $this->_nocache_count
+            . '}\';}';
+        return $_ret;
+    }
+
+
+    /**
+     * check if the compilation changes from non-cacheable to
+     * cacheable state with the end of the current plugin return
+     * php-code to reflect the transition.
+     * @return string
+     */
+    function _pop_cacheable_state($type, $name) {
+        $_cacheable = !isset($this->_plugins[$type][$name]) || $this->_plugins[$type][$name][4];
+        if ($_cacheable
+            || --$this->_cacheable_state>0) return '';
+        return 'if ($this->caching) { echo \'{/nocache:'
+            . $this->_cache_serial . '#' . ($this->_nocache_count++)
+            . '}\';}';
+    }
+
+
+    /**
+     * push opening tag-name, file-name and line-number on the tag-stack
+     * @param string the opening tag's name
+     */
+    function _push_tag($open_tag)
+    {
+        array_push($this->_tag_stack, array($open_tag, $this->_current_line_no));
+    }
+
+    /**
+     * pop closing tag-name
+     * raise an error if this stack-top doesn't match with the closing tag
+     * @param string the closing tag's name
+     * @return string the opening tag's name
+     */
+    function _pop_tag($close_tag)
+    {
+        $message = '';
+        if (count($this->_tag_stack)>0) {
+            list($_open_tag, $_line_no) = array_pop($this->_tag_stack);
+            if ($close_tag == $_open_tag) {
+                return $_open_tag;
+            }
+            if ($close_tag == 'if' && ($_open_tag == 'else' || $_open_tag == 'elseif' )) {
+                return $this->_pop_tag($close_tag);
+            }
+            if ($close_tag == 'section' && $_open_tag == 'sectionelse') {
+                $this->_pop_tag($close_tag);
+                return $_open_tag;
+            }
+            if ($close_tag == 'foreach' && $_open_tag == 'foreachelse') {
+                $this->_pop_tag($close_tag);
+                return $_open_tag;
+            }
+            if ($_open_tag == 'else' || $_open_tag == 'elseif') {
+                $_open_tag = 'if';
+            } elseif ($_open_tag == 'sectionelse') {
+                $_open_tag = 'section';
+            } elseif ($_open_tag == 'foreachelse') {
+                $_open_tag = 'foreach';
+            }
+            $message = " expected {/$_open_tag} (opened line $_line_no).";
+        }
+        $this->_syntax_error("mismatched tag {/$close_tag}.$message",
+                             E_USER_ERROR, __FILE__, __LINE__);
+    }
+
+}
+
+/**
+ * compare to values by their string length
+ *
+ * @access private
+ * @param string $a
+ * @param string $b
+ * @return 0|-1|1
+ */
+function _smarty_sort_length($a, $b)
+{
+    if($a == $b)
+        return 0;
+
+    if(strlen($a) == strlen($b))
+        return ($a > $b) ? -1 : 1;
+
+    return (strlen($a) > strlen($b)) ? -1 : 1;
+}
+
+
+/* vim: set et: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/Smarty_Compiler.class.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/configs/test.conf
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/configs/test.conf	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/configs/test.conf	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,5 @@
+title = Welcome to Smarty!
+cutoff_size = 40
+
+[setup]
+bold = true

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.assemble_plugin_filepath.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.assemble_plugin_filepath.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.assemble_plugin_filepath.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,67 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * assemble filepath of requested plugin
+ *
+ * @param string $type
+ * @param string $name
+ * @return string|false
+ */
+function smarty_core_assemble_plugin_filepath($params, &$smarty)
+{
+    static $_filepaths_cache = array();
+
+    $_plugin_filename = $params['type'] . '.' . $params['name'] . '.php';
+    if (isset($_filepaths_cache[$_plugin_filename])) {
+        return $_filepaths_cache[$_plugin_filename];
+    }
+    $_return = false;
+
+    foreach ((array)$smarty->plugins_dir as $_plugin_dir) {
+
+        $_plugin_filepath = $_plugin_dir . DIRECTORY_SEPARATOR . $_plugin_filename;
+
+        // see if path is relative
+        if (!preg_match("/^([\/\\\\]|[a-zA-Z]:[\/\\\\])/", $_plugin_dir)) {
+            $_relative_paths[] = $_plugin_dir;
+            // relative path, see if it is in the SMARTY_DIR
+            if (@is_readable(SMARTY_DIR . $_plugin_filepath)) {
+                $_return = SMARTY_DIR . $_plugin_filepath;
+                break;
+            }
+        }
+        // try relative to cwd (or absolute)
+        if (@is_readable($_plugin_filepath)) {
+            $_return = $_plugin_filepath;
+            break;
+        }
+    }
+
+    if($_return === false) {
+        // still not found, try PHP include_path
+        if(isset($_relative_paths)) {
+            foreach ((array)$_relative_paths as $_plugin_dir) {
+
+                $_plugin_filepath = $_plugin_dir . DIRECTORY_SEPARATOR . $_plugin_filename;
+
+                $_params = array('file_path' => $_plugin_filepath);
+                require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_include_path.php');
+                if(smarty_core_get_include_path($_params, $smarty)) {
+                    $_return = $_params['new_file_path'];
+                    break;
+                }
+            }
+        }
+    }
+    $_filepaths_cache[$_plugin_filename] = $_return;
+    return $_return;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.assemble_plugin_filepath.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.assign_smarty_interface.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.assign_smarty_interface.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.assign_smarty_interface.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,43 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty assign_smarty_interface core plugin
+ *
+ * Type:     core<br>
+ * Name:     assign_smarty_interface<br>
+ * Purpose:  assign the $smarty interface variable
+ * @param array Format: null
+ * @param Smarty
+ */
+function smarty_core_assign_smarty_interface($params, &$smarty)
+{
+        if (isset($smarty->_smarty_vars) && isset($smarty->_smarty_vars['request'])) {
+            return;
+        }
+
+        $_globals_map = array('g'  => 'HTTP_GET_VARS',
+                             'p'  => 'HTTP_POST_VARS',
+                             'c'  => 'HTTP_COOKIE_VARS',
+                             's'  => 'HTTP_SERVER_VARS',
+                             'e'  => 'HTTP_ENV_VARS');
+
+        $_smarty_vars_request  = array();
+
+        foreach (preg_split('!!', strtolower($smarty->request_vars_order)) as $_c) {
+            if (isset($_globals_map[$_c])) {
+                $_smarty_vars_request = array_merge($_smarty_vars_request, $GLOBALS[$_globals_map[$_c]]);
+            }
+        }
+        $_smarty_vars_request = @array_merge($_smarty_vars_request, $GLOBALS['HTTP_SESSION_VARS']);
+
+        $smarty->_smarty_vars['request'] = $_smarty_vars_request;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.assign_smarty_interface.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.create_dir_structure.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.create_dir_structure.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.create_dir_structure.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,79 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * create full directory structure
+ *
+ * @param string $dir
+ */
+
+// $dir
+
+function smarty_core_create_dir_structure($params, &$smarty)
+{
+    if (!file_exists($params['dir'])) {
+        $_open_basedir_ini = ini_get('open_basedir');
+
+        if (DIRECTORY_SEPARATOR=='/') {
+            /* unix-style paths */
+            $_dir = $params['dir'];
+            $_dir_parts = preg_split('!/+!', $_dir, -1, PREG_SPLIT_NO_EMPTY);
+            $_new_dir = ($_dir{0}=='/') ? '/' : getcwd().'/';
+            if($_use_open_basedir = !empty($_open_basedir_ini)) {
+                $_open_basedirs = explode(':', $_open_basedir_ini);
+            }
+
+        } else {
+            /* other-style paths */
+            $_dir = str_replace('\\','/', $params['dir']);
+            $_dir_parts = preg_split('!/+!', $_dir, -1, PREG_SPLIT_NO_EMPTY);
+            if (preg_match('!^((//)|([a-zA-Z]:/))!', $_dir, $_root_dir)) {
+                /* leading "//" for network volume, or "[letter]:/" for full path */
+                $_new_dir = $_root_dir[1];
+                /* remove drive-letter from _dir_parts */
+                if (isset($_root_dir[3])) array_shift($_dir_parts);
+
+            } else {
+                $_new_dir = str_replace('\\', '/', getcwd()).'/';
+
+            }
+
+            if($_use_open_basedir = !empty($_open_basedir_ini)) {
+                $_open_basedirs = explode(';', str_replace('\\', '/', $_open_basedir_ini));
+            }
+
+        }
+
+        /* all paths use "/" only from here */
+        foreach ($_dir_parts as $_dir_part) {
+            $_new_dir .= $_dir_part;
+
+            if ($_use_open_basedir) {
+                // do not attempt to test or make directories outside of open_basedir
+                $_make_new_dir = false;
+                foreach ($_open_basedirs as $_open_basedir) {
+                    if (substr($_new_dir, 0, strlen($_open_basedir)) == $_open_basedir) {
+                        $_make_new_dir = true;
+                        break;
+                    }
+                }
+            } else {
+                $_make_new_dir = true;
+            }
+
+            if ($_make_new_dir && !file_exists($_new_dir) && !@mkdir($_new_dir, $smarty->_dir_perms) && !is_dir($_new_dir)) {
+                $smarty->trigger_error("problem creating directory '" . $_new_dir . "'");
+                return false;
+            }
+            $_new_dir .= '/';
+        }
+    }
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.create_dir_structure.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.display_debug_console.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.display_debug_console.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.display_debug_console.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,61 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty debug_console function plugin
+ *
+ * Type:     core<br>
+ * Name:     display_debug_console<br>
+ * Purpose:  display the javascript debug console window
+ * @param array Format: null
+ * @param Smarty
+ */
+function smarty_core_display_debug_console($params, &$smarty)
+{
+    // we must force compile the debug template in case the environment
+    // changed between separate applications.
+
+    if(empty($smarty->debug_tpl)) {
+        // set path to debug template from SMARTY_DIR
+        $smarty->debug_tpl = SMARTY_DIR . 'debug.tpl';
+        if($smarty->security && is_file($smarty->debug_tpl)) {
+            $smarty->secure_dir[] = dirname(realpath($smarty->debug_tpl));
+        }
+        $smarty->debug_tpl = 'file:' . SMARTY_DIR . 'debug.tpl';
+    }
+
+    $_ldelim_orig = $smarty->left_delimiter;
+    $_rdelim_orig = $smarty->right_delimiter;
+
+    $smarty->left_delimiter = '{';
+    $smarty->right_delimiter = '}';
+
+    $_compile_id_orig = $smarty->_compile_id;
+    $smarty->_compile_id = null;
+
+    $_compile_path = $smarty->_get_compile_path($smarty->debug_tpl);
+    if ($smarty->_compile_resource($smarty->debug_tpl, $_compile_path))
+    {
+        ob_start();
+        $smarty->_include($_compile_path);
+        $_results = ob_get_contents();
+        ob_end_clean();
+    } else {
+        $_results = '';
+    }
+
+    $smarty->_compile_id = $_compile_id_orig;
+
+    $smarty->left_delimiter = $_ldelim_orig;
+    $smarty->right_delimiter = $_rdelim_orig;
+
+    return $_results;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.display_debug_console.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.get_include_path.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.get_include_path.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.get_include_path.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,44 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Get path to file from include_path
+ *
+ * @param string $file_path
+ * @param string $new_file_path
+ * @return boolean
+ * @staticvar array|null
+ */
+
+//  $file_path, &$new_file_path
+
+function smarty_core_get_include_path(&$params, &$smarty)
+{
+    static $_path_array = null;
+
+    if(!isset($_path_array)) {
+        $_ini_include_path = ini_get('include_path');
+
+        if(strstr($_ini_include_path,';')) {
+            // windows pathnames
+            $_path_array = explode(';',$_ini_include_path);
+        } else {
+            $_path_array = explode(':',$_ini_include_path);
+        }
+    }
+    foreach ($_path_array as $_include_path) {
+        if (@is_readable($_include_path . DIRECTORY_SEPARATOR . $params['file_path'])) {
+               $params['new_file_path'] = $_include_path . DIRECTORY_SEPARATOR . $params['file_path'];
+            return true;
+        }
+    }
+    return false;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.get_include_path.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.get_microtime.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.get_microtime.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.get_microtime.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,23 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Get seconds and microseconds
+ * @return double
+ */
+function smarty_core_get_microtime($params, &$smarty)
+{
+    $mtime = microtime();
+    $mtime = explode(" ", $mtime);
+    $mtime = (double)($mtime[1]) + (double)($mtime[0]);
+    return ($mtime);
+}
+
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.get_microtime.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.get_php_resource.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.get_php_resource.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.get_php_resource.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,80 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Retrieves PHP script resource
+ *
+ * sets $php_resource to the returned resource
+ * @param string $resource
+ * @param string $resource_type
+ * @param  $php_resource
+ * @return boolean
+ */
+
+function smarty_core_get_php_resource(&$params, &$smarty)
+{
+
+    $params['resource_base_path'] = $smarty->trusted_dir;
+    $smarty->_parse_resource_name($params, $smarty);
+
+    /*
+     * Find out if the resource exists.
+     */
+
+    if ($params['resource_type'] == 'file') {
+        $_readable = false;
+        if(file_exists($params['resource_name']) && is_readable($params['resource_name'])) {
+            $_readable = true;
+        } else {
+            // test for file in include_path
+            $_params = array('file_path' => $params['resource_name']);
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_include_path.php');
+            if(smarty_core_get_include_path($_params, $smarty)) {
+                $_include_path = $_params['new_file_path'];
+                $_readable = true;
+            }
+        }
+    } else if ($params['resource_type'] != 'file') {
+        $_template_source = null;
+        $_readable = is_callable($smarty->_plugins['resource'][$params['resource_type']][0][0])
+            && call_user_func_array($smarty->_plugins['resource'][$params['resource_type']][0][0],
+                                    array($params['resource_name'], &$_template_source, &$smarty));
+    }
+
+    /*
+     * Set the error function, depending on which class calls us.
+     */
+    if (method_exists($smarty, '_syntax_error')) {
+        $_error_funcc = '_syntax_error';
+    } else {
+        $_error_funcc = 'trigger_error';
+    }
+
+    if ($_readable) {
+        if ($smarty->security) {
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.is_trusted.php');
+            if (!smarty_core_is_trusted($params, $smarty)) {
+                $smarty->$_error_funcc('(secure mode) ' . $params['resource_type'] . ':' . $params['resource_name'] . ' is not trusted');
+                return false;
+            }
+        }
+    } else {
+        $smarty->$_error_funcc($params['resource_type'] . ':' . $params['resource_name'] . ' is not readable');
+        return false;
+    }
+
+    if ($params['resource_type'] == 'file') {
+        $params['php_resource'] = $params['resource_name'];
+    } else {
+        $params['php_resource'] = $_template_source;
+    }
+    return true;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.get_php_resource.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.is_secure.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.is_secure.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.is_secure.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,56 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * determines if a resource is secure or not.
+ *
+ * @param string $resource_type
+ * @param string $resource_name
+ * @return boolean
+ */
+
+//  $resource_type, $resource_name
+
+function smarty_core_is_secure($params, &$smarty)
+{
+    if (!$smarty->security || $smarty->security_settings['INCLUDE_ANY']) {
+        return true;
+    }
+
+    if ($params['resource_type'] == 'file') {
+        $_rp = realpath($params['resource_name']);
+        if (isset($params['resource_base_path'])) {
+            foreach ((array)$params['resource_base_path'] as $curr_dir) {
+                if ( ($_cd = realpath($curr_dir)) !== false &&
+                     strncmp($_rp, $_cd, strlen($_cd)) == 0 &&
+                     $_rp{strlen($_cd)} == DIRECTORY_SEPARATOR ) {
+                    return true;
+                }
+            }
+        }
+        if (!empty($smarty->secure_dir)) {
+            foreach ((array)$smarty->secure_dir as $curr_dir) {
+                if ( ($_cd = realpath($curr_dir)) !== false &&
+                     strncmp($_rp, $_cd, strlen($_cd)) == 0 &&
+                     $_rp{strlen($_cd)} == DIRECTORY_SEPARATOR ) {
+                    return true;
+                }            
+            }
+        }
+    } else {
+        // resource is not on local file system
+        return call_user_func_array(
+            $smarty->_plugins['resource'][$params['resource_type']][0][2],
+            array($params['resource_name'], &$smarty));
+    }
+
+    return false;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.is_secure.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.is_trusted.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.is_trusted.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.is_trusted.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,47 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * determines if a resource is trusted or not
+ *
+ * @param string $resource_type
+ * @param string $resource_name
+ * @return boolean
+ */
+
+ // $resource_type, $resource_name
+
+function smarty_core_is_trusted($params, &$smarty)
+{
+    $_smarty_trusted = false;
+    if ($params['resource_type'] == 'file') {
+        if (!empty($smarty->trusted_dir)) {
+            $_rp = realpath($params['resource_name']);
+            foreach ((array)$smarty->trusted_dir as $curr_dir) {
+                if (!empty($curr_dir) && is_readable ($curr_dir)) {
+                    $_cd = realpath($curr_dir);
+                    if (strncmp($_rp, $_cd, strlen($_cd)) == 0
+                        && $_rp{strlen($_cd)} == DIRECTORY_SEPARATOR ) {
+                        $_smarty_trusted = true;
+                        break;
+                    }
+                }
+            }
+        }
+
+    } else {
+        // resource is not on local file system
+        $_smarty_trusted = call_user_func_array($smarty->_plugins['resource'][$params['resource_type']][0][3],
+                                                array($params['resource_name'], $smarty));
+    }
+
+    return $_smarty_trusted;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.is_trusted.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.load_plugins.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.load_plugins.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.load_plugins.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,125 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Load requested plugins
+ *
+ * @param array $plugins
+ */
+
+// $plugins
+
+function smarty_core_load_plugins($params, &$smarty)
+{
+
+    foreach ($params['plugins'] as $_plugin_info) {
+        list($_type, $_name, $_tpl_file, $_tpl_line, $_delayed_loading) = $_plugin_info;
+        $_plugin = &$smarty->_plugins[$_type][$_name];
+
+        /*
+         * We do not load plugin more than once for each instance of Smarty.
+         * The following code checks for that. The plugin can also be
+         * registered dynamically at runtime, in which case template file
+         * and line number will be unknown, so we fill them in.
+         *
+         * The final element of the info array is a flag that indicates
+         * whether the dynamically registered plugin function has been
+         * checked for existence yet or not.
+         */
+        if (isset($_plugin)) {
+            if (empty($_plugin[3])) {
+                if (!is_callable($_plugin[0])) {
+                    $smarty->_trigger_fatal_error("[plugin] $_type '$_name' is not implemented", $_tpl_file, $_tpl_line, __FILE__, __LINE__);
+                } else {
+                    $_plugin[1] = $_tpl_file;
+                    $_plugin[2] = $_tpl_line;
+                    $_plugin[3] = true;
+                    if (!isset($_plugin[4])) $_plugin[4] = true; /* cacheable */
+                }
+            }
+            continue;
+        } else if ($_type == 'insert') {
+            /*
+             * For backwards compatibility, we check for insert functions in
+             * the symbol table before trying to load them as a plugin.
+             */
+            $_plugin_func = 'insert_' . $_name;
+            if (function_exists($_plugin_func)) {
+                $_plugin = array($_plugin_func, $_tpl_file, $_tpl_line, true, false);
+                continue;
+            }
+        }
+
+        $_plugin_file = $smarty->_get_plugin_filepath($_type, $_name);
+
+        if (! $_found = ($_plugin_file != false)) {
+            $_message = "could not load plugin file '$_type.$_name.php'\n";
+        }
+
+        /*
+         * If plugin file is found, it -must- provide the properly named
+         * plugin function. In case it doesn't, simply output the error and
+         * do not fall back on any other method.
+         */
+        if ($_found) {
+            include_once $_plugin_file;
+
+            $_plugin_func = 'smarty_' . $_type . '_' . $_name;
+            if (!function_exists($_plugin_func)) {
+                $smarty->_trigger_fatal_error("[plugin] function $_plugin_func() not found in $_plugin_file", $_tpl_file, $_tpl_line, __FILE__, __LINE__);
+                continue;
+            }
+        }
+        /*
+         * In case of insert plugins, their code may be loaded later via
+         * 'script' attribute.
+         */
+        else if ($_type == 'insert' && $_delayed_loading) {
+            $_plugin_func = 'smarty_' . $_type . '_' . $_name;
+            $_found = true;
+        }
+
+        /*
+         * Plugin specific processing and error checking.
+         */
+        if (!$_found) {
+            if ($_type == 'modifier') {
+                /*
+                 * In case modifier falls back on using PHP functions
+                 * directly, we only allow those specified in the security
+                 * context.
+                 */
+                if ($smarty->security && !in_array($_name, $smarty->security_settings['MODIFIER_FUNCS'])) {
+                    $_message = "(secure mode) modifier '$_name' is not allowed";
+                } else {
+                    if (!function_exists($_name)) {
+                        $_message = "modifier '$_name' is not implemented";
+                    } else {
+                        $_plugin_func = $_name;
+                        $_found = true;
+                    }
+                }
+            } else if ($_type == 'function') {
+                /*
+                 * This is a catch-all situation.
+                 */
+                $_message = "unknown tag - '$_name'";
+            }
+        }
+
+        if ($_found) {
+            $smarty->_plugins[$_type][$_name] = array($_plugin_func, $_tpl_file, $_tpl_line, true, true);
+        } else {
+            // output error
+            $smarty->_trigger_fatal_error('[plugin] ' . $_message, $_tpl_file, $_tpl_line, __FILE__, __LINE__);
+        }
+    }
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.load_plugins.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.load_resource_plugin.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.load_resource_plugin.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.load_resource_plugin.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,74 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * load a resource plugin
+ *
+ * @param string $type
+ */
+
+// $type
+
+function smarty_core_load_resource_plugin($params, &$smarty)
+{
+    /*
+     * Resource plugins are not quite like the other ones, so they are
+     * handled differently. The first element of plugin info is the array of
+     * functions provided by the plugin, the second one indicates whether
+     * all of them exist or not.
+     */
+
+    $_plugin = &$smarty->_plugins['resource'][$params['type']];
+    if (isset($_plugin)) {
+        if (!$_plugin[1] && count($_plugin[0])) {
+            $_plugin[1] = true;
+            foreach ($_plugin[0] as $_plugin_func) {
+                if (!is_callable($_plugin_func)) {
+                    $_plugin[1] = false;
+                    break;
+                }
+            }
+        }
+
+        if (!$_plugin[1]) {
+            $smarty->_trigger_fatal_error("[plugin] resource '" . $params['type'] . "' is not implemented", null, null, __FILE__, __LINE__);
+        }
+
+        return;
+    }
+
+    $_plugin_file = $smarty->_get_plugin_filepath('resource', $params['type']);
+    $_found = ($_plugin_file != false);
+
+    if ($_found) {            /*
+         * If the plugin file is found, it -must- provide the properly named
+         * plugin functions.
+         */
+        include_once($_plugin_file);
+
+        /*
+         * Locate functions that we require the plugin to provide.
+         */
+        $_resource_ops = array('source', 'timestamp', 'secure', 'trusted');
+        $_resource_funcs = array();
+        foreach ($_resource_ops as $_op) {
+            $_plugin_func = 'smarty_resource_' . $params['type'] . '_' . $_op;
+            if (!function_exists($_plugin_func)) {
+                $smarty->_trigger_fatal_error("[plugin] function $_plugin_func() not found in $_plugin_file", null, null, __FILE__, __LINE__);
+                return;
+            } else {
+                $_resource_funcs[] = $_plugin_func;
+            }
+        }
+
+        $smarty->_plugins['resource'][$params['type']] = array($_resource_funcs, true);
+    }
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.load_resource_plugin.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.process_cached_inserts.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.process_cached_inserts.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.process_cached_inserts.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,71 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Replace cached inserts with the actual results
+ *
+ * @param string $results
+ * @return string
+ */
+function smarty_core_process_cached_inserts($params, &$smarty)
+{
+    preg_match_all('!'.$smarty->_smarty_md5.'{insert_cache (.*)}'.$smarty->_smarty_md5.'!Uis',
+                   $params['results'], $match);
+    list($cached_inserts, $insert_args) = $match;
+
+    for ($i = 0, $for_max = count($cached_inserts); $i < $for_max; $i++) {
+        if ($smarty->debugging) {
+            $_params = array();
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
+            $debug_start_time = smarty_core_get_microtime($_params, $smarty);
+        }
+
+        $args = unserialize($insert_args[$i]);
+        $name = $args['name'];
+
+        if (isset($args['script'])) {
+            $_params = array('resource_name' => $smarty->_dequote($args['script']));
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_php_resource.php');
+            if(!smarty_core_get_php_resource($_params, $smarty)) {
+                return false;
+            }
+            $resource_type = $_params['resource_type'];
+            $php_resource = $_params['php_resource'];
+
+
+            if ($resource_type == 'file') {
+                $smarty->_include($php_resource, true);
+            } else {
+                $smarty->_eval($php_resource);
+            }
+        }
+
+        $function_name = $smarty->_plugins['insert'][$name][0];
+        if (empty($args['assign'])) {
+            $replace = $function_name($args, $smarty);
+        } else {
+            $smarty->assign($args['assign'], $function_name($args, $smarty));
+            $replace = '';
+        }
+
+        $params['results'] = str_replace($cached_inserts[$i], $replace, $params['results']);
+        if ($smarty->debugging) {
+            $_params = array();
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
+            $smarty->_smarty_debug_info[] = array('type'      => 'insert',
+                                                'filename'  => 'insert_'.$name,
+                                                'depth'     => $smarty->_inclusion_depth,
+                                                'exec_time' => smarty_core_get_microtime($_params, $smarty) - $debug_start_time);
+        }
+    }
+
+    return $params['results'];
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.process_cached_inserts.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.process_compiled_include.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.process_compiled_include.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.process_compiled_include.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,32 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Replace nocache-tags by results of the corresponding non-cacheable
+ * functions and return it
+ *
+ * @param string $compiled_tpl
+ * @param string $cached_source
+ * @return string
+ */
+
+function smarty_core_process_compiled_include($params, &$smarty)
+{
+    $_cache_including = $smarty->_cache_including;
+    $smarty->_cache_including = true;
+
+    $_return = $params['results'];
+    foreach ($smarty->_cache_serials as $_include_file_path=>$_cache_serial) {
+        $_return = preg_replace_callback('!(\{nocache\:('.$_cache_serial.')#(\d+)\})!s',
+                                         array(&$smarty, '_process_compiled_include_callback'),
+                                         $_return);
+    }
+    $smarty->_cache_including = $_cache_including;
+    return $_return;
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.process_compiled_include.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.read_cache_file.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.read_cache_file.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.read_cache_file.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,111 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * read a cache file, determine if it needs to be
+ * regenerated or not
+ *
+ * @param string $tpl_file
+ * @param string $cache_id
+ * @param string $compile_id
+ * @param string $results
+ * @return boolean
+ */
+
+//  $tpl_file, $cache_id, $compile_id, &$results
+
+function smarty_core_read_cache_file(&$params, &$smarty)
+{
+    static  $content_cache = array();
+
+    if ($smarty->force_compile) {
+        // force compile enabled, always regenerate
+        return false;
+    }
+
+    if (isset($content_cache[$params['tpl_file'].','.$params['cache_id'].','.$params['compile_id']])) {
+        list($params['results'], $smarty->_cache_info) = $content_cache[$params['tpl_file'].','.$params['cache_id'].','.$params['compile_id']];
+        return true;
+    }
+
+    if (!empty($smarty->cache_handler_func)) {
+        // use cache_handler function
+        call_user_func_array($smarty->cache_handler_func,
+                             array('read', &$smarty, &$params['results'], $params['tpl_file'], $params['cache_id'], $params['compile_id'], null));
+    } else {
+        // use local cache file
+        $_auto_id = $smarty->_get_auto_id($params['cache_id'], $params['compile_id']);
+        $_cache_file = $smarty->_get_auto_filename($smarty->cache_dir, $params['tpl_file'], $_auto_id);
+        $params['results'] = $smarty->_read_file($_cache_file);
+    }
+
+    if (empty($params['results'])) {
+        // nothing to parse (error?), regenerate cache
+        return false;
+    }
+
+    $cache_split = explode("\n", $params['results'], 2);
+    $cache_header = $cache_split[0];
+
+    $_cache_info = unserialize($cache_header);
+
+    if ($smarty->caching == 2 && isset ($_cache_info['expires'])){
+        // caching by expiration time
+        if ($_cache_info['expires'] > -1 && (time() > $_cache_info['expires'])) {
+            // cache expired, regenerate
+            return false;
+        }
+    } else {
+        // caching by lifetime
+        if ($smarty->cache_lifetime > -1 && (time() - $_cache_info['timestamp'] > $smarty->cache_lifetime)) {
+            // cache expired, regenerate
+            return false;
+        }
+    }
+
+    if ($smarty->compile_check) {
+        $_params = array('get_source' => false, 'quiet'=>true);
+        foreach (array_keys($_cache_info['template']) as $_template_dep) {
+            $_params['resource_name'] = $_template_dep;
+            if (!$smarty->_fetch_resource_info($_params) || $_cache_info['timestamp'] < $_params['resource_timestamp']) {
+                // template file has changed, regenerate cache
+                return false;
+            }
+        }
+
+        if (isset($_cache_info['config'])) {
+            $_params = array('resource_base_path' => $smarty->config_dir, 'get_source' => false, 'quiet'=>true);
+            foreach (array_keys($_cache_info['config']) as $_config_dep) {
+                $_params['resource_name'] = $_config_dep;
+                if (!$smarty->_fetch_resource_info($_params) || $_cache_info['timestamp'] < $_params['resource_timestamp']) {
+                    // config file has changed, regenerate cache
+                    return false;
+                }
+            }
+        }
+    }
+
+    foreach ($_cache_info['cache_serials'] as $_include_file_path=>$_cache_serial) {
+        if (empty($smarty->_cache_serials[$_include_file_path])) {
+            $smarty->_include($_include_file_path, true);
+        }
+
+        if ($smarty->_cache_serials[$_include_file_path] != $_cache_serial) {
+            /* regenerate */
+            return false;
+        }
+    }
+    $params['results'] = $cache_split[1];
+    $content_cache[$params['tpl_file'].','.$params['cache_id'].','.$params['compile_id']] = array($params['results'], $_cache_info);
+
+    $smarty->_cache_info = $_cache_info;
+    return true;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.read_cache_file.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.rm_auto.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.rm_auto.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.rm_auto.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,71 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * delete an automagically created file by name and id
+ *
+ * @param string $auto_base
+ * @param string $auto_source
+ * @param string $auto_id
+ * @param integer $exp_time
+ * @return boolean
+ */
+
+// $auto_base, $auto_source = null, $auto_id = null, $exp_time = null
+
+function smarty_core_rm_auto($params, &$smarty)
+{
+    if (!@is_dir($params['auto_base']))
+      return false;
+
+    if(!isset($params['auto_id']) && !isset($params['auto_source'])) {
+        $_params = array(
+            'dirname' => $params['auto_base'],
+            'level' => 0,
+            'exp_time' => $params['exp_time']
+        );
+        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.rmdir.php');
+        $_res = smarty_core_rmdir($_params, $smarty);
+    } else {
+        $_tname = $smarty->_get_auto_filename($params['auto_base'], $params['auto_source'], $params['auto_id']);
+
+        if(isset($params['auto_source'])) {
+            if (isset($params['extensions'])) {
+                $_res = false;
+                foreach ((array)$params['extensions'] as $_extension)
+                    $_res |= $smarty->_unlink($_tname.$_extension, $params['exp_time']);
+            } else {
+                $_res = $smarty->_unlink($_tname, $params['exp_time']);
+            }
+        } elseif ($smarty->use_sub_dirs) {
+            $_params = array(
+                'dirname' => $_tname,
+                'level' => 1,
+                'exp_time' => $params['exp_time']
+            );
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.rmdir.php');
+            $_res = smarty_core_rmdir($_params, $smarty);
+        } else {
+            // remove matching file names
+            $_handle = opendir($params['auto_base']);
+            $_res = true;
+            while (false !== ($_filename = readdir($_handle))) {
+                if($_filename == '.' || $_filename == '..') {
+                    continue;
+                } elseif (substr($params['auto_base'] . DIRECTORY_SEPARATOR . $_filename, 0, strlen($_tname)) == $_tname) {
+                    $_res &= (bool)$smarty->_unlink($params['auto_base'] . DIRECTORY_SEPARATOR . $_filename, $params['exp_time']);
+                }
+            }
+        }
+    }
+
+    return $_res;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.rm_auto.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.rmdir.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.rmdir.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.rmdir.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,55 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * delete a dir recursively (level=0 -> keep root)
+ * WARNING: no tests, it will try to remove what you tell it!
+ *
+ * @param string $dirname
+ * @param integer $level
+ * @param integer $exp_time
+ * @return boolean
+ */
+
+//  $dirname, $level = 1, $exp_time = null
+
+function smarty_core_rmdir($params, &$smarty)
+{
+   if(!isset($params['level'])) { $params['level'] = 1; }
+   if(!isset($params['exp_time'])) { $params['exp_time'] = null; }
+
+   if($_handle = @opendir($params['dirname'])) {
+
+        while (false !== ($_entry = readdir($_handle))) {
+            if ($_entry != '.' && $_entry != '..') {
+                if (@is_dir($params['dirname'] . DIRECTORY_SEPARATOR . $_entry)) {
+                    $_params = array(
+                        'dirname' => $params['dirname'] . DIRECTORY_SEPARATOR . $_entry,
+                        'level' => $params['level'] + 1,
+                        'exp_time' => $params['exp_time']
+                    );
+                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.rmdir.php');
+                    smarty_core_rmdir($_params, $smarty);
+                }
+                else {
+                    $smarty->_unlink($params['dirname'] . DIRECTORY_SEPARATOR . $_entry, $params['exp_time']);
+                }
+            }
+        }
+        closedir($_handle);
+   }
+
+   if ($params['level']) {
+       return @rmdir($params['dirname']);
+   }
+   return (bool)$_handle;
+
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.rmdir.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.run_insert_handler.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.run_insert_handler.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.run_insert_handler.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,71 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Handle insert tags
+ *
+ * @param array $args
+ * @return string
+ */
+function smarty_core_run_insert_handler($params, &$smarty)
+{
+
+    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
+    if ($smarty->debugging) {
+        $_params = array();
+        $_debug_start_time = smarty_core_get_microtime($_params, $smarty);
+    }
+
+    if ($smarty->caching) {
+        $_arg_string = serialize($params['args']);
+        $_name = $params['args']['name'];
+        if (!isset($smarty->_cache_info['insert_tags'][$_name])) {
+            $smarty->_cache_info['insert_tags'][$_name] = array('insert',
+                                                             $_name,
+                                                             $smarty->_plugins['insert'][$_name][1],
+                                                             $smarty->_plugins['insert'][$_name][2],
+                                                             !empty($params['args']['script']) ? true : false);
+        }
+        return $smarty->_smarty_md5."{insert_cache $_arg_string}".$smarty->_smarty_md5;
+    } else {
+        if (isset($params['args']['script'])) {
+            $_params = array('resource_name' => $smarty->_dequote($params['args']['script']));
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_php_resource.php');
+            if(!smarty_core_get_php_resource($_params, $smarty)) {
+                return false;
+            }
+
+            if ($_params['resource_type'] == 'file') {
+                $smarty->_include($_params['php_resource'], true);
+            } else {
+                $smarty->_eval($_params['php_resource']);
+            }
+            unset($params['args']['script']);
+        }
+
+        $_funcname = $smarty->_plugins['insert'][$params['args']['name']][0];
+        $_content = $_funcname($params['args'], $smarty);
+        if ($smarty->debugging) {
+            $_params = array();
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
+            $smarty->_smarty_debug_info[] = array('type'      => 'insert',
+                                                'filename'  => 'insert_'.$params['args']['name'],
+                                                'depth'     => $smarty->_inclusion_depth,
+                                                'exec_time' => smarty_core_get_microtime($_params, $smarty) - $_debug_start_time);
+        }
+
+        if (!empty($params['args']["assign"])) {
+            $smarty->assign($params['args']["assign"], $_content);
+        } else {
+            return $_content;
+        }
+    }
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.run_insert_handler.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.smarty_include_php.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.smarty_include_php.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.smarty_include_php.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,50 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * called for included php files within templates
+ *
+ * @param string $smarty_file
+ * @param string $smarty_assign variable to assign the included template's
+ *               output into
+ * @param boolean $smarty_once uses include_once if this is true
+ * @param array $smarty_include_vars associative array of vars from
+ *              {include file="blah" var=$var}
+ */
+
+//  $file, $assign, $once, $_smarty_include_vars
+
+function smarty_core_smarty_include_php($params, &$smarty)
+{
+    $_params = array('resource_name' => $params['smarty_file']);
+    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_php_resource.php');
+    smarty_core_get_php_resource($_params, $smarty);
+    $_smarty_resource_type = $_params['resource_type'];
+    $_smarty_php_resource = $_params['php_resource'];
+
+    if (!empty($params['smarty_assign'])) {
+        ob_start();
+        if ($_smarty_resource_type == 'file') {
+            $smarty->_include($_smarty_php_resource, $params['smarty_once'], $params['smarty_include_vars']);
+        } else {
+            $smarty->_eval($_smarty_php_resource, $params['smarty_include_vars']);
+        }
+        $smarty->assign($params['smarty_assign'], ob_get_contents());
+        ob_end_clean();
+    } else {
+        if ($_smarty_resource_type == 'file') {
+            $smarty->_include($_smarty_php_resource, $params['smarty_once'], $params['smarty_include_vars']);
+        } else {
+            $smarty->_eval($_smarty_php_resource, $params['smarty_include_vars']);
+        }
+    }
+}
+
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.smarty_include_php.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.write_cache_file.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.write_cache_file.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.write_cache_file.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,73 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Prepend the cache information to the cache file
+ * and write it
+ *
+ * @param string $tpl_file
+ * @param string $cache_id
+ * @param string $compile_id
+ * @param string $results
+ * @return true|null
+ */
+
+ // $tpl_file, $cache_id, $compile_id, $results
+
+function smarty_core_write_cache_file($params, &$smarty)
+{
+
+    // put timestamp in cache header
+    $smarty->_cache_info['timestamp'] = time();
+    if ($smarty->cache_lifetime > -1){
+        // expiration set
+        $smarty->_cache_info['expires'] = $smarty->_cache_info['timestamp'] + $smarty->cache_lifetime;
+    } else {
+        // cache will never expire
+        $smarty->_cache_info['expires'] = -1;
+    }
+
+    // collapse {nocache...}-tags
+    $params['results'] = preg_replace('!((\{nocache\:([0-9a-f]{32})#(\d+)\})'
+                                      .'.*'
+                                      .'{/nocache\:\\3#\\4\})!Us'
+                                      ,'\\2'
+                                      ,$params['results']);
+    $smarty->_cache_info['cache_serials'] = $smarty->_cache_serials;
+
+    // prepend the cache header info into cache file
+    $params['results'] = serialize($smarty->_cache_info)."\n".$params['results'];
+
+    if (!empty($smarty->cache_handler_func)) {
+        // use cache_handler function
+        call_user_func_array($smarty->cache_handler_func,
+                             array('write', &$smarty, &$params['results'], $params['tpl_file'], $params['cache_id'], $params['compile_id'], null));
+    } else {
+        // use local cache file
+
+        if(!@is_writable($smarty->cache_dir)) {
+            // cache_dir not writable, see if it exists
+            if(!@is_dir($smarty->cache_dir)) {
+                $smarty->trigger_error('the $cache_dir \'' . $smarty->cache_dir . '\' does not exist, or is not a directory.', E_USER_ERROR);
+                return false;
+            }
+            $smarty->trigger_error('unable to write to $cache_dir \'' . realpath($smarty->cache_dir) . '\'. Be sure $cache_dir is writable by the web server user.', E_USER_ERROR);
+            return false;
+        }
+
+        $_auto_id = $smarty->_get_auto_id($params['cache_id'], $params['compile_id']);
+        $_cache_file = $smarty->_get_auto_filename($smarty->cache_dir, $params['tpl_file'], $_auto_id);
+        $_params = array('filename' => $_cache_file, 'contents' => $params['results'], 'create_dirs' => true);
+        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.write_file.php');
+        smarty_core_write_file($_params, $smarty);
+        return true;
+    }
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.write_cache_file.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.write_compiled_include.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.write_compiled_include.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.write_compiled_include.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,78 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Extract non-cacheable parts out of compiled template and write it
+ *
+ * @param string $compile_path
+ * @param string $template_compiled
+ * @return boolean
+ */
+
+function smarty_core_write_compiled_include($params, &$smarty)
+{
+    $_tag_start = 'if \(\$this->caching\) \{ echo \'\{nocache\:('.$params['cache_serial'].')#(\d+)\}\';\}';
+    $_tag_end   = 'if \(\$this->caching\) \{ echo \'\{/nocache\:(\\2)#(\\3)\}\';\}';
+
+    preg_match_all('!('.$_tag_start.'(.*)'.$_tag_end.')!Us',
+                   $params['compiled_content'], $_match_source, PREG_SET_ORDER);
+
+    // no nocache-parts found: done
+    if (count($_match_source)==0) return;
+
+    // convert the matched php-code to functions
+    $_include_compiled = "<?php /* funky header here */\n\n";
+
+    $_compile_path = $params['include_file_path'];
+
+    $smarty->_cache_serials[$_compile_path] = $params['cache_serial'];
+    $_include_compiled .= "\$this->_cache_serials['".$_compile_path."'] = '".$params['cache_serial']."';\n\n?>";
+
+    $_include_compiled .= $params['plugins_code'];
+    $_include_compiled .= "<?php";
+
+    $this_varname = ((double)phpversion() >= 5.0) ? '_smarty' : 'this';
+    for ($_i = 0, $_for_max = count($_match_source); $_i < $_for_max; $_i++) {
+        $_match =& $_match_source[$_i];
+        $source = $_match[4];
+        if ($this_varname == '_smarty') {
+            /* rename $this to $_smarty in the sourcecode */
+            $tokens = token_get_all('<?php ' . $_match[4]);
+            array_shift($tokens); /* remove the opening <.?.php */
+            for ($i=0, $count = count($tokens); $i < $count; $i++) {
+                if (is_array($tokens[$i])) {
+                    if ($tokens[$i][0] == T_VARIABLE && $tokens[$i][1] == '$this') {
+                        $tokens[$i] = '$' . $this_varname;
+                    } else {
+                        $tokens[$i] = $tokens[$i][1];
+                    }                   
+                }
+            }
+            $source = implode('', $tokens);
+        }
+
+        /* add function to compiled include */
+        $_include_compiled .= "
+function _smarty_tplfunc_$_match[2]_$_match[3](&\$$this_varname)
+{
+$source
+}
+
+";
+    }
+    $_include_compiled .= "\n\n?>\n";
+
+    $_params = array('filename' => $_compile_path,
+                     'contents' => $_include_compiled, 'create_dirs' => true);
+
+    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.write_file.php');
+    smarty_core_write_file($_params, $smarty);
+    return true;
+}
+
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.write_compiled_include.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.write_compiled_resource.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.write_compiled_resource.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.write_compiled_resource.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,35 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * write the compiled resource
+ *
+ * @param string $compile_path
+ * @param string $compiled_content
+ * @return true
+ */
+function smarty_core_write_compiled_resource($params, &$smarty)
+{
+    if(!@is_writable($smarty->compile_dir)) {
+        // compile_dir not writable, see if it exists
+        if(!@is_dir($smarty->compile_dir)) {
+            $smarty->trigger_error('the $compile_dir \'' . $smarty->compile_dir . '\' does not exist, or is not a directory.', E_USER_ERROR);
+            return false;
+        }
+        $smarty->trigger_error('unable to write to $compile_dir \'' . realpath($smarty->compile_dir) . '\'. Be sure $compile_dir is writable by the web server user.', E_USER_ERROR);
+        return false;
+    }
+
+    $_params = array('filename' => $params['compile_path'], 'contents' => $params['compiled_content'], 'create_dirs' => true);
+    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.write_file.php');
+    smarty_core_write_file($_params, $smarty);
+    return true;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.write_compiled_resource.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/core/core.write_file.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/core/core.write_file.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/core/core.write_file.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,54 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * write out a file to disk
+ *
+ * @param string $filename
+ * @param string $contents
+ * @param boolean $create_dirs
+ * @return boolean
+ */
+function smarty_core_write_file($params, &$smarty)
+{
+    $_dirname = dirname($params['filename']);
+
+    if ($params['create_dirs']) {
+        $_params = array('dir' => $_dirname);
+        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.create_dir_structure.php');
+        smarty_core_create_dir_structure($_params, $smarty);
+    }
+
+    // write to tmp file, then rename it to avoid
+    // file locking race condition
+    $_tmp_file = tempnam($_dirname, 'wrt');
+
+    if (!($fd = @fopen($_tmp_file, 'wb'))) {
+        $_tmp_file = $_dirname . DIRECTORY_SEPARATOR . uniqid('wrt');
+        if (!($fd = @fopen($_tmp_file, 'wb'))) {
+            $smarty->trigger_error("problem writing temporary file '$_tmp_file'");
+            return false;
+        }
+    }
+
+    fwrite($fd, $params['contents']);
+    fclose($fd);
+
+    // Delete the file if it allready exists (this is needed on Win,
+    // because it cannot overwrite files with rename()
+    if (file_exists($params['filename'])) {
+        @unlink($params['filename']);
+    }
+    @rename($_tmp_file, $params['filename']);
+    @chmod($params['filename'], $smarty->_file_perms);
+
+    return true;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/core/core.write_file.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/block.textformat.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/block.textformat.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/block.textformat.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,102 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {textformat}{/textformat} block plugin
+ *
+ * Type:     block function<br>
+ * Name:     textformat<br>
+ * Purpose:  format text a certain way with preset styles
+ *           or custom wrap/indent settings<br>
+ * @link http://smarty.php.net/manual/en/language.function.textformat.php {textformat}
+ *       (Smarty online manual)
+ * @param array
+ * <pre>
+ * Params:   style: string (email)
+ *           indent: integer (0)
+ *           wrap: integer (80)
+ *           wrap_char string ("\n")
+ *           indent_char: string (" ")
+ *           wrap_boundary: boolean (true)
+ * </pre>
+ * @param string contents of the block
+ * @param Smarty clever simulation of a method
+ * @return string string $content re-formatted
+ */
+function smarty_block_textformat($params, $content, &$smarty)
+{
+    if (is_null($content)) {
+        return;
+    }
+
+    $style = null;
+    $indent = 0;
+    $indent_first = 0;
+    $indent_char = ' ';
+    $wrap = 80;
+    $wrap_char = "\n";
+    $wrap_cut = false;
+    $assign = null;
+    
+    foreach ($params as $_key => $_val) {
+        switch ($_key) {
+            case 'style':
+            case 'indent_char':
+            case 'wrap_char':
+            case 'assign':
+                $$_key = (string)$_val;
+                break;
+
+            case 'indent':
+            case 'indent_first':
+            case 'wrap':
+                $$_key = (int)$_val;
+                break;
+
+            case 'wrap_cut':
+                $$_key = (bool)$_val;
+                break;
+
+            default:
+                $smarty->trigger_error("textformat: unknown attribute '$_key'");
+        }
+    }
+
+    if ($style == 'email') {
+        $wrap = 72;
+    }
+
+    // split into paragraphs
+    $_paragraphs = preg_split('![\r\n][\r\n]!',$content);
+    $_output = '';
+
+    for($_x = 0, $_y = count($_paragraphs); $_x < $_y; $_x++) {
+        if ($_paragraphs[$_x] == '') {
+            continue;
+        }
+        // convert mult. spaces & special chars to single space
+        $_paragraphs[$_x] = preg_replace(array('!\s+!','!(^\s+)|(\s+$)!'), array(' ',''), $_paragraphs[$_x]);
+        // indent first line
+        if($indent_first > 0) {
+            $_paragraphs[$_x] = str_repeat($indent_char, $indent_first) . $_paragraphs[$_x];
+        }
+        // wordwrap sentences
+        $_paragraphs[$_x] = wordwrap($_paragraphs[$_x], $wrap - $indent, $wrap_char, $wrap_cut);
+        // indent lines
+        if($indent > 0) {
+            $_paragraphs[$_x] = preg_replace('!^!m', str_repeat($indent_char, $indent), $_paragraphs[$_x]);
+        }
+    }
+    $_output = implode($wrap_char . $wrap_char, $_paragraphs);
+
+    return $assign ? $smarty->assign($assign, $_output) : $_output;
+
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/block.textformat.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/compiler.assign.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/compiler.assign.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/compiler.assign.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,38 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {assign} compiler function plugin
+ *
+ * Type:     compiler function<br>
+ * Name:     assign<br>
+ * Purpose:  assign a value to a template variable
+ * @link http://smarty.php.net/manual/en/language.custom.functions.php#LANGUAGE.FUNCTION.ASSIGN {assign}
+ *       (Smarty online manual)
+ * @param string containing var-attribute and value-attribute
+ * @param Smarty_Compiler
+ */
+function smarty_compiler_assign($tag_attrs, &$compiler)
+{
+    $_params = $compiler->_parse_attrs($tag_attrs);
+
+    if (!isset($_params['var'])) {
+        $compiler->_syntax_error("assign: missing 'var' parameter", E_USER_WARNING);
+        return;
+    }
+
+    if (!isset($_params['value'])) {
+        $compiler->_syntax_error("assign: missing 'value' parameter", E_USER_WARNING);
+        return;
+    }
+
+    return "\$this->assign({$_params['var']}, {$_params['value']});";
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/compiler.assign.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.assign.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.assign.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.assign.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,30 @@
+<?php
+
+/*
+ * Smarty plugin
+ * -------------------------------------------------------------
+ * Type:     function
+ * Name:     assign
+ * Purpose:  assign a value to a template variable
+ * -------------------------------------------------------------
+ */
+function smarty_function_assign($params, &$smarty)
+{
+    extract($params);
+
+    if (empty($var)) {
+        $smarty->trigger_error("assign: missing 'var' parameter");
+        return;
+    }
+
+    if (!in_array('value', array_keys($params))) {
+        $smarty->trigger_error("assign: missing 'value' parameter");
+        return;
+    }
+
+    $smarty->assign($var, $value);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.assign.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.assign_debug_info.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.assign_debug_info.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.assign_debug_info.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,39 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {assign_debug_info} function plugin
+ *
+ * Type:     function<br>
+ * Name:     assign_debug_info<br>
+ * Purpose:  assign debug info to the template<br>
+ * @param array unused in this plugin, this plugin uses {@link Smarty::$_config},
+ *              {@link Smarty::$_tpl_vars} and {@link Smarty::$_smarty_debug_info}
+ * @param Smarty
+ */
+function smarty_function_assign_debug_info($params, &$smarty)
+{
+    $assigned_vars = $smarty->_tpl_vars;
+    ksort($assigned_vars);
+    if (@is_array($smarty->_config[0])) {
+        $config_vars = $smarty->_config[0];
+        ksort($config_vars);
+        $smarty->assign("_debug_config_keys", array_keys($config_vars));
+        $smarty->assign("_debug_config_vals", array_values($config_vars));
+    }
+    
+    $included_templates = $smarty->_smarty_debug_info;
+    
+    $smarty->assign("_debug_keys", array_keys($assigned_vars));
+    $smarty->assign("_debug_vals", array_values($assigned_vars));
+    
+    $smarty->assign("_debug_tpls", $included_templates);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.assign_debug_info.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.config_load.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.config_load.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.config_load.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,140 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {config_load} function plugin
+ *
+ * Type:     function<br>
+ * Name:     config_load<br>
+ * Purpose:  load config file vars
+ * @link http://smarty.php.net/manual/en/language.function.config.load.php {config_load}
+ *       (Smarty online manual)
+ * @param array Format:
+ * <pre>
+ * array('file' => required config file name,
+ *       'section' => optional config file section to load
+ *       'scope' => local/parent/global
+ *       'global' => overrides scope, setting to parent if true)
+ * </pre>
+ * @param Smarty
+ */
+function smarty_function_config_load($params, &$smarty)
+{
+        if ($smarty->debugging) {
+            $_params = array();
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
+            $_debug_start_time = smarty_core_get_microtime($_params, $smarty);
+        }
+
+        $_file = isset($params['file']) ? $smarty->_dequote($params['file']) : null;
+        $_section = isset($params['section']) ? $smarty->_dequote($params['section']) : null;
+        $_scope = isset($params['scope']) ? $smarty->_dequote($params['scope']) : 'global';
+        $_global = isset($params['global']) ? $smarty->_dequote($params['global']) : false;
+
+        if (!isset($_file) || strlen($_file) == 0) {
+            $smarty->trigger_error("missing 'file' attribute in config_load tag", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        if (isset($_scope)) {
+            if ($_scope != 'local' &&
+                $_scope != 'parent' &&
+                $_scope != 'global') {
+                $smarty->trigger_error("invalid 'scope' attribute value", E_USER_ERROR, __FILE__, __LINE__);
+            }
+        } else {
+            if ($_global) {
+                $_scope = 'parent';
+            } else {
+                $_scope = 'local';
+            }
+        }
+
+        $_params = array('resource_name' => $_file,
+                         'resource_base_path' => $smarty->config_dir,
+                         'get_source' => false);
+        $smarty->_parse_resource_name($_params);
+        $_file_path = $_params['resource_type'] . ':' . $_params['resource_name'];
+        if (isset($_section))
+            $_compile_file = $smarty->_get_compile_path($_file_path.'|'.$_section);
+        else
+            $_compile_file = $smarty->_get_compile_path($_file_path);
+
+        if($smarty->force_compile || !file_exists($_compile_file)) {
+            $_compile = true;
+        } elseif ($smarty->compile_check) {
+            $_params = array('resource_name' => $_file,
+                             'resource_base_path' => $smarty->config_dir,
+                             'get_source' => false);
+            $_compile = $smarty->_fetch_resource_info($_params) &&
+                $_params['resource_timestamp'] > filemtime($_compile_file);
+        } else {
+            $_compile = false;
+        }
+
+        if($_compile) {
+            // compile config file
+            if(!is_object($smarty->_conf_obj)) {
+                require_once SMARTY_DIR . $smarty->config_class . '.class.php';
+                $smarty->_conf_obj = new $smarty->config_class();
+                $smarty->_conf_obj->overwrite = $smarty->config_overwrite;
+                $smarty->_conf_obj->booleanize = $smarty->config_booleanize;
+                $smarty->_conf_obj->read_hidden = $smarty->config_read_hidden;
+                $smarty->_conf_obj->fix_newlines = $smarty->config_fix_newlines;
+            }
+
+            $_params = array('resource_name' => $_file,
+                             'resource_base_path' => $smarty->config_dir,
+                             $_params['get_source'] = true);
+            if (!$smarty->_fetch_resource_info($_params)) {
+                return;
+            }
+            $smarty->_conf_obj->set_file_contents($_file, $_params['source_content']);
+            $_config_vars = array_merge($smarty->_conf_obj->get($_file),
+                    $smarty->_conf_obj->get($_file, $_section));
+            if(function_exists('var_export')) {
+                $_output = '<?php $_config_vars = ' . var_export($_config_vars, true) . '; ?>';
+            } else {
+                $_output = '<?php $_config_vars = unserialize(\'' . strtr(serialize($_config_vars),array('\''=>'\\\'', '\\'=>'\\\\')) . '\'); ?>';
+            }
+            $_params = (array('compile_path' => $_compile_file, 'compiled_content' => $_output, 'resource_timestamp' => $_params['resource_timestamp']));
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.write_compiled_resource.php');
+            smarty_core_write_compiled_resource($_params, $smarty);
+        } else {
+            include($_compile_file);
+        }
+
+        if ($smarty->caching) {
+            $smarty->_cache_info['config'][$_file] = true;
+        }
+
+        $smarty->_config[0]['vars'] = @array_merge($smarty->_config[0]['vars'], $_config_vars);
+        $smarty->_config[0]['files'][$_file] = true;
+
+        if ($_scope == 'parent') {
+                $smarty->_config[1]['vars'] = @array_merge($smarty->_config[1]['vars'], $_config_vars);
+                $smarty->_config[1]['files'][$_file] = true;
+        } else if ($_scope == 'global') {
+            for ($i = 1, $for_max = count($smarty->_config); $i < $for_max; $i++) {
+                $smarty->_config[$i]['vars'] = @array_merge($smarty->_config[$i]['vars'], $_config_vars);
+                $smarty->_config[$i]['files'][$_file] = true;
+            }
+        }
+
+        if ($smarty->debugging) {
+            $_params = array();
+            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
+            $smarty->_smarty_debug_info[] = array('type'      => 'config',
+                                                'filename'  => $_file.' ['.$_section.'] '.$_scope,
+                                                'depth'     => $smarty->_inclusion_depth,
+                                                'exec_time' => smarty_core_get_microtime($_params, $smarty) - $_debug_start_time);
+        }
+
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.config_load.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.counter.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.counter.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.counter.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,79 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {counter} function plugin
+ *
+ * Type:     function<br>
+ * Name:     counter<br>
+ * Purpose:  print out a counter value
+ * @link http://smarty.php.net/manual/en/language.function.counter.php {counter}
+ *       (Smarty online manual)
+ * @param array parameters
+ * @param Smarty
+ * @return string|null
+ */
+function smarty_function_counter($params, &$smarty)
+{
+    static $counters = array();
+
+    $name = (isset($params['name'])) ? $params['name'] : 'default';
+    if (!isset($counters[$name])) {
+        $counters[$name] = array(
+            'start'=>1,
+            'skip'=>1,
+            'direction'=>'up',
+            'count'=>1
+            );
+    }
+    $counter =& $counters[$name];
+
+    if (isset($params['start'])) {
+        $counter['start'] = $counter['count'] = (int)$params['start'];
+    }
+
+    if (!empty($params['assign'])) {
+        $counter['assign'] = $params['assign'];
+    }
+
+    if (isset($counter['assign'])) {
+        $smarty->assign($counter['assign'], $counter['count']);
+    }
+    
+    if (isset($params['print'])) {
+        $print = (bool)$params['print'];
+    } else {
+        $print = empty($counter['assign']);
+    }
+
+    if ($print) {
+        $retval = $counter['count'];
+    } else {
+        $retval = null;
+    }
+
+    if (isset($params['skip'])) {
+        $counter['skip'] = $params['skip'];
+    }
+    
+    if (isset($params['direction'])) {
+        $counter['direction'] = $params['direction'];
+    }
+
+    if ($counter['direction'] == "down")
+        $counter['count'] -= $counter['skip'];
+    else
+        $counter['count'] += $counter['skip'];
+    
+    return $retval;
+    
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.counter.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.cycle.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.cycle.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.cycle.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,102 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {cycle} function plugin
+ *
+ * Type:     function<br>
+ * Name:     cycle<br>
+ * Date:     May 3, 2002<br>
+ * Purpose:  cycle through given values<br>
+ * Input:
+ *         - name = name of cycle (optional)
+ *         - values = comma separated list of values to cycle,
+ *                    or an array of values to cycle
+ *                    (this can be left out for subsequent calls)
+ *         - reset = boolean - resets given var to true
+ *         - print = boolean - print var or not. default is true
+ *         - advance = boolean - whether or not to advance the cycle
+ *         - delimiter = the value delimiter, default is ","
+ *         - assign = boolean, assigns to template var instead of
+ *                    printed.
+ *
+ * Examples:<br>
+ * <pre>
+ * {cycle values="#eeeeee,#d0d0d0d"}
+ * {cycle name=row values="one,two,three" reset=true}
+ * {cycle name=row}
+ * </pre>
+ * @link http://smarty.php.net/manual/en/language.function.cycle.php {cycle}
+ *       (Smarty online manual)
+ * @author Monte Ohrt <monte at ispi.net>
+ * @author credit to Mark Priatel <mpriatel at rogers.com>
+ * @author credit to Gerard <gerard at interfold.com>
+ * @author credit to Jason Sweat <jsweat_php at yahoo.com>
+ * @version  1.3
+ * @param array
+ * @param Smarty
+ * @return string|null
+ */
+function smarty_function_cycle($params, &$smarty)
+{
+    static $cycle_vars;
+    
+    $name = (empty($params['name'])) ? 'default' : $params['name'];
+    $print = (isset($params['print'])) ? (bool)$params['print'] : true;
+    $advance = (isset($params['advance'])) ? (bool)$params['advance'] : true;
+    $reset = (isset($params['reset'])) ? (bool)$params['reset'] : false;
+            
+    if (!in_array('values', array_keys($params))) {
+        if(!isset($cycle_vars[$name]['values'])) {
+            $smarty->trigger_error("cycle: missing 'values' parameter");
+            return;
+        }
+    } else {
+        if(isset($cycle_vars[$name]['values'])
+            && $cycle_vars[$name]['values'] != $params['values'] ) {
+            $cycle_vars[$name]['index'] = 0;
+        }
+        $cycle_vars[$name]['values'] = $params['values'];
+    }
+
+    $cycle_vars[$name]['delimiter'] = (isset($params['delimiter'])) ? $params['delimiter'] : ',';
+    
+    if(is_array($cycle_vars[$name]['values'])) {
+        $cycle_array = $cycle_vars[$name]['values'];
+    } else {
+        $cycle_array = explode($cycle_vars[$name]['delimiter'],$cycle_vars[$name]['values']);
+    }
+    
+    if(!isset($cycle_vars[$name]['index']) || $reset ) {
+        $cycle_vars[$name]['index'] = 0;
+    }
+    
+    if (isset($params['assign'])) {
+        $print = false;
+        $smarty->assign($params['assign'], $cycle_array[$cycle_vars[$name]['index']]);
+    }
+        
+    if($print) {
+        $retval = $cycle_array[$cycle_vars[$name]['index']];
+    } else {
+        $retval = null;
+    }
+
+    if($advance) {
+        if ( $cycle_vars[$name]['index'] >= count($cycle_array) -1 ) {
+            $cycle_vars[$name]['index'] = 0;
+        } else {
+            $cycle_vars[$name]['index']++;
+        }
+    }
+    
+    return $retval;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.cycle.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.debug.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.debug.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.debug.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,35 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {debug} function plugin
+ *
+ * Type:     function<br>
+ * Name:     debug<br>
+ * Date:     July 1, 2002<br>
+ * Purpose:  popup debug window
+ * @link http://smarty.php.net/manual/en/language.function.debug.php {debug}
+ *       (Smarty online manual)
+ * @author   Monte Ohrt <monte at ispi.net>
+ * @version  1.0
+ * @param array
+ * @param Smarty
+ * @return string output from {@link Smarty::_generate_debug_output()}
+ */
+function smarty_function_debug($params, &$smarty)
+{
+    if (isset($params['output'])) {
+        $smarty->assign('_smarty_debug_output', $params['output']);
+    }
+    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.display_debug_console.php');
+    return smarty_core_display_debug_console(null, $smarty);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.debug.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.eval.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.eval.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.eval.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,48 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {eval} function plugin
+ *
+ * Type:     function<br>
+ * Name:     eval<br>
+ * Purpose:  evaluate a template variable as a template<br>
+ * @link http://smarty.php.net/manual/en/language.function.eval.php {eval}
+ *       (Smarty online manual)
+ * @param array
+ * @param Smarty
+ */
+function smarty_function_eval($params, &$smarty)
+{
+
+    if (!isset($params['var'])) {
+        $smarty->trigger_error("eval: missing 'var' parameter");
+        return;
+    }
+
+    if($params['var'] == '') {
+        return;
+    }
+
+    $smarty->_compile_source('evaluated template', $params['var'], $_var_compiled);
+
+    ob_start();
+    $smarty->_eval('?>' . $_var_compiled);
+    $_contents = ob_get_contents();
+    ob_end_clean();
+
+    if (!empty($params['assign'])) {
+        $smarty->assign($params['assign'], $_contents);
+    } else {
+        return $_contents;
+    }
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.eval.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.fetch.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.fetch.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.fetch.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,220 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {fetch} plugin
+ *
+ * Type:     function<br>
+ * Name:     fetch<br>
+ * Purpose:  fetch file, web or ftp data and display results
+ * @link http://smarty.php.net/manual/en/language.function.fetch.php {fetch}
+ *       (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string|null if the assign parameter is passed, Smarty assigns the
+ *                     result to a template variable
+ */
+function smarty_function_fetch($params, &$smarty)
+{
+    if (empty($params['file'])) {
+        $smarty->_trigger_fatal_error("[plugin] parameter 'file' cannot be empty");
+        return;
+    }
+
+    $content = '';
+    if ($smarty->security && !preg_match('!^(http|ftp)://!i', $params['file'])) {
+        $_params = array('resource_type' => 'file', 'resource_name' => $params['file']);
+        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.is_secure.php');
+        if(!smarty_core_is_secure($_params, $smarty)) {
+            $smarty->_trigger_fatal_error('[plugin] (secure mode) fetch \'' . $params['file'] . '\' is not allowed');
+            return;
+        }
+        
+        // fetch the file
+        if($fp = @fopen($params['file'],'r')) {
+            while(!feof($fp)) {
+                $content .= fgets ($fp,4096);
+            }
+            fclose($fp);
+        } else {
+            $smarty->_trigger_fatal_error('[plugin] fetch cannot read file \'' . $params['file'] . '\'');
+            return;
+        }
+    } else {
+        // not a local file
+        if(preg_match('!^http://!i',$params['file'])) {
+            // http fetch
+            if($uri_parts = parse_url($params['file'])) {
+                // set defaults
+                $host = $server_name = $uri_parts['host'];
+                $timeout = 30;
+                $accept = "image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*";
+                $agent = "Smarty Template Engine ".$smarty->_version;
+                $referer = "";
+                $uri = !empty($uri_parts['path']) ? $uri_parts['path'] : '/';
+                $uri .= !empty($uri_parts['query']) ? '?' . $uri_parts['query'] : '';
+                $_is_proxy = false;
+                if(empty($uri_parts['port'])) {
+                    $port = 80;
+                } else {
+                    $port = $uri_parts['port'];
+                }
+                if(!empty($uri_parts['user'])) {
+                    $user = $uri_parts['user'];
+                }
+                if(!empty($uri_parts['pass'])) {
+                    $pass = $uri_parts['pass'];
+                }
+                // loop through parameters, setup headers
+                foreach($params as $param_key => $param_value) {
+                    switch($param_key) {
+                        case "file":
+                        case "assign":
+                        case "assign_headers":
+                            break;
+                        case "user":
+                            if(!empty($param_value)) {
+                                $user = $param_value;
+                            }
+                            break;
+                        case "pass":
+                            if(!empty($param_value)) {
+                                $pass = $param_value;
+                            }
+                            break;
+                        case "accept":
+                            if(!empty($param_value)) {
+                                $accept = $param_value;
+                            }
+                            break;
+                        case "header":
+                            if(!empty($param_value)) {
+                                if(!preg_match('![\w\d-]+: .+!',$param_value)) {
+                                    $smarty->_trigger_fatal_error("[plugin] invalid header format '".$param_value."'");
+                                    return;
+                                } else {
+                                    $extra_headers[] = $param_value;
+                                }
+                            }
+                            break;
+                        case "proxy_host":
+                            if(!empty($param_value)) {
+                                $proxy_host = $param_value;
+                            }
+                            break;
+                        case "proxy_port":
+                            if(!preg_match('!\D!', $param_value)) {
+                                $proxy_port = (int) $param_value;
+                            } else {
+                                $smarty->_trigger_fatal_error("[plugin] invalid value for attribute '".$param_key."'");
+                                return;
+                            }
+                            break;
+                        case "agent":
+                            if(!empty($param_value)) {
+                                $agent = $param_value;
+                            }
+                            break;
+                        case "referer":
+                            if(!empty($param_value)) {
+                                $referer = $param_value;
+                            }
+                            break;
+                        case "timeout":
+                            if(!preg_match('!\D!', $param_value)) {
+                                $timeout = (int) $param_value;
+                            } else {
+                                $smarty->_trigger_fatal_error("[plugin] invalid value for attribute '".$param_key."'");
+                                return;
+                            }
+                            break;
+                        default:
+                            $smarty->_trigger_fatal_error("[plugin] unrecognized attribute '".$param_key."'");
+                            return;
+                    }
+                }
+                if(!empty($proxy_host) && !empty($proxy_port)) {
+                    $_is_proxy = true;
+                    $fp = fsockopen($proxy_host,$proxy_port,$errno,$errstr,$timeout);
+                } else {
+                    $fp = fsockopen($server_name,$port,$errno,$errstr,$timeout);
+                }
+
+                if(!$fp) {
+                    $smarty->_trigger_fatal_error("[plugin] unable to fetch: $errstr ($errno)");
+                    return;
+                } else {
+                    if($_is_proxy) {
+                        fputs($fp, 'GET ' . $params['file'] . " HTTP/1.0\r\n");
+                    } else {
+                        fputs($fp, "GET $uri HTTP/1.0\r\n");
+                    }
+                    if(!empty($host)) {
+                        fputs($fp, "Host: $host\r\n");
+                    }
+                    if(!empty($accept)) {
+                        fputs($fp, "Accept: $accept\r\n");
+                    }
+                    if(!empty($agent)) {
+                        fputs($fp, "User-Agent: $agent\r\n");
+                    }
+                    if(!empty($referer)) {
+                        fputs($fp, "Referer: $referer\r\n");
+                    }
+                    if(isset($extra_headers) && is_array($extra_headers)) {
+                        foreach($extra_headers as $curr_header) {
+                            fputs($fp, $curr_header."\r\n");
+                        }
+                    }
+                    if(!empty($user) && !empty($pass)) {
+                        fputs($fp, "Authorization: BASIC ".base64_encode("$user:$pass")."\r\n");
+                    }
+
+                    fputs($fp, "\r\n");
+                    while(!feof($fp)) {
+                        $content .= fgets($fp,4096);
+                    }
+                    fclose($fp);
+                    $csplit = split("\r\n\r\n",$content,2);
+
+                    $content = $csplit[1];
+
+                    if(!empty($params['assign_headers'])) {
+                        $smarty->assign($params['assign_headers'],split("\r\n",$csplit[0]));
+                    }
+                }
+            } else {
+                $smarty->_trigger_fatal_error("[plugin] unable to parse URL, check syntax");
+                return;
+            }
+        } else {
+            // ftp fetch
+            if($fp = @fopen($params['file'],'r')) {
+                while(!feof($fp)) {
+                    $content .= fgets ($fp,4096);
+                }
+                fclose($fp);
+            } else {
+                $smarty->_trigger_fatal_error('[plugin] fetch cannot read file \'' . $params['file'] .'\'');
+                return;
+            }
+        }
+
+    }
+
+
+    if (!empty($params['assign'])) {
+        $smarty->assign($params['assign'],$content);
+    } else {
+        return $content;
+    }
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.fetch.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_checkboxes.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_checkboxes.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_checkboxes.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,143 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_checkboxes} function plugin
+ *
+ * File:       function.html_checkboxes.php<br>
+ * Type:       function<br>
+ * Name:       html_checkboxes<br>
+ * Date:       24.Feb.2003<br>
+ * Purpose:    Prints out a list of checkbox input types<br>
+ * Input:<br>
+ *           - name       (optional) - string default "checkbox"
+ *           - values     (required) - array
+ *           - options    (optional) - associative array
+ *           - checked    (optional) - array default not set
+ *           - separator  (optional) - ie <br> or &nbsp;
+ *           - output     (optional) - the output next to each checkbox
+ *           - assign     (optional) - assign the output as an array to this variable
+ * Examples:
+ * <pre>
+ * {html_checkboxes values=$ids output=$names}
+ * {html_checkboxes values=$ids name='box' separator='<br>' output=$names}
+ * {html_checkboxes values=$ids checked=$checked separator='<br>' output=$names}
+ * </pre>
+ * @link http://smarty.php.net/manual/en/language.function.html.checkboxes.php {html_checkboxes}
+ *      (Smarty online manual)
+ * @author     Christopher Kvarme <christopher.kvarme at flashjab.com>
+ * @author credits to Monte Ohrt <monte at ispi.net>
+ * @version    1.0
+ * @param array
+ * @param Smarty
+ * @return string
+ * @uses smarty_function_escape_special_chars()
+ */
+function smarty_function_html_checkboxes($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
+
+    $name = 'checkbox';
+    $values = null;
+    $options = null;
+    $selected = null;
+    $separator = '';
+    $labels = true;
+    $output = null;
+
+    $extra = '';
+
+    foreach($params as $_key => $_val) {
+        switch($_key) {
+            case 'name':
+            case 'separator':
+                $$_key = $_val;
+                break;
+
+            case 'labels':
+                $$_key = (bool)$_val;
+                break;
+
+            case 'options':
+                $$_key = (array)$_val;
+                break;
+
+            case 'values':
+            case 'output':
+                $$_key = array_values((array)$_val);
+                break;
+
+            case 'checked':
+            case 'selected':
+                $selected = array_map('strval', array_values((array)$_val));
+                break;
+
+            case 'checkboxes':
+                $smarty->trigger_error('html_checkboxes: the use of the "checkboxes" attribute is deprecated, use "options" instead', E_USER_WARNING);
+                $options = (array)$_val;
+                break;
+
+            case 'assign':
+                break;
+
+            default:
+                if(!is_array($_val)) {
+                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
+                } else {
+                    $smarty->trigger_error("html_checkboxes: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
+                }
+                break;
+        }
+    }
+
+    if (!isset($options) && !isset($values))
+        return ''; /* raise error here? */
+
+    settype($selected, 'array');
+    $_html_result = array();
+
+    if (is_array($options)) {
+
+        foreach ($options as $_key=>$_val)
+            $_html_result[] = smarty_function_html_checkboxes_output($name, $_key, $_val, $selected, $extra, $separator, $labels);
+
+
+    } else {
+        foreach ($values as $_i=>$_key) {
+            $_val = isset($output[$_i]) ? $output[$_i] : '';
+            $_html_result[] = smarty_function_html_checkboxes_output($name, $_key, $_val, $selected, $extra, $separator, $labels);
+        }
+
+    }
+
+    if(!empty($params['assign'])) {
+        $smarty->assign($params['assign'], $_html_result);
+    } else {
+        return implode("\n",$_html_result);
+    }
+
+}
+
+function smarty_function_html_checkboxes_output($name, $value, $output, $selected, $extra, $separator, $labels) {
+    $_output = '';
+    if ($labels) $_output .= '<label>';
+    $_output .= '<input type="checkbox" name="'
+        . smarty_function_escape_special_chars($name) . '[]" value="'
+        . smarty_function_escape_special_chars($value) . '"';
+
+    if (in_array((string)$value, $selected)) {
+        $_output .= ' checked="checked"';
+    }
+    $_output .= $extra . ' />' . $output;
+    if ($labels) $_output .= '</label>';
+    $_output .=  $separator;
+
+    return $_output;
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_checkboxes.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_image.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_image.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_image.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,142 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_image} function plugin
+ *
+ * Type:     function<br>
+ * Name:     html_image<br>
+ * Date:     Feb 24, 2003<br>
+ * Purpose:  format HTML tags for the image<br>
+ * Input:<br>
+ *         - file = file (and path) of image (required)
+ *         - border = border width (optional, default 0)
+ *         - height = image height (optional, default actual height)
+ *         - image =image width (optional, default actual width)
+ *         - basedir = base directory for absolute paths, default
+ *                     is environment variable DOCUMENT_ROOT
+ *
+ * Examples: {html_image file="images/masthead.gif"}
+ * Output:   <img src="images/masthead.gif" border=0 width=400 height=23>
+ * @link http://smarty.php.net/manual/en/language.function.html.image.php {html_image}
+ *      (Smarty online manual)
+ * @author   Monte Ohrt <monte at ispi.net>
+ * @author credits to Duda <duda at big.hu> - wrote first image function
+ *           in repository, helped with lots of functionality
+ * @version  1.0
+ * @param array
+ * @param Smarty
+ * @return string
+ * @uses smarty_function_escape_special_chars()
+ */
+function smarty_function_html_image($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
+    
+    $alt = '';
+    $file = '';
+    $border = 0;
+    $height = '';
+    $width = '';
+    $extra = '';
+    $prefix = '';
+    $suffix = '';
+    $server_vars = ($smarty->request_use_auto_globals) ? $_SERVER : $GLOBALS['HTTP_SERVER_VARS'];
+    $basedir = isset($server_vars['DOCUMENT_ROOT']) ? $server_vars['DOCUMENT_ROOT'] : '';
+    foreach($params as $_key => $_val) {
+        switch($_key) {
+            case 'file':
+            case 'border':
+            case 'height':
+            case 'width':
+            case 'dpi':
+            case 'basedir':
+                $$_key = $_val;
+                break;
+
+            case 'alt':
+                if(!is_array($_val)) {
+                    $$_key = smarty_function_escape_special_chars($_val);
+                } else {
+                    $smarty->trigger_error("html_image: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
+                }
+                break;
+
+            case 'link':
+            case 'href':
+                $prefix = '<a href="' . $_val . '">';
+                $suffix = '</a>';
+                break;
+
+            default:
+                if(!is_array($_val)) {
+                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
+                } else {
+                    $smarty->trigger_error("html_image: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
+                }
+                break;
+        }
+    }
+
+    if (empty($file)) {
+        $smarty->trigger_error("html_image: missing 'file' parameter", E_USER_NOTICE);
+        return;
+    }
+
+    if (substr($file,0,1) == '/') {
+        $_image_path = $basedir . $file;
+    } else {
+        $_image_path = $file;
+    }
+
+    if(!isset($params['width']) || !isset($params['height'])) {
+        if ($smarty->security &&
+            ($_params = array('resource_type' => 'file', 'resource_name' => $_image_path)) &&
+            (require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.is_secure.php')) &&
+            (!smarty_core_is_secure($_params, $smarty)) ) {
+            $smarty->trigger_error("html_image: (secure) '$_image_path' not in secure directory", E_USER_NOTICE);
+
+        } elseif (!$_image_data = @getimagesize($_image_path)) {
+            if(!file_exists($_image_path)) {
+                $smarty->trigger_error("html_image: unable to find '$_image_path'", E_USER_NOTICE);
+                return;
+            } else if(!is_readable($_image_path)) {
+                $smarty->trigger_error("html_image: unable to read '$_image_path'", E_USER_NOTICE);
+                return;
+            } else {
+                $smarty->trigger_error("html_image: '$_image_path' is not a valid image file", E_USER_NOTICE);
+                return;
+            }
+        }
+
+        if(!isset($params['width'])) {
+            $width = $_image_data[0];
+        }
+        if(!isset($params['height'])) {
+            $height = $_image_data[1];
+        }
+
+    }
+
+    if(isset($params['dpi'])) {
+        if(strstr($server_vars['HTTP_USER_AGENT'], 'Mac')) {
+            $dpi_default = 72;
+        } else {
+            $dpi_default = 96;
+        }
+        $_resize = $dpi_default/$params['dpi'];
+        $width = round($width * $_resize);
+        $height = round($height * $_resize);
+    }
+
+    return $prefix . '<img src="'.$file.'" alt="'.$alt.'" border="'.$border.'" width="'.$width.'" height="'.$height.'"'.$extra.' />' . $suffix;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_image.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_options.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_options.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_options.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,121 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_options} function plugin
+ *
+ * Type:     function<br>
+ * Name:     html_options<br>
+ * Input:<br>
+ *           - name       (optional) - string default "select"
+ *           - values     (required if no options supplied) - array
+ *           - options    (required if no values supplied) - associative array
+ *           - selected   (optional) - string default not set
+ *           - output     (required if not options supplied) - array
+ * Purpose:  Prints the list of <option> tags generated from
+ *           the passed parameters
+ * @link http://smarty.php.net/manual/en/language.function.html.options.php {html_image}
+ *      (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ * @uses smarty_function_escape_special_chars()
+ */
+function smarty_function_html_options($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
+    
+    $name = null;
+    $values = null;
+    $options = null;
+    $selected = array();
+    $output = null;
+    
+    $extra = '';
+    
+    foreach($params as $_key => $_val) {
+        switch($_key) {
+            case 'name':
+                $$_key = (string)$_val;
+                break;
+            
+            case 'options':
+                $$_key = (array)$_val;
+                break;
+                
+            case 'values':
+            case 'output':
+                $$_key = array_values((array)$_val);
+                break;
+
+            case 'selected':
+                $$_key = array_map('strval', array_values((array)$_val));
+                break;
+                
+            default:
+                if(!is_array($_val)) {
+                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
+                } else {
+                    $smarty->trigger_error("html_options: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
+                }
+                break;
+        }
+    }
+
+    if (!isset($options) && !isset($values))
+        return ''; /* raise error here? */
+
+    $_html_result = '';
+
+    if (is_array($options)) {
+        
+        foreach ($options as $_key=>$_val)
+            $_html_result .= smarty_function_html_options_optoutput($_key, $_val, $selected);
+
+    } else {
+        
+        foreach ((array)$values as $_i=>$_key) {
+            $_val = isset($output[$_i]) ? $output[$_i] : '';
+            $_html_result .= smarty_function_html_options_optoutput($_key, $_val, $selected);
+        }
+
+    }
+
+    if(!empty($name)) {
+        $_html_result = '<select name="' . $name . '"' . $extra . '>' . "\n" . $_html_result . '</select>' . "\n";
+    }
+
+    return $_html_result;
+
+}
+
+function smarty_function_html_options_optoutput($key, $value, $selected) {
+    if(!is_array($value)) {
+        $_html_result = '<option label="' . smarty_function_escape_special_chars($value) . '" value="' .
+            smarty_function_escape_special_chars($key) . '"';
+        if (in_array((string)$key, $selected))
+            $_html_result .= ' selected="selected"';
+        $_html_result .= '>' . smarty_function_escape_special_chars($value) . '</option>' . "\n";
+    } else {
+        $_html_result = smarty_function_html_options_optgroup($key, $value, $selected);
+    }
+    return $_html_result;
+}
+
+function smarty_function_html_options_optgroup($key, $values, $selected) {
+    $optgroup_html = '<optgroup label="' . smarty_function_escape_special_chars($key) . '">' . "\n";
+    foreach ($values as $key => $value) {
+        $optgroup_html .= smarty_function_html_options_optoutput($key, $value, $selected);
+    }
+    $optgroup_html .= "</optgroup>\n";
+    return $optgroup_html;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_options.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_radios.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_radios.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_radios.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,145 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_radios} function plugin
+ *
+ * File:       function.html_radios.php<br>
+ * Type:       function<br>
+ * Name:       html_radios<br>
+ * Date:       24.Feb.2003<br>
+ * Purpose:    Prints out a list of radio input types<br>
+ * Input:<br>
+ *           - name       (optional) - string default "radio"
+ *           - values     (required) - array
+ *           - options    (optional) - associative array
+ *           - checked    (optional) - array default not set
+ *           - separator  (optional) - ie <br> or &nbsp;
+ *           - output     (optional) - the output next to each radio button
+ *           - assign     (optional) - assign the output as an array to this variable
+ * Examples:
+ * <pre>
+ * {html_radios values=$ids output=$names}
+ * {html_radios values=$ids name='box' separator='<br>' output=$names}
+ * {html_radios values=$ids checked=$checked separator='<br>' output=$names}
+ * </pre>
+ * @link http://smarty.php.net/manual/en/language.function.html.radios.php {html_radios}
+ *      (Smarty online manual)
+ * @author     Christopher Kvarme <christopher.kvarme at flashjab.com>
+ * @author credits to Monte Ohrt <monte at ispi.net>
+ * @version    1.0
+ * @param array
+ * @param Smarty
+ * @return string
+ * @uses smarty_function_escape_special_chars()
+ */
+function smarty_function_html_radios($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
+   
+    $name = 'radio';
+    $values = null;
+    $options = null;
+    $selected = null;
+    $separator = '';
+    $labels = true;
+    $output = null;
+    $extra = '';
+
+    foreach($params as $_key => $_val) {
+        switch($_key) {
+            case 'name':
+            case 'separator':
+                $$_key = (string)$_val;
+                break;
+
+            case 'checked':
+            case 'selected':
+                if(is_array($_val)) {
+                    $smarty->trigger_error('html_radios: the "' . $_key . '" attribute cannot be an array', E_USER_WARNING);
+                } else {
+                    $selected = (string)$_val;
+                }
+                break;
+
+            case 'labels':
+                $$_key = (bool)$_val;
+                break;
+
+            case 'options':
+                $$_key = (array)$_val;
+                break;
+
+            case 'values':
+            case 'output':
+                $$_key = array_values((array)$_val);
+                break;
+
+            case 'radios':
+                $smarty->trigger_error('html_radios: the use of the "radios" attribute is deprecated, use "options" instead', E_USER_WARNING);
+                $options = (array)$_val;
+                break;
+
+            case 'assign':
+                break;
+
+            default:
+                if(!is_array($_val)) {
+                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
+                } else {
+                    $smarty->trigger_error("html_radios: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
+                }
+                break;
+        }
+    }
+
+    if (!isset($options) && !isset($values))
+        return ''; /* raise error here? */
+
+    $_html_result = array();
+
+    if (isset($options) && is_array($options)) {
+
+        foreach ((array)$options as $_key=>$_val)
+            $_html_result[] = smarty_function_html_radios_output($name, $_key, $_val, $selected, $extra, $separator, $labels);
+
+    } else {
+
+        foreach ((array)$values as $_i=>$_key) {
+            $_val = isset($output[$_i]) ? $output[$_i] : '';
+            $_html_result[] = smarty_function_html_radios_output($name, $_key, $_val, $selected, $extra, $separator, $labels);
+        }
+
+    }
+
+    if(!empty($params['assign'])) {
+        $smarty->assign($params['assign'], $_html_result);
+    } else {
+        return implode("\n",$_html_result);
+    }
+
+}
+
+function smarty_function_html_radios_output($name, $value, $output, $selected, $extra, $separator, $labels) {
+    $_output = '';
+    if ($labels) $_output .= '<label>';
+    $_output .= '<input type="radio" name="'
+        . smarty_function_escape_special_chars($name) . '" value="'
+        . smarty_function_escape_special_chars($value) . '"';
+
+    if ($value==$selected) {
+        $_output .= ' checked="checked"';
+    }
+    $_output .= $extra . ' />' . $output;
+    if ($labels) $_output .= '</label>';
+    $_output .=  $separator;
+
+    return $_output;
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_radios.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_select_date.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_select_date.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_select_date.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,312 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {html_select_date} plugin
+ *
+ * Type:     function<br>
+ * Name:     html_select_date<br>
+ * Purpose:  Prints the dropdowns for date selection.
+ *
+ * ChangeLog:<br>
+ *           - 1.0 initial release
+ *           - 1.1 added support for +/- N syntax for begin
+ *                and end year values. (Monte)
+ *           - 1.2 added support for yyyy-mm-dd syntax for
+ *                time value. (Jan Rosier)
+ *           - 1.3 added support for choosing format for
+ *                month values (Gary Loescher)
+ *           - 1.3.1 added support for choosing format for
+ *                day values (Marcus Bointon)
+ *           - 1.3.2 suppport negative timestamps, force year
+ *             dropdown to include given date unless explicitly set (Monte)
+ * @link http://smarty.php.net/manual/en/language.function.html.select.date.php {html_select_date}
+ *      (Smarty online manual)
+ * @version 1.3.2
+ * @author   Andrei Zmievski
+ * @param array
+ * @param Smarty
+ * @return string
+ */
+function smarty_function_html_select_date($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','make_timestamp');
+    require_once $smarty->_get_plugin_filepath('function','html_options');
+    /* Default values. */
+    $prefix          = "Date_";
+    $start_year      = strftime("%Y");
+    $end_year        = $start_year;
+    $display_days    = true;
+    $display_months  = true;
+    $display_years   = true;
+    $month_format    = "%B";
+    /* Write months as numbers by default  GL */
+    $month_value_format = "%m";
+    $day_format      = "%02d";
+    /* Write day values using this format MB */
+    $day_value_format = "%d";
+    $year_as_text    = false;
+    /* Display years in reverse order? Ie. 2000,1999,.... */
+    $reverse_years   = false;
+    /* Should the select boxes be part of an array when returned from PHP?
+       e.g. setting it to "birthday", would create "birthday[Day]",
+       "birthday[Month]" & "birthday[Year]". Can be combined with prefix */
+    $field_array     = null;
+    /* <select size>'s of the different <select> tags.
+       If not set, uses default dropdown. */
+    $day_size        = null;
+    $month_size      = null;
+    $year_size       = null;
+    /* Unparsed attributes common to *ALL* the <select>/<input> tags.
+       An example might be in the template: all_extra ='class ="foo"'. */
+    $all_extra       = null;
+    /* Separate attributes for the tags. */
+    $day_extra       = null;
+    $month_extra     = null;
+    $year_extra      = null;
+    /* Order in which to display the fields.
+       "D" -> day, "M" -> month, "Y" -> year. */
+    $field_order     = 'MDY';
+    /* String printed between the different fields. */
+    $field_separator = "\n";
+    $time = time();
+    $all_empty       = null;
+    $day_empty       = null;
+    $month_empty     = null;
+    $year_empty      = null;
+
+    foreach ($params as $_key=>$_value) {
+        switch ($_key) {
+            case 'prefix':
+            case 'time':
+            case 'start_year':
+            case 'end_year':
+            case 'month_format':
+            case 'day_format':
+            case 'day_value_format':
+            case 'field_array':
+            case 'day_size':
+            case 'month_size':
+            case 'year_size':
+            case 'all_extra':
+            case 'day_extra':
+            case 'month_extra':
+            case 'year_extra':
+            case 'field_order':
+            case 'field_separator':
+            case 'month_value_format':
+            case 'month_empty':
+            case 'day_empty':
+            case 'year_empty':
+                $$_key = (string)$_value;
+                break;
+
+            case 'all_empty':
+                $$_key = (string)$_value;
+                $day_empty = $month_empty = $year_empty = $all_empty;
+                break;
+
+            case 'display_days':
+            case 'display_months':
+            case 'display_years':
+            case 'year_as_text':
+            case 'reverse_years':
+                $$_key = (bool)$_value;
+                break;
+
+            default:
+                $smarty->trigger_error("[html_select_date] unknown parameter $_key", E_USER_WARNING);
+
+        }
+    }
+
+    if(preg_match('!^-\d+$!',$time)) {
+        // negative timestamp, use date()
+        $time = date('Y-m-d',$time);
+    }
+    // If $time is not in format yyyy-mm-dd
+    if (!preg_match('/^\d{0,4}-\d{0,2}-\d{0,2}$/', $time)) {
+        // use smarty_make_timestamp to get an unix timestamp and
+        // strftime to make yyyy-mm-dd
+        $time = strftime('%Y-%m-%d', smarty_make_timestamp($time));
+    }
+    // Now split this in pieces, which later can be used to set the select
+    $time = explode("-", $time);
+    
+    // make syntax "+N" or "-N" work with start_year and end_year
+    if (preg_match('!^(\+|\-)\s*(\d+)$!', $end_year, $match)) {
+        if ($match[1] == '+') {
+            $end_year = strftime('%Y') + $match[2];
+        } else {
+            $end_year = strftime('%Y') - $match[2];
+        }
+    }
+    if (preg_match('!^(\+|\-)\s*(\d+)$!', $start_year, $match)) {
+        if ($match[1] == '+') {
+            $start_year = strftime('%Y') + $match[2];
+        } else {
+            $start_year = strftime('%Y') - $match[2];
+        }
+    }
+    if($start_year > $time[0] && !isset($params['start_year'])) {
+        // force start year to include given date if not explicitly set
+        $start_year = $time[0];
+    }
+    if($end_year < $time[0] && !isset($params['end_year'])) {
+        // force end year to include given date if not explicitly set
+        $end_year = $time[0];
+    }
+
+    $field_order = strtoupper($field_order);
+
+    $html_result = $month_result = $day_result = $year_result = "";
+
+    if ($display_months) {
+        $month_names = array();
+        $month_values = array();
+        if(isset($month_empty)) {
+            $month_names[''] = $month_empty;
+            $month_values[''] = '';
+        }
+        for ($i = 1; $i <= 12; $i++) {
+            $month_names[$i] = strftime($month_format, mktime(0, 0, 0, $i, 1, 2000));
+            $month_values[$i] = strftime($month_value_format, mktime(0, 0, 0, $i, 1, 2000));
+        }
+
+        $month_result .= '<select name=';
+        if (null !== $field_array){
+            $month_result .= '"' . $field_array . '[' . $prefix . 'Month]"';
+        } else {
+            $month_result .= '"' . $prefix . 'Month"';
+        }
+        if (null !== $month_size){
+            $month_result .= ' size="' . $month_size . '"';
+        }
+        if (null !== $month_extra){
+            $month_result .= ' ' . $month_extra;
+        }
+        if (null !== $all_extra){
+            $month_result .= ' ' . $all_extra;
+        }
+        $month_result .= '>'."\n";
+
+        $month_result .= smarty_function_html_options(array('output'     => $month_names,
+                                                            'values'     => $month_values,
+                                                            'selected'   => $a=$time[1] ? strftime($month_value_format, mktime(0, 0, 0, (int)$time[1], 1, 2000)) : '',
+                                                            'print_result' => false),
+                                                      $smarty);
+        $month_result .= '</select>';
+    }
+
+    if ($display_days) {
+        $days = array();
+        if (isset($day_empty)) {
+            $days[''] = $day_empty;
+            $day_values[''] = '';
+        }
+        for ($i = 1; $i <= 31; $i++) {
+            $days[] = sprintf($day_format, $i);
+            $day_values[] = sprintf($day_value_format, $i);
+        }
+
+        $day_result .= '<select name=';
+        if (null !== $field_array){
+            $day_result .= '"' . $field_array . '[' . $prefix . 'Day]"';
+        } else {
+            $day_result .= '"' . $prefix . 'Day"';
+        }
+        if (null !== $day_size){
+            $day_result .= ' size="' . $day_size . '"';
+        }
+        if (null !== $all_extra){
+            $day_result .= ' ' . $all_extra;
+        }
+        if (null !== $day_extra){
+            $day_result .= ' ' . $day_extra;
+        }
+        $day_result .= '>'."\n";
+        $day_result .= smarty_function_html_options(array('output'     => $days,
+                                                          'values'     => $day_values,
+                                                          'selected'   => $time[2],
+                                                          'print_result' => false),
+                                                    $smarty);
+        $day_result .= '</select>';
+    }
+
+    if ($display_years) {
+        if (null !== $field_array){
+            $year_name = $field_array . '[' . $prefix . 'Year]';
+        } else {
+            $year_name = $prefix . 'Year';
+        }
+        if ($year_as_text) {
+            $year_result .= '<input type="text" name="' . $year_name . '" value="' . $time[0] . '" size="4" maxlength="4"';
+            if (null !== $all_extra){
+                $year_result .= ' ' . $all_extra;
+            }
+            if (null !== $year_extra){
+                $year_result .= ' ' . $year_extra;
+            }
+            $year_result .= '>';
+        } else {
+            $years = range((int)$start_year, (int)$end_year);
+            if ($reverse_years) {
+                rsort($years, SORT_NUMERIC);
+            }
+            $yearvals = $years;
+            if(isset($year_empty)) {
+                array_unshift($years, $year_empty);
+                array_unshift($yearvals, '');
+            }
+            $year_result .= '<select name="' . $year_name . '"';
+            if (null !== $year_size){
+                $year_result .= ' size="' . $year_size . '"';
+            }
+            if (null !== $all_extra){
+                $year_result .= ' ' . $all_extra;
+            }
+            if (null !== $year_extra){
+                $year_result .= ' ' . $year_extra;
+            }
+            $year_result .= '>'."\n";
+            $year_result .= smarty_function_html_options(array('output' => $years,
+                                                               'values' => $yearvals,
+                                                               'selected'   => $time[0],
+                                                               'print_result' => false),
+                                                         $smarty);
+            $year_result .= '</select>';
+        }
+    }
+
+    // Loop thru the field_order field
+    for ($i = 0; $i <= 2; $i++){
+        $c = substr($field_order, $i, 1);
+        switch ($c){
+            case 'D':
+                $html_result .= $day_result;
+                break;
+
+            case 'M':
+                $html_result .= $month_result;
+                break;
+
+            case 'Y':
+                $html_result .= $year_result;
+                break;
+        }
+        // Add the field seperator
+        if($i != 2) {
+            $html_result .= $field_separator;
+        }
+    }
+
+    return $html_result;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_select_date.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_select_time.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_select_time.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_select_time.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,192 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_select_time} function plugin
+ *
+ * Type:     function<br>
+ * Name:     html_select_time<br>
+ * Purpose:  Prints the dropdowns for time selection
+ * @link http://smarty.php.net/manual/en/language.function.html.select.time.php {html_select_time}
+ *          (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ * @uses smarty_make_timestamp()
+ */
+function smarty_function_html_select_time($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','make_timestamp');
+    require_once $smarty->_get_plugin_filepath('function','html_options');
+    /* Default values. */
+    $prefix             = "Time_";
+    $time               = time();
+    $display_hours      = true;
+    $display_minutes    = true;
+    $display_seconds    = true;
+    $display_meridian   = true;
+    $use_24_hours       = true;
+    $minute_interval    = 1;
+    $second_interval    = 1;
+    /* Should the select boxes be part of an array when returned from PHP?
+       e.g. setting it to "birthday", would create "birthday[Hour]",
+       "birthday[Minute]", "birthday[Seconds]" & "birthday[Meridian]".
+       Can be combined with prefix. */
+    $field_array        = null;
+    $all_extra          = null;
+    $hour_extra         = null;
+    $minute_extra       = null;
+    $second_extra       = null;
+    $meridian_extra     = null;
+
+    foreach ($params as $_key=>$_value) {
+        switch ($_key) {
+            case 'prefix':
+            case 'time':
+            case 'field_array':
+            case 'all_extra':
+            case 'hour_extra':
+            case 'minute_extra':
+            case 'second_extra':
+            case 'meridian_extra':
+                $$_key = (string)$_value;
+                break;
+
+            case 'display_hours':
+            case 'display_minutes':
+            case 'display_seconds':
+            case 'display_meridian':
+            case 'use_24_hours':
+                $$_key = (bool)$_value;
+                break;
+
+            case 'minute_interval':
+            case 'second_interval':
+                $$_key = (int)$_value;
+                break;
+
+            default:
+                $smarty->trigger_error("[html_select_time] unknown parameter $_key", E_USER_WARNING);
+        }
+    }
+
+    $time = smarty_make_timestamp($time);
+
+    $html_result = '';
+
+    if ($display_hours) {
+        $hours       = $use_24_hours ? range(0, 23) : range(1, 12);
+        $hour_fmt = $use_24_hours ? '%H' : '%I';
+        for ($i = 0, $for_max = count($hours); $i < $for_max; $i++)
+            $hours[$i] = sprintf('%02d', $hours[$i]);
+        $html_result .= '<select name=';
+        if (null !== $field_array) {
+            $html_result .= '"' . $field_array . '[' . $prefix . 'Hour]"';
+        } else {
+            $html_result .= '"' . $prefix . 'Hour"';
+        }
+        if (null !== $hour_extra){
+            $html_result .= ' ' . $hour_extra;
+        }
+        if (null !== $all_extra){
+            $html_result .= ' ' . $all_extra;
+        }
+        $html_result .= '>'."\n";
+        $html_result .= smarty_function_html_options(array('output'          => $hours,
+                                                           'values'          => $hours,
+                                                           'selected'      => strftime($hour_fmt, $time),
+                                                           'print_result' => false),
+                                                     $smarty);
+        $html_result .= "</select>\n";
+    }
+
+    if ($display_minutes) {
+        $all_minutes = range(0, 59);
+        for ($i = 0, $for_max = count($all_minutes); $i < $for_max; $i+= $minute_interval)
+            $minutes[] = sprintf('%02d', $all_minutes[$i]);
+        $selected = intval(floor(strftime('%M', $time) / $minute_interval) * $minute_interval);
+        $html_result .= '<select name=';
+        if (null !== $field_array) {
+            $html_result .= '"' . $field_array . '[' . $prefix . 'Minute]"';
+        } else {
+            $html_result .= '"' . $prefix . 'Minute"';
+        }
+        if (null !== $minute_extra){
+            $html_result .= ' ' . $minute_extra;
+        }
+        if (null !== $all_extra){
+            $html_result .= ' ' . $all_extra;
+        }
+        $html_result .= '>'."\n";
+        
+        $html_result .= smarty_function_html_options(array('output'          => $minutes,
+                                                           'values'          => $minutes,
+                                                           'selected'      => $selected,
+                                                           'print_result' => false),
+                                                     $smarty);
+        $html_result .= "</select>\n";
+    }
+
+    if ($display_seconds) {
+        $all_seconds = range(0, 59);
+        for ($i = 0, $for_max = count($all_seconds); $i < $for_max; $i+= $second_interval)
+            $seconds[] = sprintf('%02d', $all_seconds[$i]);
+        $selected = intval(floor(strftime('%S', $time) / $second_interval) * $second_interval);
+        $html_result .= '<select name=';
+        if (null !== $field_array) {
+            $html_result .= '"' . $field_array . '[' . $prefix . 'Second]"';
+        } else {
+            $html_result .= '"' . $prefix . 'Second"';
+        }
+        
+        if (null !== $second_extra){
+            $html_result .= ' ' . $second_extra;
+        }
+        if (null !== $all_extra){
+            $html_result .= ' ' . $all_extra;
+        }
+        $html_result .= '>'."\n";
+        
+        $html_result .= smarty_function_html_options(array('output'          => $seconds,
+                                                           'values'          => $seconds,
+                                                           'selected'      => $selected,
+                                                           'print_result' => false),
+                                                     $smarty);
+        $html_result .= "</select>\n";
+    }
+
+    if ($display_meridian && !$use_24_hours) {
+        $html_result .= '<select name=';
+        if (null !== $field_array) {
+            $html_result .= '"' . $field_array . '[' . $prefix . 'Meridian]"';
+        } else {
+            $html_result .= '"' . $prefix . 'Meridian"';
+        }
+        
+        if (null !== $meridian_extra){
+            $html_result .= ' ' . $meridian_extra;
+        }
+        if (null !== $all_extra){
+            $html_result .= ' ' . $all_extra;
+        }
+        $html_result .= '>'."\n";
+        
+        $html_result .= smarty_function_html_options(array('output'          => array('AM', 'PM'),
+                                                           'values'          => array('am', 'pm'),
+                                                           'selected'      => strtolower(strftime('%p', $time)),
+                                                           'print_result' => false),
+                                                     $smarty);
+        $html_result .= "</select>\n";
+    }
+
+    return $html_result;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_select_time.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_table.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_table.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_table.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,136 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_table} function plugin
+ *
+ * Type:     function<br>
+ * Name:     html_table<br>
+ * Date:     Feb 17, 2003<br>
+ * Purpose:  make an html table from an array of data<br>
+ * Input:<br>
+ *         - loop = array to loop through
+ *         - cols = number of columns
+ *         - rows = number of rows
+ *         - table_attr = table attributes
+ *         - tr_attr = table row attributes (arrays are cycled)
+ *         - td_attr = table cell attributes (arrays are cycled)
+ *         - trailpad = value to pad trailing cells with
+ *         - vdir = vertical direction (default: "down", means top-to-bottom)
+ *         - hdir = horizontal direction (default: "right", means left-to-right)
+ *         - inner = inner loop (default "cols": print $loop line by line,
+ *                   $loop will be printed column by column otherwise)
+ *
+ *
+ * Examples:
+ * <pre>
+ * {table loop=$data}
+ * {table loop=$data cols=4 tr_attr='"bgcolor=red"'}
+ * {table loop=$data cols=4 tr_attr=$colors}
+ * </pre>
+ * @author   Monte Ohrt <monte at ispi.net>
+ * @version  1.0
+ * @link http://smarty.php.net/manual/en/language.function.html.table.php {html_table}
+ *          (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ */
+function smarty_function_html_table($params, &$smarty)
+{
+    $table_attr = 'border="1"';
+    $tr_attr = '';
+    $td_attr = '';
+    $cols = 3;
+    $rows = 3;
+    $trailpad = '&nbsp;';
+    $vdir = 'down';
+    $hdir = 'right';
+    $inner = 'cols';
+
+    if (!isset($params['loop'])) {
+        $smarty->trigger_error("html_table: missing 'loop' parameter");
+        return;
+    }
+
+    foreach ($params as $_key=>$_value) {
+        switch ($_key) {
+            case 'loop':
+                $$_key = (array)$_value;
+                break;
+
+            case 'cols':
+            case 'rows':
+                $$_key = (int)$_value;
+                break;
+
+            case 'table_attr':
+            case 'trailpad':
+            case 'hdir':
+            case 'vdir':
+                $$_key = (string)$_value;
+                break;
+
+            case 'tr_attr':
+            case 'td_attr':
+                $$_key = $_value;
+                break;
+        }
+    }
+
+    $loop_count = count($loop);
+    if (empty($params['rows'])) {
+        /* no rows specified */
+        $rows = ceil($loop_count/$cols);
+    } elseif (empty($params['cols'])) {
+        if (!empty($params['rows'])) {
+            /* no cols specified, but rows */
+            $cols = ceil($loop_count/$rows);
+        }
+    }
+
+    $output = "<table $table_attr>\n";
+
+    for ($r=0; $r<$rows; $r++) {
+        $output .= "<tr" . smarty_function_html_table_cycle('tr', $tr_attr, $r) . ">\n";
+        $rx =  ($vdir == 'down') ? $r*$cols : ($rows-1-$r)*$cols;
+
+        for ($c=0; $c<$cols; $c++) {
+            $x =  ($hdir == 'right') ? $rx+$c : $rx+$cols-1-$c;
+            if ($inner!='cols') {
+                /* shuffle x to loop over rows*/
+                $x = floor($x/$cols) + ($x%$cols)*$rows;
+            }
+
+            if ($x<$loop_count) {
+                $output .= "<td" . smarty_function_html_table_cycle('td', $td_attr, $c) . ">" . $loop[$x] . "</td>\n";
+            } else {
+                $output .= "<td" . smarty_function_html_table_cycle('td', $td_attr, $c) . ">$trailpad</td>\n";
+            }
+        }
+        $output .= "</tr>\n";
+    }
+    $output .= "</table>\n";
+    
+    return $output;
+}
+
+function smarty_function_html_table_cycle($name, $var, $no) {
+    if(!is_array($var)) {
+        $ret = $var;
+    } else {
+        $ret = $var[$no % count($var)];
+    }
+    
+    return ($ret) ? ' '.$ret : '';
+}
+
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.html_table.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.mailto.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.mailto.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.mailto.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,143 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {mailto} function plugin
+ *
+ * Type:     function<br>
+ * Name:     mailto<br>
+ * Date:     May 21, 2002
+ * Purpose:  automate mailto address link creation, and optionally
+ *           encode them.<br>
+ * Input:<br>
+ *         - address = e-mail address
+ *         - text = (optional) text to display, default is address
+ *         - encode = (optional) can be one of:
+ *                * none : no encoding (default)
+ *                * javascript : encode with javascript
+ *                * hex : encode with hexidecimal (no javascript)
+ *         - cc = (optional) address(es) to carbon copy
+ *         - bcc = (optional) address(es) to blind carbon copy
+ *         - subject = (optional) e-mail subject
+ *         - newsgroups = (optional) newsgroup(s) to post to
+ *         - followupto = (optional) address(es) to follow up to
+ *         - extra = (optional) extra tags for the href link
+ *
+ * Examples:
+ * <pre>
+ * {mailto address="me at domain.com"}
+ * {mailto address="me at domain.com" encode="javascript"}
+ * {mailto address="me at domain.com" encode="hex"}
+ * {mailto address="me at domain.com" subject="Hello to you!"}
+ * {mailto address="me at domain.com" cc="you at domain.com,they at domain.com"}
+ * {mailto address="me at domain.com" extra='class="mailto"'}
+ * </pre>
+ * @link http://smarty.php.net/manual/en/language.function.mailto.php {mailto}
+ *          (Smarty online manual)
+ * @version  1.2
+ * @author   Monte Ohrt <monte at ispi.net>
+ * @author   credits to Jason Sweat (added cc, bcc and subject functionality)
+ * @param    array
+ * @param    Smarty
+ * @return   string
+ */
+function smarty_function_mailto($params, &$smarty)
+{
+    $extra = '';
+
+    if (empty($params['address'])) {
+        $smarty->trigger_error("mailto: missing 'address' parameter");
+        return;
+    } else {
+        $address = $params['address'];
+    }
+
+    $text = $address;
+
+    // netscape and mozilla do not decode %40 (@) in BCC field (bug?)
+    // so, don't encode it.
+    $mail_parms = array();
+    foreach ($params as $var=>$value) {
+        switch ($var) {
+            case 'cc':
+            case 'bcc':
+            case 'followupto':
+                if (!empty($value))
+                    $mail_parms[] = $var.'='.str_replace('%40','@',rawurlencode($value));
+                break;
+                
+            case 'subject':
+            case 'newsgroups':
+                $mail_parms[] = $var.'='.rawurlencode($value);
+                break;
+
+            case 'extra':
+            case 'text':
+                $$var = $value;
+
+            default:
+        }
+    }
+
+    $mail_parm_vals = '';
+    for ($i=0; $i<count($mail_parms); $i++) {
+        $mail_parm_vals .= (0==$i) ? '?' : '&';
+        $mail_parm_vals .= $mail_parms[$i];
+    }
+    $address .= $mail_parm_vals;
+
+    $encode = (empty($params['encode'])) ? 'none' : $params['encode'];
+    if (!in_array($encode,array('javascript','hex','none')) ) {
+        $smarty->trigger_error("mailto: 'encode' parameter must be none, javascript or hex");
+        return;
+    }
+
+    if ($encode == 'javascript' ) {
+        $string = 'document.write(\'<a href="mailto:'.$address.'" '.$extra.'>'.$text.'</a>\');';
+
+        $js_encode = '';
+        for ($x=0; $x < strlen($string); $x++) {
+            $js_encode .= '%' . bin2hex($string[$x]);
+        }
+
+        return '<script type="text/javascript">eval(unescape(\''.$js_encode.'\'))</script>';
+
+    } elseif ($encode == 'hex') {
+
+        preg_match('!^(.*)(\?.*)$!',$address,$match);
+        if(!empty($match[2])) {
+            $smarty->trigger_error("mailto: hex encoding does not work with extra attributes. Try javascript.");
+            return;
+        }
+        $address_encode = '';
+        for ($x=0; $x < strlen($address); $x++) {
+            if(preg_match('!\w!',$address[$x])) {
+                $address_encode .= '%' . bin2hex($address[$x]);
+            } else {
+                $address_encode .= $address[$x];
+            }
+        }
+        $text_encode = '';
+        for ($x=0; $x < strlen($text); $x++) {
+            $text_encode .= '&#x' . bin2hex($text[$x]).';';
+        }
+
+        $mailto = "&#109;&#97;&#105;&#108;&#116;&#111;&#58;";
+        return '<a href="'.$mailto.$address_encode.'" '.$extra.'>'.$text_encode.'</a>';
+
+    } else {
+        // no encoding
+        return '<a href="mailto:'.$address.'" '.$extra.'>'.$text.'</a>';
+
+    }
+
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.mailto.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.math.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.math.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.math.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,82 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {math} function plugin
+ *
+ * Type:     function<br>
+ * Name:     math<br>
+ * Purpose:  handle math computations in template<br>
+ * @link http://smarty.php.net/manual/en/language.function.math.php {math}
+ *          (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ */
+function smarty_function_math($params, &$smarty)
+{
+    // be sure equation parameter is present
+    if (empty($params['equation'])) {
+        $smarty->trigger_error("math: missing equation parameter");
+        return;
+    }
+
+    $equation = $params['equation'];
+
+    // make sure parenthesis are balanced
+    if (substr_count($equation,"(") != substr_count($equation,")")) {
+        $smarty->trigger_error("math: unbalanced parenthesis");
+        return;
+    }
+
+    // match all vars in equation, make sure all are passed
+    preg_match_all("!\!(0x)([a-zA-Z][a-zA-Z0-9_]*)!",$equation, $match);
+    $allowed_funcs = array('int','abs','ceil','cos','exp','floor','log','log10',
+                           'max','min','pi','pow','rand','round','sin','sqrt','srand','tan');
+    foreach($match[2] as $curr_var) {
+        if (!in_array($curr_var,array_keys($params)) && !in_array($curr_var, $allowed_funcs)) {
+            $smarty->trigger_error("math: parameter $curr_var not passed as argument");
+            return;
+        }
+    }
+
+    foreach($params as $key => $val) {
+        if ($key != "equation" && $key != "format" && $key != "assign") {
+            // make sure value is not empty
+            if (strlen($val)==0) {
+                $smarty->trigger_error("math: parameter $key is empty");
+                return;
+            }
+            if (!is_numeric($val)) {
+                $smarty->trigger_error("math: parameter $key: is not numeric");
+                return;
+            }
+            $equation = preg_replace("/\b$key\b/",$val, $equation);
+        }
+    }
+
+    eval("\$smarty_math_result = ".$equation.";");
+
+    if (empty($params['format'])) {
+        if (empty($params['assign'])) {
+            return $smarty_math_result;
+        } else {
+            $smarty->assign($params['assign'],$smarty_math_result);
+        }
+    } else {
+        if (empty($params['assign'])){
+            printf($params['format'],$smarty_math_result);
+        } else {
+            $smarty->assign($params['assign'],sprintf($params['format'],$smarty_math_result));
+        }
+    }
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.math.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.popup.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.popup.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.popup.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,110 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {popup} function plugin
+ *
+ * Type:     function<br>
+ * Name:     popup<br>
+ * Purpose:  make text pop up in windows via overlib
+ * @link http://smarty.php.net/manual/en/language.function.popup.php {popup}
+ *          (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ */
+function smarty_function_popup($params, &$smarty)
+{
+    $append = '';
+    foreach ($params as $_key=>$_value) {
+        switch ($_key) {
+            case 'text':
+            case 'trigger':
+                $$_key = (string)$_value;
+                break;
+
+            case 'caption':
+            case 'closetext':
+            case 'status':
+                $append .= ',' . strtoupper($_key) . ",'" . str_replace("'","\'",$_value) . "'";
+                break;
+
+            case 'fgcolor':
+            case 'bgcolor':
+            case 'textcolor':
+            case 'capcolor':
+            case 'closecolor':
+            case 'textfont':
+            case 'captionfont':
+            case 'closefont':
+            case 'fgbackground':
+            case 'bgbackground':
+            case 'inarray':
+            case 'caparray':
+            case 'capicon':
+            case 'background':
+            case 'frame':
+            case 'function':
+                $append .= ',' . strtoupper($_key) . ",'$_value'";
+                break;
+
+            case 'textsize':
+            case 'captionsize':
+            case 'closesize':
+            case 'width':
+            case 'height':
+            case 'border':
+            case 'offsetx':
+            case 'offsety':
+            case 'snapx':
+            case 'snapy':
+            case 'fixx':
+            case 'fixy':
+            case 'padx':
+            case 'pady':
+            case 'timeout':
+            case 'delay':
+                $append .= ',' . strtoupper($_key) . ",$_value";
+                break;
+
+            case 'sticky':
+            case 'left':
+            case 'right':
+            case 'center':
+            case 'above':
+            case 'below':
+            case 'noclose':
+            case 'autostatus':
+            case 'autostatuscap':
+            case 'fullhtml':
+            case 'hauto':
+            case 'vauto':
+                if ($_value) $append .= ',' . strtoupper($_key);
+                break;
+
+            default:
+                $smarty->trigger_error("[popup] unknown parameter $_key", E_USER_WARNING);
+        }
+    }
+
+    if (empty($text) && !isset($inarray) && empty($function)) {
+        $smarty->trigger_error("overlib: attribute 'text' or 'inarray' or 'function' required");
+        return false;
+    }
+
+    if (empty($trigger)) { $trigger = "onmouseover"; }
+
+    $retval = $trigger . '="return overlib(\''.preg_replace(array("!'!","![\r\n]!"),array("\'",'\r'),$text).'\'';
+    $retval .= $append . ');" onmouseout="nd();"';
+
+    return $retval;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.popup.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.popup_init.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.popup_init.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.popup_init.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,39 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {popup_init} function plugin
+ *
+ * Type:     function<br>
+ * Name:     popup_init<br>
+ * Purpose:  initialize overlib
+ * @link http://smarty.php.net/manual/en/language.function.popup.init.php {popup_init}
+ *          (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ */
+function smarty_function_popup_init($params, &$smarty)
+{
+    $zindex = 1000;
+    
+    if (!empty($params['zindex'])) {
+        $zindex = $params['zindex'];
+    }
+    
+    if (!empty($params['src'])) {
+        return '<div id="overDiv" style="position:absolute; visibility:hidden; z-index:'.$zindex.';"></div>' . "\n"
+         . '<script type="text/javascript" language="JavaScript" src="'.$params['src'].'"></script>' . "\n";
+    } else {
+        $smarty->trigger_error("popup_init: missing src parameter");
+    }
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.popup_init.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/function.xoops_link.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/function.xoops_link.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/function.xoops_link.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,102 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+/*
+ * Smarty plugin
+ * -------------------------------------------------------------
+ * Type:     function
+ * Name:     xoops_link
+ * Version:  1.0
+ * Author:	 Skalpa Keo <skalpa at xoops.org>
+ * Purpose:  format URL for linking to specific Xoops page
+ * Input:    module	= module to link to (optional, default to current module)
+ *           page	= page to link to (optional, default to current page)
+ *           params	= query string parameters (optional, default to empty)
+ *					ex: urlparm1=,urlparm2,urlparm3=val3, etc.....
+ *						urlparm3 value will be set to val3
+ *						urlparm2 value will keep current one (no = sign)
+ *						urlparm1 value will be set to empty ( = sign, but nothing after)
+ *
+ *			I.e: The template called by 'index.php?cid=5' calls this function with
+ *				{xoops_link page="viewcat.php" urlvars="cid,orderby=titleA"}>
+ *			Then the generated URL will be:
+ *				XOOPS_URL/modules/MODULENAME/viewcat.php?cid=5&orderby=titleA
+ * -------------------------------------------------------------
+ */
+
+function smarty_function_xoops_link($params, $smarty) {
+	$urlstr='';
+	if (isset($params['urlvars'])) {
+		$szvars=explode( '&', $params['urlvars'] );
+		$vars=array();
+		// Split the string making an array from the ('name','value') pairs
+		foreach ($szvars as $szvar) {
+			$pos=strpos($szvar,'=');
+			if ( $pos != false ) {			// If a value is specified, use it
+				$vars[] = array( 'name' => substr($szvar,0,$pos), 'value' => substr($szvar,$pos+1) );
+			} else {						// Otherwise use current one (if any)
+				if ( isset($_POST[$szvar]) ) {
+					$vars[] = array( 'name' => $szvar, 'value' => $_POST[$szvar] );
+				} elseif ( isset($_GET[$szvar]) ) {
+					$vars[] = array( 'name' => $szvar, 'value' => $_GET[$szvar] );
+				}
+			}
+		}
+		// Now reconstruct query string from specified variables
+		foreach ($vars as $var) {
+			$urlstr = "$urlstr&{$var['name']}={$var['value']}";
+		}
+		if ( strlen($urlstr) > 0 ) {
+			$urlstr = '?' . substr( $urlstr, 1 );
+		}
+	}
+
+	// Get default module/page from current ones if necessary
+	$module='';
+	$page='';
+	if ( !isset($params['module']) ) {
+		if ( isset($GLOBALS['xoopsModule']) && is_object($GLOBALS['xoopsModule']) ) {
+			$module = $GLOBALS['xoopsModule']->getVar('dirname');
+		}
+	} else {
+		$module = $params['module'];
+	}
+	if ( !isset($params['page']) ) {
+		$cur = $_SERVER['PHP_SELF'];
+		$page = substr( $cur, strrpos( $cur, '/' ) + 1 );
+	} else {
+		$page = $params['page'];
+	}
+	// Now, return entire link URL :-)
+	if ( empty($module) ) {
+		echo XOOPS_URL . "/$page" . $urlstr;
+	} else {
+		echo XOOPS_URL . "/modules/$module/$page" . $urlstr;
+	}
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/function.xoops_link.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.capitalize.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.capitalize.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.capitalize.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,42 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty capitalize modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     capitalize<br>
+ * Purpose:  capitalize words in the string
+ * @link http://smarty.php.net/manual/en/language.modifiers.php#LANGUAGE.MODIFIER.CAPITALIZE
+ *      capitalize (Smarty online manual)
+ * @param string
+ * @return string
+ */
+function smarty_modifier_capitalize($string, $uc_digits = false)
+{
+    smarty_modifier_capitalize_ucfirst(null, $uc_digits);
+    return preg_replace_callback('!\b\w+\b!', 'smarty_modifier_capitalize_ucfirst', $string);
+}
+
+function smarty_modifier_capitalize_ucfirst($string, $uc_digits = null)
+{
+    static $_uc_digits = false;
+    
+    if(isset($uc_digits)) {
+        $_uc_digits = $uc_digits;
+        return;
+    }
+    
+    if(!preg_match('!\d!',$string[0]) || $_uc_digits)
+        return ucfirst($string[0]);
+    else
+        return $string[0];
+}
+
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.capitalize.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.cat.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.cat.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.cat.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,33 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty cat modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     cat<br>
+ * Date:     Feb 24, 2003
+ * Purpose:  catenate a value to a variable
+ * Input:    string to catenate
+ * Example:  {$var|cat:"foo"}
+ * @link http://smarty.php.net/manual/en/language.modifier.cat.php cat
+ *          (Smarty online manual)
+ * @author   Monte Ohrt <monte at ispi.net>
+ * @version 1.0
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_cat($string, $cat)
+{
+    return $string . $cat;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.cat.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_characters.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_characters.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_characters.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,31 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty count_characters modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     count_characteres<br>
+ * Purpose:  count the number of characters in a text
+ * @link http://smarty.php.net/manual/en/language.modifier.count.characters.php
+ *          count_characters (Smarty online manual)
+ * @param string
+ * @param boolean include whitespace in the character count
+ * @return integer
+ */
+function smarty_modifier_count_characters($string, $include_spaces = false)
+{
+    if ($include_spaces)
+       return(strlen($string));
+
+    return preg_match_all("/[^\s]/",$string, $match);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_characters.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_paragraphs.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_paragraphs.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_paragraphs.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,28 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty count_paragraphs modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     count_paragraphs<br>
+ * Purpose:  count the number of paragraphs in a text
+ * @link http://smarty.php.net/manual/en/language.modifier.count.paragraphs.php
+ *          count_paragraphs (Smarty online manual)
+ * @param string
+ * @return integer
+ */
+function smarty_modifier_count_paragraphs($string)
+{
+    // count \r or \n characters
+    return count(preg_split('/[\r\n]+/', $string));
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_paragraphs.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_sentences.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_sentences.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_sentences.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,28 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty count_sentences modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     count_sentences
+ * Purpose:  count the number of sentences in a text
+ * @link http://smarty.php.net/manual/en/language.modifier.count.paragraphs.php
+ *          count_sentences (Smarty online manual)
+ * @param string
+ * @return integer
+ */
+function smarty_modifier_count_sentences($string)
+{
+    // find periods with a word before but not after.
+    return preg_match_all('/[^\s]\.(?!\w)/', $string, $match);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_sentences.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_words.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_words.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_words.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,32 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty count_words modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     count_words<br>
+ * Purpose:  count the number of words in a text
+ * @link http://smarty.php.net/manual/en/language.modifier.count.words.php
+ *          count_words (Smarty online manual)
+ * @param string
+ * @return integer
+ */
+function smarty_modifier_count_words($string)
+{
+    // split text by ' ',\r,\n,\f,\t
+    $split_array = preg_split('/\s+/',$string);
+    // count matches that contain alphanumerics
+    $word_count = preg_grep('/[a-zA-Z0-9\\x80-\\xff]/', $split_array);
+
+    return count($word_count);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.count_words.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.date_format.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.date_format.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.date_format.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,48 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Include the {@link shared.make_timestamp.php} plugin
+ */
+require_once $smarty->_get_plugin_filepath('shared','make_timestamp');
+/**
+ * Smarty date_format modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     date_format<br>
+ * Purpose:  format datestamps via strftime<br>
+ * Input:<br>
+ *         - string: input date string
+ *         - format: strftime format for output
+ *         - default_date: default date if $string is empty
+ * @link http://smarty.php.net/manual/en/language.modifier.date.format.php
+ *          date_format (Smarty online manual)
+ * @param string
+ * @param string
+ * @param string
+ * @return string|void
+ * @uses smarty_make_timestamp()
+ */
+function smarty_modifier_date_format($string, $format="%b %e, %Y", $default_date=null)
+{
+    if (substr(PHP_OS,0,3) == 'WIN') {
+           $_win_from = array ('%e',  '%T',       '%D');
+           $_win_to   = array ('%#d', '%H:%M:%S', '%m/%d/%y');
+           $format = str_replace($_win_from, $_win_to, $format);
+    }
+    if($string != '') {
+        return strftime($format, smarty_make_timestamp($string));
+    } elseif (isset($default_date) && $default_date != '') {
+        return strftime($format, smarty_make_timestamp($default_date));
+    } else {
+        return;
+    }
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.date_format.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.debug_print_var.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.debug_print_var.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.debug_print_var.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,56 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty debug_print_var modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     debug_print_var<br>
+ * Purpose:  formats variable contents for display in the console
+ * @link http://smarty.php.net/manual/en/language.modifier.debug.print.var.php
+ *          debug_print_var (Smarty online manual)
+ * @param array|object
+ * @param integer
+ * @param integer
+ * @return string
+ */
+function smarty_modifier_debug_print_var($var, $depth = 0, $length = 40)
+{
+    $_replace = array("\n"=>'<i>&#92;n</i>', "\r"=>'<i>&#92;r</i>', "\t"=>'<i>&#92;t</i>');
+    if (is_array($var)) {
+        $results = "<b>Array (".count($var).")</b>";
+        foreach ($var as $curr_key => $curr_val) {
+            $return = smarty_modifier_debug_print_var($curr_val, $depth+1, $length);
+            $results .= "<br>".str_repeat('&nbsp;', $depth*2)."<b>".strtr($curr_key, $_replace)."</b> =&gt; $return";
+        }
+    } else if (is_object($var)) {
+        $object_vars = get_object_vars($var);
+        $results = "<b>".get_class($var)." Object (".count($object_vars).")</b>";
+        foreach ($object_vars as $curr_key => $curr_val) {
+            $return = smarty_modifier_debug_print_var($curr_val, $depth+1, $length);
+            $results .= "<br>".str_repeat('&nbsp;', $depth*2)."<b>$curr_key</b> =&gt; $return";
+        }
+    } else if (is_resource($var)) {
+        $results = '<i>'.(string)$var.'</i>';
+    } else if (empty($var) && $var != "0") {
+        $results = '<i>empty</i>';
+    } else {
+        if (strlen($var) > $length ) {
+            $results = substr($var, 0, $length-3).'...';
+        } else {
+            $results = $var;
+        }
+        $results = htmlspecialchars($results);
+        $results = strtr($results, $_replace);
+    }
+    return $results;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.debug_print_var.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.default.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.default.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.default.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,31 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty default modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     default<br>
+ * Purpose:  designate default value for empty variables
+ * @link http://smarty.php.net/manual/en/language.modifier.default.php
+ *          default (Smarty online manual)
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_default($string, $default = '')
+{
+    if (!isset($string) || $string === '')
+        return $default;
+    else
+        return $string;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.default.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.escape.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.escape.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.escape.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,89 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty escape modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     escape<br>
+ * Purpose:  Escape the string according to escapement type
+ * @link http://smarty.php.net/manual/en/language.modifier.escape.php
+ *          escape (Smarty online manual)
+ * @param string
+ * @param html|htmlall|url|quotes|hex|hexentity|javascript
+ * @return string
+ */
+function smarty_modifier_escape($string, $esc_type = 'html')
+{
+    switch ($esc_type) {
+        case 'html':
+            return htmlspecialchars($string, ENT_QUOTES);
+
+        case 'htmlall':
+            return htmlentities($string, ENT_QUOTES);
+
+        case 'url':
+            return urlencode($string);
+
+        case 'quotes':
+            // escape unescaped single quotes
+            return preg_replace("%(?<!\\\\)'%", "\\'", $string);
+
+        case 'hex':
+            // escape every character into hex
+            $return = '';
+            for ($x=0; $x < strlen($string); $x++) {
+                $return .= '%' . bin2hex($string[$x]);
+            }
+            return $return;
+            
+        case 'hexentity':
+            $return = '';
+            for ($x=0; $x < strlen($string); $x++) {
+                $return .= '&#x' . bin2hex($string[$x]) . ';';
+            }
+            return $return;
+
+        case 'decentity':
+            $return = '';
+            for ($x=0; $x < strlen($string); $x++) {
+                $return .= '&#' . ord($string[$x]) . ';';
+            }
+            return $return;
+
+        case 'javascript':
+            // escape quotes and backslashes, newlines, etc.
+            return strtr($string, array('\\'=>'\\\\',"'"=>"\\'",'"'=>'\\"',"\r"=>'\\r',"\n"=>'\\n','</'=>'<\/'));
+            
+        case 'mail':
+            // safe way to display e-mail address on a web page
+            return str_replace(array('@', '.'),array(' [AT] ', ' [DOT] '), $string);
+            
+        case 'nonstd':
+           // escape non-standard chars, such as ms document quotes
+           $_res = '';
+           for($_i = 0, $_len = strlen($string); $_i < $_len; $_i++) {
+               $_ord = ord($string{$_i});
+               // non-standard char, escape it
+               if($_ord >= 126){
+                   $_res .= '&#' . $_ord . ';';
+               }
+               else {
+                   $_res .= $string{$_i};
+               }
+           }
+           return $_res;
+
+        default:
+            return $string;
+    }
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.escape.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.indent.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.indent.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.indent.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,27 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty indent modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     indent<br>
+ * Purpose:  indent lines of text
+ * @link http://smarty.php.net/manual/en/language.modifier.indent.php
+ *          indent (Smarty online manual)
+ * @param string
+ * @param integer
+ * @param string
+ * @return string
+ */
+function smarty_modifier_indent($string,$chars=4,$char=" ")
+{
+    return preg_replace('!^!m',str_repeat($char,$chars),$string);
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.indent.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.lower.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.lower.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.lower.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,25 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty lower modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     lower<br>
+ * Purpose:  convert string to lowercase
+ * @link http://smarty.php.net/manual/en/language.modifier.lower.php
+ *          lower (Smarty online manual)
+ * @param string
+ * @return string
+ */
+function smarty_modifier_lower($string)
+{
+    return strtolower($string);
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.lower.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.nl2br.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.nl2br.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.nl2br.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,35 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty plugin
+ *
+ * Type:     modifier<br>
+ * Name:     nl2br<br>
+ * Date:     Feb 26, 2003
+ * Purpose:  convert \r\n, \r or \n to <<br>>
+ * Input:<br>
+ *         - contents = contents to replace
+ *         - preceed_test = if true, includes preceeding break tags
+ *           in replacement
+ * Example:  {$text|nl2br}
+ * @link http://smarty.php.net/manual/en/language.modifier.nl2br.php
+ *          nl2br (Smarty online manual)
+ * @version  1.0
+ * @author   Monte Ohrt <monte at ispi.net>
+ * @param string
+ * @return string
+ */
+function smarty_modifier_nl2br($string)
+{
+    return nl2br($string);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.nl2br.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.regex_replace.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.regex_replace.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.regex_replace.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,29 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty regex_replace modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     regex_replace<br>
+ * Purpose:  regular epxression search/replace
+ * @link http://smarty.php.net/manual/en/language.modifier.regex.replace.php
+ *          regex_replace (Smarty online manual)
+ * @param string
+ * @param string|array
+ * @param string|array
+ * @return string
+ */
+function smarty_modifier_regex_replace($string, $search, $replace)
+{
+    return preg_replace($search, $replace, $string);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.regex_replace.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.replace.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.replace.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.replace.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,29 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty replace modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     replace<br>
+ * Purpose:  simple search/replace
+ * @link http://smarty.php.net/manual/en/language.modifier.replace.php
+ *          replace (Smarty online manual)
+ * @param string
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_replace($string, $search, $replace)
+{
+    return str_replace($search, $replace, $string);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.replace.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.spacify.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.spacify.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.spacify.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,29 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty spacify modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     spacify<br>
+ * Purpose:  add spaces between characters in a string
+ * @link http://smarty.php.net/manual/en/language.modifier.spacify.php
+ *          spacify (Smarty online manual)
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_spacify($string, $spacify_char = ' ')
+{
+    return implode($spacify_char,
+                   preg_split('//', $string, -1, PREG_SPLIT_NO_EMPTY));
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.spacify.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.string_format.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.string_format.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.string_format.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,28 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty string_format modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     string_format<br>
+ * Purpose:  format strings via sprintf
+ * @link http://smarty.php.net/manual/en/language.modifier.string.format.php
+ *          string_format (Smarty online manual)
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_string_format($string, $format)
+{
+    return sprintf($format, $string);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.string_format.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.strip.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.strip.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.strip.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,33 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty strip modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     strip<br>
+ * Purpose:  Replace all repeated spaces, newlines, tabs
+ *           with a single space or supplied replacement string.<br>
+ * Example:  {$var|strip} {$var|strip:"&nbsp;"}
+ * Date:     September 25th, 2002
+ * @link http://smarty.php.net/manual/en/language.modifier.strip.php
+ *          strip (Smarty online manual)
+ * @author   Monte Ohrt <monte at ispi.net>
+ * @version  1.0
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_strip($text, $replace = ' ')
+{
+    return preg_replace('!\s+!', $replace, $text);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.strip.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.strip_tags.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.strip_tags.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.strip_tags.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,31 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty strip_tags modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     strip_tags<br>
+ * Purpose:  strip html tags from text
+ * @link http://smarty.php.net/manual/en/language.modifier.strip.tags.php
+ *          strip_tags (Smarty online manual)
+ * @param string
+ * @param boolean
+ * @return string
+ */
+function smarty_modifier_strip_tags($string, $replace_with_space = true)
+{
+    if ($replace_with_space)
+        return preg_replace('!<[^>]*?>!', ' ', $string);
+    else
+        return strip_tags($string);
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.strip_tags.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.truncate.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.truncate.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.truncate.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,43 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty truncate modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     truncate<br>
+ * Purpose:  Truncate a string to a certain length if necessary,
+ *           optionally splitting in the middle of a word, and
+ *           appending the $etc string.
+ * @link http://smarty.php.net/manual/en/language.modifier.truncate.php
+ *          truncate (Smarty online manual)
+ * @param string
+ * @param integer
+ * @param string
+ * @param boolean
+ * @return string
+ */
+function smarty_modifier_truncate($string, $length = 80, $etc = '...',
+                                  $break_words = false)
+{
+    if ($length == 0)
+        return '';
+
+    if (strlen($string) > $length) {
+        $length -= strlen($etc);
+        if (!$break_words)
+            $string = preg_replace('/\s+?(\S+)?$/', '', substr($string, 0, $length+1));
+      
+        return substr($string, 0, $length).$etc;
+    } else
+        return $string;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.truncate.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.upper.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.upper.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.upper.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,25 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty upper modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     upper<br>
+ * Purpose:  convert string to uppercase
+ * @link http://smarty.php.net/manual/en/language.modifier.upper.php
+ *          upper (Smarty online manual)
+ * @param string
+ * @return string
+ */
+function smarty_modifier_upper($string)
+{
+    return strtoupper($string);
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.upper.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.wordwrap.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.wordwrap.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.wordwrap.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,28 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty wordwrap modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     wordwrap<br>
+ * Purpose:  wrap a string of text at a given length
+ * @link http://smarty.php.net/manual/en/language.modifier.wordwrap.php
+ *          wordwrap (Smarty online manual)
+ * @param string
+ * @param integer
+ * @param string
+ * @param boolean
+ * @return string
+ */
+function smarty_modifier_wordwrap($string,$length=80,$break="\n",$cut=false)
+{
+    return wordwrap($string,$length,$break,$cut);
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/modifier.wordwrap.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/outputfilter.trimwhitespace.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/outputfilter.trimwhitespace.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/outputfilter.trimwhitespace.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,75 @@
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty trimwhitespace outputfilter plugin
+ *
+ * File:     outputfilter.trimwhitespace.php<br>
+ * Type:     outputfilter<br>
+ * Name:     trimwhitespace<br>
+ * Date:     Jan 25, 2003<br>
+ * Purpose:  trim leading white space and blank lines from
+ *           template source after it gets interpreted, cleaning
+ *           up code and saving bandwidth. Does not affect
+ *           <<PRE>></PRE> and <SCRIPT></SCRIPT> blocks.<br>
+ * Install:  Drop into the plugin directory, call
+ *           <code>$smarty->load_filter('output','trimwhitespace');</code>
+ *           from application.
+ * @author   Monte Ohrt <monte at ispi.net>
+ * @author Contributions from Lars Noschinski <lars at usenet.noschinski.de>
+ * @version  1.3
+ * @param string
+ * @param Smarty
+ */
+function smarty_outputfilter_trimwhitespace($source, &$smarty)
+{
+    // Pull out the script blocks
+    preg_match_all("!<script[^>]+>.*?</script>!is", $source, $match);
+    $_script_blocks = $match[0];
+    $source = preg_replace("!<script[^>]+>.*?</script>!is",
+                           '@@@SMARTY:TRIM:SCRIPT@@@', $source);
+
+    // Pull out the pre blocks
+    preg_match_all("!<pre>.*?</pre>!is", $source, $match);
+    $_pre_blocks = $match[0];
+    $source = preg_replace("!<pre>.*?</pre>!is",
+                           '@@@SMARTY:TRIM:PRE@@@', $source);
+
+    // Pull out the textarea blocks
+    preg_match_all("!<textarea[^>]+>.*?</textarea>!is", $source, $match);
+    $_textarea_blocks = $match[0];
+    $source = preg_replace("!<textarea[^>]+>.*?</textarea>!is",
+                           '@@@SMARTY:TRIM:TEXTAREA@@@', $source);
+
+    // remove all leading spaces, tabs and carriage returns NOT
+    // preceeded by a php close tag.
+    $source = trim(preg_replace('/((?<!\?>)\n)[\s]+/m', '\1', $source));
+
+    // replace script blocks
+    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:SCRIPT@@@",$_script_blocks, $source);
+
+    // replace pre blocks
+    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:PRE@@@",$_pre_blocks, $source);
+
+    // replace textarea blocks
+    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:TEXTAREA@@@",$_textarea_blocks, $source);
+
+    return $source;
+}
+
+function smarty_outputfilter_trimwhitespace_replace($search_str, $replace, &$subject) {
+    $_len = strlen($search_str);
+    $_pos = 0;
+    for ($_i=0, $_count=count($replace); $_i<$_count; $_i++)
+        if (($_pos=strpos($subject, $search_str, $_pos))!==false)
+            $subject = substr_replace($subject, $replace[$_i], $_pos, $_len);
+        else
+            break;
+
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/outputfilter.trimwhitespace.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/resource.db.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/resource.db.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/resource.db.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,123 @@
+<?php
+/*
+ * Smarty plugin
+ * ------------------------------------------------------------- 
+ * File:     resource.db.php
+ * Type:     resource
+ * Name:     db
+ * Purpose:  Fetches templates from a database
+ * -------------------------------------------------------------
+ */
+function smarty_resource_db_source($tpl_name, &$tpl_source, &$smarty)
+{
+    $tplfile_handler =& xoops_gethandler('tplfile');
+	$tplobj =& $tplfile_handler->find($GLOBALS['xoopsConfig']['template_set'], null, null, null, $tpl_name, true);
+	if (count($tplobj) > 0) {
+		if (false != $smarty->xoops_canUpdateFromFile()) {
+			$conf_theme = isset($GLOBALS['xoopsConfig']['theme_set']) ? $GLOBALS['xoopsConfig']['theme_set'] : 'default';
+			if ($conf_theme != 'default') {
+				switch ($tplobj[0]->getVar('tpl_type')) {
+					case 'module':
+						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/'.$tpl_name;
+						break;
+					case 'block':
+						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/blocks/'.$tpl_name;
+						break;
+					default:
+						$filepath = "";
+						break;
+				}
+			} else {
+				switch ($tplobj[0]->getVar('tpl_type')) {
+					case 'module':
+						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/'.$tpl_name;
+						break;
+					case 'block':
+						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/blocks/'.$tpl_name;
+						break;
+					default:
+						$filepath = "";
+						break;
+				}
+			}
+			if ($filepath != "" && file_exists($filepath)) {
+				$file_modified = filemtime($filepath);
+				if ($file_modified > $tplobj[0]->getVar('tpl_lastmodified')) {
+					if (false != $fp = fopen($filepath, 'r')) {
+						$filesource = fread($fp, filesize($filepath));
+    					fclose($fp);
+						$tplobj[0]->setVar('tpl_source', $filesource, true);
+						$tplobj[0]->setVar('tpl_lastmodified', time());
+						$tplobj[0]->setVar('tpl_lastimported', time());
+    					$tplfile_handler->forceUpdate($tplobj[0]);
+						$tpl_source = $filesource;
+        				return true;
+					}
+				}
+			}
+		}
+        $tpl_source = $tplobj[0]->getVar('tpl_source');
+        return true;
+    } else {
+		return false;
+	}
+}
+
+function smarty_resource_db_timestamp($tpl_name, &$tpl_timestamp, &$smarty)
+{
+    $tplfile_handler =& xoops_gethandler('tplfile');
+    $tplobj =& $tplfile_handler->find($GLOBALS['xoopsConfig']['template_set'], null, null, null, $tpl_name, false);
+	if (count($tplobj) > 0) {
+		if (false != $smarty->xoops_canUpdateFromFile()) {
+			$conf_theme = isset($GLOBALS['xoopsConfig']['theme_set']) ? $GLOBALS['xoopsConfig']['theme_set'] : 'default';
+			if ($conf_theme != 'default') {
+				switch ($tplobj[0]->getVar('tpl_type')) {
+					case 'module':
+						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/'.$tpl_name;
+						break;
+					case 'block':
+						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/blocks/'.$tpl_name;
+						break;
+					default:
+						$filepath = "";
+						break;
+				}
+			} else {
+				switch ($tplobj[0]->getVar('tpl_type')) {
+					case 'module':
+						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/'.$tpl_name;
+						break;
+					case 'block':
+						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/blocks/'.$tpl_name;
+						break;
+					default:
+						$filepath = "";
+						break;
+				}
+			}
+			if ($filepath != "" && file_exists($filepath)) {
+				$file_modified = filemtime($filepath);
+				if ($file_modified > $tplobj[0]->getVar('tpl_lastmodified')) {
+					$tpl_timestamp = $file_modified;
+					return true;
+				}
+			}
+		}
+        $tpl_timestamp = $tplobj[0]->getVar('tpl_lastmodified');
+        return true;
+    } else {
+		return false;
+	}
+}
+
+function smarty_resource_db_secure($tpl_name, &$smarty)
+{
+    // assume all templates are secure
+    return true;
+}
+
+function smarty_resource_db_trusted($tpl_name, &$smarty)
+{
+    // not used for templates
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/resource.db.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/shared.escape_special_chars.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/shared.escape_special_chars.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/shared.escape_special_chars.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,30 @@
+<?php
+/**
+ * Smarty shared plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * escape_special_chars common function
+ *
+ * Function: smarty_function_escape_special_chars<br>
+ * Purpose:  used by other smarty functions to escape
+ *           special chars except for already escaped ones
+ * @param string
+ * @return string
+ */
+function smarty_function_escape_special_chars($string)
+{
+    if(!is_array($string)) {
+        $string = preg_replace('!&(#?\w+);!', '%%%SMARTY_START%%%\\1%%%SMARTY_END%%%', $string);
+        $string = htmlspecialchars($string);
+        $string = str_replace(array('%%%SMARTY_START%%%','%%%SMARTY_END%%%'), array('&',';'), $string);
+    }
+    return $string;
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/shared.escape_special_chars.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/smarty/plugins/shared.make_timestamp.php
===================================================================
--- XoopsCore/trunk/htdocs/class/smarty/plugins/shared.make_timestamp.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/smarty/plugins/shared.make_timestamp.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,43 @@
+<?php
+/**
+ * Smarty shared plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Function: smarty_make_timestamp<br>
+ * Purpose:  used by other smarty functions to make a timestamp
+ *           from a string.
+ * @param string
+ * @return string
+ */
+function smarty_make_timestamp($string)
+{
+    if(empty($string)) {
+        $string = "now";
+    }
+    $time = strtotime($string);
+    if (is_numeric($time) && $time != -1)
+        return $time;
+
+    // is mysql timestamp format of YYYYMMDDHHMMSS?
+    if (preg_match('/^\d{14}$/', $string)) {
+        $time = mktime(substr($string,8,2),substr($string,10,2),substr($string,12,2),
+               substr($string,4,2),substr($string,6,2),substr($string,0,4));
+
+        return $time;
+    }
+
+    // couldn't recognize it, try to return a time
+    $time = (int) $string;
+    if ($time > 0)
+        return $time;
+    else
+        return time();
+}
+
+/* vim: set expandtab: */
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/smarty/plugins/shared.make_timestamp.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/snoopy.php
===================================================================
--- XoopsCore/trunk/htdocs/class/snoopy.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/snoopy.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,1218 @@
+<?php
+
+/*************************************************
+
+Snoopy - the PHP net client
+Author: Monte Ohrt <monte at ispi.net>
+Copyright (c): 1999-2000 ispi, all rights reserved
+Version: 1.01
+
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+You may contact the author of Snoopy by e-mail at:
+monte at ispi.net
+
+Or, write to:
+Monte Ohrt
+CTO, ispi
+237 S. 70th suite 220
+Lincoln, NE 68510
+
+The latest version of Snoopy can be obtained from:
+http://snoopy.sourceforge.com
+
+*************************************************/
+
+class Snoopy
+{
+	/**** Public variables ****/
+	
+	/* user definable vars */
+
+	var $host			=	"www.php.net";		// host name we are connecting to
+	var $port			=	80;					// port we are connecting to
+	var $proxy_host		=	"";					// proxy host to use
+	var $proxy_port		=	"";					// proxy port to use
+	var $agent			=	"Snoopy v1.01";		// agent we masquerade as
+	var	$referer		=	"";					// referer info to pass
+	var $cookies		=	array();			// array of cookies to pass
+												// $cookies["username"]="joe";
+	var	$rawheaders		=	array();			// array of raw headers to send
+												// $rawheaders["Content-type"]="text/html";
+
+	var $maxredirs		=	5;					// http redirection depth maximum. 0 = disallow
+	var $lastredirectaddr	=	"";				// contains address of last redirected address
+	var	$offsiteok		=	true;				// allows redirection off-site
+	var $maxframes		=	0;					// frame content depth maximum. 0 = disallow
+	var $expandlinks	=	true;				// expand links to fully qualified URLs.
+												// this only applies to fetchlinks()
+												// or submitlinks()
+	var $passcookies	=	true;				// pass set cookies back through redirects
+												// NOTE: this currently does not respect
+												// dates, domains or paths.
+	
+	var	$user			=	"";					// user for http authentication
+	var	$pass			=	"";					// password for http authentication
+	
+	// http accept types
+	var $accept			=	"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*";
+	
+	var $results		=	"";					// where the content is put
+		
+	var $error			=	"";					// error messages sent here
+	var	$response_code	=	"";					// response code returned from server
+	var	$headers		=	array();			// headers returned from server sent here
+	var	$maxlength		=	500000;				// max return data length (body)
+	var $read_timeout	=	0;					// timeout on read operations, in seconds
+												// supported only since PHP 4 Beta 4
+												// set to 0 to disallow timeouts
+	var $timed_out		=	false;				// if a read operation timed out
+	var	$status			=	0;					// http request status
+	
+	var	$curl_path		=	"/usr/local/bin/curl";
+												// Snoopy will use cURL for fetching
+												// SSL content if a full system path to
+												// the cURL binary is supplied here.
+												// set to false if you do not have
+												// cURL installed. See http://curl.haxx.se
+												// for details on installing cURL.
+												// Snoopy does *not* use the cURL
+												// library functions built into php,
+												// as these functions are not stable
+												// as of this Snoopy release.
+	
+	/**** Private variables ****/	
+	
+	var	$_maxlinelen	=	4096;				// max line length (headers)
+	
+	var $_httpmethod	=	"GET";				// default http request method
+	var $_httpversion	=	"HTTP/1.0";			// default http request version
+	var $_submit_method	=	"POST";				// default submit method
+	var $_submit_type	=	"application/x-www-form-urlencoded";	// default submit type
+	var $_mime_boundary	=   "";					// MIME boundary for multipart/form-data submit type
+	var $_redirectaddr	=	false;				// will be set if page fetched is a redirect
+	var $_redirectdepth	=	0;					// increments on an http redirect
+	var $_frameurls		= 	array();			// frame src urls
+	var $_framedepth	=	0;					// increments on frame depth
+	
+	var $_isproxy		=	false;				// set if using a proxy server
+	var $_fp_timeout	=	30;					// timeout for socket connection
+
+/*======================================================================*\
+	Function:	fetch
+	Purpose:	fetch the contents of a web page
+				(and possibly other protocols in the
+				future like ftp, nntp, gopher, etc.)
+	Input:		$URI	the location of the page to fetch
+	Output:		$this->results	the output text from the fetch
+\*======================================================================*/
+
+	function fetch($URI)
+	{
+	
+		//preg_match("|^([^:]+)://([^:/]+)(:[\d]+)*(.*)|",$URI,$URI_PARTS);
+		$URI_PARTS = parse_url($URI);
+		if (!empty($URI_PARTS["user"]))
+			$this->user = $URI_PARTS["user"];
+		if (!empty($URI_PARTS["pass"]))
+			$this->pass = $URI_PARTS["pass"];
+				
+		switch($URI_PARTS["scheme"])
+		{
+			case "http":
+				$this->host = $URI_PARTS["host"];
+				if(!empty($URI_PARTS["port"]))
+					$this->port = $URI_PARTS["port"];
+				if($this->_connect($fp))
+				{
+					if($this->_isproxy)
+					{
+						// using proxy, send entire URI
+						$this->_httprequest($URI,$fp,$URI,$this->_httpmethod);
+					}
+					else
+					{
+						$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
+						// no proxy, send only the path
+						$this->_httprequest($path, $fp, $URI, $this->_httpmethod);
+					}
+					
+					$this->_disconnect($fp);
+
+					if($this->_redirectaddr)
+					{
+						/* url was redirected, check if we've hit the max depth */
+						if($this->maxredirs > $this->_redirectdepth)
+						{
+							// only follow redirect if it's on this site, or offsiteok is true
+							if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
+							{
+								/* follow the redirect */
+								$this->_redirectdepth++;
+								$this->lastredirectaddr=$this->_redirectaddr;
+								$this->fetch($this->_redirectaddr);
+							}
+						}
+					}
+
+					if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
+					{
+						$frameurls = $this->_frameurls;
+						$this->_frameurls = array();
+						
+						while(list(,$frameurl) = each($frameurls))
+						{
+							if($this->_framedepth < $this->maxframes)
+							{
+								$this->fetch($frameurl);
+								$this->_framedepth++;
+							}
+							else
+								break;
+						}
+					}					
+				}
+				else
+				{
+					return false;
+				}
+				return true;					
+				break;
+			case "https":
+				if(!$this->curl_path || (!is_executable($this->curl_path)))
+					return false;
+				$this->host = $URI_PARTS["host"];
+				if(!empty($URI_PARTS["port"]))
+					$this->port = $URI_PARTS["port"];
+				if($this->_isproxy)
+				{
+					// using proxy, send entire URI
+					$this->_httpsrequest($URI,$URI,$this->_httpmethod);
+				}
+				else
+				{
+					$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
+					// no proxy, send only the path
+					$this->_httpsrequest($path, $URI, $this->_httpmethod);
+				}
+
+				if($this->_redirectaddr)
+				{
+					/* url was redirected, check if we've hit the max depth */
+					if($this->maxredirs > $this->_redirectdepth)
+					{
+						// only follow redirect if it's on this site, or offsiteok is true
+						if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
+						{
+							/* follow the redirect */
+							$this->_redirectdepth++;
+							$this->lastredirectaddr=$this->_redirectaddr;
+							$this->fetch($this->_redirectaddr);
+						}
+					}
+				}
+
+				if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
+				{
+					$frameurls = $this->_frameurls;
+					$this->_frameurls = array();
+
+					while(list(,$frameurl) = each($frameurls))
+					{
+						if($this->_framedepth < $this->maxframes)
+						{
+							$this->fetch($frameurl);
+							$this->_framedepth++;
+						}
+						else
+							break;
+					}
+				}					
+				return true;					
+				break;
+			default:
+				// not a valid protocol
+				$this->error	=	'Invalid protocol "'.$URI_PARTS["scheme"].'"\n';
+				return false;
+				break;
+		}		
+		return true;
+	}
+
+/*======================================================================*\
+	Function:	submit
+	Purpose:	submit an http form
+	Input:		$URI	the location to post the data
+				$formvars	the formvars to use.
+					format: $formvars["var"] = "val";
+	Output:		$this->results	the text output from the post
+\*======================================================================*/
+
+	function submit($URI, $formvars="", $formfiles="")
+	{
+		unset($postdata);
+		
+		$postdata = $this->_prepare_post_body($formvars, $formfiles);
+			
+		$URI_PARTS = parse_url($URI);
+		if (!empty($URI_PARTS["user"]))
+			$this->user = $URI_PARTS["user"];
+		if (!empty($URI_PARTS["pass"]))
+			$this->pass = $URI_PARTS["pass"];
+				
+		switch($URI_PARTS["scheme"])
+		{
+			case "http":
+				$this->host = $URI_PARTS["host"];
+				if(!empty($URI_PARTS["port"]))
+					$this->port = $URI_PARTS["port"];
+				if($this->_connect($fp))
+				{
+					if($this->_isproxy)
+					{
+						// using proxy, send entire URI
+						$this->_httprequest($URI,$fp,$URI,$this->_submit_method,$this->_submit_type,$postdata);
+					}
+					else
+					{
+						$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
+						// no proxy, send only the path
+						$this->_httprequest($path, $fp, $URI, $this->_submit_method, $this->_submit_type, $postdata);
+					}
+					
+					$this->_disconnect($fp);
+
+					if($this->_redirectaddr)
+					{
+						/* url was redirected, check if we've hit the max depth */
+						if($this->maxredirs > $this->_redirectdepth)
+						{						
+							if(!preg_match("|^".$URI_PARTS["scheme"]."://|", $this->_redirectaddr))
+								$this->_redirectaddr = $this->_expandlinks($this->_redirectaddr,$URI_PARTS["scheme"]."://".$URI_PARTS["host"]);						
+							
+							// only follow redirect if it's on this site, or offsiteok is true
+							if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
+							{
+								/* follow the redirect */
+								$this->_redirectdepth++;
+								$this->lastredirectaddr=$this->_redirectaddr;
+								$this->submit($this->_redirectaddr,$formvars, $formfiles);
+							}
+						}
+					}
+
+					if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
+					{
+						$frameurls = $this->_frameurls;
+						$this->_frameurls = array();
+						
+						while(list(,$frameurl) = each($frameurls))
+						{														
+							if($this->_framedepth < $this->maxframes)
+							{
+								$this->fetch($frameurl);
+								$this->_framedepth++;
+							}
+							else
+								break;
+						}
+					}					
+					
+				}
+				else
+				{
+					return false;
+				}
+				return true;					
+				break;
+			case "https":
+				if(!$this->curl_path || (!is_executable($this->curl_path)))
+					return false;
+				$this->host = $URI_PARTS["host"];
+				if(!empty($URI_PARTS["port"]))
+					$this->port = $URI_PARTS["port"];
+				if($this->_isproxy)
+				{
+					// using proxy, send entire URI
+					$this->_httpsrequest($URI, $URI, $this->_submit_method, $this->_submit_type, $postdata);
+				}
+				else
+				{
+					$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
+					// no proxy, send only the path
+					$this->_httpsrequest($path, $URI, $this->_submit_method, $this->_submit_type, $postdata);
+				}
+
+				if($this->_redirectaddr)
+				{
+					/* url was redirected, check if we've hit the max depth */
+					if($this->maxredirs > $this->_redirectdepth)
+					{						
+						if(!preg_match("|^".$URI_PARTS["scheme"]."://|", $this->_redirectaddr))
+							$this->_redirectaddr = $this->_expandlinks($this->_redirectaddr,$URI_PARTS["scheme"]."://".$URI_PARTS["host"]);						
+
+						// only follow redirect if it's on this site, or offsiteok is true
+						if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
+						{
+							/* follow the redirect */
+							$this->_redirectdepth++;
+							$this->lastredirectaddr=$this->_redirectaddr;
+							$this->submit($this->_redirectaddr,$formvars, $formfiles);
+						}
+					}
+				}
+
+				if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
+				{
+					$frameurls = $this->_frameurls;
+					$this->_frameurls = array();
+
+					while(list(,$frameurl) = each($frameurls))
+					{														
+						if($this->_framedepth < $this->maxframes)
+						{
+							$this->fetch($frameurl);
+							$this->_framedepth++;
+						}
+						else
+							break;
+					}
+				}					
+				return true;					
+				break;
+				
+			default:
+				// not a valid protocol
+				$this->error	=	'Invalid protocol "'.$URI_PARTS["scheme"].'"\n';
+				return false;
+				break;
+		}		
+		return true;
+	}
+
+/*======================================================================*\
+	Function:	fetchlinks
+	Purpose:	fetch the links from a web page
+	Input:		$URI	where you are fetching from
+	Output:		$this->results	an array of the URLs
+\*======================================================================*/
+
+	function fetchlinks($URI)
+	{
+		if ($this->fetch($URI))
+		{			
+
+			if(is_array($this->results))
+			{
+				for($x=0;$x<count($this->results);$x++)
+					$this->results[$x] = $this->_striplinks($this->results[$x]);
+			}
+			else
+				$this->results = $this->_striplinks($this->results);
+
+			if($this->expandlinks)
+				$this->results = $this->_expandlinks($this->results, $URI);
+			return true;
+		}
+		else
+			return false;
+	}
+
+/*======================================================================*\
+	Function:	fetchform
+	Purpose:	fetch the form elements from a web page
+	Input:		$URI	where you are fetching from
+	Output:		$this->results	the resulting html form
+\*======================================================================*/
+
+	function fetchform($URI)
+	{
+		
+		if ($this->fetch($URI))
+		{			
+
+			if(is_array($this->results))
+			{
+				for($x=0;$x<count($this->results);$x++)
+					$this->results[$x] = $this->_stripform($this->results[$x]);
+			}
+			else
+				$this->results = $this->_stripform($this->results);
+			
+			return true;
+		}
+		else
+			return false;
+	}
+	
+	
+/*======================================================================*\
+	Function:	fetchtext
+	Purpose:	fetch the text from a web page, stripping the links
+	Input:		$URI	where you are fetching from
+	Output:		$this->results	the text from the web page
+\*======================================================================*/
+
+	function fetchtext($URI)
+	{
+		if($this->fetch($URI))
+		{			
+			if(is_array($this->results))
+			{
+				for($x=0;$x<count($this->results);$x++)
+					$this->results[$x] = $this->_striptext($this->results[$x]);
+			}
+			else
+				$this->results = $this->_striptext($this->results);
+			return true;
+		}
+		else
+			return false;
+	}
+
+/*======================================================================*\
+	Function:	submitlinks
+	Purpose:	grab links from a form submission
+	Input:		$URI	where you are submitting from
+	Output:		$this->results	an array of the links from the post
+\*======================================================================*/
+
+	function submitlinks($URI, $formvars="", $formfiles="")
+	{
+		if($this->submit($URI,$formvars, $formfiles))
+		{			
+			if(is_array($this->results))
+			{
+				for($x=0;$x<count($this->results);$x++)
+				{
+					$this->results[$x] = $this->_striplinks($this->results[$x]);
+					if($this->expandlinks)
+						$this->results[$x] = $this->_expandlinks($this->results[$x],$URI);
+				}
+			}
+			else
+			{
+				$this->results = $this->_striplinks($this->results);
+				if($this->expandlinks)
+					$this->results = $this->_expandlinks($this->results,$URI);
+			}
+			return true;
+		}
+		else
+			return false;
+	}
+
+/*======================================================================*\
+	Function:	submittext
+	Purpose:	grab text from a form submission
+	Input:		$URI	where you are submitting from
+	Output:		$this->results	the text from the web page
+\*======================================================================*/
+
+	function submittext($URI, $formvars = "", $formfiles = "")
+	{
+		if($this->submit($URI,$formvars, $formfiles))
+		{			
+			if(is_array($this->results))
+			{
+				for($x=0;$x<count($this->results);$x++)
+				{
+					$this->results[$x] = $this->_striptext($this->results[$x]);
+					if($this->expandlinks)
+						$this->results[$x] = $this->_expandlinks($this->results[$x],$URI);
+				}
+			}
+			else
+			{
+				$this->results = $this->_striptext($this->results);
+				if($this->expandlinks)
+					$this->results = $this->_expandlinks($this->results,$URI);
+			}
+			return true;
+		}
+		else
+			return false;
+	}
+
+	
+
+/*======================================================================*\
+	Function:	set_submit_multipart
+	Purpose:	Set the form submission content type to
+				multipart/form-data
+\*======================================================================*/
+	function set_submit_multipart()
+	{
+		$this->_submit_type = "multipart/form-data";
+	}
+
+	
+/*======================================================================*\
+	Function:	set_submit_normal
+	Purpose:	Set the form submission content type to
+				application/x-www-form-urlencoded
+\*======================================================================*/
+	function set_submit_normal()
+	{
+		$this->_submit_type = "application/x-www-form-urlencoded";
+	}
+
+
+// XOOPS2 Hack begin
+// Added on March 4, 2003 by onokazu at xoops.org
+/*======================================================================*\
+	Function:	set_submit_xml
+	Purpose:	Set the submission content type to
+				text/xml
+\*======================================================================*/
+	function set_submit_xml()
+	{
+		$this->_submit_type = "text/xml";
+	}
+// XOOPS2 Hack end
+
+
+/*======================================================================*\
+	Private functions
+\*======================================================================*/
+	
+	
+/*======================================================================*\
+	Function:	_striplinks
+	Purpose:	strip the hyperlinks from an html document
+	Input:		$document	document to strip.
+	Output:		$match		an array of the links
+\*======================================================================*/
+
+	function _striplinks($document)
+	{	
+		preg_match_all("'<\s*a\s.*?href\s*=\s*			# find <a href=
+						([\"\'])?					# find single or double quote
+						(?(1) (.*?)\\1 | ([^\s\>]+))		# if quote found, match up to next matching
+													# quote, otherwise match up to next space
+						'isx",$document,$links);
+						
+
+		// catenate the non-empty matches from the conditional subpattern
+
+		while(list($key,$val) = each($links[2]))
+		{
+			if(!empty($val))
+				$match[] = $val;
+		}				
+		
+		while(list($key,$val) = each($links[3]))
+		{
+			if(!empty($val))
+				$match[] = $val;
+		}		
+		
+		// return the links
+		return $match;
+	}
+
+/*======================================================================*\
+	Function:	_stripform
+	Purpose:	strip the form elements from an html document
+	Input:		$document	document to strip.
+	Output:		$match		an array of the links
+\*======================================================================*/
+
+	function _stripform($document)
+	{	
+		preg_match_all("'<\/?(FORM|INPUT|SELECT|TEXTAREA|(OPTION))[^<>]*>(?(2)(.*(?=<\/?(option|select)[^<>]*>[\r\n]*)|(?=[\r\n]*))|(?=[\r\n]*))'Usi",$document,$elements);
+		
+		// catenate the matches
+		$match = implode("\r\n",$elements[0]);
+				
+		// return the links
+		return $match;
+	}
+
+	
+	
+/*======================================================================*\
+	Function:	_striptext
+	Purpose:	strip the text from an html document
+	Input:		$document	document to strip.
+	Output:		$text		the resulting text
+\*======================================================================*/
+
+	function _striptext($document)
+	{
+		
+		// I didn't use preg eval (//e) since that is only available in PHP 4.0.
+		// so, list your entities one by one here. I included some of the
+		// more common ones.
+								
+		$search = array("'<script[^>]*?>.*?</script>'si",	// strip out javascript
+						"'<[\/\!]*?[^<>]*?>'si",			// strip out html tags
+						"'([\r\n])[\s]+'",					// strip out white space
+						"'&(quot|#34|#034|#x22);'i",		// replace html entities
+						"'&(amp|#38|#038|#x26);'i",			// added hexadecimal values
+						"'&(lt|#60|#060|#x3c);'i",
+						"'&(gt|#62|#062|#x3e);'i",
+						"'&(nbsp|#160|#xa0);'i",
+						"'&(iexcl|#161);'i",
+						"'&(cent|#162);'i",
+						"'&(pound|#163);'i",
+						"'&(copy|#169);'i",
+						"'&(reg|#174);'i",
+						"'&(deg|#176);'i",
+						"'&(#39|#039|#x27);'",
+						"'&(euro|#8364);'i",				// europe
+						"'&a(uml|UML);'",					// german
+						"'&o(uml|UML);'",
+						"'&u(uml|UML);'",
+						"'&A(uml|UML);'",
+						"'&O(uml|UML);'",
+						"'&U(uml|UML);'",
+						"'&szlig;'i",
+						);
+		$replace = array(	"",
+							"",
+							"\\1",
+							"\"",
+							"&",
+							"<",
+							">",
+							" ",
+							chr(161),
+							chr(162),
+							chr(163),
+							chr(169),
+							chr(174),
+							chr(176),
+							chr(39),
+							chr(128),
+							chr(228),
+							chr(246),
+							chr(252),
+							chr(196),
+							chr(214),
+							chr(220),
+							chr(223),
+						);
+					
+		$text = preg_replace($search,$replace,$document);
+								
+		return $text;
+	}
+
+/*======================================================================*\
+	Function:	_expandlinks
+	Purpose:	expand each link into a fully qualified URL
+	Input:		$links			the links to qualify
+				$URI			the full URI to get the base from
+	Output:		$expandedLinks	the expanded links
+\*======================================================================*/
+
+	function _expandlinks($links,$URI)
+	{
+		
+		preg_match("/^[^\?]+/",$URI,$match);
+
+		$match = preg_replace("|/[^\/\.]+\.[^\/\.]+$|","",$match[0]);
+				
+		$search = array( 	"|^http://".preg_quote($this->host)."|i",
+							"|^(?!http://)(\/)?(?!mailto:)|i",
+							"|/\./|",
+							"|/[^\/]+/\.\./|"
+						);
+						
+		$replace = array(	"",
+							$match."/",
+							"/",
+							"/"
+						);			
+				
+		$expandedLinks = preg_replace($search,$replace,$links);
+
+		return $expandedLinks;
+	}
+
+/*======================================================================*\
+	Function:	_httprequest
+	Purpose:	go get the http data from the server
+	Input:		$url		the url to fetch
+				$fp			the current open file pointer
+				$URI		the full URI
+				$body		body contents to send if any (POST)
+	Output:		
+\*======================================================================*/
+	
+	function _httprequest($url,$fp,$URI,$http_method,$content_type="",$body="")
+	{
+		$cookie_headers = '';
+		if($this->passcookies && $this->_redirectaddr)
+			$this->setcookies();
+			
+		$URI_PARTS = parse_url($URI);
+		if(empty($url))
+			$url = "/";
+		$headers = $http_method." ".$url." ".$this->_httpversion."\r\n";		
+		if(!empty($this->agent))
+			$headers .= "User-Agent: ".$this->agent."\r\n";
+		if(!empty($this->host) && !isset($this->rawheaders['Host']))
+			$headers .= "Host: ".$this->host."\r\n";
+		if(!empty($this->accept))
+			$headers .= "Accept: ".$this->accept."\r\n";
+		if(!empty($this->referer))
+			$headers .= "Referer: ".$this->referer."\r\n";
+		if(!empty($this->cookies))
+		{			
+			if(!is_array($this->cookies))
+				$this->cookies = (array)$this->cookies;
+	
+			reset($this->cookies);
+			if ( count($this->cookies) > 0 ) {
+				$cookie_headers .= 'Cookie: ';
+				foreach ( $this->cookies as $cookieKey => $cookieVal ) {
+				$cookie_headers .= $cookieKey."=".urlencode($cookieVal)."; ";
+				}
+				$headers .= substr($cookie_headers,0,-2) . "\r\n";
+			} 
+		}
+		if(!empty($this->rawheaders))
+		{
+			if(!is_array($this->rawheaders))
+				$this->rawheaders = (array)$this->rawheaders;
+			while(list($headerKey,$headerVal) = each($this->rawheaders))
+				$headers .= $headerKey.": ".$headerVal."\r\n";
+		}
+		if(!empty($content_type)) {
+			$headers .= "Content-type: $content_type";
+			if ($content_type == "multipart/form-data")
+				$headers .= "; boundary=".$this->_mime_boundary;
+			$headers .= "\r\n";
+		}
+		if(!empty($body))	
+			$headers .= "Content-length: ".strlen($body)."\r\n";
+		if(!empty($this->user) || !empty($this->pass))	
+			$headers .= "Authorization: Basic ".base64_encode($this->user.":".$this->pass)."\r\n";
+
+		$headers .= "\r\n";
+		
+		// set the read timeout if needed
+		if ($this->read_timeout > 0)
+			socket_set_timeout($fp, $this->read_timeout);
+		$this->timed_out = false;
+		
+		fwrite($fp,$headers.$body,strlen($headers.$body));
+		
+		$this->_redirectaddr = false;
+		unset($this->headers);
+						
+		while($currentHeader = fgets($fp,$this->_maxlinelen))
+		{
+			if ($this->read_timeout > 0 && $this->_check_timeout($fp))
+			{
+				$this->status=-100;
+				return false;
+			}
+				
+			if($currentHeader == "\r\n")
+				break;
+						
+			// if a header begins with Location: or URI:, set the redirect
+			if(preg_match("/^(Location:|URI:)/i",$currentHeader))
+			{
+				// get URL portion of the redirect
+				preg_match("/^(Location:|URI:)[ ]+(.*)/",chop($currentHeader),$matches);
+				// look for :// in the Location header to see if hostname is included
+				if(!preg_match("|\:\/\/|",$matches[2]))
+				{
+					// no host in the path, so prepend
+					$this->_redirectaddr = $URI_PARTS["scheme"]."://".$this->host.":".$this->port;
+					// eliminate double slash
+					if(!preg_match("|^/|",$matches[2]))
+							$this->_redirectaddr .= "/".$matches[2];
+					else
+							$this->_redirectaddr .= $matches[2];
+				}
+				else
+					$this->_redirectaddr = $matches[2];
+			}
+		
+			if(preg_match("|^HTTP/|",$currentHeader))
+			{
+                if(preg_match("|^HTTP/[^\s]*\s(.*?)\s|",$currentHeader, $status))
+				{
+					$this->status= $status[1];
+                }				
+				$this->response_code = $currentHeader;
+			}
+				
+			$this->headers[] = $currentHeader;
+		}
+
+		$results = '';
+		do {
+    		$_data = fread($fp, $this->maxlength);
+    		if (strlen($_data) == 0) {
+        		break;
+    		}
+    		$results .= $_data;
+		} while(true);
+
+		if ($this->read_timeout > 0 && $this->_check_timeout($fp))
+		{
+			$this->status=-100;
+			return false;
+		}
+		
+		// check if there is a a redirect meta tag
+		
+		if(preg_match("'<meta[\s]*http-equiv[^>]*?content[\s]*=[\s]*[\"\']?\d+;[\s]+URL[\s]*=[\s]*([^\"\']*?)[\"\']?>'i",$results,$match))
+		{
+			$this->_redirectaddr = $this->_expandlinks($match[1],$URI);	
+		}
+
+		// have we hit our frame depth and is there frame src to fetch?
+		if(($this->_framedepth < $this->maxframes) && preg_match_all("'<frame\s+.*src[\s]*=[\'\"]?([^\'\"\>]+)'i",$results,$match))
+		{
+			$this->results[] = $results;
+			for($x=0; $x<count($match[1]); $x++)
+				$this->_frameurls[] = $this->_expandlinks($match[1][$x],$URI_PARTS["scheme"]."://".$this->host);
+		}
+		// have we already fetched framed content?
+		elseif(is_array($this->results))
+			$this->results[] = $results;
+		// no framed content
+		else
+			$this->results = $results;
+		
+		return true;
+	}
+
+/*======================================================================*\
+	Function:	_httpsrequest
+	Purpose:	go get the https data from the server using curl
+	Input:		$url		the url to fetch
+				$URI		the full URI
+				$body		body contents to send if any (POST)
+	Output:		
+\*======================================================================*/
+	
+	function _httpsrequest($url,$URI,$http_method,$content_type="",$body="")
+	{
+		if($this->passcookies && $this->_redirectaddr)
+			$this->setcookies();
+
+		$headers = array();		
+					
+		$URI_PARTS = parse_url($URI);
+		if(empty($url))
+			$url = "/";
+		// GET ... header not needed for curl
+		//$headers[] = $http_method." ".$url." ".$this->_httpversion;		
+		if(!empty($this->agent))
+			$headers[] = "User-Agent: ".$this->agent;
+		if(!empty($this->host))
+			$headers[] = "Host: ".$this->host;
+		if(!empty($this->accept))
+			$headers[] = "Accept: ".$this->accept;
+		if(!empty($this->referer))
+			$headers[] = "Referer: ".$this->referer;
+		if(!empty($this->cookies))
+		{			
+			if(!is_array($this->cookies))
+				$this->cookies = (array)$this->cookies;
+	
+			reset($this->cookies);
+			if ( count($this->cookies) > 0 ) {
+				$cookie_str = 'Cookie: ';
+				foreach ( $this->cookies as $cookieKey => $cookieVal ) {
+				$cookie_str .= $cookieKey."=".urlencode($cookieVal)."; ";
+				}
+				$headers[] = substr($cookie_str,0,-2);
+			}
+		}
+		if(!empty($this->rawheaders))
+		{
+			if(!is_array($this->rawheaders))
+				$this->rawheaders = (array)$this->rawheaders;
+			while(list($headerKey,$headerVal) = each($this->rawheaders))
+				$headers[] = $headerKey.": ".$headerVal;
+		}
+		if(!empty($content_type)) {
+			if ($content_type == "multipart/form-data")
+				$headers[] = "Content-type: $content_type; boundary=".$this->_mime_boundary;
+			else
+				$headers[] = "Content-type: $content_type";
+		}
+		if(!empty($body))	
+			$headers[] = "Content-length: ".strlen($body);
+		if(!empty($this->user) || !empty($this->pass))	
+			$headers[] = "Authorization: BASIC ".base64_encode($this->user.":".$this->pass);
+			
+		for($curr_header = 0; $curr_header < count($headers); $curr_header++)
+			$cmdline_params .= " -H \"".$headers[$curr_header]."\"";
+		
+		if(!empty($body))
+			$cmdline_params .= " -d \"$body\"";
+		
+		if($this->read_timeout > 0)
+			$cmdline_params .= " -m ".$this->read_timeout;
+		
+		$headerfile = uniqid(time());
+
+		exec($this->curl_path." -D \"/tmp/$headerfile\"".$cmdline_params." ".$URI,$results,$return);
+		
+		if($return)
+		{
+			$this->error = "Error: cURL could not retrieve the document, error $return.";
+			return false;
+		}
+			
+			
+		$results = implode("\r\n",$results);
+		
+		$result_headers = file("/tmp/$headerfile");
+						
+		$this->_redirectaddr = false;
+		unset($this->headers);
+						
+		for($currentHeader = 0; $currentHeader < count($result_headers); $currentHeader++)
+		{
+			
+			// if a header begins with Location: or URI:, set the redirect
+			if(preg_match("/^(Location: |URI: )/i",$result_headers[$currentHeader]))
+			{
+				// get URL portion of the redirect
+				preg_match("/^(Location: |URI:)\s+(.*)/",chop($result_headers[$currentHeader]),$matches);
+				// look for :// in the Location header to see if hostname is included
+				if(!preg_match("|\:\/\/|",$matches[2]))
+				{
+					// no host in the path, so prepend
+					$this->_redirectaddr = $URI_PARTS["scheme"]."://".$this->host.":".$this->port;
+					// eliminate double slash
+					if(!preg_match("|^/|",$matches[2]))
+							$this->_redirectaddr .= "/".$matches[2];
+					else
+							$this->_redirectaddr .= $matches[2];
+				}
+				else
+					$this->_redirectaddr = $matches[2];
+			}
+		
+			if(preg_match("|^HTTP/|",$result_headers[$currentHeader]))
+				$this->response_code = $result_headers[$currentHeader];
+
+			$this->headers[] = $result_headers[$currentHeader];
+		}
+
+		// check if there is a a redirect meta tag
+		
+		if(preg_match("'<meta[\s]*http-equiv[^>]*?content[\s]*=[\s]*[\"\']?\d+;[\s]+URL[\s]*=[\s]*([^\"\']*?)[\"\']?>'i",$results,$match))
+		{
+			$this->_redirectaddr = $this->_expandlinks($match[1],$URI);	
+		}
+
+		// have we hit our frame depth and is there frame src to fetch?
+		if(($this->_framedepth < $this->maxframes) && preg_match_all("'<frame\s+.*src[\s]*=[\'\"]?([^\'\"\>]+)'i",$results,$match))
+		{
+			$this->results[] = $results;
+			for($x=0; $x<count($match[1]); $x++)
+				$this->_frameurls[] = $this->_expandlinks($match[1][$x],$URI_PARTS["scheme"]."://".$this->host);
+		}
+		// have we already fetched framed content?
+		elseif(is_array($this->results))
+			$this->results[] = $results;
+		// no framed content
+		else
+			$this->results = $results;
+
+		unlink("/tmp/$headerfile");
+		
+		return true;
+	}
+
+/*======================================================================*\
+	Function:	setcookies()
+	Purpose:	set cookies for a redirection
+\*======================================================================*/
+	
+	function setcookies()
+	{
+		for($x=0; $x<count($this->headers); $x++)
+		{
+		if(preg_match('/^set-cookie:[\s]+([^=]+)=([^;]+)/i', $this->headers[$x],$match))
+			$this->cookies[$match[1]] = $match[2];
+		}
+	}
+
+	
+/*======================================================================*\
+	Function:	_check_timeout
+	Purpose:	checks whether timeout has occurred
+	Input:		$fp	file pointer
+\*======================================================================*/
+
+	function _check_timeout($fp)
+	{
+		if ($this->read_timeout > 0) {
+			$fp_status = socket_get_status($fp);
+			if ($fp_status["timed_out"]) {
+				$this->timed_out = true;
+				return true;
+			}
+		}
+		return false;
+	}
+
+/*======================================================================*\
+	Function:	_connect
+	Purpose:	make a socket connection
+	Input:		$fp	file pointer
+\*======================================================================*/
+	
+	function _connect(&$fp)
+	{
+		if(!empty($this->proxy_host) && !empty($this->proxy_port))
+			{
+				$this->_isproxy = true;
+				$host = $this->proxy_host;
+				$port = $this->proxy_port;
+			}
+		else
+		{
+			$host = $this->host;
+			$port = $this->port;
+		}
+	
+		$this->status = 0;
+		
+		if($fp = fsockopen(
+					$host,
+					$port,
+					$errno,
+					$errstr,
+					$this->_fp_timeout
+					))
+		{
+			// socket connection succeeded
+
+			return true;
+		}
+		else
+		{
+			// socket connection failed
+			$this->status = $errno;
+			switch($errno)
+			{
+				case -3:
+					$this->error="socket creation failed (-3)";
+				case -4:
+					$this->error="dns lookup failure (-4)";
+				case -5:
+					$this->error="connection refused or timed out (-5)";
+				default:
+					$this->error="connection failed (".$errno.")";
+			}
+			return false;
+		}
+	}
+/*======================================================================*\
+	Function:	_disconnect
+	Purpose:	disconnect a socket connection
+	Input:		$fp	file pointer
+\*======================================================================*/
+	
+	function _disconnect($fp)
+	{
+		return(fclose($fp));
+	}
+
+	
+/*======================================================================*\
+	Function:	_prepare_post_body
+	Purpose:	Prepare post body according to encoding type
+	Input:		$formvars  - form variables
+				$formfiles - form upload files
+	Output:		post body
+\*======================================================================*/
+	
+	function _prepare_post_body($formvars, $formfiles)
+	{
+		settype($formvars, "array");
+		settype($formfiles, "array");
+
+		if (count($formvars) == 0 && count($formfiles) == 0)
+			return;
+		
+		switch ($this->_submit_type) {
+			case "application/x-www-form-urlencoded":
+				reset($formvars);
+				while(list($key,$val) = each($formvars)) {
+					if (is_array($val) || is_object($val)) {
+						while (list($cur_key, $cur_val) = each($val)) {
+							$postdata .= urlencode($key)."[]=".urlencode($cur_val)."&";
+						}
+					} else
+						$postdata .= urlencode($key)."=".urlencode($val)."&";
+				}
+				break;
+
+			case "multipart/form-data":
+				$this->_mime_boundary = "Snoopy".md5(uniqid(microtime()));
+				
+				reset($formvars);
+				while(list($key,$val) = each($formvars)) {
+					if (is_array($val) || is_object($val)) {
+						while (list($cur_key, $cur_val) = each($val)) {
+							$postdata .= "--".$this->_mime_boundary."\r\n";
+							$postdata .= "Content-Disposition: form-data; name=\"$key\[\]\"\r\n\r\n";
+							$postdata .= "$cur_val\r\n";
+						}
+					} else {
+						$postdata .= "--".$this->_mime_boundary."\r\n";
+						$postdata .= "Content-Disposition: form-data; name=\"$key\"\r\n\r\n";
+						$postdata .= "$val\r\n";
+					}
+				}
+				
+				reset($formfiles);
+				while (list($field_name, $file_names) = each($formfiles)) {
+					settype($file_names, "array");
+					while (list(, $file_name) = each($file_names)) {
+						if (!is_readable($file_name)) continue;
+
+						$fp = fopen($file_name, "r");
+						$file_content = fread($fp, filesize($file_name));
+						fclose($fp);
+						$base_name = basename($file_name);
+
+						$postdata .= "--".$this->_mime_boundary."\r\n";
+						$postdata .= "Content-Disposition: form-data; name=\"$field_name\"; filename=\"$base_name\"\r\n\r\n";
+						$postdata .= "$file_content\r\n";
+					}
+				}
+				$postdata .= "--".$this->_mime_boundary."--\r\n";
+				break;
+			// XOOPS2 Hack begin
+			// Added on March 4, 2003 by onokazu at xoops.org
+			case "text/xml":
+			default:
+				$postdata = $formvars[0];
+				break;
+			// XOOPS2 Hack end
+		}
+
+		return $postdata;
+	}
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/snoopy.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/tardownloader.php
===================================================================
--- XoopsCore/trunk/htdocs/class/tardownloader.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/tardownloader.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,177 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+/**
+ * base class
+ */
+include_once XOOPS_ROOT_PATH.'/class/downloader.php';
+/**
+ * Class to handle tar files
+ */
+include_once XOOPS_ROOT_PATH.'/class/class.tar.php';
+
+/**
+ * Send tar files through a http socket
+ *
+ * @package		kernel
+ * @subpackage	core
+ *
+ * @author		Kazumi Ono 	<onokazu at xoops.org>
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class XoopsTarDownloader extends XoopsDownloader
+{
+
+	/**
+	 * Constructor
+	 * 
+	 * @param string $ext       file extension
+	 * @param string $mimyType  Mimetype
+	 **/
+	function XoopsTarDownloader($ext = '.tar.gz', $mimyType = 'application/x-gzip')
+	{
+		$this->archiver = new tar();
+		$this->ext = trim($ext);
+		$this->mimeType = trim($mimyType);
+	}
+
+	/**
+	 * Add a file to the archive
+	 * 
+	 * @param   string  $filepath       Full path to the file
+	 * @param   string  $newfilename    Filename (if you don't want to use the original)
+	 **/
+	function addFile($filepath, $newfilename=null)
+	{
+		$this->archiver->addFile($filepath);
+		if (isset($newfilename)) {
+			// dirty, but no other way
+			for ($i = 0; $i < $this->archiver->numFiles; $i++) {
+				if ($this->archiver->files[$i]['name'] == $filepath) {
+					$this->archiver->files[$i]['name'] = trim($newfilename);
+					break;
+				}
+			}
+		}
+	}
+
+	/**
+	 * Add a binary file to the archive
+	 * 
+	 * @param   string  $filepath       Full path to the file
+	 * @param   string  $newfilename    Filename (if you don't want to use the original)
+	 **/
+	function addBinaryFile($filepath, $newfilename=null)
+	{
+		$this->archiver->addFile($filepath, true);
+		if (isset($newfilename)) {
+			// dirty, but no other way
+			for ($i = 0; $i < $this->archiver->numFiles; $i++) {
+				if ($this->archiver->files[$i]['name'] == $filepath) {
+					$this->archiver->files[$i]['name'] = trim($newfilename);
+					break;
+				}
+			}
+		}
+	}
+
+	/**
+	 * Add a dummy file to the archive
+	 * 
+	 * @param   string  $data       Data to write
+	 * @param   string  $filename   Name for the file in the archive
+	 * @param   integer $time
+	 **/
+	function addFileData(&$data, $filename, $time=0)
+	{
+		$dummyfile = XOOPS_CACHE_PATH.'/dummy_'.time().'.html';
+		$fp = fopen($dummyfile, 'w');
+		fwrite($fp, $data);
+		fclose($fp);
+		$this->archiver->addFile($dummyfile);
+		unlink($dummyfile);
+
+		// dirty, but no other way
+		for ($i = 0; $i < $this->archiver->numFiles; $i++) {
+			if ($this->archiver->files[$i]['name'] == $dummyfile) {
+				$this->archiver->files[$i]['name'] = $filename;
+				if ($time != 0) {
+					$this->archiver->files[$i]['time'] = $time;
+				}
+				break;
+			}
+		}
+	}
+
+	/**
+	 * Add a binary dummy file to the archive
+	 * 
+	 * @param   string  $data   Data to write
+	 * @param   string  $filename   Name for the file in the archive
+	 * @param   integer $time
+	 **/
+	function addBinaryFileData(&$data, $filename, $time=0)
+	{
+		$dummyfile = XOOPS_CACHE_PATH.'/dummy_'.time().'.html';
+		$fp = fopen($dummyfile, 'wb');
+		fwrite($fp, $data);
+		fclose($fp);
+		$this->archiver->addFile($dummyfile, true);
+		unlink($dummyfile);
+
+		// dirty, but no other way
+		for ($i = 0; $i < $this->archiver->numFiles; $i++) {
+			if ($this->archiver->files[$i]['name'] == $dummyfile) {
+				$this->archiver->files[$i]['name'] = $filename;
+				if ($time != 0) {
+					$this->archiver->files[$i]['time'] = $time;
+				}
+				break;
+			}
+		}
+	}
+
+	/**
+	 * Send the file to the client
+	 * 
+	 * @param   string  $name   Filename
+	 * @param   boolean $gzip   Use GZ compression
+	 **/
+	function download($name, $gzip = true)
+	{
+		$this->_header($name.$this->ext);
+		echo $this->archiver->toTarOutput($name.$this->ext, $gzip);
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/tardownloader.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/template.php
===================================================================
--- XoopsCore/trunk/htdocs/class/template.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/template.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,264 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('SMARTY_DIR')) {
+	exit();
+}
+/**
+ * Base class: Smarty template engine
+ */
+require_once SMARTY_DIR.'Smarty.class.php';
+
+/**
+ * Template engine
+ *
+ * @package		kernel
+ * @subpackage	core
+ *
+ * @author		Kazumi Ono 	<onokazu at xoops.org>
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class XoopsTpl extends Smarty
+{
+
+	/**
+	 * Allow update of template files from the themes/ directory?
+     * This should be set to false on an active site to increase performance
+	 */
+	var $_canUpdateFromFile = false;
+
+	/**
+	 * Constructor
+	 **/
+	function XoopsTpl()
+	{
+		global $xoopsConfig;
+		$this->Smarty();
+		$this->compile_id = null;
+		if ($xoopsConfig['theme_fromfile'] == 1) {
+			$this->_canUpdateFromFile = true;
+			$this->compile_check = true;
+		} else {
+			$this->_canUpdateFromFile = false;
+			$this->compile_check = false;
+		}
+		$this->left_delimiter =  '<{';
+		$this->right_delimiter =  '}>';
+		$this->template_dir = XOOPS_THEME_PATH;
+		$this->cache_dir = XOOPS_CACHE_PATH;
+		$this->compile_dir = XOOPS_COMPILE_PATH;
+		$this->plugins_dir = array(XOOPS_ROOT_PATH.'/class/smarty/plugins');
+		$this->default_template_handler_func = 'xoops_template_create';
+		
+		// Added by goghs on 11-26 to deal with safe mode
+		//if (ini_get('safe_mode') == "1") {
+			$this->use_sub_dirs = false;
+		//} else {
+		//	$this->use_sub_dirs = true;
+		//}
+		// END
+
+		$this->assign(array('xoops_url' => XOOPS_URL, 'xoops_rootpath' => XOOPS_ROOT_PATH, 'xoops_langcode' => _LANGCODE, 'xoops_charset' => _CHARSET, 'xoops_version' => XOOPS_VERSION, 'xoops_upload_url' => XOOPS_UPLOAD_URL));
+	}
+
+	/**
+	 * Set the directory for templates
+     * 
+     * @param   string  $dirname    Directory path without a trailing slash
+	 **/
+	function xoops_setTemplateDir($dirname)
+	{
+		$this->template_dir = $dirname;
+	}
+
+	/**
+	 * Get the active template directory
+	 * 
+	 * @return  string
+	 **/
+	function xoops_getTemplateDir()
+	{
+		return $this->template_dir;
+	}
+
+	/**
+	 * Set debugging mode
+	 * 
+	 * @param   boolean     $flag
+	 **/
+	function xoops_setDebugging($flag=false)
+	{
+		$this->debugging = is_bool($flag) ? $flag : false;
+	}
+
+	/**
+	 * Set caching
+	 * 
+	 * @param   integer     $num
+	 **/
+	function xoops_setCaching($num=0)
+	{
+		$this->caching = (int)$num;
+	}
+
+	/**
+	 * Set cache lifetime
+	 * 
+	 * @param   integer     $num    Cache lifetime
+	 **/
+	function xoops_setCacheTime($num=0)
+	{
+		$num = (int)$num;
+		if ($num <= 0) {
+			$this->caching = 0;
+		} else {
+			$this->cache_lifetime = $num;
+		}
+	}
+
+	/**
+	 * Set directory for compiled template files
+	 * 
+	 * @param   string  $dirname    Full directory path without a trailing slash
+	 **/
+	function xoops_setCompileDir($dirname)
+	{
+		$this->compile_dir = $dirname;
+	}
+
+	/**
+	 * Set the directory for cached template files
+	 * 
+	 * @param   string  $dirname    Full directory path without a trailing slash
+	 **/
+	function xoops_setCacheDir($dirname)
+	{
+		$this->cache_dir = $dirname;
+	}
+
+	/**
+	 * Render output from template data
+	 * 
+	 * @param   string  $data
+	 * @return  string  Rendered output  
+	 **/
+	function xoops_fetchFromData(&$data)
+	{
+		$dummyfile = XOOPS_CACHE_PATH.'/dummy_'.time();
+		$fp = fopen($dummyfile, 'w');
+		fwrite($fp, $data);
+		fclose($fp);
+		$fetched = $this->fetch('file:'.$dummyfile);
+		unlink($dummyfile);
+		$this->clear_compiled_tpl('file:'.$dummyfile);
+		return $fetched;
+	}
+
+	/**
+	 * 
+	 **/
+	function xoops_canUpdateFromFile()
+	{
+		return $this->_canUpdateFromFile;
+	}
+}
+
+/**
+ * Smarty default template handler function
+ * 
+ * @param $resource_type
+ * @param $resource_name
+ * @param $template_source
+ * @param $template_timestamp
+ * @param $smarty_obj
+ * @return  bool
+ **/
+function xoops_template_create ($resource_type, $resource_name, &$template_source, &$template_timestamp, &$smarty_obj)
+{
+	if ( $resource_type == 'db' ) {
+		$file_handler =& xoops_gethandler('tplfile');
+		$tpl =& $file_handler->find('default', null, null, null, $resource_name, true);
+		if (count($tpl) > 0 && is_object($tpl[0])) {
+			$template_source = $tpl[0]->getSource();
+			$template_timestamp = $tpl[0]->getLastModified();
+			return true;
+		}
+	} else {
+	}
+	return false;
+}
+
+/**
+ * function to update compiled template file in templates_c folder
+ * 
+ * @param   string  $tpl_id
+ * @param   boolean $clear_old
+ * @return  boolean
+ **/
+function xoops_template_touch($tpl_id, $clear_old = true)
+{
+	$tpl = new XoopsTpl();
+	$tpl->force_compile = true;
+	$tplfile_handler =& xoops_gethandler('tplfile');
+	$tplfile =& $tplfile_handler->get($tpl_id);
+	if ( is_object($tplfile) ) {
+		$file = $tplfile->getVar('tpl_file');
+		if ($clear_old) {
+			$tpl->clear_cache('db:'.$file);
+			$tpl->clear_compiled_tpl('db:'.$file);
+		}
+		$tpl->fetch('db:'.$file);
+		return true;
+	}
+	return false;
+}
+
+/**
+ * Clear the module cache
+ * 
+ * @param   int $mid    Module ID
+ * @return 
+ **/
+function xoops_template_clear_module_cache($mid)
+{
+	$block_arr =& XoopsBlock::getByModule($mid);
+	$count = count($block_arr);
+	if ($count > 0) {
+		$xoopsTpl = new XoopsTpl();	
+		$xoopsTpl->xoops_setCaching(2);
+		for ($i = 0; $i < $count; $i++) {
+			if ($block_arr[$i]->getVar('template') != '') {
+				$xoopsTpl->clear_cache('db:'.$block_arr[$i]->getVar('template'), 'blk_'.$block_arr[$i]->getVar('bid'));
+			}
+		}
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/template.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/tree.php
===================================================================
--- XoopsCore/trunk/htdocs/class/tree.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/tree.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,227 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+/**
+ * A tree structures with {@link XoopsObject}s as nodes
+ *
+ * @package		kernel
+ * @subpackage	core
+ *
+ * @author		Kazumi Ono 	<onokazu at xoops.org>
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class XoopsObjectTree {
+
+	/**#@+
+	 * @access	private
+	 */
+	var $_parentId;
+	var $_myId;
+	var $_rootId = null;
+	var $_tree = array();
+	var $_objects;
+    /**#@-*/
+
+	/**
+	 * Constructor
+	 * 
+	 * @param   array   $objectArr  Array of {@link XoopsObject}s 
+	 * @param   string     $myId       field name of object ID
+	 * @param   string     $parentId   field name of parent object ID
+	 * @param   string     $rootId     field name of root object ID
+	 **/
+	function XoopsObjectTree(&$objectArr, $myId, $parentId, $rootId = null)
+	{
+		$this->_objects =& $objectArr;
+		$this->_myId = $myId;
+		$this->_parentId = $parentId;
+		if (isset($rootId)) {
+			$this->_rootId = $rootId;
+		}
+		$this->_initialize();
+	}
+
+	/**
+	 * Initialize the object
+	 * 
+	 * @access	private
+	 **/
+	function _initialize()
+	{
+		foreach (array_keys($this->_objects) as $i) {
+            $key1 = $this->_objects[$i]->getVar($this->_myId);
+            $this->_tree[$key1]['obj'] =& $this->_objects[$i];
+            $key2 = $this->_objects[$i]->getVar($this->_parentId);
+            $this->_tree[$key1]['parent'] = $key2;
+            $this->_tree[$key2]['child'][] = $key1;
+			if (isset($this->_rootId)) {
+            	$this->_tree[$key1]['root'] = $this->_objects[$i]->getVar($this->_rootId);
+			}
+        }
+	}
+
+	/**
+	 * Get the tree
+	 * 
+	 * @return  array   Associative array comprising the tree 
+	 **/
+	function &getTree()
+	{
+		return $this->_tree;
+	}
+
+	/**
+	 * returns an object from the tree specified by its id
+	 * 
+	 * @param   string  $key    ID of the object to retrieve
+     * @return  object  Object within the tree
+	 **/
+	function &getByKey($key)
+	{
+		return $this->_tree[$key]['obj'];
+	}
+
+	/**
+	 * returns an array of all the first child object of an object specified by its id
+	 * 
+	 * @param   string  $key    ID of the parent object
+	 * @return  array   Array of children of the parent
+	 **/
+	function &getFirstChild($key)
+	{
+		$ret = array();
+		if (isset($this->_tree[$key]['child'])) {
+			foreach ($this->_tree[$key]['child'] as $childkey) {
+				$ret[$childkey] =& $this->_tree[$childkey]['obj'];
+			}
+		}
+		return $ret;
+	}
+
+	/**
+	 * returns an array of all child objects of an object specified by its id
+	 * 
+	 * @param   string     $key    ID of the parent
+	 * @param   array   $ret    (Empty when called from client) Array of children from previous recursions.
+	 * @return  array   Array of child nodes.
+	 **/
+	function &getAllChild($key, $ret = array())
+	{
+		if (isset($this->_tree[$key]['child'])) {
+			foreach ($this->_tree[$key]['child'] as $childkey) {
+				$ret[$childkey] =& $this->_tree[$childkey]['obj'];
+				$children =& $this->getAllChild($childkey, $ret);
+				foreach (array_keys($children) as $newkey) {
+					$ret[$newkey] =& $children[$newkey];
+				}
+			}
+		}
+		return $ret;
+	}
+
+	/**
+     * returns an array of all parent objects.
+     * the key of returned array represents how many levels up from the specified object
+	 * 
+	 * @param   string     $key    ID of the child object
+	 * @param   array   $ret    (empty when called from outside) Result from previous recursions
+	 * @param   int $uplevel (empty when called from outside) level of recursion
+	 * @return  array   Array of parent nodes. 
+	 **/
+	function &getAllParent($key, $ret = array(), $uplevel = 1)
+	{
+		if (isset($this->_tree[$key]['parent']) && isset($this->_tree[$this->_tree[$key]['parent']]['obj'])) {
+			$ret[$uplevel] =& $this->_tree[$this->_tree[$key]['parent']]['obj'];
+			$parents =& $this->getAllParent($this->_tree[$key]['parent'], $ret, $uplevel+1);
+			foreach (array_keys($parents) as $newkey) {
+				$ret[$newkey] =& $parents[$newkey];
+			}
+		}
+		return $ret;
+	}
+
+	/**
+	 * Make options for a select box from
+	 * 
+	 * @param   string  $fieldName   Name of the member variable from the
+     *  node objects that should be used as the title for the options.
+	 * @param   string  $selected    Value to display as selected
+	 * @param   int $key         ID of the object to display as the root of select options
+     * @param   string  $ret         (reference to a string when called from outside) Result from previous recursions
+	 * @param   string  $prefix_orig  String to indent items at deeper levels
+	 * @param   string  $prefix_curr  String to indent the current item
+	 * @return
+     * 
+     * @access	private 
+	 **/
+	function _makeSelBoxOptions($fieldName, $selected, $key, &$ret, $prefix_orig, $prefix_curr = '')
+	{
+        if ($key > 0) {
+            $value = $this->_tree[$key]['obj']->getVar($this->_myId);
+            $ret .= '<option value="'.$value.'"';
+			if ($value == $selected) {
+				$ret .= ' selected="selected"';
+			}
+			$ret .= '>'.$prefix_curr.$this->_tree[$key]['obj']->getVar($fieldName).'</option>';
+            $prefix_curr .= $prefix_orig;
+        }
+        if (isset($this->_tree[$key]['child']) && !empty($this->_tree[$key]['child'])) {
+            foreach ($this->_tree[$key]['child'] as $childkey) {
+                $this->_makeSelBoxOptions($fieldName, $selected, $childkey, $ret, $prefix_orig, $prefix_curr);
+            }
+        }
+	}
+
+	/**
+	 * Make a select box with options from the tree
+	 * 
+	 * @param   string  $name            Name of the select box
+	 * @param   string  $fieldName       Name of the member variable from the
+     *  node objects that should be used as the title for the options.  
+	 * @param   string  $prefix          String to indent deeper levels
+	 * @param   string  $selected        Value to display as selected
+	 * @param   bool    $addEmptyOption  Set TRUE to add an empty option with value "0" at the top of the hierarchy
+	 * @param   integer $key             ID of the object to display as the root of select options
+	 * @return  string  HTML select box
+	 **/
+	function &makeSelBox($name, $fieldName, $prefix='-', $selected='', $addEmptyOption = false, $key=0)
+    {
+        $ret = '<select name='.$name.'>';
+        if (false != $addEmptyOption) {
+            $ret .= '<option value="0"></option>';
+        }
+        $this->_makeSelBoxOptions($fieldName, $selected, $key, $ret, $prefix);
+        return $ret.'</select>';
+    }
+
+
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/tree.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/uploader.php
===================================================================
--- XoopsCore/trunk/htdocs/class/uploader.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/uploader.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,456 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+/*!
+Example
+
+  include_once 'uploader.php';
+  $allowed_mimetypes = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/x-png');
+  $maxfilesize = 50000;
+  $maxfilewidth = 120;
+  $maxfileheight = 120;
+  $uploader = new XoopsMediaUploader('/home/xoops/uploads', $allowed_mimetypes, $maxfilesize, $maxfilewidth, $maxfileheight);
+  if ($uploader->fetchMedia($_POST['uploade_file_name'])) {
+    if (!$uploader->upload()) {
+       echo $uploader->getErrors();
+    } else {
+       echo '<h4>File uploaded successfully!</h4>'
+       echo 'Saved as: ' . $uploader->getSavedFileName() . '<br />';
+       echo 'Full path: ' . $uploader->getSavedDestination();
+    }
+  } else {
+    echo $uploader->getErrors();
+  }
+
+*/
+
+/**
+ * Upload Media files
+ * 
+ * Example of usage:
+ * <code>
+ * include_once 'uploader.php';
+ * $allowed_mimetypes = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/x-png');
+ * $maxfilesize = 50000;
+ * $maxfilewidth = 120;
+ * $maxfileheight = 120;
+ * $uploader = new XoopsMediaUploader('/home/xoops/uploads', $allowed_mimetypes, $maxfilesize, $maxfilewidth, $maxfileheight);
+ * if ($uploader->fetchMedia($_POST['uploade_file_name'])) {
+ *   if (!$uploader->upload()) {
+ *      echo $uploader->getErrors();
+ *   } else {
+ *      echo '<h4>File uploaded successfully!</h4>'
+ *      echo 'Saved as: ' . $uploader->getSavedFileName() . '<br />';
+ *      echo 'Full path: ' . $uploader->getSavedDestination();
+ *   }
+ * } else {
+ *   echo $uploader->getErrors();
+ * }
+ * </code>
+ *
+ * @package        kernel
+ * @subpackage    core
+ *
+ * @author        Kazumi Ono     <onokazu at xoops.org>
+ * @copyright    (c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class XoopsMediaUploader
+{
+	/**
+	* Flag indicating if unrecognized mimetypes should be allowed (use with precaution ! may lead to security issues )
+	**/
+ 	var $allowUnknownTypes = false;
+
+    var $mediaName;
+    var $mediaType;
+    var $mediaSize;
+    var $mediaTmpName;
+    var $mediaError;
+    var $mediaRealType = '';
+
+    var $uploadDir = '';
+
+    var $allowedMimeTypes = array();
+
+    var $maxFileSize = 0;
+    var $maxWidth;
+    var $maxHeight;
+
+    var $targetFileName;
+
+    var $prefix;
+
+    var $errors = array();
+
+    var $savedDestination;
+
+    var $savedFileName;
+
+	var $extensionToMime = array();
+    /**
+     * Constructor
+     *
+     * @param   string  $uploadDir
+     * @param   array   $allowedMimeTypes
+     * @param   int     $maxFileSize
+     * @param   int     $maxWidth
+     * @param   int     $maxHeight
+     * @param   int     $cmodvalue
+     **/
+    function XoopsMediaUploader($uploadDir, $allowedMimeTypes, $maxFileSize=0, $maxWidth=null, $maxHeight=null)
+    {
+		@$this->extensionToMime = include( XOOPS_ROOT_PATH . '/class/mimetypes.inc.php' );
+		if ( !is_array( $this->extensionToMime ) ) {
+		 	$this->extensionToMime = array();
+			return false;
+		}
+        if (is_array($allowedMimeTypes)) {
+            $this->allowedMimeTypes =& $allowedMimeTypes;
+        }
+        $this->uploadDir = $uploadDir;
+        $this->maxFileSize = intval($maxFileSize);
+        if(isset($maxWidth)) {
+            $this->maxWidth = intval($maxWidth);
+        }
+        if(isset($maxHeight)) {
+            $this->maxHeight = intval($maxHeight);
+        }
+    }
+
+    /**
+     * Fetch the uploaded file
+     *
+     * @param   string  $media_name Name of the file field
+     * @param   int     $index      Index of the file (if more than one uploaded under that name)
+     * @return  bool
+     **/
+    function fetchMedia($media_name, $index = null)
+    {
+		if ( empty( $this->extensionToMime ) ) {
+			$this->setErrors( 'Error loading mimetypes definition' );
+			return false;
+		}
+		if (!isset($_FILES[$media_name])) {
+            $this->setErrors('File not found');
+            return false;
+        } elseif (is_array($_FILES[$media_name]['name']) && isset($index)) {
+            $index = intval($index);
+            $this->mediaName = (get_magic_quotes_gpc()) ? stripslashes($_FILES[$media_name]['name'][$index]) : $_FILES[$media_name]['name'][$index];
+            $this->mediaType = $_FILES[$media_name]['type'][$index];
+            $this->mediaSize = $_FILES[$media_name]['size'][$index];
+            $this->mediaTmpName = $_FILES[$media_name]['tmp_name'][$index];
+            $this->mediaError = !empty($_FILES[$media_name]['error'][$index]) ? $_FILES[$media_name]['errir'][$index] : 0;
+        } else {
+            $media_name =& $_FILES[$media_name];
+			$this->mediaName = (get_magic_quotes_gpc()) ? stripslashes($media_name['name']) : $media_name['name'];
+            $this->mediaName = $media_name['name'];
+            $this->mediaType = $media_name['type'];
+            $this->mediaSize = $media_name['size'];
+            $this->mediaTmpName = $media_name['tmp_name'];
+            $this->mediaError = !empty($media_name['error']) ? $media_name['error'] : 0;
+        }
+		if ( ($ext = strrpos( $this->mediaName, '.' )) !== false ) {
+			$ext = substr( $this->mediaName, $ext + 1 );
+			if ( isset( $this->extensionToMime[$ext] ) ) {
+				$this->mediaRealType = $this->extensionToMime[$ext];
+				//trigger_error( "XoopsMediaUploader: Set mediaRealType to {$this->mediaRealType} (file extension is $ext)", E_USER_NOTICE );
+			}
+		}
+        $this->errors = array();
+		if ( $ext && in_array( $ext, array( 'gif', 'jpg', 'jpeg', 'png', 'bmp', 'xbm' ) ) ) {
+	   		// Prevent sending of invalid images that would crash IE
+			if ( ! ( $info = getimagesize( $this->mediaTmpName ) ) ) {
+				$this->setErrors( 'Invalid file content' );
+				return false;
+			}
+		}
+        if (intval($this->mediaSize) < 0) {
+            $this->setErrors('Invalid File Size');
+            return false;
+        }
+        if ($this->mediaName == '') {
+            $this->setErrors('Filename Is Empty');
+            return false;
+        }
+        if ($this->mediaTmpName == 'none' || !is_uploaded_file($this->mediaTmpName)) {
+            $this->setErrors('No file uploaded');
+            return false;
+        }
+        if ($this->mediaError > 0) {
+            $this->setErrors('Error occurred: Error #'.$this->mediaError);
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Set the target filename
+     * 
+     * @param   string  $value
+     **/
+    function setTargetFileName($value){
+        $this->targetFileName = strval(trim($value));
+    }
+
+    /**
+     * Set the prefix
+     * 
+     * @param   string  $value
+     **/
+    function setPrefix($value){
+        $this->prefix = strval(trim($value));
+    }
+
+    /**
+     * Get the uploaded filename
+     * 
+     * @return  string 
+     **/
+    function getMediaName()
+    {
+        return $this->mediaName;
+    }
+
+    /**
+     * Get the type of the uploaded file
+     * 
+     * @return  string 
+     **/
+    function getMediaType()
+    {
+        return $this->mediaType;
+    }
+
+    /**
+     * Get the size of the uploaded file
+     * 
+     * @return  int 
+     **/
+    function getMediaSize()
+    {
+        return $this->mediaSize;
+    }
+
+    /**
+     * Get the temporary name that the uploaded file was stored under
+     * 
+     * @return  string 
+     **/
+    function getMediaTmpName()
+    {
+        return $this->mediaTmpName;
+    }
+
+    /**
+     * Get the saved filename
+     * 
+     * @return  string 
+     **/
+    function getSavedFileName(){
+        return $this->savedFileName;
+    }
+
+    /**
+     * Get the destination the file is saved to
+     * 
+     * @return  string
+     **/
+    function getSavedDestination(){
+        return $this->savedDestination;
+    }
+
+    /**
+     * Check the file and copy it to the destination
+     * 
+     * @return  bool
+     **/
+    function upload($chmod = 0644)
+    {
+        if ($this->uploadDir == '') {
+            $this->setErrors('Upload directory not set');
+            return false;
+        }
+        if (!is_dir($this->uploadDir)) {
+            $this->setErrors('Failed opening directory: '.$this->uploadDir);
+        }
+        if (!is_writeable($this->uploadDir)) {
+            $this->setErrors('Failed opening directory with write permission: '.$this->uploadDir);
+        }
+        if (!$this->checkMaxFileSize()) {
+            $this->setErrors('File size too large: '.$this->mediaSize);
+        }
+        if (!$this->checkMaxWidth()) {
+            $this->setErrors(sprintf('File width must be smaller than %u', $this->maxWidth));
+        }
+        if (!$this->checkMaxHeight()) {
+            $this->setErrors(sprintf('File height must be smaller than %u', $this->maxHeight));
+        }
+        if (!$this->checkMimeType()) {
+            $this->setErrors('MIME type not allowed: '.$this->mediaType);
+        }
+        if (count($this->errors) > 0) {
+            return false;
+        }
+        if (!$this->_copyFile($chmod)) {
+            $this->setErrors('Failed uploading file: '.$this->mediaName);
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Copy the file to its destination
+     * 
+     * @return  bool 
+     **/
+    function _copyFile($chmod)
+    {
+        $matched = array();
+        if (!preg_match("/\.([a-zA-Z0-9]+)$/", $this->mediaName, $matched)) {
+            return false;
+        }
+        if (isset($this->targetFileName)) {
+            $this->savedFileName = $this->targetFileName;
+        } elseif (isset($this->prefix)) {
+            $this->savedFileName = uniqid($this->prefix).'.'.strtolower($matched[1]);
+        } else {
+            $this->savedFileName = strtolower($this->mediaName);
+        }
+        $this->savedDestination = $this->uploadDir.'/'.$this->savedFileName;
+        if (!move_uploaded_file($this->mediaTmpName, $this->savedDestination)) {
+            return false;
+        }
+        @chmod($this->savedDestination, $chmod);
+        return true;
+    }
+
+    /**
+     * Is the file the right size?
+     * 
+     * @return  bool 
+     **/
+    function checkMaxFileSize()
+    {
+        if ($this->mediaSize > $this->maxFileSize) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Is the picture the right width?
+     * 
+     * @return  bool 
+     **/
+    function checkMaxWidth()
+    {
+        if (!isset($this->maxWidth)) {
+            return true;
+        }
+        if (false !== $dimension = getimagesize($this->mediaTmpName)) {
+            if ($dimension[0] > $this->maxWidth) {
+                return false;
+            }
+        } else {
+            trigger_error(sprintf('Failed fetching image size of %s, skipping max width check..', $this->mediaTmpName), E_USER_WARNING);
+        }
+        return true;
+    }
+
+    /**
+     * Is the picture the right height?
+     * 
+     * @return  bool 
+     **/
+    function checkMaxHeight()
+    {
+        if (!isset($this->maxHeight)) {
+            return true;
+        }
+        if (false !== $dimension = getimagesize($this->mediaTmpName)) {
+            if ($dimension[1] > $this->maxHeight) {
+                return false;
+            }
+        } else {
+            trigger_error(sprintf('Failed fetching image size of %s, skipping max height check..', $this->mediaTmpName), E_USER_WARNING);
+        }
+        return true;
+    }
+
+    /**
+     * Check whether or not the uploaded file type is allowed
+     *
+     * @return  bool
+     **/
+    function checkMimeType()
+    {
+		if ( empty( $this->mediaRealType ) && !$this->allowUnknownTypes ) {
+			$this->setErrors( 'Unknown filetype rejected' );
+			return false;
+		}
+
+		return ( empty($this->allowedMimeTypes) || in_array($this->mediaRealType, $this->allowedMimeTypes) );
+	}
+
+    /**
+     * Add an error
+     * 
+     * @param   string  $error
+     **/
+    function setErrors($error)
+    {
+        $this->errors[] = trim($error);
+    }
+
+    /**
+     * Get generated errors
+     *
+     * @param    bool    $ashtml Format using HTML?
+     * 
+     * @return    array|string    Array of array messages OR HTML string
+     */
+    function &getErrors($ashtml = true)
+    {
+        if (!$ashtml) {
+            return $this->errors;
+        } else {
+            $ret = '';
+            if (count($this->errors) > 0) {
+                $ret = '<h4>Errors Returned While Uploading</h4>';
+                foreach ($this->errors as $error) {
+                    $ret .= $error.'<br />';
+                }
+            }
+            return $ret;
+        }
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/uploader.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xml/rpc/bloggerapi.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xml/rpc/bloggerapi.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xml/rpc/bloggerapi.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,297 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+require_once XOOPS_ROOT_PATH.'/class/xml/rpc/xmlrpcapi.php';
+
+class BloggerApi extends XoopsXmlRpcApi
+{
+
+    function BloggerApi(&$params, &$response, &$module)
+    {
+        $this->XoopsXmlRpcApi($params, $response, $module);
+        $this->_setXoopsTagMap('storyid', 'postid');
+        $this->_setXoopsTagMap('published', 'dateCreated');
+        $this->_setXoopsTagMap('uid', 'userid');
+    }
+
+    function newPost()
+    {
+        if (!$this->_checkUser($this->params[2], $this->params[3])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            if (!$fields =& $this->_getPostFields(null, $this->params[1])) {
+                $this->response->add(new XoopsXmlRpcFault(106));
+            } else {
+                $missing = array();
+                $post = array();
+                foreach ($fields as $tag => $detail) {
+                    $maptag = $this->_getXoopsTagMap($tag);
+                    $data = $this->_getTagCdata($this->params[4], $maptag, true);
+                    if (trim($data) == ''){
+                        if ($detail['required']) {
+                            $missing[] = $maptag;
+                        }
+                    } else {
+                        $post[$tag] = $data;
+                    }
+                }
+                if (count($missing) > 0) {
+                    $msg = '';
+                    foreach ($missing as $m) {
+                        $msg .= '<'.$m.'> ';
+                    }
+                    $this->response->add(new XoopsXmlRpcFault(109, $msg));
+                } else {
+                    $newparams = array();
+                    // Xoops Api ignores App key
+                    $newparams[0] = $this->params[1];
+                    $newparams[1] = $this->params[2];
+                    $newparams[2] = $this->params[3];
+                    foreach ($post as $key => $value) {
+                        $newparams[3][$key] =& $value;
+                        unset($value);
+                    }
+                    $newparams[3]['xoops_text'] =& $this->params[4];
+                    $newparams[4] = $this->params[5];
+                    $xoopsapi =& $this->_getXoopsApi($newparams);
+                    $xoopsapi->_setUser($this->user, $this->isadmin);
+                    $xoopsapi->newPost();
+                }
+            }
+        }
+    }
+
+    function editPost()
+    {
+        if (!$this->_checkUser($this->params[2], $this->params[3])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            if (!$fields =& $this->_getPostFields($this->params[1])) {
+            } else {
+                $missing = array();
+                $post = array();
+                foreach ($fields as $tag => $detail) {
+                    $data = $this->_getTagCdata($this->params[4], $tag, true);
+                    if (trim($data) == ''){
+                        if ($detail['required']) {
+                            $missing[] = $tag;
+                        }
+                    } else {
+                        $post[$tag] = $data;
+                    }
+                }
+                if (count($missing) > 0) {
+                    $msg = '';
+                    foreach ($missing as $m) {
+                        $msg .= '<'.$m.'> ';
+                    }
+                    $this->response->add(new XoopsXmlRpcFault(109, $msg));
+                } else {
+                    $newparams = array();
+                    // XOOPS API ignores App key (index 0 of params)
+                    $newparams[0] = $this->params[1];
+                    $newparams[1] = $this->params[2];
+                    $newparams[2] = $this->params[3];
+                    foreach ($post as $key => $value) {
+                        $newparams[3][$key] =& $value;
+                        unset($value);
+                    }
+                    $newparams[3]['xoops_text'] =& $this->params[4];
+                    $newparams[4] = $this->params[5];
+                    $xoopsapi =& $this->_getXoopsApi($newparams);
+                    $xoopsapi->_setUser($this->user, $this->isadmin);
+                    $xoopsapi->editPost();
+                }
+            }
+        }
+    }
+
+    function deletePost()
+    {
+        if (!$this->_checkUser($this->params[2], $this->params[3])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            // XOOPS API ignores App key (index 0 of params)
+            array_shift($this->params);
+            $xoopsapi =& $this->_getXoopsApi($this->params);
+            $xoopsapi->_setUser($this->user, $this->isadmin);
+            $xoopsapi->deletePost();
+        }
+    }
+
+    function getPost()
+    {
+        if (!$this->_checkUser($this->params[2], $this->params[3])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            // XOOPS API ignores App key (index 0 of params)
+            array_shift($this->params);
+            $xoopsapi =& $this->_getXoopsApi($this->params);
+            $xoopsapi->_setUser($this->user, $this->isadmin);
+            $ret =& $xoopsapi->getPost(false);
+            if (is_array($ret)) {
+                $struct = new XoopsXmlRpcStruct();
+                $content = '';
+                foreach ($ret as $key => $value) {
+                    $maptag = $this->_getXoopsTagMap($key);
+                    switch($maptag) {
+                    case 'userid':
+                        $struct->add('userid', new XoopsXmlRpcString($value));
+                        break;
+                    case 'dateCreated':
+                        $struct->add('dateCreated', new XoopsXmlRpcDatetime($value));
+                        break;
+                    case 'postid':
+                        $struct->add('postid', new XoopsXmlRpcString($value));
+                        break;
+                    default :
+                        $content .= '<'.$key.'>'.trim($value).'</'.$key.'>';
+                        break;
+                    }
+                }
+                $struct->add('content', new XoopsXmlRpcString($content));
+                $this->response->add($struct);
+            } else {
+                $this->response->add(new XoopsXmlRpcFault(106));
+            }
+        }
+    }
+
+    function getRecentPosts()
+    {
+        if (!$this->_checkUser($this->params[2], $this->params[3])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            // XOOPS API ignores App key (index 0 of params)
+            array_shift($this->params);
+            $xoopsapi =& $this->_getXoopsApi($this->params);
+            $xoopsapi->_setUser($this->user, $this->isadmin);
+            $ret =& $xoopsapi->getRecentPosts(false);
+            if (is_array($ret)) {
+                $arr = new XoopsXmlRpcArray();
+                $count = count($ret);
+                if ($count == 0) {
+                    $this->response->add(new XoopsXmlRpcFault(106, 'Found 0 Entries'));
+                } else {
+                    for ($i = 0; $i < $count; $i++) {
+                        $struct = new XoopsXmlRpcStruct();
+                        $content = '';
+                        foreach($ret[$i] as $key => $value) {
+                            $maptag = $this->_getXoopsTagMap($key);
+                            switch($maptag) {
+                            case 'userid':
+                                $struct->add('userid', new XoopsXmlRpcString($value));
+                                break;
+                            case 'dateCreated':
+                                $struct->add('dateCreated', new XoopsXmlRpcDatetime($value));
+                                break;
+                            case 'postid':
+                                $struct->add('postid', new XoopsXmlRpcString($value));
+                                break;
+                            default :
+                                $content .= '<'.$key.'>'.trim($value).'</'.$key.'>';
+                                break;
+                            }
+                        }
+                        $struct->add('content', new XoopsXmlRpcString($content));
+                        $arr->add($struct);
+                        unset($struct);
+                    }
+                    $this->response->add($arr);
+                }
+            } else {
+                $this->response->add(new XoopsXmlRpcFault(106));
+            }
+        }
+    }
+
+    function getUsersBlogs()
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            $arr = new XoopsXmlRpcArray();
+            $struct = new XoopsXmlRpcStruct();
+            $struct->add('url', new XoopsXmlRpcString(XOOPS_URL.'/modules/'.$this->module->getVar('dirname').'/'));
+            $struct->add('blogid', new XoopsXmlRpcString($this->module->getVar('mid')));
+            $struct->add('blogName', new XoopsXmlRpcString('XOOPS Blog'));
+            $arr->add($struct);
+            $this->response->add($arr);
+        }
+    }
+
+    function getUserInfo()
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            $struct = new XoopsXmlRpcStruct();
+            $struct->add('nickname', new XoopsXmlRpcString($this->user->getVar('uname')));
+            $struct->add('userid', new XoopsXmlRpcString($this->user->getVar('uid')));
+            $struct->add('url', new XoopsXmlRpcString($this->user->getVar('url')));
+            $struct->add('email', new XoopsXmlRpcString($this->user->getVar('email')));
+            $struct->add('lastname', new XoopsXmlRpcString(''));
+            $struct->add('firstname', new XoopsXmlRpcString($this->user->getVar('name')));
+            $this->response->add($struct);
+        }
+    }
+
+    function getTemplate()
+    {
+        if (!$this->_checkUser($this->params[2], $this->params[3])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            switch ($this->params[5]) {
+            case 'main':
+                $this->response->add(new XoopsXmlRpcFault(107));
+                break;
+            case 'archiveIndex':
+                $this->response->add(new XoopsXmlRpcFault(107));
+                break;
+            default:
+                $this->response->add(new XoopsXmlRpcFault(107));
+                break;
+            }
+        }
+    }
+
+    function setTemplate()
+    {
+        if (!$this->_checkUser($this->params[2], $this->params[3])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            $this->response->add(new XoopsXmlRpcFault(107));
+        }
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xml/rpc/bloggerapi.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xml/rpc/metaweblogapi.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xml/rpc/metaweblogapi.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xml/rpc/metaweblogapi.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,277 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+require_once XOOPS_ROOT_PATH.'/class/xml/rpc/xmlrpcapi.php';
+
+class MetaWeblogApi extends XoopsXmlRpcApi
+{
+    function MetaWeblogApi(&$params, &$response, &$module)
+    {
+        $this->XoopsXmlRpcApi($params, $response, $module);
+        $this->_setXoopsTagMap('storyid', 'postid');
+        $this->_setXoopsTagMap('published', 'dateCreated');
+        $this->_setXoopsTagMap('uid', 'userid');
+        //$this->_setXoopsTagMap('hometext', 'description');
+    }
+
+    function newPost()
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            if (!$fields =& $this->_getPostFields(null, $this->params[0])) {
+                $this->response->add(new XoopsXmlRpcFault(106));
+            } else {
+                $missing = array();
+                $post = array();
+                foreach ($fields as $tag => $detail) {
+                    $maptag = $this->_getXoopsTagMap($tag);
+                    if (!isset($this->params[3][$maptag])) {
+                        $data = $this->_getTagCdata($this->params[3]['description'], $maptag, true);
+                        if (trim($data) == ''){
+                            if ($detail['required']) {
+                                $missing[] = $maptag;
+                            }
+                        } else {
+                            $post[$tag] = $data;
+                        }
+                    } else {
+                        $post[$tag] = $this->params[3][$maptag];
+                    }
+                }
+                if (count($missing) > 0) {
+                    $msg = '';
+                    foreach ($missing as $m) {
+                        $msg .= '<'.$m.'> ';echo $m;
+                    }
+                    $this->response->add(new XoopsXmlRpcFault(109, $msg));
+                } else {
+                    $newparams = array();
+                    $newparams[0] = $this->params[0];
+                    $newparams[1] = $this->params[1];
+                    $newparams[2] = $this->params[2];
+                    foreach ($post as $key => $value) {
+                        $newparams[3][$key] =& $value;
+                        unset($value);
+                    }
+                    $newparams[3]['xoops_text'] = $this->params[3]['description'];
+                    if (isset($this->params[3]['categories']) && is_array($this->params[3]['categories'])) {
+                        foreach ($this->params[3]['categories'] as $k => $v) {
+                            $newparams[3]['categories'][$k] = $v;
+                        }
+                    }
+                    $newparams[4] = $this->params[4];
+                    $xoopsapi =& $this->_getXoopsApi($newparams);
+                    $xoopsapi->_setUser($this->user, $this->isadmin);
+                    $xoopsapi->newPost();
+                }
+            }
+        }
+    }
+
+    function editPost()
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            if (!$fields =& $this->_getPostFields($this->params[0])) {
+            } else {
+                $missing = array();
+                $post = array();
+                foreach ($fields as $tag => $detail) {
+                    $maptag = $this->_getXoopsTagMap($tag);
+                    if (!isset($this->params[3][$maptag])) {
+                        $data = $this->_getTagCdata($this->params[3]['description'], $maptag, true);
+                        if (trim($data) == ''){
+                            if ($detail['required']) {
+                                $missing[] = $tag;
+                            }
+                        } else {
+                            $post[$tag] = $data;
+                        }
+                    } else {
+                        $post[$tag] =& $this->params[3][$maptag];
+                    }
+                }
+                if (count($missing) > 0) {
+                    $msg = '';
+                    foreach ($missing as $m) {
+                        $msg .= '<'.$m.'> ';
+                    }
+                    $this->response->add(new XoopsXmlRpcFault(109, $msg));
+                } else {
+                    $newparams = array();
+                    $newparams[0] = $this->params[0];
+                    $newparams[1] = $this->params[1];
+                    $newparams[2] = $this->params[2];
+                    foreach ($post as $key => $value) {
+                        $newparams[3][$key] =& $value;
+                        unset($value);
+                    }
+                    if (isset($this->params[3]['categories']) && is_array($this->params[3]['categories'])) {
+                        foreach ($this->params[3]['categories'] as $k => $v) {
+                            $newparams[3]['categories'][$k] = $v;
+                        }
+                    }
+                    $newparams[3]['xoops_text'] = $this->params[3]['description'];
+                    $newparams[4] = $this->params[4];
+                    $xoopsapi =& $this->_getXoopsApi($newparams);
+                    $xoopsapi->_setUser($this->user, $this->isadmin);
+                    $xoopsapi->editPost();
+                }
+            }
+        }
+    }
+
+    function getPost()
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            $xoopsapi =& $this->_getXoopsApi($this->params);
+            $xoopsapi->_setUser($this->user, $this->isadmin);
+            $ret =& $xoopsapi->getPost(false);
+            if (is_array($ret)) {
+                $struct = new XoopsXmlRpcStruct();
+                $content = '';
+                foreach ($ret as $key => $value) {
+                    $maptag = $this->_getXoopsTagMap($key);
+                    switch($maptag) {
+                    case 'userid':
+                        $struct->add('userid', new XoopsXmlRpcString($value));
+                        break;
+                    case 'dateCreated':
+                        $struct->add('dateCreated', new XoopsXmlRpcDatetime($value));
+                        break;
+                    case 'postid':
+                        $struct->add('postid', new XoopsXmlRpcString($value));
+                        $struct->add('link', new XoopsXmlRpcString(XOOPS_URL.'/modules/xoopssections/item.php?item='.$value));
+                        $struct->add('permaLink', new XoopsXmlRpcString(XOOPS_URL.'/modules/xoopssections/item.php?item='.$value));
+                        break;
+                    case 'title':
+                        $struct->add('title', new XoopsXmlRpcString($value));
+                        break;
+                    default :
+                        $content .= '<'.$key.'>'.trim($value).'</'.$key.'>';
+                        break;
+                    }
+                }
+                $struct->add('description', new XoopsXmlRpcString($content));
+                $this->response->add($struct);
+            } else {
+                $this->response->add(new XoopsXmlRpcFault(106));
+            }
+        }
+    }
+
+    function getRecentPosts()
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            $xoopsapi =& $this->_getXoopsApi($this->params);
+            $xoopsapi->_setUser($this->user, $this->isadmin);
+            $ret =& $xoopsapi->getRecentPosts(false);
+            if (is_array($ret)) {
+                $arr = new XoopsXmlRpcArray();
+                $count = count($ret);
+                if ($count == 0) {
+                    $this->response->add(new XoopsXmlRpcFault(106, 'Found 0 Entries'));
+                } else {
+                    for ($i = 0; $i < $count; $i++) {
+                        $struct = new XoopsXmlRpcStruct();
+                        $content = '';
+                        foreach($ret[$i] as $key => $value) {
+                            $maptag = $this->_getXoopsTagMap($key);
+                            switch($maptag) {
+                            case 'userid':
+                                $struct->add('userid', new XoopsXmlRpcString($value));
+                                break;
+                            case 'dateCreated':
+                                $struct->add('dateCreated', new XoopsXmlRpcDatetime($value));
+                                break;
+                            case 'postid':
+                                $struct->add('postid', new XoopsXmlRpcString($value));
+                                $struct->add('link', new XoopsXmlRpcString(XOOPS_URL.'/modules/news/article.php?item_id='.$value));
+                                $struct->add('permaLink', new XoopsXmlRpcString(XOOPS_URL.'/modules/news/article.php?item_id='.$value));
+                                break;
+                            case 'title':
+                                $struct->add('title', new XoopsXmlRpcString($value));
+                                break;
+                            default :
+                                $content .= '<'.$key.'>'.trim($value).'</'.$key.'>';
+                                break;
+                            }
+                        }
+                        $struct->add('description', new XoopsXmlRpcString($content));
+                        $arr->add($struct);
+                        unset($struct);
+                    }
+                    $this->response->add($arr);
+                }
+            } else {
+                $this->response->add(new XoopsXmlRpcFault(106));
+            }
+        }
+    }
+
+    function getCategories()
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            $xoopsapi =& $this->_getXoopsApi($this->params);
+            $xoopsapi->_setUser($this->user, $this->isadmin);
+            $ret =& $xoopsapi->getCategories(false);
+            if (is_array($ret)) {
+                $arr = new XoopsXmlRpcArray();
+                foreach ($ret as $id => $detail) {
+                    $struct = new XoopsXmlRpcStruct();
+                    $struct->add('description', new XoopsXmlRpcString($detail));
+                    $struct->add('htmlUrl', new XoopsXmlRpcString(XOOPS_URL.'/modules/news/index.php?storytopic='.$id));
+                    $struct->add('rssUrl', new XoopsXmlRpcString(''));
+                    $catstruct = new XoopsXmlRpcStruct();
+                    $catstruct->add($detail['title'], $struct);
+                    $arr->add($catstruct);
+                    unset($struct);
+                    unset($catstruct);
+                }
+                $this->response->add($arr);
+            } else {
+                $this->response->add(new XoopsXmlRpcFault(106));
+            }
+        }
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xml/rpc/metaweblogapi.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xml/rpc/movabletypeapi.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xml/rpc/movabletypeapi.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xml/rpc/movabletypeapi.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,82 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+require_once XOOPS_ROOT_PATH.'/class/xml/rpc/xmlrpcapi.php';
+
+class MovableTypeApi extends XoopsXmlRpcApi
+{
+    function MovableTypeApi(&$params, &$response, &$module)
+    {
+        $this->XoopsXmlRpcApi($params, $response, $module);
+    }
+
+    function getCategoryList()
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            $xoopsapi =& $this->_getXoopsApi($this->params);
+            $xoopsapi->_setUser($this->user, $this->isadmin);
+            $ret =& $xoopsapi->getCategories(false);
+            if (is_array($ret)) {
+                $arr = new XoopsXmlRpcArray();
+                foreach ($ret as $id => $name) {
+                    $struct = new XoopsXmlRpcStruct();
+                    $struct->add('categoryId', new XoopsXmlRpcString($id));
+                    $struct->add('categoryName', new XoopsXmlRpcString($name['title']));
+                    $arr->add($struct);
+                    unset($struct);
+                }
+                $this->response->add($arr);
+            } else {
+                $this->response->add(new XoopsXmlRpcFault(106));
+            }
+        }
+    }
+
+    function getPostCategories()
+    {
+        $this->response->add(new XoopsXmlRpcFault(107));
+    }
+
+    function setPostCategories()
+    {
+        $this->response->add(new XoopsXmlRpcFault(107));
+    }
+
+    function supportedMethods()
+    {
+        $this->response->add(new XoopsXmlRpcFault(107));
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xml/rpc/movabletypeapi.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpcapi.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpcapi.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpcapi.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,167 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+
+class XoopsXmlRpcApi
+{
+
+    // reference to method parameters 
+    var $params;
+
+    // reference to xmlrpc document class object
+    var $response;
+
+    // reference to module class object
+    var $module;
+
+    // map between xoops tags and blogger specific tags
+    var $xoopsTagMap = array();
+
+    // user class object
+    var $user;
+    
+    var $isadmin = false;
+
+
+
+    function XoopsXmlRpcApi(&$params, &$response, &$module)
+    {
+        $this->params =& $params;
+        $this->response =& $response;
+        $this->module =& $module;
+    }
+
+    function _setUser(&$user, $isadmin = false) 
+    {
+        if (is_object($user)) {
+            $this->user =& $user;
+            $this->isadmin = $isadmin;
+        }
+    }
+
+    function _checkUser($username, $password)
+    {
+        if (isset($this->user)) {
+            return true;
+        }
+		$member_handler =& xoops_gethandler('member');
+        $this->user =& $member_handler->loginUser(addslashes($username), addslashes($password));
+        if (!is_object($this->user)) {
+            unset($this->user);
+            return false;
+        }
+		$moduleperm_handler =& xoops_gethandler('groupperm');
+        if (!$moduleperm_handler->checkRight('module_read', $this->module->getVar('mid'), $this->user->getGroups())) {
+            unset($this->user);
+            return false;
+        }
+        return true;
+    }
+
+    function _checkAdmin()
+    {
+        if ($this->isadmin) {
+            return true;
+        }
+        if (!isset($this->user)) {
+            return false;
+        }
+        if (!$this->user->isAdmin($this->module->getVar('mid'))) {
+            return false;
+        }
+        $this->isadmin = true;
+        return true;
+    }
+
+    function &_getPostFields($post_id = null, $blog_id = null)
+    {
+        $ret = array();
+        $ret['title'] = array('required' => true, 'form_type' => 'textbox', 'value_type' => 'text');
+        $ret['hometext'] = array('required' => false, 'form_type' => 'textarea', 'data_type' => 'textarea');
+        $ret['moretext'] = array('required' => false, 'form_type' => 'textarea', 'data_type' => 'textarea');
+        $ret['categories'] = array('required' => false, 'form_type' => 'select_multi', 'data_type' => 'array');
+        /*
+        if (!isset($blog_id)) {
+            if (!isset($post_id)) {
+                return false;
+            }
+            $itemman =& $this->mf->get(MANAGER_ITEM);
+            $item =& $itemman->get($post_id);
+            $blog_id = $item->getVar('sect_id');
+        }
+        $sectman =& $this->mf->get(MANAGER_SECTION);
+        $this->section =& $sectman->get($blog_id);
+        $ret =& $this->section->getVar('sect_fields');
+        */
+        return $ret;
+    }
+
+    function _setXoopsTagMap($xoopstag, $blogtag)
+    {
+        if (trim($blogtag) != '') {
+            $this->xoopsTagMap[$xoopstag] = $blogtag;
+        }
+    }
+
+    function _getXoopsTagMap($xoopstag)
+    {
+        if (isset($this->xoopsTagMap[$xoopstag])) {
+            return $this->xoopsTagMap[$xoopstag];
+        }
+        return $xoopstag;
+    }
+
+    function _getTagCdata(&$text, $tag, $remove = true)
+    {
+        $ret = '';
+        $match = array();
+        if (preg_match("/\<".$tag."\>(.*)\<\/".$tag."\>/is", $text, $match)) {
+            if ($remove) {
+                $text = str_replace($match[0], '', $text);
+            }
+            $ret = $match[1];
+        }
+        return $ret;
+    }
+
+    // kind of dirty method to load XOOPS API and create a new object thereof
+    // returns itself if the calling object is XOOPS API 
+    function &_getXoopsApi(&$params)
+    {
+        if (strtolower(get_class($this)) != 'xoopsapi') {
+            require_once(XOOPS_ROOT_PATH.'/class/xml/rpc/xoopsapi.php');
+            return new XoopsApi($params, $this->response, $this->module);
+        } else {
+            return $this;
+        }
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpcapi.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpcparser.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpcparser.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpcparser.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,969 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+require_once XOOPS_ROOT_PATH.'/class/xml/saxparser.php';
+require_once XOOPS_ROOT_PATH.'/class/xml/xmltaghandler.php';
+
+/**
+* Class RSS Parser
+*
+* This class offers methods to parse RSS Files
+*
+* @link      http://www.xoops.org/ Latest release of this class
+* @package   XOOPS
+* @copyright Copyright (c) 2001 xoops.org. All rights reserved.
+* @author    Kazumi Ono <onokazu at xoops.org>
+* @version   1.6 ($Date$) $Revision$
+* @access    public
+*/
+
+class XoopsXmlRpcParser extends SaxParser
+{
+
+    /**
+    *
+    *
+    *
+    *
+    * @access private
+    * @var    array
+    */
+    var $_param;
+
+    /**
+    *
+    *
+    *
+    *
+    * @access private
+    * @var    string
+    */
+    var $_methodName;
+
+    /**
+    *
+    *
+    *
+    *
+    * @access private
+    * @var    array
+    */
+    var $_tempName;
+
+    /**
+    *
+    *
+    *
+    *
+    * @access private
+    * @var    array
+    */
+    var $_tempValue;
+
+    /**
+    *
+    *
+    *
+    *
+    * @access private
+    * @var    array
+    */
+    var $_tempMember;
+
+    /**
+    *
+    *
+    *
+    *
+    * @access private
+    * @var    array
+    */
+    var $_tempStruct;
+
+    /**
+    *
+    *
+    *
+    *
+    * @access private
+    * @var    array
+    */
+    var $_tempArray;
+
+    /**
+    *
+    *
+    *
+    *
+    * @access private
+    * @var    array
+    */
+    var $_workingLevel = array();
+
+
+    /**
+    * Constructor of the class
+    *
+    *
+    *
+    *
+    * @access
+    * @author
+    * @see
+    */
+    function XoopsXmlRpcParser(&$input)
+    {
+        $this->SaxParser($input);
+        $this->addTagHandler(new RpcMethodNameHandler());
+        $this->addTagHandler(new RpcIntHandler());
+        $this->addTagHandler(new RpcDoubleHandler());
+        $this->addTagHandler(new RpcBooleanHandler());
+        $this->addTagHandler(new RpcStringHandler());
+        $this->addTagHandler(new RpcDateTimeHandler());
+        $this->addTagHandler(new RpcBase64Handler());
+        $this->addTagHandler(new RpcNameHandler());
+        $this->addTagHandler(new RpcValueHandler());
+        $this->addTagHandler(new RpcMemberHandler());
+        $this->addTagHandler(new RpcStructHandler());
+        $this->addTagHandler(new RpcArrayHandler());
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function setTempName($name)
+    {
+        $this->_tempName[$this->getWorkingLevel()] = $name;
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getTempName()
+    {
+        return $this->_tempName[$this->getWorkingLevel()];
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function setTempValue($value)
+    {
+        if (is_array($value)) {
+            settype($this->_tempValue, 'array');
+            foreach ($value as $k => $v) {
+                $this->_tempValue[$k] = $v;
+            }
+        } elseif (is_string($value)) {
+            if (isset($this->_tempValue)) {
+                if (is_string($this->_tempValue)) {
+                    $this->_tempValue .= $value;
+                }
+            } else {
+                $this->_tempValue = $value;
+            }
+        } else {
+            $this->_tempValue = $value;
+        }
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getTempValue()
+    {
+        return $this->_tempValue;
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function resetTempValue()
+    {
+        unset($this->_tempValue);
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function setTempMember($name, $value)
+    {
+        $this->_tempMember[$this->getWorkingLevel()][$name] = $value;
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getTempMember()
+    {
+        return $this->_tempMember[$this->getWorkingLevel()];
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function resetTempMember()
+    {
+        $this->_tempMember[$this->getCurrentLevel()] = array();
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function setWorkingLevel()
+    {
+        array_push($this->_workingLevel, $this->getCurrentLevel());
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getWorkingLevel()
+    {
+        return $this->_workingLevel[count($this->_workingLevel) - 1];
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function releaseWorkingLevel()
+    {
+        array_pop($this->_workingLevel);
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function setTempStruct($member)
+    {
+        $key = key($member);
+        $this->_tempStruct[$this->getWorkingLevel()][$key] = $member[$key];
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getTempStruct()
+    {
+        return $this->_tempStruct[$this->getWorkingLevel()];
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function resetTempStruct()
+    {
+        $this->_tempStruct[$this->getCurrentLevel()] = array();
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function setTempArray($value)
+    {
+        $this->_tempArray[$this->getWorkingLevel()][] = $value;
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getTempArray()
+    {
+        return $this->_tempArray[$this->getWorkingLevel()];
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function resetTempArray()
+    {
+        $this->_tempArray[$this->getCurrentLevel()] = array();
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function setMethodName($methodName)
+    {
+        $this->_methodName = $methodName;
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getMethodName()
+    {
+        return $this->_methodName;
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function setParam($value)
+    {
+        $this->_param[] = $value;
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function &getParam()
+    {
+        return $this->_param;
+    }
+}
+
+
+class RpcMethodNameHandler extends XmlTagHandler
+{
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return 'methodName';
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleCharacterData(&$parser, &$data)
+    {
+        $parser->setMethodName($data);
+    }
+}
+
+class RpcIntHandler extends XmlTagHandler
+{
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return array('int', 'i4');
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleCharacterData(&$parser, &$data)
+    {
+        $parser->setTempValue(intval($data));
+    }
+}
+
+class RpcDoubleHandler extends XmlTagHandler
+{
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return 'double';
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleCharacterData(&$parser, &$data)
+    {
+        $data = (float)$data;
+        $parser->setTempValue($data);
+    }
+}
+
+class RpcBooleanHandler extends XmlTagHandler
+{
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return 'boolean';
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleCharacterData(&$parser, &$data)
+    {
+        $data = (boolean)$data;
+        $parser->setTempValue($data);
+    }
+}
+
+class RpcStringHandler extends XmlTagHandler
+{
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return 'string';
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleCharacterData(&$parser, &$data)
+    {
+        $parser->setTempValue(strval($data));
+    }
+}
+
+class RpcDateTimeHandler extends XmlTagHandler
+{
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return 'dateTime.iso8601';
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleCharacterData(&$parser, &$data)
+    {
+        $matches = array();
+        if (!preg_match("/^([0-9]{4})([0-9]{2})([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})$/", $data, $matches)) {
+            $parser->setTempValue(time());
+        } else {
+            $parser->setTempValue(gmmktime($matches[4], $matches[5], $meatches[6], $matches[2], $matches[3], $matches[1]));
+        }
+    }
+}
+
+class RpcBase64Handler extends XmlTagHandler
+{
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return 'base64';
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleCharacterData(&$parser, &$data)
+    {
+        $parser->setTempValue(base64_decode($data));
+    }
+}
+
+class RpcNameHandler extends XmlTagHandler
+{
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return 'name';
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'member':
+            $parser->setTempName($data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+
+class RpcValueHandler extends XmlTagHandler
+{
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return 'value';
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'member':
+            $parser->setTempValue($data);
+            break;
+        case 'data':
+        case 'array':
+            $parser->setTempValue($data);
+            break;
+        default:
+            break;
+        }
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleBeginElement(&$parser, &$attributes)
+    {
+        //$parser->resetTempValue();
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleEndElement(&$parser)
+    {
+        switch ($parser->getCurrentTag()) {
+        case 'member':
+            $parser->setTempMember($parser->getTempName(), $parser->getTempValue());
+            break;
+        case 'array':
+        case 'data':
+            $parser->setTempArray($parser->getTempValue());
+            break;
+        default:
+            $parser->setParam($parser->getTempValue());
+            break;
+        }
+        $parser->resetTempValue();
+    }
+}
+
+class RpcMemberHandler extends XmlTagHandler
+{
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return 'member';
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleBeginElement(&$parser, &$attributes)
+    {
+        $parser->setWorkingLevel();
+        $parser->resetTempMember();
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleEndElement(&$parser)
+    {
+        $member =& $parser->getTempMember();
+        $parser->releaseWorkingLevel();
+        $parser->setTempStruct($member);
+    }
+}
+
+class RpcArrayHandler extends XmlTagHandler
+{
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return 'array';
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleBeginElement(&$parser, &$attributes)
+    {
+        $parser->setWorkingLevel();
+        $parser->resetTempArray();
+    }
+
+    /**
+    * This Method starts the parsing of the specified RDF File. The File can be a local or a remote File.
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleEndElement(&$parser)
+    {
+        $parser->setTempValue($parser->getTempArray());
+        $parser->releaseWorkingLevel();
+    }
+}
+
+class RpcStructHandler extends XmlTagHandler
+{
+
+    /**
+    *
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function getName()
+    {
+        return 'struct';
+    }
+
+    /**
+    *
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleBeginElement(&$parser, &$attributes)
+    {
+        $parser->setWorkingLevel();
+        $parser->resetTempStruct();
+    }
+
+    /**
+    *
+    *
+    * @access
+    * @author
+    * @param
+    * @return
+    * @see
+    */
+    function handleEndElement(&$parser)
+    {
+        $parser->setTempValue($parser->getTempStruct());
+        $parser->releaseWorkingLevel();
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpcparser.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpctag.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpctag.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpctag.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,326 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+class XoopsXmlRpcDocument
+{
+
+    var $_tags = array();
+
+    function XoopsXmlRpcDocument()
+    {
+
+    }
+
+    function add(&$tagobj)
+    {
+        $this->_tags[] =& $tagobj;
+    }
+
+    function render()
+    {
+    }
+
+}
+
+class XoopsXmlRpcResponse extends XoopsXmlRpcDocument
+{
+	function render()
+    {
+        $count = count($this->_tags);
+        $payload = '';
+        for ($i = 0; $i < $count; $i++) {
+            if (!$this->_tags[$i]->isFault()) {
+                $payload .= $this->_tags[$i]->render();
+            } else {
+                return '<?xml version="1.0"?><methodResponse>'.$this->_tags[$i]->render().'</methodResponse>';
+            }
+        }
+        return '<?xml version="1.0"?><methodResponse><params><param>'.$payload.'</param></params></methodResponse>';
+    }
+}
+
+class XoopsXmlRpcRequest extends XoopsXmlRpcDocument
+{
+
+	var $methodName;
+
+	function XoopsXmlRpcRequest($methodName)
+	{
+		$this->methodName = trim($methodName);
+	}
+
+	function render()
+    {
+        $count = count($this->_tags);
+        $payload = '';
+        for ($i = 0; $i < $count; $i++) {
+            $payload .= '<param>'.$this->_tags[$i]->render().'</param>';
+        }
+        return '<?xml version="1.0"?><methodCall><methodName>'.$this->methodName.'</methodName><params>'.$payload.'</params></methodCall>';
+    }
+}
+
+class XoopsXmlRpcTag
+{
+
+    var $_fault = false;
+
+    function XoopsXmlRpcTag()
+    {
+
+    }
+
+    function &encode(&$text)
+    {
+        $text = preg_replace(array("/\&([a-z\d\#]+)\;/i", "/\&/", "/\#\|\|([a-z\d\#]+)\|\|\#/i"), array("#||\\1||#", "&amp;", "&\\1;"), str_replace(array("<", ">"), array("&lt;", "&gt;"), $text));
+		return $text;
+    }
+
+    function setFault($fault = true){
+        $this->_fault = (intval($fault) > 0) ? true : false;
+    }
+
+    function isFault()
+    {
+        return $this->_fault;
+    }
+
+    function render()
+    {
+    }
+}
+
+class XoopsXmlRpcFault extends XoopsXmlRpcTag
+{
+
+    var $_code;
+    var $_extra;
+
+    function XoopsXmlRpcFault($code, $extra = null)
+    {
+        $this->setFault(true);
+        $this->_code = intval($code);
+        $this->_extra = isset($extra) ? trim($extra) : '';
+    }
+
+    function render()
+    {
+        switch ($this->_code) {
+        case 101:
+            $string = 'Invalid server URI';
+            break;
+        case 102:
+            $string = 'Parser parse error';
+            break;
+        case 103:
+            $string = 'Module not found';
+            break;
+        case 104:
+            $string = 'User authentication failed';
+            break;
+        case 105:
+            $string = 'Module API not found';
+            break;
+        case 106:
+            $string = 'Method response error';
+            break;
+        case 107:
+            $string = 'Method not supported';
+            break;
+        case 108:
+            $string = 'Invalid parameter';
+            break;
+        case 109:
+            $string = 'Missing parameters';
+            break;
+        case 110:
+            $string = 'Selected blog application does not exist';
+            break;
+        case 111:
+            $string = 'Method permission denied';
+            break;
+        default:
+            $string = 'Method response error';
+            break;
+        }
+        $string .= "\n".$this->_extra;
+        return '<fault><value><struct><member><name>faultCode</name><value>'.$this->_code.'</value></member><member><name>faultString</name><value>'.$this->encode($string).'</value></member></struct></value></fault>';
+    }
+}
+
+class XoopsXmlRpcInt extends XoopsXmlRpcTag
+{
+
+    var $_value;
+
+    function XoopsXmlRpcInt($value)
+    {
+        $this->_value = intval($value);
+    }
+
+    function render()
+    {
+        return '<value><int>'.$this->_value.'</int></value>';
+    }
+}
+
+class XoopsXmlRpcDouble extends XoopsXmlRpcTag
+{
+
+    var $_value;
+
+    function XoopsXmlRpcDouble($value)
+    {
+        $this->_value = (float)$value;
+    }
+
+    function render()
+    {
+        return '<value><double>'.$this->_value.'</double></value>';
+    }
+}
+
+class XoopsXmlRpcBoolean extends XoopsXmlRpcTag
+{
+
+    var $_value;
+
+    function XoopsXmlRpcBoolean($value)
+    {
+        $this->_value = (!empty($value) && $value != false) ? 1 : 0;
+    }
+
+    function render()
+    {
+        return '<value><boolean>'.$this->_value.'</boolean></value>';
+    }
+}
+
+class XoopsXmlRpcString extends XoopsXmlRpcTag
+{
+
+    var $_value;
+
+    function XoopsXmlRpcString($value)
+    {
+        $this->_value = strval($value);
+    }
+
+    function render()
+    {
+        return '<value><string>'.$this->encode($this->_value).'</string></value>';
+    }
+}
+
+class XoopsXmlRpcDatetime extends XoopsXmlRpcTag
+{
+
+    var $_value;
+
+    function XoopsXmlRpcDatetime($value)
+    {
+        if (!is_numeric($value)) {
+            $this->_value = strtotime($value);
+        } else {
+            $this->_value = intval($value);
+        }
+    }
+
+    function render()
+    {
+        return '<value><dateTime.iso8601>'.gmstrftime("%Y%m%dT%H:%M:%S", $this->_value).'</dateTime.iso8601></value>';
+    }
+}
+
+class XoopsXmlRpcBase64 extends XoopsXmlRpcTag
+{
+
+    var $_value;
+
+    function XoopsXmlRpcBase64($value)
+    {
+        $this->_value = base64_encode($value);
+    }
+
+    function render()
+    {
+        return '<value><base64>'.$this->_value.'</base64></value>';
+    }
+}
+
+class XoopsXmlRpcArray extends XoopsXmlRpcTag
+{
+
+    var $_tags = array();
+
+    function XoopsXmlRpcArray()
+    {
+    }
+
+    function add(&$tagobj)
+    {
+        $this->_tags[] =& $tagobj;
+    }
+
+    function render()
+    {
+        $count = count($this->_tags);
+        $ret = '<value><array><data>';
+        for ($i = 0; $i < $count; $i++) {
+            $ret .= $this->_tags[$i]->render();
+        }
+        $ret .= '</data></array></value>';
+        return $ret;
+    }
+}
+
+class XoopsXmlRpcStruct extends XoopsXmlRpcTag{
+
+    var $_tags = array();
+
+    function XoopsXmlRpcStruct(){
+    }
+
+    function add($name, &$tagobj){
+        $this->_tags[] = array('name' => $name, 'value' => $tagobj);
+    }
+
+    function render(){
+        $count = count($this->_tags);
+        $ret = '<value><struct>';
+        for ($i = 0; $i < $count; $i++) {
+            $ret .= '<member><name>'.$this->encode($this->_tags[$i]['name']).'</name>'.$this->_tags[$i]['value']->render().'</member>';
+        }
+        $ret .= '</struct></value>';
+        return $ret;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xml/rpc/xmlrpctag.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xml/rpc/xoopsapi.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xml/rpc/xoopsapi.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xml/rpc/xoopsapi.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,349 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+require_once XOOPS_ROOT_PATH.'/class/xml/rpc/xmlrpcapi.php';
+
+class XoopsApi extends XoopsXmlRpcApi
+{
+
+    function XoopsApi(&$params, &$response, &$module)
+    {
+        $this->XoopsXmlRpcApi($params, $response, $module);
+    }
+
+    function newPost()
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            if (!$fields =& $this->_getPostFields(null, $this->params[0])) {
+                $this->response->add(new XoopsXmlRpcFault(106));
+            } else {
+                $missing = array();
+                foreach ($fields as $tag => $detail) {
+                    if (!isset($this->params[3][$tag])) {
+                        $data = $this->_getTagCdata($this->params[3]['xoops_text'], $tag, true);
+                        if (trim($data) == ''){
+                            if ($detail['required']) {
+                                $missing[] = $tag;
+                            }
+                        } else {
+                            $post[$tag] =& $data;
+                        }
+                    } else {
+                        $post[$tag] =& $this->params[3][$tag];
+                    }
+                }
+                if (count($missing) > 0) {
+                    $msg = '';
+                    foreach ($missing as $m) {
+                        $msg .= '<'.$m.'> ';
+                    }
+                    $this->response->add(new XoopsXmlRpcFault(109, $msg));
+                } else {
+                    // will be removed... don't worry if this looks bad
+                    include_once XOOPS_ROOT_PATH.'/modules/news/class/class.newsstory.php';
+                    $story = new NewsStory();
+                    $error = false;
+                    if (intval($this->params[4]) > 0) {
+                        if (!$this->_checkAdmin()) {
+                            // non admin users cannot publish
+                            $error = true;
+                            $this->response->add(new XoopsXmlRpcFault(111));
+                        } else {
+                            $story->setType('admin');
+                            $story->setApproved(true);
+                            $story->setPublished(time());
+                        }
+                    } else {
+                        if (!$this->_checkAdmin()) {
+                            $story->setType('user');
+                        } else {
+                            $story->setType('admin');
+                        }
+                    }
+                    if (!$error) {
+                        if (isset($post['categories']) && !empty($post['categories'][0])) {
+                            $story->setTopicId(intval($post['categories'][0]['categoryId']));
+                        } else {
+                            $story->setTopicId(1);
+                        }
+                        $story->setTitle(addslashes(trim($post['title'])));
+                        if (isset($post['moretext'])) {
+                            $story->setBodytext(addslashes(trim($post['moretext'])));
+                        }
+                        if (!isset($post['hometext'])) {
+                            $story->setHometext(addslashes(trim($this->params[3]['xoops_text'])));
+                        } else {
+                            $story->setHometext(addslashes(trim($post['hometext'])));
+                        }
+                        $story->setUid($this->user->getVar('uid'));
+                        $story->setHostname($_SERVER['REMOTE_ADDR']);
+                        if (!$this->_checkAdmin()) {
+                            $story->setNohtml(1);
+                        } else {
+                            $story->setNohtml(0);
+                        }
+                        $story->setNosmiley(0);
+                        $story->setNotifyPub(1);
+                        $story->setTopicalign('R');
+                        $ret = $story->store();
+                        if (!$ret) {
+                            $this->response->add(new XoopsXmlRpcFault(106));
+                        } else {
+                            $this->response->add(new XoopsXmlRpcString($ret));
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    function editPost()
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            if (!$fields =& $this->_getPostFields($this->params[0])) {
+            } else {
+                $missing = array();
+                foreach ($fields as $tag => $detail) {
+                    if (!isset($this->params[3][$tag])) {
+                        $data = $this->_getTagCdata($this->params[3]['xoops_text'], $tag, true);
+                        if (trim($data) == ''){
+                            if ($detail['required']) {
+                                $missing[] = $tag;
+                            }
+                        } else {
+                            $post[$tag] = $data;
+                        }
+                    } else {
+                        $post[$tag] = $this->params[3][$tag];
+                    }
+                }
+                if (count($missing) > 0) {
+                    $msg = '';
+                    foreach ($missing as $m) {
+                        $msg .= '<'.$m.'> ';
+                    }
+                    $this->response->add(new XoopsXmlRpcFault(109, $msg));
+                } else {
+                    // will be removed... don't worry if this looks bad
+                    include_once XOOPS_ROOT_PATH.'/modules/news/class/class.newsstory.php';
+                    $story = new NewsStory($this->params[0]);
+                    $storyid = $story->storyid();
+                    if (empty($storyid)) {
+                        $this->response->add(new XoopsXmlRpcFault(106));
+                    } elseif (!$this->_checkAdmin()) {
+                        $this->response->add(new XoopsXmlRpcFault(111));
+                    } else {
+                        $story->setTitle(addslashes(trim($post['title'])));
+                        if (isset($post['moretext'])) {
+                            $story->setBodytext(addslashes(trim($post['moretext'])));
+                        }
+                        if (!isset($post['hometext'])) {
+                            $story->setHometext(addslashes(trim($this->params[3]['xoops_text'])));
+                        } else {
+                            $story->setHometext(addslashes(trim($post['hometext'])));
+                        }
+                        if ($this->params[4]) {
+                            $story->setApproved(true);
+                            $story->setPublished(time());
+                        }
+                        $story->setTopicalign('R');
+                        if (!$story->store()) {
+                            $this->response->add(new XoopsXmlRpcFault(106));
+                        } else {
+                            $this->response->add(new XoopsXmlRpcBoolean(true));
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    function deletePost()
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            if (!$this->_checkAdmin()) {
+                $this->response->add(new XoopsXmlRpcFault(111));
+            } else {
+                // will be removed... don't worry if this looks bad
+                include_once XOOPS_ROOT_PATH.'/modules/news/class/class.newsstory.php';
+                $story = new NewsStory($this->params[0]);
+                if (!$story->delete()) {
+                    $this->response->add(new XoopsXmlRpcFault(106));
+                } else {
+                    $this->response->add(new XoopsXmlRpcBoolean(true));
+                }
+            }
+        }
+    }
+
+    // currently returns the same struct as in metaWeblogApi
+    function &getPost($respond=true)
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            // will be removed... don't worry if this looks bad
+            include_once XOOPS_ROOT_PATH.'/modules/news/class/class.newsstory.php';
+            $story = new NewsStory($this->params[0]);
+            $ret = array('uid' => $story->uid(), 'published' => $story->published(), 'storyid' => $story->storyId(), 'title' => $story->title('Edit'), 'hometext' => $story->hometext('Edit'), 'moretext' => $story->bodytext('Edit'));
+            if (!$respond) {
+                return $ret;
+            } else {
+                if (!$ret) {
+                    $this->response->add(new XoopsXmlRpcFault(106));
+                } else {
+                    $struct = new XoopsXmlRpcStruct();
+                    $content = '';
+                    foreach ($ret as $key => $value) {
+                        switch($key) {
+                        case 'uid':
+                            $struct->add('userid', new XoopsXmlRpcString($value));
+                            break;
+                        case 'published':
+                            $struct->add('dateCreated', new XoopsXmlRpcDatetime($value));
+                            break;
+                        case 'storyid':
+                            $struct->add('postid', new XoopsXmlRpcString($value));
+                            $struct->add('link', new XoopsXmlRpcString(XOOPS_URL.'/modules/news/article.php?item_id='.$value));
+                            $struct->add('permaLink', new XoopsXmlRpcString(XOOPS_URL.'/modules/news/article.php?item_id='.$value));
+                            break;
+                        case 'title':
+                            $struct->add('title', new XoopsXmlRpcString($value));
+                            break;
+                        default :
+                            $content .= '<'.$key.'>'.trim($value).'</'.$key.'>';
+                            break;
+                        }
+                    }
+                    $struct->add('description', new XoopsXmlRpcString($content));
+                    $this->response->add($struct);
+                }
+            }
+        }
+    }
+
+    function &getRecentPosts($respond=true)
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            include_once XOOPS_ROOT_PATH.'/modules/news/class/class.newsstory.php';
+			if (isset($this->params[4]) && intval($this->params[4]) > 0) {
+				$stories =& NewsStory::getAllPublished(intval($this->params[3]), 0, $this->params[4]);
+			} else {
+            	$stories =& NewsStory::getAllPublished(intval($this->params[3]));
+			}
+            $scount = count($stories);
+            $ret = array();
+            for ($i = 0; $i < $scount; $i++) {
+                $ret[] = array('uid' => $stories[$i]->uid(), 'published' => $stories[$i]->published(), 'storyid' => $stories[$i]->storyId(), 'title' => $stories[$i]->title('Edit'), 'hometext' => $stories[$i]->hometext('Edit'), 'moretext' => $stories[$i]->bodytext('Edit'));
+            }
+            if (!$respond) {
+                return $ret;
+            } else {
+                if (count($ret) == 0) {
+                    $this->response->add(new XoopsXmlRpcFault(106, 'Found 0 Entries'));
+                } else {
+                    $arr = new XoopsXmlRpcArray();
+                    $count = count($ret);
+                    for ($i = 0; $i < $count; $i++) {
+                        $struct = new XoopsXmlRpcStruct();
+                        $content = '';
+                        foreach($ret[$i] as $key => $value) {
+                            switch($key) {
+                            case 'uid':
+                                $struct->add('userid', new XoopsXmlRpcString($value));
+                                break;
+                            case 'published':
+                                $struct->add('dateCreated', new XoopsXmlRpcDatetime($value));
+                                break;
+                            case 'storyid':
+                                $struct->add('postid', new XoopsXmlRpcString($value));
+                                $struct->add('link', new XoopsXmlRpcString(XOOPS_URL.'/modules/news/article.php?item_id='.$value));
+                                $struct->add('permaLink', new XoopsXmlRpcString(XOOPS_URL.'/modules/news/article.php?item_id='.$value));
+                                break;
+                            case 'title':
+                                $struct->add('title', new XoopsXmlRpcString($value));
+                                break;
+                            default :
+                                $content .= '<'.$key.'>'.trim($value).'</'.$key.'>';
+                                break;
+                            }
+                        }
+                        $struct->add('description', new XoopsXmlRpcString($content));
+                        $arr->add($struct);
+                        unset($struct);
+                    }
+                    $this->response->add($arr);
+                }
+            }
+        }
+    }
+
+    function &getCategories($respond=true)
+    {
+        if (!$this->_checkUser($this->params[1], $this->params[2])) {
+            $this->response->add(new XoopsXmlRpcFault(104));
+        } else {
+            include_once XOOPS_ROOT_PATH.'/class/xoopstopic.php';
+            $db =& Database::getInstance();
+            $xt = new XoopsTopic($db->prefix('topics'));
+            $ret = $xt->getTopicsList();
+            if (!$respond) {
+                return $ret;
+            } else {
+                if (count($ret) == 0) {
+                    $this->response->add(new XoopsXmlRpcFault(106, 'Found 0 Entries'));
+                } else {
+                    $arr = new XoopsXmlRpcArray();
+                    foreach ($ret as $topic_id => $topic_vars) {
+                        $struct = new XoopsXmlRpcStruct();
+                        $struct->add('categoryId', new XoopsXmlRpcString($topic_id));
+                        $struct->add('categoryName', new XoopsXmlRpcString($topic_vars['title']));
+						$struct->add('categoryPid', new XoopsXmlRpcString($topic_vars['pid']));
+                        $arr->add($struct);
+                        unset($struct);
+                    }
+                    $this->response->add($arr);
+                }
+            }
+        }
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xml/rpc/xoopsapi.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xml/rss/xmlrss2parser.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xml/rss/xmlrss2parser.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xml/rss/xmlrss2parser.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,743 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+require_once(XOOPS_ROOT_PATH.'/class/xml/saxparser.php');
+require_once(XOOPS_ROOT_PATH.'/class/xml/xmltaghandler.php');
+
+class XoopsXmlRss2Parser extends SaxParser
+{
+    var $_tempArr = array();
+    var $_channelData = array();
+    var $_imageData = array();
+    var $_items = array();
+
+    function XoopsXmlRss2Parser(&$input)
+    {
+        $this->SaxParser($input);
+		$this->useUtfEncoding();
+        $this->addTagHandler(new RssChannelHandler());
+        $this->addTagHandler(new RssTitleHandler());
+        $this->addTagHandler(new RssLinkHandler());
+        $this->addTagHandler(new RssGeneratorHandler());
+        $this->addTagHandler(new RssDescriptionHandler());
+        $this->addTagHandler(new RssCopyrightHandler());
+        $this->addTagHandler(new RssNameHandler());
+        $this->addTagHandler(new RssManagingEditorHandler());
+        $this->addTagHandler(new RssLanguageHandler());
+        $this->addTagHandler(new RssLastBuildDateHandler());
+        $this->addTagHandler(new RssWebMasterHandler());
+        $this->addTagHandler(new RssImageHandler());
+        $this->addTagHandler(new RssUrlHandler());
+        $this->addTagHandler(new RssWidthHandler());
+        $this->addTagHandler(new RssHeightHandler());
+        $this->addTagHandler(new RssItemHandler());
+        $this->addTagHandler(new RssCategoryHandler());
+        $this->addTagHandler(new RssPubDateHandler());
+        $this->addTagHandler(new RssCommentsHandler());
+        $this->addTagHandler(new RssSourceHandler());
+        $this->addTagHandler(new RssAuthorHandler());
+        $this->addTagHandler(new RssGuidHandler());
+        $this->addTagHandler(new RssTextInputHandler());
+    }
+
+	function setChannelData($name, &$value)
+	{
+		if (!isset($this->_channelData[$name])) {
+			$this->_channelData[$name] =& $value;
+		} else {
+			$this->_channelData[$name] .= $value;
+		}
+	}
+
+    function &getChannelData($name = null)
+    {
+        if (isset($name)) {
+            if (isset($this->_channelData[$name])) {
+                return $this->_channelData[$name];
+            }
+            return false;
+        }
+        return $this->_channelData;
+    }
+
+    function setImageData($name, &$value)
+    {
+        $this->_imageData[$name] =& $value;
+    }
+
+    function &getImageData($name = null)
+    {
+        if (isset($name)) {
+            if (isset($this->_imageData[$name])) {
+                return $this->_imageData[$name];
+            }
+            return false;
+        }
+        return $this->_imageData;
+    }
+
+    function setItems(&$itemarr)
+    {
+        $this->_items[] =& $itemarr;
+    }
+
+    function &getItems()
+    {
+        return $this->_items;
+    }
+
+    function setTempArr($name, &$value, $delim = '')
+    {
+        if (!isset($this->_tempArr[$name])) {
+            $this->_tempArr[$name] =& $value;
+        } else {
+            $this->_tempArr[$name] .= $delim.$value;
+        }
+    }
+
+    function getTempArr()
+    {
+        return $this->_tempArr;
+    }
+
+    function resetTempArr()
+    {
+        unset($this->_tempArr);
+        $this->_tempArr = array();
+    }
+}
+
+class RssChannelHandler extends XmlTagHandler
+{
+
+    function RssChannelHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'channel';
+    }
+}
+
+class RssTitleHandler extends XmlTagHandler
+{
+
+    function RssTitleHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'title';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('title', $data);
+            break;
+        case 'image':
+            $parser->setImageData('title', $data);
+            break;
+        case 'item':
+        case 'textInput':
+            $parser->setTempArr('title', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssLinkHandler extends XmlTagHandler
+{
+
+    function RssLinkHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'link';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('link', $data);
+            break;
+        case 'image':
+            $parser->setImageData('link', $data);
+            break;
+        case 'item':
+        case 'textInput':
+            $parser->setTempArr('link', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssDescriptionHandler extends XmlTagHandler
+{
+
+    function RssDescriptionHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'description';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('description', $data);
+            break;
+        case 'image':
+            $parser->setImageData('description', $data);
+            break;
+        case 'item':
+        case 'textInput':
+            $parser->setTempArr('description', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssGeneratorHandler extends XmlTagHandler
+{
+
+    function RssGeneratorHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'generator';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('generator', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssCopyrightHandler extends XmlTagHandler
+{
+
+    function RssCopyrightHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'copyright';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('copyright', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssNameHandler extends XmlTagHandler
+{
+
+    function RssNameHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'name';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'textInput':
+            $parser->setTempArr('name', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssManagingEditorHandler extends XmlTagHandler
+{
+
+    function RssManagingEditorHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'managingEditor';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('editor', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssLanguageHandler extends XmlTagHandler
+{
+
+    function RssLanguageHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'language';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('language', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssWebMasterHandler extends XmlTagHandler
+{
+
+    function RssWebMasterHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'webMaster';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('webmaster', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssDocsHandler extends XmlTagHandler
+{
+
+    function RssDocsHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'docs';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('docs', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssTtlHandler extends XmlTagHandler
+{
+
+    function RssTtlHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'ttl';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('ttl', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssTextInputHandler extends XmlTagHandler
+{
+
+    function RssWebMasterHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'textInput';
+    }
+
+    function handleBeginElement(&$parser, &$attributes)
+    {
+        $parser->resetTempArr();
+    }
+
+    function handleEndElement(&$parser)
+    {
+        $parser->setChannelData('textinput', $parser->getTempArr());
+    }
+}
+
+class RssLastBuildDateHandler extends XmlTagHandler
+{
+
+    function RssLastBuildDateHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'lastBuildDate';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('lastbuilddate', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssImageHandler extends XmlTagHandler
+{
+
+    function RssImageHandler()
+    {
+    }
+
+    function getName()
+    {
+        return 'image';
+    }
+}
+
+class RssUrlHandler extends XmlTagHandler
+{
+
+    function RssUrlHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'url';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        if ($parser->getParentTag() == 'image') {
+            $parser->setImageData('url', $data);
+        }
+    }
+}
+
+class RssWidthHandler extends XmlTagHandler
+{
+
+    function RssWidthHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'width';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        if ($parser->getParentTag() == 'image') {
+            $parser->setImageData('width', $data);
+        }
+    }
+}
+
+class RssHeightHandler extends XmlTagHandler
+{
+
+    function RssHeightHandler()
+    {
+    }
+
+    function getName()
+    {
+        return 'height';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        if ($parser->getParentTag() == 'image') {
+            $parser->setImageData('height', $data);
+        }
+    }
+}
+
+class RssItemHandler extends XmlTagHandler
+{
+
+    function RssItemHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'item';
+    }
+
+    function handleBeginElement(&$parser, &$attributes)
+    {
+        $parser->resetTempArr();
+    }
+
+    function handleEndElement(&$parser)
+    {
+        $parser->setItems($parser->getTempArr());
+    }
+}
+
+class RssCategoryHandler extends XmlTagHandler
+{
+
+    function RssCategoryHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'category';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('category', $data);
+            break;
+        case 'item':
+            $parser->setTempArr('category', $data, ', ');
+        default:
+            break;
+        }
+    }
+}
+
+class RssCommentsHandler extends XmlTagHandler
+{
+
+    function RssCommentsHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'comments';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        if ($parser->getParentTag() == 'item') {
+            $parser->setTempArr('comments', $data);
+        }
+    }
+}
+
+class RssPubDateHandler extends XmlTagHandler
+{
+
+    function RssPubDateHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'pubDate';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        switch ($parser->getParentTag()) {
+        case 'channel':
+            $parser->setChannelData('pubdate', $data);
+            break;
+        case 'item':
+            $parser->setTempArr('pubdate', $data);
+            break;
+        default:
+            break;
+        }
+    }
+}
+
+class RssGuidHandler extends XmlTagHandler
+{
+
+    function RssGuidHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'guid';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        if ($parser->getParentTag() == 'item') {
+            $parser->setTempArr('guid', $data);
+        }
+    }
+}
+
+class RssAuthorHandler extends XmlTagHandler
+{
+
+    function RssGuidHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'author';
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        if ($parser->getParentTag() == 'item') {
+            $parser->setTempArr('author', $data);
+        }
+    }
+}
+
+class RssSourceHandler extends XmlTagHandler
+{
+
+    function RssSourceHandler()
+    {
+
+    }
+
+    function getName()
+    {
+        return 'source';
+    }
+
+    function handleBeginElement(&$parser, &$attributes)
+    {
+        if ($parser->getParentTag() == 'item') {
+            $parser->setTempArr('source_url', $attributes['url']);
+        }
+    }
+
+    function handleCharacterData(&$parser, &$data)
+    {
+        if ($parser->getParentTag() == 'item') {
+            $parser->setTempArr('source', $data);
+        }
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xml/rss/xmlrss2parser.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xml/saxparser.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xml/saxparser.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xml/saxparser.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,373 @@
+<?php
+// $Id$
+/*******************************************************************************
+    Location: <b>xml/SaxParser.class</b><br>
+     <br>
+    Provides basic functionality to read and parse XML documents.  Subclasses
+    must implement all the their custom handlers by using add* function methods.
+    They may also use the handle*() methods to parse a specific XML begin and end
+    tags, but this is not recommended as it is more difficult.<br>
+    <br>
+    Copyright &copy; 2001 eXtremePHP.  All rights reserved.<br>
+    <br>
+    @author Ken Egervari<br>
+*******************************************************************************/
+
+class SaxParser
+{
+    var $level;
+    var $parser;
+
+    var $isCaseFolding;
+    var $targetEncoding;
+
+    /* Custom Handler Variables */
+    var $tagHandlers = array();
+
+    /* Tag stack */
+    var $tags = array();
+
+    /* Xml Source Input */
+    var $xmlInput;
+
+    var $errors = array();
+
+    /****************************************************************************
+        Creates a SaxParser object using a FileInput to represent the stream
+        of XML data to parse.  Use the static methods createFileInput or
+        createStringInput to construct xml input source objects to supply
+        to the constructor, or the implementor can construct them individually.
+    ****************************************************************************/
+    function SaxParser(&$input)
+    {
+        $this->level = 0;
+        $this->parser = xml_parser_create('UTF-8');
+        xml_set_object($this->parser, $this);
+        $this->input =& $input;
+        $this->setCaseFolding(false);
+        $this->useUtfEncoding();
+        xml_set_element_handler($this->parser, 'handleBeginElement','handleEndElement');
+        xml_set_character_data_handler($this->parser, 'handleCharacterData');
+        xml_set_processing_instruction_handler($this->parser, 'handleProcessingInstruction');
+        xml_set_default_handler($this->parser, 'handleDefault');
+        xml_set_unparsed_entity_decl_handler($this->parser, 'handleUnparsedEntityDecl');
+        xml_set_notation_decl_handler($this->parser, 'handleNotationDecl');
+        xml_set_external_entity_ref_handler($this->parser, 'handleExternalEntityRef');
+    }
+
+    /*---------------------------------------------------------------------------
+        Property Methods
+    ---------------------------------------------------------------------------*/
+
+    function getCurrentLevel()
+    {
+        return $this->level;
+    }
+
+    /****************************************************************************
+        * @param $isCaseFolding
+        * @returns void
+    ****************************************************************************/
+    function setCaseFolding($isCaseFolding)
+    {
+        assert(is_bool($isCaseFolding));
+
+        $this->isCaseFolding = $isCaseFolding;
+        xml_parser_set_option($this->parser, XML_OPTION_CASE_FOLDING, $this->isCaseFolding);
+    }
+
+    /****************************************************************************
+        * @returns void
+    ****************************************************************************/
+    function useIsoEncoding()
+    {
+        $this->targetEncoding = 'ISO-8859-1';
+        xml_parser_set_option($this->parser, XML_OPTION_TARGET_ENCODING, $this->targetEncoding);
+    }
+
+    /****************************************************************************
+        * @returns void
+    ****************************************************************************/
+    function useAsciiEncoding()
+    {
+        $this->targetEncoding = 'US-ASCII';
+        xml_parser_set_option($this->parser, XML_OPTION_TARGET_ENCODING, $this->targetEncoding);
+    }
+
+    /****************************************************************************
+        * @returns void
+    ****************************************************************************/
+    function useUtfEncoding()
+    {
+        $this->targetEncoding = 'UTF-8';
+        xml_parser_set_option($this->parser, XML_OPTION_TARGET_ENCODING, $this->targetEncoding);
+    }
+
+    /****************************************************************************
+        Returns the name of the xml tag being parsed
+        * @returns string
+    ****************************************************************************/
+    function getCurrentTag()
+    {
+        return $this->tags[count($this->tags) - 1];
+    }
+
+    function getParentTag()
+    {
+        if (isset($this->tags[count($this->tags) - 2])) {
+            return $this->tags[count($this->tags) - 2];
+        }
+        return false;
+    }
+
+
+
+    /*---------------------------------------------------------------------------
+        Parser methods
+    ---------------------------------------------------------------------------*/
+
+    /****************************************************************************
+        * @returns void
+    ****************************************************************************/
+    function parse()
+    {
+        if (!is_resource($this->input)) {
+            if (!xml_parse($this->parser, $this->input)) {
+                $this->setErrors($this->getXmlError());
+                return false;
+            }
+            //if (!$fp = fopen($this->input, 'r')) {
+            //    $this->setErrors('Could not open file: '.$this->input);
+            //    return false;
+            //}
+        } else {
+            while ($data = fread($this->input, 4096)) {
+                if (!xml_parse($this->parser, str_replace("'", "&apos;", $data), feof($this->input))) {
+                    $this->setErrors($this->getXmlError());
+                    fclose($this->input);
+                    return false;
+                }
+            }
+            fclose($this->input);
+        }
+        return true;
+    }
+
+    /****************************************************************************
+        * @returns void
+    ****************************************************************************/
+    function free()
+    {
+        xml_parser_free($this->parser);
+
+        if (!method_exists($this, '__destruct')) {
+            unset($this);
+        }
+        else {
+            $this->__destruct();
+        }
+    }
+
+    /****************************************************************************
+        * @private
+        * @returns string
+    ****************************************************************************/
+    function getXmlError()
+    {
+        return sprintf("XmlParse error: %s at line %d", xml_error_string(xml_get_error_code($this->parser)), xml_get_current_line_number($this->parser));
+    }
+
+    /*---------------------------------------------------------------------------
+        Custom Handler Methods
+    ---------------------------------------------------------------------------*/
+
+    /****************************************************************************
+        Adds a callback function to be called when a tag is encountered.<br>
+        Functions that are added must be of the form:<br>
+        <b>functionName( $attributes )</b>
+        * @param $tagName string.  The name of the tag currently being parsed.
+        * @param $functionName string.  The name of the function in XmlDocument's
+        subclass.
+        * @returns void
+    ****************************************************************************/
+    function addTagHandler(&$tagHandler)
+    {
+        $name = $tagHandler->getName();
+        if (is_array($name)) {
+            foreach ($name as $n) {
+                $this->tagHandlers[$n] =& $tagHandler;
+            }
+        } else {
+            $this->tagHandlers[$name] =& $tagHandler;
+        }
+    }
+
+
+    /*---------------------------------------------------------------------------
+        Private Handler Methods
+    ---------------------------------------------------------------------------*/
+
+    /****************************************************************************
+        Callback function that executes whenever a the start of a tag
+        occurs when being parsed.
+        * @param $parser int.  The handle to the parser.
+        * @param $tagName string.  The name of the tag currently being parsed.
+        * @param $attributesArray attay.  The list of attributes associated with
+        the tag.
+        * @private
+        * @returns void
+    ****************************************************************************/
+    function handleBeginElement($parser, $tagName, $attributesArray)
+    {
+        array_push($this->tags, $tagName);
+        $this->level++;
+        if (isset($this->tagHandlers[$tagName]) && is_subclass_of($this->tagHandlers[$tagName], 'xmltaghandler')) {
+            $this->tagHandlers[$tagName]->handleBeginElement($this, $attributesArray);
+        } else {
+			$this->handleBeginElementDefault($parser, $tagName, $attributesArray);
+		}
+    }
+
+    /****************************************************************************
+        Callback function that executes whenever the end of a tag
+        occurs when being parsed.
+        * @param $parser int.  The handle to the parser.
+        * @param $tagName string.  The name of the tag currently being parsed.
+        * @private
+        * @returns void
+    ****************************************************************************/
+    function handleEndElement($parser, $tagName)
+    {
+        array_pop($this->tags);
+        if (isset($this->tagHandlers[$tagName]) && is_subclass_of($this->tagHandlers[$tagName], 'xmltaghandler')) {
+            $this->tagHandlers[$tagName]->handleEndElement($this);
+        } else {
+			$this->handleEndElementDefault($parser, $tagName);
+		}
+        $this->level--;
+    }
+
+    /****************************************************************************
+        Callback function that executes whenever character data is encountered
+        while being parsed.
+        * @param $parser int.  The handle to the parser.
+        * @param $data string.  Character data inside the tag
+        * @returns void
+    ****************************************************************************/
+    function handleCharacterData($parser, $data)
+    {
+        $tagHandler =& $this->tagHandlers[$this->getCurrentTag()];
+        if (isset($tagHandler) && is_subclass_of($tagHandler, 'xmltaghandler')) {
+            $tagHandler->handleCharacterData($this, $data);
+        } else {
+			$this->handleCharacterDataDefault($parser, $data);
+		}
+    }
+
+    /****************************************************************************
+        * @param $parser int.  The handle to the parser.
+        * @returns void
+    ****************************************************************************/
+    function handleProcessingInstruction($parser, &$target, &$data)
+    {
+//        if($target == 'php') {
+//            eval($data);
+//        }
+    }
+
+    /****************************************************************************
+        * @param $parser int.  The handle to the parser.
+        * @returns void
+    ****************************************************************************/
+    function handleDefault($parser, $data)
+    {
+
+    }
+
+    /****************************************************************************
+        * @param $parser int.  The handle to the parser.
+        * @returns void
+    ****************************************************************************/
+    function handleUnparsedEntityDecl($parser, $entityName, $base, $systemId, $publicId, $notationName)
+    {
+
+    }
+
+    /****************************************************************************
+        * @param $parser int.  The handle to the parser.
+        * @returns void
+    ****************************************************************************/
+    function handleNotationDecl($parser, $notationName, $base, $systemId, $publicId)
+    {
+
+    }
+
+    /****************************************************************************
+        * @param $parser int.  The handle to the parser.
+        * @returns void
+    ****************************************************************************/
+    function handleExternalEntityRef($parser, $openEntityNames, $base, $systemId, $publicId)
+    {
+
+    }
+
+	/**
+	 * The default tag handler method for a tag with no handler
+	 *
+	 * @abstract
+	 */
+	function handleBeginElementDefault($parser, $tagName, $attributesArray)
+	{
+	}
+
+	/**
+	 * The default tag handler method for a tag with no handler
+	 *
+	 * @abstract
+	 */
+	function handleEndElementDefault($parser, $tagName)
+	{
+	}
+
+	/**
+	 * The default tag handler method for a tag with no handler
+	 *
+	 * @abstract
+	 */
+	function handleCharacterDataDefault($parser, $data)
+	{
+	}
+
+	/**
+	 * Sets error messages
+	 *
+	 * @param	$error	string	an error message
+	 */
+    function setErrors($error)
+    {
+        $this->errors[] = trim($error);
+    }
+
+	/**
+	 * Gets all the error messages
+	 *
+	 * @param	$ashtml	bool	return as html?
+	 * @return	mixed
+	 */
+    function &getErrors($ashtml = true)
+    {
+        if (!$ashtml) {
+            return $this->errors;
+        } else {
+        	$ret = '';
+        	if (count($this->errors) > 0) {
+            	foreach ($this->errors as $error) {
+            	    $ret .= $error.'<br />';
+            	}
+        	}
+        	return $ret;
+        }
+    }
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xml/saxparser.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xml/themesetparser.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xml/themesetparser.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xml/themesetparser.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,415 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+include_once XOOPS_ROOT_PATH.'/class/xml/saxparser.php';
+include_once XOOPS_ROOT_PATH.'/class/xml/xmltaghandler.php';
+
+class XoopsThemeSetParser extends SaxParser
+{
+	var $tempArr = array();
+	var $themeSetData = array();
+	var $imagesData = array();
+	var $templatesData = array();
+
+	function XoopsThemeSetParser(&$input)
+	{
+		$this->SaxParser($input);
+		$this->addTagHandler(new ThemeSetThemeNameHandler());
+		$this->addTagHandler(new ThemeSetDateCreatedHandler());
+		$this->addTagHandler(new ThemeSetAuthorHandler());
+		$this->addTagHandler(new ThemeSetDescriptionHandler());
+		$this->addTagHandler(new ThemeSetGeneratorHandler());
+		$this->addTagHandler(new ThemeSetNameHandler());
+		$this->addTagHandler(new ThemeSetEmailHandler());
+		$this->addTagHandler(new ThemeSetLinkHandler());
+		$this->addTagHandler(new ThemeSetTemplateHandler());
+		$this->addTagHandler(new ThemeSetImageHandler());
+		$this->addTagHandler(new ThemeSetModuleHandler());
+		$this->addTagHandler(new ThemeSetFileTypeHandler());
+		$this->addTagHandler(new ThemeSetTagHandler());
+	}
+
+	function setThemeSetData($name, &$value)
+	{
+		$this->themeSetData[$name] =& $value;
+	}
+
+	function &getThemeSetData($name=null)
+	{
+		if (isset($name)) {
+			if (isset($this->themeSetData[$name])) {
+				return $this->themeSetData[$name];
+			}
+			return false;
+		}
+		return $this->themeSetData;
+	}
+
+	function setImagesData(&$imagearr)
+	{
+		$this->imagesData[] =& $imagearr;
+	}
+
+	function &getImagesData()
+	{
+		return $this->imagesData;
+	}
+
+	function setTemplatesData(&$tplarr)
+	{
+		$this->templatesData[] =& $tplarr;
+	}
+
+	function &getTemplatesData()
+	{
+		return $this->templatesData;
+	}
+
+	function setTempArr($name, &$value, $delim='')
+	{
+		if (!isset($this->tempArr[$name])) {
+			$this->tempArr[$name] =& $value;
+		} else {
+			$this->tempArr[$name] .= $delim.$value;
+		}
+	}
+
+	function getTempArr()
+	{
+		return $this->tempArr;
+	}
+
+	function resetTempArr()
+	{
+		unset($this->tempArr);
+		$this->tempArr = array();
+	}
+}
+
+
+class ThemeSetDateCreatedHandler extends XmlTagHandler
+{
+
+	function ThemeSetDateCreatedHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'dateCreated';
+	}
+
+	function handleCharacterData(&$parser, &$data)
+	{
+		switch ($parser->getParentTag()) {
+		case 'themeset':
+			$parser->setThemeSetData('date', $data);
+			break;
+		default:
+			break;
+		}
+	}
+}
+
+class ThemeSetAuthorHandler extends XmlTagHandler
+{
+	function ThemeSetAuthorHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'author';
+	}
+
+	function handleBeginElement(&$parser, &$attributes)
+	{
+		$parser->resetTempArr();
+	}
+
+	function handleEndElement(&$parser)
+	{
+		$parser->setCreditsData($parser->getTempArr());
+	}
+}
+
+class ThemeSetDescriptionHandler extends XmlTagHandler
+{
+	function ThemeSetDescriptionHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'description';
+	}
+
+	function handleCharacterData(&$parser, &$data)
+	{
+		switch ($parser->getParentTag()) {
+		case 'template':
+			$parser->setTempArr('description', $data);
+			break;
+		case 'image':
+			$parser->setTempArr('description', $data);
+			break;
+		default:
+			break;
+		}
+	}
+}
+
+class ThemeSetGeneratorHandler extends XmlTagHandler
+{
+	function ThemeSetGeneratorHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'generator';
+	}
+
+	function handleCharacterData(&$parser, &$data)
+	{
+		switch ($parser->getParentTag()) {
+		case 'themeset':
+			$parser->setThemeSetData('generator', $data);
+			break;
+		default:
+			break;
+		}
+	}
+}
+
+class ThemeSetNameHandler extends XmlTagHandler
+{
+	function ThemeSetNameHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'name';
+	}
+
+	function handleCharacterData(&$parser, &$data)
+	{
+		switch ($parser->getParentTag()) {
+		case 'themeset':
+			$parser->setThemeSetData('name', $data);
+			break;
+		case 'author':
+			$parser->setTempArr('name', $data);
+			break;
+		default:
+			break;
+		}
+	}
+}
+
+class ThemeSetEmailHandler extends XmlTagHandler
+{
+	function ThemeSetEmailHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'email';
+	}
+
+	function handleCharacterData(&$parser, &$data)
+	{
+		switch ($parser->getParentTag()) {
+		case 'author':
+			$parser->setTempArr('email', $data);
+			break;
+		default:
+			break;
+		}
+	}
+}
+
+class ThemeSetLinkHandler extends XmlTagHandler
+{
+	function ThemeSetLinkHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'link';
+	}
+
+	function handleCharacterData(&$parser, &$data)
+	{
+		switch ($parser->getParentTag()) {
+		case 'author':
+			$parser->setTempArr('link', $data);
+			break;
+		default:
+			break;
+		}
+	}
+}
+
+class ThemeSetTemplateHandler extends XmlTagHandler
+{
+	function ThemeSetTemplateHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'template';
+	}
+
+	function handleBeginElement(&$parser, &$attributes)
+	{
+		$parser->resetTempArr();
+		$parser->setTempArr('name', $attributes['name']);
+	}
+
+	function handleEndElement(&$parser)
+	{
+		$parser->setTemplatesData($parser->getTempArr());
+	}
+}
+
+class ThemeSetImageHandler extends XmlTagHandler
+{
+	function ThemeSetImageHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'image';
+	}
+
+	function handleBeginElement(&$parser, &$attributes)
+	{
+		$parser->resetTempArr();
+		$parser->setTempArr('name', $attributes[0]);
+	}
+
+	function handleEndElement(&$parser)
+	{
+		$parser->setImagesData($parser->getTempArr());
+	}
+}
+
+class ThemeSetModuleHandler extends XmlTagHandler
+{
+	function ThemeSetModuleHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'module';
+	}
+
+	function handleCharacterData(&$parser, &$data)
+	{
+		switch ($parser->getParentTag()) {
+		case 'template':
+		case 'image':
+			$parser->setTempArr('module', $data);
+			break;
+		default:
+			break;
+		}
+	}
+}
+
+class ThemeSetFileTypeHandler extends XmlTagHandler
+{
+	function ThemeSetFileTypeHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'fileType';
+	}
+
+	function handleCharacterData(&$parser, &$data)
+	{
+		switch ($parser->getParentTag()) {
+		case 'template':
+			$parser->setTempArr('type', $data);
+			break;
+		default:
+			break;
+		}
+	}
+}
+
+class ThemeSetTagHandler extends XmlTagHandler
+{
+	function ThemeSetTagHandler()
+	{
+
+	}
+
+	function getName()
+	{
+		return 'tag';
+	}
+
+	function handleCharacterData(&$parser, &$data)
+	{
+		switch ($parser->getParentTag()) {
+		case 'image':
+			$parser->setTempArr('tag', $data);
+			break;
+		default:
+			break;
+		}
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xml/themesetparser.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xml/xmltaghandler.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xml/xmltaghandler.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xml/xmltaghandler.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,56 @@
+<?php
+// $Id$
+/*******************************************************************************
+    Location: <b>xml/XmlTagHandler</b><br>
+     <br>
+    XmlTagHandler<br>
+    <br>
+    Copyright &copy; 2001 eXtremePHP.  All rights reserved.<br>
+    <br>
+    @author Ken Egervari, Remi Michalski<br>
+*******************************************************************************/
+
+class XmlTagHandler
+{
+
+    /****************************************************************************
+
+    ****************************************************************************/
+    function XmlTagHandler()
+    {
+    }
+
+    /****************************************************************************
+
+    ****************************************************************************/
+    function getName()
+    {
+        return '';
+    }
+
+    /****************************************************************************
+
+    ****************************************************************************/
+    function handleBeginElement(&$parser, &$attributes)
+    {
+
+    }
+
+    /****************************************************************************
+
+    ****************************************************************************/
+    function handleEndElement(&$parser)
+    {
+
+    }
+
+    /****************************************************************************
+
+    ****************************************************************************/
+    function handleCharacterData(&$parser,  &$data)
+    {
+
+    }
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xml/xmltaghandler.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsblock.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsblock.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsblock.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,536 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+    exit();
+}
+require_once XOOPS_ROOT_PATH."/kernel/object.php";
+
+class XoopsBlock extends XoopsObject
+{
+    var $db;
+
+    function XoopsBlock($id = null)
+    {
+        $this->db =& Database::getInstance();
+        $this->initVar('bid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('mid', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('func_num', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('options', XOBJ_DTYPE_TXTBOX, null, false, 255);
+        $this->initVar('name', XOBJ_DTYPE_TXTBOX, null, true, 150);
+        //$this->initVar('position', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('title', XOBJ_DTYPE_TXTBOX, null, false, 150);
+        $this->initVar('content', XOBJ_DTYPE_TXTAREA, null, false);
+        $this->initVar('side', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('weight', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('visible', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('block_type', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('c_type', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('isactive', XOBJ_DTYPE_INT, null, false);
+
+        $this->initVar('dirname', XOBJ_DTYPE_TXTBOX, null, false, 50);
+        $this->initVar('func_file', XOBJ_DTYPE_TXTBOX, null, false, 50);
+        $this->initVar('show_func', XOBJ_DTYPE_TXTBOX, null, false, 50);
+        $this->initVar('edit_func', XOBJ_DTYPE_TXTBOX, null, false, 50);
+
+        $this->initVar('template', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('bcachetime', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('last_modified', XOBJ_DTYPE_INT, 0, false);
+
+        if ( !empty($id) ) {
+            if ( is_array($id) ) {
+                $this->assignVars($id);
+            } else {
+                $this->load(intval($id));
+            }
+        }
+    }
+
+    function load($id)
+    {
+        $sql = 'SELECT * FROM '.$this->db->prefix('newblocks').' WHERE bid = '.$id;
+        $arr = $this->db->fetchArray($this->db->query($sql));
+        $this->assignVars($arr);
+    }
+
+    function store()
+    {
+        if ( !$this->cleanVars() ) {
+            return false;
+        }
+        foreach ( $this->cleanVars as $k=>$v ) {
+            ${$k} = $v;
+        }
+        if ( empty($bid) ) {
+            $bid = $this->db->genId($this->db->prefix("newblocks")."_bid_seq");
+            $sql = sprintf("INSERT INTO %s (bid, mid, func_num, options, name, title, content, side, weight, visible, block_type, c_type, isactive, dirname, func_file, show_func, edit_func, template, bcachetime, last_modified) VALUES (%u, %u, %u, %s, %s, %s, %s, %u, %u, %u, %s, %s, %u, %s, %s, %s, %s, %s, %u, %u)", $this->db->prefix('newblocks'), $bid, $mid, $func_num, $this->db->quoteString($options), $this->db->quoteString($name), $this->db->quoteString($title), $this->db->quoteString($content), $side, $weight, $visible, $this->db->quoteString($block_type), $this->db->quoteString($c_type), 1, $this->db->quoteString($dirname), $this->db->quoteString($func_file), $this->db->quoteString($show_func), $this->db->quoteString($edit_func), $this->db->quoteString($template), $bcachetime, time());
+        } else {
+            $sql = "UPDATE ".$this->db->prefix("newblocks")." SET options=".$this->db->quoteString($options);
+            // a custom block needs its own name
+            if ( $block_type == "C" ) {
+                $sql .= ", name=".$this->db->quoteString($name);
+            }
+            $sql .= ", isactive=".$isactive.", title=".$this->db->quoteString($title).", content=".$this->db->quoteString($content).", side=".$side.", weight=".$weight.", visible=".$visible.", c_type=".$this->db->quoteString($c_type).", template=".$this->db->quoteString($template).", bcachetime=".$bcachetime.", last_modified=".time()." WHERE bid=".$bid;
+        }
+        if ( !$this->db->query($sql) ) {
+            $this->setErrors("Could not save block data into database");
+            return false;
+        }
+        if ( empty($bid) ) {
+            $bid = $this->db->getInsertId();
+        }
+        return $bid;
+    }
+
+    function delete()
+    {
+        $sql = sprintf("DELETE FROM %s WHERE bid = %u", $this->db->prefix('newblocks'), $this->getVar('bid'));
+        if ( !$this->db->query($sql) ) {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE gperm_name = 'block_read' AND gperm_itemid = %u AND gperm_modid = 1", $this->db->prefix('group_permission'), $this->getVar('bid'));
+        $this->db->query($sql);
+        $sql = sprintf("DELETE FROM %s WHERE block_id = %u", $this->db->prefix('block_module_link'), $this->getVar('bid'));
+        $this->db->query($sql);
+        return true;
+    }
+
+    /**
+    * do stripslashes/htmlspecialchars according to the needed output
+    *
+    * @param $format      output use: S for Show and E for Edit
+    * @param $c_type    type of block content
+    * @returns string
+    */
+    function &getContent($format = 'S', $c_type = 'T')
+    {
+        switch ( $format ) {
+        case 'S':
+            // check the type of content
+            // H : custom HTML block
+            // P : custom PHP block
+            // S : use text sanitizater (smilies enabled)
+            // T : use text sanitizater (smilies disabled)
+            if ( $c_type == 'H' ) {
+                return str_replace('{X_SITEURL}', XOOPS_URL.'/', $this->getVar('content', 'N'));
+            } elseif ( $c_type == 'P' ) {
+                ob_start();
+                echo eval($this->getVar('content', 'N'));
+                    $content = ob_get_contents();
+                    ob_end_clean();
+                return str_replace('{X_SITEURL}', XOOPS_URL.'/', $content);
+            } elseif ( $c_type == 'S' ) {
+                $myts =& MyTextSanitizer::getInstance();
+                return str_replace('{X_SITEURL}', XOOPS_URL.'/', $myts->displayTarea($this->getVar('content', 'N'), 1, 1));
+            } else {
+                $myts =& MyTextSanitizer::getInstance();
+                return str_replace('{X_SITEURL}', XOOPS_URL.'/', $myts->displayTarea($this->getVar('content', 'N'), 1, 0));
+            }
+            break;
+        case 'E':
+            return $this->getVar('content', 'E');
+            break;
+        default:
+            return $this->getVar('content', 'N');
+            break;
+        }
+    }
+
+    function &buildBlock()
+    {
+        global $xoopsConfig, $xoopsOption;
+        $block = array();
+        // M for module block, S for system block C for Custom
+        if ( $this->getVar("block_type") != "C" ) {
+            // get block display function
+            $show_func = $this->getVar('show_func');
+            if ( !$show_func ) {
+                return false;
+            }
+            // must get lang files b4 execution of the function
+            if ( file_exists(XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname')."/blocks/".$this->getVar('func_file')) ) {
+                if ( file_exists(XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname')."/language/".$xoopsConfig['language']."/blocks.php") ) {
+                    include_once XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname')."/language/".$xoopsConfig['language']."/blocks.php";
+                } elseif ( file_exists(XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname')."/language/english/blocks.php") ) {
+                    include_once XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname')."/language/english/blocks.php";
+                }
+                include_once XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname')."/blocks/".$this->getVar('func_file');
+                $options = explode("|", $this->getVar("options"));
+                if ( function_exists($show_func) ) {
+                    // execute the function
+                    $block = $show_func($options);
+                    if ( !$block ) {
+                        return false;
+                    }
+                } else {
+                    return false;
+                }
+            } else {
+                return false;
+            }
+        } else {
+            // it is a custom block, so just return the contents
+            $block['content'] = $this->getContent("S",$this->getVar("c_type"));
+            if (empty($block['content'])) {
+                return false;
+            }
+        }
+        return $block;
+    }
+
+    /*
+    * Aligns the content of a block
+    * If position is 0, content in DB is positioned
+    * before the original content
+    * If position is 1, content in DB is positioned
+    * after the original content
+    */
+    function &buildContent($position,$content="",$contentdb="")
+    {
+        if ( $position == 0 ) {
+            $ret = $contentdb.$content;
+        } elseif ( $position == 1 ) {
+            $ret = $content.$contentdb;
+        }
+        return $ret;
+    }
+
+    function &buildTitle($originaltitle, $newtitle="")
+    {
+        if ($newtitle != "") {
+            $ret = $newtitle;
+        } else {
+            $ret = $originaltitle;
+        }
+        return $ret;
+    }
+
+    function isCustom()
+    {
+        if ( $this->getVar("block_type") == "C" ) {
+            return true;
+        }
+        return false;
+    }
+
+    /**
+    * gets html form for editting block options
+    *
+    */
+    function getOptions()
+    {
+        global $xoopsConfig;
+        if ( $this->getVar("block_type") != "C" ) {
+            $edit_func = $this->getVar('edit_func');
+            if ( !$edit_func ) {
+                return false;
+            }
+            if ( file_exists(XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname')."/blocks/".$this->getVar('func_file')) ) {
+                if ( file_exists(XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname')."/language/".$xoopsConfig['language']."/blocks.php") ) {
+                    include_once XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname')."/language/".$xoopsConfig['language']."/blocks.php";
+                } elseif ( file_exists(XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname')."/language/english/blocks.php") ) {
+                    include_once XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname')."/language/english/blocks.php";
+                }
+                include_once XOOPS_ROOT_PATH.'/modules/'.$this->getVar('dirname').'/blocks/'.$this->getVar('func_file');
+                $options = explode("|", $this->getVar("options"));
+                $edit_form = $edit_func($options);
+                if ( !$edit_form ) {
+                    return false;
+                }
+                return $edit_form;
+            } else {
+                return false;
+            }
+        } else {
+            return false;
+        }
+    }
+
+    /**
+    * get all the blocks that match the supplied parameters
+    * @param $side   0: sideblock - left
+    *        1: sideblock - right
+    *        2: sideblock - left and right
+    *        3: centerblock - left
+    *        4: centerblock - right
+    *        5: centerblock - center
+    *        6: centerblock - left, right, center
+    * @param $groupid   groupid (can be an array)
+    * @param $visible   0: not visible 1: visible
+    * @param $orderby   order of the blocks
+    * @returns array of block objects
+    */
+    function &getAllBlocksByGroup($groupid, $asobject=true, $side=null, $visible=null, $orderby="b.weight,b.bid", $isactive=1)
+    {
+        $db =& Database::getInstance();
+        $ret = array();
+        if ( !$asobject ) {
+            $sql = "SELECT b.bid ";
+        } else {
+            $sql = "SELECT b.* ";
+        }
+        $sql .= "FROM ".$db->prefix("newblocks")." b LEFT JOIN ".$db->prefix("group_permission")." l ON l.gperm_itemid=b.bid WHERE gperm_name = 'block_read' AND gperm_modid = 1";
+        if ( is_array($groupid) ) {
+            $sql .= " AND (l.gperm_groupid=".$groupid[0]."";
+            $size = count($groupid);
+            if ( $size  > 1 ) {
+                for ( $i = 1; $i < $size; $i++ ) {
+                    $sql .= " OR l.gperm_groupid=".$groupid[$i]."";
+                }
+            }
+            $sql .= ")";
+        } else {
+            $sql .= " AND l.gperm_groupid=".$groupid."";
+        }
+        $sql .= " AND b.isactive=".$isactive;
+        if ( isset($side) ) {
+            // get both sides in sidebox? (some themes need this)
+            if ( $side == XOOPS_SIDEBLOCK_BOTH ) {
+                $side = "(b.side=0 OR b.side=1)";
+            } elseif ( $side == XOOPS_CENTERBLOCK_ALL ) {
+                $side = "(b.side=3 OR b.side=4 OR b.side=5)";
+            } else {
+                $side = "b.side=".$side;
+            }
+            $sql .= " AND ".$side;
+        }
+        if ( isset($visible) ) {
+            $sql .= " AND b.visible=$visible";
+        }
+        $sql .= " ORDER BY $orderby";
+        $result = $db->query($sql);
+        $added = array();
+        while ( $myrow = $db->fetchArray($result) ) {
+            if ( !in_array($myrow['bid'], $added) ) {
+                if (!$asobject) {
+                    $ret[] = $myrow['bid'];
+                } else {
+                    $ret[] = new XoopsBlock($myrow);
+                }
+                array_push($added, $myrow['bid']);
+            }
+        }
+        //echo $sql;
+        return $ret;
+    }
+
+    function &getAllBlocks($rettype="object", $side=null, $visible=null, $orderby="side,weight,bid", $isactive=1)
+    {
+        $db =& Database::getInstance();
+        $ret = array();
+        $where_query = " WHERE isactive=".$isactive;
+        if ( isset($side) ) {
+            // get both sides in sidebox? (some themes need this)
+            if ( $side == 2 ) {
+                $side = "(side=0 OR side=1)";
+            } elseif ( $side == 6 ) {
+                $side = "(side=3 OR side=4 OR side=5)";
+            } else {
+                $side = "side=".$side;
+            }
+            $where_query .= " AND ".$side;
+        }
+        if ( isset($visible) ) {
+            $where_query .= " AND visible=$visible";
+        }
+        $where_query .= " ORDER BY $orderby";
+        switch ($rettype) {
+        case "object":
+            $sql = "SELECT * FROM ".$db->prefix("newblocks")."".$where_query;
+            $result = $db->query($sql);
+            while ( $myrow = $db->fetchArray($result) ) {
+                $ret[] = new XoopsBlock($myrow);
+            }
+            break;
+        case "list":
+            $sql = "SELECT * FROM ".$db->prefix("newblocks")."".$where_query;
+            $result = $db->query($sql);
+            while ( $myrow = $db->fetchArray($result) ) {
+                $block = new XoopsBlock($myrow);
+                $name = ($block->getVar("block_type") != "C") ? $block->getVar("name") : $block->getVar("title");
+                $ret[$block->getVar("bid")] = $name;
+            }
+            break;
+        case "id":
+            $sql = "SELECT bid FROM ".$db->prefix("newblocks")."".$where_query;
+            $result = $db->query($sql);
+            while ( $myrow = $db->fetchArray($result) ) {
+                $ret[] = $myrow['bid'];
+            }
+            break;
+        }
+        //echo $sql;
+        return $ret;
+    }
+
+    function &getByModule($moduleid, $asobject=true)
+    {
+        $db =& Database::getInstance();
+        if ( $asobject == true ) {
+            $sql = $sql = "SELECT * FROM ".$db->prefix("newblocks")." WHERE mid=".$moduleid."";
+        } else {
+            $sql = "SELECT bid FROM ".$db->prefix("newblocks")." WHERE mid=".$moduleid."";
+        }
+        $result = $db->query($sql);
+        $ret = array();
+        while( $myrow = $db->fetchArray($result) ) {
+            if ( $asobject ) {
+                $ret[] = new XoopsBlock($myrow);
+            } else {
+                $ret[] = $myrow['bid'];
+            }
+        }
+        return $ret;
+    }
+
+    function &getAllByGroupModule($groupid, $module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
+    {
+        $db =& Database::getInstance();
+        $ret = array();
+        $sql = "SELECT DISTINCT gperm_itemid FROM ".$db->prefix('group_permission')." WHERE gperm_name = 'block_read' AND gperm_modid = 1";
+        if ( is_array($groupid) ) {
+            $sql .= ' AND gperm_groupid IN ('.implode(',', $groupid).')';
+        } else {
+            if (intval($groupid) > 0) {
+                $sql .= ' AND gperm_groupid='.$groupid;
+            }
+        }
+        $result = $db->query($sql);
+        $blockids = array();
+        while ( $myrow = $db->fetchArray($result) ) {
+            $blockids[] = $myrow['gperm_itemid'];
+        }
+        if (!empty($blockids)) {
+            $sql = 'SELECT b.* FROM '.$db->prefix('newblocks').' b, '.$db->prefix('block_module_link').' m WHERE m.block_id=b.bid';
+            $sql .= ' AND b.isactive='.$isactive;
+            if (isset($visible)) {
+                $sql .= ' AND b.visible='.intval($visible);
+            }
+            $module_id = intval($module_id);
+            if (!empty($module_id)) {
+                $sql .= ' AND m.module_id IN (0,'.$module_id;
+                if ($toponlyblock) {
+                    $sql .= ',-1';
+                }
+                $sql .= ')';
+            } else {
+                if ($toponlyblock) {
+                    $sql .= ' AND m.module_id IN (0,-1)';
+                } else {
+                    $sql .= ' AND m.module_id=0';
+                }
+            }
+            $sql .= ' AND b.bid IN ('.implode(',', $blockids).')';
+            $sql .= ' ORDER BY '.$orderby;
+            $result = $db->query($sql);
+            while ( $myrow = $db->fetchArray($result) ) {
+                $block =& new XoopsBlock($myrow);
+                $ret[$myrow['bid']] =& $block;
+                unset($block);
+            }
+        }
+        return $ret;
+    }
+
+    function &getNonGroupedBlocks($module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
+    {
+        $db =& Database::getInstance();
+        $ret = array();
+        $bids = array();
+        $sql = "SELECT DISTINCT(bid) from ".$db->prefix('newblocks');
+        if ($result = $db->query($sql)) {
+            while ( $myrow = $db->fetchArray($result) ) {
+                $bids[] = $myrow['bid'];
+            }
+        }
+        $sql = "SELECT DISTINCT(p.gperm_itemid) from ".$db->prefix('group_permission')." p, ".$db->prefix('groups')." g WHERE g.groupid=p.gperm_groupid AND p.gperm_name='block_read'";
+        $grouped = array();
+        if ($result = $db->query($sql)) {
+            while ( $myrow = $db->fetchArray($result) ) {
+                $grouped[] = $myrow['gperm_itemid'];
+            }
+        }
+        $non_grouped = array_diff($bids, $grouped);
+        if (!empty($non_grouped)) {
+            $sql = 'SELECT b.* FROM '.$db->prefix('newblocks').' b, '.$db->prefix('block_module_link').' m WHERE m.block_id=b.bid';
+            $sql .= ' AND b.isactive='.$isactive;
+            if (isset($visible)) {
+                $sql .= ' AND b.visible='.intval($visible);
+            }
+            $module_id = intval($module_id);
+            if (!empty($module_id)) {
+                $sql .= ' AND m.module_id IN (0,'.$module_id;
+                if ($toponlyblock) {
+                    $sql .= ',-1';
+                }
+                $sql .= ')';
+            } else {
+                if ($toponlyblock) {
+                    $sql .= ' AND m.module_id IN (0,-1)';
+                } else {
+                    $sql .= ' AND m.module_id=0';
+                }
+            }
+            $sql .= ' AND b.bid IN ('.implode(',', $non_grouped).')';
+            $sql .= ' ORDER BY '.$orderby;
+            $result = $db->query($sql);
+            while ( $myrow = $db->fetchArray($result) ) {
+                $block =& new XoopsBlock($myrow);
+                $ret[$myrow['bid']] =& $block;
+                unset($block);
+            }
+        }
+        return $ret;
+    }
+
+    function countSimilarBlocks($moduleId, $funcNum, $showFunc = null)
+    {
+        $funcNum = intval($funcNum);
+        $moduleId = intval($moduleId);
+        if ($funcNum < 1 || $moduleId < 1) {
+            // invalid query
+            return 0;
+        }
+        $db =& Database::getInstance();
+        if (isset($showFunc)) {
+            // showFunc is set for more strict comparison
+            $sql = sprintf("SELECT COUNT(*) FROM %s WHERE mid = %d AND func_num = %d AND show_func = %s", $db->prefix('newblocks'), $moduleId, $funcNum, $db->quoteString(trim($showFunc)));
+        } else {
+            $sql = sprintf("SELECT COUNT(*) FROM %s WHERE mid = %d AND func_num = %d", $db->prefix('newblocks'), $moduleId, $funcNum);
+        }
+        if (!$result = $db->query($sql)) {
+            return 0;
+        }
+        list($count) = $db->fetchRow($result);
+        return $count;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsblock.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopscomments.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopscomments.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopscomments.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,348 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH."/class/xoopstree.php";
+require_once XOOPS_ROOT_PATH.'/class/xoopsobject.php';
+include_once XOOPS_ROOT_PATH.'/language/'.$GLOBALS['xoopsConfig']['language'].'/comment.php';
+
+class XoopsComments extends XoopsObject
+{
+	var $ctable;
+	var $db;
+
+	function XoopsComments($ctable, $id=null)
+	{
+		$this->ctable = $ctable;
+		$this->db =& Database::getInstance();
+		$this->XoopsObject();
+		$this->initVar('comment_id', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('item_id', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('order', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('mode', XOBJ_DTYPE_OTHER, null, false);
+		$this->initVar('subject', XOBJ_DTYPE_TXTBOX, null, false, 255);
+		$this->initVar('comment', XOBJ_DTYPE_TXTAREA, null, false, null);
+		$this->initVar('ip', XOBJ_DTYPE_OTHER, null, false);
+		$this->initVar('pid', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('date', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('nohtml', XOBJ_DTYPE_INT, 1, false);
+		$this->initVar('nosmiley', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('noxcode', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('user_id', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('icon', XOBJ_DTYPE_OTHER, null, false);
+		$this->initVar('prefix', XOBJ_DTYPE_OTHER, null, false);
+		if ( !empty($id) ) {
+			if ( is_array($id) ) {
+				$this->assignVars($id);
+			} else {
+				$this->load(intval($id));
+			}
+		}
+	}
+
+	function load($id)
+	{
+		$sql = "SELECT * FROM ".$this->ctable." WHERE comment_id=".$id."";
+		$arr = $this->db->fetchArray($this->db->query($sql));
+		$this->assignVars($arr);
+	}
+
+	function store()
+	{
+		if ( !$this->cleanVars() ) {
+			return false;
+		}
+		foreach ( $this->cleanVars as $k=>$v ) {
+			$$k = $v;
+		}
+		$isnew = false;
+		if ( empty($comment_id ) ) {
+			$isnew = true;
+			$comment_id = $this->db->genId($this->ctable."_comment_id_seq");
+			$sql = sprintf("INSERT INTO %s (comment_id, pid, item_id, date, user_id, ip, subject, comment, nohtml, nosmiley, noxcode, icon) VALUES (%u, %u, %u, %u, %u, '%s', '%s', '%s', %u, %u, %u, '%s')", $this->ctable, $comment_id, $pid, $item_id, time(), $user_id, $ip, $subject, $comment, $nohtml, $nosmiley, $noxcode, $icon);
+		} else {
+			$sql = sprintf("UPDATE %s SET subject = '%s', comment = '%s', nohtml = %u, nosmiley = %u, noxcode = %u, icon = '%s'  WHERE comment_id = %u", $this->ctable, $subject, $comment, $nohtml, $nosmiley, $noxcode, $icon, $comment_id);
+		}
+		if ( !$result = $this->db->query($sql) ) {
+			//echo $sql;
+			return false;
+		}
+		if ( empty($comment_id) ) {
+			$comment_id = $this->db->getInsertId();
+		}
+		if ( $isnew != false ) {
+			$sql = sprintf("UPDATE %s SET posts = posts+1 WHERE uid = %u", $this->db->prefix("users"), $user_id);
+			if (!$result = $this->db->query($sql)) {
+				echo "Could not update user posts.";
+			}
+		}
+		return $comment_id;
+	}
+
+	function delete()
+	{
+		$sql = sprintf("DELETE FROM %s WHERE comment_id = %u", $this->ctable, $this->getVar('comment_id'));
+		if ( !$result = $this->db->query($sql) ) {
+			return false;
+		}
+		$sql = sprintf("UPDATE %s SET posts = posts-1 WHERE uid = %u", $this->db->prefix("users"), $this->getVar("user_id"));
+		if ( !$result = $this->db->query($sql) ) {
+			echo "Could not update user posts.";
+		}
+		$mytree = new XoopsTree($this->ctable, "comment_id", "pid");
+		$arr = $mytree->getAllChild($this->getVar("comment_id"), "comment_id");
+		$size = count($arr);
+		if ( $size > 0 ) {
+			for ( $i = 0; $i < $size; $i++ ) {
+				$sql = sprintf("DELETE FROM %s WHERE comment_bid = %u", $this->ctable, $arr[$i]['comment_id']);
+				if ( !$result = $this->db->query($sql) ) {
+					echo "Could not delete comment.";
+				}
+				$sql = sprintf("UPDATE %s SET posts = posts-1 WHERE uid = %u", $this->db->prefix("users"), $arr[$i]['user_id']);
+				if ( !$result = $this->db->query($sql) ) {
+					echo "Could not update user posts.";
+				}
+			}
+		}
+		return ($size + 1);
+	}
+
+	function &getCommentTree()
+	{
+		$mytree = new XoopsTree($this->ctable, "comment_id", "pid");
+		$ret = array();
+		$tarray = $mytree->getChildTreeArray($this->getVar("comment_id"), "comment_id");
+		foreach ( $tarray as $ele ) {
+			$ret[] = new XoopsComments($this->ctable,$ele);
+		}
+		return $ret;
+	}
+
+	function getAllComments($criteria=array(), $asobject=true, $orderby="comment_id ASC", $limit=0, $start=0)
+	{
+		$ret = array();
+		$where_query = "";
+		if ( is_array($criteria) && count($criteria) > 0 ) {
+			$where_query = " WHERE";
+			foreach ( $criteria as $c ) {
+				$where_query .= " $c AND";
+			}
+			$where_query = substr($where_query, 0, -4);
+		}
+		if ( !$asobject ) {
+			$sql = "SELECT comment_id FROM ".$this->ctable."$where_query ORDER BY $orderby";
+			$result = $this->db->query($sql,$limit,$start);
+			while ( $myrow = $this->db->fetchArray($result) ) {
+				$ret[] = $myrow['comment_id'];
+			}
+		} else {
+			$sql = "SELECT * FROM ".$this->ctable."".$where_query." ORDER BY $orderby";
+			$result = $this->db->query($sql,$limit,$start);
+			while ( $myrow = $this->db->fetchArray($result) ) {
+				$ret[] = new XoopsComments($this->ctable,$myrow);
+			}
+		}
+		//echo $sql;
+		return $ret;
+	}
+
+	/* Methods below will be moved to maybe another class? */
+	function printNavBar($item_id, $mode="flat", $order=1)
+	{
+		global $xoopsConfig, $xoopsUser;
+		echo "<form method='get' action='".$_SERVER['PHP_SELF']."'><table width='100%' border='0' cellspacing='1' cellpadding='2'><tr><td class='bg1' align='center'><select name='mode'><option value='nocomments'";
+		if ( $mode == "nocomments" ) {
+			echo " selected='selected'";
+		}
+		echo ">". _NOCOMMENTS ."</option><option value='flat'";
+		if ($mode == 'flat') {
+			echo " selected='selected'";
+		}
+		echo ">". _FLAT ."</option><option value='thread'";
+		if ( $mode == "thread" || $mode == "" ) {
+			echo " selected='selected'";
+		}
+		echo ">". _THREADED ."</option></select><select name='order'><option value='0'";
+		if ( $order != 1 ) {
+			echo " selected='selected'";
+		}
+		echo ">". _OLDESTFIRST ."</option><option value='1'";
+		if ( $order == 1 ) {
+			echo " selected='selected'";
+		}
+		echo ">". _NEWESTFIRST ."</option></select><input type='hidden' name='item_id' value='".intval($item_id)."' /><input type='submit' value='". _CM_REFRESH ."' />";
+		if ( $xoopsConfig['anonpost'] == 1 || $xoopsUser ) {
+			if ($mode != "flat" || $mode != "nocomments" || $mode != "thread" ) {
+				$mode = "flat";
+			}
+			echo "&nbsp;<input type='button' onclick='location=\"newcomment.php?item_id=".intval($item_id)."&amp;order=".intval($order)."&amp;mode=".$mode."\"' value='"._CM_POSTCOMMENT."' />";
+		}
+		echo "</td></tr></table></form>";
+	}
+
+	function showThreadHead()
+	{
+		openThread();
+	}
+
+	function showThreadPost($order, $mode, $adminview=0, $color_num=1)
+	{
+		global $xoopsConfig, $xoopsUser;
+		$edit_image = "";
+		$reply_image = "";
+		$delete_image = "";
+		$post_date = formatTimestamp($this->getVar("date"),"m");
+		if ( $this->getVar("user_id") != 0 ) {
+			$poster = new XoopsUser($this->getVar("user_id"));
+			if ( !$poster->isActive() ) {
+				$poster = 0;
+			}
+		} else {
+			$poster = 0;
+		}
+		if ( $this->getVar("icon") != null && $this->getVar("icon") != "" ) {
+			$subject_image = "<a name='".$this->getVar("comment_id")."' id='".$this->getVar("comment_id")."'></a><img src='".XOOPS_URL."/images/subject/".$this->getVar("icon")."' alt='' />";
+		} else {
+			$subject_image =  "<a name='".$this->getVar("comment_id")."' id='".$this->getVar("comment_id")."'></a><img src='".XOOPS_URL."/images/icons/no_posticon.gif' alt='' />";
+		}
+		if ( $adminview ) {
+			$ip_image = "<img src='".XOOPS_URL."/images/icons/ip.gif' alt='".$this->getVar("ip")."' />";
+		} else {
+			$ip_image = "<img src='".XOOPS_URL."/images/icons/ip.gif' alt='' />";
+		}
+		if ( $adminview || ($xoopsUser && $this->getVar("user_id") == $xoopsUser->getVar("uid")) ) {
+			$edit_image = "<a href='editcomment.php?comment_id=".$this->getVar("comment_id")."&amp;mode=".$mode."&amp;order=".intval($order)."'><img src='".XOOPS_URL."/images/icons/edit.gif' alt='"._EDIT."' /></a>";
+		}
+		if ( $xoopsConfig['anonpost'] || $xoopsUser ) {
+			$reply_image = "<a href='replycomment.php?comment_id=".$this->getVar("comment_id")."&amp;mode=".$mode."&amp;order=".intval($order)."'><img src='".XOOPS_URL."/images/icons/reply.gif' alt='"._REPLY."' /></a>";
+		}
+		if ( $adminview ) {
+			$delete_image = "<a href='deletecomment.php?comment_id=".$this->getVar("comment_id")."&amp;mode=".$mode."&amp;order=".intval($order)."'><img src='".XOOPS_URL."/images/icons/delete.gif' alt='"._DELETE."' /></a>";
+		}
+
+		if ( $poster ) {
+			$text = $this->getVar("comment");
+			if ( $poster->getVar("attachsig") ) {
+				$text .= "<p><br />_________________<br />". $poster->user_sig()."</p>";
+			}
+			$reg_date = _CM_JOINED;
+			$reg_date .= formatTimestamp($poster->getVar("user_regdate"),"s");
+			$posts = _CM_POSTS;
+			$posts .= $poster->getVar("posts");
+			$user_from = _CM_FROM;
+			$user_from .= $poster->getVar("user_from");
+			$rank = $poster->rank();
+			if ( $rank['image'] != "" ) {
+				$rank['image'] = "<img src='".XOOPS_UPLOAD_URL."/".$rank['image']."' alt='' />";
+			}
+			$avatar_image = "<img src='".XOOPS_UPLOAD_URL."/".$poster->getVar("user_avatar")."' alt='' />";
+			if ( $poster->isOnline() ) {
+				$online_image = "<span style='color:#ee0000;font-weight:bold;'>"._ONLINE."</span>";
+			} else {
+				$online_image = "";
+			}
+			$profile_image = "<a href='".XOOPS_URL."/userinfo.php?uid=".$poster->getVar("uid")."'><img src='".XOOPS_URL."/images/icons/profile.gif' alt='"._PROFILE."' /></a>";
+			if ( $xoopsUser ) {
+				$pm_image =  "<a href='javascript:openWithSelfMain(\"".XOOPS_URL."/pmlite.php?send2=1&amp;to_userid=".$poster->getVar("uid")."\",\"pmlite\",450,370);'><img src='".XOOPS_URL."/images/icons/pm.gif' alt='".sprintf(_SENDPMTO,$poster->getVar("uname", "E"))."' /></a>";
+			} else {
+				$pm_image = "";
+			}
+   			if ( $poster->getVar("user_viewemail") ) {
+				$email_image = "<a href='mailto:".$poster->getVar("email", "E")."'><img src='".XOOPS_URL."/images/icons/email.gif' alt='".sprintf(_SENDEMAILTO,$poster->getVar("uname", "E"))."' /></a>";
+			} else {
+				$email_image = "";
+			}
+			$posterurl = $poster->getVar("url");
+   			if ( $posterurl != "" ) {
+				$www_image = "<a href='$posterurl' target='_blank'><img src='".XOOPS_URL."/images/icons/www.gif' alt='"._VISITWEBSITE."' /></a>";
+			} else {
+				$www_image = "";
+			}
+   			if ( $poster->getVar("user_icq") != "" ) {
+				$icq_image = "<a href='http://wwp.icq.com/scripts/search.dll?to=".$poster->getVar("user_icq", "E")."'><img src='".XOOPS_URL."/images/icons/icq_add.gif' alt='"._ADD."' /></a>";
+			} else {
+				$icq_image = "";
+			}
+			if ( $poster->getVar("user_aim") != "" ) {
+				$aim_image = "<a href='aim:goim?screenname=".$poster->getVar("user_aim", "E")."&message=Hi+".$poster->getVar("user_aim")."+Are+you+there?'><img src='".XOOPS_URL."/images/icons/aim.gif' alt='aim' /></a>";
+			} else {
+				$aim_image = "";
+			}
+   			if ( $poster->getVar("user_yim") != "" ) {
+				$yim_image = "<a href='http://edit.yahoo.com/config/send_webmesg?.target=".$poster->getVar("user_yim", "E")."&.src=pg'><img src='".XOOPS_URL."/images/icons/yim.gif' alt='yim' /></a>";
+			} else {
+				$yim_image = "";
+			}
+			if ( $poster->getVar("user_msnm") != "" ) {
+				$msnm_image = "<a href='".XOOPS_URL."/userinfo.php?uid=".$poster->getVar("uid")."'><img src='".XOOPS_URL."/images/icons/msnm.gif' alt='msnm' /></a>";
+			} else {
+				$msnm_image = "";
+			}
+			showThread($color_num, $subject_image, $this->getVar("subject"), $text, $post_date, $ip_image, $reply_image, $edit_image, $delete_image, $poster->getVar("uname"), $rank['title'], $rank['image'], $avatar_image, $reg_date, $posts, $user_from, $online_image, $profile_image, $pm_image, $email_image, $www_image, $icq_image, $aim_image, $yim_image, $msnm_image);
+		} else {
+			showThread($color_num, $subject_image, $this->getVar("subject"), $this->getVar("comment"), $post_date, $ip_image, $reply_image, $edit_image, $delete_image, $xoopsConfig['anonymous']);
+		}
+	}
+
+	function showThreadFoot()
+	{
+		closeThread();
+	}
+
+	function showTreeHead($width="100%")
+	{
+		echo "<table border='0' class='outer' cellpadding='0' cellspacing='0' align='center' width='$width'><tr class='bg3' align='center'><td colspan='3'>". _CM_REPLIES ."</td></tr><tr class='bg3' align='left'><td width='60%' class='fg2'>". _CM_TITLE ."</td><td width='20%' class='fg2'>". _CM_POSTER ."</td><td class='fg2'>". _CM_POSTED ."</td></tr>";
+	}
+
+	function showTreeItem($order, $mode, $color_num)
+	{
+		if ( $color_num == 1 ) {
+			$bg = 'even';
+		} else {
+			$bg = 'odd';
+		}
+		$prefix = str_replace(".", "&nbsp;&nbsp;&nbsp;&nbsp;", $this->getVar("prefix"));
+		$date = formatTimestamp($this->getVar("date"),"m");
+		if ( $this->getVar("icon") != "" ) {
+			$icon = "subject/".$this->getVar("icon", "E");
+		} else {
+			$icon = "icons/no_posticon.gif";
+		}
+		echo "<tr class='$bg' align='left'><td>".$prefix."<img src='".XOOPS_URL."/images/".$icon."'>&nbsp;<a href='".$_SERVER['PHP_SELF']."?item_id=".$this->getVar("item_id")."&amp;comment_id=".$this->getVar("comment_id")."&amp;mode=".$mode."&amp;order=".$order."#".$this->getVar("comment_id")."'>".$this->getVar("subject")."</a></td><td><a href='".XOOPS_URL."/userinfo.php?uid=".$this->getVar("user_id")."'>".XoopsUser::getUnameFromId($this->getVar("user_id"))."</a></td><td>".$date."</td></tr>";
+	}
+
+	function showTreeFoot()
+	{
+		echo "</table><br />";
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopscomments.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/form.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/form.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/form.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,426 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+// public abstruct
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+
+/**
+ * Abstract base class for forms
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ * @subpackage  form
+ */
+class XoopsForm {
+	/**#@+
+	 * @access  private
+	 */
+    /** 
+     * "action" attribute for the html form
+     * @var string  
+     */
+	var $_action;
+
+	/**
+     * "method" attribute for the form.
+	 * @var string  
+	 */
+	var $_method;
+
+	/**
+     * "name" attribute of the form
+	 * @var string  
+	 */
+	var $_name;
+
+	/**
+     * title for the form
+	 * @var string  
+	 */
+	var $_title;
+
+	/**
+     * array of {@link XoopsFormElement} objects
+     * @var  array   
+     */
+	var $_elements = array();
+
+	/**
+     * extra information for the <form> tag
+	 * @var string  
+	 */
+	var $_extra;
+
+	/**
+     * required elements
+	 * @var array   
+	 */
+	var $_required = array();
+    
+    /**#@-*/
+
+	/**
+	 * constructor
+	 * 
+     * @param	string  $title  title of the form
+     * @param	string  $name   "name" attribute for the <form> tag
+     * @param	string  $action "action" attribute for the <form> tag
+     * @param   string  $method "method" attribute for the <form> tag
+     * @param   bool    $addtoken whether to add a security token to the form
+	 */
+	function XoopsForm($title, $name, $action, $method="post", $addtoken=false){
+		$this->_title = $title;
+		$this->_name = $name;
+		$this->_action = $action;
+		$this->_method = $method;
+		if ($addtoken != false) {
+		    $this->addElement(new XoopsFormHiddenToken());
+		}
+	}
+
+	/**
+	 * return the title of the form
+     * 
+     * @return	string
+	 */
+	function getTitle(){
+		return $this->_title;
+	}
+
+	/**
+	 * get the "name" attribute for the <form> tag
+     * 
+	 * @return	string
+	 */
+	function getName(){
+		return $this->_name;
+	}
+
+	/**
+	 * get the "action" attribute for the <form> tag
+	 * 
+     * @return	string
+	 */
+	function getAction(){
+		return $this->_action;
+	}
+
+	/**
+	 * get the "method" attribute for the <form> tag
+	 * 
+     * @return	string
+	 */
+	function getMethod(){
+		return $this->_method;
+	}
+
+	/**
+	 * Add an element to the form
+	 *
+     * @param	object  &$formElement    reference to a {@link XoopsFormElement}
+     * @param	bool    $required       is this a "required" element?
+	 */
+	function addElement(&$formElement, $required=false){
+        if ( is_string( $formElement ) ) {
+            $this->_elements[] = $formElement;
+        } elseif ( is_subclass_of($formElement, 'xoopsformelement') ) {
+			$this->_elements[] =& $formElement;
+			if ($required) {
+				if (!$formElement->isContainer()) {
+					$this->_required[] =& $formElement;
+				} else {
+					$required_elements =& $formElement->getRequired();
+					$count = count($required_elements);
+					for ($i = 0 ; $i < $count; $i++) {
+						$this->_required[] =& $required_elements[$i];
+					}
+				}
+			}
+		}
+	}
+
+	/**
+	 * get an array of forms elements
+	 * 
+	 * @param	bool	get elements recursively?
+     * @return	array   array of {@link XoopsFormElement}s
+	 */
+	function &getElements($recurse = false){
+		if (!$recurse) {
+			return $this->_elements;
+		} else {
+			$ret = array();
+			$count = count($this->_elements);
+			for ($i = 0; $i < $count; $i++) {
+				if (!$this->_elements[$i]->isContainer()) {
+					$ret[] =& $this->_elements[$i];
+				} else {
+					$elements =& $this->_elements[$i]->getElements(true);
+					$count2 = count($elements);
+					for ($j = 0; $j < $count2; $j++) {
+						$ret[] =& $elements[$j];
+					}
+					unset($elements);
+				}
+			}
+			return $ret;
+		}
+	}
+
+	/**
+	 * get an array of "name" attributes of form elements
+	 * 
+     * @return	array   array of form element names
+	 */
+	function getElementNames()
+	{
+		$ret = array();
+		$elements =& $this->getElements(true);
+		$count = count($elements);
+		for ($i = 0; $i < $count; $i++) {
+			$ret[] = $elements[$i]->getName();
+		}
+		return $ret;
+	}
+
+	/**
+	 * get a reference to a {@link XoopsFormElement} object by its "name"
+	 * 
+	 * @param  string  $name	"name" attribute assigned to a {@link XoopsFormElement}
+     * @return object  reference to a {@link XoopsFormElement}, false if not found
+	 */
+	function &getElementByName($name){
+		$elements =& $this->getElements(true);
+		$count = count($elements);
+		for ($i = 0; $i < $count; $i++) {
+			if ($name == $elements[$i]->getName()) {
+				return $elements[$i];
+			}
+		}
+		return false;
+	}
+
+	/**
+	 * Sets the "value" attribute of a form element
+	 * 
+	 * @param	string $name	the "name" attribute of a form element
+	 * @param	string $value	the "value" attribute of a form element
+	 */
+	function setElementValue($name, $value){
+		$ele =& $this->getElementByName($name);
+		if (is_object($ele) && method_exists($ele, 'setValue')) {
+			$ele->setValue($value);
+		}
+	}
+
+	/**
+	 * Sets the "value" attribute of form elements in a batch
+	 * 
+	 * @param	array $values	array of name/value pairs to be assigned to form elements
+	 */
+	function setElementValues($values){
+		if (is_array($values) && !empty($values)) {
+			// will not use getElementByName() for performance..
+			$elements =& $this->getElements(true);
+			$count = count($elements);
+			for ($i = 0; $i < $count; $i++) {
+				$name = $elements[$i]->getName();
+				if ($name && isset($values[$name]) && method_exists($elements[$i], 'setValue')) {
+					$elements[$i]->setValue($values[$name]);
+				}
+			}
+		}
+	}
+
+	/**
+	 * Gets the "value" attribute of a form element
+	 * 
+	 * @param	string 	$name	the "name" attribute of a form element
+	 * @return	string 	the "value" attribute assigned to a form element, null if not set
+	 */
+	function &getElementValue($name){
+		$ele =& $this->getElementByName($name);
+		if (is_object($ele) && method_exists($ele, 'getValue')) {
+			return $ele->getValue($value);
+		}
+		return;
+	}
+
+	/**
+	 * gets the "value" attribute of all form elements
+	 * 
+	 * @return	array 	array of name/value pairs assigned to form elements
+	 */
+	function &getElementValues(){
+		// will not use getElementByName() for performance..
+		$elements =& $this->getElements(true);
+		$count = count($elements);
+		$values = array();
+		for ($i = 0; $i < $count; $i++) {
+			$name = $elements[$i]->getName();
+			if ($name && method_exists($elements[$i], 'getValue')) {
+				$values[$name] =& $elements[$i]->getValue();
+			}
+		}
+		return $values;
+	}
+
+	/**
+	 * set the extra attributes for the <form> tag
+	 *
+	 * @param	string  $extra  extra attributes for the <form> tag
+	 */
+	function setExtra($extra){
+		$this->_extra = " ".$extra;
+	}
+
+	/**
+	 * get the extra attributes for the <form> tag
+	 *
+	 * @return	string
+	 */
+	function &getExtra(){
+		if (isset($this->_extra)) {
+			return $this->_extra;
+		}
+	}
+
+	/**
+	 * make an element "required"
+	 *
+	 * @param	object  &$formElement    reference to a {@link XoopsFormElement}
+	 */
+	function setRequired(&$formElement){
+		$this->_required[] =& $formElement;
+	}
+
+	/**
+	 * get an array of "required" form elements
+	 * 
+     * @return	array   array of {@link XoopsFormElement}s 
+	 */
+	function &getRequired(){
+		return $this->_required;
+	}
+
+	/**
+	 * insert a break in the form
+     * 
+     * This method is abstract. It must be overwritten in the child classes.
+	 *
+	 * @param	string  $extra  extra information for the break
+	 * @abstract
+	 */
+	function insertBreak($extra = null){
+	}
+
+	/**
+	 * returns renderered form
+	 *
+	 * This method is abstract. It must be overwritten in the child classes.
+	 *
+	 * @abstract
+	 */
+	function render(){
+	}
+
+	/**
+	 * displays rendered form
+	 */
+	function display(){
+		echo $this->render();
+	}
+
+	/**
+	 * Renders the Javascript function needed for client-side for validation
+	 *
+	 * @param		boolean  $withtags	Include the < javascript > tags in the returned string
+	 */
+	function renderValidationJS( $withtags = true ) {
+		$js = "";
+		if ( $withtags ) {
+			$js .= "\n<!-- Start Form Vaidation JavaScript //-->\n<script type='text/javascript'>\n<!--//\n";
+		}
+		$myts =& MyTextSanitizer::getInstance();
+		$formname = $this->getName();
+		$required =& $this->getRequired();
+		$reqcount = count($required);
+		$js .= "function xoopsFormValidate_{$formname}() {
+	myform = window.document.$formname;\n";
+		for ($i = 0; $i < $reqcount; $i++) {
+			$eltname    = $required[$i]->getName();
+			$eltcaption = trim( $required[$i]->getCaption() );
+			$eltmsg = empty($eltcaption) ? sprintf( _FORM_ENTER, $eltname ) : sprintf( _FORM_ENTER, $eltcaption );
+			$eltmsg = str_replace('"', '\"', $eltmsg);
+			$js .= "if ( myform.{$eltname}.value == \"\" ) "
+				. "{ window.alert(\"{$eltmsg}\"); myform.{$eltname}.focus(); return false; }\n";
+		}
+		$js .= "return true;\n}\n";
+		if ( $withtags ) {
+			$js .= "//--></script>\n<!-- End Form Vaidation JavaScript //-->\n";
+		}
+		return $js;
+	}
+	/**
+	 * assign to smarty form template instead of displaying directly
+	 *
+	 * @param	object  &$tpl    reference to a {@link Smarty} object
+	 * @see     Smarty
+	 */
+	function assign(&$tpl){
+		$i = 0;
+		$elements = array();
+		foreach ( $this->getElements() as $ele ) {
+		    $n = ($ele->getName() != "") ? $ele->getName() : $i;
+			$elements[$n]['name']	  = $ele->getName();
+			$elements[$n]['caption']  = $ele->getCaption();
+			$elements[$n]['body']	  = $ele->render();
+			$elements[$n]['hidden']	  = $ele->isHidden();
+			if ($ele->getDescription() != '') {
+			    $elements[$n]['description']  = $ele->getDescription();
+			}
+			$i++;
+		}
+		$js = $this->renderValidationJS();
+		$tpl->assign($this->getName(), array('title' => $this->getTitle(), 'name' => $this->getName(), 'action' => $this->getAction(),  'method' => $this->getMethod(), 'extra' => 'onsubmit="return xoopsFormValidate_'.$this->getName().'();"'.$this->getExtra(), 'javascript' => $js, 'elements' => $elements));
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/form.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formbutton.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formbutton.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formbutton.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,120 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ *
+ *
+ * @package     kernel
+ * @subpackage  form
+ *
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * A button
+ *
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ *
+ * @package     kernel
+ * @subpackage  form
+ */
+class XoopsFormButton extends XoopsFormElement {
+
+	/**
+     * Value
+	 * @var	string
+	 * @access	private
+	 */
+	var $_value;
+
+	/**
+     * Type of the button. This could be either "button", "submit", or "reset"
+	 * @var	string
+	 * @access	private
+	 */
+	var $_type;
+
+	/**
+	 * Constructor
+     *
+	 * @param	string  $caption    Caption
+     * @param	string  $name
+     * @param	string  $value
+     * @param	string  $type       Type of the button.
+     * This could be either "button", "submit", or "reset"
+	 */
+	function XoopsFormButton($caption, $name, $value="", $type="button"){
+		$this->setCaption($caption);
+		$this->setName($name);
+		$this->_type = $type;
+		$this->setValue($value);
+	}
+
+	/**
+	 * Get the initial value
+	 *
+     * @return	string
+	 */
+	function getValue(){
+		return $this->_value;
+	}
+
+	/**
+	 * Set the initial value
+	 *
+     * @return	string
+	 */
+	function setValue($value){
+		$this->_value = $value;
+	}
+
+	/**
+	 * Get the type
+	 *
+     * @return	string
+	 */
+	function getType(){
+		return $this->_type;
+	}
+
+	/**
+	 * prepare HTML for output
+	 *
+     * @return	string
+	 */
+	function render(){
+		return "<input type='".$this->getType()."' class='formButton' name='".$this->getName()."'  id='".$this->getName()."' value='".$this->getValue()."'".$this->getExtra()." />";
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formbutton.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formcheckbox.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formcheckbox.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formcheckbox.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,163 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * One or more Checkbox(es)
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormCheckBox extends XoopsFormElement {
+
+	/**
+     * Availlable options
+	 * @var array   
+	 * @access	private
+	 */
+	var $_options = array();
+
+	/**
+     * pre-selected values in array
+	 * @var	array   
+	 * @access	private
+	 */
+	var $_value = array();
+
+	/**
+	 * Constructor
+	 * 
+     * @param	string  $caption
+     * @param	string  $name
+     * @param	mixed   $value  Either one value as a string or an array of them.   
+	 */
+	function XoopsFormCheckBox($caption, $name, $value = null){
+		$this->setCaption($caption);
+		$this->setName($name);
+		if (isset($value)) {
+			$this->setValue($value);
+		}
+	}
+
+	/**
+	 * Get the "value"
+	 * 
+     * @return	array
+	 */
+	function getValue(){
+		return $this->_value;
+	}
+
+	/**
+	 * Set the "value"
+	 * 
+     * @param	array
+	 */
+	function setValue($value){
+		$this->_value = array();
+		if (is_array($value)) {
+			foreach ($value as $v) {
+				$this->_value[] = $v;
+			}
+		} else {
+			$this->_value[] = $value;
+		}
+	}
+
+	/**
+	 * Add an option
+	 * 
+     * @param	string  $value  
+     * @param	string  $name   
+	 */
+	function addOption($value, $name=""){
+		if ($name != "") {
+			$this->_options[$value] = $name;
+		} else {
+			$this->_options[$value] = $value;
+		}
+	}
+
+	/**
+	 * Add multiple Options at once
+	 * 
+     * @param	array   $options    Associative array of value->name pairs
+	 */
+	function addOptionArray($options){
+		if ( is_array($options) ) {
+			foreach ( $options as $k=>$v ) {
+				$this->addOption($k, $v);
+			}
+		}
+	}
+
+	/**
+	 * Get an array with all the options
+	 * 
+     * @return	array   Associative array of value->name pairs
+	 */
+	function getOptions(){
+		return $this->_options;
+	}
+
+	/**
+	 * prepare HTML for output
+	 * 
+     * @return	string
+	 */
+	function render(){
+		$ret = "";
+		if ( count($this->getOptions()) > 1 && substr($this->getName(), -2, 2) != "[]" ) {
+			$newname = $this->getName()."[]";
+			$this->setName($newname);
+		}
+		foreach ( $this->getOptions() as $value => $name ) {
+			$ret .= "<input type='checkbox' name='".$this->getName()."' value='".$value."'";
+			if (count($this->getValue()) > 0 && in_array($value, $this->getValue())) {
+				$ret .= " checked='checked'";
+			}
+			$ret .= $this->getExtra()." />".$name."\n";
+		}
+		return $ret;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formcheckbox.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formdatetime.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formdatetime.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formdatetime.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,76 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+ 
+/**
+ * Date and time selection field
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ * @subpackage  form
+ */
+class XoopsFormDateTime extends XoopsFormElementTray
+{
+
+	function XoopsFormDateTime($caption, $name, $size = 15, $value=0)
+	{
+		$this->XoopsFormElementTray($caption, '&nbsp;');
+		$value = intval($value);
+		$value = ($value > 0) ? $value : time();
+		$datetime = getDate($value);
+		$this->addElement(new XoopsFormTextDateSelect('', $name.'[date]', $size, $value));
+		$timearray = array();
+		for ($i = 0; $i < 24; $i++) {
+			for ($j = 0; $j < 60; $j = $j + 10) {
+				$key = ($i * 3600) + ($j * 60);
+				$timearray[$key] = ($j != 0) ? $i.':'.$j : $i.':0'.$j;
+			}
+		}
+		ksort($timearray);
+		$timeselect = new XoopsFormSelect('', $name.'[time]', $datetime['hours'] * 3600 + 600 * ceil($datetime['minutes'] / 10));
+		$timeselect->addOptionArray($timearray);
+		$this->addElement($timeselect);
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formdatetime.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formdhtmltextarea.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formdhtmltextarea.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formdhtmltextarea.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,153 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ *
+ *
+ * @package     kernel
+ * @subpackage  form
+ *
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * base class
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formtextarea.php";
+
+// Make sure you have included /include/xoopscodes.php, otherwise DHTML will not work properly!
+
+/**
+ * A textarea with xoopsish formatting and smilie buttons
+ *
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ *
+ * @package     kernel
+ * @subpackage  form
+ */
+class XoopsFormDhtmlTextArea extends XoopsFormTextArea
+{
+	/**
+     * Hidden text
+	 * @var	string
+	 * @access	private
+	 */
+	var $_hiddenText;
+
+	/**
+	 * Constructor
+	 *
+     * @param	string  $caption    Caption
+     * @param	string  $name       "name" attribute
+     * @param	string  $value      Initial text
+     * @param	int     $rows       Number of rows
+     * @param	int     $cols       Number of columns
+     * @param	string  $hiddentext Hidden Text
+	 */
+	function XoopsFormDhtmlTextArea($caption, $name, $value, $rows=5, $cols=50, $hiddentext="xoopsHiddenText")
+	{
+		$this->XoopsFormTextArea($caption, $name, $value, $rows, $cols);
+		$this->_hiddenText = $hiddentext;
+	}
+
+	/**
+	 * Prepare HTML for output
+	 *
+     * @return	string  HTML
+	 */
+	function render()
+	{
+		$ret = "<a name='moresmiley'></a><img onmouseover='style.cursor=\"hand\"' src='".XOOPS_URL."/images/url.gif' alt='url' onclick='xoopsCodeUrl(\"".$this->getName()."\", \"".htmlspecialchars(_ENTERURL, ENT_QUOTES)."\", \"".htmlspecialchars(_ENTERWEBTITLE, ENT_QUOTES)."\");' />&nbsp;<img onmouseover='style.cursor=\"hand\"' src='".XOOPS_URL."/images/email.gif' alt='email' onclick='javascript:xoopsCodeEmail(\"".$this->getName()."\", \"".htmlspecialchars(_ENTEREMAIL, ENT_QUOTES)."\");' />&nbsp;<img onclick='javascript:xoopsCodeImg(\"".$this->getName()."\", \"".htmlspecialchars(_ENTERIMGURL, ENT_QUOTES)."\", \"".htmlspecialchars(_ENTERIMGPOS, ENT_QUOTES)."\", \"".htmlspecialchars(_IMGPOSRORL, ENT_QUOTES)."\", \"".htmlspecialchars(_ERRORIMGPOS, ENT_QUOTES)."\");' onmouseover='style.cursor=\"hand\"' src='".XOOPS_URL."/images/imgsrc.gif' alt='imgsrc' />&nbsp;<img onmouseover='style.cursor=\"hand\"' onclick='javascript:openWithSelfMain(\"".XOOPS_URL."/imagemanager.php?target=".$this-!
 >getName()."\",\"imgmanager\",400,430);' src='".XOOPS_URL."/images/image.gif' alt='image' />&nbsp;<img src='".XOOPS_URL."/images/code.gif' onmouseover='style.cursor=\"hand\"' alt='code' onclick='javascript:xoopsCodeCode(\"".$this->getName()."\", \"".htmlspecialchars(_ENTERCODE, ENT_QUOTES)."\");' />&nbsp;<img onclick='javascript:xoopsCodeQuote(\"".$this->getName()."\", \"".htmlspecialchars(_ENTERQUOTE, ENT_QUOTES)."\");' onmouseover='style.cursor=\"hand\"' src='".XOOPS_URL."/images/quote.gif' alt='quote' /><br />\n";
+
+		$sizearray = array("xx-small", "x-small", "small", "medium", "large", "x-large", "xx-large");
+		$ret .= "<select id='".$this->getName()."Size' onchange='setVisible(\"".$this->_hiddenText."\");setElementSize(\"".$this->_hiddenText."\",this.options[this.selectedIndex].value);'>\n";
+		$ret .= "<option value='SIZE'>"._SIZE."</option>\n";
+		foreach ( $sizearray as $size ) {
+			$ret .=  "<option value='$size'>$size</option>\n";
+		}
+		$ret .= "</select>\n";
+		$fontarray = array("Arial", "Courier", "Georgia", "Helvetica", "Impact", "Verdana");
+		$ret .= "<select id='".$this->getName()."Font' onchange='setVisible(\"".$this->_hiddenText."\");setElementFont(\"".$this->_hiddenText."\",this.options[this.selectedIndex].value);'>\n";
+		$ret .= "<option value='FONT'>"._FONT."</option>\n";
+		foreach ( $fontarray as $font ) {
+			$ret .= "<option value='$font'>$font</option>\n";
+		}
+		$ret .= "</select>\n";
+		$colorarray = array("00", "33", "66", "99", "CC", "FF");
+		$ret .= "<select id='".$this->getName()."Color' onchange='setVisible(\"".$this->_hiddenText."\");setElementColor(\"".$this->_hiddenText."\",this.options[this.selectedIndex].value);'>\n";
+		$ret .= "<option value='COLOR'>"._COLOR."</option>\n";
+		foreach ( $colorarray as $color1 ) {
+			foreach ( $colorarray as $color2 ) {
+				foreach ( $colorarray as $color3 ) {
+					$ret .= "<option value='".$color1.$color2.$color3."' style='background-color:#".$color1.$color2.$color3.";color:#".$color1.$color2.$color3.";'>#".$color1.$color2.$color3."</option>\n";
+				}
+			}
+		}
+		$ret .= "</select><span id='".$this->_hiddenText."'>"._EXAMPLE."</span>\n";
+		$ret .= "<br />\n";
+		$ret .= "<img onclick='javascript:setVisible(\"".$this->_hiddenText."\");makeBold(\"".$this->_hiddenText."\");' onmouseover='style.cursor=\"hand\"' src='".XOOPS_URL."/images/bold.gif' alt='bold' />&nbsp;<img onclick='javascript:setVisible(\"".$this->_hiddenText."\");makeItalic(\"".$this->_hiddenText."\");' onmouseover='style.cursor=\"hand\"' src='".XOOPS_URL."/images/italic.gif' alt='italic' />&nbsp;<img onclick='javascript:setVisible(\"".$this->_hiddenText."\");makeUnderline(\"".$this->_hiddenText."\");' onmouseover='style.cursor=\"hand\"' src='".XOOPS_URL."/images/underline.gif' alt='underline' />&nbsp;<img onclick='javascript:setVisible(\"".$this->_hiddenText."\");makeLineThrough(\"".$this->_hiddenText."\");' src='".XOOPS_URL."/images/linethrough.gif' alt='linethrough' onmouseover='style.cursor=\"hand\"' />&nbsp;&nbsp;<input type='text' id='".$this->getName()."Addtext' size='20' />&nbsp;<input type='button' onclick='xoopsCodeText(\"".$this->getName()."\", \"".$this->_h!
 iddenText."\", \"".htmlspecialchars(_ENTERTEXTBOX, ENT_QUOTES)."\")' class='formButton' value='"._ADD."' /><br /><br /><textarea id='".$this->getName()."' name='".$this->getName()."' onselect=\"xoopsSavePosition('".$this->getName()."');\" onclick=\"xoopsSavePosition('".$this->getName()."');\" onkeyup=\"xoopsSavePosition('".$this->getName()."');\" cols='".$this->getCols()."' rows='".$this->getRows()."'".$this->getExtra().">".$this->getValue()."</textarea><br />\n";
+		$ret .= $this->_renderSmileys();
+		return $ret;
+	}
+
+	/**
+	 * prepare HTML for output of the smiley list.
+     *
+	 * @return	string HTML
+	 */
+	function _renderSmileys()
+	{
+		$myts =& MyTextSanitizer::getInstance();
+		$smiles =& $myts->getSmileys();
+		$ret = '';
+		if (empty($smileys)) {
+			$db =& Database::getInstance();
+			if ($result = $db->query('SELECT * FROM '.$db->prefix('smiles').' WHERE display=1')) {
+				while ($smiles = $db->fetchArray($result)) {
+					$ret .= "<img onclick='xoopsCodeSmilie(\"".$this->getName()."\", \" ".$smiles['code']." \");' onmouseover='style.cursor=\"hand\"' src='".XOOPS_UPLOAD_URL."/".htmlspecialchars($smiles['smile_url'], ENT_QUOTES)."' alt='' />";
+				}
+			}
+		} else {
+			$count = count($smiles);
+			for ($i = 0; $i < $count; $i++) {
+				if ($smiles[$i]['display'] == 1) {
+					$ret .= "<img onclick='xoopsCodeSmilie(\"".$this->getName()."\", \" ".$smiles[$i]['code']." \");' onmouseover='style.cursor=\"hand\"' src='".XOOPS_UPLOAD_URL."/".$myts->oopsHtmlSpecialChars($smiles['smile_url'])."' border='0' alt='' />";
+				}
+			}
+		}
+		$ret .= "&nbsp;[<a href='#moresmiley' onclick='javascript:openWithSelfMain(\"".XOOPS_URL."/misc.php?action=showpopups&amp;type=smilies&amp;target=".$this->getName()."\",\"smilies\",300,475);'>"._MORE."</a>]";
+		return $ret;
+	}
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formdhtmltextarea.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formelement.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formelement.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formelement.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,293 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+
+/**
+ * Abstract base class for form elements
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ * @subpackage  form
+ */
+class XoopsFormElement {
+
+	/**#@+
+	 * @access private
+	 */
+	/**
+     * "name" attribute of the element
+	 * @var string  
+	 */
+	var $_name;
+
+	/**
+	 * caption of the element
+	 * @var	string
+	 */
+	var $_caption;
+
+	/**
+	 * Accesskey for this element
+	 * @var	string
+	 */
+	var $_accesskey = '';
+
+	/**
+	 * HTML class for this element
+	 * @var	string
+	 */
+	var $_class = '';
+
+	/**
+	 * hidden?
+	 * @var	bool
+	 */
+	var $_hidden = false;
+
+	/**
+	 * extra attributes to go in the tag
+	 * @var	string
+	 */
+	var $_extra = "";
+
+	/**
+	 * required field?
+	 * @var	bool
+	 */
+	var $_required = false;
+
+	/**
+	 * description of the field
+	 * @var	string
+	 */
+	var $_description = "";
+	/**#@-*/
+
+
+	/**
+	 * constructor
+	 *
+	 */
+	function XoopsFormElement(){
+		exit("This class cannot be instantiated!");
+	}
+
+	/**
+	 * Is this element a container of other elements?
+	 *
+	 * @return	bool false
+	 */
+	function isContainer()
+	{
+		return false;
+	}
+
+	/**
+	 * set the "name" attribute for the element
+	 *
+	 * @param	string  $name   "name" attribute for the element
+	 */
+	function setName($name) {
+		$this->_name = trim($name);
+	}
+
+	/**
+	 * get the "name" attribute for the element
+	 *
+	 * @param	bool    encode?
+	 * @return	string  "name" attribute
+	 */
+	function getName($encode=true) {
+		if (false != $encode) {
+			return str_replace("&amp;", "&", str_replace("'","&#039;",htmlspecialchars($this->_name)));
+		}
+		return $this->_name;
+	}
+
+	/**
+	 * set the "accesskey" attribute for the element
+	 *
+	 * @param	string  $key   "accesskey" attribute for the element
+	 */
+	function setAccessKey($key) {
+		$this->_accesskey = trim($key);
+	}
+	/**
+	 * get the "accesskey" attribute for the element
+	 *
+	 * @return 	string  "accesskey" attribute value
+	 */
+	function getAccessKey() {
+		return $this->_accesskey;
+	}
+	/**
+	 * If the accesskey is found in the specified string, underlines it
+	 *
+	 * @param	string  $str   String where to search the accesskey occurence
+	 * @return 	string  Enhanced string with the 1st occurence of accesskey underlined
+	 */
+	function getAccessString( $str ) {
+		$access = $this->getAccessKey();
+		if ( !empty($access) && ( false !== ($pos = strpos($str, $access)) ) ) {
+			return substr($str, 0, $pos) . '<span style="text-decoration:underline">' . substr($str, $pos, 1) . '</span>' . substr($str, $pos+1);
+		}
+		return $str;
+	}
+
+	/**
+	 * set the "class" attribute for the element
+	 *
+	 * @param	string  $key   "class" attribute for the element
+	 */
+	function setClass($class) {
+		$class = trim($class);
+		if ( empty($class) ) {
+			$this->_class = '';
+		} else {
+			$this->_class .= (empty($this->_class) ? '' : ' ') . $class;
+		}
+	}
+	/**
+	 * get the "class" attribute for the element
+	 *
+	 * @return 	string  "class" attribute value
+	 */
+	function getClass() {
+		return $this->_class;
+	}
+
+	/**
+	 * set the caption for the element
+	 *
+	 * @param	string  $caption
+	 */
+	function setCaption($caption) {
+		$this->_caption = trim($caption);
+	}
+
+	/**
+	 * get the caption for the element
+	 *
+	 * @return	string
+	 */
+	function getCaption() {
+		return $this->_caption;
+	}
+
+	/**
+	 * set the element's description
+	 *
+	 * @param	string  $description
+	 */
+	function setDescription($description) {
+		$this->_description = trim($description);
+	}
+
+	/**
+	 * get the element's description
+	 *
+	 * @return	string
+	 */
+	function getDescription() {
+		return $this->_description;
+	}
+
+	/**
+	 * flag the element as "hidden"
+	 *
+	 */
+	function setHidden() {
+		$this->_hidden = true;
+	}
+
+	/**
+	 * Find out if an element is "hidden".
+	 *
+	 * @return	bool
+	 */
+	function isHidden() {
+		return $this->_hidden;
+	}
+
+	/**
+	 * Add extra attributes to the element.
+	 *
+	 * This string will be inserted verbatim and unvalidated in the
+	 * element's tag. Know what you are doing!
+	 *
+	 * @param	string  $extra
+	 * @param   string  $replace If true, passed string will replace current content otherwise it will be appended to it
+	 * @return	string New content of the extra string
+	 */
+	function setExtra($extra, $replace = false){
+		if ( $replace) {
+			$this->_extra = trim($extra);
+		} else {
+			$this->_extra .= " " . trim($extra);
+		}
+		return $this->_extra;
+	}
+
+	/**
+	 * Get the extra attributes for the element
+	 *
+	 * @return	string
+	 */
+	function getExtra(){
+		if (isset($this->_extra)) {
+			return $this->_extra;
+		}
+	}
+
+	/**
+	 * Generates output for the element.
+	 *
+	 * This method is abstract and must be overwritten by the child classes.
+	 * @abstract
+	 */
+	function render(){
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formelement.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formelementtray.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formelementtray.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formelementtray.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,187 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+ 
+/**
+ * A group of form elements
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ * @subpackage  form
+ */
+class XoopsFormElementTray extends XoopsFormElement {
+
+	/**
+     * array of form element objects
+	 * @var array   
+     * @access  private
+	 */
+	var $_elements = array();
+
+	/**
+     * required elements
+	 * @var array   
+	 */
+	var $_required = array();
+
+	/**
+     * HTML to seperate the elements
+	 * @var	string  
+	 * @access  private
+	 */
+	var $_delimeter;
+
+	/**
+	 * constructor
+	 * 
+     * @param	string  $caption    Caption for the group.
+     * @param	string  $delimiter  HTML to separate the elements
+	 */
+	function XoopsFormElementTray($caption, $delimeter="&nbsp;", $name=""){
+	    $this->setName($name);
+		$this->setCaption($caption);
+		$this->_delimeter = $delimeter;
+	}
+
+	/**
+	 * Is this element a container of other elements?
+	 * 
+     * @return	bool true
+	 */	
+	function isContainer()
+	{
+		return true;
+	}
+
+	/**
+	 * Add an element to the group
+	 * 
+     * @param	object  &$element    {@link XoopsFormElement} to add
+	 */
+	function addElement(&$formElement, $required=false){
+		$this->_elements[] =& $formElement;
+		if ($required) {
+			if (!$formElement->isContainer()) {
+				$this->_required[] =& $formElement;
+			} else {
+				$required_elements =& $formElement->getElements(true);
+				$count = count($required_elements);
+				for ($i = 0 ; $i < $count; $i++) {
+					$this->_required[] =& $required_elements[$i];
+				}
+			}
+		}
+	}
+
+	/**
+	 * get an array of "required" form elements
+	 * 
+     * @return	array   array of {@link XoopsFormElement}s 
+	 */
+	function &getRequired()
+	{
+		return $this->_required;
+	}
+
+	/**
+	 * Get an array of the elements in this group
+	 * 
+	 * @param	bool	$recurse	get elements recursively?
+     * @return  array   Array of {@link XoopsFormElement} objects. 
+	 */
+	function &getElements($recurse = false){
+		if (!$recurse) {
+			return $this->_elements;
+		} else {
+			$ret = array();
+			$count = count($this->_elements);
+			for ($i = 0; $i < $count; $i++) {
+				if (!$this->_elements[$i]->isContainer()) {
+					$ret[] =& $this->_elements[$i];
+				} else {
+					$elements =& $this->_elements[$i]->getElements(true);
+					$count2 = count($elements);
+					for ($j = 0; $j < $count2; $j++) {
+						$ret[] =& $elements[$j];
+					}
+					unset($elements);
+				}
+			}
+			return $ret;
+		}
+	}
+
+	/**
+	 * Get the delimiter of this group
+	 * 
+     * @return	string  The delimiter
+	 */
+	function getDelimeter(){
+		return $this->_delimeter;
+	}
+
+	/**
+	 * prepare HTML to output this group
+	 * 
+     * @return	string  HTML output
+	 */
+	function render(){
+		$count = 0;
+		$ret = "";
+		foreach ( $this->getElements() as $ele ) {
+			if ($count > 0) {
+				$ret .= $this->getDelimeter();
+			}
+			if ($ele->getCaption() != '') {
+				$ret .= $ele->getCaption()."&nbsp;";
+			}
+			$ret .= $ele->render()."\n";
+			if (!$ele->isHidden()) {
+				$count++;
+			}
+		}
+		return $ret;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formelementtray.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formfile.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formfile.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formfile.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,92 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * A file upload field
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package		kernel
+ * @subpackage	form
+ */
+class XoopsFormFile extends XoopsFormElement {
+
+	/**
+     * Maximum size for an uploaded file
+	 * @var	int	
+	 * @access	private
+	 */
+	var $_maxFileSize;
+
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption		Caption
+	 * @param	string	$name			"name" attribute
+	 * @param	int		$maxfilesize	Maximum size for an uploaded file
+	 */
+	function XoopsFormFile($caption, $name, $maxfilesize){
+		$this->setCaption($caption);
+		$this->setName($name);
+		$this->_maxFileSize = intval($maxfilesize);
+	}
+
+	/**
+	 * Get the maximum filesize
+	 * 
+	 * @return	int
+	 */
+	function getMaxFileSize(){
+		return $this->_maxFileSize;
+	}
+
+	/**
+	 * prepare HTML for output
+	 * 
+	 * @return	string	HTML
+	 */
+	function render(){
+		return "<input type='hidden' name='MAX_FILE_SIZE' value='".$this->getMaxFileSize()."' /><input type='file' name='".$this->getName()."' id='".$this->getName()."'".$this->getExtra()." /><input type='hidden' name='xoops_upload_file[]' id='xoops_upload_file[]' value='".$this->getName()."' />";
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formfile.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formhidden.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formhidden.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formhidden.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,99 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * A hidden field
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormHidden extends XoopsFormElement {
+
+	/**
+     * Value
+	 * @var	string	
+	 * @access	private
+	 */
+	var $_value;
+
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$name	"name" attribute
+	 * @param	string	$value	"value" attribute
+	 */
+	function XoopsFormHidden($name, $value){
+		$this->setName($name);
+		$this->setHidden();
+		$this->setValue($value);
+		$this->setCaption("");
+	}
+
+	/**
+	 * Get the "value" attribute
+	 * 
+	 * @return	string
+	 */
+	function getValue(){
+		return $this->_value;
+	}
+
+	/**
+	 * Sets the "value" attribute
+	 * 
+	 * @patam  $value	string
+	 */
+	function setValue($value){
+		$this->_value = $value;
+	}
+
+	/**
+	 * Prepare HTML for output
+	 * 
+	 * @return	string	HTML
+	 */
+	function render(){
+		return "<input type='hidden' name='".$this->getName()."' id='".$this->getName()."' value='".$this->getValue()."' />";
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formhidden.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formhiddentoken.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formhiddentoken.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formhiddentoken.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,55 @@
+<?php
+// $Id$ //  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA // //  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ *
+ * @author      Kazumi Ono  <onokazu at xoops.org>
+ * @copyright   copyright (c) 2000-2005 XOOPS.org
+ */
+/**
+ * A hidden token field
+ *
+ *
+ * @author      Kazumi Ono  <onokazu at xoops.org>
+ * @copyright   copyright (c) 2000-2005 XOOPS.org
+ */
+class XoopsFormHiddenToken extends XoopsFormHidden {
+
+    /**
+     * Constructor
+     *
+     * @param   string  $name   "name" attribute
+     */
+    function XoopsFormHiddenToken($name = 'XOOPS_TOKEN_REQUEST', $timeout = 0){
+        $this->XoopsFormHidden($name, $GLOBALS['xoopsSecurity']->createToken($timeout));
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formhiddentoken.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formlabel.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formlabel.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formlabel.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,88 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * A text label
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormLabel extends XoopsFormElement {
+
+	/**
+     * Text
+	 * @var	string	
+	 * @access	private
+	 */
+	var $_value;
+
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption	Caption
+	 * @param	string	$value		Text
+	 */
+	function XoopsFormLabel($caption="", $value=""){
+		$this->setCaption($caption);
+		$this->_value = $value;
+	}
+
+	/**
+	 * Get the text
+	 * 
+	 * @return	string
+	 */
+	function getValue(){
+		return $this->_value;
+	}
+
+	/**
+	 * Prepare HTML for output
+	 * 
+	 * @return	string
+	 */
+	function render(){
+		return $this->getValue();
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formlabel.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formpassword.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formpassword.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formpassword.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,138 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * A password field
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ * @subpackage  form
+ */
+class XoopsFormPassword extends XoopsFormElement {
+
+	/**
+     * Size of the field.
+	 * @var	int	
+	 * @access	private
+	 */
+	var $_size;
+
+	/**
+     * Maximum length of the text
+	 * @var	int	
+	 * @access	private
+	 */
+	var $_maxlength;
+
+	/**
+     * Initial content of the field.
+	 * @var	string	
+	 * @access	private
+	 */
+	var $_value;
+
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption	Caption
+	 * @param	string	$name		"name" attribute
+	 * @param	int		$size		Size of the field
+	 * @param	int		$maxlength	Maximum length of the text
+	 * @param	int		$value		Initial value of the field. 
+	 * 								<b>Warning:</b> this is readable in cleartext in the page's source!
+	 */
+	function XoopsFormPassword($caption, $name, $size, $maxlength, $value=""){
+		$this->setCaption($caption);
+		$this->setName($name);
+		$this->_size = intval($size);
+		$this->_maxlength = intval($maxlength);
+		$this->setValue($value);
+	}
+
+	/**
+	 * Get the field size
+	 * 
+	 * @return	int
+	 */
+	function getSize(){
+		return $this->_size;
+	}
+
+	/**
+	 * Get the max length
+	 * 
+	 * @return	int
+	 */
+	function getMaxlength(){
+		return $this->_maxlength;
+	}
+
+	/**
+	 * Get the initial value
+	 * 
+	 * @return	string
+	 */
+	function getValue(){
+		return $this->_value;
+	}
+
+	/**
+	 * Set the initial value
+	 * 
+	 * @patam	$value	string
+	 */
+	function setValue($value){
+		$this->_value = $value;
+	}
+
+	/**
+	 * Prepare HTML for output
+	 * 
+	 * @return	string	HTML
+	 */
+	function render(){
+		return "<input type='password' name='".$this->getName()."' id='".$this->getName()."' size='".$this->getSize()."' maxlength='".$this->getMaxlength()."' value='".$this->getValue()."'".$this->getExtra()." />";
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formpassword.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formradio.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formradio.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formradio.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,155 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * A Group of radiobuttons
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package		kernel
+ * @subpackage	form
+ */
+class XoopsFormRadio extends XoopsFormElement {
+
+	/**
+     * Array of Options
+	 * @var	array	
+	 * @access	private
+	 */
+	var $_options = array();
+
+	/**
+     * Pre-selected value
+	 * @var	string	
+	 * @access	private
+	 */
+	var $_value;
+
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption	Caption
+	 * @param	string	$name		"name" attribute
+	 * @param	string	$value		Pre-selected value
+	 */
+	function XoopsFormRadio($caption, $name, $value = null){
+		$this->setCaption($caption);
+		$this->setName($name);
+		if (isset($value)) {
+			$this->setValue($value);
+		}
+	}
+
+	/**
+	 * Get the pre-selected value
+	 * 
+	 * @return	string
+	 */
+	function getValue(){
+		return $this->_value;
+	}
+
+	/**
+	 * Set the pre-selected value
+	 * 
+	 * @param	$value	string
+	 */
+	function setValue($value){
+		$this->_value = $value;
+	}
+
+	/**
+	 * Add an option
+	 * 
+	 * @param	string	$value	"value" attribute - This gets submitted as form-data.
+	 * @param	string	$name	"name" attribute - This is displayed. If empty, we use the "value" instead.
+	 */
+	function addOption($value, $name=""){
+		if ( $name != "" ) {
+			$this->_options[$value] = $name;
+		} else {
+			$this->_options[$value] = $value;
+		}
+	}
+
+	/**
+	 * Adds multiple options
+	 * 
+	 * @param	array	$options	Associative array of value->name pairs.
+	 */
+	function addOptionArray($options){
+		if ( is_array($options) ) {
+			foreach ( $options as $k=>$v ) {
+				$this->addOption($k, $v);
+			}
+		}
+	}
+
+	/**
+	 * Gets the options
+	 * 
+	 * @return	array	Associative array of value->name pairs.
+	 */
+	function getOptions(){
+		return $this->_options;
+	}
+
+	/**
+	 * Prepare HTML for output
+	 * 
+	 * @return	string	HTML
+	 */
+	function render(){
+		$ret = "";
+		foreach ( $this->getOptions() as $value => $name ) {
+			$ret .= "<input type='radio' name='".$this->getName()."' value='".$value."'";
+			$selected = $this->getValue();
+			if ( isset($selected) && ($value == $selected) ) {
+				$ret .= " checked='checked'";
+			}
+			$ret .= $this->getExtra()." />".$name."\n";
+		}
+		return $ret;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formradio.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formradioyn.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formradioyn.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formradioyn.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,76 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+ 
+/**
+ * base class
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formradio.php";
+
+/**
+ * Yes/No radio buttons.
+ * 
+ * A pair of radio buttons labelled _YES and _NO with values 1 and 0
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormRadioYN extends XoopsFormRadio
+{
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption
+	 * @param	string	$name
+	 * @param	string	$value		Pre-selected value, can be "0" (No) or "1" (Yes)
+	 * @param	string	$yes		String for "Yes"
+	 * @param	string	$no			String for "No"
+	 */
+	function XoopsFormRadioYN($caption, $name, $value=null, $yes=_YES, $no=_NO)
+	{
+		$this->XoopsFormRadio($caption, $name, $value);
+		$this->addOption(1, $yes);
+		$this->addOption(0, $no);
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formradioyn.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formselect.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formselect.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formselect.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,201 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * A select field
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormSelect extends XoopsFormElement {
+
+	/**
+     * Options
+	 * @var array   
+	 * @access	private
+	 */
+	var $_options = array();
+
+	/**
+     * Allow multiple selections?
+	 * @var	bool    
+	 * @access	private
+	 */
+	var $_multiple = false;
+
+	/**
+     * Number of rows. "1" makes a dropdown list.
+	 * @var	int 
+	 * @access	private
+	 */
+	var $_size;
+
+	/**
+     * Pre-selcted values
+	 * @var	array   
+	 * @access	private
+	 */
+	var $_value = array();
+
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption	Caption
+	 * @param	string	$name       "name" attribute
+	 * @param	mixed	$value	    Pre-selected value (or array of them).
+	 * @param	int		$size	    Number or rows. "1" makes a drop-down-list
+     * @param	bool    $multiple   Allow multiple selections?
+	 */
+	function XoopsFormSelect($caption, $name, $value=null, $size=1, $multiple=false){
+		$this->setCaption($caption);
+		$this->setName($name);
+		$this->_multiple = $multiple;
+		$this->_size = intval($size);
+		if (isset($value)) {
+			$this->setValue($value);
+		}
+	}
+
+	/**
+	 * Are multiple selections allowed?
+	 * 
+     * @return	bool
+	 */
+	function isMultiple(){
+		return $this->_multiple;
+	}
+
+	/**
+	 * Get the size
+	 * 
+     * @return	int
+	 */
+	function getSize(){
+		return $this->_size;
+	}
+
+	/**
+	 * Get an array of pre-selected values
+	 * 
+     * @return	array
+	 */
+	function getValue(){
+		return $this->_value;
+	}
+
+	/**
+	 * Set pre-selected values
+	 * 
+     * @param	$value	mixed
+	 */
+	function setValue($value){
+		if (is_array($value)) {
+			foreach ($value as $v) {
+				$this->_value[] = $v;
+			}
+		} else {
+			$this->_value[] = $value;
+		}
+	}
+
+	/**
+	 * Add an option
+     * 
+	 * @param	string  $value  "value" attribute
+     * @param	string  $name   "name" attribute
+	 */
+	function addOption($value, $name=""){
+		if ( $name != "" ) {
+			$this->_options[$value] = $name;
+		} else {
+			$this->_options[$value] = $value;
+		}
+	}
+
+	/**
+	 * Add multiple options
+	 * 
+     * @param	array   $options    Associative array of value->name pairs
+	 */
+	function addOptionArray($options){
+		if ( is_array($options) ) {
+			foreach ( $options as $k=>$v ) {
+				$this->addOption($k, $v);
+			}
+		}
+	}
+
+	/**
+	 * Get all options
+	 * 
+     * @return	array   Associative array of value->name pairs
+	 */
+	function getOptions(){
+		return $this->_options;
+	}
+
+	/**
+	 * Prepare HTML for output
+	 * 
+     * @return	string  HTML
+	 */
+	function render(){
+		$ret = "<select  size='".$this->getSize()."'".$this->getExtra()."";
+		if ($this->isMultiple() != false) {
+			$ret .= " name='".$this->getName()."[]' id='".$this->getName()."[]' multiple='multiple'>\n";
+		} else {
+			$ret .= " name='".$this->getName()."' id='".$this->getName()."'>\n";
+		}
+		foreach ( $this->getOptions() as $value => $name ) {
+			$ret .= "<option value='".htmlspecialchars($value, ENT_QUOTES)."'";
+			if (count($this->getValue()) > 0 && in_array($value, $this->getValue())) {
+					$ret .= " selected='selected'";
+			}
+			$ret .= ">".$name."</option>\n";
+		}
+		$ret .= "</select>";
+		return $ret;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formselect.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formselectcountry.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formselectcountry.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formselectcountry.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,78 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * lists of values
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopslists.php";
+
+/**
+ * Parent
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselect.php";
+
+/**
+ * A select field with countries
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormSelectCountry extends XoopsFormSelect
+{
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption	Caption
+	 * @param	string	$name       "name" attribute
+	 * @param	mixed	$value	    Pre-selected value (or array of them).
+     *                              Legal are all 2-letter country codes (in capitals).
+	 * @param	int		$size	    Number or rows. "1" makes a drop-down-list
+	 */
+	function XoopsFormSelectCountry($caption, $name, $value=null, $size=1)
+	{
+		$this->XoopsFormSelect($caption, $name, $value, $size);
+		$this->addOptionArray(XoopsLists::getCountryList());
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formselectcountry.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formselectgroup.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formselectgroup.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formselectgroup.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,79 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * Parent
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselect.php";
+
+/**
+ * A select field with a choice of available groups
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormSelectGroup extends XoopsFormSelect
+{
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption	
+	 * @param	string	$name
+	 * @param	bool	$include_anon	Include group "anonymous"?
+	 * @param	mixed	$value	    	Pre-selected value (or array of them).
+	 * @param	int		$size	        Number or rows. "1" makes a drop-down-list.
+     * @param	bool    $multiple       Allow multiple selections?
+	 */
+	function XoopsFormSelectGroup($caption, $name, $include_anon=false, $value=null, $size=1, $multiple=false)
+	{
+	    $this->XoopsFormSelect($caption, $name, $value, $size, $multiple);
+		$member_handler =& xoops_gethandler('member');
+		if (!$include_anon) {
+			$this->addOptionArray($member_handler->getGroupList(new Criteria('groupid', XOOPS_GROUP_ANONYMOUS, '!=')));
+		} else {
+			$this->addOptionArray($member_handler->getGroupList());
+		}
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formselectgroup.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formselectlang.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formselectlang.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formselectlang.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,76 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * lists of values
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopslists.php";
+/**
+ * parent class
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselect.php";
+
+/**
+ * A select field with available languages
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormSelectLang extends XoopsFormSelect
+{
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption
+	 * @param	string	$name
+	 * @param	mixed	$value	Pre-selected value (or array of them).
+	 * 							Legal is any name of a XOOPS_ROOT_PATH."/language/" subdirectory.
+	 * @param	int		$size	Number of rows. "1" makes a drop-down-list.
+	 */
+	function XoopsFormSelectLang($caption, $name, $value=null, $size=1)
+	{
+		$this->XoopsFormSelect($caption, $name, $value, $size);
+		$this->addOptionArray(XoopsLists::getLangList());
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formselectlang.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formselectmatchoption.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formselectmatchoption.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formselectmatchoption.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,76 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * base class
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselect.php";
+
+/**
+ * A selection box with options for matching search terms.
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormSelectMatchOption extends XoopsFormSelect
+{
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption
+	 * @param	string	$name
+	 * @param	mixed	$value	Pre-selected value (or array of them). 
+	 * 							Legal values are {@link XOOPS_MATCH_START}, {@link XOOPS_MATCH_END}, 
+	 * 							{@link XOOPS_MATCH_EQUAL}, and {@link XOOPS_MATCH_CONTAIN}
+	 * @param	int		$size	Number of rows. "1" makes a drop-down-list
+	 */
+	function XoopsFormSelectMatchOption($caption, $name, $value=null, $size=1)
+	{
+		$this->XoopsFormSelect($caption, $name, $value, $size, false);
+		$this->addOption(XOOPS_MATCH_START, _STARTSWITH);
+		$this->addOption(XOOPS_MATCH_END, _ENDSWITH);
+		$this->addOption(XOOPS_MATCH_EQUAL, _MATCHES);
+		$this->addOption(XOOPS_MATCH_CONTAIN, _CONTAINS);
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formselectmatchoption.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formselecttheme.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formselecttheme.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formselecttheme.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,75 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * lists of values
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopslists.php";
+/**
+ * base class
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselect.php";
+
+/**
+ * A select box with available themes
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormSelectTheme extends XoopsFormSelect
+{
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption	
+	 * @param	string	$name
+	 * @param	mixed	$value	Pre-selected value (or array of them).
+	 * @param	int		$size	Number or rows. "1" makes a drop-down-list
+	 */
+	function XoopsFormSelectTheme($caption, $name, $value=null, $size=1)
+	{
+		$this->XoopsFormSelect($caption, $name, $value, $size);
+		$this->addOptionArray(XoopsLists::getThemesList());
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formselecttheme.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formselecttimezone.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formselecttimezone.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formselecttimezone.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,77 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * lists of values
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopslists.php";
+/**
+ * base class
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselect.php";
+
+/**
+ * A select box with timezones
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormSelectTimezone extends XoopsFormSelect
+{
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption
+	 * @param	string	$name
+	 * @param	mixed	$value	Pre-selected value (or array of them). 
+	 * 							Legal values are "-12" to "12" with some ".5"s strewn in ;-)
+	 * @param	int		$size	Number of rows. "1" makes a drop-down-box.
+	 */
+	function XoopsFormSelectTimezone($caption, $name, $value=null, $size=1)
+	{
+		$this->XoopsFormSelect($caption, $name, $value, $size);
+		$this->addOptionArray(XoopsLists::getTimeZoneList());
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formselecttimezone.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formselectuser.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formselectuser.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formselectuser.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,81 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * Parent
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselect.php";
+
+// RMV-NOTIFY
+
+/**
+ * A select field with a choice of available users
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormSelectUser extends XoopsFormSelect
+{
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption	
+	 * @param	string	$name
+	 * @param	bool	$include_anon	Include user "anonymous"?
+	 * @param	mixed	$value	    	Pre-selected value (or array of them).
+	 * @param	int		$size	        Number or rows. "1" makes a drop-down-list.
+     * @param	bool    $multiple       Allow multiple selections?
+	 */
+	function XoopsFormSelectUser($caption, $name, $include_anon=false, $value=null, $size=1, $multiple=false)
+	{
+	    $this->XoopsFormSelect($caption, $name, $value, $size, $multiple);
+		$member_handler =& xoops_gethandler('member');
+		if ($include_anon) {
+			global $xoopsConfig;
+			$this->addOption(0, $xoopsConfig['anonymous']);
+		}
+		$this->addOptionArray($member_handler->getUserList());
+	}
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formselectuser.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formtext.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formtext.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formtext.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,136 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+ 
+/**
+ * A simple text field
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsFormText extends XoopsFormElement {
+
+	/**
+     * Size
+	 * @var	int 
+     * @access	private
+	 */
+	var $_size;
+
+	/**
+     * Maximum length of the text
+	 * @var	int 
+	 * @access	private
+	 */
+	var $_maxlength;
+
+	/**
+     * Initial text
+	 * @var	string  
+	 * @access	private
+	 */
+	var $_value;
+
+	/**
+	 * Constructor
+	 * 
+	 * @param	string	$caption	Caption
+	 * @param	string	$name       "name" attribute
+	 * @param	int		$size	    Size
+	 * @param	int		$maxlength	Maximum length of text
+     * @param	string  $value      Initial text
+	 */
+	function XoopsFormText($caption, $name, $size, $maxlength, $value=""){
+		$this->setCaption($caption);
+		$this->setName($name);
+		$this->_size = intval($size);
+		$this->_maxlength = intval($maxlength);
+		$this->setValue($value);
+	}
+
+	/**
+	 * Get size
+	 * 
+     * @return	int
+	 */
+	function getSize(){
+		return $this->_size;
+	}
+
+	/**
+	 * Get maximum text length
+	 * 
+     * @return	int
+	 */
+	function getMaxlength(){
+		return $this->_maxlength;
+	}
+
+	/**
+	 * Get initial text value
+	 * 
+     * @return  string
+	 */
+	function getValue(){
+		return $this->_value;
+	}
+
+	/**
+	 * Set initial text value
+	 * 
+     * @param	$value  string
+	 */
+	function setValue($value){
+		$this->_value = $value;
+	}
+
+	/**
+	 * Prepare HTML for output
+	 * 
+     * @return	string  HTML
+	 */
+	function render(){
+		return "<input type='text' name='".$this->getName()."' id='".$this->getName()."' size='".$this->getSize()."' maxlength='".$this->getMaxlength()."' value='".$this->getValue()."'".$this->getExtra()." />";
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formtext.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formtextarea.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formtextarea.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formtextarea.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,136 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * A textarea
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ * @subpackage  form
+ */
+class XoopsFormTextArea extends XoopsFormElement {
+	/**
+     * number of columns
+	 * @var	int 
+	 * @access  private
+	 */
+	var $_cols;
+
+	/**
+	 * number of rows
+     * @var	int 
+	 * @access  private
+	 */
+	var $_rows;
+
+	/**
+     * initial content
+	 * @var	string  
+	 * @access  private
+	 */
+	var $_value;
+
+	/**
+	 * Constuctor
+	 * 
+     * @param	string  $caption    caption
+     * @param	string  $name       name
+     * @param	string  $value      initial content
+     * @param	int     $rows       number of rows
+     * @param	int     $cols       number of columns   
+	 */
+	function XoopsFormTextArea($caption, $name, $value="", $rows=5, $cols=50){
+		$this->setCaption($caption);
+		$this->setName($name);
+		$this->_rows = intval($rows);
+		$this->_cols = intval($cols);
+		$this->setValue($value);
+	}
+
+	/**
+	 * get number of rows
+	 * 
+     * @return	int
+	 */
+	function getRows(){
+		return $this->_rows;
+	}
+
+	/**
+	 * Get number of columns
+	 * 
+     * @return	int
+	 */
+	function getCols(){
+		return $this->_cols;
+	}
+
+	/**
+	 * Get initial content
+	 * 
+     * @return	string
+	 */
+	function getValue(){
+		return $this->_value;
+	}
+
+	/**
+	 * Set initial content
+	 * 
+     * @param	$value	string
+	 */
+	function setValue($value){
+		$this->_value = $value;
+	}
+
+	/**
+	 * prepare HTML for output
+	 * 
+     * @return	sting HTML
+	 */
+	function render(){
+		return "<textarea name='".$this->getName()."' id='".$this->getName()."' rows='".$this->getRows()."' cols='".$this->getCols()."'".$this->getExtra().">".$this->getValue()."</textarea>";
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formtextarea.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/formtextdateselect.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/formtextdateselect.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/formtextdateselect.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,68 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * A text field with calendar popup
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+class XoopsFormTextDateSelect extends XoopsFormText
+{
+
+	function XoopsFormTextDateSelect($caption, $name, $size = 15, $value= 0)
+	{
+		$value = !is_numeric($value) ? time() : intval($value);
+		$this->XoopsFormText($caption, $name, $size, 25, $value);
+	}
+
+	function render()
+	{
+		$jstime = formatTimestamp('F j Y, H:i:s', $this->getValue());
+		include_once XOOPS_ROOT_PATH.'/include/calendarjs.php';
+		return "<input type='text' name='".$this->getName()."' id='".$this->getName()."' size='".$this->getSize()."' maxlength='".$this->getMaxlength()."' value='".date("Y-m-d", $this->getValue())."'".$this->getExtra()." /><input type='reset' value=' ... ' onclick='return showCalendar(\"".$this->getName()."\");'>";
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/formtextdateselect.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/grouppermform.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/grouppermform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/grouppermform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,322 @@
+<?php 
+// $Id$
+// ------------------------------------------------------------------------ //
+// XOOPS - PHP Content Management System                      //
+// Copyright (c) 2000-2003 XOOPS.org                           //
+// <http://www.xoops.org/>                             //
+// ------------------------------------------------------------------------ //
+// This program is free software; you can redistribute it and/or modify     //
+// it under the terms of the GNU General Public License as published by     //
+// the Free Software Foundation; either version 2 of the License, or        //
+// (at your option) any later version.                                      //
+// //
+// You may not change or alter any portion of this comment or credits       //
+// of supporting developers from this source code or any supporting         //
+// source code which is considered copyrighted (c) material of the          //
+// original comment or credit authors.                                      //
+// //
+// This program is distributed in the hope that it will be useful,          //
+// but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+// GNU General Public License for more details.                             //
+// //
+// You should have received a copy of the GNU General Public License        //
+// along with this program; if not, write to the Free Software              //
+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+// ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+require_once XOOPS_ROOT_PATH . '/class/xoopsform/formelement.php';
+require_once XOOPS_ROOT_PATH . '/class/xoopsform/formhidden.php';
+require_once XOOPS_ROOT_PATH . '/class/xoopsform/formbutton.php';
+require_once XOOPS_ROOT_PATH . '/class/xoopsform/formelementtray.php';
+require_once XOOPS_ROOT_PATH . '/class/xoopsform/form.php';
+
+/**
+ * Renders a form for setting module specific group permissions
+ * 
+ * @author Kazumi Ono <onokazu at myweb.ne.jp> 
+ * @copyright copyright (c) 2000-2003 XOOPS.org
+ * @package kernel
+ * @subpackage form
+ */
+class XoopsGroupPermForm extends XoopsForm
+{
+    /**
+     * Module ID
+     * 
+     * @var int 
+     */
+    var $_modid;
+    /**
+     * Tree structure of items
+     * 
+     * @var array 
+     */
+    var $_itemTree;
+    /**
+     * Name of permission
+     * 
+     * @var string 
+     */
+    var $_permName;
+    /**
+     * Description of permission
+     * 
+     * @var string 
+     */
+    var $_permDesc;
+
+    /**
+     * Constructor
+     */
+    function XoopsGroupPermForm($title, $modid, $permname, $permdesc, $url = "")
+    {
+        $this->XoopsForm($title, 'groupperm_form', XOOPS_URL . '/modules/system/admin/groupperm.php', 'post');
+        $this->_modid = intval($modid);
+        $this->_permName = $permname;
+        $this->_permDesc = $permdesc;
+        $this->addElement(new XoopsFormHidden('modid', $this->_modid));
+        if ($url != "") {
+            $this->addElement(new XoopsFormHidden('redirect_url', $url));
+        }
+    } 
+
+    /**
+     * Adds an item to which permission will be assigned
+     * 
+     * @param string $itemName 
+     * @param int $itemId 
+     * @param int $itemParent 
+     * @access public 
+     */
+    function addItem($itemId, $itemName, $itemParent = 0)
+    {
+        $this->_itemTree[$itemParent]['children'][] = $itemId;
+        $this->_itemTree[$itemId]['parent'] = $itemParent;
+        $this->_itemTree[$itemId]['name'] = $itemName;
+        $this->_itemTree[$itemId]['id'] = $itemId;
+    } 
+
+    /**
+     * Loads all child ids for an item to be used in javascript
+     * 
+     * @param int $itemId 
+     * @param array $childIds 
+     * @access private 
+     */
+    function _loadAllChildItemIds($itemId, &$childIds)
+    {
+        if (!empty($this->_itemTree[$itemId]['children'])) {
+            $first_child = $this->_itemTree[$itemId]['children'];
+            foreach ($first_child as $fcid) {
+                array_push($childIds, $fcid);
+                if (!empty($this->_itemTree[$fcid]['children'])) {
+                    foreach ($this->_itemTree[$fcid]['children'] as $_fcid) {
+                        array_push($childIds, $_fcid);
+                        $this->_loadAllChildItemIds($_fcid, $childIds);
+                    }
+                }
+            }
+        }
+    }
+
+    /**
+     * Renders the form
+     * 
+     * @return string
+     * @access public
+     */
+    function render()
+    { 
+        // load all child ids for javascript codes
+        foreach (array_keys($this->_itemTree)as $item_id) {
+            $this->_itemTree[$item_id]['allchild'] = array();
+            $this->_loadAllChildItemIds($item_id, $this->_itemTree[$item_id]['allchild']);
+        }
+        $gperm_handler =& xoops_gethandler('groupperm');
+        $member_handler =& xoops_gethandler('member');
+        $glist =& $member_handler->getGroupList();
+        foreach (array_keys($glist) as $i) {
+            // get selected item id(s) for each group
+            $selected = $gperm_handler->getItemIds($this->_permName, $i, $this->_modid);
+            $ele = new XoopsGroupFormCheckBox($glist[$i], 'perms[' . $this->_permName . ']', $i, $selected);
+            $ele->setOptionTree($this->_itemTree);
+            $this->addElement($ele);
+            unset($ele);
+        } 
+        $tray = new XoopsFormElementTray('');
+        $tray->addElement(new XoopsFormButton('', 'submit', _SUBMIT, 'submit'));
+        $tray->addElement(new XoopsFormButton('', 'reset', _CANCEL, 'reset'));
+        $this->addElement($tray);
+        $ret = '<h4>' . $this->getTitle() . '</h4>' . $this->_permDesc . '<br />';
+        $ret .= "<form name='" . $this->getName() . "' id='" . $this->getName() . "' action='" . $this->getAction() . "' method='" . $this->getMethod() . "'" . $this->getExtra() . ">\n<table width='100%' class='outer' cellspacing='1'>\n";
+        $elements =& $this->getElements();
+        foreach (array_keys($elements) as $i) {
+            if (!is_object($elements[$i])) {
+                $ret .= $elements[$i];
+            } elseif (!$elements[$i]->isHidden()) {
+                $ret .= "<tr valign='top' align='left'><td class='head'>" . $elements[$i]->getCaption();
+                if ($elements[$i]->getDescription() != '') {
+                    $ret .= '<br /><br /><span style="font-weight: normal;">' . $elements[$i]->getDescription() . '</span>';
+                }
+                $ret .= "</td>\n<td class='even'>\n" . $elements[$i]->render() . "\n</td></tr>\n";
+            } else {
+                $ret .= $elements[$i]->render();
+            }
+        }
+        $ret .= '</table></form>';
+        return $ret;
+    }
+}
+
+/**
+ * Renders checkbox options for a group permission form
+ * 
+ * @author Kazumi Ono <onokazu at myweb.ne.jp> 
+ * @copyright copyright (c) 2000-2003 XOOPS.org
+ * @package kernel
+ * @subpackage form
+ */
+class XoopsGroupFormCheckBox extends XoopsFormElement
+{
+    /**
+     * Pre-selected value(s)
+     * 
+     * @var array;
+     */
+    var $_value = array();
+    /**
+     * Group ID
+     * 
+     * @var int 
+     */
+    var $_groupId;
+    /**
+     * Option tree
+     * 
+     * @var array 
+     */
+    var $_optionTree;
+
+    /**
+     * Constructor
+     */
+    function XoopsGroupFormCheckBox($caption, $name, $groupId, $values = null)
+    {
+        $this->setCaption($caption);
+        $this->setName($name);
+        if (isset($values)) {
+            $this->setValue($values);
+        }
+        $this->_groupId = $groupId;
+    }
+
+    /**
+     * Sets pre-selected values
+     * 
+     * @param mixed $value A group ID or an array of group IDs
+     * @access public 
+     */
+    function setValue($value)
+    {
+        if (is_array($value)) {
+            foreach ($value as $v) {
+                $this->setValue($v);
+            }
+        } else {
+            $this->_value[] = $value;
+        }
+    }
+
+    /**
+     * Sets the tree structure of items
+     * 
+     * @param array $optionTree 
+     * @access public 
+     */
+    function setOptionTree(&$optionTree)
+    {
+        $this->_optionTree =& $optionTree;
+    }
+
+    /**
+     * Renders checkbox options for this group
+     * 
+     * @return string 
+     * @access public 
+     */
+    function render()
+    {
+		$ret = '<table class="outer"><tr><td class="odd"><table><tr>';
+		$cols = 1;
+		foreach ($this->_optionTree[0]['children'] as $topitem) {
+			if ($cols > 4) {
+				$ret .= '</tr><tr>';
+				$cols = 1;
+			}
+			$tree = '<td>';
+			$prefix = '';
+			$this->_renderOptionTree($tree, $this->_optionTree[$topitem], $prefix);
+			$ret .= $tree.'</td>';
+			$cols++;
+		}
+		$ret .= '</tr></table></td><td class="even">';
+		foreach (array_keys($this->_optionTree) as $id) {
+			if (!empty($id)) {
+				$option_ids[] = "'".$this->getName().'[groups]['.$this->_groupId.']['.$id.']'."'";
+			}
+		}
+		$checkallbtn_id = $this->getName().'[checkallbtn]['.$this->_groupId.']';
+		$option_ids_str = implode(', ', $option_ids);
+		$ret .= _ALL." <input id=\"".$checkallbtn_id."\" type=\"checkbox\" value=\"\" onclick=\"var optionids = new Array(".$option_ids_str."); xoopsCheckAllElements(optionids, '".$checkallbtn_id."');\" />";
+		$ret .= '</td></tr></table>';
+		return $ret;
+    } 
+
+    /**
+     * Renders checkbox options for an item tree
+     * 
+     * @param string $tree 
+     * @param array $option 
+     * @param string $prefix 
+     * @param array $parentIds 
+     * @access private 
+     */
+    function _renderOptionTree(&$tree, $option, $prefix, $parentIds = array())
+    {
+        $tree .= $prefix . "<input type=\"checkbox\" name=\"" . $this->getName() . "[groups][" . $this->_groupId . "][" . $option['id'] . "]\" id=\"" . $this->getName() . "[groups][" . $this->_groupId . "][" . $option['id'] . "]\" onclick=\""; 
+        // If there are parent elements, add javascript that will
+        // make them selecteded when this element is checked to make
+        // sure permissions to parent items are added as well.
+        foreach ($parentIds as $pid) {
+            $parent_ele = $this->getName() . '[groups][' . $this->_groupId . '][' . $pid . ']';
+            $tree .= "var ele = xoopsGetElementById('" . $parent_ele . "'); if(ele.checked != true) {ele.checked = this.checked;}";
+        } 
+        // If there are child elements, add javascript that will
+        // make them unchecked when this element is unchecked to make
+        // sure permissions to child items are not added when there
+        // is no permission to this item.
+        foreach ($option['allchild'] as $cid) {
+            $child_ele = $this->getName() . '[groups][' . $this->_groupId . '][' . $cid . ']';
+            $tree .= "var ele = xoopsGetElementById('" . $child_ele . "'); if(this.checked != true) {ele.checked = false;}";
+        } 
+        $tree .= '" value="1"';
+        if (in_array($option['id'], $this->_value)) {
+            $tree .= ' checked="checked"';
+        } 
+        $tree .= " />" . $option['name'] . "<input type=\"hidden\" name=\"" . $this->getName() . "[parents][" . $option['id'] . "]\" value=\"" . implode(':', $parentIds). "\" /><input type=\"hidden\" name=\"" . $this->getName() . "[itemname][" . $option['id'] . "]\" value=\"" . htmlspecialchars($option['name']). "\" /><br />\n";
+        if (isset($option['children'])) {
+            foreach ($option['children'] as $child) {
+                array_push($parentIds, $option['id']);
+                $this->_renderOptionTree($tree, $this->_optionTree[$child], $prefix . '&nbsp;-', $parentIds);
+            }
+        }
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/grouppermform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/simpleform.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/simpleform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/simpleform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,79 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * base class
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/form.php";
+
+/**
+ * Form that will output as a simple HTML form with minimum formatting
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ * @subpackage  form
+ */
+class XoopsSimpleForm extends XoopsForm
+{
+	/**
+	 * create HTML to output the form with minimal formatting
+	 * 
+     * @return	string
+	 */
+	function render()
+	{
+		$ret = $this->getTitle()."\n<form name='".$this->getName()."' id='".$this->getName()."' action='".$this->getAction()."' method='".$this->getMethod()."'".$this->getExtra().">\n";
+		foreach ( $this->getElements() as $ele ) {
+			if ( !$ele->isHidden() ) {
+				$ret .= "<b>".$ele->getCaption()."</b><br />".$ele->render()."<br />\n";
+			} else {
+				$ret .= $ele->render()."\n";
+			}
+		}
+		$ret .= "</form>\n";
+		return $ret;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/simpleform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/tableform.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/tableform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/tableform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,85 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * the base class
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/form.php";
+
+/**
+ * Form that will output formatted as a HTML table
+ * 
+ * No styles and no JavaScript to check for required fields.
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ * @subpackage  form
+ */
+class XoopsTableForm extends XoopsForm
+{
+
+	/**
+	 * create HTML to output the form as a table
+	 * 
+     * @return	string
+	 */
+	function render()
+	{
+		$ret = $this->getTitle()."\n<form name='".$this->getName()."' id='".$this->getName()."' action='".$this->getAction()."' method='".$this->getMethod()."'".$this->getExtra().">\n<table border='0' width='100%'>\n";
+		foreach ( $this->getElements() as $ele ) {
+			if ( !$ele->isHidden() ) {
+				$ret .= "<tr valign='top' align='left'><td>".$ele->getCaption();
+				if ($ele->getDescription() != '') {
+					$ret .= '<br /><br /><span style="font-weight: normal;">'.$ele->getDescription().'</span>';
+				}
+				$ret .= "</td><td>".$ele->render()."</td></tr>";
+			} else {
+				$ret .= $ele->render()."\n";
+			}
+		}
+		$ret .= "</table>\n</form>\n";
+		return $ret;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/tableform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsform/themeform.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsform/themeform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsform/themeform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,114 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	die("XOOPS root path not defined");
+}
+/**
+ * 
+ * 
+ * @package     kernel
+ * @subpackage  form
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+/**
+ * base class
+ */
+include_once XOOPS_ROOT_PATH."/class/xoopsform/form.php";
+
+/**
+ * Form that will output as a theme-enabled HTML table
+ * 
+ * Also adds JavaScript to validate required fields
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ * @subpackage  form
+ */
+class XoopsThemeForm extends XoopsForm
+{
+	/**
+	 * Insert an empty row in the table to serve as a seperator.
+	 * 
+     * @param	string  $extra  HTML to be displayed in the empty row.
+	 * @param	string	$class	CSS class name for <td> tag
+	 */
+	function insertBreak($extra = '', $class= '')
+	{
+    	$class = ($class != '') ? " class='$class'" : '';
+     	//Fix for $extra tag not showing
+		if ($extra) {
+			$extra = "<tr><td colspan='2' $class>$extra</td></tr>";
+			$this->addElement($extra);
+		} else {
+			$extra = "<tr><td colspan='2' $class>&nbsp;</td></tr>";
+			$this->addElement($extra);
+		}
+	}
+	
+	/**
+	 * create HTML to output the form as a theme-enabled table with validation.
+     * 
+	 * @return	string
+	 */
+	function render()
+	{
+		$required =& $this->getRequired();
+		$ret = "<form name='".$this->getName()."' id='".$this->getName()."' action='".$this->getAction()."' method='".$this->getMethod()."' onsubmit='return xoopsFormValidate_".$this->getName()."();'".$this->getExtra().">\n<table width='100%' class='outer' cellspacing='1'><tr><th colspan='2'>".$this->getTitle()."</th></tr>";
+		//$count = 0;
+		foreach ( $this->getElements() as $ele ) {
+			if (!is_object($ele)) {
+				$ret .= $ele;
+			} elseif (!$ele->isHidden()) {
+				//if ($count % 2 == 0) {
+					$class = 'even';
+				//} else {
+				//	$class = 'odd';
+				//}
+				$ret .= "<tr valign='top' align='left'><td class='head'>".$ele->getCaption();
+				if ($ele->getDescription() != '') {
+					$ret .= '<br /><br /><span style="font-weight: normal;">'.$ele->getDescription().'</span>';
+				}
+				$ret .= "</td><td class='$class'>".$ele->render()."</td></tr>";
+				//$count++;
+			} else {
+				$ret .= $ele->render();
+			}
+		}
+		$ret .= "</table></form>\n";
+		$ret .= $this->renderValidationJS( true );
+		return $ret;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsform/themeform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsformloader.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsformloader.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsformloader.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,37 @@
+<?php
+// $Id$
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formelement.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/form.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formlabel.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselect.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formpassword.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formbutton.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formcheckbox.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formhidden.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formfile.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formradio.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formradioyn.php";
+//include_once XOOPS_ROOT_PATH."/class/xoopsform/formselectavatar.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselectcountry.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselecttimezone.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselectlang.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselectgroup.php";
+// RMV-NOTIFY
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselectuser.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselecttheme.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formselectmatchoption.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formtext.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formtextarea.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formdhtmltextarea.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formelementtray.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/themeform.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/simpleform.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formtextdateselect.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formdatetime.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsform/formhiddentoken.php";
+//include_once XOOPS_ROOT_PATH."/class/xoopsform/grouppermform.php";
+
+?>


Property changes on: XoopsCore/trunk/htdocs/class/xoopsformloader.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopslists.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopslists.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopslists.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,533 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: The XOOPS Project                                                 //
+// URL: http://www.xoops.org/                                                //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+
+if ( !defined("XOOPS_LISTS_INCLUDED") ) {
+	define("XOOPS_LISTS_INCLUDED",1);
+	class XoopsLists
+	{
+		function &getTimeZoneList()
+		{
+			include_once XOOPS_ROOT_PATH.'/language/'.$GLOBALS['xoopsConfig']['language'].'/timezone.php';
+			$time_zone_list = array ("-12" => _TZ_GMTM12, "-11" => _TZ_GMTM11, "-10" => _TZ_GMTM10, "-9" => _TZ_GMTM9, "-8" => _TZ_GMTM8, "-7" => _TZ_GMTM7, "-6" => _TZ_GMTM6, "-5" => _TZ_GMTM5, "-4" => _TZ_GMTM4, "-3.5" => _TZ_GMTM35, "-3" => _TZ_GMTM3, "-2" => _TZ_GMTM2, "-1" => _TZ_GMTM1, "0" => _TZ_GMT0, "1" => _TZ_GMTP1, "2" => _TZ_GMTP2, "3" => _TZ_GMTP3, "3.5" => _TZ_GMTP35, "4" => _TZ_GMTP4, "4.5" => _TZ_GMTP45, "5" => _TZ_GMTP5, "5.5" => _TZ_GMTP55, "6" => _TZ_GMTP6, "7" => _TZ_GMTP7, "8" => _TZ_GMTP8, "9" => _TZ_GMTP9, "9.5" => _TZ_GMTP95, "10" => _TZ_GMTP10, "11" => _TZ_GMTP11, "12" => _TZ_GMTP12);
+			return $time_zone_list;
+		}
+
+		/*
+		 * gets list of themes folder from themes directory
+		 */
+		function &getThemesList()
+		{
+			return XoopsLists::getDirListAsArray(XOOPS_THEME_PATH.'/');
+		}
+
+		/*
+		 * gets a list of module folders from the modules directory
+		 */
+		function &getModulesList()
+		{
+			return XoopsLists::getDirListAsArray(XOOPS_ROOT_PATH."/modules/");
+		}
+
+		/*
+		 * gets list of name of directories inside a directory
+		 */
+		function &getDirListAsArray($dirname)
+		{
+			$dirlist = array();
+			if (is_dir($dirname) && $handle = opendir($dirname)) {
+				while (false !== ($file = readdir($handle))) {
+					if ( !preg_match("/^[\.]{1,2}$/",$file) ) {
+						if (strtolower($file) != 'cvs' && is_dir($dirname.$file) ) {
+							$dirlist[$file]=$file;
+						}
+					}
+				}
+				closedir($handle);
+				asort($dirlist);
+				reset($dirlist);
+			}
+			return $dirlist;
+		}
+
+		/*
+		 *  gets list of all files in a directory
+		 */
+		function &getFileListAsArray($dirname, $prefix="")
+		{
+			$filelist = array();
+			if (substr($dirname, -1) == '/') {
+				$dirname = substr($dirname, 0, -1);
+			}
+			if (is_dir($dirname) && $handle = opendir($dirname)) {
+				while (false !== ($file = readdir($handle))) {
+					if (!preg_match("/^[\.]{1,2}$/",$file) && is_file($dirname.'/'.$file)) {
+						$file = $prefix.$file;
+						$filelist[$file]=$file;
+					}
+				}
+				closedir($handle);
+				asort($filelist);
+				reset($filelist);
+			}
+			return $filelist;
+		}
+
+		/*
+		 *  gets list of image file names in a directory
+		 */
+		function &getImgListAsArray($dirname, $prefix="")
+		{
+			$filelist = array();
+			if ($handle = opendir($dirname)) {
+				while (false !== ($file = readdir($handle))) {
+					if ( !preg_match("/^[\.]{1,2}$/",$file) && preg_match("/(\.gif|\.jpg|\.png)$/i",$file) ) {
+						$file = $prefix.$file;
+						$filelist[$file]=$file;
+					}
+				}
+				closedir($handle);
+				asort($filelist);
+				reset($filelist);
+			}
+			return $filelist;
+		}
+		
+		/*
+		 *  gets list of html file names in a certain directory
+		*/
+		function &getHtmlListAsArray($dirname, $prefix="")
+		{
+			$filelist = array();
+			if ($handle = opendir($dirname)) {
+				while (false !== ($file = readdir($handle))) {
+					if ( ( !preg_match( "/^[\.]{1,2}$/", $file ) && preg_match( "/(\.htm|\.html|\.xhtml)$/i", $file ) && !is_dir( $file ) ) )
+        			{
+            			if ( strtolower( $file ) != 'cvs' && !is_dir( $file ) )
+            			{
+                			$file = $prefix.$file;
+							$filelist[$file] = $prefix.$file;
+            			} 
+        			}
+				}
+				closedir($handle);
+				asort($filelist);
+				reset($filelist);
+			}
+			return $filelist;
+		}
+					
+		/*
+		 *  gets list of avatar file names in a certain directory
+		 *  if directory is not specified, default directory will be searched
+		 */
+		function &getAvatarsList($avatar_dir="")
+		{
+			$avatars = array();
+			if ( $avatar_dir != "" ) {
+				$avatars =& XoopsLists::getImgListAsArray(XOOPS_ROOT_PATH."/images/avatar/".$avatar_dir."/", $avatar_dir."/");
+			} else {
+				$avatars =& XoopsLists::getImgListAsArray(XOOPS_ROOT_PATH."/images/avatar/");
+			}
+			return $avatars;
+		}
+
+		/*
+		 *  gets list of all avatar image files inside default avatars directory
+		 */
+		function &getAllAvatarsList()
+		{
+			$avatars = array();
+			$dirlist = array();
+			$dirlist =& XoopsLists::getDirListAsArray(XOOPS_ROOT_PATH."/images/avatar/");
+			if ( count($dirlist) > 0 ) {
+				foreach ( $dirlist as $dir ) {
+					$avatars[$dir] =& XoopsLists::getImgListAsArray(XOOPS_ROOT_PATH."/images/avatar/".$dir."/", $dir."/");
+				}
+			} else {
+				return false;
+			}
+			return $avatars;
+		}
+
+		/*
+		*  gets list of subject icon image file names in a certain directory
+		*  if directory is not specified, default directory will be searched
+		*/
+		function &getSubjectsList($sub_dir="")
+		{
+			$subjects = array();
+			if($sub_dir != ""){
+				$subjects =& XoopsLists::getImgListAsArray(XOOPS_ROOT_PATH."/images/subject/".$sub_dir, $sub_dir."/");
+			} else {
+				$subjects =& XoopsLists::getImgListAsArray(XOOPS_ROOT_PATH."/images/subject/");
+			}
+			return $subjects;
+		}
+
+		/*
+		 * gets list of language folders inside default language directory
+		 */
+		function &getLangList()
+		{
+			$lang_list = array();
+			$lang_list =& XoopsLists::getDirListAsArray(XOOPS_ROOT_PATH."/language/");
+			return $lang_list;
+		}
+
+		function &getCountryList()
+		{
+			$country_list = array (
+				""   => "-",
+				"AD" => "Andorra",
+				"AE" => "United Arab Emirates",
+				"AF" => "Afghanistan",
+				"AG" => "Antigua and Barbuda",
+				"AI" => "Anguilla",
+				"AL" => "Albania",
+				"AM" => "Armenia",
+				"AN" => "Netherlands Antilles",
+				"AO" => "Angola",
+				"AQ" => "Antarctica",
+				"AR" => "Argentina",
+				"AS" => "American Samoa",
+				"AT" => "Austria",
+				"AU" => "Australia",
+				"AW" => "Aruba",
+				"AZ" => "Azerbaijan",
+				"BA" => "Bosnia and Herzegovina",
+				"BB" => "Barbados",
+				"BD" => "Bangladesh",
+				"BE" => "Belgium",
+				"BF" => "Burkina Faso",
+				"BG" => "Bulgaria",
+				"BH" => "Bahrain",
+				"BI" => "Burundi",
+				"BJ" => "Benin",
+				"BM" => "Bermuda",
+				"BN" => "Brunei Darussalam",
+				"BO" => "Bolivia",
+				"BR" => "Brazil",
+				"BS" => "Bahamas",
+				"BT" => "Bhutan",
+				"BV" => "Bouvet Island",
+				"BW" => "Botswana",
+				"BY" => "Belarus",
+				"BZ" => "Belize",
+				"CA" => "Canada",
+				"CC" => "Cocos (Keeling) Islands",
+				"CF" => "Central African Republic",
+				"CG" => "Congo",
+				"CH" => "Switzerland",
+				"CI" => "Cote D'Ivoire (Ivory Coast)",
+				"CK" => "Cook Islands",
+				"CL" => "Chile",
+				"CM" => "Cameroon",
+				"CN" => "China",
+				"CO" => "Colombia",
+				"CR" => "Costa Rica",
+				"CS" => "Czechoslovakia (former)",
+				"CU" => "Cuba",
+				"CV" => "Cape Verde",
+				"CX" => "Christmas Island",
+				"CY" => "Cyprus",
+				"CZ" => "Czech Republic",
+				"DE" => "Germany",
+				"DJ" => "Djibouti",
+				"DK" => "Denmark",
+				"DM" => "Dominica",
+				"DO" => "Dominican Republic",
+				"DZ" => "Algeria",
+				"EC" => "Ecuador",
+				"EE" => "Estonia",
+				"EG" => "Egypt",
+				"EH" => "Western Sahara",
+				"ER" => "Eritrea",
+				"ES" => "Spain",
+				"ET" => "Ethiopia",
+				"FI" => "Finland",
+				"FJ" => "Fiji",
+				"FK" => "Falkland Islands (Malvinas)",
+				"FM" => "Micronesia",
+				"FO" => "Faroe Islands",
+				"FR" => "France",
+				"FX" => "France, Metropolitan",
+				"GA" => "Gabon",
+				"GB" => "Great Britain (UK)",
+				"GD" => "Grenada",
+				"GE" => "Georgia",
+				"GF" => "French Guiana",
+				"GH" => "Ghana",
+				"GI" => "Gibraltar",
+				"GL" => "Greenland",
+				"GM" => "Gambia",
+				"GN" => "Guinea",
+				"GP" => "Guadeloupe",
+				"GQ" => "Equatorial Guinea",
+				"GR" => "Greece",
+				"GS" => "S. Georgia and S. Sandwich Isls.",
+				"GT" => "Guatemala",
+				"GU" => "Guam",
+				"GW" => "Guinea-Bissau",
+				"GY" => "Guyana",
+				"HK" => "Hong Kong",
+				"HM" => "Heard and McDonald Islands",
+				"HN" => "Honduras",
+				"HR" => "Croatia (Hrvatska)",
+				"HT" => "Haiti",
+				"HU" => "Hungary",
+				"ID" => "Indonesia",
+				"IE" => "Ireland",
+				"IL" => "Israel",
+				"IN" => "India",
+				"IO" => "British Indian Ocean Territory",
+				"IQ" => "Iraq",
+				"IR" => "Iran",
+				"IS" => "Iceland",
+				"IT" => "Italy",
+				"JM" => "Jamaica",
+				"JO" => "Jordan",
+				"JP" => "Japan",
+				"KE" => "Kenya",
+				"KG" => "Kyrgyzstan",
+				"KH" => "Cambodia",
+				"KI" => "Kiribati",
+				"KM" => "Comoros",
+				"KN" => "Saint Kitts and Nevis",
+				"KP" => "Korea (North)",
+				"KR" => "Korea (South)",
+				"KW" => "Kuwait",
+				"KY" => "Cayman Islands",
+				"KZ" => "Kazakhstan",
+				"LA" => "Laos",
+				"LB" => "Lebanon",
+				"LC" => "Saint Lucia",
+				"LI" => "Liechtenstein",
+				"LK" => "Sri Lanka",
+				"LR" => "Liberia",
+				"LS" => "Lesotho",
+				"LT" => "Lithuania",
+				"LU" => "Luxembourg",
+				"LV" => "Latvia",
+				"LY" => "Libya",
+				"MA" => "Morocco",
+				"MC" => "Monaco",
+				"MD" => "Moldova",
+				"MG" => "Madagascar",
+				"MH" => "Marshall Islands",
+				"MK" => "Macedonia",
+				"ML" => "Mali",
+				"MM" => "Myanmar",
+				"MN" => "Mongolia",
+				"MO" => "Macau",
+				"MP" => "Northern Mariana Islands",
+				"MQ" => "Martinique",
+				"MR" => "Mauritania",
+				"MS" => "Montserrat",
+				"MT" => "Malta",
+				"MU" => "Mauritius",
+				"MV" => "Maldives",
+				"MW" => "Malawi",
+				"MX" => "Mexico",
+				"MY" => "Malaysia",
+				"MZ" => "Mozambique",
+				"NA" => "Namibia",
+				"NC" => "New Caledonia",
+				"NE" => "Niger",
+				"NF" => "Norfolk Island",
+				"NG" => "Nigeria",
+				"NI" => "Nicaragua",
+				"NL" => "Netherlands",
+				"NO" => "Norway",
+				"NP" => "Nepal",
+				"NR" => "Nauru",
+				"NT" => "Neutral Zone",
+				"NU" => "Niue",
+				"NZ" => "New Zealand (Aotearoa)",
+				"OM" => "Oman",
+				"PA" => "Panama",
+				"PE" => "Peru",
+				"PF" => "French Polynesia",
+				"PG" => "Papua New Guinea",
+				"PH" => "Philippines",
+				"PK" => "Pakistan",
+				"PL" => "Poland",
+				"PM" => "St. Pierre and Miquelon",
+				"PN" => "Pitcairn",
+				"PR" => "Puerto Rico",
+				"PT" => "Portugal",
+				"PW" => "Palau",
+				"PY" => "Paraguay",
+				"QA" => "Qatar",
+				"RE" => "Reunion",
+				"RO" => "Romania",
+				"RU" => "Russian Federation",
+				"RW" => "Rwanda",
+				"SA" => "Saudi Arabia",
+				"Sb" => "Solomon Islands",
+				"SC" => "Seychelles",
+				"SD" => "Sudan",
+				"SE" => "Sweden",
+				"SG" => "Singapore",
+				"SH" => "St. Helena",
+				"SI" => "Slovenia",
+				"SJ" => "Svalbard and Jan Mayen Islands",
+				"SK" => "Slovak Republic",
+				"SL" => "Sierra Leone",
+				"SM" => "San Marino",
+				"SN" => "Senegal",
+				"SO" => "Somalia",
+				"SR" => "Suriname",
+				"ST" => "Sao Tome and Principe",
+				"SU" => "USSR (former)",
+				"SV" => "El Salvador",
+				"SY" => "Syria",
+				"SZ" => "Swaziland",
+				"TC" => "Turks and Caicos Islands",
+				"TD" => "Chad",
+				"TF" => "French Southern Territories",
+				"TG" => "Togo",
+				"TH" => "Thailand",
+				"TJ" => "Tajikistan",
+				"TK" => "Tokelau",
+				"TM" => "Turkmenistan",
+				"TN" => "Tunisia",
+				"TO" => "Tonga",
+				"TP" => "East Timor",
+				"TR" => "Turkey",
+				"TT" => "Trinidad and Tobago",
+				"TV" => "Tuvalu",
+				"TW" => "Taiwan",
+				"TZ" => "Tanzania",
+				"UA" => "Ukraine",
+				"UG" => "Uganda",
+				"UK" => "United Kingdom",
+				"UM" => "US Minor Outlying Islands",
+				"US" => "United States",
+				"UY" => "Uruguay",
+				"UZ" => "Uzbekistan",
+				"VA" => "Vatican City State (Holy See)",
+				"VC" => "Saint Vincent and the Grenadines",
+				"VE" => "Venezuela",
+				"VG" => "Virgin Islands (British)",
+				"VI" => "Virgin Islands (U.S.)",
+				"VN" => "Viet Nam",
+				"VU" => "Vanuatu",
+				"WF" => "Wallis and Futuna Islands",
+				"WS" => "Samoa",
+				"YE" => "Yemen",
+				"YT" => "Mayotte",
+				"YU" => "Yugoslavia",
+				"ZA" => "South Africa",
+				"ZM" => "Zambia",
+				"ZR" => "Zaire",
+				"ZW" => "Zimbabwe"
+			);
+    		asort($country_list);
+    		reset($country_list);
+    		return $country_list;
+		}
+
+		function &getHtmlList()
+		{
+			$html_list = array (
+				"a" => "&lt;a&gt;",
+				"abbr" => "&lt;abbr&gt;",
+				"acronym" => "&lt;acronym&gt;",
+				"address" => "&lt;address&gt;",
+				"b" => "&lt;b&gt;",
+				"bdo" => "&lt;bdo&gt;",
+				"big" => "&lt;big&gt;",
+				"blockquote" => "&lt;blockquote&gt;",
+				"caption" => "&lt;caption&gt;",
+				"cite" => "&lt;cite&gt;",
+				"code" => "&lt;code&gt;",
+				"col" => "&lt;col&gt;",
+				"colgroup" => "&lt;colgroup&gt;",
+				"dd" => "&lt;dd&gt;",
+				"del" => "&lt;del&gt;",
+				"dfn" => "&lt;dfn&gt;",
+				"div" => "&lt;div&gt;",
+				"dl" => "&lt;dl&gt;",
+				"dt" => "&lt;dt&gt;",
+				"em" => "&lt;em&gt;",
+				"font" => "&lt;font&gt;",
+				"h1" => "&lt;h1&gt;",
+				"h2" => "&lt;h2&gt;",
+				"h3" => "&lt;h3&gt;",
+				"h4" => "&lt;h4&gt;",
+				"h5" => "&lt;h5&gt;",
+				"h6" => "&lt;h6&gt;",
+				"hr" => "&lt;hr&gt;",
+				"i" => "&lt;i&gt;",
+				"img" => "&lt;img&gt;",
+				"ins" => "&lt;ins&gt;",
+				"kbd" => "&lt;kbd&gt;",
+				"li" => "&lt;li&gt;",
+				"map" => "&lt;map&gt;",
+				"object" => "&lt;object&gt;",
+				"ol" => "&lt;ol&gt;",
+				"samp" => "&lt;samp&gt;",
+				"small" => "&lt;small&gt;",
+				"strong" => "&lt;strong&gt;",
+				"sub" => "&lt;sub&gt;",
+				"sup" => "&lt;sup&gt;",
+				"table" => "&lt;table&gt;",
+				"tbody" => "&lt;tbody&gt;",
+				"td" => "&lt;td&gt;",
+				"tfoot" => "&lt;tfoot&gt;",
+				"th" => "&lt;th&gt;",
+				"thead" => "&lt;thead&gt;",
+				"tr" => "&lt;tr&gt;",
+				"tt" => "&lt;tt&gt;",
+				"ul" => "&lt;ul&gt;",
+				"var" => "&lt;var&gt;"
+			);
+			asort($html_list);
+    		reset($html_list);
+    		return $html_list;
+		}
+
+		function &getUserRankList()
+		{
+			$db =& Database::getInstance();
+			$myts =& MyTextSanitizer::getInstance();
+			$sql = "SELECT rank_id, rank_title FROM ".$db->prefix("ranks")." WHERE rank_special = 1";
+			$ret = array();
+			$result = $db->query($sql);
+			while ( $myrow = $db->fetchArray($result) ) {
+				$ret[$myrow['rank_id']] = $myts->makeTboxData4Show($myrow['rank_title']);
+			}
+			return $ret;
+		}
+	}
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/class/xoopslists.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsmailer.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsmailer.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsmailer.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,520 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined("XOOPS_ROOT_PATH")) {
+    die("XOOPS root path not defined");
+}
+if (isset($GLOBALS['xoopsConfig']['language']) && file_exists(XOOPS_ROOT_PATH.'/language/'.$GLOBALS['xoopsConfig']['language'].'/mail.php')) {
+	include_once XOOPS_ROOT_PATH.'/language/'.$GLOBALS['xoopsConfig']['language'].'/mail.php';
+} else {
+	include_once XOOPS_ROOT_PATH.'/language/english/mail.php';
+}
+
+/**
+ * The new Multimailer class that will carry out the actual sending and will later replace this class. 
+ * If you're writing new code, please use that class instead.
+ */
+include_once(XOOPS_ROOT_PATH."/class/mail/xoopsmultimailer.php");
+
+
+/**
+ * Class for sending mail.
+ *
+ * Changed to use the facilities of  {@link XoopsMultiMailer}
+ *
+ * @deprecated	use {@link XoopsMultiMailer} instead.
+ *
+ * @package		class
+ * @subpackage	mail
+ *
+ * @author		Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class XoopsMailer
+{
+	/**
+	 * reference to a {@link XoopsMultiMailer}
+	 *
+	 * @var		XoopsMultiMailer
+	 * @access	private
+	 * @since	21.02.2003 14:14:13
+	 */
+	var $multimailer;
+
+	// sender email address
+	// private
+	var $fromEmail;
+
+	// sender name
+	// private
+	var $fromName;
+
+	// RMV-NOTIFY
+	// sender UID
+	// private
+	var $fromUser;
+
+	// array of user class objects
+	// private
+	var $toUsers;
+
+	// array of email addresses
+	// private
+	var $toEmails;
+
+	// custom headers
+	// private
+	var $headers;
+
+	// subjet of mail
+	// private
+	var $subject;
+
+	// body of mail
+	// private
+	var $body;
+
+	// error messages
+	// private
+	var $errors;
+
+	// messages upon success
+	// private
+	var $success;
+
+	// private
+	var $isMail;
+
+	// private
+	var $isPM;
+
+	// private
+	var $assignedTags;
+
+	// private
+	var $template;
+
+	// private
+	var $templatedir;
+
+	// protected
+	var $charSet = 'iso-8859-1';
+
+	// protected
+	var $encoding = '8bit';
+
+	function XoopsMailer()
+	{
+
+		$this->multimailer = new XoopsMultiMailer();
+		$this->reset();
+	}
+
+	// public
+	// reset all properties to default
+	function reset()
+	{
+		$this->fromEmail = "";
+		$this->fromName = "";
+		$this->fromUser = null; // RMV-NOTIFY
+		$this->priority = '';
+		$this->toUsers = array();
+		$this->toEmails = array();
+		$this->headers = array();
+		$this->subject = "";
+		$this->body = "";
+		$this->errors = array();
+		$this->success = array();
+		$this->isMail = false;
+		$this->isPM = false;
+		$this->assignedTags = array();
+		$this->template = "";
+		$this->templatedir = "";
+		// Change below to \r\n if you have problem sending mail
+		$this->LE ="\n";
+	}
+
+	// public
+	function setTemplateDir($value)
+	{
+		if ( substr($value, -1, 1) != "/" ) {
+			$value .= "/";
+		}
+		$this->templatedir = $value;
+	}
+
+	// public
+	function setTemplate($value)
+	{
+		$this->template = $value;
+	}
+
+	// pupblic
+	function setFromEmail($value)
+	{
+		$this->fromEmail = trim($value);
+	}
+
+	// public
+	function setFromName($value)
+	{
+		$this->fromName = trim($value);
+	}
+
+	// RMV-NOTIFY
+	// public
+	function setFromUser(&$user)
+	{
+        if ( strtolower(get_class($user)) == "xoopsuser" ) {
+			$this->fromUser =& $user;
+		}
+	}
+
+	// public
+	function setPriority($value)
+	{
+		$this->priority = trim($value);
+	}
+
+
+	// public
+	function setSubject($value)
+	{
+		$this->subject = trim($value);
+	}
+
+	// public
+	function setBody($value)
+	{
+		$this->body = trim($value);
+	}
+
+	// public
+	function useMail()
+	{
+		$this->isMail = true;
+	}
+
+	// public
+	function usePM()
+	{
+		$this->isPM = true;
+	}
+
+	// public
+	function send($debug = false)
+	{
+		global $xoopsConfig;
+		if ( $this->body == "" && $this->template == "" ) {
+			if ($debug) {
+				$this->errors[] = _MAIL_MSGBODY;
+			}
+			return false;
+		} elseif ( $this->template != "" ) {
+			$path = ( $this->templatedir != "" ) ? $this->templatedir."".$this->template : (XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/mail_template/".$this->template);
+			if ( !($fd = @fopen($path, 'r')) ) {
+				if ($debug) {
+					$this->errors[] = _MAIL_FAILOPTPL;
+				}
+            			return false;
+        		}
+			$this->setBody(fread($fd, filesize($path)));
+		}
+
+		// for sending mail only
+		if ( $this->isMail  || !empty($this->toEmails) ) {
+			if (!empty($this->priority)) {
+				$this->headers[] = "X-Priority: " . $this->priority;
+			}
+			$this->headers[] = "X-Mailer: PHP/".phpversion();
+			$this->headers[] = "Return-Path: ".$this->fromEmail;
+			$headers = join($this->LE, $this->headers);
+		}
+
+// TODO: we should have an option of no-reply for private messages and emails
+// to which we do not accept replies.  e.g. the site admin doesn't want a
+// a lot of message from people trying to unsubscribe.  Just make sure to
+// give good instructions in the message.
+
+		// add some standard tags (user-dependent tags are included later)
+		global $xoopsConfig;
+		$this->assign ('X_ADMINMAIL', $xoopsConfig['adminmail']);
+		$this->assign ('X_SITENAME', $xoopsConfig['sitename']);
+		$this->assign ('X_SITEURL', XOOPS_URL);
+		// TODO: also X_ADMINNAME??
+		// TODO: X_SIGNATURE, X_DISCLAIMER ?? - these are probably best
+		//  done as includes if mail templates ever get this sophisticated
+
+		// replace tags with actual values
+		foreach ( $this->assignedTags as $k => $v ) {
+			$this->body = str_replace("{".$k."}", $v, $this->body);
+			$this->subject = str_replace("{".$k."}", $v, $this->subject);
+		}
+		$this->body = str_replace("\r\n", "\n", $this->body);
+		$this->body = str_replace("\r", "\n", $this->body);
+		$this->body = str_replace("\n", $this->LE, $this->body);
+
+		// send mail to specified mail addresses, if any
+		foreach ( $this->toEmails as $mailaddr ) {
+			if ( !$this->sendMail($mailaddr, $this->subject, $this->body, $headers) ) {
+				if ($debug) {
+					$this->errors[] = sprintf(_MAIL_SENDMAILNG, $mailaddr);
+				}
+			} else {
+				if ($debug) {
+					$this->success[] = sprintf(_MAIL_MAILGOOD, $mailaddr);
+				}
+			}
+		}
+
+		// send message to specified users, if any
+
+		// NOTE: we don't send to LIST of recipients, because the tags
+		// below are dependent on the user identity; i.e. each user
+		// receives (potentially) a different message
+
+		foreach ( $this->toUsers as $user ) {
+			// set some user specific variables
+			$subject = str_replace("{X_UNAME}", $user->getVar("uname"), $this->subject );
+			$text = str_replace("{X_UID}", $user->getVar("uid"), $this->body );
+			$text = str_replace("{X_UEMAIL}", $user->getVar("email"), $text );
+			$text = str_replace("{X_UNAME}", $user->getVar("uname"), $text );
+			$text = str_replace("{X_UACTLINK}", XOOPS_URL."/user.php?op=actv&id=".$user->getVar("uid")."&actkey=".$user->getVar('actkey'), $text );
+			// send mail
+			if ( $this->isMail ) {
+				if ( !$this->sendMail($user->getVar("email"), $subject, $text, $headers) ) {
+					if ($debug) {
+						$this->errors[] = sprintf(_MAIL_SENDMAILNG, $user->getVar("uname"));
+					}
+				} else {
+					if ($debug) {
+						$this->success[] = sprintf(_MAIL_MAILGOOD, $user->getVar("uname"));
+					}
+				}
+			}
+			// send private message
+			if ( $this->isPM ) {
+				if ( !$this->sendPM($user->getVar("uid"), $subject, $text) ) {
+					if ($debug) {
+						$this->errors[] = sprintf(_MAIL_SENDPMNG, $user->getVar("uname"));
+					}
+				} else {
+					if ($debug) {
+						$this->success[] = sprintf(_MAIL_PMGOOD, $user->getVar("uname"));
+					}
+				}
+			}
+			flush();
+		}
+		if ( count($this->errors) > 0 ) {
+			return false;
+		}
+		return true;
+	}
+
+	// private
+	function sendPM($uid, $subject, $body)
+	{
+		global $xoopsUser;
+		$pm_handler =& xoops_gethandler('privmessage');
+		$pm =& $pm_handler->create();
+		$pm->setVar("subject", $subject);
+		// RMV-NOTIFY
+		$pm->setVar('from_userid', !empty($this->fromUser) ? $this->fromUser->getVar('uid') : $xoopsUser->getVar('uid'));
+		$pm->setVar("msg_text", $body);
+		$pm->setVar("to_userid", $uid);
+		if (!$pm_handler->insert($pm)) {
+			return false;
+		}
+		return true;
+	}
+
+	/**
+	 * Send email
+	 *
+	 * Uses the new XoopsMultiMailer
+	 *
+	 * @param	string
+	 * @param	string
+	 * @param	string
+	 * @return	boolean	FALSE on error.
+	 */
+
+	function sendMail($email, $subject, $body, $headers)
+	{
+		$subject = $this->encodeSubject($subject);
+		$this->encodeBody($body);
+		$this->multimailer->ClearAllRecipients();
+		$this->multimailer->AddAddress($email);
+		$this->multimailer->Subject = $subject;
+		$this->multimailer->Body = $body;
+		$this->multimailer->CharSet = $this->charSet;
+		$this->multimailer->Encoding = $this->encoding;
+		if (!empty($this->fromName)) {
+			$this->multimailer->FromName = $this->encodeFromName($this->fromName);
+		}
+		if (!empty($this->fromEmail)) {
+			$this->multimailer->From = $this->fromEmail;
+		}
+		$this->multimailer->ClearCustomHeaders();
+		foreach ($this->headers as $header) {
+			$this->multimailer->AddCustomHeader($header);
+		}
+		if (!$this->multimailer->Send()) {
+		    $this->errors[] = $this->multimailer->ErrorInfo;
+			return FALSE;
+		}
+		return TRUE;
+	}
+
+	// public
+	function getErrors($ashtml = true)
+	{
+		if ( !$ashtml ) {
+			return $this->errors;
+		} else {
+			if ( !empty($this->errors) ) {
+				$ret = "<h4>"._ERRORS."</h4>";
+				foreach ( $this->errors as $error ) {
+					$ret .= $error."<br />";
+				}
+			} else {
+				$ret = "";
+			}
+			return $ret;
+		}
+	}
+
+	// public
+	function getSuccess($ashtml = true)
+	{
+		if ( !$ashtml ) {
+			return $this->success;
+		} else {
+			$ret = "";
+			if ( !empty($this->success) ) {
+				foreach ( $this->success as $suc ) {
+					$ret .= $suc."<br />";
+				}
+			}
+			return $ret;
+		}
+	}
+
+	// public
+	function assign($tag, $value=null)
+	{
+		if ( is_array($tag) ) {
+			foreach ( $tag as $k => $v ) {
+				$this->assign($k, $v);
+			}
+		} else {
+			if ( !empty($tag) && isset($value) ) {
+				$tag = strtoupper(trim($tag));
+// RMV-NOTIFY
+// TEMPORARY FIXME: until the X_tags are all in here
+//				if ( substr($tag, 0, 2) != "X_" ) {
+					$this->assignedTags[$tag] = $value;
+//				}
+			}
+		}
+	}
+
+	// public
+	function addHeaders($value)
+	{
+		$this->headers[] = trim($value).$this->LE;
+	}
+
+	// public
+	function setToEmails($email)
+	{
+		if ( !is_array($email) ) {
+			if (preg_match("/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+([\.][a-z0-9-]+)+$/i",$email) ) {
+				array_push($this->toEmails, $email);
+			}
+		} else {
+			foreach ( $email as $e) {
+				$this->setToEmails($e);
+			}
+		}
+	}
+
+	// public
+	function setToUsers(&$user)
+	{
+		if ( !is_array($user) ) {
+			if ( strtolower(get_class($user)) == "xoopsuser" ) {
+				array_push($this->toUsers, $user);
+			}
+		} else {
+			foreach ( $user as $u) {
+				$this->setToUsers($u);
+			}
+		}
+	}
+
+	// public
+	function setToGroups($group)
+	{
+		if ( !is_array($group) ) {
+			if ( strtolower(get_class($group)) == "xoopsgroup" ) {
+				$member_handler =& xoops_gethandler('member');
+				$this->setToUsers($member_handler->getUsersByGroup($group->getVar('groupid'), true));
+			}
+		} else {
+			foreach ($group as $g) {
+				$this->setToGroups($g);
+			}
+		}
+	}
+
+	// abstract
+	// to be overidden by lang specific mail class, if needed
+	function encodeFromName($text)
+	{
+		return $text;
+	}
+
+	// abstract
+	// to be overidden by lang specific mail class, if needed
+	function encodeSubject($text)
+	{
+		return $text;
+	}
+
+	// abstract
+	// to be overidden by lang specific mail class, if needed
+	function encodeBody(&$text)
+	{
+
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsmailer.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsmodule.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsmodule.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsmodule.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,14 @@
+<?php
+// $Id$
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+/**
+ * this file is for backward compatibility only 
+ *
+ **/
+/**
+ * load the new module class 
+ **/
+require_once XOOPS_ROOT_PATH.'/kernel/module.php';
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsmodule.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsobject.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsobject.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsobject.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,14 @@
+<?php
+// $Id$
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+/**
+ * this file is for backward compatibility only
+ * @package kernel
+ **/
+/**
+ * Load the new object class 
+ **/
+require_once XOOPS_ROOT_PATH.'/kernel/object.php';
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsobject.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopssecurity.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopssecurity.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopssecurity.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,256 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+/*
+ * Class for managing security aspects such as checking referers, applying tokens and checking global variables for contamination
+ *
+ * @package        kernel
+ * @subpackage    core
+ *
+ * @author        Jan Pedersen     <mithrandir at xoops.org>
+ * @copyright    (c) 2000-2005 The Xoops Project - www.xoops.org
+ */
+
+class XoopsSecurity {
+    var $errors = array();
+    /**
+     * Constructor
+     *
+     **/
+    function XoopsSecurity() {
+    }
+    
+    /**
+    * Check if there is a valid token in $_REQUEST['XOOPS_TOKEN_REQUEST'] - can be expanded for more wide use, later (Mith)
+    *
+    * @param bool   $clearIfValid whether to clear the token after validation
+    * @param string $token token to validate
+    *
+    * @return bool
+    */
+    function check($clearIfValid = true, $token = false) {
+        return $this->validateToken($token, $clearIfValid);
+    }
+
+    /**
+    * Create a token in the user's session
+    *
+    * @param int $timeout time in seconds the token should be valid
+    *
+    * @return string token value
+    */
+    function createToken($timeout = 0)
+    {
+        $this->garbageCollection();
+        if ($timeout == 0) {
+            $timeout = $GLOBALS['xoopsConfig']['session_expire'] * 60; //session_expire is in minutes, we need seconds
+        }
+        $token_id = md5(uniqid(rand(), true));
+        // save token data on the server
+        if (!isset($_SESSION['XOOPS_TOKEN_SESSION'])) {
+            $_SESSION['XOOPS_TOKEN_SESSION'] = array();
+        }
+        $token_data = array('id' => $token_id, 'expire' => time() + intval($timeout));
+        array_push($_SESSION['XOOPS_TOKEN_SESSION'], $token_data);
+        return md5($token_id.$_SERVER['HTTP_USER_AGENT'].XOOPS_DB_PREFIX);
+    }
+
+    /**
+    * Check if a token is valid. If no token is specified, $_REQUEST['XOOPS_TOKEN_REQUEST'] is checked
+    *
+    * @param string $token token to validate
+    * @param bool   $clearIfValid whether to clear the token value if valid
+    *
+    * @return bool
+    **/
+    function validateToken($token = false, $clearIfValid = true)
+    {
+        global $xoopsLogger;
+        $token = ($token === false) ? @$_REQUEST['XOOPS_TOKEN_REQUEST'] : $token;
+        if (empty($token) || empty($_SESSION['XOOPS_TOKEN_SESSION'])) {
+            $xoopsLogger->addExtra('Token Validation', 'No valid token found in request/session');
+            return false;
+        }
+        $validFound = false;
+        $token_data =& $_SESSION['XOOPS_TOKEN_SESSION'];
+        foreach (array_keys($token_data) as $i) {
+            if ($token === md5($token_data[$i]['id'].$_SERVER['HTTP_USER_AGENT'].XOOPS_DB_PREFIX)) {
+                if ($this->filterToken($token_data[$i])) {
+                    if ($clearIfValid) {
+                        // token should be valid once, so clear it once validated
+                        unset($token_data[$i]);
+                    }
+                    $xoopsLogger->addExtra('Token Validation', 'Valid token found');
+                    $validFound = true;
+                }
+                else {
+                    $str = 'Valid token expired';
+                    $this->setErrors($str);
+                    $xoopsLogger->addExtra('Token Validation', $str);
+                }
+            }
+        }
+        if (!$validFound) {
+            $xoopsLogger->addExtra('Token Validation', 'No valid token found');
+        }
+        $this->garbageCollection();
+        return $validFound;
+    }
+
+    /**
+    * Clear all token values from user's session
+    **/
+    function clearTokens()
+    {
+        $_SESSION['XOOPS_TOKEN_SESSION'] = array();
+    }
+
+    /**
+    * Check whether a token value is expired or not
+    *
+    * @param string $token
+    *
+    * @return bool
+    **/
+    function filterToken($token)
+    {
+        return (!empty($token['expire']) && $token['expire'] >= time());
+    }
+
+    /**
+    * Perform garbage collection, clearing expired tokens
+    *
+    * @return void
+    **/
+    function garbageCollection() {
+        if (isset($_SESSION['XOOPS_TOKEN_SESSION']) && count($_SESSION['XOOPS_TOKEN_SESSION']) > 0) {
+            $_SESSION['XOOPS_TOKEN_SESSION'] = array_filter($_SESSION['XOOPS_TOKEN_SESSION'], array($this, 'filterToken'));
+        }
+    }
+    /**
+    * Check the user agent's HTTP REFERER against XOOPS_URL
+    *
+    * @param int $docheck 0 to not check the referer (used with XML-RPC), 1 to actively check it
+    *
+    * @return bool
+    **/
+    function checkReferer($docheck=1)
+    {
+        $ref = xoops_getenv('HTTP_REFERER');
+        if ($docheck == 0) {
+            return true;
+        }
+        if ($ref == '') {
+            return false;
+        }
+        if (strpos($ref, XOOPS_URL) !== 0 ) {
+            return false;
+        }
+        return true;
+    }
+    
+    /**
+    * Check superglobals for contamination
+    *
+    * @return void
+    **/
+    function checkSuperglobals() {
+        foreach (array('GLOBALS', '_SESSION', 'HTTP_SESSION_VARS', '_GET', 'HTTP_GET_VARS', '_POST', 'HTTP_POST_VARS', '_COOKIE', 'HTTP_COOKIE_VARS', '_REQUEST', '_SERVER', 'HTTP_SERVER_VARS', '_ENV', 'HTTP_ENV_VARS', '_FILES', 'HTTP_POST_FILES', 'xoopsDB', 'xoopsUser', 'xoopsUserId', 'xoopsUserGroups', 'xoopsUserIsAdmin', 'xoopsConfig', 'xoopsOption', 'xoopsModule', 'xoopsModuleConfig', 'xoopsRequestUri') as $bad_global) {
+            if (isset($_REQUEST[$bad_global])) {
+                header('Location: '.XOOPS_URL.'/');
+                exit();
+            }
+        }
+    }
+
+    /**
+    * Check if visitor's IP address is banned
+    * Should be changed to return bool and let the action be up to the calling script
+    *
+    * @return void
+    **/
+    function checkBadips() {
+        global $xoopsConfig;
+        if ($xoopsConfig['enable_badips'] == 1 && isset($_SERVER['REMOTE_ADDR']) && $_SERVER['REMOTE_ADDR'] != '') {
+            foreach ($xoopsConfig['bad_ips'] as $bi) {
+                if (!empty($bi) && preg_match("/".$bi."/", $_SERVER['REMOTE_ADDR'])) {
+                    exit();
+                }
+            }
+        }
+        unset($bi);
+        unset($bad_ips);
+        unset($xoopsConfig['badips']);
+    }
+    
+    /**
+    * Get the HTML code for a XoopsFormHiddenToken object - used in forms that do not use XoopsForm elements
+    *
+    * @return string
+    **/
+    function getTokenHTML() {
+        require_once(XOOPS_ROOT_PATH."/class/xoopsformloader.php");
+        $token = new XoopsFormHiddenToken();
+        return $token->render();
+    }
+    
+    /**
+     * Add an error
+     * 
+     * @param   string  $error
+     **/
+    function setErrors($error)
+    {
+        $this->errors[] = trim($error);
+    }
+    
+    /**
+     * Get generated errors
+     *
+     * @param    bool    $ashtml Format using HTML?
+     * 
+     * @return    array|string    Array of array messages OR HTML string
+     */
+    function &getErrors($ashtml = false)
+    {
+        if (!$ashtml) {
+            return $this->errors;
+        } else {
+            $ret = '';
+            if (count($this->errors) > 0) {
+                foreach ($this->errors as $error) {
+                    $ret .= $error.'<br />';
+                }
+            }
+            return $ret;
+        }
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopssecurity.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsstory.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsstory.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsstory.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,434 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH."/class/xoopstopic.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsuser.php";
+
+class XoopsStory
+{
+    var $table;
+	var $storyid;
+	var $topicid;
+	var $uid;
+	var $title;
+	var $hometext;
+	var $bodytext="";
+	var $counter;
+	var $created;
+	var $published;
+	var $expired;
+	var $hostname;
+	var $nohtml=0;
+	var $nosmiley=0;
+	var $ihome=0;
+	var $notifypub=0;
+	var $type;
+	var $approved;
+	var $topicdisplay;
+	var $topicalign;
+	var $db;
+	var $topicstable;
+	var $comments;
+
+	function Story($storyid=-1)
+	{
+		$this->db =& Database::getInstance();
+		$this->table = "";
+		$this->topicstable = "";
+		if ( is_array($storyid) ) {
+			$this->makeStory($storyid);
+		} elseif ( $storyid != -1 ) {
+			$this->getStory(intval($storyid));
+		}
+	}
+
+	function setStoryId($value)
+	{
+		$this->storyid = intval($value);
+	}
+
+	function setTopicId($value)
+	{
+		$this->topicid = intval($value);
+	}
+
+	function setUid($value)
+	{
+		$this->uid = intval($value);
+	}
+
+	function setTitle($value)
+	{
+		$this->title = $value;
+	}
+
+	function setHometext($value)
+	{
+		$this->hometext = $value;
+	}
+
+	function setBodytext($value)
+	{
+		$this->bodytext = $value;
+	}
+
+	function setPublished($value)
+	{
+		$this->published = intval($value);
+	}
+
+	function setExpired($value)
+	{
+		$this->expired = intval($value);
+	}
+
+	function setHostname($value)
+	{
+		$this->hostname = $value;
+	}
+
+	function setNohtml($value=0)
+	{
+		$this->nohtml = $value;
+	}
+
+	function setNosmiley($value=0)
+	{
+		$this->nosmiley = $value;
+	}
+
+	function setIhome($value)
+	{
+		$this->ihome = $value;
+	}
+
+	function setNotifyPub($value)
+	{
+		$this->notifypub = $value;
+	}
+
+	function setType($value)
+	{
+		$this->type = $value;
+	}
+
+	function setApproved($value)
+	{
+		$this->approved = intval($value);
+	}
+
+	function setTopicdisplay($value)
+	{
+		$this->topicdisplay = $value;
+	}
+
+	function setTopicalign($value)
+	{
+		$this->topicalign = $value;
+	}
+
+	function setComments($value)
+	{
+		$this->comments = intval($value);
+	}
+
+	function store($approved=false)
+	{
+		//$newpost = 0;
+		$myts =& MyTextSanitizer::getInstance();
+		$title =$myts->censorString($this->title);
+		$hometext =$myts->censorString($this->hometext);
+		$bodytext =$myts->censorString($this->bodytext);
+		$title = $myts->makeTboxData4Save($title);
+		$hometext = $myts->makeTareaData4Save($hometext);
+		$bodytext = $myts->makeTareaData4Save($bodytext);
+		if ( !isset($this->nohtml) || $this->nohtml != 1 ) {
+			$this->nohtml = 0;
+		}
+		if ( !isset($this->nosmiley) || $this->nosmiley != 1 ) {
+			$this->nosmiley = 0;
+		}
+		if ( !isset($this->notifypub) || $this->notifypub != 1 ) {
+			$this->notifypub = 0;
+		}
+		if( !isset($this->topicdisplay) || $this->topicdisplay != 0 ) {
+			$this->topicdisplay = 1;
+		}
+		$expired = !empty($this->expired) ? $this->expired : 0;
+		if ( !isset($this->storyid) ) {
+			//$newpost = 1;
+			$newstoryid = $this->db->genId($this->table."_storyid_seq");
+			$created = time();
+			$published = ( $this->approved ) ? $this->published : 0;
+
+			$sql = sprintf("INSERT INTO %s (storyid, uid, title, created, published, expired, hostname, nohtml, nosmiley, hometext, bodytext, counter, topicid, ihome, notifypub, story_type, topicdisplay, topicalign, comments) VALUES (%u, %u, '%s', %u, %u, %u, '%s', %u, %u, '%s', '%s', %u, %u, %u, %u, '%s', %u, '%s', %u)", $this->table, $newstoryid, $this->uid, $title, $created, $published, $expired, $this->hostname, $this->nohtml, $this->nosmiley, $hometext, $bodytext, 0, $this->topicid, $this->ihome, $this->notifypub, $this->type, $this->topicdisplay, $this->topicalign, $this->comments);
+		} else {
+			if ( $this->approved ) {
+				$sql = sprintf("UPDATE %s SET title = '%s', published = %u, expired = %u, nohtml = %u, nosmiley = %u, hometext = '%s', bodytext = '%s', topicid = %u, ihome = %u, topicdisplay = %u, topicalign = '%s', comments = %u WHERE storyid = %u", $this->table, $title, $this->published, $expired, $this->nohtml, $this->nosmiley, $hometext, $bodytext, $this->topicid, $this->ihome, $this->topicdisplay, $this->topicalign, $this->comments, $this->storyid);
+			} else {
+				$sql = sprintf("UPDATE %s SET title = '%s', expired = %u, nohtml = %u, nosmiley = %u, hometext = '%s', bodytext = '%s', topicid = %u, ihome = %u, topicdisplay = %u, topicalign = '%s', comments = %u WHERE storyid = %u", $this->table, $title, $expired, $this->nohtml, $this->nosmiley, $hometext, $bodytext, $this->topicid, $this->ihome, $this->topicdisplay, $this->topicalign, $this->comments, $this->storyid);
+			}
+			$newstoryid = $this->storyid;
+		}
+		if (!$result = $this->db->query($sql)) {
+			return false;
+		}
+		if ( empty($newstoryid) ) {
+			$newstoryid = $this->db->getInsertId();
+			$this->storyid = $newstoryid;
+		}
+		return $newstoryid;
+	}
+
+	function getStory($storyid)
+	{
+		$sql = "SELECT * FROM ".$this->table." WHERE storyid=".$storyid."";
+		$array = $this->db->fetchArray($this->db->query($sql));
+		$this->makeStory($array);
+	}
+
+	function makeStory($array)
+	{
+		foreach ( $array as $key=>$value ){
+			$this->$key = $value;
+		}
+	}
+
+	function delete()
+	{
+		$sql = sprintf("DELETE FROM %s WHERE storyid = %u", $this->table, $this->storyid);
+		if( !$result = $this->db->query($sql) ) {
+			return false;
+		}
+		return true;
+	}
+
+	function updateCounter()
+	{
+		$sql = sprintf("UPDATE %s SET counter = counter+1 WHERE storyid = %u", $this->table, $this->storyid);
+		if ( !$result = $this->db->queryF($sql) ) {
+			return false;
+		}
+		return true;
+	}
+
+	function updateComments($total)
+	{
+		$sql = sprintf("UPDATE %s SET comments = %u WHERE storyid = %u", $this->table, $total, $this->storyid);
+		if ( !$result = $this->db->queryF($sql) ) {
+			return false;
+		}
+		return true;
+	}
+
+	function topicid()
+	{
+		return $this->topicid;
+	}
+
+	function topic()
+	{
+		return new XoopsTopic($this->topicstable, $this->topicid);
+	}
+
+	function uid()
+	{
+		return $this->uid;
+	}
+
+	function uname()
+	{
+		return XoopsUser::getUnameFromId($this->uid);
+	}
+
+	function title($format="Show")
+	{
+		$myts =& MyTextSanitizer::getInstance();
+		$smiley = 1;
+		if ( $this->nosmiley() ) {
+			$smiley = 0;
+		}
+		switch ( $format ) {
+		case "Show":
+			$title = $myts->makeTboxData4Show($this->title,$smiley);
+			break;
+		case "Edit":
+			$title = $myts->makeTboxData4Edit($this->title);
+			break;
+		case "Preview":
+			$title = $myts->makeTboxData4Preview($this->title,$smiley);
+			break;
+		case "InForm":
+			$title = $myts->makeTboxData4PreviewInForm($this->title);
+			break;
+		}
+		return $title;
+	}
+
+	function hometext($format="Show")
+	{
+		$myts =& MyTextSanitizer::getInstance();
+		$html = 1;
+		$smiley = 1;
+		$xcodes = 1;
+		if ( $this->nohtml() ) {
+			$html = 0;
+		}
+		if ( $this->nosmiley() ) {
+			$smiley = 0;
+		}
+		switch ( $format ) {
+		case "Show":
+			$hometext = $myts->makeTareaData4Show($this->hometext,$html,$smiley,$xcodes);
+			break;
+		case "Edit":
+			$hometext = $myts->makeTareaData4Edit($this->hometext);
+			break;
+		case "Preview":
+			$hometext = $myts->makeTareaData4Preview($this->hometext,$html,$smiley,$xcodes);
+			break;
+		case "InForm":
+			$hometext = $myts->makeTareaData4PreviewInForm($this->hometext);
+			break;
+		}
+		return $hometext;
+	}
+
+	function bodytext($format="Show")
+	{
+		$myts =& MyTextSanitizer::getInstance();
+		$html = 1;
+		$smiley = 1;
+		$xcodes = 1;
+		if ( $this->nohtml() ) {
+			$html = 0;
+		}
+		if ( $this->nosmiley() ) {
+			$smiley = 0;
+		}
+		switch ( $format ) {
+		case "Show":
+			$bodytext = $myts->makeTareaData4Show($this->bodytext,$html,$smiley,$xcodes);
+			break;
+		case "Edit":
+			$bodytext = $myts->makeTareaData4Edit($this->bodytext);
+			break;
+		case "Preview":
+			$bodytext = $myts->makeTareaData4Preview($this->bodytext,$html,$smiley, $xcodes);
+			break;
+		case "InForm":
+			$bodytext = $myts->makeTareaData4PreviewInForm($this->bodytext);
+			break;
+		}
+		return $bodytext;
+	}
+
+	function counter()
+	{
+		return $this->counter;
+	}
+
+	function created()
+	{
+		return $this->created;
+	}
+
+	function published()
+	{
+		return $this->published;
+	}
+
+	function expired()
+	{
+		return $this->expired;
+	}
+
+	function hostname()
+	{
+		return $this->hostname;
+	}
+
+	function storyid()
+	{
+		return $this->storyid;
+	}
+
+	function nohtml()
+	{
+		return $this->nohtml;
+	}
+
+	function nosmiley()
+	{
+		return $this->nosmiley;
+	}
+
+	function notifypub()
+	{
+		return $this->notifypub;
+	}
+
+	function type()
+	{
+		return $this->type;
+	}
+
+	function ihome()
+	{
+		return $this->ihome;
+	}
+
+	function topicdisplay()
+	{
+		return $this->topicdisplay;
+	}
+
+	function topicalign($astext=true)
+	{
+		if ( $astext ) {
+			if ( $this->topicalign == "R" ) {
+				$ret = "right";
+			} else {
+				$ret = "left";
+			}
+			return $ret;
+		}
+		return $this->topicalign;
+	}
+
+	function comments()
+	{
+		return $this->comments;
+	}
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/class/xoopsstory.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopstopic.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopstopic.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopstopic.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,340 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH."/class/xoopstree.php";
+
+class XoopsTopic
+{
+	var $table;
+	var $topic_id;
+	var $topic_pid;
+	var $topic_title;
+	var $topic_imgurl;
+	var $prefix; // only used in topic tree
+	var $use_permission=false;
+	var $mid; // module id used for setting permission
+
+	function XoopsTopic($table, $topicid=0)
+	{
+		$this->db =& Database::getInstance();
+		$this->table = $table;
+		if ( is_array($topicid) ) {
+			$this->makeTopic($topicid);
+		} elseif ( $topicid != 0 ) {
+			$this->getTopic(intval($topicid));
+		} else {
+			$this->topic_id = $topicid;
+		}
+	}
+
+	function setTopicTitle($value)
+	{
+		$this->topic_title = $value;
+	}
+
+	function setTopicImgurl($value)
+	{
+		$this->topic_imgurl = $value;
+	}
+
+	function setTopicPid($value)
+	{
+		$this->topic_pid = $value;
+	}
+
+	function getTopic($topicid)
+	{
+		$sql = "SELECT * FROM ".$this->table." WHERE topic_id=".$topicid."";
+		$array = $this->db->fetchArray($this->db->query($sql));
+		$this->makeTopic($array);
+	}
+
+	function makeTopic($array)
+	{
+		foreach($array as $key=>$value){
+			$this->$key = $value;
+		}
+	}
+
+	function usePermission($mid)
+	{
+		$this->mid = $mid;
+		$this->use_permission = true;
+	}
+
+	function store()
+	{
+		$myts =& MyTextSanitizer::getInstance();
+		$title = "";
+		$imgurl = "";
+		if ( isset($this->topic_title) && $this->topic_title != "" ) {
+			$title = $myts->makeTboxData4Save($this->topic_title);
+		}
+		if ( isset($this->topic_imgurl) && $this->topic_imgurl != "" ) {
+			$imgurl = $myts->makeTboxData4Save($this->topic_imgurl);
+		}
+		if ( !isset($this->topic_pid) || !is_numeric($this->topic_pid) ) {
+			$this->topic_pid = 0;
+		}
+		if ( empty($this->topic_id) ) {
+			$this->topic_id = $this->db->genId($this->table."_topic_id_seq");
+			$sql = sprintf("INSERT INTO %s (topic_id, topic_pid, topic_imgurl, topic_title) VALUES (%u, %u, '%s', '%s')", $this->table, $this->topic_id, $this->topic_pid, $imgurl, $title);
+		} else {
+			$sql = sprintf("UPDATE %s SET topic_pid = %u, topic_imgurl = '%s', topic_title = '%s' WHERE topic_id = %u", $this->table, $this->topic_pid, $imgurl, $title, $this->topic_id);
+		}
+		if ( !$result = $this->db->query($sql) ) {
+			ErrorHandler::show('0022');
+		}
+		if ( $this->use_permission == true ) {
+			if ( empty($this->topic_id) ) {
+				$this->topic_id = $this->db->getInsertId();
+			}
+			$xt = new XoopsTree($this->table, "topic_id", "topic_pid");
+			$parent_topics = $xt->getAllParentId($this->topic_id);
+			if ( !empty($this->m_groups) && is_array($this->m_groups) ){
+				foreach ( $this->m_groups as $m_g ) {
+					$moderate_topics = XoopsPerms::getPermitted($this->mid, "ModInTopic", $m_g);
+					$add = true;
+					// only grant this permission when the group has this permission in all parent topics of the created topic
+					foreach($parent_topics as $p_topic){
+						if ( !in_array($p_topic, $moderate_topics) ) {
+							$add = false;
+							continue;
+						}
+					}
+					if ( $add == true ) {
+						$xp = new XoopsPerms();
+						$xp->setModuleId($this->mid);
+						$xp->setName("ModInTopic");
+						$xp->setItemId($this->topic_id);
+						$xp->store();
+						$xp->addGroup($m_g);
+					}
+				}
+			}
+			if ( !empty($this->s_groups) && is_array($this->s_groups) ){
+				foreach ( $s_groups as $s_g ) {
+					$submit_topics = XoopsPerms::getPermitted($this->mid, "SubmitInTopic", $s_g);
+					$add = true;
+					foreach($parent_topics as $p_topic){
+						if ( !in_array($p_topic, $submit_topics) ) {
+							$add = false;
+							continue;
+						}
+					}
+					if ( $add == true ) {
+						$xp = new XoopsPerms();
+						$xp->setModuleId($this->mid);
+						$xp->setName("SubmitInTopic");
+						$xp->setItemId($this->topic_id);
+						$xp->store();
+						$xp->addGroup($s_g);
+					}
+				}
+			}
+			if ( !empty($this->r_groups) && is_array($this->r_groups) ){
+				foreach ( $r_groups as $r_g ) {
+					$read_topics = XoopsPerms::getPermitted($this->mid, "ReadInTopic", $r_g);
+					$add = true;
+					foreach($parent_topics as $p_topic){
+						if ( !in_array($p_topic, $read_topics) ) {
+							$add = false;
+							continue;
+						}
+					}
+					if ( $add == true ) {
+						$xp = new XoopsPerms();
+						$xp->setModuleId($this->mid);
+						$xp->setName("ReadInTopic");
+						$xp->setItemId($this->topic_id);
+						$xp->store();
+						$xp->addGroup($r_g);
+					}
+				}
+			}
+		}
+		return true;
+	}
+
+	function delete()
+	{
+		$sql = sprintf("DELETE FROM %s WHERE topic_id = %u", $this->table, $this->topic_id);
+		$this->db->query($sql);
+	}
+
+	function topic_id()
+	{
+		return $this->topic_id;
+	}
+
+	function topic_pid()
+	{
+		return $this->topic_pid;
+	}
+
+	function topic_title($format="S")
+	{
+		$myts =& MyTextSanitizer::getInstance();
+		switch($format){
+			case "S":
+				$title = $myts->makeTboxData4Show($this->topic_title);
+				break;
+			case "E":
+				$title = $myts->makeTboxData4Edit($this->topic_title);
+				break;
+			case "P":
+				$title = $myts->makeTboxData4Preview($this->topic_title);
+				break;
+			case "F":
+				$title = $myts->makeTboxData4PreviewInForm($this->topic_title);
+				break;
+		}
+		return $title;
+	}
+
+	function topic_imgurl($format="S")
+	{
+		$myts =& MyTextSanitizer::getInstance();
+		switch($format){
+			case "S":
+				$imgurl= $myts->makeTboxData4Show($this->topic_imgurl);
+				break;
+			case "E":
+				$imgurl = $myts->makeTboxData4Edit($this->topic_imgurl);
+				break;
+			case "P":
+				$imgurl = $myts->makeTboxData4Preview($this->topic_imgurl);
+				break;
+			case "F":
+				$imgurl = $myts->makeTboxData4PreviewInForm($this->topic_imgurl);
+				break;
+		}
+		return $imgurl;
+	}
+
+	function prefix()
+	{
+		if ( isset($this->prefix) ) {
+			return $this->prefix;
+		}
+	}
+
+	function getFirstChildTopics()
+	{
+		$ret = array();
+		$xt = new XoopsTree($this->table, "topic_id", "topic_pid");
+		$topic_arr = $xt->getFirstChild($this->topic_id, "topic_title");
+		if ( is_array($topic_arr) && count($topic_arr) ) {
+			foreach($topic_arr as $topic){
+				$ret[] = new XoopsTopic($this->table, $topic);
+			}
+		}
+		return $ret;
+	}
+
+	function getAllChildTopics()
+	{
+		$ret = array();
+		$xt = new XoopsTree($this->table, "topic_id", "topic_pid");
+		$topic_arr = $xt->getAllChild($this->topic_id, "topic_title");
+		if ( is_array($topic_arr) && count($topic_arr) ) {
+			foreach($topic_arr as $topic){
+				$ret[] = new XoopsTopic($this->table, $topic);
+			}
+		}
+		return $ret;
+	}
+
+	function getChildTopicsTreeArray()
+	{
+		$ret = array();
+		$xt = new XoopsTree($this->table, "topic_id", "topic_pid");
+		$topic_arr = $xt->getChildTreeArray($this->topic_id, "topic_title");
+		if ( is_array($topic_arr) && count($topic_arr) ) {
+			foreach($topic_arr as $topic){
+				$ret[] = new XoopsTopic($this->table, $topic);
+			}
+		}
+		return $ret;
+	}
+
+	function makeTopicSelBox($none=0, $seltopic=-1, $selname="", $onchange="")
+	{
+		$xt = new XoopsTree($this->table, "topic_id", "topic_pid");
+		if ( $seltopic != -1 ) {
+			$xt->makeMySelBox("topic_title", "topic_title", $seltopic, $none, $selname, $onchange);
+		} elseif ( !empty($this->topic_id) ) {
+			$xt->makeMySelBox("topic_title", "topic_title", $this->topic_id, $none, $selname, $onchange);
+		} else {
+			$xt->makeMySelBox("topic_title", "topic_title", 0, $none, $selname, $onchange);
+		}
+	}
+
+	//generates nicely formatted linked path from the root id to a given id
+	function getNiceTopicPathFromId($funcURL)
+	{
+		$xt = new XoopsTree($this->table, "topic_id", "topic_pid");
+		$ret = $xt->getNicePathFromId($this->topic_id, "toppic_title", $funcURL);
+		return $ret;
+	}
+
+	function getAllChildTopicsId()
+	{
+		$xt = new XoopsTree($this->table, "topic_id", "topic_pid");
+		$ret = $xt->getAllChildId($this->topic_id, "toppic_title");
+		return $ret;
+	}
+
+	function &getTopicsList()
+	{
+		$result = $this->db->query('SELECT topic_id, topic_pid, topic_title FROM '.$this->table);
+		$ret = array();
+		$myts =& MyTextSanitizer::getInstance();
+		while ($myrow = $this->db->fetchArray($result)) {
+			$ret[$myrow['topic_id']] = array('title' => $myts->htmlspecialchars($myrow['topic_title']), 'pid' => $myrow['topic_pid']);
+		}
+		return $ret;
+	}
+
+	function topicExists($pid, $title) {
+		$sql = "SELECT COUNT(*) from ".$this->table." WHERE topic_pid = ".intval($pid)." AND topic_title = '".trim($title)."'";
+		$rs = $this->db->query($sql);
+        list($count) = $this->db->fetchRow($rs);
+		if ($count > 0) {
+			return true;
+		} else {
+			return false;
+		}
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopstopic.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopstree.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopstree.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopstree.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,257 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+class XoopsTree
+{
+	var $table;     //table with parent-child structure
+	var $id;    //name of unique id for records in table $table
+	var $pid;     // name of parent id used in table $table
+	var $order;    //specifies the order of query results
+	var $title;     // name of a field in table $table which will be used when  selection box and paths are generated
+	var $db;
+
+	//constructor of class XoopsTree
+	//sets the names of table, unique id, and parend id
+	function XoopsTree($table_name, $id_name, $pid_name)
+	{
+		$this->db =& Database::getInstance();
+		$this->table = $table_name;
+		$this->id = $id_name;
+		$this->pid = $pid_name;
+	}
+
+
+	// returns an array of first child objects for a given id($sel_id)
+	function getFirstChild($sel_id, $order="")
+	{
+		$arr =array();
+		$sql = "SELECT * FROM ".$this->table." WHERE ".$this->pid."=".$sel_id."";
+		if ( $order != "" ) {
+			$sql .= " ORDER BY $order";
+		}
+		$result = $this->db->query($sql);
+		$count = $this->db->getRowsNum($result);
+		if ( $count==0 ) {
+			return $arr;
+		}
+		while ( $myrow=$this->db->fetchArray($result) ) {
+			array_push($arr, $myrow);
+		}
+		return $arr;
+	}
+
+	// returns an array of all FIRST child ids of a given id($sel_id)
+	function getFirstChildId($sel_id)
+	{
+		$idarray =array();
+		$result = $this->db->query("SELECT ".$this->id." FROM ".$this->table." WHERE ".$this->pid."=".$sel_id."");
+		$count = $this->db->getRowsNum($result);
+		if ( $count == 0 ) {
+			return $idarray;
+		}
+		while ( list($id) = $this->db->fetchRow($result) ) {
+			array_push($idarray, $id);
+		}
+		return $idarray;
+	}
+
+	//returns an array of ALL child ids for a given id($sel_id)
+	function getAllChildId($sel_id, $order="", $idarray = array())
+	{
+		$sql = "SELECT ".$this->id." FROM ".$this->table." WHERE ".$this->pid."=".$sel_id."";
+		if ( $order != "" ) {
+			$sql .= " ORDER BY $order";
+		}
+		$result=$this->db->query($sql);
+		$count = $this->db->getRowsNum($result);
+		if ( $count==0 ) {
+			return $idarray;
+		}
+		while ( list($r_id) = $this->db->fetchRow($result) ) {
+			array_push($idarray, $r_id);
+			$idarray = $this->getAllChildId($r_id,$order,$idarray);
+		}
+		return $idarray;
+	}
+
+	//returns an array of ALL parent ids for a given id($sel_id)
+	function getAllParentId($sel_id, $order="", $idarray = array())
+	{
+		$sql = "SELECT ".$this->pid." FROM ".$this->table." WHERE ".$this->id."=".$sel_id."";
+		if ( $order != "" ) {
+			$sql .= " ORDER BY $order";
+		}
+		$result=$this->db->query($sql);
+		list($r_id) = $this->db->fetchRow($result);
+		if ( $r_id == 0 ) {
+			return $idarray;
+		}
+		array_push($idarray, $r_id);
+		$idarray = $this->getAllParentId($r_id,$order,$idarray);
+		return $idarray;
+	}
+
+	//generates path from the root id to a given id($sel_id)
+	// the path is delimetered with "/"
+	function getPathFromId($sel_id, $title, $path="")
+	{
+		$result = $this->db->query("SELECT ".$this->pid.", ".$title." FROM ".$this->table." WHERE ".$this->id."=$sel_id");
+		if ( $this->db->getRowsNum($result) == 0 ) {
+			return $path;
+		}
+		list($parentid,$name) = $this->db->fetchRow($result);
+		$myts =& MyTextSanitizer::getInstance();
+		$name = $myts->makeTboxData4Show($name);
+		$path = "/".$name.$path."";
+		if ( $parentid == 0 ) {
+			return $path;
+		}
+		$path = $this->getPathFromId($parentid, $title, $path);
+		return $path;
+	}
+
+	//makes a nicely ordered selection box
+	//$preset_id is used to specify a preselected item
+	//set $none to 1 to add a option with value 0
+	function makeMySelBox($title,$order="",$preset_id=0, $none=0, $sel_name="", $onchange="")
+	{
+		if ( $sel_name == "" ) {
+			$sel_name = $this->id;
+		}
+		$myts =& MyTextSanitizer::getInstance();
+		echo "<select name='".$sel_name."'";
+		if ( $onchange != "" ) {
+			echo " onchange='".$onchange."'";
+		}
+		echo ">\n";
+		$sql = "SELECT ".$this->id.", ".$title." FROM ".$this->table." WHERE ".$this->pid."=0";
+		if ( $order != "" ) {
+			$sql .= " ORDER BY $order";
+		}
+		$result = $this->db->query($sql);
+		if ( $none ) {
+			echo "<option value='0'>----</option>\n";
+		}
+		while ( list($catid, $name) = $this->db->fetchRow($result) ) {
+			$sel = "";
+			if ( $catid == $preset_id ) {
+				$sel = " selected='selected'";
+			}
+			echo "<option value='$catid'$sel>$name</option>\n";
+			$sel = "";
+			$arr = $this->getChildTreeArray($catid, $order);
+			foreach ( $arr as $option ) {
+				$option['prefix'] = str_replace(".","--",$option['prefix']);
+				$catpath = $option['prefix']."&nbsp;".$myts->makeTboxData4Show($option[$title]);
+				if ( $option[$this->id] == $preset_id ) {
+					$sel = " selected='selected'";
+				}
+				echo "<option value='".$option[$this->id]."'$sel>$catpath</option>\n";
+				$sel = "";
+			}
+		}
+		echo "</select>\n";
+	}
+
+	//generates nicely formatted linked path from the root id to a given id
+	function getNicePathFromId($sel_id, $title, $funcURL, $path="")
+	{
+		$sql = "SELECT ".$this->pid.", ".$title." FROM ".$this->table." WHERE ".$this->id."=$sel_id";
+		$result = $this->db->query($sql);
+		if ( $this->db->getRowsNum($result) == 0 ) {
+			return $path;
+		}
+		list($parentid,$name) = $this->db->fetchRow($result);
+		$myts =& MyTextSanitizer::getInstance();
+		$name = $myts->makeTboxData4Show($name);
+		$path = "<a href='".$funcURL."&".$this->id."=".$sel_id."'>".$name."</a>&nbsp;:&nbsp;".$path."";
+		if ( $parentid == 0 ) {
+			return $path;
+		}
+		$path = $this->getNicePathFromId($parentid, $title, $funcURL, $path);
+		return $path;
+	}
+
+	//generates id path from the root id to a given id
+	// the path is delimetered with "/"
+	function getIdPathFromId($sel_id, $path="")
+	{
+		$result = $this->db->query("SELECT ".$this->pid." FROM ".$this->table." WHERE ".$this->id."=$sel_id");
+		if ( $this->db->getRowsNum($result) == 0 ) {
+			return $path;
+		}
+		list($parentid) = $this->db->fetchRow($result);
+		$path = "/".$sel_id.$path."";
+		if ( $parentid == 0 ) {
+			return $path;
+		}
+		$path = $this->getIdPathFromId($parentid, $path);
+		return $path;
+	}
+
+	function getAllChild($sel_id=0,$order="",$parray = array())
+	{
+		$sql = "SELECT * FROM ".$this->table." WHERE ".$this->pid."=".$sel_id."";
+		if ( $order != "" ) {
+			$sql .= " ORDER BY $order";
+		}
+		$result = $this->db->query($sql);
+		$count = $this->db->getRowsNum($result);
+		if ( $count == 0 ) {
+			return $parray;
+		}
+		while ( $row = $this->db->fetchArray($result) ) {
+			array_push($parray, $row);
+			$parray=$this->getAllChild($row[$this->id],$order,$parray);
+		}
+		return $parray;
+	}
+
+	function getChildTreeArray($sel_id=0,$order="",$parray = array(),$r_prefix="")
+	{
+		$sql = "SELECT * FROM ".$this->table." WHERE ".$this->pid."=".$sel_id."";
+		if ( $order != "" ) {
+			$sql .= " ORDER BY $order";
+		}
+		$result = $this->db->query($sql);
+		$count = $this->db->getRowsNum($result);
+		if ( $count == 0 ) {
+			return $parray;
+		}
+		while ( $row = $this->db->fetchArray($result) ) {
+			$row['prefix'] = $r_prefix.".";
+			array_push($parray, $row);
+			$parray = $this->getChildTreeArray($row[$this->id],$order,$parray,$row['prefix']);
+		}
+		return $parray;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopstree.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/xoopsuser.php
===================================================================
--- XoopsCore/trunk/htdocs/class/xoopsuser.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/xoopsuser.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,8 @@
+<?php
+// $Id$
+// this file is for backward compatibility only
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+require_once XOOPS_ROOT_PATH.'/kernel/user.php';
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/xoopsuser.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/class/zipdownloader.php
===================================================================
--- XoopsCore/trunk/htdocs/class/zipdownloader.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/class/zipdownloader.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,82 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH.'/class/downloader.php';
+include_once XOOPS_ROOT_PATH.'/class/class.zipfile.php';
+
+class XoopsZipDownloader extends XoopsDownloader
+{
+	function XoopsZipDownloader($ext = '.zip', $mimyType = 'application/x-zip')
+	{
+		$this->archiver = new zipfile();
+		$this->ext      = trim($ext);
+		$this->mimeType = trim($mimyType);
+	}
+
+	function addFile($filepath, $newfilename=null)
+	{
+		// Read in the file's contents
+		$fp = fopen($filepath, "r");
+		$data = fread($fp, filesize($filepath));
+		fclose($fp);
+		$filename = (isset($newfilename) && trim($newfilename) != '') ? trim($newfilename) : $filepath;
+		$this->archiver->addFile($data, $filename, filemtime($filename));
+	}
+
+	function addBinaryFile($filepath, $newfilename=null)
+	{
+		// Read in the file's contents
+		$fp = fopen($filepath, "rb");
+		$data = fread($fp, filesize($filepath));
+		fclose($fp);
+		$filename = (isset($newfilename) && trim($newfilename) != '') ? trim($newfilename) : $filepath;
+		$this->archiver->addFile($data, $filename, filemtime($filename));
+	}
+
+	function addFileData(&$data, $filename, $time=0)
+	{
+		$this->archiver->addFile($data, $filename, $time);
+	}
+
+	function addBinaryFileData(&$data, $filename, $time=0)
+	{
+		$this->addFileData($data, $filename, $time);
+	}
+
+	function download($name, $gzip = true)
+	{
+		$this->_header($name.$this->ext);
+		echo $this->archiver->file();
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/class/zipdownloader.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/edituser.php
===================================================================
--- XoopsCore/trunk/htdocs/edituser.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/edituser.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,378 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$xoopsOption['pagetype'] = 'user';
+include 'mainfile.php';
+include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+
+// If not a user, redirect
+if (!is_object($xoopsUser)) {
+    redirect_header('index.php',3,_US_NOEDITRIGHT);
+    exit();
+}
+
+// initialize $op variable
+$op = 'editprofile';
+if (!empty($_POST['op'])) {
+    $op = $_POST['op'];
+}
+if (!empty($_GET['op'])) {
+    $op = $_GET['op'];
+}
+
+$config_handler =& xoops_gethandler('config');
+$xoopsConfigUser =& $config_handler->getConfigsByCat(XOOPS_CONF_USER);
+
+if ($op == 'saveuser') {
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header('index.php',3,_US_NOEDITRIGHT."<br />".implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        exit;
+    }
+    $uid = 0;
+    if (!empty($_POST['uid'])) {
+        $uid = intval($_POST['uid']);
+    }
+    if (empty($uid) || $xoopsUser->getVar('uid') != $uid) {
+        redirect_header('index.php',3,_US_NOEDITRIGHT);
+        exit();
+    }
+    $errors = array();
+    $myts =& MyTextSanitizer::getInstance();
+    if ($xoopsConfigUser['allow_chgmail'] == 1) {
+        $email = '';
+        if (!empty($_POST['email'])) {
+            $email = $myts->stripSlashesGPC(trim($_POST['email']));
+        }
+        if ($email == '' || !checkEmail($email)) {
+            $errors[] = _US_INVALIDMAIL;
+        }
+    }
+    $password = '';
+    if (!empty($_POST['password'])) {
+        $password = $myts->stripSlashesGPC(trim($_POST['password']));
+    }
+    if ($password != '') {
+        if (strlen($password) < $xoopsConfigUser['minpass']) {
+            $errors[] = sprintf(_US_PWDTOOSHORT,$xoopsConfigUser['minpass']);
+        }
+        $vpass = '';
+        if (!empty($_POST['vpass'])) {
+            $vpass = $myts->stripSlashesGPC(trim($_POST['vpass']));
+        }
+        if ($password != $vpass) {
+            $errors[] = _US_PASSNOTSAME;
+        }
+    }
+    if (count($errors) > 0) {
+        include XOOPS_ROOT_PATH.'/header.php';
+        echo '<div>';
+        foreach ($errors as $er) {
+            echo '<span style="color: #ff0000; font-weight: bold;">'.$er.'</span><br />';
+        }
+        echo '</div><br />';
+        $op = 'editprofile';
+    } else {
+        $member_handler =& xoops_gethandler('member');
+        $edituser =& $member_handler->getUser($uid);
+        $edituser->setVar('name', $_POST['name']);
+        if ($xoopsConfigUser['allow_chgmail'] == 1) {
+            $edituser->setVar('email', $email, true);
+        }
+        $edituser->setVar('url', formatURL($_POST['url']));
+        $edituser->setVar('user_icq', $_POST['user_icq']);
+        $edituser->setVar('user_from', $_POST['user_from']);
+        $edituser->setVar('user_sig', xoops_substr($_POST['user_sig'], 0, 255));
+        $user_viewemail = (!empty($_POST['user_viewemail'])) ? 1 : 0;
+        $edituser->setVar('user_viewemail', $user_viewemail);
+        $edituser->setVar('user_aim', $_POST['user_aim']);
+        $edituser->setVar('user_yim', $_POST['user_yim']);
+        $edituser->setVar('user_msnm', $_POST['user_msnm']);
+        if ($password != '') {
+            $edituser->setVar('pass', md5($password), true);
+        }
+        $attachsig = !empty($_POST['attachsig']) ? 1 : 0;
+        $edituser->setVar('attachsig', $attachsig);
+        $edituser->setVar('timezone_offset', $_POST['timezone_offset']);
+        $edituser->setVar('uorder', $_POST['uorder']);
+        $edituser->setVar('umode', $_POST['umode']);
+        $edituser->setVar('notify_method', $_POST['notify_method']);
+        $edituser->setVar('notify_mode', $_POST['notify_mode']);
+        $edituser->setVar('bio', xoops_substr($_POST['bio'], 0, 255));
+        $edituser->setVar('user_occ', $_POST['user_occ']);
+        $edituser->setVar('user_intrest', $_POST['user_intrest']);
+        $edituser->setVar('user_mailok', $_POST['user_mailok']);
+        if (!empty($_POST['usecookie'])) {
+            setcookie($xoopsConfig['usercookie'], $xoopsUser->getVar('uname'), time()+ 31536000);
+        } else {
+            setcookie($xoopsConfig['usercookie']);
+        }
+        if (!$member_handler->insertUser($edituser)) {
+            include XOOPS_ROOT_PATH.'/header.php';
+            echo $edituser->getHtmlErrors();
+            include XOOPS_ROOT_PATH.'/footer.php';
+        } else {
+            redirect_header('userinfo.php?uid='.$uid, 1, _US_PROFUPDATED);
+        }
+        exit();
+    }
+}
+
+
+if ($op == 'editprofile') {
+    include_once XOOPS_ROOT_PATH.'/header.php';
+    include_once XOOPS_ROOT_PATH.'/include/comment_constants.php';
+    echo '<a href="userinfo.php?uid='.$xoopsUser->getVar('uid').'">'. _US_PROFILE .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'. _US_EDITPROFILE .'<br /><br />';
+    $form = new XoopsThemeForm(_US_EDITPROFILE, 'userinfo', 'edituser.php', 'post', true);
+    $uname_label = new XoopsFormLabel(_US_NICKNAME, $xoopsUser->getVar('uname'));
+    $form->addElement($uname_label);
+    $name_text = new XoopsFormText(_US_REALNAME, 'name', 30, 60, $xoopsUser->getVar('name', 'E'));
+    $form->addElement($name_text);
+    $email_tray = new XoopsFormElementTray(_US_EMAIL, '<br />');
+    if ($xoopsConfigUser['allow_chgmail'] == 1) {
+        $email_text = new XoopsFormText('', 'email', 30, 60, $xoopsUser->getVar('email'));
+    } else {
+        $email_text = new XoopsFormLabel('', $xoopsUser->getVar('email'));
+    }
+    $email_tray->addElement($email_text);
+    $email_cbox_value = $xoopsUser->user_viewemail() ? 1 : 0;
+    $email_cbox = new XoopsFormCheckBox('', 'user_viewemail', $email_cbox_value);
+    $email_cbox->addOption(1, _US_ALLOWVIEWEMAIL);
+    $email_tray->addElement($email_cbox);
+    $form->addElement($email_tray);
+    $url_text = new XoopsFormText(_US_WEBSITE, 'url', 30, 100, $xoopsUser->getVar('url', 'E'));
+    $form->addElement($url_text);
+
+    $timezone_select = new XoopsFormSelectTimezone(_US_TIMEZONE, 'timezone_offset', $xoopsUser->getVar('timezone_offset'));
+    $icq_text = new XoopsFormText(_US_ICQ, 'user_icq', 15, 15, $xoopsUser->getVar('user_icq', 'E'));
+    $aim_text = new XoopsFormText(_US_AIM, 'user_aim', 18, 18, $xoopsUser->getVar('user_aim', 'E'));
+    $yim_text = new XoopsFormText(_US_YIM, 'user_yim', 25, 25, $xoopsUser->getVar('user_yim', 'E'));
+    $msnm_text = new XoopsFormText(_US_MSNM, 'user_msnm', 30, 100, $xoopsUser->getVar('user_msnm', 'E'));
+    $location_text = new XoopsFormText(_US_LOCATION, 'user_from', 30, 100, $xoopsUser->getVar('user_from', 'E'));
+    $occupation_text = new XoopsFormText(_US_OCCUPATION, 'user_occ', 30, 100, $xoopsUser->getVar('user_occ', 'E'));
+    $interest_text = new XoopsFormText(_US_INTEREST, 'user_intrest', 30, 150, $xoopsUser->getVar('user_intrest', 'E'));
+    $sig_tray = new XoopsFormElementTray(_US_SIGNATURE, '<br />');
+    include_once 'include/xoopscodes.php';
+    $sig_tarea = new XoopsFormDhtmlTextArea('', 'user_sig', $xoopsUser->getVar('user_sig', 'E'));
+    $sig_tray->addElement($sig_tarea);
+    $sig_cbox_value = $xoopsUser->getVar('attachsig') ? 1 : 0;
+    $sig_cbox = new XoopsFormCheckBox('', 'attachsig', $sig_cbox_value);
+    $sig_cbox->addOption(1, _US_SHOWSIG);
+    $sig_tray->addElement($sig_cbox);
+    $umode_select = new XoopsFormSelect(_US_CDISPLAYMODE, 'umode', $xoopsUser->getVar('umode'));
+    $umode_select->addOptionArray(array('nest'=>_NESTED, 'flat'=>_FLAT, 'thread'=>_THREADED));
+    $uorder_select = new XoopsFormSelect(_US_CSORTORDER, 'uorder', $xoopsUser->getVar('uorder'));
+    $uorder_select->addOptionArray(array(XOOPS_COMMENT_OLD1ST => _OLDESTFIRST, XOOPS_COMMENT_NEW1ST => _NEWESTFIRST));
+    // RMV-NOTIFY
+    // TODO: add this to admin user-edit functions...
+    include_once XOOPS_ROOT_PATH . "/language/" . $xoopsConfig['language'] . '/notification.php';
+    include_once XOOPS_ROOT_PATH . '/include/notification_constants.php';
+    $notify_method_select = new XoopsFormSelect(_NOT_NOTIFYMETHOD, 'notify_method', $xoopsUser->getVar('notify_method'));
+    $notify_method_select->addOptionArray(array(XOOPS_NOTIFICATION_METHOD_DISABLE=>_NOT_METHOD_DISABLE, XOOPS_NOTIFICATION_METHOD_PM=>_NOT_METHOD_PM, XOOPS_NOTIFICATION_METHOD_EMAIL=>_NOT_METHOD_EMAIL));
+    $notify_mode_select = new XoopsFormSelect(_NOT_NOTIFYMODE, 'notify_mode', $xoopsUser->getVar('notify_mode'));
+    $notify_mode_select->addOptionArray(array(XOOPS_NOTIFICATION_MODE_SENDALWAYS=>_NOT_MODE_SENDALWAYS, XOOPS_NOTIFICATION_MODE_SENDONCETHENDELETE=>_NOT_MODE_SENDONCE, XOOPS_NOTIFICATION_MODE_SENDONCETHENWAIT=>_NOT_MODE_SENDONCEPERLOGIN));
+    $bio_tarea = new XoopsFormTextArea(_US_EXTRAINFO, 'bio', $xoopsUser->getVar('bio', 'E'));
+    $cookie_radio_value = empty($_COOKIE[$xoopsConfig['usercookie']]) ? 0 : 1;
+    $cookie_radio = new XoopsFormRadioYN(_US_USECOOKIE, 'usecookie', $cookie_radio_value, _YES, _NO);
+    $pwd_text = new XoopsFormPassword('', 'password', 10, 32);
+    $pwd_text2 = new XoopsFormPassword('', 'vpass', 10, 32);
+    $pwd_tray = new XoopsFormElementTray(_US_PASSWORD.'<br />'._US_TYPEPASSTWICE);
+    $pwd_tray->addElement($pwd_text);
+    $pwd_tray->addElement($pwd_text2);
+    $mailok_radio = new XoopsFormRadioYN(_US_MAILOK, 'user_mailok', $xoopsUser->getVar('user_mailok'));
+    $uid_hidden = new XoopsFormHidden('uid', $xoopsUser->getVar('uid'));
+    $op_hidden = new XoopsFormHidden('op', 'saveuser');
+    $submit_button = new XoopsFormButton('', 'submit', _US_SAVECHANGES, 'submit');
+
+    $form->addElement($timezone_select);
+    $form->addElement($icq_text);
+    $form->addElement($aim_text);
+    $form->addElement($yim_text);
+    $form->addElement($msnm_text);
+    $form->addElement($location_text);
+    $form->addElement($occupation_text);
+    $form->addElement($interest_text);
+    $form->addElement($sig_tray);
+    $form->addElement($umode_select);
+    $form->addElement($uorder_select);
+    $form->addElement($notify_method_select);
+    $form->addElement($notify_mode_select);
+    $form->addElement($bio_tarea);
+    $form->addElement($pwd_tray);
+    $form->addElement($cookie_radio);
+    $form->addElement($mailok_radio);
+    $form->addElement($uid_hidden);
+    $form->addElement($op_hidden);
+    $form->addElement($token_hidden);
+    $form->addElement($submit_button);
+    if ($xoopsConfigUser['allow_chgmail'] == 1) {
+        $form->setRequired($email_text);
+    }
+    $form->display();
+    include XOOPS_ROOT_PATH.'/footer.php';
+}
+
+
+if ($op == 'avatarform') {
+    include XOOPS_ROOT_PATH.'/header.php';
+    echo '<a href="userinfo.php?uid='.$xoopsUser->getVar('uid').'">'. _US_PROFILE .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'. _US_UPLOADMYAVATAR .'<br /><br />';
+    $oldavatar = $xoopsUser->getVar('user_avatar');
+    if (!empty($oldavatar) && $oldavatar != 'blank.gif') {
+        echo '<div style="text-align:center;"><h4 style="color:#ff0000; font-weight:bold;">'._US_OLDDELETED.'</h4>';
+        echo '<img src="'.XOOPS_UPLOAD_URL.'/'.$oldavatar.'" alt="" /></div>';
+    }
+    if ($xoopsConfigUser['avatar_allow_upload'] == 1 && $xoopsUser->getVar('posts') >= $xoopsConfigUser['avatar_minposts']) {
+        include_once 'class/xoopsformloader.php';
+        $form = new XoopsThemeForm(_US_UPLOADMYAVATAR, 'uploadavatar', 'edituser.php', 'post', true);
+        $form->setExtra('enctype="multipart/form-data"');
+        $form->addElement(new XoopsFormLabel(_US_MAXPIXEL, $xoopsConfigUser['avatar_width'].' x '.$xoopsConfigUser['avatar_height']));
+        $form->addElement(new XoopsFormLabel(_US_MAXIMGSZ, $xoopsConfigUser['avatar_maxsize']));
+        $form->addElement(new XoopsFormFile(_US_SELFILE, 'avatarfile', $xoopsConfigUser['avatar_maxsize']), true);
+        $form->addElement(new XoopsFormHidden('op', 'avatarupload'));
+        $form->addElement(new XoopsFormHidden('uid', $xoopsUser->getVar('uid')));
+        $form->addElement(new XoopsFormButton('', 'submit', _SUBMIT, 'submit'));
+            $form->display();
+    }
+    $avatar_handler =& xoops_gethandler('avatar');
+    $form2 = new XoopsThemeForm(_US_CHOOSEAVT, 'uploadavatar', 'edituser.php', 'post', true);
+    $avatar_select = new XoopsFormSelect('', 'user_avatar', $xoopsUser->getVar('user_avatar'));
+    $avatar_select->addOptionArray($avatar_handler->getList('S'));
+    $avatar_select->setExtra("onchange='showImgSelected(\"avatar\", \"user_avatar\", \"uploads\", \"\", \"".XOOPS_URL."\")'");
+    $avatar_tray = new XoopsFormElementTray(_US_AVATAR, '&nbsp;');
+    $avatar_tray->addElement($avatar_select);
+    $avatar_tray->addElement(new XoopsFormLabel('', "<img src='".XOOPS_UPLOAD_URL."/".$xoopsUser->getVar("user_avatar", "E")."' name='avatar' id='avatar' alt='' /> <a href=\"javascript:openWithSelfMain('".XOOPS_URL."/misc.php?action=showpopups&amp;type=avatars','avatars',600,400);\">"._LIST."</a>"));
+    $form2->addElement($avatar_tray);
+    $form2->addElement(new XoopsFormHidden('uid', $xoopsUser->getVar('uid')));
+    $form2->addElement(new XoopsFormHidden('op', 'avatarchoose'));
+    $form2->addElement(new XoopsFormButton('', 'submit2', _SUBMIT, 'submit'));
+    $form2->display();
+    include XOOPS_ROOT_PATH.'/footer.php';
+}
+
+if ($op == 'avatarupload') {
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header('index.php',3,_US_NOEDITRIGHT."<br />".implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        exit;
+    }
+    $xoops_upload_file = array();
+    $uid = 0;
+    if (!empty($_POST['xoops_upload_file']) && is_array($_POST['xoops_upload_file'])){
+        $xoops_upload_file = $_POST['xoops_upload_file'];
+    }
+    if (!empty($_POST['uid'])) {
+        $uid = intval($_POST['uid']);
+    }
+    if (empty($uid) || $xoopsUser->getVar('uid') != $uid ) {
+        redirect_header('index.php',3,_US_NOEDITRIGHT);
+        exit();
+    }
+    if ($xoopsConfigUser['avatar_allow_upload'] == 1 && $xoopsUser->getVar('posts') >= $xoopsConfigUser['avatar_minposts']) {
+        include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+        $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/x-png', 'image/png'), $xoopsConfigUser['avatar_maxsize'], $xoopsConfigUser['avatar_width'], $xoopsConfigUser['avatar_height']);
+        if ($uploader->fetchMedia($_POST['xoops_upload_file'][0])) {
+            $uploader->setPrefix('cavt');
+            if ($uploader->upload()) {
+                $avt_handler =& xoops_gethandler('avatar');
+                $avatar =& $avt_handler->create();
+                $avatar->setVar('avatar_file', $uploader->getSavedFileName());
+                $avatar->setVar('avatar_name', $xoopsUser->getVar('uname'));
+                $avatar->setVar('avatar_mimetype', $uploader->getMediaType());
+                $avatar->setVar('avatar_display', 1);
+                $avatar->setVar('avatar_type', 'C');
+                if (!$avt_handler->insert($avatar)) {
+                    @unlink($uploader->getSavedDestination());
+                } else {
+                    $oldavatar = $xoopsUser->getVar('user_avatar');
+                    if (!empty($oldavatar) && $oldavatar != 'blank.gif' && !preg_match("/^savt/", strtolower($oldavatar))) {
+                        $avatars =& $avt_handler->getObjects(new Criteria('avatar_file', $oldavatar));
+                        $avt_handler->delete($avatars[0]);
+                        $oldavatar_path = str_replace("\\", "/", realpath(XOOPS_UPLOAD_PATH.'/'.$oldavatar));
+                        if (0 === strpos($oldavatar_path, XOOPS_UPLOAD_PATH) && is_file($oldavatar_path)) {
+                            unlink($oldavatar_path);
+                        }
+                    }
+                    $sql = sprintf("UPDATE %s SET user_avatar = %s WHERE uid = %u", $xoopsDB->prefix('users'), $xoopsDB->quoteString($uploader->getSavedFileName()), $xoopsUser->getVar('uid'));
+                    $xoopsDB->query($sql);
+                    $avt_handler->addUser($avatar->getVar('avatar_id'), $xoopsUser->getVar('uid'));
+                    redirect_header('userinfo.php?t='.time().'&amp;uid='.$xoopsUser->getVar('uid'),0, _US_PROFUPDATED);
+                }
+            }
+        }
+        include XOOPS_ROOT_PATH.'/header.php';
+        echo $uploader->getErrors();
+        include XOOPS_ROOT_PATH.'/footer.php';
+    }
+}
+
+if ($op == 'avatarchoose') {
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header('index.php',3,_US_NOEDITRIGHT."<br />".implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        exit;
+    }
+    $uid = 0;
+    if (!empty($_POST['uid'])) {
+        $uid = intval($_POST['uid']);
+    }
+    if (empty($uid) || $xoopsUser->getVar('uid') != $uid ) {
+        redirect_header('index.php', 3, _US_NOEDITRIGHT);
+        exit();
+    }
+    $user_avatar = '';
+    if (!empty($_POST['user_avatar'])) {
+        $user_avatar = trim($_POST['user_avatar']);
+    }
+    $user_avatarpath = str_replace("\\", "/", realpath(XOOPS_UPLOAD_PATH.'/'.$user_avatar));
+    if (0 === strpos($user_avatarpath, XOOPS_UPLOAD_PATH) && is_file($user_avatarpath)) {
+        $oldavatar = $xoopsUser->getVar('user_avatar');
+        $xoopsUser->setVar('user_avatar', $user_avatar);
+        $member_handler =& xoops_gethandler('member');
+        if (!$member_handler->insertUser($xoopsUser)) {
+            include XOOPS_ROOT_PATH.'/header.php';
+            echo $xoopsUser->getHtmlErrors();
+            include XOOPS_ROOT_PATH.'/footer.php';
+            exit();
+        }
+        $avt_handler =& xoops_gethandler('avatar');
+        if ($oldavatar && $oldavatar != 'blank.gif' && !preg_match("/^savt/", strtolower($oldavatar))) {
+            $avatars =& $avt_handler->getObjects(new Criteria('avatar_file', $oldavatar));
+            if (is_object($avatars[0])) {
+                $avt_handler->delete($avatars[0]);
+            }
+            $oldavatar_path = str_replace("\\", "/", realpath(XOOPS_UPLOAD_PATH.'/'.$oldavatar));
+            if (0 === strpos($oldavatar_path, XOOPS_UPLOAD_PATH) && is_file($oldavatar_path)) {
+                unlink($oldavatar_path);
+            }
+        }
+        if ($user_avatar != 'blank.gif') {
+            $avatars =& $avt_handler->getObjects(new Criteria('avatar_file', $user_avatar));
+            if (is_object($avatars[0])) {
+                $avt_handler->addUser($avatars[0]->getVar('avatar_id'), $xoopsUser->getVar('uid'));
+            }
+        }
+    }
+    redirect_header('userinfo.php?uid='.$uid, 0, _US_PROFUPDATED);
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/edituser.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/extras/login.php
===================================================================
--- XoopsCore/trunk/htdocs/extras/login.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/extras/login.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,106 @@
+<?php
+// This script displays a login screen in a popupbox when SSL is enabled in the preferences. You should use this script only when your server supports SSL. Place this file under your SSL directory
+
+// path to your xoops main directory
+$path = '/path/to/xoops/directory';
+
+include $path.'/mainfile.php';
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/user.php';
+$op = (isset($_POST['op']) && $_POST['op'] == 'dologin') ? 'dologin' : 'login';
+
+$username = isset($_POST['username']) ? trim($_POST['username']) : '';
+$password = isset($_POST['userpass']) ? trim($_POST['userpass']) : '';
+if ($username == '' || $password == '') {
+    $op ='login';
+}
+
+echo '
+<html>
+  <head>
+    <meta http-equiv="content-type" content="text/html; charset='._CHARSET.'" />
+    <meta http-equiv="content-language" content="'._LANGCODE.'" />
+    <title>'.$xoopsConfig['sitename'].'</title>
+    <link rel="stylesheet" type="text/css" media="all" href="'.XOOPS_URL.'/xoops.css" />
+';
+$style = getcss($xoopsConfig['theme_set']);
+if ($style == '') {
+	$style = xoops_getcss($xoopsConfig['theme_set']);
+}
+if ($style != '') {
+	echo '<link rel="stylesheet" type="text/css" media="all" href="'.$style.'" />';
+}
+echo '
+  </head>
+  <body>
+';
+
+if ($op == 'dologin') {
+    $member_handler =& xoops_gethandler('member');
+    $myts =& MyTextsanitizer::getInstance();
+	$user =& $member_handler->loginUser(addslashes($myts->stripSlashesGPC($username)), addslashes($myts->stripSlashesGPC($password)));
+    if (is_object($user)) {
+		if (0 == $user->getVar('level')) {
+			redirect_header(XOOPS_URL.'/index.php', 5, _US_NOACTTPADM);
+			exit();
+		}
+		if ($xoopsConfig['closesite'] == 1) {
+			$allowed = false;
+			foreach ($user->getGroups() as $group) {
+				if (in_array($group, $xoopsConfig['closesite_okgrp']) || XOOPS_GROUP_ADMIN == $group) {
+					$allowed = true;
+					break;
+				}
+			}
+			if (!$allowed) {
+				redirect_header(XOOPS_URL.'/index.php', 1, _NOPERM);
+				exit();
+			}
+		}
+		$user->setVar('last_login', time());
+		if (!$member_handler->insertUser($user)) {
+		}
+		$_SESSION = array();
+		$_SESSION['xoopsUserId'] = $user->getVar('uid');
+		$_SESSION['xoopsUserGroups'] = $user->getGroups();
+		if (!empty($xoopsConfig['use_ssl'])) {
+			xoops_confirm(array($xoopsConfig['sslpost_name'] => session_id()), XOOPS_URL.'/misc.php?action=showpopups&amp;type=ssllogin', _US_PRESSLOGIN, _LOGIN);
+		} else {
+			echo sprintf(_US_LOGGINGU, $user->getVar('uname'));
+			echo '<div style="text-align:center;"><input value="'._CLOSE.'" type="button" onclick="document.window.opener.location.reload();document.window.close();" /></div>';
+		}
+    } else {
+        xoops_error(_US_INCORRECTLOGIN.'<br /><a href="login.php">'._BACK.'</a>');
+    }
+}
+
+if ($op == 'login') {
+	echo '
+    <div style="text-align: center; padding: 5; margin: 0">
+    <form action="login.php" method="post">
+      <table class="outer" width="95%">
+        <tr>
+          <td class="head">'._USERNAME.'</td>
+          <td class="even"><input type="text" name="username" value="" /></td>
+        </tr>
+        <tr>
+          <td class="head">'._PASSWORD.'</td>
+          <td class="even"><input type="password" name="userpass" value="" /></td>
+        </tr>
+        <tr>
+          <td class="head">&nbsp;</td>
+          <td class="even"><input type="hidden" name="op" value="dologin" /><input type="submit" name="submit" value="'._LOGIN.'" /></td>
+        </tr>
+      </table>
+    </form>
+    </div>
+	';
+}
+
+echo '
+  </body>
+</html>
+';
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/extras/login.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/extras/theme_x2t/doc/readme.htm
===================================================================
--- XoopsCore/trunk/htdocs/extras/theme_x2t/doc/readme.htm	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/extras/theme_x2t/doc/readme.htm	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,222 @@
+<html>
+<head>
+<title>Info</title>
+<script language="JavaScript">
+if (document.layers)
+alert("This script works with Internet Explorer 4x only.\n\nSorry, Netscape-folks!")
+var now
+
+var second
+
+var timer
+var i_loop=0
+
+function initiate() {
+    firstObj.Scale(10,10,0)
+    secondObj.Scale(.01,.01,0)
+    enlarge()
+}
+
+function enlarge() {
+    if (i_loop<=100) {
+        firstObj.Rotate(0,0,-12)
+        firstObj.Scale(0.9,0.9,0)
+	    secondObj.Rotate(0,0,12)
+        secondObj.Scale(1.11,1.11,0)
+
+        timer=setTimeout("enlarge()",20)
+        i_loop++
+    }
+    else {
+        clearTimeout(timer)
+        i_loop=0
+        reduce()
+    }
+}
+
+function reduce() {
+    if (i_loop<=100) {
+        firstObj.Rotate(0,0,12)
+        firstObj.Scale(1.11,1.11,0)
+	    secondObj.Rotate(0,0,-12)
+        secondObj.Scale(0.9,0.9,0)
+        timer=setTimeout("reduce()",20)
+        i_loop++
+    }
+    else {
+        clearTimeout(timer)
+        i_loop=0
+        enlarge()
+    }
+}
+
+// - End of JavaScript - -->
+</script>
+<style type="text/css">
+<!--
+a {  text-decoration: none}
+-->
+</style>
+</head>
+<body bgcolor=000000 onLoad="if(document.all){initiate()}" link="#FFCC00" vlink="#FFCC00" alink="#FFFFCC">
+<DIV style="position:absolute;top:55px;left:563px; width: 56px; height: 200px">
+  <OBJECT ID="firstObj" STYLE="width:200px;height:200px" CLASSID="CLSID:369303C2-D7AC-11D0-89D5-00A0C90833E6">
+<PARAM NAME="Line0001" VALUE="SetLineColor(255,0,0)">
+<PARAM NAME="Line0002" VALUE="SetFillColor(255,0,0)">
+<PARAM NAME="Line0003" VALUE="SetLineStyle(0)">
+<PARAM NAME="Line0004" VALUE="Polygon(461,11,11,12,8,14,6,18,4,21,2,25,1,28,0,30,-1,31,-3,30,-4,30,-6,29,-8,28,-9,27,-11,26,-12,24,-13,21,-14,19,-14,18,-13,16,-13
+,14,-12,13,-11,11,-11,9,-12,7,-14,2,-19,-1,-21,-3,-22,-5,-21,-5,-19,-6,-17,-6,-13,-6,-9,-6,-6,-6,-4,-7,-3,-8,-2,-9,0,-10,2,-11,4
+,-11,7,-10,13,-10,18,-10,22,-10,26,-10,30,-9,33,-7,37,-4,40,-2,41,0,42,1,42,3,42,4,40,6,39,8,36,10,33,12,32,16,32,21,32
+,26,33,30,34,35,35,38,35,40,34,41,31,42,29,43,27,44,26,44,25,45,24,47,23,49,21,54,15,57,6,59,-4,59,-13,57,-22,53,-29,49,-33
+,44,-33,42,-33,39,-34,35,-35,31,-37,27,-39,23,-40,20,-42,18,-42,14,-44,12,-45,10,-47,8,-48,6,-50,4,-51,3,-53,2,-54,-1,-55,-4,-55,-7,-53
+,-11,-50,-14,-46,-17,-41,-19,-37,-21,-32,-22,-28,-25,-23,-28,-19,-32,-15,-36,-11,-39,-8,-41,-4,-42,-1,-42,6,-41,9,-39,15,-36,29,-34,40,-34,51,-32,59
+,-31,66,-29,71,-25,73,-19,73,-10,70,-5,68,1,67,9,67,18,67,27,66,37,65,47,64,57,62,65,58,73,53,79,46,84,37,87,25,87,11,85,-6
+,79,-26,78,-31,79,-34,80,-36,82,-37,85,-38,87,-39,88,-41,88,-44,86,-47,83,-50,80,-53,75,-56,71,-60,68,-64,65,-70,64,-77,63,-80,61,-81,58,-82
+,55,-82,51,-81,48,-81,44,-81,41,-81,37,-83,33,-84,29,-86,26,-87,23,-89,20,-90,17,-91,15,-92,12,-93,10,-93,7,-94,4,-94,1,-94,-2,-94,-5,-94
+,-9,-93,-12,-92,-15,-90,-18,-88,-21,-84,-24,-81,-27,-77,-31,-73,-34,-69,-37,-65,-40,-61,-44,-57,-48,-54,-51,-52,-55,-50,-60,-49,-64,-49,-67,-48,-69,-45,-69,-42
+,-69,-37,-68,-31,-68,-26,-68,-20,-70,-15,-75,-3,-78,7,-79,17,-79,25,-78,31,-77,36,-78,40,-80,42,-81,43,-82,43,-82,44,-82,46,-81,46,-79,47,-76,47
+,-75,48,-74,51,-74,54,-75,56,-77,58,-79,60,-82,60,-84,58,-86,56,-91,47,-95,41,-97,36,-98,30,-98,24,-94,17,-88,8,-78,-4,-75,-10,-75,-18,-76,-26
+,-77,-34,-79,-42,-78,-48,-75,-53,-69,-54,-65,-55,-61,-56,-57,-58,-54,-61,-51,-64,-48,-67,-46,-71,-43,-75,-41,-79,-38,-83,-36,-87,-34,-90,-31,-93,-28,-96,-26,-98
+,-23,-99,-19,-99,-14,-100,-9,-100,-5,-100,0,-100,5,-100,10,-100,16,-100,21,-99,26,-98,31,-97,37,-96,42,-95,47,-94,51,-92,56,-91,59,-90,62,-89,66,-88
+,69,-86,72,-85,74,-83,76,-80,77,-77,77,-70,79,-65,81,-61,83,-58,86,-55,88,-53,90,-50,91,-47,91,-41,89,-34,89,-27,90,-18,95,-2,97,12,98,25
+,97,36,94,45,90,53,85,60,79,65,72,70,64,73,56,75,47,77,38,77,29,77,20,76,11,75,6,74,1,73,-4,74,-8,74,-12,75,-16,75,-18,76
+,-21,77,-27,79,-32,78,-38,76,-42,72,-44,66,-46,59,-45,50,-43,39,-42,36,-43,33,-44,29,-45,25,-47,20,-48,15,-49,10,-49,4,-48,1,-46,-5,-43,-12
+,-40,-19,-36,-27,-33,-34,-30,-41,-29,-47,-28,-49,-27,-51,-25,-53,-23,-54,-21,-55,-19,-57,-16,-58,-14,-58,-11,-59,-8,-59,-6,-59,-3,-59,-1,-59,1,-59,3,-58
+,4,-57,5,-56,7,-54,8,-53,10,-51,12,-50,14,-49,17,-47,20,-46,23,-45,26,-45,30,-45,34,-46,38,-46,42,-46,45,-47,47,-47,52,-46,57,-40,62,-30
+,65,-18,67,-5,67,8,64,19,59,26,57,28,55,29,53,31,50,32,48,33,46,35,44,37,43,40,41,42,38,42,35,43,31,43,26,43,22,43,19,44
+,17,46,14,48,11,50,9,50,6,50,2,49,-1,48,-3,46,-5,44,-9,41,-12,37,-14,33,-15,28,-17,23,-18,18,-19,12,-20,6,-20,3,-19,0,-18,-2
+,-16,-5,-15,-7,-14,-9,-13,-12,-14,-15,-13,-19,-12,-23,-10,-27,-7,-30,-4,-32,0,-32,4,-30,10,-26,12,-24,15,-22,18,-21,21,-21,25,-20,28,-20,31,-19
+,33,-19,37,-16,37,-10,36,-4,36,0,35,2,34,3,32,4,30,5,28,6,25,7,23,8,22,11,20,13,18,15,17,16,15,16,13,15,12,14,11,12
+,11,11)">
+<PARAM NAME="Line0005" VALUE="Polygon(17,-69,75,-71,75,-73,75,-74,74,-76,72,-77,69,-76,66,-75,64,-72,64,-69,64,-67,64,-66,63,-65,64,-64,67,-65,71,-66,74,-69,75)">
+<PARAM NAME="Line0006" VALUE="Polygon(17,-64,88,-64,88,-65,87,-64,86,-64,85,-65,84,-65,82,-65,80,-64,80,-62,80,-60,81,-58,82,-57,84,-58,86,-60,87,-62,88,-64,88)">
+<PARAM NAME="Line0007" VALUE="Polygon(15,-50,100,-51,99,-52,99,-52,98,-52,97,-52,96,-52,96,-51,95,-50,95,-49,95,-49,96,-48,97,-48,97,-48,99,-50,100)">
+</OBJECT>
+</DIV>
+
+<DIV style="position:absolute;top:55px;left:563px; width: 179px; height: 200px">
+  <OBJECT ID="secondObj" STYLE="width:200px;height:200px" CLASSID="CLSID:369303C2-D7AC-11D0-89D5-00A0C90833E6" width="356" height="212">
+    <PARAM NAME="Line0001" VALUE="SetLineColor(255,255,0)">
+    <PARAM NAME="Line0002" VALUE="SetFillColor(255,255,0)">
+    <PARAM NAME="Line0003" VALUE="SetLineStyle(0)">
+    <PARAM NAME="Line0004" VALUE="Polygon(461,11,11,12,8,14,6,18,4,21,2,25,1,28,0,30,-1,31,-3,30,-4,30,-6,29,-8,28,-9,27,-11,26,-12,24,-13,21,-14,19,-14,18,-13,16,-13
+,14,-12,13,-11,11,-11,9,-12,7,-14,2,-19,-1,-21,-3,-22,-5,-21,-5,-19,-6,-17,-6,-13,-6,-9,-6,-6,-6,-4,-7,-3,-8,-2,-9,0,-10,2,-11,4
+,-11,7,-10,13,-10,18,-10,22,-10,26,-10,30,-9,33,-7,37,-4,40,-2,41,0,42,1,42,3,42,4,40,6,39,8,36,10,33,12,32,16,32,21,32
+,26,33,30,34,35,35,38,35,40,34,41,31,42,29,43,27,44,26,44,25,45,24,47,23,49,21,54,15,57,6,59,-4,59,-13,57,-22,53,-29,49,-33
+,44,-33,42,-33,39,-34,35,-35,31,-37,27,-39,23,-40,20,-42,18,-42,14,-44,12,-45,10,-47,8,-48,6,-50,4,-51,3,-53,2,-54,-1,-55,-4,-55,-7,-53
+,-11,-50,-14,-46,-17,-41,-19,-37,-21,-32,-22,-28,-25,-23,-28,-19,-32,-15,-36,-11,-39,-8,-41,-4,-42,-1,-42,6,-41,9,-39,15,-36,29,-34,40,-34,51,-32,59
+,-31,66,-29,71,-25,73,-19,73,-10,70,-5,68,1,67,9,67,18,67,27,66,37,65,47,64,57,62,65,58,73,53,79,46,84,37,87,25,87,11,85,-6
+,79,-26,78,-31,79,-34,80,-36,82,-37,85,-38,87,-39,88,-41,88,-44,86,-47,83,-50,80,-53,75,-56,71,-60,68,-64,65,-70,64,-77,63,-80,61,-81,58,-82
+,55,-82,51,-81,48,-81,44,-81,41,-81,37,-83,33,-84,29,-86,26,-87,23,-89,20,-90,17,-91,15,-92,12,-93,10,-93,7,-94,4,-94,1,-94,-2,-94,-5,-94
+,-9,-93,-12,-92,-15,-90,-18,-88,-21,-84,-24,-81,-27,-77,-31,-73,-34,-69,-37,-65,-40,-61,-44,-57,-48,-54,-51,-52,-55,-50,-60,-49,-64,-49,-67,-48,-69,-45,-69,-42
+,-69,-37,-68,-31,-68,-26,-68,-20,-70,-15,-75,-3,-78,7,-79,17,-79,25,-78,31,-77,36,-78,40,-80,42,-81,43,-82,43,-82,44,-82,46,-81,46,-79,47,-76,47
+,-75,48,-74,51,-74,54,-75,56,-77,58,-79,60,-82,60,-84,58,-86,56,-91,47,-95,41,-97,36,-98,30,-98,24,-94,17,-88,8,-78,-4,-75,-10,-75,-18,-76,-26
+,-77,-34,-79,-42,-78,-48,-75,-53,-69,-54,-65,-55,-61,-56,-57,-58,-54,-61,-51,-64,-48,-67,-46,-71,-43,-75,-41,-79,-38,-83,-36,-87,-34,-90,-31,-93,-28,-96,-26,-98
+,-23,-99,-19,-99,-14,-100,-9,-100,-5,-100,0,-100,5,-100,10,-100,16,-100,21,-99,26,-98,31,-97,37,-96,42,-95,47,-94,51,-92,56,-91,59,-90,62,-89,66,-88
+,69,-86,72,-85,74,-83,76,-80,77,-77,77,-70,79,-65,81,-61,83,-58,86,-55,88,-53,90,-50,91,-47,91,-41,89,-34,89,-27,90,-18,95,-2,97,12,98,25
+,97,36,94,45,90,53,85,60,79,65,72,70,64,73,56,75,47,77,38,77,29,77,20,76,11,75,6,74,1,73,-4,74,-8,74,-12,75,-16,75,-18,76
+,-21,77,-27,79,-32,78,-38,76,-42,72,-44,66,-46,59,-45,50,-43,39,-42,36,-43,33,-44,29,-45,25,-47,20,-48,15,-49,10,-49,4,-48,1,-46,-5,-43,-12
+,-40,-19,-36,-27,-33,-34,-30,-41,-29,-47,-28,-49,-27,-51,-25,-53,-23,-54,-21,-55,-19,-57,-16,-58,-14,-58,-11,-59,-8,-59,-6,-59,-3,-59,-1,-59,1,-59,3,-58
+,4,-57,5,-56,7,-54,8,-53,10,-51,12,-50,14,-49,17,-47,20,-46,23,-45,26,-45,30,-45,34,-46,38,-46,42,-46,45,-47,47,-47,52,-46,57,-40,62,-30
+,65,-18,67,-5,67,8,64,19,59,26,57,28,55,29,53,31,50,32,48,33,46,35,44,37,43,40,41,42,38,42,35,43,31,43,26,43,22,43,19,44
+,17,46,14,48,11,50,9,50,6,50,2,49,-1,48,-3,46,-5,44,-9,41,-12,37,-14,33,-15,28,-17,23,-18,18,-19,12,-20,6,-20,3,-19,0,-18,-2
+,-16,-5,-15,-7,-14,-9,-13,-12,-14,-15,-13,-19,-12,-23,-10,-27,-7,-30,-4,-32,0,-32,4,-30,10,-26,12,-24,15,-22,18,-21,21,-21,25,-20,28,-20,31,-19
+,33,-19,37,-16,37,-10,36,-4,36,0,35,2,34,3,32,4,30,5,28,6,25,7,23,8,22,11,20,13,18,15,17,16,15,16,13,15,12,14,11,12
+,11,11)">
+    <PARAM NAME="Line0005" VALUE="Polygon(17,-69,75,-71,75,-73,75,-74,74,-76,72,-77,69,-76,66,-75,64,-72,64,-69,64,-67,64,-66,63,-65,64,-64,67,-65,71,-66,74,-69,75)">
+    <PARAM NAME="Line0006" VALUE="Polygon(17,-64,88,-64,88,-65,87,-64,86,-64,85,-65,84,-65,82,-65,80,-64,80,-62,80,-60,81,-58,82,-57,84,-58,86,-60,87,-62,88,-64,88)">
+    <PARAM NAME="Line0007" VALUE="Polygon(15,-50,100,-51,99,-52,99,-52,98,-52,97,-52,96,-52,96,-51,95,-50,95,-49,95,-49,96,-48,97,-48,97,-48,99,-50,100)">
+  </OBJECT> </DIV>
+
+<DIV style="position:absolute;top:55px;left:553px;font-family:Verdana;font-size:8pt;color:444444;text-align:center;width:220px;letter-spacing:0.4em;line-height:170%;">
+  <p><span style="color:771111"><b><font color="#FFFFFF">XooPS</font></b></span><br />
+    <font color="#FFFFFF">eXtended object<br />
+    oriented<br />
+    Portal System</font></p>
+  <p><font color="#FFFFFF">...que m?s queres...</font></p>
+  </DIV>
+
+<table width="755" border="0" cellspacing="1" cellpadding="3" height="201" bgcolor="#CCCCCC">
+  <tr bgcolor="#CCCCCC">
+    <td colspan="2">
+      <div align="center"><font color="#333333" face="Tahoma" size="2"><b>X2 Theme for XooPS 2.0.x / Tema X2 para XooPS 2.0.x</b></font></div>
+    </td>
+  </tr>
+  <tr>
+    <td bgcolor="#333333" height="78" width="538"><font color="#CCCCCC" face="Tahoma" size="2">
+	<b>| Creators / Creadores </b>: w4z004 - Unfor<br />
+
+	<b>| E-mail / E-mail</b> : <a href="mailto:w4z004 at hotmail.com">w4z004 at hotmail.com</a><br />
+
+	<b>| This is a original work bassed in the ideas of </b>w4z004<br />
+	<b>| and the excelent and professional work of </b> Unfor<br />
+
+	<b>| Date / Fecha </b>: Feb. 2003<br />
+
+	<b>| Thanks to / Gracias a</b> : Chapi <b>for the graphic work colaboration </b><br />
+	<b>| </b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Aitor <b>for the enhancements into the theme </b><br />
+	<b>| </b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ralf57 <b> for the hidde/unhidde idea </b><br />
+	<b>| </b><br />
+
+	<b>| INSTALL:  upload the x2t.tar.gz file with the theme manager</b><br />
+	<b>| </b><br />
+
+	<b>| NEWS TWO COLUMNS: later of installed the theme with the theme manager into</b><br />
+	<b>| the news need upload or copy and paste the files </b> news_index.html <b>and </b><br />
+	<b>| </b> news_item.html <b> that are into the EXTRAS dir to the respective places and obtain</b><br />
+	<b>| a news with 2 columns.</b><br />
+	<b>| </b><br />
+
+	<b>| LAYOUT: into the EXTRAS dir too have a</b> theme.html<b> file that if you replace into</b><br />
+	<b>| the theme skin with copy and paste obtain that the center-center blocks</b><br />
+	<b>| appear in the top (now are changed to the bottom).  </b><br />
+	<b>| </b><br />
+
+	<b>| CHANGELOG:</b><br />
+	<b>| 27/02 - Removed the login in the headerbar.</b><br />
+	<b>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fixed the userinfo template</b><br />
+	<b>| </b><br />
+	<b>| 01/03 - Removed the skin changed to the new structure.</b><br />
+	<b>| </b><br />
+	<b>| 30/03 - Finished the notification templates, XHTML cleanup, </b><br />
+	<b>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and added scrolling to the top posters and new users blocks.</b><br />
+	<b>| </b><br />
+	<b>| 20/09 - Upgraded to xoops 2.0.4. </b><br />
+	<b>| </b><br />
+	<b>| 05/07/04 - Upgraded to xoops 2.0.6.</b><br />
+	<b>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Created the SmartFAQ module templates.</b><br />
+	<b>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Enhanced the CSS.</b><br />
+	<b>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Added the hidde/display effect for the notification system.</b><br />
+	<b>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Modified the main menu / user menu, and added graphics to this.</b><br />
+	<b>| </b><br />
+	<b>| 05/08/04 - Created the Liase module templates.</b><br />
+	<b>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Created the RSSfit module templates.</b><br />
+	<b>| </b><br />
+	<b>| 05/16/04 - Fixed the styleNN.css (thnx chapi).</b><br />
+	<b>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Cleaned to be 100% html transitional 1.0.</b><br />
+
+
+	<b>| </b><br />
+</font></td>
+
+    <td bgcolor="#333333" height="78" rowspan="4" width="202">&nbsp;</td>
+  </tr>
+  <tr>
+    <td bgcolor="#333333" width="538"><font color="#CCCCCC" face="Tahoma" size="2"><b>|</b>
+      Dedicated to all Xoops users.<br />
+      <b>|</b> Dedicado a todos los usuarios de Xoops.</font></td>
+  </tr>
+  <tr>
+    <td bgcolor="#333333" width="538"><font color="#CCCCCC" face="Tahoma" size="2"><b>|
+      ENGLISH SUPPORT :</b><br />
+      <b>|</b>&gt; <a href="http://www.xoops.org">http://www.xoops.org</a>
+      </font></td>
+  </tr>
+  <tr>
+    <td bgcolor="#333333" width="538"><font color="#CCCCCC" face="Tahoma" size="2"><b>|
+      SOPORTE EN CASTELLANO :</b><br />
+      <b>|</b>&gt; <a href="http://www.esxoops.com">http://www.esxoops.com</a><br />
+  </tr>
+</table>
+</body>
+</html>

Added: XoopsCore/trunk/htdocs/extras/theme_x2t/x2t.tar.gz
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/extras/theme_x2t/x2t.tar.gz
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: XoopsCore/trunk/htdocs/favicon.ico
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/favicon.ico
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: XoopsCore/trunk/htdocs/footer.php
===================================================================
--- XoopsCore/trunk/htdocs/footer.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/footer.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,91 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+if (!defined("XOOPS_ROOT_PATH")) {
+    die("XOOPS root path not defined");
+}
+if ( !defined("XOOPS_FOOTER_INCLUDED") ) {
+	define("XOOPS_FOOTER_INCLUDED",1);
+	$xoopsLogger->stopTime();
+	if ($xoopsOption['theme_use_smarty'] == 0) {
+		// the old way
+		$footer = $xoopsConfigMetaFooter['footer'].'<br /><div style="text-align:center">Powered by XOOPS &copy; 2002 <a href="http://www.xoops.org/" target="_blank">The XOOPS Project</a></div>';
+		if (isset($xoopsOption['template_main'])) {
+			$xoopsTpl->xoops_setCaching(0);
+			$xoopsTpl->display('db:'.$xoopsOption['template_main']);
+		}
+		if (!isset($xoopsOption['show_rblock'])) {
+			$xoopsOption['show_rblock'] = 0;
+		}
+		themefooter($xoopsOption['show_rblock'], $footer);
+		xoops_footer();
+	} else {
+		// RMV-NOTIFY
+		include_once XOOPS_ROOT_PATH . '/include/notification_select.php';
+		if (isset($xoopsOption['template_main'])) {
+			if (isset($xoopsCachedTemplateId)) {
+				$xoopsTpl->assign('xoops_contents', $xoopsTpl->fetch('db:'.$xoopsOption['template_main'], $xoopsCachedTemplateId));
+			} else {
+				$xoopsTpl->assign('xoops_contents', $xoopsTpl->fetch('db:'.$xoopsOption['template_main']));
+			}
+		} else {
+			if (isset($xoopsCachedTemplate)) {
+				$xoopsTpl->assign('dummy_content', ob_get_contents());
+				$xoopsTpl->assign('xoops_contents', $xoopsTpl->fetch($xoopsCachedTemplate, $xoopsCachedTemplateId));
+			} else {
+				$xoopsTpl->assign('xoops_contents', ob_get_contents());
+			}
+			ob_end_clean();
+		}
+		if (!headers_sent()) {
+			header('Content-Type:text/html; charset='._CHARSET);
+			header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');
+			//header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+			header('Cache-Control: private, no-cache');
+			header('Pragma: no-cache');
+		}
+		$xoopsTpl->xoops_setCaching(0);
+		$xoopsTpl->display($xoopsConfig['theme_set'].'/theme.html');
+	}
+	if ($xoopsConfig['debug_mode'] == 2 && $xoopsUserIsAdmin) {
+		echo '<script type="text/javascript">
+		<!--//
+		debug_window = openWithSelfMain("", "popup", 680, 450, true);
+		debug_window.document.clear();
+		';
+		$content = '<html><head><meta http-equiv="content-type" content="text/html; charset='._CHARSET.'" /><meta http-equiv="content-language" content="'._LANGCODE.'" /><title>'.$xoopsConfig['sitename'].'</title><link rel="stylesheet" type="text/css" media="all" href="'.getcss($xoopsConfig['theme_set']).'" /></head><body>'.$xoopsLogger->dumpAll().'<div style="text-align:center;"><input class="formButton" value="'._CLOSE.'" type="button" onclick="javascript:window.close();" /></div></body></html>';
+		$lines = preg_split("/(\r\n|\r|\n)( *)/", $content);
+		foreach ($lines as $line) {
+			echo 'debug_window.document.writeln("'.str_replace('"', '\"', $line).'");';
+		}
+		echo '
+		debug_window.focus();
+		debug_window.document.close();
+		//-->
+		</script>';
+	}
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/footer.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/header.php
===================================================================
--- XoopsCore/trunk/htdocs/header.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/header.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,240 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+if (!defined("XOOPS_ROOT_PATH")) {
+    die("XOOPS root path not defined");
+}
+include_once XOOPS_ROOT_PATH.'/class/xoopsblock.php';
+if ($xoopsConfig['theme_set'] != 'default' && file_exists(XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/theme.php')) {
+    // the old way..
+    $xoopsOption['theme_use_smarty'] = 0;
+    if (file_exists(XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/language/lang-'.$xoopsConfig['language'].'.php')) {
+        include XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/language/lang-'.$xoopsConfig['language'].'.php';
+    } elseif (file_exists(XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/language/lang-english.php')) {
+        include XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/language/lang-english.php';
+    }
+    $config_handler =& xoops_gethandler('config');
+    $xoopsConfigMetaFooter =& $config_handler->getConfigsByCat(XOOPS_CONF_METAFOOTER);
+    xoops_header(false);
+    include XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/theme.php';
+    $xoopsOption['show_rblock'] = (!empty($xoopsOption['show_rblock'])) ? $xoopsOption['show_rblock'] : 0;
+    // include Smarty template engine and initialize it
+    require_once XOOPS_ROOT_PATH.'/class/template.php';
+    $xoopsTpl = new XoopsTpl();
+    if ($xoopsConfig['debug_mode'] == 3) {
+        $xoopsTpl->xoops_setDebugging(true);
+    }
+    if ($xoopsUser != '') {
+        $xoopsTpl->assign(array('xoops_isuser' => true, 'xoops_userid' => $xoopsUser->getVar('uid'), 'xoops_uname' => $xoopsUser->getVar('uname'), 'xoops_isadmin' => $xoopsUserIsAdmin));
+    }
+    $xoopsTpl->assign('xoops_requesturi', htmlspecialchars($GLOBALS['xoopsRequestUri'], ENT_QUOTES));
+    include XOOPS_ROOT_PATH.'/include/old_functions.php';
+
+    if ($xoopsOption['show_cblock'] || (isset($xoopsModule) && preg_match("/index\.php$/i", xoops_getenv('PHP_SELF')) && $xoopsConfig['startpage'] == $xoopsModule->getVar('dirname'))) {
+        $xoopsOption['show_rblock'] = $xoopsOption['show_cblock'] = 1;
+    }
+    themeheader($xoopsOption['show_rblock']);
+    if ($xoopsOption['show_cblock']) make_cblock();  //create center block
+} else {
+    $xoopsOption['theme_use_smarty'] = 1;
+    // include Smarty template engine and initialize it
+    require_once XOOPS_ROOT_PATH.'/class/template.php';
+    $xoopsTpl = new XoopsTpl();
+    $xoopsTpl->xoops_setCaching(2);
+    if ($xoopsConfig['debug_mode'] == 3) {
+        $xoopsTpl->xoops_setDebugging(true);
+    }
+    $xoopsTpl->assign(array('xoops_theme' => $xoopsConfig['theme_set'], 'xoops_imageurl' => XOOPS_THEME_URL.'/'.$xoopsConfig['theme_set'].'/', 'xoops_themecss'=> xoops_getcss($xoopsConfig['theme_set']), 'xoops_requesturi' => htmlspecialchars($GLOBALS['xoopsRequestUri'], ENT_QUOTES), 'xoops_sitename' => htmlspecialchars($xoopsConfig['sitename'], ENT_QUOTES), 'xoops_slogan' => htmlspecialchars($xoopsConfig['slogan'], ENT_QUOTES)));
+    // Meta tags
+    $config_handler =& xoops_gethandler('config');
+    $criteria = new CriteriaCompo(new Criteria('conf_modid', 0));
+    $criteria->add(new Criteria('conf_catid', XOOPS_CONF_METAFOOTER));
+    $config =& $config_handler->getConfigs($criteria, true);
+    foreach (array_keys($config) as $i) {
+        // prefix each tag with 'xoops_'
+        $xoopsTpl->assign('xoops_'.$config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput());
+    }
+    //unset($config);
+    // show banner?
+    if ($xoopsConfig['banners'] == 1) {
+        $xoopsTpl->assign('xoops_banner', xoops_getbanner());
+    } else {
+        $xoopsTpl->assign('xoops_banner', '&nbsp;');
+    }
+    // Weird, but need extra <script> tags for 2.0.x themes
+    $xoopsTpl->assign('xoops_js', '//--></script><script type="text/javascript" src="'.XOOPS_URL.'/include/xoops.js"></script><script type="text/javascript"><!--');
+    // get all blocks and assign to smarty
+    $xoopsblock = new XoopsBlock();
+    $block_arr = array();
+    if ($xoopsUser != '') {
+        $xoopsTpl->assign(array('xoops_isuser' => true, 'xoops_userid' => $xoopsUser->getVar('uid'), 'xoops_uname' => $xoopsUser->getVar('uname'), 'xoops_isadmin' => $xoopsUserIsAdmin));
+        $groups = $xoopsUser->getGroups();
+    } else {
+        $xoopsTpl->assign(array('xoops_isuser' => false, 'xoops_isadmin' => false));
+        $groups = XOOPS_GROUP_ANONYMOUS;
+    }
+    $toppage = false;
+    if (isset($xoopsModule) && is_object($xoopsModule)) {
+        // set page title
+        $xoopsTpl->assign('xoops_pagetitle', $xoopsModule->getVar('name'));
+        $xoopsTpl->assign('xoops_dirname', $xoopsModule->getVar('dirname'));
+        $moduleid = $xoopsModule->getVar('mid');
+        if (preg_match("/index\.php$/i", xoops_getenv('PHP_SELF')) && $xoopsConfig['startpage'] == $xoopsModule->getVar('dirname')) {
+            $toppage = true;
+        }
+    } else {
+        $xoopsTpl->assign('xoops_pagetitle', htmlspecialchars($xoopsConfig['slogan'], ENT_QUOTES));
+        $xoopsTpl->assign('xoops_dirname', "system");
+        $moduleid = 0;
+        if (!empty($xoopsOption['show_cblock'])) {
+            $toppage = true;
+        }
+    }
+    // Get blocks
+    $block_arr =& $xoopsblock->getAllByGroupModule($groups, $moduleid, $toppage, XOOPS_BLOCK_VISIBLE);
+
+    foreach (array_keys($block_arr) as $i) {
+        $bcachetime = $block_arr[$i]->getVar('bcachetime');
+        if (empty($bcachetime)) {
+            $xoopsTpl->xoops_setCaching(0);
+        } else {
+            $xoopsTpl->xoops_setCaching(2);
+            $xoopsTpl->xoops_setCacheTime($bcachetime);
+        }
+        $btpl = $block_arr[$i]->getVar('template') != '' ? $block_arr[$i]->getVar('template') : "system_block_dummy.html";
+
+        if (empty($bcachetime) || !$xoopsTpl->is_cached('db:'.$btpl, 'blk_'.$block_arr[$i]->getVar('bid'))) {
+            $xoopsLogger->addBlock($block_arr[$i]->getVar('name'));
+            $bresult =& $block_arr[$i]->buildBlock();
+            if (!$bresult) {
+                continue;
+            }
+            $xoopsTpl->assign_by_ref('block', $bresult);
+            $bcontent =& $xoopsTpl->fetch('db:'.$btpl, 'blk_'.$block_arr[$i]->getVar('bid'));
+            $xoopsTpl->clear_assign('block');
+        } else {
+            $xoopsLogger->addBlock($block_arr[$i]->getVar('name'), true, $bcachetime);
+            $bcontent =& $xoopsTpl->fetch('db:'.$btpl, 'blk_'.$block_arr[$i]->getVar('bid'));
+        }
+
+        switch ($block_arr[$i]->getVar('side')) {
+        case XOOPS_SIDEBLOCK_LEFT:
+            if (!isset($show_lblock)) {
+                $xoopsTpl->assign('xoops_showlblock', 1);
+                $show_lblock = 1;
+            }
+            $xoopsTpl->append('xoops_lblocks', array('title' => $block_arr[$i]->getVar('title'), 'content' => $bcontent));
+            break;
+        case XOOPS_CENTERBLOCK_LEFT:
+            if (!isset($show_cblock)) {
+                $xoopsTpl->assign('xoops_showcblock', 1);
+                $show_cblock = 1;
+            }
+            $xoopsTpl->append('xoops_clblocks', array('title' => $block_arr[$i]->getVar('title'), 'content' => $bcontent));
+            break;
+        case XOOPS_CENTERBLOCK_RIGHT:
+            if (!isset($show_cblock)) {
+                $xoopsTpl->assign('xoops_showcblock', 1);
+                $show_cblock = 1;
+            }
+            $xoopsTpl->append('xoops_crblocks', array('title' => $block_arr[$i]->getVar('title'), 'content' => $bcontent));
+            break;
+        case XOOPS_CENTERBLOCK_CENTER:
+            if (!isset($show_cblock)) {
+                $xoopsTpl->assign('xoops_showcblock', 1);
+                $show_cblock = 1;
+            }
+            $xoopsTpl->append('xoops_ccblocks', array('title' => $block_arr[$i]->getVar('title'), 'content' => $bcontent));
+            break;
+        case XOOPS_SIDEBLOCK_RIGHT:
+            if (!isset($show_rblock)) {
+                $xoopsTpl->assign('xoops_showrblock', 1);
+                $show_rblock = 1;
+            }
+            $xoopsTpl->append('xoops_rblocks', array('title' => $block_arr[$i]->getVar('title'), 'content' => $bcontent));
+            break;
+        }
+        unset($bcontent);
+    }
+    //unset($block_arr);
+    if (!isset($show_rblock)) {
+        $xoopsTpl->assign('xoops_showrblock', 0);
+    }
+    if (!isset($show_cblock)) {
+        $xoopsTpl->assign('xoops_showcblock', 0);
+    }
+    if (!isset($show_lblock)) {
+        $xoopsTpl->assign('xoops_showlblock', 0);
+    }
+    if (xoops_getenv('REQUEST_METHOD') != 'POST' && !empty($xoopsModule) && !empty($xoopsConfig['module_cache'][$xoopsModule->getVar('mid')])) {
+        $xoopsTpl->xoops_setCaching(2);
+        $xoopsTpl->xoops_setCacheTime($xoopsConfig['module_cache'][$xoopsModule->getVar('mid')]);
+        if (!isset($xoopsOption['template_main'])) {
+            $xoopsCachedTemplate = 'db:system_dummy.html';
+        } else {
+            $xoopsCachedTemplate = 'db:'.$xoopsOption['template_main'];
+        }
+        // generate safe cache Id
+        $xoopsCachedTemplateId = 'mod_'.$xoopsModule->getVar('dirname').'|'.md5(str_replace(XOOPS_URL, '', $GLOBALS['xoopsRequestUri']));
+        if ($xoopsTpl->is_cached($xoopsCachedTemplate, $xoopsCachedTemplateId)) {
+            $xoopsLogger->addExtra($xoopsCachedTemplate, sprintf('Cached (regenerates every %d seconds)', $xoopsConfig['module_cache'][$xoopsModule->getVar('mid')]));
+            $xoopsTpl->assign('xoops_contents', $xoopsTpl->fetch($xoopsCachedTemplate, $xoopsCachedTemplateId));
+            $xoopsTpl->xoops_setCaching(0);
+            if (!headers_sent()) {
+                header ('Content-Type:text/html; charset='._CHARSET);
+            }
+            $xoopsTpl->display($xoopsConfig['theme_set'].'/theme.html');
+            if ($xoopsConfig['debug_mode'] == 2 && $xoopsUserIsAdmin) {
+                echo '<script type="text/javascript">
+        		<!--//
+        		debug_window = openWithSelfMain("", "popup", 680, 450, true);
+        		debug_window.document.clear();
+        		';
+        		$content = '<html><head><meta http-equiv="content-type" content="text/html; charset='._CHARSET.'" /><meta http-equiv="content-language" content="'._LANGCODE.'" /><title>'.$xoopsConfig['sitename'].'</title><link rel="stylesheet" type="text/css" media="all" href="'.getcss($xoopsConfig['theme_set']).'" /></head><body>'.$xoopsLogger->dumpAll().'<div style="text-align:center;"><input class="formButton" value="'._CLOSE.'" type="button" onclick="javascript:window.close();" /></div></body></html>';
+        		$lines = preg_split("/(\r\n|\r|\n)( *)/", $content);
+        		foreach ($lines as $line) {
+        			echo 'debug_window.document.writeln("'.str_replace('"', '\"', $line).'");';
+        		}
+        		echo '
+        		debug_window.focus();
+        		debug_window.document.close();
+        		//-->
+        		</script>';
+            }
+            exit();
+        }
+    } else {
+        $xoopsTpl->xoops_setCaching(0);
+    }
+    if (!isset($xoopsOption['template_main'])) {
+        // new themes using Smarty does not have old functions that are required in old modules, so include them now
+        include XOOPS_ROOT_PATH.'/include/old_theme_functions.php';
+        // need this also
+        $xoopsTheme['thename'] = $xoopsConfig['theme_set'];
+        ob_start();
+    }
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/header.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/image.php
===================================================================
--- XoopsCore/trunk/htdocs/image.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/image.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,67 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+set_magic_quotes_runtime(0);
+if (function_exists('mb_http_output')) {
+	mb_http_output('pass');
+}
+$image_id = isset($_GET['id']) ? intval($_GET['id']) : 0;
+if (empty($image_id)) {
+	header('Content-type: image/gif');
+	readfile(XOOPS_UPLOAD_PATH.'/blank.gif');
+	exit();
+}
+$xoopsOption['nocommon'] = 1;
+include './mainfile.php';
+include XOOPS_ROOT_PATH.'/include/functions.php';
+include_once XOOPS_ROOT_PATH.'/class/logger.php';
+include_once XOOPS_ROOT_PATH."/class/module.textsanitizer.php";
+$xoopsLogger =& XoopsLogger::instance();
+$xoopsLogger->startTime();
+include_once XOOPS_ROOT_PATH.'/class/database/databasefactory.php';
+define('XOOPS_DB_PROXY', 1);
+$xoopsDB =& XoopsDatabaseFactory::getDatabaseConnection();
+// ################# Include class manager file ##############
+require_once XOOPS_ROOT_PATH.'/kernel/object.php';
+require_once XOOPS_ROOT_PATH.'/class/criteria.php';
+$imagehandler =& xoops_gethandler('image');
+$criteria = new CriteriaCompo(new Criteria('i.image_display', 1));
+$criteria->add(new Criteria('i.image_id', $image_id));
+$image =& $imagehandler->getObjects($criteria, false, true);
+if (count($image) > 0) {
+	header('Content-type: '.$image[0]->getVar('image_mimetype'));
+	header('Cache-control: max-age=31536000');
+	header('Expires: '.gmdate("D, d M Y H:i:s",time()+31536000).'GMT');
+	header('Content-disposition: filename='.$image[0]->getVar('image_name'));
+	header('Content-Length: '.strlen($image[0]->getVar('image_body')));
+	header('Last-Modified: '.gmdate("D, d M Y H:i:s",$image[0]->getVar('image_created')).'GMT');
+	echo $image[0]->getVar('image_body');
+} else {
+	header('Content-type: image/gif');
+	readfile(XOOPS_UPLOAD_PATH.'/blank.gif');
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/image.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/imagemanager.php
===================================================================
--- XoopsCore/trunk/htdocs/imagemanager.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/imagemanager.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,256 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+include './mainfile.php';
+if (!isset($_REQUEST['target'])) {
+    exit();
+}
+$target = $_REQUEST['target'];
+$op = 'list';
+if (isset($_GET['op']) && $_GET['op'] == 'upload') {
+    $op = 'upload';
+} elseif (isset($_POST['op']) && $_POST['op'] == 'doupload') {
+    $op = 'doupload';
+}
+
+if (!is_object($xoopsUser)) {
+    $group = array(XOOPS_GROUP_ANONYMOUS);
+} else {
+    $group =& $xoopsUser->getGroups();
+}
+if ($op == 'list') {
+    require_once XOOPS_ROOT_PATH.'/class/template.php';
+    $xoopsTpl = new XoopsTpl();
+    $xoopsTpl->assign('lang_imgmanager', _IMGMANAGER);
+    $xoopsTpl->assign('sitename', $xoopsConfig['sitename']);
+    $target = htmlspecialchars($target, ENT_QUOTES);
+    $xoopsTpl->assign('target', $target);
+    $imgcat_handler =& xoops_gethandler('imagecategory');
+    $catlist =& $imgcat_handler->getList($group, 'imgcat_read', 1);
+    $catcount = count($catlist);
+    $xoopsTpl->assign('lang_align', _ALIGN);
+    $xoopsTpl->assign('lang_add', _ADD);
+    $xoopsTpl->assign('lang_close', _CLOSE);
+    if ($catcount > 0) {
+        $xoopsTpl->assign('lang_go', _GO);
+        $catshow = !isset($_GET['cat_id']) ? 0 : intval($_GET['cat_id']);
+        $catshow = (!empty($catshow) && in_array($catshow, array_keys($catlist))) ? $catshow : 0;
+        $xoopsTpl->assign('show_cat', $catshow);
+        if ($catshow > 0) {
+            $xoopsTpl->assign('lang_addimage', _ADDIMAGE);
+        }
+        $catlist = array('0' => '--') + $catlist;
+        $cat_options = '';
+        foreach ($catlist as $c_id => $c_name) {
+            $sel = '';
+            if ($c_id == $catshow) {
+                $sel = ' selected="selected"';
+            }
+            $cat_options .= '<option value="'.$c_id.'"'.$sel.'>'.$c_name.'</option>';
+        }
+        $xoopsTpl->assign('cat_options', $cat_options);
+        if ($catshow > 0) {
+            $image_handler = xoops_gethandler('image');
+            $criteria = new CriteriaCompo(new Criteria('imgcat_id', $catshow));
+            $criteria->add(new Criteria('image_display', 1));
+            $total = $image_handler->getCount($criteria);
+            if ($total > 0) {
+                $imgcat_handler =& xoops_gethandler('imagecategory');
+                $imgcat =& $imgcat_handler->get($catshow);
+                $xoopsTpl->assign('image_total', $total);
+                $xoopsTpl->assign('lang_image', _IMAGE);
+                $xoopsTpl->assign('lang_imagename', _IMAGENAME);
+                $xoopsTpl->assign('lang_imagemime', _IMAGEMIME);
+                $start = isset($_GET['start']) ? intval($_GET['start']) : 0;
+                $criteria->setLimit(10);
+                $criteria->setStart($start);
+                $storetype = $imgcat->getVar('imgcat_storetype');
+                if ($storetype == 'db') {
+                    $images =& $image_handler->getObjects($criteria, false, true);
+                } else {
+                    $images =& $image_handler->getObjects($criteria, false, false);
+                }
+                $imgcount = count($images);
+                $max = ($imgcount > 10) ? 10 : $imgcount;
+
+                for ($i = 0; $i < $max; $i++) {
+                    if ($storetype == 'db') {
+                        $lcode = '[img align=left id='.$images[$i]->getVar('image_id').']'.$images[$i]->getVar('image_nicename').'[/img]';
+                        $code = '[img id='.$images[$i]->getVar('image_id').']'.$images[$i]->getVar('image_nicename').'[/img]';
+                        $rcode = '[img align=right id='.$images[$i]->getVar('image_id').']'.$images[$i]->getVar('image_nicename').'[/img]';
+                        $src = XOOPS_URL."/image.php?id=".$images[$i]->getVar('image_id');
+                    } else {
+                        $lcode = '[img align=left]'.XOOPS_UPLOAD_URL.'/'.$images[$i]->getVar('image_name').'[/img]';
+                        $code = '[img]'.XOOPS_UPLOAD_URL.'/'.$images[$i]->getVar('image_name').'[/img]';
+                        $rcode = '[img align=right]'.XOOPS_UPLOAD_URL.'/'.$images[$i]->getVar('image_name').'[/img]';
+                        $src = XOOPS_UPLOAD_URL.'/'.$images[$i]->getVar('image_name');
+                    }
+                    $xoopsTpl->append('images', array('id' => $images[$i]->getVar('image_id'), 'nicename' => $images[$i]->getVar('image_nicename'), 'mimetype' => $images[$i]->getVar('image_mimetype'), 'src' => $src, 'lxcode' => $lcode, 'xcode' => $code, 'rxcode' => $rcode));
+                }
+                if ($total > 10) {
+                    include_once XOOPS_ROOT_PATH.'/class/pagenav.php';
+                    $nav = new XoopsPageNav($total, 10, $start, 'start', 'target='.$target.'&amp;cat_id='.$catshow);
+                    $xoopsTpl->assign('pagenav', $nav->renderNav());
+                }
+            } else {
+                $xoopsTpl->assign('image_total', 0);
+            }
+        }
+        $xoopsTpl->assign('xsize', 600);
+        $xoopsTpl->assign('ysize', 400);
+    } else {
+        $xoopsTpl->assign('xsize', 400);
+        $xoopsTpl->assign('ysize', 180);
+    }
+    $xoopsTpl->display('db:system_imagemanager.html');
+    exit();
+}
+
+if ($op == 'upload') {
+    $imgcat_handler =& xoops_gethandler('imagecategory');
+    $imgcat_id = intval($_GET['imgcat_id']);
+    $imgcat =& $imgcat_handler->get($imgcat_id);
+    $error = false;
+    if (!is_object($imgcat)) {
+        $error = true;
+    } else {
+        $imgcatperm_handler =& xoops_gethandler('groupperm');
+        if (is_object($xoopsUser)) {
+            if (!$imgcatperm_handler->checkRight('imgcat_write', $imgcat_id, $xoopsUser->getGroups())) {
+                $error = true;
+            }
+        } else {
+            if (!$imgcatperm_handler->checkRight('imgcat_write', $imgcat_id, XOOPS_GROUP_ANONYMOUS)) {
+                $error = true;
+            }
+        }
+    }
+    if ($error != false) {
+        xoops_header(false);
+        echo '</head><body><div style="text-align:center;"><input value="'._BACK.'" type="button" onclick="javascript:history.go(-1);" /></div>';
+        xoops_footer();
+        exit();
+    }
+    require_once XOOPS_ROOT_PATH.'/class/template.php';
+    $xoopsTpl = new XoopsTpl();
+    $xoopsTpl->assign('show_cat', $imgcat_id);
+    $xoopsTpl->assign('lang_imgmanager', _IMGMANAGER);
+    $xoopsTpl->assign('sitename', $xoopsConfig['sitename']);
+    $xoopsTpl->assign('target', htmlspecialchars($_GET['target'], ENT_QUOTES));
+    include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+    $form = new XoopsThemeForm('', 'image_form', 'imagemanager.php', 'post', true);
+    $form->setExtra('enctype="multipart/form-data"');
+    $form->addElement(new XoopsFormText(_IMAGENAME, 'image_nicename', 20, 255), true);
+    $form->addElement(new XoopsFormLabel(_IMAGECAT, $imgcat->getVar('imgcat_name')));
+    $form->addElement(new XoopsFormFile(_IMAGEFILE, 'image_file', $imgcat->getVar('imgcat_maxsize')), true);
+    $form->addElement(new XoopsFormLabel(_IMGMAXSIZE, $imgcat->getVar('imgcat_maxsize')));
+    $form->addElement(new XoopsFormLabel(_IMGMAXWIDTH, $imgcat->getVar('imgcat_maxwidth')));
+    $form->addElement(new XoopsFormLabel(_IMGMAXHEIGHT, $imgcat->getVar('imgcat_maxheight')));
+    $form->addElement(new XoopsFormHidden('imgcat_id', $imgcat_id));
+    $form->addElement(new XoopsFormHidden('op', 'doupload'));
+    $form->addElement(new XoopsFormHidden('target', $target));
+    $form->addElement(new XoopsFormButton('', 'img_button', _SUBMIT, 'submit'));
+    $form->assign($xoopsTpl);
+    $xoopsTpl->assign('lang_close', _CLOSE);
+    $xoopsTpl->display('db:system_imagemanager2.html');
+    exit();
+}
+
+if ($op == 'doupload') {
+    if ($GLOBALS['xoopsSecurity']->check()) {
+        $image_nicename = isset($_POST['image_nicename']) ? $_POST['image_nicename'] : '';
+        $xoops_upload_file = isset($_POST['xoops_upload_file']) ? $_POST['xoops_upload_file'] : array();
+        $imgcat_id = isset($_POST['imgcat_id']) ? intval($_POST['imgcat_id']) : 0;
+        include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+        $imgcat_handler =& xoops_gethandler('imagecategory');
+        $imgcat =& $imgcat_handler->get($imgcat_id);
+        $error = false;
+        if (!is_object($imgcat)) {
+            $error = true;
+        } else {
+            $imgcatperm_handler =& xoops_gethandler('groupperm');
+            if (is_object($xoopsUser)) {
+                if (!$imgcatperm_handler->checkRight('imgcat_write', $imgcat_id, $xoopsUser->getGroups())) {
+                    $error = true;
+                }
+            } else {
+                if (!$imgcatperm_handler->checkRight('imgcat_write', $imgcat_id, XOOPS_GROUP_ANONYMOUS)) {
+                    $error = true;
+                }
+            }
+        }
+    }
+    else {
+        $error = true;
+    }
+    if ($error != false) {
+        xoops_header(false);
+        echo '</head><body><div style="text-align:center;">'.implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()).'<br /><input value="'._BACK.'" type="button" onclick="javascript:history.go(-1);" /></div>';
+        xoops_footer();
+        exit();
+    }
+    $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/x-png', 'image/png'), $imgcat->getVar('imgcat_maxsize'), $imgcat->getVar('imgcat_maxwidth'), $imgcat->getVar('imgcat_maxheight'));
+    $uploader->setPrefix('img');
+    if ($uploader->fetchMedia($xoops_upload_file[0])) {
+        if (!$uploader->upload()) {
+            $err = $uploader->getErrors();
+        } else {
+            $image_handler =& xoops_gethandler('image');
+            $image =& $image_handler->create();
+            $image->setVar('image_name', $uploader->getSavedFileName());
+            $image->setVar('image_nicename', $image_nicename);
+            $image->setVar('image_mimetype', $uploader->getMediaType());
+            $image->setVar('image_created', time());
+            $image->setVar('image_display', 1);
+            $image->setVar('image_weight', 0);
+            $image->setVar('imgcat_id', $imgcat_id);
+            if ($imgcat->getVar('imgcat_storetype') == 'db') {
+                $fp = @fopen($uploader->getSavedDestination(), 'rb');
+                $fbinary = @fread($fp, filesize($uploader->getSavedDestination()));
+                @fclose($fp);
+                $image->setVar('image_body', addslashes($fbinary));
+                @unlink($uploader->getSavedDestination());
+            }
+            if (!$image_handler->insert($image)) {
+                $err = sprintf(_FAILSAVEIMG, $image->getVar('image_nicename'));
+            }
+        }
+    } else {
+        $err = sprintf(_FAILFETCHIMG, 0);
+        $err .= '<br />'.implode('<br />', $uploader->getErrors(false));
+    }
+    if (isset($err)) {
+        xoops_header(false);
+        xoops_error($err);
+        echo '</head><body><div style="text-align:center;"><input value="'._BACK.'" type="button" onclick="javascript:history.go(-1);" /></div>';
+        xoops_footer();
+        exit();
+    }
+    header('location: imagemanager.php?cat_id='.$imgcat_id.'&target='.$target);
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/imagemanager.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/images/aligncenter.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/aligncenter.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/alignleft.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/alignleft.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/alignright.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/alignright.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/await.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/await.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/banners/banner.swf
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/banners/banner.swf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: XoopsCore/trunk/htdocs/images/banners/xoops_banner.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/banners/xoops_banner.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/banners/xoops_banner_2.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/banners/xoops_banner_2.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/blank.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/blank.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/bold.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/bold.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/code.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/code.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/download.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/download.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/email.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/email.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/aim.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/aim.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/delete.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/delete.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/edit.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/edit.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/em_small.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/em_small.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/email.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/email.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/icq_add.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/icq_add.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/ip.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/ip.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/msnm.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/msnm.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/no_posticon.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/no_posticon.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/pm.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/pm.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/pm_small.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/pm_small.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/posticon.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/posticon.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/posticon2.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/posticon2.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/profile.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/profile.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/reply.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/reply.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/www.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/www.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/icons/yim.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/icons/yim.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/image.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/image.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/imgsrc.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/imgsrc.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/italic.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/italic.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/linethrough.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/linethrough.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/logo.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/logo.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/pagact.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/pagact.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/paginact.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/paginact.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/pagneutral.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/pagneutral.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/pointer.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/pointer.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/poweredby.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/poweredby.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/quote.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/quote.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/read.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/read.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/s_poweredby.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/s_poweredby.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/subject/icon1.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/subject/icon1.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/subject/icon2.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/subject/icon2.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/subject/icon3.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/subject/icon3.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/subject/icon4.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/subject/icon4.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/subject/icon5.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/subject/icon5.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/subject/icon6.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/subject/icon6.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/subject/icon7.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/subject/icon7.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/underline.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/underline.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/images/url.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/images/url.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/include/calendarjs.php
===================================================================
--- XoopsCore/trunk/htdocs/include/calendarjs.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/calendarjs.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,91 @@
+<?php 
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH.'/language/'.$GLOBALS['xoopsConfig']['language'].'/calendar.php';
+?>
+<link rel="stylesheet" type="text/css" media="all" href="<?php echo XOOPS_URL;?>/include/calendar-blue.css" />
+<script type="text/javascript" src="<?php echo XOOPS_URL.'/include/calendar.js';?>"></script>
+<script type="text/javascript">
+<!--
+var calendar = null;
+
+function selected(cal, date) {
+  cal.sel.value = date;
+}
+
+function closeHandler(cal) {
+  cal.hide();
+  Calendar.removeEvent(document, "mousedown", checkCalendar);
+}
+
+function checkCalendar(ev) {
+  var el = Calendar.is_ie ? Calendar.getElement(ev) : Calendar.getTargetElement(ev);
+  for (; el != null; el = el.parentNode)
+    if (el == calendar.element || el.tagName == "A") break;
+  if (el == null) {
+    calendar.callCloseHandler(); Calendar.stopEvent(ev);
+  }
+}
+function showCalendar(id) {
+  var el = xoopsGetElementById(id);
+  if (calendar != null) {
+    calendar.hide();
+  } else {
+    var cal = new Calendar(true, <?php if (isset($jstime)) { echo 'new Date('.$jstime.')'; } else { echo 'null';}?>, selected, closeHandler);
+    calendar = cal;
+    cal.setRange(2000, 2015);
+    calendar.create();
+  }
+  calendar.sel = el;
+  calendar.parseDate(el.value);
+  calendar.showAtElement(el);
+  Calendar.addEvent(document, "mousedown", checkCalendar);
+  return false;
+}
+
+Calendar._DN = new Array
+("<?php echo _CAL_SUNDAY;?>",
+ "<?php echo _CAL_MONDAY;?>",
+ "<?php echo _CAL_TUESDAY;?>",
+ "<?php echo _CAL_WEDNESDAY;?>",
+ "<?php echo _CAL_THURSDAY;?>",
+ "<?php echo _CAL_FRIDAY;?>",
+ "<?php echo _CAL_SATURDAY;?>",
+ "<?php echo _CAL_SUNDAY;?>");
+Calendar._MN = new Array
+("<?php echo _CAL_JANUARY;?>",
+ "<?php echo _CAL_FEBRUARY;?>",
+ "<?php echo _CAL_MARCH;?>",
+ "<?php echo _CAL_APRIL;?>",
+ "<?php echo _CAL_MAY;?>",
+ "<?php echo _CAL_JUNE;?>",
+ "<?php echo _CAL_JULY;?>",
+ "<?php echo _CAL_AUGUST;?>",
+ "<?php echo _CAL_SEPTEMBER;?>",
+ "<?php echo _CAL_OCTOBER;?>",
+ "<?php echo _CAL_NOVEMBER;?>",
+ "<?php echo _CAL_DECEMBER;?>");
+
+Calendar._TT = {};
+Calendar._TT["TOGGLE"] = "<?php echo _CAL_TGL1STD;?>";
+Calendar._TT["PREV_YEAR"] = "<?php echo _CAL_PREVYR;?>";
+Calendar._TT["PREV_MONTH"] = "<?php echo _CAL_PREVMNTH;?>";
+Calendar._TT["GO_TODAY"] = "<?php echo _CAL_GOTODAY;?>";
+Calendar._TT["NEXT_MONTH"] = "<?php echo _CAL_NXTMNTH;?>";
+Calendar._TT["NEXT_YEAR"] = "<?php echo _CAL_NEXTYR;?>";
+Calendar._TT["SEL_DATE"] = "<?php echo _CAL_SELDATE;?>";
+Calendar._TT["DRAG_TO_MOVE"] = "<?php echo _CAL_DRAGMOVE;?>";
+Calendar._TT["PART_TODAY"] = "(<?php echo _CAL_TODAY;?>)";
+Calendar._TT["MON_FIRST"] = "<?php echo _CAL_DISPM1ST;?>";
+Calendar._TT["SUN_FIRST"] = "<?php echo _CAL_DISPS1ST;?>";
+Calendar._TT["CLOSE"] = "<?php echo _CLOSE;?>";
+Calendar._TT["TODAY"] = "<?php echo _CAL_TODAY;?>";
+
+// date formats
+Calendar._TT["DEF_DATE_FORMAT"] = "y-mm-dd";
+Calendar._TT["TT_DATE_FORMAT"] = "y-mm-dd";
+
+Calendar._TT["WK"] = "";
+//-->
+</script>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/calendarjs.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/checklogin.php
===================================================================
--- XoopsCore/trunk/htdocs/include/checklogin.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/checklogin.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,99 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+    exit();
+}
+include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/user.php';
+$uname = !isset($_POST['uname']) ? '' : trim($_POST['uname']);
+$pass = !isset($_POST['pass']) ? '' : trim($_POST['pass']);
+if ($uname == '' || $pass == '') {
+    redirect_header(XOOPS_URL.'/user.php', 1, _US_INCORRECTLOGIN);
+    exit();
+}
+$member_handler =& xoops_gethandler('member');
+$myts =& MyTextsanitizer::getInstance();
+$user =& $member_handler->loginUser($myts->addSlashes($uname), $myts->addSlashes($pass));
+if (false != $user) {
+    if (0 == $user->getVar('level')) {
+        redirect_header(XOOPS_URL.'/index.php', 5, _US_NOACTTPADM);
+        exit();
+    }
+    if ($xoopsConfig['closesite'] == 1) {
+        $allowed = false;
+        foreach ($user->getGroups() as $group) {
+            if (in_array($group, $xoopsConfig['closesite_okgrp']) || XOOPS_GROUP_ADMIN == $group) {
+                $allowed = true;
+                break;
+            }
+        }
+        if (!$allowed) {
+            redirect_header(XOOPS_URL.'/index.php', 1, _NOPERM);
+            exit();
+        }
+    }
+    $user->setVar('last_login', time());
+    if (!$member_handler->insertUser($user)) {
+    }
+    $_SESSION = array();
+    $_SESSION['xoopsUserId'] = $user->getVar('uid');
+    $_SESSION['xoopsUserGroups'] = $user->getGroups();
+    if ($xoopsConfig['use_mysession'] && $xoopsConfig['session_name'] != '') {
+        setcookie($xoopsConfig['session_name'], session_id(), time()+(60 * $xoopsConfig['session_expire']), '/',  '', 0);
+    }
+    $user_theme = $user->getVar('theme');
+    if (in_array($user_theme, $xoopsConfig['theme_set_allowed'])) {
+        $_SESSION['xoopsUserTheme'] = $user_theme;
+    }
+    if (!empty($_POST['xoops_redirect']) && !strpos($_POST['xoops_redirect'], 'register')) {
+        $parsed = parse_url(XOOPS_URL);
+        $url = isset($parsed['scheme']) ? $parsed['scheme'].'://' : 'http://';
+        if (isset($parsed['host'])) {
+            $url .= isset($parsed['port']) ?$parsed['host'].':'.$parsed['port'].trim($_POST['xoops_redirect']): $parsed['host'].trim($_POST['xoops_redirect']);
+        } else {
+            $url .= xoops_getenv('HTTP_HOST').trim($_POST['xoops_redirect']);
+        }
+    } else {
+        $url = XOOPS_URL.'/index.php';
+    }
+
+    // RMV-NOTIFY
+    // Perform some maintenance of notification records
+    $notification_handler =& xoops_gethandler('notification');
+    $notification_handler->doLoginMaintenance($user->getVar('uid'));
+
+    redirect_header($url, 1, sprintf(_US_LOGGINGU, $user->getVar('uname')));
+} else {
+
+    redirect_header(XOOPS_URL.'/user.php',1,_US_INCORRECTLOGIN);
+}
+exit();
+?>


Property changes on: XoopsCore/trunk/htdocs/include/checklogin.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/comment_constants.php
===================================================================
--- XoopsCore/trunk/htdocs/include/comment_constants.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/comment_constants.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,41 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+define('XOOPS_COMMENT_APPROVENONE', 0);
+define('XOOPS_COMMENT_APPROVEALL', 1);
+define('XOOPS_COMMENT_APPROVEUSER', 2);
+define('XOOPS_COMMENT_APPROVEADMIN', 3);
+define('XOOPS_COMMENT_PENDING', 1);
+define('XOOPS_COMMENT_ACTIVE', 2);
+define('XOOPS_COMMENT_HIDDEN', 3);
+define('XOOPS_COMMENT_OLD1ST', 0);
+define('XOOPS_COMMENT_NEW1ST', 1);
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/comment_constants.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/comment_delete.php
===================================================================
--- XoopsCore/trunk/htdocs/include/comment_delete.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/comment_delete.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,283 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH') || !is_object($xoopsModule)) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH.'/include/comment_constants.php';
+$op = 'delete';
+if (!empty($_POST)) {
+	extract($_POST);
+	$com_mode = isset($com_mode) ? htmlspecialchars(trim($com_mode), ENT_QUOTES) : 'flat';
+	$com_order = isset($com_order) ? intval($com_order) : XOOPS_COMMENT_OLD1ST;
+	$com_id = isset($com_id) ? intval($com_id) : 0;
+} else {
+	$com_mode = isset($_GET['com_mode']) ? htmlspecialchars(trim($_GET['com_mode']), ENT_QUOTES) : 'flat';
+	$com_order = isset($_GET['com_order']) ? intval($_GET['com_order']) : XOOPS_COMMENT_OLD1ST;
+	$com_id = isset($_GET['com_id']) ? intval($_GET['com_id']) : 0;
+
+}
+
+if ('system' == $xoopsModule->getVar('dirname')) {
+	$comment_handler =& xoops_gethandler('comment');
+	$comment =& $comment_handler->get($com_id);
+	$module_handler =& xoops_gethandler('module');
+	$module =& $module_handler->get($comment->getVar('com_modid'));
+	$comment_config = $module->getInfo('comments');
+	$com_modid = $module->getVar('mid');
+	$redirect_page = XOOPS_URL.'/modules/system/admin.php?fct=comments&amp;com_modid='.$com_modid.'&amp;com_itemid';
+	$moddir = $module->getVar('dirname');
+	unset($comment);
+} else {
+	if (XOOPS_COMMENT_APPROVENONE == $xoopsModuleConfig['com_rule']) {
+		exit();
+	}
+	$comment_config = $xoopsModule->getInfo('comments');
+	$com_modid = $xoopsModule->getVar('mid');
+	$redirect_page = $comment_config['pageName'].'?';
+	$comment_confirm_extra = array();
+	if (isset($comment_config['extraParams']) && is_array($comment_config['extraParams'])) {
+		foreach ($comment_config['extraParams'] as $extra_param) {
+			if (isset(${$extra_param})) {
+				$redirect_page .= $extra_param.'='.${$extra_param}.'&amp;';
+				
+				// for the confirmation page
+				$comment_confirm_extra [$extra_param] = ${$extra_param};
+			} elseif (isset($_GET[$extra_param])) {
+				$redirect_page .= $extra_param.'='.$_GET[$extra_param].'&amp;';
+				
+				// for the confirmation page
+				$comment_confirm_extra [$extra_param] = $_GET[$extra_param];
+			}
+		}
+	}
+	$redirect_page .= $comment_config['itemName'];
+	$moddir = $xoopsModule->getVar('dirname');
+}
+
+$accesserror = false;
+if (!is_object($xoopsUser)) {
+	$accesserror = true;
+} else {
+	if (!$xoopsUser->isAdmin($com_modid)) {
+			$sysperm_handler =& xoops_gethandler('groupperm');
+			if (!$sysperm_handler->checkRight('system_admin', XOOPS_SYSTEM_COMMENT, $xoopsUser->getGroups())) {
+				$accesserror = true;
+			}
+	}
+}
+
+if (false != $accesserror) {
+	$ref = xoops_getenv('HTTP_REFERER');
+	if ($ref != '') {
+		redirect_header($ref, 2, _NOPERM);
+	} else {
+		redirect_header($redirect_page.'?'.$comment_config['itemName'].'='.intval($com_itemid), 2, _NOPERM);
+	}
+	exit();
+}
+
+include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/comment.php';
+
+switch ($op) {
+case 'delete_one':
+	$comment_handler = xoops_gethandler('comment');
+	$comment =& $comment_handler->get($com_id);
+	if (!$comment_handler->delete($comment)) {
+		include XOOPS_ROOT_PATH.'/header.php';
+		xoops_error(_CM_COMDELETENG.' (ID: '.$comment->getVar('com_id').')');
+		include XOOPS_ROOT_PATH.'/footer.php';
+		exit();
+	}
+
+	$com_itemid = $comment->getVar('com_itemid');
+
+	// execute updateStat callback function if set
+	if (isset($comment_config['callback']['update']) && trim($comment_config['callback']['update']) != '') {
+		$skip = false;
+		if (!function_exists($comment_config['callback']['update'])) {
+			if (isset($comment_config['callbackFile'])) {
+				$callbackfile = trim($comment_config['callbackFile']);
+				if ($callbackfile != '' && file_exists(XOOPS_ROOT_PATH.'/modules/'.$moddir.'/'.$callbackfile)) {
+					include_once XOOPS_ROOT_PATH.'/modules/'.$moddir.'/'.$callbackfile;
+				}
+				if (!function_exists($comment_config['callback']['update'])) {
+					$skip = true;
+				}
+			} else {
+				$skip = true;
+			}
+		}
+		if (!$skip) {
+			$criteria = new CriteriaCompo(new Criteria('com_modid', $com_modid));
+			$criteria->add(new Criteria('com_itemid', $com_itemid));
+			$criteria->add(new Criteria('com_status', XOOPS_COMMENT_ACTIVE));
+			$comment_count = $comment_handler->getCount($criteria);
+			$comment_config['callback']['update']($com_itemid, $comment_count);
+		}
+	}
+
+	// update user posts if its not an anonymous post
+	if ($comment->getVar('com_uid') != 0) {
+		$member_handler =& xoops_gethandler('member');
+		$com_poster =& $member_handler->getUser($comment->getVar('com_uid'));
+		if (is_object($com_poster)) {
+			$member_handler->updateUserByField($com_poster, 'posts', $com_poster->getVar('posts') - 1);
+		}
+	}
+
+	// get all comments posted later within the same thread
+	$thread_comments =& $comment_handler->getThread($comment->getVar('com_rootid'), $com_id);
+	
+	include_once XOOPS_ROOT_PATH.'/class/tree.php';
+	$xot = new XoopsObjectTree($thread_comments, 'com_id', 'com_pid', 'com_rootid');
+
+	$child_comments =& $xot->getFirstChild($com_id);
+
+	// now set new parent ID for direct child comments
+	$new_pid = $comment->getVar('com_pid');
+	$errs = array();
+	foreach (array_keys($child_comments) as $i) {
+		$child_comments[$i]->setVar('com_pid', $new_pid);
+		// if the deleted comment is a root comment, need to change root id to own id
+		if (false != $comment->isRoot()) {
+			$new_rootid = $child_comments[$i]->getVar('com_id');
+			$child_comments[$i]->setVar('com_rootid', $child_comments[$i]->getVar('com_id'));
+			if (!$comment_handler->insert($child_comments[$i])) {
+				$errs[] = 'Could not change comment parent ID from <b>'.$com_id.'</b> to <b>'.$new_pid.'</b>. (ID: '.$new_rootid.')';
+			} else {
+				// need to change root id for all its child comments as well
+				$c_child_comments =& $xot->getAllChild($new_rootid);
+				$cc_count = count($c_child_comments);
+				foreach (array_keys($c_child_comments) as $j) {
+					$c_child_comments[$j]->setVar('com_rootid', $new_rootid);
+					if (!$comment_handler->insert($c_child_comments[$j])) {
+						$errs[] = 'Could not change comment root ID from <b>'.$com_id.'</b> to <b>'.$new_rootid.'</b>.';
+					}
+				}
+			}
+		} else {
+			if (!$comment_handler->insert($child_comments[$i])) {
+				$errs[] = 'Could not change comment parent ID from <b>'.$com_id.'</b> to <b>'.$new_pid.'</b>.';
+			}
+		}
+	}
+	if (count($errs) > 0) {
+		include XOOPS_ROOT_PATH.'/header.php';
+		xoops_error($errs);
+		include XOOPS_ROOT_PATH.'/footer.php';
+		exit();
+	}
+	redirect_header($redirect_page.'='.$com_itemid.'&amp;com_order='.$com_order.'&amp;com_mode='.$com_mode, 1, _CM_COMDELETED);
+	break;
+
+case 'delete_all':
+	$comment_handler = xoops_gethandler('comment');
+	$comment =& $comment_handler->get($com_id);
+	$com_rootid = $comment->getVar('com_rootid');
+
+	// get all comments posted later within the same thread
+	$thread_comments =& $comment_handler->getThread($com_rootid, $com_id);
+
+	// construct a comment tree
+	include_once XOOPS_ROOT_PATH.'/class/tree.php';
+	$xot = new XoopsObjectTree($thread_comments, 'com_id', 'com_pid', 'com_rootid');
+	$child_comments =& $xot->getAllChild($com_id);
+	// add itself here
+	$child_comments[$com_id] =& $comment;
+	$msgs = array();
+	$deleted_num = array();
+	$member_handler =& xoops_gethandler('member');
+	foreach (array_keys($child_comments) as $i) {
+		if (!$comment_handler->delete($child_comments[$i])) {
+			$msgs[] = _CM_COMDELETENG.' (ID: '.$child_comments[$i]->getVar('com_id').')';
+		} else {
+			$msgs[] = _CM_COMDELETED.' (ID: '.$child_comments[$i]->getVar('com_id').')';
+			// store poster ID and deleted post number into array for later use
+			$poster_id = $child_comments[$i]->getVar('com_uid');
+			if ($poster_id > 0) {
+				$deleted_num[$poster_id] = !isset($deleted_num[$poster_id]) ? 1 : ($deleted_num[$poster_id] + 1);
+			}
+		}
+	}
+	foreach ($deleted_num as $user_id => $post_num) {
+		// update user posts
+		$com_poster = $member_handler->getUser($user_id);
+		if (is_object($com_poster)) {
+			$member_handler->updateUserByField($com_poster, 'posts', $com_poster->getVar('posts') - $post_num);
+		}
+	}
+
+	$com_itemid = $comment->getVar('com_itemid');
+
+	// execute updateStat callback function if set
+	if (isset($comment_config['callback']['update']) && trim($comment_config['callback']['update']) != '') {
+		$skip = false;
+		if (!function_exists($comment_config['callback']['update'])) {
+			if (isset($comment_config['callbackFile'])) {
+				$callbackfile = trim($comment_config['callbackFile']);
+				if ($callbackfile != '' && file_exists(XOOPS_ROOT_PATH.'/modules/'.$moddir.'/'.$callbackfile)) {
+					include_once XOOPS_ROOT_PATH.'/modules/'.$moddir.'/'.$callbackfile;
+				}
+				if (!function_exists($comment_config['callback']['update'])) {
+					$skip = true;
+				}
+			} else {
+				$skip = true;
+			}
+		}
+		if (!$skip) {
+			$criteria = new CriteriaCompo(new Criteria('com_modid', $com_modid));
+			$criteria->add(new Criteria('com_itemid', $com_itemid));
+			$criteria->add(new Criteria('com_status', XOOPS_COMMENT_ACTIVE));
+			$comment_count = $comment_handler->getCount($criteria);
+			$comment_config['callback']['update']($com_itemid, $comment_count);
+		}
+	}
+
+	include XOOPS_ROOT_PATH.'/header.php';
+	xoops_result($msgs);
+	echo '<br /><a href="'.$redirect_page.'='.$com_itemid.'&amp;com_order='.$com_order.'&amp;com_mode='.$com_mode.'">'._BACK.'</a>';
+	include XOOPS_ROOT_PATH.'/footer.php';
+	break;
+
+case 'delete':
+default:
+	include XOOPS_ROOT_PATH.'/header.php';
+	$comment_confirm = array('com_id' => $com_id, 'com_mode' => $com_mode, 'com_order' => $com_order, 'op' => array(_CM_DELETEONE => 'delete_one', _CM_DELETEALL => 'delete_all'));
+	if (!empty($comment_confirm_extra) && is_array($comment_confirm_extra)) {
+		$comment_confirm = $comment_confirm + $comment_confirm_extra;
+	}
+	xoops_confirm($comment_confirm, 'comment_delete.php', _CM_DELETESELECT);
+	include XOOPS_ROOT_PATH.'/footer.php';
+	break;
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/comment_delete.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/comment_edit.php
===================================================================
--- XoopsCore/trunk/htdocs/include/comment_edit.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/comment_edit.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,81 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH') || !is_object($xoopsModule)) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH.'/include/comment_constants.php';
+if ('system' != $xoopsModule->getVar('dirname') && XOOPS_COMMENT_APPROVENONE == $xoopsModuleConfig['com_rule']) {
+	exit();
+}
+
+include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/comment.php';
+$com_id = isset($_GET['com_id']) ? intval($_GET['com_id']) : 0;
+$com_mode = isset($_GET['com_mode']) ? htmlspecialchars(trim($_GET['com_mode']), ENT_QUOTES) : '';
+if ($com_mode == '') {
+	if (is_object($xoopsUser)) {
+		$com_mode = $xoopsUser->getVar('umode');
+	} else {
+		$com_mode = $xoopsConfig['com_mode'];
+	}
+}
+if (!isset($_GET['com_order'])) {
+	if (is_object($xoopsUser)) {
+		$com_order = $xoopsUser->getVar('uorder');
+	} else {
+		$com_order = $xoopsConfig['com_order'];
+	}
+} else {
+	$com_order = intval($_GET['com_order']);
+}
+$comment_handler =& xoops_gethandler('comment');
+$comment =& $comment_handler->get($com_id);
+$dohtml = $comment->getVar('dohtml');
+$dosmiley = $comment->getVar('dosmiley');
+$dobr = $comment->getVar('dobr');
+$doxcode = $comment->getVar('doxcode');
+$com_icon = $comment->getVar('com_icon');
+$com_itemid = $comment->getVar('com_itemid');
+$com_title = $comment->getVar('com_title', 'E');
+$com_text = $comment->getVar('com_text', 'E');
+$com_pid = $comment->getVar('com_pid');
+$com_status = $comment->getVar('com_status');
+$com_rootid = $comment->getVar('com_rootid');
+if ($xoopsModule->getVar('dirname') != 'system') {
+	include XOOPS_ROOT_PATH.'/header.php';
+	include XOOPS_ROOT_PATH.'/include/comment_form.php';
+	include XOOPS_ROOT_PATH.'/footer.php';
+} else {
+	xoops_cp_header();
+	include XOOPS_ROOT_PATH.'/include/comment_form.php';
+	xoops_cp_footer();
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/comment_edit.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/comment_form.php
===================================================================
--- XoopsCore/trunk/htdocs/include/comment_form.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/comment_form.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,124 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+if (!defined('XOOPS_ROOT_PATH') || !is_object($xoopsModule)) {
+	exit();
+}
+$com_modid = $xoopsModule->getVar('mid');
+include_once XOOPS_ROOT_PATH."/class/xoopslists.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsformloader.php";
+$cform = new XoopsThemeForm(_CM_POSTCOMMENT, "commentform", 'comment_post.php', 'post', true);
+if (isset($xoopsModuleConfig['com_rule'])) {
+	include_once XOOPS_ROOT_PATH.'/include/comment_constants.php';
+	switch ($xoopsModuleConfig['com_rule']) {
+	case XOOPS_COMMENT_APPROVEALL:
+		$rule_text = _CM_COMAPPROVEALL;
+		break;
+	case XOOPS_COMMENT_APPROVEUSER:
+		$rule_text = _CM_COMAPPROVEUSER;
+		break;
+	case XOOPS_COMMENT_APPROVEADMIN:
+		default:
+		$rule_text = _CM_COMAPPROVEADMIN;
+		break;
+	}
+	$cform->addElement(new XoopsFormLabel(_CM_COMRULES, $rule_text));
+}
+
+$cform->addElement(new XoopsFormText(_CM_TITLE, 'com_title', 50, 255, $com_title), true);
+$icons_radio = new XoopsFormRadio(_MESSAGEICON, 'com_icon', $com_icon);
+$subject_icons = XoopsLists::getSubjectsList();
+foreach ($subject_icons as $iconfile) {
+	$icons_radio->addOption($iconfile, '<img src="'.XOOPS_URL.'/images/subject/'.$iconfile.'" alt="" />');
+}
+$cform->addElement($icons_radio);
+$cform->addElement(new XoopsFormDhtmlTextArea(_CM_MESSAGE, 'com_text', $com_text, 10, 50), true);
+$option_tray = new XoopsFormElementTray(_OPTIONS,'<br />');
+
+$button_tray = new XoopsFormElementTray('' ,'&nbsp;');
+
+
+if (is_object($xoopsUser)) {
+	if ($xoopsModuleConfig['com_anonpost'] == 1) {
+		$noname = !empty($noname) ? 1 : 0;
+		$noname_checkbox = new XoopsFormCheckBox('', 'noname', $noname);
+		$noname_checkbox->addOption(1, _POSTANON);
+		$option_tray->addElement($noname_checkbox);
+	}
+	if (false != $xoopsUser->isAdmin($com_modid)) {
+		// show status change box when editing (comment id is not empty)
+		if (!empty($com_id)) {
+			include_once XOOPS_ROOT_PATH.'/include/comment_constants.php';
+			$status_select = new XoopsFormSelect(_CM_STATUS, 'com_status', $com_status);
+			$status_select->addOptionArray(array(XOOPS_COMMENT_PENDING => _CM_PENDING, XOOPS_COMMENT_ACTIVE => _CM_ACTIVE, XOOPS_COMMENT_HIDDEN => _CM_HIDDEN));
+			$cform->addElement($status_select);
+		}
+		$html_checkbox = new XoopsFormCheckBox('', 'dohtml', $dohtml);
+		$html_checkbox->addOption(1, _CM_DOHTML);
+		$option_tray->addElement($html_checkbox);
+		$button_tray->addElement(new XoopsFormButton('', 'com_dodelete', _DELETE, 'submit'));
+	}
+}
+$smiley_checkbox = new XoopsFormCheckBox('', 'dosmiley', $dosmiley);
+$smiley_checkbox->addOption(1, _CM_DOSMILEY);
+$option_tray->addElement($smiley_checkbox);
+$xcode_checkbox = new XoopsFormCheckBox('', 'doxcode', $doxcode);
+$xcode_checkbox->addOption(1, _CM_DOXCODE);
+$option_tray->addElement($xcode_checkbox);
+$br_checkbox = new XoopsFormCheckBox('', 'dobr', $dobr);
+$br_checkbox->addOption(1, _CM_DOAUTOWRAP);
+$option_tray->addElement($br_checkbox);
+
+$cform->addElement($option_tray);
+$cform->addElement(new XoopsFormHidden('com_pid', intval($com_pid)));
+$cform->addElement(new XoopsFormHidden('com_rootid', intval($com_rootid)));
+$cform->addElement(new XoopsFormHidden('com_id', $com_id));
+$cform->addElement(new XoopsFormHidden('com_itemid', $com_itemid));
+$cform->addElement(new XoopsFormHidden('com_order', $com_order));
+$cform->addElement(new XoopsFormHidden('com_mode', $com_mode));
+
+// add module specific extra params
+
+if ('system' != $xoopsModule->getVar('dirname')) {
+	$comment_config = $xoopsModule->getInfo('comments');
+ 	if (isset($comment_config['extraParams']) && is_array($comment_config['extraParams'])) {
+ 		foreach ($comment_config['extraParams'] as $extra_param) {
+			// This routine is included from forms accessed via both GET and POST
+			if (isset($_REQUEST[$extra_param])) {
+				$hidden_value = htmlspecialchars($_REQUEST[$extra_param]);
+			} else {
+				$hidden_value = '';
+			}
+ 			$cform->addElement(new XoopsFormHidden($extra_param, $hidden_value));
+ 		}
+ 	}
+}
+$button_tray->addElement(new XoopsFormButton('', 'com_dopreview', _PREVIEW, 'submit'));
+$button_tray->addElement(new XoopsFormButton('', 'com_dopost', _CM_POSTCOMMENT, 'submit'));
+$cform->addElement($button_tray);
+$cform->display();
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/comment_form.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/comment_new.php
===================================================================
--- XoopsCore/trunk/htdocs/include/comment_new.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/comment_new.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,90 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH') || !is_object($xoopsModule)) {
+	exit();
+}
+
+include_once XOOPS_ROOT_PATH.'/include/comment_constants.php';
+if ('system' != $xoopsModule->getVar('dirname') && XOOPS_COMMENT_APPROVENONE == $xoopsModuleConfig['com_rule']) {
+	exit();
+}
+
+include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/comment.php';
+$com_itemid = isset($_GET['com_itemid']) ? intval($_GET['com_itemid']) : 0;
+
+if ($com_itemid > 0) {
+	include XOOPS_ROOT_PATH.'/header.php';
+	if (isset($com_replytitle)) {
+		if (isset($com_replytext)) {
+			themecenterposts($com_replytitle, $com_replytext);
+		}
+		$myts =& MyTextSanitizer::getInstance();
+		$com_title = $myts->htmlSpecialChars($com_replytitle);
+		if (!preg_match("/^re:/i", $com_title)) {
+			$com_title = "Re: ".xoops_substr($com_title, 0, 56);
+		}
+	} else {
+		$com_title = '';
+	}
+	$com_mode = isset($_GET['com_mode']) ? htmlspecialchars(trim($_GET['com_mode']), ENT_QUOTES) : '';
+	if ($com_mode == '') {
+		if (is_object($xoopsUser)) {
+			$com_mode = $xoopsUser->getVar('umode');
+		} else {
+			$com_mode = $xoopsConfig['com_mode'];
+		}
+	}
+	
+	if (!isset($_GET['com_order'])) {
+		if (is_object($xoopsUser)) {
+			$com_order = $xoopsUser->getVar('uorder');
+		} else {
+			$com_order = $xoopsConfig['com_order'];
+		}
+	} else {
+		$com_order = intval($_GET['com_order']);
+	}
+	$com_id = 0;
+	$noname = 0;
+	$dosmiley = 1;
+	$dohtml = 0;
+	$dobr = 1;
+	$doxcode = 1;
+	$com_icon = '';
+	$com_pid = 0;
+	$com_rootid = 0;
+	$com_text = '';
+
+	include XOOPS_ROOT_PATH.'/include/comment_form.php';
+	include XOOPS_ROOT_PATH.'/footer.php';
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/comment_new.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/comment_post.php
===================================================================
--- XoopsCore/trunk/htdocs/include/comment_post.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/comment_post.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,404 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH') || !is_object($xoopsModule)) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/comment.php';
+include_once XOOPS_ROOT_PATH.'/include/comment_constants.php';
+if ('system' == $xoopsModule->getVar('dirname')) {
+	$com_id = isset($_POST['com_id']) ? intval($_POST['com_id']) : 0;
+	if (empty($com_id)) {
+		exit();
+	}
+	$comment_handler =& xoops_gethandler('comment');
+	$comment =& $comment_handler->get($com_id);
+	$module_handler =& xoops_gethandler('module');
+	$module =& $module_handler->get($comment->getVar('com_modid'));
+	$comment_config = $module->getInfo('comments');
+	$com_modid = $module->getVar('mid');
+	$redirect_page = XOOPS_URL.'/modules/system/admin.php?fct=comments&amp;com_modid='.$com_modid.'&amp;com_itemid';
+	$moddir = $module->getVar('dirname');
+	unset($comment);
+} else {
+    $com_id = isset($_POST['com_id']) ? intval($_POST['com_id']) : 0;
+	if (XOOPS_COMMENT_APPROVENONE == $xoopsModuleConfig['com_rule']) {
+		exit();
+	}
+	$comment_config = $xoopsModule->getInfo('comments');
+	$com_modid = $xoopsModule->getVar('mid');
+	$redirect_page = $comment_config['pageName'].'?';
+	if (isset($comment_config['extraParams']) && is_array($comment_config['extraParams'])) {
+		$extra_params = '';
+		foreach ($comment_config['extraParams'] as $extra_param) {
+			$extra_params .= isset($_POST[$extra_param]) ? $extra_param.'='.htmlspecialchars($_POST[$extra_param]).'&amp;' : $extra_param.'=&amp;';
+		}
+		$redirect_page .= $extra_params;
+	}
+	$redirect_page .= $comment_config['itemName'];
+	$comment_url = $redirect_page;
+	$moddir = $xoopsModule->getVar('dirname');
+}
+$op = '';
+if (!empty($_POST)) {
+	if (isset($_POST['com_dopost'])) {
+        $op = 'post';
+    } elseif (isset($_POST['com_dopreview'])) {
+        $op = 'preview';
+    }
+    if (isset($_POST['com_dodelete'])) {
+        $op = 'delete';
+    }
+
+	if ($op == 'preview' || $op == 'post') {
+		if (!$GLOBALS['xoopsSecurity']->check()) {
+			$op = '';
+		}
+	}
+
+	$com_mode = isset($_POST['com_mode']) ? htmlspecialchars(trim($_POST['com_mode']), ENT_QUOTES) : 'flat';
+    $com_order = isset($_POST['com_order']) ? intval($_POST['com_order']) : XOOPS_COMMENT_OLD1ST;
+    $com_itemid = isset($_POST['com_itemid']) ? intval($_POST['com_itemid']) : 0;
+    $com_pid = isset($_POST['com_pid']) ? intval($_POST['com_pid']) : 0;
+    $com_rootid = isset($_POST['com_rootid']) ? intval($_POST['com_rootid']) : 0;
+    $com_status = isset($_POST['com_status']) ? intval($_POST['com_status']) : 0;
+    $dosmiley = (isset($_POST['dosmiley']) && intval($_POST['dosmiley']) > 0) ? 1 : 0;
+    $doxcode = (isset($_POST['doxcode']) && intval($_POST['doxcode']) > 0) ? 1 : 0;
+    $dobr = (isset($_POST['dobr']) && intval($_POST['dobr']) > 0) ? 1 : 0;
+    $dohtml = (isset($_POST['dohtml']) && intval($_POST['dohtml']) > 0) ? 1 : 0;
+    $doimage = (isset($_POST['doimage']) && intval($_POST['doimage']) > 0) ? 1 : 0;
+    $com_icon = isset($_POST['com_icon']) ? trim($_POST['com_icon']) : '';
+} else {
+	exit();
+}
+
+switch ( $op ) {
+
+case "delete":
+    include XOOPS_ROOT_PATH.'/include/comment_delete.php';
+    break;
+case "preview":
+    $myts =& MyTextSanitizer::getInstance();
+    $doimage = 1;
+    $com_title = $myts->htmlSpecialChars($myts->stripSlashesGPC($_POST['com_title']));
+    if ($dohtml != 0) {
+        if (is_object($xoopsUser)) {
+            if (!$xoopsUser->isAdmin($com_modid)) {
+                $sysperm_handler =& xoops_gethandler('groupperm');
+                if (!$sysperm_handler->checkRight('system_admin', XOOPS_SYSTEM_COMMENT, $xoopsUser->getGroups())) {
+                    $dohtml = 0;
+                }
+            }
+        } else {
+            $dohtml = 0;
+        }
+    }
+    $p_comment =& $myts->previewTarea($_POST['com_text'], $dohtml, $dosmiley, $doxcode, $doimage, $dobr);
+    $noname = isset($noname) ? intval($noname) : 0;
+    $com_text = $myts->htmlSpecialChars($myts->stripSlashesGPC($_POST['com_text']));
+    if ($xoopsModule->getVar('dirname') != 'system') {
+        include XOOPS_ROOT_PATH.'/header.php';
+        themecenterposts($com_title, $p_comment);
+        include XOOPS_ROOT_PATH.'/include/comment_form.php';
+        include XOOPS_ROOT_PATH.'/footer.php';
+    } else {
+        xoops_cp_header();
+        themecenterposts($com_title, $p_comment);
+        include XOOPS_ROOT_PATH.'/include/comment_form.php';
+        xoops_cp_footer();
+    }
+    break;
+case "post":
+    $doimage = 1;
+    $comment_handler =& xoops_gethandler('comment');
+    $add_userpost = false;
+    $call_approvefunc = false;
+    $call_updatefunc = false;
+    // RMV-NOTIFY - this can be set to 'comment' or 'comment_submit'
+    $notify_event = false;
+    if (!empty($com_id)) {
+        $comment =& $comment_handler->get($com_id);
+        $accesserror = false;
+
+        if (is_object($xoopsUser)) {
+            $sysperm_handler =& xoops_gethandler('groupperm');
+            if ($xoopsUser->isAdmin($com_modid) || $sysperm_handler->checkRight('system_admin', XOOPS_SYSTEM_COMMENT, $xoopsUser->getGroups())) {
+                if (!empty($com_status) && $com_status != XOOPS_COMMENT_PENDING) {
+                    $old_com_status = $comment->getVar('com_status');
+                    $comment->setVar('com_status', $com_status);
+                    // if changing status from pending state, increment user post
+                    if (XOOPS_COMMENT_PENDING == $old_com_status) {
+                        $add_userpost = true;
+                        if (XOOPS_COMMENT_ACTIVE == $com_status) {
+                            $call_updatefunc = true;
+                            $call_approvefunc = true;
+                            // RMV-NOTIFY
+                            $notify_event = 'comment';
+                        }
+                    } elseif (XOOPS_COMMENT_HIDDEN == $old_com_status && XOOPS_COMMENT_ACTIVE == $com_status) {
+                        $call_updatefunc = true;
+                        // Comments can not be directly posted hidden,
+                        // no need to send notification here
+                    } elseif (XOOPS_COMMENT_ACTIVE == $old_com_status && XOOPS_COMMENT_HIDDEN == $com_status) {
+                        $call_updatefunc = true;
+                    }
+                }
+            } else {
+                $dohtml = 0;
+                if ($comment->getVar('com_uid') != $xoopsUser->getVar('uid')) {
+                    $accesserror = true;
+                }
+            }
+        } else {
+            $dohtml = 0;
+            $accesserror = true;
+        }
+        if (false != $accesserror) {
+            redirect_header($redirect_page.'='.$com_itemid.'&amp;com_id='.$com_id.'&amp;com_mode='.$com_mode.'&amp;com_order='.$com_order, 1, _NOPERM);
+            exit();
+        }
+    } else {
+        $comment = $comment_handler->create();
+        $comment->setVar('com_created', time());
+        $comment->setVar('com_pid', $com_pid);
+        $comment->setVar('com_itemid', $com_itemid);
+        $comment->setVar('com_rootid', $com_rootid);
+        $comment->setVar('com_ip', xoops_getenv('REMOTE_ADDR'));
+        if (is_object($xoopsUser)) {
+            $sysperm_handler =& xoops_gethandler('groupperm');
+            if ($xoopsUser->isAdmin($com_modid) || $sysperm_handler->checkRight('system_admin', XOOPS_SYSTEM_COMMENT, $xoopsUser->getGroups())) {
+                $comment->setVar('com_status', XOOPS_COMMENT_ACTIVE);
+                $add_userpost = true;
+                $call_approvefunc = true;
+                $call_updatefunc = true;
+                // RMV-NOTIFY
+                $notify_event = 'comment';
+            } else {
+                $dohtml = 0;
+                switch ($xoopsModuleConfig['com_rule']) {
+                case XOOPS_COMMENT_APPROVEALL:
+                case XOOPS_COMMENT_APPROVEUSER:
+                    $comment->setVar('com_status', XOOPS_COMMENT_ACTIVE);
+                    $add_userpost = true;
+                    $call_approvefunc = true;
+                    $call_updatefunc = true;
+                    // RMV-NOTIFY
+                    $notify_event = 'comment';
+                    break;
+                case XOOPS_COMMENT_APPROVEADMIN:
+                default:
+                    $comment->setVar('com_status', XOOPS_COMMENT_PENDING);
+                    $notify_event = 'comment_submit';
+                    break;
+                }
+            }
+            if (!empty($xoopsModuleConfig['com_anonpost']) && !empty($noname)) {
+                $uid = 0;
+            } else {
+                $uid = $xoopsUser->getVar('uid');
+            }
+        } else {
+            $dohtml = 0;
+            $uid = 0;
+            if ($xoopsModuleConfig['com_anonpost'] != 1) {
+                redirect_header($redirect_page.'='.$com_itemid.'&amp;com_id='.$com_id.'&amp;com_mode='.$com_mode.'&amp;com_order='.$com_order, 1, _NOPERM);
+                exit();
+            }
+        }
+        if ($uid == 0) {
+            switch ($xoopsModuleConfig['com_rule']) {
+            case XOOPS_COMMENT_APPROVEALL:
+                $comment->setVar('com_status', XOOPS_COMMENT_ACTIVE);
+                $add_userpost = true;
+                $call_approvefunc = true;
+                $call_updatefunc = true;
+                // RMV-NOTIFY
+                $notify_event = 'comment';
+                break;
+            case XOOPS_COMMENT_APPROVEADMIN:
+            case XOOPS_COMMENT_APPROVEUSER:
+            default:
+                $comment->setVar('com_status', XOOPS_COMMENT_PENDING);
+                // RMV-NOTIFY
+                $notify_event = 'comment_submit';
+                break;
+            }
+        }
+        $comment->setVar('com_uid', $uid);
+    }
+    $com_title = xoops_trim($_POST['com_title']);
+    $com_title = ($com_title == '') ? _NOTITLE : $com_title;
+    $comment->setVar('com_title', $com_title);
+    $comment->setVar('com_text', $_POST['com_text']);
+    $comment->setVar('dohtml', $dohtml);
+    $comment->setVar('dosmiley', $dosmiley);
+    $comment->setVar('doxcode', $doxcode);
+    $comment->setVar('doimage', $doimage);
+    $comment->setVar('dobr', $dobr);
+    $comment->setVar('com_icon', $com_icon);
+    $comment->setVar('com_modified', time());
+    $comment->setVar('com_modid', $com_modid);
+    if (isset($extra_params)) {
+        $comment->setVar('com_exparams', $extra_params);
+    }
+    if (false != $comment_handler->insert($comment)) {
+        $newcid = $comment->getVar('com_id');
+
+        // set own id as root id if this is a top comment
+        if ($com_rootid == 0) {
+            $com_rootid = $newcid;
+            if (!$comment_handler->updateByField($comment, 'com_rootid', $com_rootid)) {
+                $comment_handler->delete($comment);
+                include XOOPS_ROOT_PATH.'/header.php';
+                xoops_error();
+                include XOOPS_ROOT_PATH.'/footer.php';
+            }
+        }
+
+        // call custom approve function if any
+        if (false != $call_approvefunc && isset($comment_config['callback']['approve']) && trim($comment_config['callback']['approve']) != '') {
+            $skip = false;
+            if (!function_exists($comment_config['callback']['approve'])) {
+                if (isset($comment_config['callbackFile'])) {
+                    $callbackfile = trim($comment_config['callbackFile']);
+                    if ($callbackfile != '' && file_exists(XOOPS_ROOT_PATH.'/modules/'.$moddir.'/'.$callbackfile)) {
+                        include_once XOOPS_ROOT_PATH.'/modules/'.$moddir.'/'.$callbackfile;
+                    }
+                    if (!function_exists($comment_config['callback']['approve'])) {
+                        $skip = true;
+                    }
+                } else {
+                    $skip = true;
+                }
+            }
+            if (!$skip) {
+                $comment_config['callback']['approve']($comment);
+            }
+        }
+
+        // call custom update function if any
+        if (false != $call_updatefunc && isset($comment_config['callback']['update']) && trim($comment_config['callback']['update']) != '') {
+            $skip = false;
+            if (!function_exists($comment_config['callback']['update'])) {
+                if (isset($comment_config['callbackFile'])) {
+                    $callbackfile = trim($comment_config['callbackFile']);
+                    if ($callbackfile != '' && file_exists(XOOPS_ROOT_PATH.'/modules/'.$moddir.'/'.$callbackfile)) {
+                        include_once XOOPS_ROOT_PATH.'/modules/'.$moddir.'/'.$callbackfile;
+                    }
+                    if (!function_exists($comment_config['callback']['update'])) {
+                        $skip = true;
+                    }
+                } else {
+                    $skip = true;
+                }
+            }
+            if (!$skip) {
+                $criteria = new CriteriaCompo(new Criteria('com_modid', $com_modid));
+                $criteria->add(new Criteria('com_itemid', $com_itemid));
+                $criteria->add(new Criteria('com_status', XOOPS_COMMENT_ACTIVE));
+                $comment_count = $comment_handler->getCount($criteria);
+                $func = $comment_config['callback']['update'];
+                call_user_func_array($func, array($com_itemid, $comment_count, $comment->getVar('com_id')));
+            }
+        }
+
+        // increment user post if needed
+        $uid = $comment->getVar('com_uid');
+        if ($uid > 0 && false != $add_userpost) {
+            $member_handler =& xoops_gethandler('member');
+            $poster =& $member_handler->getUser($uid);
+            if (is_object($poster)) {
+                $member_handler->updateUserByField($poster, 'posts', $poster->getVar('posts') + 1);
+            }
+        }
+
+        // RMV-NOTIFY
+        // trigger notification event if necessary
+        if ($notify_event) {
+            $not_modid = $com_modid;
+            include_once XOOPS_ROOT_PATH . '/include/notification_functions.php';
+            $not_catinfo =& notificationCommentCategoryInfo($not_modid);
+            $not_category = $not_catinfo['name'];
+            $not_itemid = $com_itemid;
+            $not_event = $notify_event;
+            // Build an ABSOLUTE URL to view the comment.  Make sure we
+            // point to a viewable page (i.e. not the system administration
+            // module).
+            $comment_tags = array();
+            if ('system' == $xoopsModule->getVar('dirname')) {
+                $module_handler =& xoops_gethandler('module');
+                $not_module =& $module_handler->get($not_modid);
+            } else {
+                $not_module =& $xoopsModule;
+            }
+            if (!isset($comment_url)) {
+                $com_config =& $not_module->getInfo('comments');
+                $comment_url = $com_config['pageName'] . '?';
+                if (isset($com_config['extraParams']) && is_array($com_config['extraParams'])) {
+                    $extra_params = '';
+                    foreach ($com_config['extraParams'] as $extra_param) {
+                        $extra_params .= isset($_POST[$extra_param]) ? $extra_param.'='.htmlspecialchars($_POST[$extra_param]).'&amp;' : $extra_param.'=&amp;';
+                        //$extra_params .= isset($_GET[$extra_param]) ? $extra_param.'='.$_GET[$extra_param].'&amp;' : $extra_param.'=&amp;';
+                    }
+                    $comment_url .= $extra_params;
+                }
+                $comment_url .= $com_config['itemName'];
+            }
+            $comment_tags['X_COMMENT_URL'] = XOOPS_URL . '/modules/' . $not_module->getVar('dirname') . '/' .$comment_url . '=' . $com_itemid.'&amp;com_id='.$newcid.'&amp;com_rootid='.$com_rootid.'&amp;com_mode='.$com_mode.'&amp;com_order='.$com_order.'#comment'.$newcid;
+            $notification_handler =& xoops_gethandler('notification');
+            $notification_handler->triggerEvent ($not_category, $not_itemid, $not_event, $comment_tags, false, $not_modid);
+        }
+
+        if (!isset($comment_post_results)) {
+
+            // if the comment is active, redirect to posted comment
+            if ($comment->getVar('com_status') == XOOPS_COMMENT_ACTIVE) {
+                redirect_header($redirect_page.'='.$com_itemid.'&amp;com_id='.$newcid.'&amp;com_rootid='.$com_rootid.'&amp;com_mode='.$com_mode.'&amp;com_order='.$com_order.'#comment'.$newcid, 2, _CM_THANKSPOST);
+            } else {
+                // not active, so redirect to top comment page
+                redirect_header($redirect_page.'='.$com_itemid.'&amp;com_mode='.$com_mode.'&amp;com_order='.$com_order.'#comment'.$newcid, 2, _CM_THANKSPOST);
+            }
+        }
+    } else {
+        if (!isset($purge_comment_post_results)) {
+            include XOOPS_ROOT_PATH.'/header.php';
+            xoops_error($comment->getHtmlErrors());
+            include XOOPS_ROOT_PATH.'/footer.php';
+        } else {
+            $comment_post_results = $comment->getErrors();
+        }
+    }
+    break;
+default:
+	redirect_header(XOOPS_URL.'/',3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+	break;
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/comment_post.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/comment_reply.php
===================================================================
--- XoopsCore/trunk/htdocs/include/comment_reply.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/comment_reply.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,76 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH') || !is_object($xoopsModule)) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/comment.php';
+$com_id = isset($_GET['com_id']) ? intval($_GET['com_id']) : 0;
+$com_mode = isset($_GET['com_mode']) ? htmlspecialchars(trim($_GET['com_mode']), ENT_QUOTES) : '';
+if ($com_mode == '') {
+	if (is_object($xoopsUser)) {
+		$com_mode = $xoopsUser->getVar('umode');
+	} else {
+		$com_mode = $xoopsConfig['com_mode'];
+	}
+}
+if (!isset($_GET['com_order'])) {
+	if (is_object($xoopsUser)) {
+		$com_order = $xoopsUser->getVar('uorder');
+	} else {
+		$com_order = $xoopsConfig['com_order'];
+	}
+} else {
+	$com_order = intval($_GET['com_order']);
+}
+$comment_handler =& xoops_gethandler('comment');
+$comment =& $comment_handler->get($com_id);
+$r_name = XoopsUser::getUnameFromId($comment->getVar('com_uid'));
+$r_text = _CM_POSTER.': <b>'.$r_name.'</b>&nbsp;&nbsp;'._CM_POSTED.': <b>'.formatTimestamp($comment->getVar('com_created')).'</b><br /><br />'.$comment->getVar('com_text');$com_title = $comment->getVar('com_title', 'E');
+if (!preg_match("/^re:/i", $com_title)) {
+	$com_title = "Re: ".xoops_substr($com_title, 0, 56);
+}
+$com_pid = $com_id;
+$com_text = '';
+$com_id = 0;
+$dosmiley = 1;
+$dohtml = 0;
+$doxcode = 1;
+$dobr = 1;
+$doimage = 1;
+$com_icon = '';
+$com_rootid = $comment->getVar('com_rootid');
+$com_itemid = $comment->getVar('com_itemid');
+include XOOPS_ROOT_PATH.'/header.php';
+themecenterposts($comment->getVar('com_title'), $r_text);
+include XOOPS_ROOT_PATH.'/include/comment_form.php';
+include XOOPS_ROOT_PATH.'/footer.php';
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/comment_reply.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/comment_view.php
===================================================================
--- XoopsCore/trunk/htdocs/include/comment_view.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/comment_view.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,217 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH') || !is_object($xoopsModule)) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH.'/include/comment_constants.php';
+include_once XOOPS_ROOT_PATH.'/modules/system/constants.php';
+
+if (XOOPS_COMMENT_APPROVENONE != $xoopsModuleConfig['com_rule']) {
+
+	$gperm_handler = & xoops_gethandler( 'groupperm' );
+	$groups = ( $xoopsUser ) ? $xoopsUser -> getGroups() : XOOPS_GROUP_ANONYMOUS;
+	$xoopsTpl->assign( 'xoops_iscommentadmin', $gperm_handler->checkRight( 'system_admin', XOOPS_SYSTEM_COMMENT, $groups) );
+
+ 	include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/comment.php';
+	$comment_config = $xoopsModule->getInfo('comments');
+	$com_itemid = (trim($comment_config['itemName']) != '' && isset($_GET[$comment_config['itemName']])) ? intval($_GET[$comment_config['itemName']]) : 0;
+
+	if ($com_itemid > 0) {
+		$com_mode = isset($_GET['com_mode']) ? htmlspecialchars(trim($_GET['com_mode']), ENT_QUOTES) : '';
+		if ($com_mode == '') {
+			if (is_object($xoopsUser)) {
+				$com_mode = $xoopsUser->getVar('umode');
+			} else {
+				$com_mode = $xoopsConfig['com_mode'];
+			}
+		}
+		$xoopsTpl->assign('comment_mode', $com_mode);
+		if (!isset($_GET['com_order'])) {
+			if (is_object($xoopsUser)) {
+				$com_order = $xoopsUser->getVar('uorder');
+			} else {
+				$com_order = $xoopsConfig['com_order'];
+			}
+		} else {
+			$com_order = intval($_GET['com_order']);
+		}
+		if ($com_order != XOOPS_COMMENT_OLD1ST) {
+			$xoopsTpl->assign(array('comment_order' => XOOPS_COMMENT_NEW1ST, 'order_other' => XOOPS_COMMENT_OLD1ST));
+			$com_dborder = 'DESC';
+		} else {
+			$xoopsTpl->assign(array('comment_order' => XOOPS_COMMENT_OLD1ST, 'order_other' => XOOPS_COMMENT_NEW1ST));
+			$com_dborder = 'ASC';
+		}
+		// admins can view all comments and IPs, others can only view approved(active) comments
+		if (is_object($xoopsUser) && $xoopsUser->isAdmin($xoopsModule->getVar('mid'))) {
+			$admin_view = true;
+		} else {
+			$admin_view = false;
+		}
+
+		$com_id = isset($_GET['com_id']) ? intval($_GET['com_id']) : 0;
+		$com_rootid = isset($_GET['com_rootid']) ? intval($_GET['com_rootid']) : 0;
+		$comment_handler =& xoops_gethandler('comment');
+		if ($com_mode == 'flat') {
+			$comments =& $comment_handler->getByItemId($xoopsModule->getVar('mid'), $com_itemid, $com_dborder);
+			include_once XOOPS_ROOT_PATH.'/class/commentrenderer.php';
+			$renderer =& XoopsCommentRenderer::instance($xoopsTpl);
+			$renderer->setComments($comments);
+			$renderer->renderFlatView($admin_view);
+		} elseif ($com_mode == 'thread') {
+			// RMV-FIX... added extraParam stuff here
+			$comment_url = $comment_config['pageName'] . '?';
+			if (isset($comment_config['extraParams']) && is_array($comment_config['extraParams'])) {
+				$extra_params = '';
+				foreach ($comment_config['extraParams'] as $extra_param) {
+				    // This page is included in the module hosting page -- param could be from anywhere
+					if (isset(${$extra_param})) {
+						$extra_params .= $extra_param .'='.${$extra_param}.'&amp;';
+					} elseif (isset($_POST[$extra_param])) {
+						$extra_params .= $extra_param .'='.$_POST[$extra_param].'&amp;';
+					} elseif (isset($_GET[$extra_param])) {
+						$extra_params .= $extra_param .'='.$_GET[$extra_param].'&amp;';
+					} else {
+						$extra_params .= $extra_param .'=&amp;';
+					}
+					//$extra_params .= isset(${$extra_param}) ? $extra_param .'='.${$extra_param}.'&amp;' : $extra_param .'=&amp;';
+				}
+				$comment_url .= $extra_params;
+			}
+			$xoopsTpl->assign('comment_url', $comment_url.$comment_config['itemName'].'='.$com_itemid.'&amp;com_mode=thread&amp;com_order='.$com_order);
+			if (!empty($com_id) && !empty($com_rootid) && ($com_id != $com_rootid)) {
+				// Show specific thread tree
+				$comments =& $comment_handler->getThread($com_rootid, $com_id);
+				if (false != $comments) {
+					include_once XOOPS_ROOT_PATH.'/class/commentrenderer.php';
+					$renderer =& XoopsCommentRenderer::instance($xoopsTpl);
+					$renderer->setComments($comments);
+					$renderer->renderThreadView($com_id, $admin_view);
+				}
+			} else {
+				// Show all threads
+				$top_comments =& $comment_handler->getTopComments($xoopsModule->getVar('mid'), $com_itemid, $com_dborder);
+				$c_count = count($top_comments);
+				if ($c_count> 0) {
+					for ($i = 0; $i < $c_count; $i++) {
+						$comments =& $comment_handler->getThread($top_comments[$i]->getVar('com_rootid'), $top_comments[$i]->getVar('com_id'));
+						if (false != $comments) {
+							include_once XOOPS_ROOT_PATH.'/class/commentrenderer.php';
+							$renderer =& XoopsCommentRenderer::instance($xoopsTpl);
+							$renderer->setComments($comments);
+							$renderer->renderThreadView($top_comments[$i]->getVar('com_id'), $admin_view);
+						}
+						unset($comments);
+					}
+				}
+			}
+		} else {
+			// Show all threads
+			$top_comments =& $comment_handler->getTopComments($xoopsModule->getVar('mid'), $com_itemid, $com_dborder);
+			$c_count = count($top_comments);
+			if ($c_count> 0) {
+				for ($i = 0; $i < $c_count; $i++) {
+					$comments =& $comment_handler->getThread($top_comments[$i]->getVar('com_rootid'), $top_comments[$i]->getVar('com_id'));
+					include_once XOOPS_ROOT_PATH.'/class/commentrenderer.php';
+					$renderer =& XoopsCommentRenderer::instance($xoopsTpl);
+					$renderer->setComments($comments);
+					$renderer->renderNestView($top_comments[$i]->getVar('com_id'), $admin_view);
+				}
+			}
+		}
+
+		// assign comment nav bar
+		$navbar = '
+<form method="get" action="'.$comment_config['pageName'].'">
+<table width="95%" class="outer" cellspacing="1">
+  <tr>
+    <td class="even" align="center"><select name="com_mode"><option value="flat"';
+		if ($com_mode == 'flat') {
+			$navbar .= ' selected="selected"';
+		}
+		$navbar .= '>'._FLAT.'</option><option value="thread"';
+		if ($com_mode == 'thread' || $com_mode == '') {
+			$navbar .= ' selected="selected"';
+		}
+		$navbar .= '>'. _THREADED .'</option><option value="nest"';
+		if ($com_mode == 'nest') {
+			$navbar .= ' selected="selected"';
+		}
+		$navbar .= '>'. _NESTED .'</option></select> <select name="com_order"><option value="'.XOOPS_COMMENT_OLD1ST.'"';
+		if ($com_order == XOOPS_COMMENT_OLD1ST) {
+			$navbar .= ' selected="selected"';
+		}
+		$navbar .= '>'. _OLDESTFIRST .'</option><option value="'.XOOPS_COMMENT_NEW1ST.'"';
+		if ($com_order == XOOPS_COMMENT_NEW1ST) {
+			$navbar .= ' selected="selected"';
+		}
+		unset($postcomment_link);
+		$navbar .= '>'. _NEWESTFIRST .'</option></select><input type="hidden" name="'.$comment_config['itemName'].'" value="'.$com_itemid.'" /> <input type="submit" value="'. _CM_REFRESH .'" class="formButton" />';
+		if (!empty($xoopsModuleConfig['com_anonpost']) || is_object($xoopsUser)) {
+			$postcomment_link = 'comment_new.php?com_itemid='.$com_itemid.'&amp;com_order='.$com_order.'&amp;com_mode='.$com_mode;
+
+			$xoopsTpl->assign('anon_canpost', true);
+		}
+		$link_extra = '';
+		if (isset($comment_config['extraParams']) && is_array($comment_config['extraParams'])) {
+			foreach ($comment_config['extraParams'] as $extra_param) {
+			    if (isset(${$extra_param})) {
+			        $link_extra .= '&amp;'.$extra_param.'='.${$extra_param};
+			        $hidden_value = htmlspecialchars(${$extra_param}, ENT_QUOTES);
+			        $extra_param_val = ${$extra_param};
+			    } elseif (isset($_POST[$extra_param])) {
+			        $extra_param_val = $_POST[$extra_param];
+			    } elseif (isset($_GET[$extra_param])) {
+			        $extra_param_val = $_GET[$extra_param];
+			    }
+			    if (isset($extra_param_val)) {
+			        $link_extra .= '&amp;'.$extra_param.'='.$extra_param_val;
+			        $hidden_value = htmlspecialchars($extra_param_val, ENT_QUOTES);
+					$navbar .= '<input type="hidden" name="'.$extra_param.'" value="'.$hidden_value.'" />';
+				}
+			}
+		}
+		if (isset($postcomment_link)) {
+			$navbar .= '&nbsp;<input type="button" onclick="self.location.href=\''.$postcomment_link.''.$link_extra.'\'" class="formButton" value="'._CM_POSTCOMMENT.'" />';
+		}
+		$navbar .= '
+    </td>
+  </tr>
+</table>
+</form>';
+		$xoopsTpl->assign(array('commentsnav' => $navbar, 'editcomment_link' => 'comment_edit.php?com_itemid='.$com_itemid.'&amp;com_order='.$com_order.'&amp;com_mode='.$com_mode.''.$link_extra, 'deletecomment_link' => 'comment_delete.php?com_itemid='.$com_itemid.'&amp;com_order='.$com_order.'&amp;com_mode='.$com_mode.''.$link_extra, 'replycomment_link' => 'comment_reply.php?com_itemid='.$com_itemid.'&amp;com_order='.$com_order.'&amp;com_mode='.$com_mode.''.$link_extra));
+
+		// assign some lang variables
+		$xoopsTpl->assign(array('lang_from' => _CM_FROM, 'lang_joined' => _CM_JOINED, 'lang_posts' => _CM_POSTS, 'lang_poster' => _CM_POSTER, 'lang_thread' => _CM_THREAD, 'lang_edit' => _EDIT, 'lang_delete' => _DELETE, 'lang_reply' => _REPLY, 'lang_subject' => _CM_REPLIES, 'lang_posted' => _CM_POSTED, 'lang_updated' => _CM_UPDATED, 'lang_notice' => _CM_NOTICE));
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/comment_view.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/commentform.inc.php
===================================================================
--- XoopsCore/trunk/htdocs/include/commentform.inc.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/commentform.inc.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,71 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+if (!defined("XOOPS_ROOT_PATH")) {
+    die("XOOPS root path not defined");
+}
+include_once XOOPS_ROOT_PATH."/class/xoopslists.php";
+include XOOPS_ROOT_PATH."/class/xoopsformloader.php";
+$cform = new XoopsThemeForm(_CM_POSTCOMMENT, "commentform", "postcomment.php", "post", true);
+if (!preg_match("/^re:/i", $subject)) {
+	$subject = "Re: ".xoops_substr($subject,0,56);
+}
+$cform->addElement(new XoopsFormText(_CM_TITLE, 'subject', 50, 255, $subject), true);
+$icons_radio = new XoopsFormRadio(_MESSAGEICON, 'icon', $icon);
+$subject_icons = XoopsLists::getSubjectsList();
+foreach ($subject_icons as $iconfile) {
+	$icons_radio->addOption($iconfile, '<img src="'.XOOPS_URL.'/images/subject/'.$iconfile.'" alt="" />');
+}
+$cform->addElement($icons_radio);
+$cform->addElement(new XoopsFormDhtmlTextArea(_CM_MESSAGE, 'message', $message, 10, 50), true);
+$option_tray = new XoopsFormElementTray(_OPTIONS,'<br />');
+if ($xoopsUser) {
+	if ($xoopsConfig['anonpost'] == 1) {
+		$noname_checkbox = new XoopsFormCheckBox('', 'noname', $noname);
+		$noname_checkbox->addOption(1, _POSTANON);
+		$option_tray->addElement($noname_checkbox);
+	}
+	if ($xoopsUser->isAdmin($xoopsModule->getVar('mid'))) {
+		$nohtml_checkbox = new XoopsFormCheckBox('', 'nohtml', $nohtml);
+		$nohtml_checkbox->addOption(1, _DISABLEHTML);
+		$option_tray->addElement($nohtml_checkbox);
+	}
+}
+$smiley_checkbox = new XoopsFormCheckBox('', 'nosmiley', $nosmiley);
+$smiley_checkbox->addOption(1, _DISABLESMILEY);
+$option_tray->addElement($smiley_checkbox);
+
+$cform->addElement($option_tray);
+$cform->addElement(new XoopsFormHidden('pid', intval($pid)));
+$cform->addElement(new XoopsFormHidden('comment_id', intval($comment_id)));
+$cform->addElement(new XoopsFormHidden('item_id', intval($item_id)));
+$cform->addElement(new XoopsFormHidden('order', intval($order)));
+$button_tray = new XoopsFormElementTray('' ,'&nbsp;');
+$button_tray->addElement(new XoopsFormButton('', 'preview', _PREVIEW, 'submit'));
+$button_tray->addElement(new XoopsFormButton('', 'post', _CM_POSTCOMMENT, 'submit'));
+$cform->addElement($button_tray);
+$cform->display();
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/commentform.inc.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/common.php
===================================================================
--- XoopsCore/trunk/htdocs/include/common.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/common.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,261 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+if (!defined("XOOPS_MAINFILE_INCLUDED")) {
+    exit();
+} else {
+    //Instantiate security object
+    require_once XOOPS_ROOT_PATH."/class/xoopssecurity.php";
+    $xoopsSecurity = new XoopsSecurity();
+    global $xoopsSecurity;
+    //Check super globals
+    $xoopsSecurity->checkSuperglobals();
+    
+    // ############## Activate error handler ##############
+    include_once XOOPS_ROOT_PATH . '/class/errorhandler.php';
+    $xoopsErrorHandler =& XoopsErrorHandler::getInstance();
+    // Turn on error handler by default (until config value obtained from DB)
+    $xoopsErrorHandler->activate(true);
+
+    define("XOOPS_SIDEBLOCK_LEFT",0);
+    define("XOOPS_SIDEBLOCK_RIGHT",1);
+    define("XOOPS_SIDEBLOCK_BOTH",2);
+    define("XOOPS_CENTERBLOCK_LEFT",3);
+    define("XOOPS_CENTERBLOCK_RIGHT",4);
+    define("XOOPS_CENTERBLOCK_CENTER",5);
+    define("XOOPS_CENTERBLOCK_ALL",6);
+    define("XOOPS_BLOCK_INVISIBLE",0);
+    define("XOOPS_BLOCK_VISIBLE",1);
+    define("XOOPS_MATCH_START",0);
+    define("XOOPS_MATCH_END",1);
+    define("XOOPS_MATCH_EQUAL",2);
+    define("XOOPS_MATCH_CONTAIN",3);
+    define("SMARTY_DIR", XOOPS_ROOT_PATH."/class/smarty/");
+    define("XOOPS_CACHE_PATH", XOOPS_ROOT_PATH."/cache");
+    define("XOOPS_UPLOAD_PATH", XOOPS_ROOT_PATH."/uploads");
+    define("XOOPS_THEME_PATH", XOOPS_ROOT_PATH."/themes");
+    define("XOOPS_COMPILE_PATH", XOOPS_ROOT_PATH."/templates_c");
+    define("XOOPS_THEME_URL", XOOPS_URL."/themes");
+    define("XOOPS_UPLOAD_URL", XOOPS_URL."/uploads");
+    set_magic_quotes_runtime(0);
+    include_once XOOPS_ROOT_PATH.'/class/logger.php';
+    $xoopsLogger =& XoopsLogger::instance();
+    $xoopsLogger->startTime();
+    if (!defined('XOOPS_XMLRPC')) {
+        define('XOOPS_DB_CHKREF', 1);
+    } else {
+        define('XOOPS_DB_CHKREF', 0);
+    }
+
+    // ############## Include common functions file ##############
+    include_once XOOPS_ROOT_PATH.'/include/functions.php';
+
+    // #################### Connect to DB ##################
+    require_once XOOPS_ROOT_PATH.'/class/database/databasefactory.php';
+    if ($_SERVER['REQUEST_METHOD'] != 'POST' || !$xoopsSecurity->checkReferer(XOOPS_DB_CHKREF)) {
+        define('XOOPS_DB_PROXY', 1);
+    }
+    $xoopsDB =& XoopsDatabaseFactory::getDatabaseConnection();
+
+    // ################# Include required files ##############
+    require_once XOOPS_ROOT_PATH.'/kernel/object.php';
+    require_once XOOPS_ROOT_PATH.'/class/criteria.php';
+
+    // #################### Include text sanitizer ##################
+    include_once XOOPS_ROOT_PATH."/class/module.textsanitizer.php";
+
+    // ################# Load Config Settings ##############
+    $config_handler =& xoops_gethandler('config');
+    $xoopsConfig =& $config_handler->getConfigsByCat(XOOPS_CONF);
+
+    // #################### Error reporting settings ##################
+    error_reporting(0);
+
+    if ($xoopsConfig['debug_mode'] == 1) {
+        error_reporting(E_ALL);
+    } else {
+        // Turn off error handler
+        $xoopsErrorHandler->activate(false);
+    }
+
+    $xoopsSecurity->checkBadips();
+
+    // ################# Include version info file ##############
+    include_once XOOPS_ROOT_PATH."/include/version.php";
+
+    // for older versions...will be DEPRECATED!
+    $xoopsConfig['xoops_url'] = XOOPS_URL;
+    $xoopsConfig['root_path'] = XOOPS_ROOT_PATH."/";
+
+
+    // #################### Include site-wide lang file ##################
+    if ( file_exists(XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/global.php") ) {
+        include_once XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/global.php";
+    } else {
+        include_once XOOPS_ROOT_PATH."/language/english/global.php";
+    }
+
+    // ################ Include page-specific lang file ################
+    if (isset($xoopsOption['pagetype']) && false === strpos($xoopsOption['pagetype'], '.')) {
+        if ( file_exists(XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/".$xoopsOption['pagetype'].".php") ) {
+            include_once XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/".$xoopsOption['pagetype'].".php";
+        } else {
+            include_once XOOPS_ROOT_PATH."/language/english/".$xoopsOption['pagetype'].".php";
+        }
+    }
+    $xoopsOption = array();
+
+    if ( !defined("XOOPS_USE_MULTIBYTES") ) {
+        define("XOOPS_USE_MULTIBYTES",0);
+    }
+
+    /**#@+
+     * Host abstraction layer
+     */
+    if ( !isset($_SERVER['PATH_TRANSLATED']) && isset($_SERVER['SCRIPT_FILENAME']) ) {
+        $_SERVER['PATH_TRANSLATED'] =& $_SERVER['SCRIPT_FILENAME'];     // For Apache CGI
+    } elseif ( isset($_SERVER['PATH_TRANSLATED']) && !isset($_SERVER['SCRIPT_FILENAME']) ) {
+        $_SERVER['SCRIPT_FILENAME'] =& $_SERVER['PATH_TRANSLATED'];     // For IIS/2K now I think :-(
+    }
+
+    if ( empty( $_SERVER[ 'REQUEST_URI' ] ) ) {         // Not defined by IIS
+        // Under some configs, IIS makes SCRIPT_NAME point to php.exe :-(
+        if ( !( $_SERVER[ 'REQUEST_URI' ] = @$_SERVER['PHP_SELF'] ) ) {
+            $_SERVER[ 'REQUEST_URI' ] = $_SERVER['SCRIPT_NAME'];
+        }
+        if ( isset( $_SERVER[ 'QUERY_STRING' ] ) ) {
+            $_SERVER[ 'REQUEST_URI' ] .= '?' . $_SERVER[ 'QUERY_STRING' ];
+        }
+    }
+    $xoopsRequestUri = $_SERVER[ 'REQUEST_URI' ];       // Deprecated (use the corrected $_SERVER variable now)
+    /**#@-*/
+
+    // ############## Login a user with a valid session ##############
+    $xoopsUser = '';
+    $xoopsUserIsAdmin = false;
+    $member_handler =& xoops_gethandler('member');
+    $sess_handler =& xoops_gethandler('session');
+    if ($xoopsConfig['use_ssl'] && isset($_POST[$xoopsConfig['sslpost_name']]) && $_POST[$xoopsConfig['sslpost_name']] != '') {
+        session_id($_POST[$xoopsConfig['sslpost_name']]);
+    } elseif ($xoopsConfig['use_mysession'] && $xoopsConfig['session_name'] != '') {
+        if (isset($_COOKIE[$xoopsConfig['session_name']])) {
+            session_id($_COOKIE[$xoopsConfig['session_name']]);
+        } else {
+            // no custom session cookie set, destroy session if any
+            $_SESSION = array();
+            //session_destroy();
+        }
+        if (function_exists('session_cache_expire')) {
+            session_cache_expire($xoopsConfig['session_expire']);
+        }
+    }
+    session_set_save_handler(array(&$sess_handler, 'open'), array(&$sess_handler, 'close'), array(&$sess_handler, 'read'), array(&$sess_handler, 'write'), array(&$sess_handler, 'destroy'), array(&$sess_handler, 'gc'));
+    session_start();
+
+    if (!empty($_SESSION['xoopsUserId'])) {
+        $xoopsUser =& $member_handler->getUser($_SESSION['xoopsUserId']);
+        if (!is_object($xoopsUser)) {
+            $xoopsUser = '';
+            $_SESSION = array();
+        } else {
+            if ($xoopsConfig['use_mysession'] && $xoopsConfig['session_name'] != '') {
+                setcookie($xoopsConfig['session_name'], session_id(), time()+(60*$xoopsConfig['session_expire']), '/',  '', 0);
+            }
+            $xoopsUser->setGroups($_SESSION['xoopsUserGroups']);
+            $xoopsUserIsAdmin = $xoopsUser->isAdmin();
+        }
+    }
+    if (!empty($_POST['xoops_theme_select']) && in_array($_POST['xoops_theme_select'], $xoopsConfig['theme_set_allowed'])) {
+        $xoopsConfig['theme_set'] = $_POST['xoops_theme_select'];
+        $_SESSION['xoopsUserTheme'] = $_POST['xoops_theme_select'];
+    } elseif (!empty($_SESSION['xoopsUserTheme']) && in_array($_SESSION['xoopsUserTheme'], $xoopsConfig['theme_set_allowed'])) {
+        $xoopsConfig['theme_set'] = $_SESSION['xoopsUserTheme'];
+    }
+
+    if ($xoopsConfig['closesite'] == 1) {
+        $allowed = false;
+        if (is_object($xoopsUser)) {
+            foreach ($xoopsUser->getGroups() as $group) {
+                if (in_array($group, $xoopsConfig['closesite_okgrp']) || XOOPS_GROUP_ADMIN == $group) {
+                    $allowed = true;
+                    break;
+                }
+            }
+        } elseif (!empty($_POST['xoops_login'])) {
+            include_once XOOPS_ROOT_PATH.'/include/checklogin.php';
+            exit();
+        }
+        if (!$allowed) {
+            include_once XOOPS_ROOT_PATH.'/class/template.php';
+            $xoopsTpl = new XoopsTpl();
+            $xoopsTpl->assign(array('sitename' => $xoopsConfig['sitename'], 'xoops_themecss' => xoops_getcss(), 'xoops_imageurl' => XOOPS_THEME_URL.'/'.$xoopsConfig['theme_set'].'/', 'lang_login' => _LOGIN, 'lang_username' => _USERNAME, 'lang_password' => _PASSWORD, 'lang_siteclosemsg' => $xoopsConfig['closesite_text']));
+            $xoopsTpl->xoops_setCaching(1);
+            $xoopsTpl->display('db:system_siteclosed.html');
+            exit();
+        }
+        unset($allowed, $group);
+    }
+
+    if (file_exists('./xoops_version.php')) {
+        $url_arr = explode('/',strstr($xoopsRequestUri,'/modules/'));
+        $module_handler =& xoops_gethandler('module');
+        $xoopsModule =& $module_handler->getByDirname($url_arr[2]);
+        unset($url_arr);
+        if (!$xoopsModule || !$xoopsModule->getVar('isactive')) {
+            include_once XOOPS_ROOT_PATH."/header.php";
+            echo "<h4>"._MODULENOEXIST."</h4>";
+            include_once XOOPS_ROOT_PATH."/footer.php";
+            exit();
+        }
+        $moduleperm_handler =& xoops_gethandler('groupperm');
+        if ($xoopsUser) {
+            if (!$moduleperm_handler->checkRight('module_read', $xoopsModule->getVar('mid'), $xoopsUser->getGroups())) {
+                redirect_header(XOOPS_URL."/user.php",1,_NOPERM);
+                exit();
+            }
+            $xoopsUserIsAdmin = $xoopsUser->isAdmin($xoopsModule->getVar('mid'));
+        } else {
+            if (!$moduleperm_handler->checkRight('module_read', $xoopsModule->getVar('mid'), XOOPS_GROUP_ANONYMOUS)) {
+                redirect_header(XOOPS_URL."/user.php",1,_NOPERM);
+                exit();
+            }
+        }
+        if ( file_exists(XOOPS_ROOT_PATH."/modules/".$xoopsModule->getVar('dirname')."/language/".$xoopsConfig['language']."/main.php") ) {
+            include_once XOOPS_ROOT_PATH."/modules/".$xoopsModule->getVar('dirname')."/language/".$xoopsConfig['language']."/main.php";
+        } else {
+            if ( file_exists(XOOPS_ROOT_PATH."/modules/".$xoopsModule->getVar('dirname')."/language/english/main.php") ) {
+                include_once XOOPS_ROOT_PATH."/modules/".$xoopsModule->getVar('dirname')."/language/english/main.php";
+            }
+        }
+        if ($xoopsModule->getVar('hasconfig') == 1 || $xoopsModule->getVar('hascomments') == 1 || $xoopsModule->getVar( 'hasnotification' ) == 1) {
+            $xoopsModuleConfig =& $config_handler->getConfigsByCat(0, $xoopsModule->getVar('mid'));
+        }
+    } elseif($xoopsUser) {
+        $xoopsUserIsAdmin = $xoopsUser->isAdmin(1);
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/common.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/cp_functions.php
===================================================================
--- XoopsCore/trunk/htdocs/include/cp_functions.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/cp_functions.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,444 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+define('XOOPS_CPFUNC_LOADED', 1);
+
+function xoops_cp_header()
+{
+    global $xoopsConfig, $xoopsUser;
+	if ($xoopsConfig['gzip_compression'] == 1) {
+		ob_start("ob_gzhandler");
+	} else {
+		ob_start();
+	}
+	if (!headers_sent()) {
+		header('Content-Type:text/html; charset='._CHARSET);
+		header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');
+		header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
+		header('Cache-Control: no-store, no-cache, must-revalidate');
+		header("Cache-Control: post-check=0, pre-check=0", false);
+		header("Pragma: no-cache");
+    }
+	echo "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>";
+	echo '<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="'._LANGCODE.'" lang="'._LANGCODE.'">
+	<head>
+	<meta http-equiv="content-type" content="text/html; charset='._CHARSET.'" />
+	<meta http-equiv="content-language" content="'._LANGCODE.'" />
+	<title>'.htmlspecialchars($xoopsConfig['sitename'], ENT_QUOTES).' Administration</title>
+	<script type="text/javascript" src="'.XOOPS_URL.'/include/xoops.js"></script>
+	';
+	echo '<link rel="stylesheet" type="text/css" media="all" href="'.XOOPS_URL.'/xoops.css" />';
+        echo '<link rel="stylesheet" type="text/css" media="all" href="'.XOOPS_URL.'/modules/system/style.css" />';
+        include_once XOOPS_CACHE_PATH.'/adminmenu.php';
+        $moduleperm_handler =& xoops_gethandler('groupperm');
+        $admin_mids =& $moduleperm_handler->getItemIds('module_admin', $xoopsUser->getGroups());
+?>
+
+<script type='text/javascript'>
+<!--
+var thresholdY = 15; // in pixels; threshold for vertical repositioning of a layer
+var ordinata_margin = 20; // to start the layer a bit above the mouse vertical coordinate
+// -->
+</script>
+
+<script type='text/javascript' src='<?php echo XOOPS_URL."/include/layersmenu.js";?>'></script>
+
+<script type='text/javascript'>
+<!--
+<?php
+		echo $xoops_admin_menu_js;
+?>
+function moveLayers() {
+<?php
+		foreach ( $admin_mids as $adm ) {
+			if (isset($xoops_admin_menu_ml[$adm])) {
+				echo $xoops_admin_menu_ml[$adm];
+			}
+		}
+?>
+}
+function shutdown() {
+<?php
+		foreach ( $admin_mids as $adm ) {
+			if (isset($xoops_admin_menu_sd[$adm])) {
+				echo $xoops_admin_menu_sd[$adm];
+			}
+		}
+?>
+}
+if (NS4) {
+document.onmousedown = function() { shutdown(); }
+} else {
+document.onclick = function() { shutdown(); }
+}
+// -->
+</script>
+
+<?php
+        $logo = file_exists(XOOPS_THEME_URL."/".getTheme()."/images/logo.gif") ? XOOPS_THEME_URL."/".getTheme()."/images/logo.gif" : XOOPS_URL."/images/logo.gif";
+        echo "</head>
+        <body>
+        <table border='0' width='100%' cellspacing='0' cellpadding='0'>
+          <tr>
+            <td bgcolor='#2F5376'><a href='http://www.xoops.org/' target='_blank'><img src='".XOOPS_URL."/modules/system/images/logo.gif' alt='".$xoopsConfig['sitename']."' /></a></td>
+            <td align='right' bgcolor='#2F5376' colspan='2'><img src='".XOOPS_URL."/modules/system/images/xoops2.gif' alt='' /></td>
+          </tr>
+          <tr>
+            <td align='left' colspan='3' class='bg5'>
+              <table border='0' width='100%' cellspacing='0' cellpadding='0'>
+                <tr>
+                  <td width='1%'><img src='".XOOPS_URL."/modules/system/images/hbar_left.gif' width='10' height='23' /></td>
+                  <td background='".XOOPS_URL."/modules/system/images/hbar_middle.gif'>&nbsp;<a href='".XOOPS_URL."/admin.php'>"._CPHOME."</a>&nbsp;|&nbsp;<a href='".XOOPS_URL."/admin.php?xoopsorgnews=1'>XOOPS News</a></td>
+                  <td background='".XOOPS_URL."/modules/system/images/hbar_middle.gif' align='right'><a href='".XOOPS_URL."/user.php?op=logout'>"._LOGOUT."</a>&nbsp;|&nbsp;<a href='".XOOPS_URL."/'>"._YOURHOME."</a> &nbsp;</td>
+                  <td width='1%'><img src='".XOOPS_URL."/modules/system/images/hbar_right.gif' width='10' height='23' /></td>
+                </tr>
+              </table>
+            </td>
+          </tr>
+        </table>
+        <table border='0' cellpadding='0' cellspacing='0' width='100%'>
+          <tr>
+            <td width='2%' valign='top' class='bg5'  background='".XOOPS_URL."/modules/system/images/bg_menu.gif' align='center'></td>
+            <td width='15%' valign='top' class='bg5' align='center'><img src='".XOOPS_URL."/modules/system/images/menu.gif' /><br />
+              <table border='0' cellpadding='4' cellspacing='0' width='100%'>";
+        foreach ( array_keys($xoops_admin_menu_ft) as $adm ) {
+            if ( in_array($adm, $admin_mids) ) {
+                echo "<tr><td align='center'>".$xoops_admin_menu_ft[$adm]."</td></tr>";
+            }
+        }
+        echo "
+              </table>
+              <br />
+            </td>
+            <td align='left' valign='top' width='82%'>
+              <div class='content'><br />\n";
+}
+
+function xoops_cp_footer()
+{
+	global $xoopsConfig, $xoopsLogger;
+	echo"
+              </div><br />
+            </td>
+            <td width='1%' background='".XOOPS_URL."/modules/system/images/bg_content.gif'></td>
+          </tr>
+          <tr>
+            <td align='center' colspan='4' class='bg5' height='15'>
+              <table border='0' width='100%' cellspacing='0' cellpadding='0'>
+                <tr>
+                  <td width='1%'><img src='".XOOPS_URL."/modules/system/images/hbar_left.gif' width='10' height='23' /></td>
+                  <td width='98%' background='".XOOPS_URL."/modules/system/images/hbar_middle.gif' align='center'><div class='fontSmall'>Powered by&nbsp;".XOOPS_VERSION." &copy; 2001-2005 <a href='http://www.xoops.org/' target='_blank'>The XOOPS Project</a></div></td><td width='1%'><img src='".XOOPS_URL."/modules/system/images/hbar_right.gif' width='10' height='23' /></td>
+                </tr>
+              </table>
+            </td>
+          </tr>
+        </table>";
+    include XOOPS_CACHE_PATH.'/adminmenu.php';
+	echo $xoops_admin_menu_dv;
+	echo "
+        </body>
+      </html>
+    ";
+	if ($xoopsConfig['debug_mode'] == 2) {
+		echo '<script type="text/javascript">
+		<!--//
+		debug_window = openWithSelfMain("", "popup", 680, 450, true);
+		debug_window.document.clear();
+		';
+		$content = '<html><head><meta http-equiv="content-type" content="text/html; charset='._CHARSET.'" /><meta http-equiv="content-language" content="'._LANGCODE.'" /><title>'.$xoopsConfig['sitename'].'</title><link rel="stylesheet" type="text/css" media="all" href="'.getcss($xoopsConfig['theme_set']).'" /></head><body>'.$xoopsLogger->dumpAll().'<div style="text-align:center;"><input class="formButton" value="'._CLOSE.'" type="button" onclick="javascript:window.close();" /></div></body></html>';
+		$lines = preg_split("/(\r\n|\r|\n)( *)/", $content);
+		foreach ($lines as $line) {
+			echo 'debug_window.document.writeln("'.str_replace('"', '\"', $line).'");';
+		}
+		echo '
+		debug_window.focus();
+		debug_window.document.close();
+		//-->
+		</script>';
+	}
+	ob_end_flush();
+}
+
+// We need these because theme files will not be included
+function OpenTable()
+{
+	echo "<table width='100%' border='0' cellspacing='1' cellpadding='8' style='border: 2px solid #2F5376;'><tr class='bg4'><td valign='top'>\n";
+}
+
+function CloseTable()
+{
+	echo '</td></tr></table>';
+}
+
+function themecenterposts($title, $content)
+{
+	echo '<table cellpadding="4" cellspacing="1" width="98%" class="outer"><tr><td class="head">'.$title.'</td></tr><tr><td><br />'.$content.'<br /></td></tr></table>';
+}
+
+function myTextForm($url , $value)
+{
+	return '<form action="'.$url.'" method="post"><input type="submit" value="'.$value.'" /></form>';
+}
+
+function xoopsfwrite()
+{
+	if ($_SERVER['REQUEST_METHOD'] != 'POST') {
+		return false;
+	} else {
+
+    }
+	if (!xoops_refcheck()) {
+		return false;
+	} else {
+
+	}
+    return true;
+}
+
+function xoops_module_get_admin_menu()
+{
+    /************************************************************
+	* Based on:
+	* - PHP Layers Menu 1.0.7(c)2001,2002 Marco Pratesi <pratesi at telug.it>
+	* - TreeMenu 1.1 - Bjorge Dijkstra <bjorge at gmx.net>
+	************************************************************/
+	$abscissa_step = 90;        // step for the left boundaries of layers
+	$abscissa_offset = 15;        // to choose the horizontal coordinate start offset for the layers
+	$rightarrow = "";
+	// the following is to support browsers not detecting the mouse position
+	$ordinata_step = 15;        // estimated value of the number of pixels between links on a layer
+	$ordinata[1] = 150-$ordinata_step;// to choose the vertical coordinate start offset for the layers
+    $moveLayers = array();
+	$shutdown = array();
+	$firstleveltable = array();
+
+    /*********************************************/
+	/* read file to $tree array                  */
+	/* tree[x][0] -> tree level                  */
+	/* tree[x][1] -> item text                   */
+	/* tree[x][2] -> item link                   */
+	/* tree[x][3] -> link target                 */
+	/* tree[x][4] -> module id                   */
+	/*********************************************/
+
+    $js = "";
+	$maxlevel = 0;
+	$cnt = 1;
+	$module_handler =& xoops_gethandler('module');
+	$criteria = new CriteriaCompo();
+	$criteria->add(new Criteria('hasadmin', 1));
+	$criteria->add(new Criteria('isactive', 1));
+	$criteria->setSort('mid');
+	$mods =& $module_handler->getObjects($criteria);
+	foreach ($mods as $mod) {
+		// RMV-NOTIFY:
+		// Why need 'adminindex' defined??  Should just be for ALL modules
+		// because sometimes comments, notification gives options but
+		// module may have no other admin functions...
+		/*if ($mod->getInfo('adminindex') && trim($mod->getInfo('adminindex')) != '') {*/
+			$tree[$cnt][0] = 1;
+			$tree[$cnt][5] = "<img src='\".XOOPS_URL.\"/modules/".$mod->getVar('dirname')."/".$mod->getInfo('image')."' alt='' />";
+			$tree[$cnt][1] = $mod->getVar('name');
+			$tree[$cnt][2] = "\".XOOPS_URL.\"/modules/".$mod->getVar('dirname')."/".trim($mod->getInfo('adminindex'));
+			$tree[$cnt][3] = "";
+			$tree[$cnt][4] = $mod->getVar('mid');
+			$tree[$cnt][6] = "<b>\"._VERSION.\":</b> ".round($mod->getVar('version')/100 , 2)."<br /><b>\"._DESCRIPTION.\":</b> ".$mod->getInfo('description');
+			$layer_label[$cnt] = "L" . $cnt;
+			if ( $tree[$cnt][0] > $maxlevel ) {
+				$maxlevel = $tree[$cnt][0];
+			}
+			$cnt++;
+			$adminmenu = $mod->getAdminMenu();
+			if ($mod->getVar('hasnotification') || ($mod->getInfo('config') && is_array($mod->getInfo('config'))) || ($mod->getInfo('comments') && is_array($mod->getInfo('comments')))) {
+				$adminmenu[] = array('link' => '".XOOPS_URL."/modules/system/admin.php?fct=preferences&amp;op=showmod&amp;mod='.$mod->getVar('mid'), 'title' => _PREFERENCES, 'absolute' => true);
+			}
+			if (!empty($adminmenu)) {
+				foreach ( $adminmenu as $menuitem ) {
+					$menuitem['link'] = trim($menuitem['link']);
+					$menuitem['target'] = isset($menuitem['target']) ? trim($menuitem['target']) : '';
+					$tree[$cnt][0] = 2;
+					$tree[$cnt][1] = trim($menuitem['title']);
+					if (isset($menuitem['absolute']) && $menuitem['absolute']) {
+						$tree[$cnt][2] = (empty($menuitem['link'])) ? "#" : $menuitem['link'];
+					} else {
+						$tree[$cnt][2] = (empty($menuitem['link'])) ? "#" : "\".XOOPS_URL.\"/modules/".$mod->getVar('dirname')."/".$menuitem['link'];
+					}
+					$tree[$cnt][3] = (empty($menuitem['target'])) ? "" : $menuitem['target'];
+					$tree[$cnt][4] = $mod->getVar('mid');
+					$layer_label[$cnt] = "L" . $cnt;
+					if ($tree[$cnt][0] > $maxlevel) {
+						$maxlevel = $tree[$cnt][0];
+					}
+					$cnt++;
+				}
+			}
+		/*
+		}*/
+	}
+	$tmpcount = count($tree);
+	$tree[$tmpcount+1][0] = 0;
+	for ( $i = 0; $i < $maxlevel; $i++) {
+		$abscissa[$i] = $i * $abscissa_step + $abscissa_offset;
+	}
+	for ( $cnt = 1; $cnt <= $tmpcount; $cnt++) {        // this counter scans all nodes
+        // assign the layers name to the current hierarchical level,
+        // to keep trace of the route leading to the current node on the tree
+		$layername[$tree[$cnt][0]] = $layer_label[$cnt];
+
+        // assign the starting vertical coordinates for all sublevels
+		for ( $i = $tree[$cnt][0] + 1; $i < $maxlevel; $i++) {
+			$ordinata[$i] = $ordinata[$i-1] + 1.5*$ordinata_step;
+		}
+		// increment the starting vertical coordinate for the current sublevel
+		if ($tree[$cnt][0] < $maxlevel) {
+			$ordinata[$tree[$cnt][0]] += $ordinata_step;
+		}
+		if ($tree[$cnt+1][0]>$tree[$cnt][0] && $cnt<$tmpcount) {                        // the node is not a leaf, hence it has at least a child
+            // initialize the corresponding layer content trought a void string
+			$layer[$layer_label[$cnt]] = "";
+			// prepare the popUp function related to the children
+			$js .= "function popUp" . $layer_label[$cnt] . "() {\n" . "shutdown();\n";
+			for ($i=1; $i<=$tree[$cnt][0]; $i++) {
+				$js .= "popUp(\\\"" . $layername[$i] . "\\\",true);\n";
+			}
+            $js .= "}\n";
+
+            // geometrical parameters are assigned to the new layer, related to the above mentioned children
+            if (!isset($moveLayers[$tree[$cnt][4]])) {
+                $moveLayers[$tree[$cnt][4]] = "setleft('" . $layer_label[$cnt] . "'," . $abscissa[$tree[$cnt][0]] . ");\n";
+            } else {
+                $moveLayers[$tree[$cnt][4]] .= "setleft('" . $layer_label[$cnt] . "'," . $abscissa[$tree[$cnt][0]] . ");\n";
+                }
+                if (!isset($moveLayers[$tree[$cnt][4]])) {
+                    $moveLayers[$tree[$cnt][4]] = "settop('" . $layer_label[$cnt] . "'," . $ordinata[$tree[$cnt][0]] . ");\n";
+                } else {
+                    $moveLayers[$tree[$cnt][4]] .= "settop('" . $layer_label[$cnt] . "'," . $ordinata[$tree[$cnt][0]] . ");\n";
+                }
+                //$moveLayers[$tree[$cnt][4]] .= "setwidth('" . $layer_label[$cnt] . "'," . $abscissa_step . ");\n";
+
+                // the new layer is accounted for in the shutdown() function
+                if (!isset($shutdown[$tree[$cnt][4]])) {
+                    $shutdown[$tree[$cnt][4]] = "popUp('" . $layer_label[$cnt] . "',false);\n";
+                } else {
+                    $shutdown[$tree[$cnt][4]] .= "popUp('" . $layer_label[$cnt] . "',false);\n";
+                }
+            }
+            if ($tree[$cnt+1][0]>$tree[$cnt][0] && $cnt<$tmpcount) {
+                // not a leaf
+                $currentarrow = $rightarrow;
+            } else {
+                // a leaf
+                $currentarrow = "";
+            }
+            /* */
+            $currentlink = $tree[$cnt][2];
+            /* */
+            /*
+            if ( $tree[$cnt+1][0] > $tree[$cnt][0] && $cnt < $tmpcount) {
+                // not a leaf
+                $currentlink = "#";
+            } else {
+                // a leaf
+                $currentlink = $tree[$cnt][2];
+            }
+            */
+            if ($tree[$cnt][3] != "") {
+                $currenttarget = " target='" . $tree[$cnt][3] . "'";
+            } else {
+                $currenttarget = "";
+            }
+            if ($tree[$cnt][0] > 1) {
+                // the hierarchical level is > 1, hence the current node is not a child of the root node
+                // handle accordingly the corresponding link, distinguishing if the current node is a leaf or not
+                if ( $tree[$cnt+1][0] > $tree[$cnt][0] && $cnt < $tmpcount ) {        // not a leaf
+                    $onmouseover = " onmouseover='moveLayerY(\\\"" . $layer_label[$cnt] . "\\\", currentY) ; popUp" . $layer_label[$cnt] . "();";
+					$onmouseover = " onmouseover='moveLayerY(\\\"" . $layer_label[$cnt] . "\\\", currentY, event) ; popUp" . $layer_label[$cnt] . "();";
+                } else {        // a leaf
+                    $onmouseover = " onmouseover='popUp" . $layername[$tree[$cnt][0]-1] . "();";
+                }
+                $layer[$layername[$tree[$cnt][0]-1]] .= "<img src='\".XOOPS_URL.\"/images/pointer.gif' width='8' height='8' alt='' />&nbsp;<a href='" . $currentlink . "'" . $onmouseover . "'" . $currenttarget . ">" .$tree[$cnt][1]. "</a>" . $currentarrow . "<br />\n";
+            } elseif ($tree[$cnt][0] == 1) {
+                // the hierarchical level is = 1, hence the current node is a child of the root node
+                // handle accordingly the corresponding link, distinguishing if the current node is a leaf or not
+                if ($tree[$cnt+1][0]>$tree[$cnt][0] && $cnt<$tmpcount) {
+                    // not a leaf
+                    $onmouseover = " onmouseover='moveLayerY(\\\"" . $layer_label[$cnt] . "\\\", currentY) ; popUp" . $layer_label[$cnt] . "();";
+					$onmouseover = " onmouseover='moveLayerY(\\\"" . $layer_label[$cnt] . "\\\", currentY,event) ; popUp" . $layer_label[$cnt] . "();";
+                } else {
+                    // a leaf
+                   $onmouseover = " onmouseover='shutdown();";
+                }
+                if (!isset($firstleveltable[$tree[$cnt][4]])) {
+                    $firstleveltable[$tree[$cnt][4]] = "<a href='" . $currentlink . "'" . $onmouseover . "'" . $currenttarget . ">" . $tree[$cnt][5] . "</a>" . $currentarrow . "<br />\n";
+                } else {
+                    $firstleveltable[$tree[$cnt][4]] .= "<a href='" . $currentlink . "'" . $onmouseover . "'" . $currenttarget . ">" . $tree[$cnt][5] . "</a>" . $currentarrow . "<br />\n";
+                }
+            }
+        }        // end of the "for" cycle scanning all nodes
+
+        $cellpadding = 10;
+        $width = $abscissa_step - $cellpadding;
+        $menu_layers = "";
+        for ( $cnt = 1; $cnt <= $tmpcount; $cnt++ ) {
+            if (!($tree[$cnt+1][0]<=$tree[$cnt][0])) {
+                $menu_layers .= "<div id='".$layer_label[$cnt]."' style='position: absolute; visibility: hidden; z-index:1000;'><table class='outer' width='150' cellspacing='1'><tr><th nowrap='nowrap'>".$tree[$cnt][1]."</th></tr><tr><td class='even' nowrap='nowrap'>".$layer[$layer_label[$cnt]]."<div style='margin-top: 5px; font-size: smaller; text-align: right;'><a href='#' onmouseover='shutdown();'>["._CLOSE."]</a></div></td></tr><tr><th style='font-size: smaller; text-align: left;'>".$tree[$cnt][5]."<br />".$tree[$cnt][6]."</th></tr></table></div>\n";
+            }
+        }
+        $menu_layers .= "<script language='JavaScript'>\n<!--\nmoveLayers();\nloaded = 1;\n// -->\n</script>\n";
+        $content = "<"."?php\n";
+        $content .= "\$xoops_admin_menu_js = \"".$js."\";\n";
+        foreach ( $moveLayers as $k => $v ){
+            $content .= "\$xoops_admin_menu_ml[$k] = \"".$v."\";\n";
+        }
+        foreach ( $shutdown as $k => $v ){
+            $content .= "\$xoops_admin_menu_sd[$k] = \"".$v."\";\n";
+    }
+    foreach ( $firstleveltable as $k => $v ){
+        $content .= "\$xoops_admin_menu_ft[$k] = \"".$v."\";\n";
+    }
+    $content .= "\$xoops_admin_menu_dv = \"".$menu_layers."\";\n";
+    $content .= "\n?".">";
+    return $content;
+}
+
+function xoops_module_write_admin_menu($content)
+{
+    if (!xoopsfwrite()) {
+        return false;
+    }
+    $filename = XOOPS_CACHE_PATH.'/adminmenu.php';
+    if ( !$file = fopen($filename, "w") ) {
+        echo 'failed open file';
+        return false;
+    }
+    if ( fwrite($file, $content) == -1 ) {
+        echo 'failed write file';
+        return false;
+    }
+    fclose($file);
+    return true;
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/include/cp_functions.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/cp_header.php
===================================================================
--- XoopsCore/trunk/htdocs/include/cp_header.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/cp_header.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,38 @@
+<?php 
+// $Id$
+/**
+ * module files can include this file for admin authorization
+ * the file that will include this file must be located under xoops_url/modules/module_directory_name/admin_directory_name/
+ */
+error_reporting(0);
+include_once '../../../mainfile.php';
+include_once XOOPS_ROOT_PATH . "/include/cp_functions.php";
+$moduleperm_handler = & xoops_gethandler( 'groupperm' );
+if ( $xoopsUser ) {
+    $url_arr = explode('/',strstr($xoopsRequestUri,'/modules/'));
+    $module_handler =& xoops_gethandler('module');
+    $xoopsModule =& $module_handler->getByDirname($url_arr[2]);
+    unset($url_arr);
+    
+    if ( !$moduleperm_handler->checkRight( 'module_admin', $xoopsModule->getVar( 'mid' ), $xoopsUser->getGroups() ) ) {
+        redirect_header( XOOPS_URL . "/user.php", 1, _NOPERM );
+        exit();
+    } 
+} else {
+    redirect_header( XOOPS_URL . "/user.php", 1, _NOPERM );
+    exit();
+}
+// set config values for this module
+if ( $xoopsModule->getVar( 'hasconfig' ) == 1 || $xoopsModule->getVar( 'hascomments' ) == 1 ) {
+    $config_handler = & xoops_gethandler( 'config' );
+    $xoopsModuleConfig = & $config_handler->getConfigsByCat( 0, $xoopsModule->getVar( 'mid' ) );
+}
+
+// include the default language file for the admin interface
+if ( file_exists( "../language/" . $xoopsConfig['language'] . "/admin.php" ) ) {
+    include "../language/" . $xoopsConfig['language'] . "/admin.php";
+}
+elseif ( file_exists( "../language/english/admin.php" ) ) {
+    include "../language/english/admin.php";
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/cp_header.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/functions.php
===================================================================
--- XoopsCore/trunk/htdocs/include/functions.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/functions.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,695 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+// ################## Various functions from here ################
+
+function xoops_header($closehead=true)
+{
+    global $xoopsConfig, $xoopsTheme, $xoopsConfigMetaFooter;
+    $myts =& MyTextSanitizer::getInstance();
+    if ($xoopsConfig['gzip_compression'] == 1) {
+        ob_start("ob_gzhandler");
+    } else {
+        ob_start();
+    }
+    if (!headers_sent()) {
+        header('Content-Type:text/html; charset='._CHARSET);
+        header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');
+        header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
+        header('Cache-Control: no-store, no-cache, max-age=1, s-maxage=1, must-revalidate, post-check=0, pre-check=0');
+        header("Pragma: no-cache");
+    }
+    echo "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>";
+    echo '<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="'._LANGCODE.'" lang="'._LANGCODE.'">
+    <head>
+    <meta http-equiv="content-type" content="text/html; charset='._CHARSET.'" />
+    <meta http-equiv="content-language" content="'._LANGCODE.'" />
+    <meta name="robots" content="'.$xoopsConfigMetaFooter['meta_robots'].'" />
+    <meta name="keywords" content="'.$xoopsConfigMetaFooter['meta_keywords'].'" />
+    <meta name="description" content="'.$xoopsConfigMetaFooter['meta_desc'].'" />
+    <meta name="rating" content="'.$xoopsConfigMetaFooter['meta_rating'].'" />
+    <meta name="author" content="'.$xoopsConfigMetaFooter['meta_author'].'" />
+    <meta name="copyright" content="'.$xoopsConfigMetaFooter['meta_copyright'].'" />
+    <meta name="generator" content="XOOPS" />
+    <title>'.$xoopsConfig['sitename'].'</title>
+    <script type="text/javascript" src="'.XOOPS_URL.'/include/xoops.js"></script>
+    ';
+    $themecss = getcss($xoopsConfig['theme_set']);
+    echo '<link rel="stylesheet" type="text/css" media="all" href="'.XOOPS_URL.'/xoops.css" />';
+    if ($themecss) {
+        echo '<link rel="stylesheet" type="text/css" media="all" href="'.$themecss.'" />';
+        //echo '<style type="text/css" media="all"><!-- @import url('.$themecss.'); --></style>';
+    }
+    if ($closehead) {
+        echo '</head><body>';
+    }
+}
+
+function xoops_footer()
+{
+    echo '</body></html>';
+    ob_end_flush();
+}
+
+function xoops_error($msg, $title='')
+{
+    echo '
+    <div class="errorMsg">';
+    if ($title != '') {
+        echo '<h4>'.$title.'</h4>';
+    }
+    if (is_array($msg)) {
+        foreach ($msg as $m) {
+            echo $m.'<br />';
+        }
+    } else {
+        echo $msg;
+    }
+    echo '</div>';
+}
+
+function xoops_result($msg, $title='')
+{
+    echo '
+    <div class="resultMsg">';
+    if ($title != '') {
+        echo '<h4>'.$title.'</h4>';
+    }
+    if (is_array($msg)) {
+        foreach ($msg as $m) {
+            echo $m.'<br />';
+        }
+    } else {
+        echo $msg;
+    }
+    echo '</div>';
+}
+
+function xoops_confirm($hiddens, $action, $msg, $submit='', $addtoken = true)
+{
+    $submit = ($submit != '') ? trim($submit) : _SUBMIT;
+    echo '
+    <div class="confirmMsg">
+      <h4>'.$msg.'</h4>
+      <form method="post" action="'.$action.'">
+    ';
+    foreach ($hiddens as $name => $value) {
+        if (is_array($value)) {
+            foreach ($value as $caption => $newvalue) {
+                echo '<input type="radio" name="'.$name.'" value="'.htmlspecialchars($newvalue).'" /> '.$caption;
+            }
+            echo '<br />';
+        } else {
+            echo '<input type="hidden" name="'.$name.'" value="'.htmlspecialchars($value).'" />';
+        }
+    }
+    if ($addtoken != false) {
+        echo $GLOBALS['xoopsSecurity']->getTokenHTML();
+    }
+    echo '
+        <input type="submit" name="confirm_submit" value="'.$submit.'" /> <input type="button" name="confirm_back" value="'._CANCEL.'" onclick="javascript:history.go(-1);" />
+      </form>
+    </div>
+    ';
+}
+
+/**
+* Deprecated, use {@link XoopsSecurity} class instead
+**/
+function xoops_refcheck($docheck=1)
+{
+    return $GLOBALS['xoopsSecurity']->checkReferer($docheck);
+}
+
+function xoops_getUserTimestamp($time, $timeoffset="")
+{
+    global $xoopsConfig, $xoopsUser;
+    if ($timeoffset == '') {
+        if ($xoopsUser) {
+            $timeoffset = $xoopsUser->getVar("timezone_offset");
+        } else {
+            $timeoffset = $xoopsConfig['default_TZ'];
+        }
+    }
+    $usertimestamp = intval($time) + (intval($timeoffset) - $xoopsConfig['server_TZ'])*3600;
+    return $usertimestamp;
+}
+
+
+
+/*
+ * Function to display formatted times in user timezone
+ */
+function formatTimestamp($time, $format="l", $timeoffset="")
+{
+    global $xoopsConfig, $xoopsUser;
+    $usertimestamp = xoops_getUserTimestamp($time, $timeoffset);
+    switch (strtolower($format)) {
+    case 's':
+        $datestring = _SHORTDATESTRING;
+        break;
+    case 'm':
+        $datestring = _MEDIUMDATESTRING;
+        break;
+    case 'mysql':
+        $datestring = "Y-m-d H:i:s";
+        break;
+    case 'rss':
+        $datestring = "r";
+        break;
+    case 'l':
+        $datestring = _DATESTRING;
+        break;
+    default:
+        if ($format != '') {
+            $datestring = $format;
+        } else {
+            $datestring = _DATESTRING;
+        }
+        break;
+    }
+    return ucfirst(date($datestring, $usertimestamp));
+}
+
+/*
+ * Function to calculate server timestamp from user entered time (timestamp)
+ */
+function userTimeToServerTime($timestamp, $userTZ=null)
+{
+    global $xoopsConfig;
+    if (!isset($userTZ)) {
+        $userTZ = $xoopsConfig['default_TZ'];
+    }
+    $timestamp = $timestamp - (($userTZ - $xoopsConfig['server_TZ']) * 3600);
+    return $timestamp;
+}
+
+function xoops_makepass() {
+    $makepass = '';
+    $syllables = array("er","in","tia","wol","fe","pre","vet","jo","nes","al","len","son","cha","ir","ler","bo","ok","tio","nar","sim","ple","bla","ten","toe","cho","co","lat","spe","ak","er","po","co","lor","pen","cil","li","ght","wh","at","the","he","ck","is","mam","bo","no","fi","ve","any","way","pol","iti","cs","ra","dio","sou","rce","sea","rch","pa","per","com","bo","sp","eak","st","fi","rst","gr","oup","boy","ea","gle","tr","ail","bi","ble","brb","pri","dee","kay","en","be","se");
+    srand((double)microtime()*1000000);
+    for ($count = 1; $count <= 4; $count++) {
+        if (rand()%10 == 1) {
+            $makepass .= sprintf("%0.0f",(rand()%50)+1);
+        } else {
+            $makepass .= sprintf("%s",$syllables[rand()%62]);
+        }
+    }
+    return $makepass;
+}
+
+/*
+ * Functions to display dhtml loading image box
+ */
+function OpenWaitBox()
+{
+    echo "<div id='waitDiv' style='position:absolute;left:40%;top:50%;visibility:hidden;text-align: center;'>
+    <table cellpadding='6' border='2' class='bg2'>
+      <tr>
+        <td align='center'><b><big>" ._FETCHING."</big></b><br /><img src='".XOOPS_URL."/images/await.gif' alt='' /><br />" ._PLEASEWAIT."</td>
+      </tr>
+    </table>
+    </div>
+    <script type='text/javascript'>
+    <!--//
+    var DHTML = (document.getElementById || document.all || document.layers);
+    function ap_getObj(name) {
+        if (document.getElementById) {
+            return document.getElementById(name).style;
+        } else if (document.all) {
+            return document.all[name].style;
+        } else if (document.layers) {
+            return document.layers[name];
+        }
+    }
+    function ap_showWaitMessage(div,flag)  {
+        if (!DHTML) {
+            return;
+        }
+        var x = ap_getObj(div);
+        x.visibility = (flag) ? 'visible' : 'hidden';
+        if (!document.getElementById) {
+            if (document.layers) {
+                x.left=280/2;
+            }
+        }
+        return true;
+    }
+    ap_showWaitMessage('waitDiv', 1);
+    //-->
+    </script>";
+}
+
+function CloseWaitBox()
+{
+    echo "<script type='text/javascript'>
+    <!--//
+    ap_showWaitMessage('waitDiv', 0);
+    //-->
+    </script>
+    ";
+}
+
+function checkEmail($email,$antispam = false)
+{
+    if (!$email || !preg_match("/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+([\.][a-z0-9-]+)+$/i",$email)){
+        return false;
+    }
+    if ($antispam) {
+        $email = str_replace("@", " at ", $email);
+        $email = str_replace(".", " dot ", $email);
+    }
+	return $email;
+}
+
+function formatURL($url)
+{
+    $url = trim($url);
+    if ($url != '') {
+        if ((!preg_match("/^http[s]*:\/\//i", $url)) && (!preg_match("/^ftp*:\/\//i", $url)) && (!preg_match("/^ed2k*:\/\//i", $url)) ) {
+            $url = 'http://'.$url;
+        }
+    }
+    return $url;
+}
+
+/*
+ * Function to display banners in all pages
+ */
+function showbanner()
+{
+    echo xoops_getbanner();
+}
+
+/*
+ * Function to get banner html tags for use in templates
+ */
+function xoops_getbanner()
+{
+    global $xoopsConfig;
+    $db =& Database::getInstance();
+    $bresult = $db->query("SELECT COUNT(*) FROM ".$db->prefix("banner"));
+    list ($numrows) = $db->fetchRow($bresult);
+    if ( $numrows > 1 ) {
+        $numrows = $numrows-1;
+        mt_srand((double)microtime()*1000000);
+        $bannum = mt_rand(0, $numrows);
+    } else {
+        $bannum = 0;
+    }
+    if ( $numrows > 0 ) {
+        $bresult = $db->query("SELECT * FROM ".$db->prefix("banner"), 1, $bannum);
+        list ($bid, $cid, $imptotal, $impmade, $clicks, $imageurl, $clickurl, $date, $htmlbanner, $htmlcode) = $db->fetchRow($bresult);
+        if ($xoopsConfig['my_ip'] == xoops_getenv('REMOTE_ADDR')) {
+            // EMPTY
+        } else {
+            $db->queryF(sprintf("UPDATE %s SET impmade = impmade+1 WHERE bid = %u", $db->prefix("banner"), $bid));
+        }
+        /* Check if this impression is the last one and print the banner */
+        if ( $imptotal == $impmade ) {
+            $newid = $db->genId($db->prefix("bannerfinish")."_bid_seq");
+            $sql = sprintf("INSERT INTO %s (bid, cid, impressions, clicks, datestart, dateend) VALUES (%u, %u, %u, %u, %u, %u)", $db->prefix("bannerfinish"), $newid, $cid, $impmade, $clicks, $date, time());
+            $db->queryF($sql);
+            $db->queryF(sprintf("DELETE FROM %s WHERE bid = %u", $db->prefix("banner"), $bid));
+        }
+        if ($htmlbanner){
+            $bannerobject = $htmlcode;
+        }else{
+            $bannerobject = '<div><a href="'.XOOPS_URL.'/banners.php?op=click&amp;bid='.$bid.'" target="_blank">';
+            if (stristr($imageurl, '.swf')) {
+                $bannerobject = $bannerobject
+                    .'<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" width="468" height="60">'
+                    .'<param name=movie value="'.$imageurl.'">'
+                    .'<param name=quality value=high>'
+                    .'<embed src="'.$imageurl.'" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash"; type="application/x-shockwave-flash" width="468" height="60">'
+                    .'</embed>'
+                    .'</object>';
+            } else {
+                $bannerobject = $bannerobject.'<img src="'.$imageurl.'" alt="" />';
+            }
+
+            $bannerobject = $bannerobject.'</a></div>';
+        }
+        return $bannerobject;
+    }
+}
+
+/*
+* Function to redirect a user to certain pages
+*/
+function redirect_header($url, $time = 3, $message = '', $addredirect = true)
+{
+    global $xoopsConfig, $xoopsRequestUri, $xoopsLogger, $xoopsUserIsAdmin;
+    if ( preg_match( "/[\\0-\\31]|about:|script:/i", $url) ) {
+        $url = XOOPS_URL;
+    }
+    if (defined('XOOPS_CPFUNC_LOADED')) {
+        $theme = 'default';
+    } else {
+        $theme = $xoopsConfig['theme_set'];
+    }
+    require_once XOOPS_ROOT_PATH.'/class/template.php';
+    $xoopsTpl = new XoopsTpl();
+    $xoopsTpl->assign(array('xoops_theme' => $theme, 'xoops_imageurl' => XOOPS_THEME_URL.'/'.$theme.'/', 'xoops_themecss'=> xoops_getcss($theme), 'xoops_requesturi' => htmlspecialchars($GLOBALS['xoopsRequestUri'], ENT_QUOTES), 'xoops_sitename' => htmlspecialchars($xoopsConfig['sitename'], ENT_QUOTES), 'xoops_slogan' => htmlspecialchars($xoopsConfig['slogan'], ENT_QUOTES)));
+    if ($xoopsConfig['debug_mode'] == 2 && $xoopsUserIsAdmin) {
+        $xoopsTpl->assign('time', 300);
+        $xoopsTpl->assign('xoops_logdump', $xoopsLogger->dumpAll());
+    } else {
+        $xoopsTpl->assign('time', intval($time));
+    }
+    if ($addredirect && strstr($url, 'user.php')) {
+        if (!strstr($url, '?')) {
+            $url .= '?xoops_redirect='.urlencode($xoopsRequestUri);
+        } else {
+            $url .= '&amp;xoops_redirect='.urlencode($xoopsRequestUri);
+        }
+    }
+    if (defined('SID') && (! isset($_COOKIE[session_name()]) || ($xoopsConfig['use_mysession'] && $xoopsConfig['session_name'] != '' && !isset($_COOKIE[$xoopsConfig['session_name']])))) {
+        if (!strstr($url, '?')) {
+            $url .= '?' . SID;
+        } else {
+            $url .= '&amp;'.SID;
+        }
+    }
+    $url = preg_replace("/&amp;/i", '&', htmlspecialchars($url, ENT_QUOTES));
+    $xoopsTpl->assign('url', $url);
+    $message = trim($message) != '' ? $message : _TAKINGBACK;
+    $xoopsTpl->assign('message', $message);
+    $xoopsTpl->assign('lang_ifnotreload', sprintf(_IFNOTRELOAD, $url));
+    $xoopsTpl->display('db:system_redirect.html');
+    exit();
+}
+
+function xoops_getenv($key)
+{
+    $ret = '';
+    //$phpv = explode(".", PHP_VERSION);
+    //if ($phpv[0] > 3 && $phpv[1] > 0) {
+    //  $ret = isset($_SERVER[$key]) ? $_SERVER[$key] : $_ENV[$key];
+    //} else {
+        $ret = isset($_SERVER[$key]) ? $_SERVER[$key] : $_ENV[$key];
+    //}
+    return $ret;
+}
+
+/*
+ * This function is deprecated. Do not use!
+ */
+function getTheme()
+{
+    return $GLOBALS['xoopsConfig']['theme_set'];
+}
+
+/*
+ * Function to get css file for a certain theme
+ * This function will be deprecated.
+ */
+function getcss($theme = '')
+{
+    return xoops_getcss($theme);
+}
+
+/*
+ * Function to get css file for a certain themeset
+ */
+function xoops_getcss($theme = '')
+{
+    if ($theme == '') {
+        $theme = $GLOBALS['xoopsConfig']['theme_set'];
+    }
+    $uagent = xoops_getenv('HTTP_USER_AGENT');
+    if (stristr($uagent, 'mac')) {
+        $str_css = 'styleMAC.css';
+    } elseif (preg_match("/MSIE ([0-9]\.[0-9]{1,2})/i", $uagent)) {
+        $str_css = 'style.css';
+    } else {
+        $str_css = 'styleNN.css';
+    }
+    if (is_dir(XOOPS_THEME_PATH.'/'.$theme)) {
+        if (file_exists(XOOPS_THEME_PATH.'/'.$theme.'/'.$str_css)) {
+            return XOOPS_THEME_URL.'/'.$theme.'/'.$str_css;
+        } elseif (file_exists(XOOPS_THEME_PATH.'/'.$theme.'/style.css')) {
+            return XOOPS_THEME_URL.'/'.$theme.'/style.css';
+        }
+    }
+    return '';
+}
+
+function &getMailer()
+{
+    global $xoopsConfig;
+    include_once XOOPS_ROOT_PATH."/class/xoopsmailer.php";
+    if ( file_exists(XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/xoopsmailerlocal.php") ) {
+        include_once XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/xoopsmailerlocal.php";
+        if ( class_exists("XoopsMailerLocal") ) {
+            return new XoopsMailerLocal();
+        }
+    }
+    return new XoopsMailer();
+}
+
+function &xoops_gethandler($name, $optional = false )
+{
+    static $handlers;
+    $name = strtolower(trim($name));
+    if (!isset($handlers[$name])) {
+        if ( file_exists( $hnd_file = XOOPS_ROOT_PATH.'/kernel/'.$name.'.php' ) ) {
+            require_once $hnd_file;
+        }
+        $class = 'Xoops'.ucfirst($name).'Handler';
+        if (class_exists($class)) {
+            $handlers[$name] = new $class($GLOBALS['xoopsDB']);
+        }
+    }
+    if (!isset($handlers[$name]) && !$optional ) {
+        trigger_error('Class <b>'.$class.'</b> does not exist<br />Handler Name: '.$name, E_USER_ERROR);
+    }
+    return isset($handlers[$name]) ? $handlers[$name] : false;
+}
+
+function &xoops_getmodulehandler($name = null, $module_dir = null, $optional = false)
+{
+    static $handlers;
+    // if $module_dir is not specified
+    if (!isset($module_dir)) {
+        //if a module is loaded
+        if (isset($GLOBALS['xoopsModule']) && is_object($GLOBALS['xoopsModule'])) {
+            $module_dir = $GLOBALS['xoopsModule']->getVar('dirname');
+        } else {
+            trigger_error('No Module is loaded', E_USER_ERROR);
+        }
+    } else {
+        $module_dir = trim($module_dir);
+    }
+    $name = (!isset($name)) ? $module_dir : trim($name);
+    if (!isset($handlers[$module_dir][$name])) {
+        if ( file_exists( $hnd_file = XOOPS_ROOT_PATH . "/modules/{$module_dir}/class/{$name}.php" ) ) {
+            include_once $hnd_file;
+        }
+        $class = ucfirst(strtolower($module_dir)).ucfirst($name).'Handler';
+        if (class_exists($class)) {
+            $handlers[$module_dir][$name] = new $class($GLOBALS['xoopsDB']);
+        }
+    }
+    if (!isset($handlers[$module_dir][$name]) && !$optional) {
+        trigger_error('Handler does not exist<br />Module: '.$module_dir.'<br />Name: '.$name, E_USER_ERROR);
+    }
+    return isset($handlers[$module_dir][$name]) ? $handlers[$module_dir][$name] : false;
+}
+
+function xoops_getrank($rank_id =0, $posts = 0)
+{
+    $db =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    $rank_id = intval($rank_id);
+    if ($rank_id != 0) {
+        $sql = "SELECT rank_title AS title, rank_image AS image FROM ".$db->prefix('ranks')." WHERE rank_id = ".$rank_id;
+    } else {
+        $sql = "SELECT rank_title AS title, rank_image AS image FROM ".$db->prefix('ranks')." WHERE rank_min <= ".$posts." AND rank_max >= ".$posts." AND rank_special = 0";
+    }
+    $rank = $db->fetchArray($db->query($sql));
+    $rank['title'] = $myts->makeTboxData4Show($rank['title']);
+    $rank['id'] = $rank_id;
+    return $rank;
+}
+
+
+/**
+* Returns the portion of string specified by the start and length parameters. If $trimmarker is supplied, it is appended to the return string. This function works fine with multi-byte characters if mb_* functions exist on the server.
+*
+* @param    string    $str
+* @param    int       $start
+* @param    int       $length
+* @param    string    $trimmarker
+*
+* @return   string
+*/
+function xoops_substr($str, $start, $length, $trimmarker = '...')
+{
+    if ( !XOOPS_USE_MULTIBYTES ) {
+        return ( strlen($str) - $start <= $length ) ? substr( $str, $start, $length ) : substr( $str, $start, $length - strlen($trimmarker) ) . $trimmarker;
+    }
+    if (function_exists('mb_internal_encoding') && @mb_internal_encoding(_CHARSET)) {
+        $str2 = mb_strcut( $str , $start , $length - strlen( $trimmarker ) );
+        return $str2 . ( mb_strlen($str)!=mb_strlen($str2) ? $trimmarker : '' );
+    }
+    // phppp patch
+    $DEP_CHAR=127;
+    $pos_st=0;
+    $action = false;
+    for ( $pos_i = 0; $pos_i < strlen($str); $pos_i++ ) {
+        if ( ord( substr( $str, $pos_i, 1) ) > 127 ) {
+            $pos_i++;
+        }
+        if ($pos_i<=$start) {
+            $pos_st=$pos_i;
+        }
+        if ($pos_i>=$pos_st+$length) {
+            $action = true;
+            break;
+        }
+    }
+    return ($action) ? substr( $str, $pos_st, $pos_i - $pos_st - strlen($trimmarker) ) . $trimmarker : $str;
+}
+
+// RMV-NOTIFY
+// ################ Notification Helper Functions ##################
+
+// We want to be able to delete by module, by user, or by item.
+// How do we specify this??
+
+function xoops_notification_deletebymodule ($module_id)
+{
+    $notification_handler =& xoops_gethandler('notification');
+    return $notification_handler->unsubscribeByModule ($module_id);
+}
+
+function xoops_notification_deletebyuser ($user_id)
+{
+    $notification_handler =& xoops_gethandler('notification');
+    return $notification_handler->unsubscribeByUser ($user_id);
+}
+
+function xoops_notification_deletebyitem ($module_id, $category, $item_id)
+{
+    $notification_handler =& xoops_gethandler('notification');
+    return $notification_handler->unsubscribeByItem ($module_id, $category, $item_id);
+}
+
+// ################### Comment helper functions ####################
+
+function xoops_comment_count($module_id, $item_id = null)
+{
+    $comment_handler =& xoops_gethandler('comment');
+    $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
+    if (isset($item_id)) {
+        $criteria->add(new Criteria('com_itemid', intval($item_id)));
+    }
+    return $comment_handler->getCount($criteria);
+}
+
+function xoops_comment_delete($module_id, $item_id)
+{
+    if (intval($module_id) > 0 && intval($item_id) > 0) {
+        $comment_handler =& xoops_gethandler('comment');
+        $comments =& $comment_handler->getByItemId($module_id, $item_id);
+        if (is_array($comments)) {
+            $count = count($comments);
+            $deleted_num = array();
+            for ($i = 0; $i < $count; $i++) {
+                if (false != $comment_handler->delete($comments[$i])) {
+                    // store poster ID and deleted post number into array for later use
+                    $poster_id = $comments[$i]->getVar('com_uid');
+                    if ($poster_id != 0) {
+                        $deleted_num[$poster_id] = !isset($deleted_num[$poster_id]) ? 1 : ($deleted_num[$poster_id] + 1);
+                    }
+                }
+            }
+            $member_handler =& xoops_gethandler('member');
+            foreach ($deleted_num as $user_id => $post_num) {
+                // update user posts
+                $com_poster = $member_handler->getUser($user_id);
+                if (is_object($com_poster)) {
+                    $member_handler->updateUserByField($com_poster, 'posts', $com_poster->getVar('posts') - $post_num);
+                }
+            }
+            return true;
+        }
+    }
+    return false;
+}
+
+// ################ Group Permission Helper Functions ##################
+
+function xoops_groupperm_deletebymoditem($module_id, $perm_name, $item_id = null)
+{
+    // do not allow system permissions to be deleted
+    if (intval($module_id) <= 1) {
+        return false;
+    }
+    $gperm_handler =& xoops_gethandler('groupperm');
+    return $gperm_handler->deleteByModule($module_id, $perm_name, $item_id);
+}
+
+function &xoops_utf8_encode(&$text)
+{
+    if (XOOPS_USE_MULTIBYTES == 1) {
+        if (function_exists('mb_convert_encoding')) {
+            return mb_convert_encoding($text, 'UTF-8', 'auto');
+        }
+        return $text;
+    }
+    return utf8_encode($text);
+}
+
+function &xoops_convert_encoding(&$text)
+{
+    return xoops_utf8_encode($text);
+}
+
+function xoops_getLinkedUnameFromId($userid)
+{
+    $userid = intval($userid);
+    if ($userid > 0) {
+        $member_handler =& xoops_gethandler('member');
+        $user =& $member_handler->getUser($userid);
+        if (is_object($user)) {
+            $linkeduser = '<a href="'.XOOPS_URL.'/userinfo.php?uid='.$userid.'">'. $user->getVar('uname').'</a>';
+            return $linkeduser;
+        }
+    }
+    return $GLOBALS['xoopsConfig']['anonymous'];
+}
+
+function xoops_trim($text)
+{
+    if (function_exists('xoops_language_trim')) {
+        return xoops_language_trim($text);
+    }
+    return trim($text);
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/functions.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/notification_constants.php
===================================================================
--- XoopsCore/trunk/htdocs/include/notification_constants.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/notification_constants.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,48 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+// RMV-NOTIFY
+
+define('XOOPS_NOTIFICATION_MODE_SENDALWAYS', 0);
+define('XOOPS_NOTIFICATION_MODE_SENDONCETHENDELETE', 1);
+define('XOOPS_NOTIFICATION_MODE_SENDONCETHENWAIT', 2);
+define('XOOPS_NOTIFICATION_MODE_WAITFORLOGIN', 3);
+
+define('XOOPS_NOTIFICATION_METHOD_DISABLE', 0);
+define('XOOPS_NOTIFICATION_METHOD_PM', 1);
+define('XOOPS_NOTIFICATION_METHOD_EMAIL', 2);
+
+define('XOOPS_NOTIFICATION_DISABLE', 0);
+define('XOOPS_NOTIFICATION_ENABLEBLOCK', 1);
+define('XOOPS_NOTIFICATION_ENABLEINLINE', 2);
+define('XOOPS_NOTIFICATION_ENABLEBOTH', 3);
+
+?>


Property changes on: XoopsCore/trunk/htdocs/include/notification_constants.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/notification_functions.php
===================================================================
--- XoopsCore/trunk/htdocs/include/notification_functions.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/notification_functions.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,394 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+// RMV-NOTIFY
+
+// FIXME: Do some caching, so we don't retrieve the same category / event
+// info many times.
+
+
+/**
+ * Determine if notification is enabled for the selected module.
+ *
+ * @param  string  $style      Subscription style: 'block' or 'inline'
+ * @param  int     $module_id  ID of the module  (default current module)
+ * @return bool
+ */
+function notificationEnabled ($style, $module_id=null)
+{
+	if (isset($GLOBALS['xoopsModuleConfig']['notification_enabled'])) {
+		$status = $GLOBALS['xoopsModuleConfig']['notification_enabled'];
+	} else {
+		if (!isset($module_id)) {
+			return false;
+		}
+		$module_handler =& xoops_gethandler('module');
+		$module =& $module_handler->get($module_id);
+		if (!empty($module) && $module->getVar('hasnotification') == 1) {
+			$config_handler =& xoops_gethandler('config');
+			$config = $config_handler->getConfigsByCat(0,$module_id);
+			$status = $config['notification_enabled'];
+		} else {
+			return false;
+		}
+	}
+	include_once XOOPS_ROOT_PATH . '/include/notification_constants.php';
+	if (($style == 'block') && ($status == XOOPS_NOTIFICATION_ENABLEBLOCK || $status == XOOPS_NOTIFICATION_ENABLEBOTH)) {
+		return true;
+	}
+	if (($style == 'inline') && ($status == XOOPS_NOTIFICATION_ENABLEINLINE || $status == XOOPS_NOTIFICATION_ENABLEBOTH)) {
+		return true;
+	}
+	// if ($status != XOOPS_NOTIFICATION_DISABLE) {
+	// 		return true;
+	// }
+	return false;
+}
+
+/**
+ * Get an associative array of info for a particular notification
+ * category in the selected module.  If no category is selected,
+ * return an array of info for all categories.
+ *
+ * @param  string  $name       Category name (default all categories)
+ * @param  int     $module_id  ID of the module (default current module)
+ * @return mixed
+ */
+function &notificationCategoryInfo ($category_name='', $module_id=null)
+{
+	if (!isset($module_id)) {
+		global $xoopsModule;
+		$module_id = !empty($xoopsModule) ? $xoopsModule->getVar('mid') : 0;
+		$module =& $xoopsModule;
+	} else {
+		$module_handler =& xoops_gethandler('module');
+		$module =& $module_handler->get($module_id);
+	}
+	$not_config =& $module->getInfo('notification');
+	if (empty($category_name)) {
+		return $not_config['category'];
+	}
+	foreach ($not_config['category'] as $category) {
+		if ($category['name'] == $category_name) {
+			return $category;
+		}
+	}
+	return false;
+}
+
+/**
+ * Get associative array of info for the category to which comment events
+ * belong.
+ *
+ * @todo This could be more efficient... maybe specify in
+ *        $modversion['comments'] the notification category.
+ *       This would also serve as a way to enable notification
+ *        of comments, and also remove the restriction that
+ *        all notification categories must have unique item_name. (TODO)
+ *
+ * @param  int  $module_id  ID of the module (default current module)
+ * @return mixed            Associative array of category info
+ */
+function &notificationCommentCategoryInfo($module_id=null)
+{
+	$all_categories =& notificationCategoryInfo ('', $module_id);
+	if (empty($all_categories)) {
+		return false;
+	}
+	foreach ($all_categories as $category) {
+		$all_events =& notificationEvents ($category['name'], false, $module_id);
+		if (empty($all_events)) {
+			continue;
+		}
+		foreach ($all_events as $event) {
+			if ($event['name'] == 'comment') {
+				return $category;
+			}
+		}
+	}
+	return false;
+}
+
+// TODO: some way to include or exclude admin-only events...
+
+/**
+ * Get an array of info for all events (each event has associative array)
+ * in the selected category of the selected module.
+ *
+ * @param  string  $category_name  Category name
+ * @param  bool    $enabled_only   If true, return only enabled events
+ * @param  int     $module_id      ID of the module (default current module)
+ * @return mixed
+ */
+function &notificationEvents ($category_name, $enabled_only, $module_id=null)
+{
+	if (!isset($module_id)) {
+		global $xoopsModule;
+		$module_id = !empty($xoopsModule) ? $xoopsModule->getVar('mid') : 0;
+		$module =& $xoopsModule;
+	} else {
+		$module_handler =& xoops_gethandler('module');
+		$module =& $module_handler->get($module_id);
+	}
+	$not_config =& $module->getInfo('notification');
+	$config_handler =& xoops_gethandler('config');
+	$mod_config = $config_handler->getConfigsByCat(0,$module_id);
+
+	$category =& notificationCategoryInfo($category_name, $module_id);
+
+	global $xoopsConfig;
+	$event_array = array();
+
+	$override_comment = false;
+	$override_commentsubmit = false;
+	$override_bookmark = false;
+	
+	foreach ($not_config['event'] as $event) {
+		if ($event['category'] == $category_name) {
+			$event['mail_template_dir'] = XOOPS_ROOT_PATH . '/modules/' . $module->getVar('dirname') . '/language/' . $xoopsConfig['language'] . '/mail_template/';
+			if (!$enabled_only || notificationEventEnabled ($category, $event, $module)) {
+				$event_array[] = $event;
+			}
+			if ($event['name'] == 'comment') {
+				$override_comment = true;
+			}
+			if ($event['name'] == 'comment_submit') {
+				$override_commentsubmit = true;
+			}
+			if ($event['name'] == 'bookmark') {
+				$override_bookmark = true;
+			}
+		}
+	}
+
+	include_once XOOPS_ROOT_PATH . '/language/' . $xoopsConfig['language'] . '/notification.php';
+
+	// Insert comment info if applicable
+	
+	if ($module->getVar('hascomments')) {
+		$com_config = $module->getInfo('comments');
+		if (!empty($category['item_name']) && $category['item_name'] == $com_config['itemName']) {
+			$mail_template_dir = XOOPS_ROOT_PATH . '/language/' . $xoopsConfig['language'] . '/mail_template/';
+			include_once XOOPS_ROOT_PATH . '/include/comment_constants.php';
+			$config_handler =& xoops_gethandler('config');
+			$com_config = $config_handler->getConfigsByCat(0,$module_id);
+			if (!$enabled_only) {
+				$insert_comment = true;
+				$insert_submit = true;
+			} else {
+				$insert_comment = false;
+				$insert_submit = false;
+				switch($com_config['com_rule']) {
+				case XOOPS_COMMENT_APPROVENONE:
+					// comments disabled, no comment events
+					break;
+				case XOOPS_COMMENT_APPROVEALL:
+					// all comments are automatically approved, no 'submit'
+					if (!$override_comment) {
+						$insert_comment = true;
+					}
+					break;
+				case XOOPS_COMMENT_APPROVEUSER:
+				case XOOPS_COMMENT_APPROVEADMIN:
+					// comments first submitted, require later approval
+					if (!$override_comment) {
+						$insert_comment = true;
+					}
+					if (!$override_commentsubmit) {
+						$insert_submit = true;
+					}
+					break;
+				}
+			}
+			if ($insert_comment) {
+				$event = array ('name'=>'comment', 'category'=>$category['name'], 'title'=>_NOT_COMMENT_NOTIFY, 'caption'=>_NOT_COMMENT_NOTIFYCAP, 'description'=>_NOT_COMMENT_NOTIFYDSC, 'mail_template_dir'=>$mail_template_dir, 'mail_template'=>'comment_notify', 'mail_subject'=>_NOT_COMMENT_NOTIFYSBJ);
+				if (!$enabled_only || notificationEventEnabled($category, $event, $module)) {
+					$event_array[] = $event;
+				}
+			}
+			if ($insert_submit) {
+				$event = array ('name'=>'comment_submit', 'category'=>$category['name'], 'title'=>_NOT_COMMENTSUBMIT_NOTIFY, 'caption'=>_NOT_COMMENTSUBMIT_NOTIFYCAP, 'description'=>_NOT_COMMENTSUBMIT_NOTIFYDSC, 'mail_template_dir'=>$mail_template_dir, 'mail_template'=>'commentsubmit_notify', 'mail_subject'=>_NOT_COMMENTSUBMIT_NOTIFYSBJ, 'admin_only'=>1);
+				if (!$enabled_only || notificationEventEnabled($category, $event, $module)) {
+					$event_array[] = $event;
+				}
+			}
+				
+
+		}
+	}
+
+	// Insert bookmark info if appropriate
+
+	if (!empty($category['allow_bookmark'])) {
+		if (!$override_bookmark) {
+			$event = array ('name'=>'bookmark', 'category'=>$category['name'], 'title'=>_NOT_BOOKMARK_NOTIFY, 'caption'=>_NOT_BOOKMARK_NOTIFYCAP, 'description'=>_NOT_BOOKMARK_NOTIFYDSC);
+			if (!$enabled_only || notificationEventEnabled($category, $event, $module)) {
+				$event_array[] = $event;
+			}
+		}	
+	}
+
+
+	return $event_array;
+	
+}
+
+/**
+ * Determine whether a particular notification event is enabled.
+ * Depends on module config options.
+ *
+ * @todo  Check that this works correctly for comment and other
+ *   events which depend on additional config options...
+ *
+ * @param  array  $category  Category info array
+ * @param  array  $event     Event info array
+ * @param  object $module    Module
+ * @return bool
+ **/
+function notificationEventEnabled (&$category, &$event, &$module)
+{
+	$config_handler =& xoops_gethandler('config');
+	$mod_config = $config_handler->getConfigsByCat(0,$module->getVar('mid'));
+
+	$option_name = notificationGenerateConfig ($category, $event, 'option_name');
+	if (in_array($option_name, $mod_config['notification_events'])) {
+		return true;
+	}
+	$notification_handler =& xoops_gethandler('notification');
+
+	return false;
+}
+
+
+/**
+ * Get associative array of info for the selected event in the selected
+ * category (for the selected module).
+ *
+ * @param  string  $category_name  Notification category
+ * @param  string  $event_name     Notification event
+ * @param  int     $module_id      ID of the module (default current module)
+ * @return mixed
+ */
+function &notificationEventInfo ($category_name, $event_name, $module_id=null)
+{
+	$all_events =& notificationEvents ($category_name, false, $module_id);
+	foreach ($all_events as $event) {
+		if ($event['name'] == $event_name) {
+			return $event;
+		}
+	}
+	return false;
+}
+
+
+/**
+ * Get an array of associative info arrays for subscribable categories
+ * for the selected module.
+ *
+ * @param  int  $module_id  ID of the module
+ * @return mixed
+ */
+
+function &notificationSubscribableCategoryInfo ($module_id=null)
+{
+	$all_categories =& notificationCategoryInfo ('', $module_id);
+
+	// FIXME: better or more standardized way to do this?
+	$script_url = explode('/', $_SERVER['PHP_SELF']);
+	$script_name = $script_url[count($script_url)-1];
+
+	$sub_categories = array();
+
+	foreach ($all_categories as $category) {
+
+		// Check the script name
+
+		$subscribe_from = $category['subscribe_from'];
+		if (!is_array($subscribe_from)) {
+			if ($subscribe_from == '*') {
+				$subscribe_from = array($script_name);
+				// FIXME: this is just a hack: force a match
+			} else {
+				$subscribe_from = array($subscribe_from);
+			}
+		}
+		if (!in_array($script_name, $subscribe_from)) {
+			continue;
+		}	
+
+		// If 'item_name' is missing, automatic match.  Otherwise
+		// check if that argument exists...
+
+		if (empty($category['item_name'])) {
+			$category['item_name'] = '';
+			$category['item_id'] = 0;
+			$sub_categories[] = $category;
+		} else {
+			$item_name = $category['item_name'];
+			$id = ($item_name != '' && isset($_GET[$item_name])) ? intval($_GET[$item_name]) : 0;
+			if ($id > 0)  {
+				$category['item_id'] = $id;
+				$sub_categories[] = $category;
+			}
+		}
+	}
+	return $sub_categories;
+
+}
+
+/**
+ * Generate module config info for a particular category, event pair.
+ * The selectable config options are given names depending on the
+ * category and event names, and the text depends on the category
+ * and event titles.  These are pieced together in this function in
+ * case we wish to alter the syntax.
+ *
+ * @param  array  $category  Array of category info
+ * @param  array  $event     Array of event info
+ * @param  string $type      The particular name to generate
+ * return string
+ **/
+function notificationGenerateConfig (&$category, &$event, $type)
+{
+	switch ($type) {
+	case 'option_value':
+	case 'name':
+		return 'notify:' . $category['name'] . '-' . $event['name'];
+		break;
+	case 'option_name':
+		return $category['name'] . '-' . $event['name'];
+		break;
+	default:
+		return false;
+		break;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/notification_functions.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/notification_select.php
===================================================================
--- XoopsCore/trunk/htdocs/include/notification_select.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/notification_select.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,83 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+include_once XOOPS_ROOT_PATH.'/include/notification_constants.php';
+include_once XOOPS_ROOT_PATH.'/include/notification_functions.php';
+$xoops_notification = array();
+$xoops_notification['show'] = isset($xoopsModule) && is_object($xoopsUser) && notificationEnabled('inline') ? 1 : 0;
+if ($xoops_notification['show']) {
+	include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/notification.php';
+	$categories =& notificationSubscribableCategoryInfo();
+	$event_count = 0;
+	if (!empty($categories)) {
+		$notification_handler =& xoops_gethandler('notification');
+		foreach ($categories as $category) {
+			$section['name'] = $category['name'];
+			$section['title'] = $category['title'];
+			$section['description'] = $category['description'];
+			$section['itemid'] = $category['item_id'];
+			$section['events'] = array();
+			$subscribed_events =& $notification_handler->getSubscribedEvents($category['name'], $category['item_id'], $xoopsModule->getVar('mid'), $xoopsUser->getVar('uid'));
+			foreach (notificationEvents($category['name'], true) as $event) {
+            	if (!empty($event['admin_only']) && !$xoopsUser->isAdmin($xoopsModule->getVar('mid'))) {
+                	continue;
+            	}
+				if (!empty($event['invisible'])) {
+					continue;
+				}
+				$subscribed = in_array($event['name'], $subscribed_events) ? 1 : 0;
+				$section['events'][$event['name']] = array ('name'=>$event['name'], 'title'=>$event['title'], 'caption'=>$event['caption'], 'description'=>$event['description'], 'subscribed'=>$subscribed);
+				$event_count ++;
+			}
+			$xoops_notification['categories'][$category['name']] = $section;
+		}
+		$xoops_notification['target_page'] = "notification_update.php";
+		$xoops_notification['redirect_script'] = xoops_getenv('PHP_SELF');
+		$xoopsTpl->assign(array('lang_activenotifications' => _NOT_ACTIVENOTIFICATIONS, 'lang_notificationoptions' => _NOT_NOTIFICATIONOPTIONS, 'lang_updateoptions' => _NOT_UPDATEOPTIONS, 'lang_updatenow' => _NOT_UPDATENOW, 'lang_category' => _NOT_CATEGORY, 'lang_event' => _NOT_EVENT, 'lang_events' => _NOT_EVENTS, 'lang_checkall' => _NOT_CHECKALL, 'lang_notificationmethodis' => _NOT_NOTIFICATIONMETHODIS, 'lang_change' => _NOT_CHANGE, 'editprofile_url' => XOOPS_URL . '/edituser.php?uid=' . $xoopsUser->getVar('uid')));
+		switch ($xoopsUser->getVar('notify_method')) {
+		case XOOPS_NOTIFICATION_METHOD_DISABLE:
+			$xoopsTpl->assign('user_method', _NOT_DISABLE);
+			break;
+		case XOOPS_NOTIFICATION_METHOD_PM:
+			$xoopsTpl->assign('user_method', _NOT_PM);
+			break;
+		case XOOPS_NOTIFICATION_METHOD_EMAIL:
+			$xoopsTpl->assign('user_method', _NOT_EMAIL);
+			break;
+		}
+	} else {
+		$xoops_notification['show'] = 0;
+	}
+	if ($event_count == 0) {
+		$xoops_notification['show'] = 0;
+	}
+}
+$xoopsTpl->assign('xoops_notification', $xoops_notification);
+?>


Property changes on: XoopsCore/trunk/htdocs/include/notification_select.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/notification_update.php
===================================================================
--- XoopsCore/trunk/htdocs/include/notification_update.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/notification_update.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,128 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+// RMV-NOTIFY
+
+// This module expects the following arguments:
+//
+// not_submit
+// not_redirect (to return back after update)
+// not_mid (TODO)
+// not_uid (TODO)
+// not_list[1][params] = {category},{itemid},{event}
+// not_list[1][status] = 1 if selected; 0 or missing if not selected
+// etc...
+
+// TODO: can we put arguments in the not_redirect argument??? do we need
+// to specially encode them first???
+
+// TODO: allow 'GET' also so we can process 'unsubscribe' requests??
+
+if (!defined('XOOPS_ROOT_PATH') || !is_object($xoopsModule)) {
+    exit();
+}
+
+include_once XOOPS_ROOT_PATH.'/include/notification_constants.php';
+include_once XOOPS_ROOT_PATH.'/include/notification_functions.php';
+include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/notification.php';
+
+if (!isset($_POST['not_submit'])) {
+    exit();
+}
+
+if (!$GLOBALS['xoopsSecurity']->check()) {
+    redirect_header($_POST['not_redirect'], 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    exit();
+}
+
+// NOTE: in addition to the templates provided in the block and view
+// modes, we can have buttons, etc. which load the arguments to be
+// read by this script.  That way a module can really customize its
+// look as to where/how the notification options are made available.
+
+$update_list = $_POST['not_list'];
+
+$module_id = $xoopsModule->getVar('mid');
+$user_id = is_object($xoopsUser) ? $xoopsUser->getVar('uid') : 0;
+
+// For each event, update the notification depending on the status.
+// If status=1, subscribe to the event; otherwise, unsubscribe.
+
+// FIXME: right now I just ignore database errors (e.g. if already
+//  subscribed)... deal with this more gracefully?
+
+$notification_handler =& xoops_gethandler('notification');
+
+foreach ($update_list as $update_item) {
+
+    list($category, $item_id, $event) = split (',', $update_item['params']);
+    $status = !empty($update_item['status']) ? 1 : 0;
+
+    if (!$status) {
+        $notification_handler->unsubscribe($category, $item_id, $event, $module_id, $user_id);
+    } else {
+        $notification_handler->subscribe($category, $item_id, $event);
+    }
+
+}
+
+// TODO: something like grey box summary of actions (like multiple comment
+// deletion), with a button to return back...  NOTE: we need some arguments
+// to help us get back to where we were...
+
+// TODO: finish integration with comments... i.e. need calls to
+// notifyUsers at appropriate places... (need to figure out where
+// comment submit occurs and where comment approval occurs)...
+
+include_once XOOPS_ROOT_PATH . '/include/notification_functions.php';
+
+$redirect_args = array();
+foreach ($update_list as $update_item) {
+    list($category,$item_id,$event) = split(',',$update_item['params']);
+    $category_info =& notificationCategoryInfo($category);
+    if (!empty($category_info['item_name'])) {
+        $redirect_args[$category_info['item_name']] = $item_id;
+    }
+}
+
+// TODO: write a central function to put together args with '?' and '&'
+// symbols...
+$argstring = '';
+$first_arg = 1;
+foreach (array_keys($redirect_args) as $arg) {
+    if ($first_arg) {
+        $argstring .= "?" . $arg . "=" . $redirect_args[$arg];
+        $first_arg = 0;
+    } else {
+        $argstring .= "&" . $arg . "=" . $redirect_args[$arg];
+    }
+}
+
+redirect_header ($_POST['not_redirect'].$argstring, 3, _NOT_UPDATEOK);
+exit();
+
+?>


Property changes on: XoopsCore/trunk/htdocs/include/notification_update.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/old_functions.php
===================================================================
--- XoopsCore/trunk/htdocs/include/old_functions.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/old_functions.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,209 @@
+<?php
+// #################### Block functions from here ##################
+
+/*
+ * Purpose : Builds the blocks on both sides
+ * Input   : $side = On wich side should the block are displayed?
+ *             0, l, left : On the left side
+ *             1, r, right: On the right side
+ *             other:   Only on one side (
+ *                          Call from theme.php makes all blocks on the left side
+ *                          and from theme.php for the right site)
+ */
+function make_sidebar($side)
+{
+	global $xoopsUser;
+	$xoopsblock = new XoopsBlock();
+	if ($side == "left") {
+		$side = XOOPS_SIDEBLOCK_LEFT;
+	} elseif ($side == "right") {
+		$side = XOOPS_SIDEBLOCK_RIGHT;
+	} else {
+		$side = XOOPS_SIDEBLOCK_BOTH;
+	}
+	if (is_object($xoopsUser)) {
+		$block_arr =& $xoopsblock->getAllBlocksByGroup($xoopsUser->getGroups(), true, $side, XOOPS_BLOCK_VISIBLE);
+	} else {
+		$block_arr =& $xoopsblock->getAllBlocksByGroup(XOOPS_GROUP_ANONYMOUS, true, $side, XOOPS_BLOCK_VISIBLE);
+	}
+
+	$block_count = count($block_arr);
+	if (!isset($GLOBALS['xoopsTpl']) || !is_object($GLOBALS['xoopsTpl'])) {
+		include_once XOOPS_ROOT_PATH.'/class/template.php';
+		$xoopsTpl = new XoopsTpl();
+	} else {
+		$xoopsTpl =& $GLOBALS['xoopsTpl'];
+	}
+	$xoopsLogger =& XoopsLogger::instance();
+	for ($i = 0; $i < $block_count; $i++) {
+		$bcachetime = intval($block_arr[$i]->getVar('bcachetime'));
+		if (empty($bcachetime)) {
+			$xoopsTpl->xoops_setCaching(0);
+		} else {
+			$xoopsTpl->xoops_setCaching(2);
+			$xoopsTpl->xoops_setCacheTime($bcachetime);
+		}
+		$btpl = $block_arr[$i]->getVar('template');
+		if ($btpl != '') {
+			if (empty($bcachetime) || !$xoopsTpl->is_cached('db:'.$btpl)) {
+				$xoopsLogger->addBlock($block_arr[$i]->getVar('name'));
+				$bresult =& $block_arr[$i]->buildBlock();
+				if (!$bresult) {
+					continue;
+				}
+				$xoopsTpl->assign_by_ref('block', $bresult);
+				$bcontent =& $xoopsTpl->fetch('db:'.$btpl);
+				$xoopsTpl->clear_assign('block');
+			} else {
+				$xoopsLogger->addBlock($block_arr[$i]->getVar('name'), true, $bcachetime);
+				$bcontent =& $xoopsTpl->fetch('db:'.$btpl);
+			}
+		} else {
+			$bid = $block_arr[$i]->getVar('bid');
+			if (empty($bcachetime) || !$xoopsTpl->is_cached('db:system_dummy.html', 'blk_'.$bid)) {
+				$xoopsLogger->addBlock($block_arr[$i]->getVar('name'));
+				$bresult =& $block_arr[$i]->buildBlock();
+				if (!$bresult) {
+					continue;
+				}
+				$xoopsTpl->assign_by_ref('dummy_content', $bresult['content']);
+				$bcontent =& $xoopsTpl->fetch('db:system_dummy.html', 'blk_'.$bid);
+				$xoopsTpl->clear_assign('block');
+			} else {
+				$xoopsLogger->addBlock($block_arr[$i]->getVar('name'), true, $bcachetime);
+				$bcontent =& $xoopsTpl->fetch('db:system_dummy.html', 'blk_'.$bid);
+			}
+		}
+		switch ($block_arr[$i]->getVar('side')) {
+		case XOOPS_SIDEBLOCK_LEFT:
+			themesidebox($block_arr[$i]->getVar('title'), $bcontent);
+			break;
+		case XOOPS_SIDEBLOCK_RIGHT:
+			if (function_exists("themesidebox_right")) {
+				themesidebox_right($block_arr[$i]->getVar('title'), $bcontent);
+			} else {
+				themesidebox($block_arr[$i]->getVar('title'), $bcontent);
+			}
+			break;
+		}
+		unset($bcontent);
+	}
+}
+
+/*
+ * Function to display center block
+ */
+function make_cblock()
+{
+	global $xoopsUser, $xoopsOption;
+	$xoopsblock = new XoopsBlock();
+	$cc_block = $cl_block = $cr_block = "";
+	$arr = array();
+	if ($xoopsOption['theme_use_smarty'] == 0) {
+		if (!isset($GLOBALS['xoopsTpl']) || !is_object($GLOBALS['xoopsTpl'])) {
+			include_once XOOPS_ROOT_PATH.'/class/template.php';
+			$xoopsTpl = new XoopsTpl();
+		} else {
+			$xoopsTpl =& $GLOBALS['xoopsTpl'];
+		}
+		if (is_object($xoopsUser)) {
+			$block_arr =& $xoopsblock->getAllBlocksByGroup($xoopsUser->getGroups(), true, XOOPS_CENTERBLOCK_ALL, XOOPS_BLOCK_VISIBLE);
+		} else {
+			$block_arr =& $xoopsblock->getAllBlocksByGroup(XOOPS_GROUP_ANONYMOUS, true, XOOPS_CENTERBLOCK_ALL, XOOPS_BLOCK_VISIBLE);
+		}
+		$block_count = count($block_arr);
+		$xoopsLogger =& XoopsLogger::instance();
+		for ($i = 0; $i < $block_count; $i++) {
+			$bcachetime = intval($block_arr[$i]->getVar('bcachetime'));
+			if (empty($bcachetime)) {
+				$xoopsTpl->xoops_setCaching(0);
+			} else {
+				$xoopsTpl->xoops_setCaching(2);
+				$xoopsTpl->xoops_setCacheTime($bcachetime);
+			}
+			$btpl = $block_arr[$i]->getVar('template');
+			if ($btpl != '') {
+				if (empty($bcachetime) || !$xoopsTpl->is_cached('db:'.$btpl)) {
+					$xoopsLogger->addBlock($block_arr[$i]->getVar('name'));
+					$bresult =& $block_arr[$i]->buildBlock();
+					if (!$bresult) {
+						continue;
+					}
+					$xoopsTpl->assign_by_ref('block', $bresult);
+					$bcontent =& $xoopsTpl->fetch('db:'.$btpl);
+					$xoopsTpl->clear_assign('block');
+				} else {
+					$xoopsLogger->addBlock($block_arr[$i]->getVar('name'), true, $bcachetime);
+					$bcontent =& $xoopsTpl->fetch('db:'.$btpl);
+				}
+			} else {
+				$bid = $block_arr[$i]->getVar('bid');
+				if (empty($bcachetime) || !$xoopsTpl->is_cached('db:system_dummy.html', 'blk_'.$bid)) {
+					$xoopsLogger->addBlock($block_arr[$i]->getVar('name'));
+					$bresult =& $block_arr[$i]->buildBlock();
+					if (!$bresult) {
+						continue;
+					}
+					$xoopsTpl->assign_by_ref('dummy_content', $bresult['content']);
+					$bcontent =& $xoopsTpl->fetch('db:system_dummy.html', 'blk_'.$bid);
+					$xoopsTpl->clear_assign('block');
+				} else {
+					$xoopsLogger->addBlock($block_arr[$i]->getVar('name'), true, $bcachetime);
+					$bcontent =& $xoopsTpl->fetch('db:system_dummy.html', 'blk_'.$bid);
+				}
+			}
+			$title = $block_arr[$i]->getVar('title');
+			switch ($block_arr[$i]->getVar('side')) {
+			case XOOPS_CENTERBLOCK_CENTER:
+				if ($title != "") {
+					$cc_block .= '<tr valign="top"><td colspan="2"><b>'.$title.'</b><hr />'.$bcontent.'<br /><br /></td></tr>'."\n";
+				} else {
+					$cc_block .= '<tr><td colspan="2">'.$bcontent.'<br /><br /></td></tr>'."\n";
+				}
+				break;
+			case XOOPS_CENTERBLOCK_LEFT:
+				if ($title != "") {
+					$cl_block .= '<p><b>'.$title.'</b><hr />'.$bcontent.'</p>'."\n";
+				} else {
+					$cl_block .= '<p>'.$bcontent.'</p>'."\n";
+				}
+				break;
+			case XOOPS_CENTERBLOCK_RIGHT:
+				if ($title != "") {
+					$cr_block .= '<p><b>'.$title.'</b><hr />'.$bcontent.'</p>'."\n";
+				} else {
+					$cr_block .= '<p>'.$bcontent.'</p>'."\n";
+				}
+				break;
+			default:
+				break;
+			}
+			unset($bcontent, $title);
+		}
+		echo '<table width="100%">'.$cc_block.'<tr valign="top"><td width="50%">'.$cl_block.'</td><td width="50%">'.$cr_block.'</td></tr></table>'."\n";
+	}
+}
+
+function openThread($width="100%")
+{
+	echo "<table border='0' cellpadding='0' cellspacing='0' align='center' width='$width'><tr><td class='bg2'><table border='0' cellpadding='4' cellspacing='1' width='100%'><tr class='bg3' align='left'><td class='bg3' width='20%'>". _CM_POSTER ."</td><td class='bg3'>". _CM_THREAD ."</td></tr>";
+}
+
+function showThread($color_number, $subject_image, $subject, $text, $post_date, $ip_image, $reply_image, $edit_image, $delete_image, $username="", $rank_title="", $rank_image="", $avatar_image="", $reg_date="", $posts="", $user_from="", $online_image="", $profile_image="", $pm_image="", $email_image="", $www_image="", $icq_image="", $aim_image="", $yim_image="", $msnm_image="")
+{
+	if ( $color_number == 1 ) {
+		$bg = 'bg1';
+	} else {
+		$bg = 'bg3';
+	}
+	echo "<tr align='left'><td valign='top' class='$bg' nowrap='nowrap'><b>$username</b><br />$rank_title<br />$rank_image<br />$avatar_image<br /><br />$reg_date<br />$posts<br />$user_from<br /><br />$online_image</td>";
+	echo "<td valign='top' class='$bg'><table width='100%' border='0'><tr><td valign='top'>$subject_image&nbsp;<b>$subject</b></td><td align='right'>".$ip_image."".$reply_image."".$edit_image."".$delete_image."</td></tr>";
+	echo "<tr><td colspan='2'><p>$text</p></td></tr></table></td></tr>";
+	echo "<tr align='left'><td class='$bg' valign='middle'>$post_date</td><td class='$bg' valign='middle'>".$profile_image."".$pm_image."".$email_image."".$www_image."".$icq_image."".$aim_image."".$yim_image."".$msnm_image."</td></tr>";
+}
+
+function closeThread()
+{
+	echo '</table></td></tr></table>';
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/old_functions.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/old_theme_functions.php
===================================================================
--- XoopsCore/trunk/htdocs/include/old_theme_functions.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/old_theme_functions.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,56 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+// These are needed when viewing old modules (that don't use Smarty template files) when a theme that use Smarty templates are selected.
+
+// function_exists check is needed for inclusion from the admin side
+
+if (!function_exists('opentable')) {
+	function OpenTable($width='100%')
+	{
+		echo '<table width="'.$width.'" cellspacing="0" class="outer"><tr><td class="even">';
+	}
+}
+
+if (!function_exists('closetable')) {
+	function CloseTable()
+	{
+		echo '</td></tr></table>';
+	}
+}
+
+if (!function_exists('themecenterposts')) {
+	function themecenterposts($title, $content)
+	{
+		echo '<table cellpadding="4" cellspacing="1" width="98%" class="outer"><tr><td class="head">'.$title.'</td></tr><tr><td><br />'.$content.'<br /></td></tr></table>';
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/old_theme_functions.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/registerform.php
===================================================================
--- XoopsCore/trunk/htdocs/include/registerform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/registerform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,93 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+if (!defined("XOOPS_ROOT_PATH")) {
+    die("XOOPS root path not defined");
+}
+include_once XOOPS_ROOT_PATH."/class/xoopslists.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsformloader.php";
+
+
+$email_tray = new XoopsFormElementTray(_US_EMAIL, "<br />");
+$email_text = new XoopsFormText("", "email", 25, 60, $myts->htmlSpecialChars($email));
+$email_option = new XoopsFormCheckBox("", "user_viewemail", $user_viewemail);
+$email_option->addOption(1, _US_ALLOWVIEWEMAIL);
+$email_tray->addElement($email_text);
+$email_tray->addElement($email_option);
+
+//$avatar_select = new XoopsFormSelect("", "user_avatar", $user_avatar);
+//$avatar_array =& XoopsLists::getImgListAsArray(XOOPS_ROOT_PATH."/images/avatar/");
+//$avatar_select->addOptionArray($avatar_array);
+//$a_dirlist =& XoopsLists::getDirListAsArray(XOOPS_ROOT_PATH."/images/avatar/");
+//$a_dir_labels = array();
+//$a_count = 0;
+//$a_dir_link = "<a href=\"javascript:openWithSelfMain('".XOOPS_URL."/misc.php?action=showpopups&amp;type=avatars&amp;start=".$a_count."','avatars',600,400);\">XOOPS</a>";
+//$a_count = $a_count + count($avatar_array);
+//$a_dir_labels[] = new XoopsFormLabel("", $a_dir_link);
+//foreach ($a_dirlist as $a_dir) {
+//	if ( $a_dir == "users" ) {
+//		continue;
+//	}
+//	$avatars_array =& XoopsLists::getImgListAsArray(XOOPS_ROOT_PATH."/images/avatar/".$a_dir."/", $a_dir."/");
+//	$avatar_select->addOptionArray($avatars_array);
+//	$a_dir_link = "<a href=\"javascript:openWithSelfMain('".XOOPS_URL."/misc.php?action=showpopups&amp;type=avatars&amp;subdir=".$a_dir."&amp;start=".$a_count."','avatars',600,400);\">".$a_dir."</a>";
+//	$a_dir_labels[] = new XoopsFormLabel("", $a_dir_link);
+//	$a_count = $a_count + count($avatars_array);
+//}
+//$avatar_select->setExtra("onchange='showImgSelected(\"avatar\", \"user_avatar\", \"images/avatar\", \"\", \"".XOOPS_URL."\")'");
+//$avatar_label = new XoopsFormLabel("", "<img src='images/avatar/blank.gif' name='avatar' id='avatar' alt='' />");
+//$avatar_tray = new XoopsFormElementTray(_US_AVATAR, "&nbsp;");
+//$avatar_tray->addElement($avatar_select);
+//$avatar_tray->addElement($avatar_label);
+//foreach ($a_dir_labels as $a_dir_label) {
+//	$avatar_tray->addElement($a_dir_label);
+//}
+
+$reg_form = new XoopsThemeForm(_US_USERREG, "userinfo", "register.php", "post", true);
+$uname_size = $xoopsConfigUser['maxuname'] < 25 ? $xoopsConfigUser['maxuname'] : 25;
+$reg_form->addElement(new XoopsFormText(_US_NICKNAME, "uname", $uname_size, $uname_size, $myts->htmlSpecialChars($uname)), true);
+$reg_form->addElement($email_tray);
+$reg_form->addElement(new XoopsFormText(_US_WEBSITE, "url", 25, 255, $myts->htmlSpecialChars($url)));
+$tzselected = ($timezone_offset != "") ? $timezone_offset : $xoopsConfig['default_TZ'];
+$reg_form->addElement(new XoopsFormSelectTimezone(_US_TIMEZONE, "timezone_offset", $tzselected));
+//$reg_form->addElement($avatar_tray);
+$reg_form->addElement(new XoopsFormPassword(_US_PASSWORD, "pass", 10, 32, $myts->htmlSpecialChars($pass)), true);
+$reg_form->addElement(new XoopsFormPassword(_US_VERIFYPASS, "vpass", 10, 32, $myts->htmlSpecialChars($vpass)), true);
+$reg_form->addElement(new XoopsFormRadioYN(_US_MAILOK, 'user_mailok', $user_mailok));
+if ($xoopsConfigUser['reg_dispdsclmr'] != 0 && $xoopsConfigUser['reg_disclaimer'] != '') {
+	$disc_tray = new XoopsFormElementTray(_US_DISCLAIMER, '<br />');
+	$disc_text = new XoopsFormTextarea('', 'disclaimer', $xoopsConfigUser['reg_disclaimer'], 8);
+	$disc_text->setExtra('readonly="readonly"');
+	$disc_tray->addElement($disc_text);
+	$agree_chk = new XoopsFormCheckBox('', 'agree_disc', $agree_disc);
+	$agree_chk->addOption(1, _US_IAGREE);
+	$disc_tray->addElement($agree_chk);
+	$reg_form->addElement($disc_tray);
+}
+$reg_form->addElement(new XoopsFormHidden("op", "newuser"));
+$reg_form->addElement(new XoopsFormButton("", "submit", _US_SUBMIT, "submit"));
+$reg_form->setRequired($email_text);
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/registerform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/searchform.php
===================================================================
--- XoopsCore/trunk/htdocs/include/searchform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/searchform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,68 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+if (!defined("XOOPS_ROOT_PATH")) {
+    die("XOOPS root path not defined");
+}
+include_once XOOPS_ROOT_PATH."/class/xoopsformloader.php";
+
+// create form
+$search_form = new XoopsThemeForm(_SR_SEARCH, "search", "search.php", 'get');
+
+// create form elements
+$search_form->addElement(new XoopsFormText(_SR_KEYWORDS, "query", 30, 255, htmlspecialchars(stripslashes(implode(" ", $queries)), ENT_QUOTES)), true);
+$type_select = new XoopsFormSelect(_SR_TYPE, "andor", $andor);
+$type_select->addOptionArray(array("AND"=>_SR_ALL, "OR"=>_SR_ANY, "exact"=>_SR_EXACT));
+$search_form->addElement($type_select);
+if (!empty($mids)) {
+	$mods_checkbox = new XoopsFormCheckBox(_SR_SEARCHIN, "mids[]", $mids);
+} else {
+	$mods_checkbox = new XoopsFormCheckBox(_SR_SEARCHIN, "mids[]", $mid);
+}
+if (empty($modules)) {
+    $criteria = new CriteriaCompo();
+    $criteria->add(new Criteria('hassearch', 1));
+    $criteria->add(new Criteria('isactive', 1));
+    if (!empty($available_modules)) {
+        $criteria->add(new Criteria('mid', "(".implode(',', $available_modules).")", 'IN'));
+    }
+    $module_handler =& xoops_gethandler('module');
+    $mods_checkbox->addOptionArray($module_handler->getList($criteria));
+}
+else {
+    foreach ($modules as $mid => $module) {
+        $module_array[$mid] = $module->getVar('name');
+    }
+    $mods_checkbox->addOptionArray($module_array);
+}
+$search_form->addElement($mods_checkbox);
+if ($xoopsConfigSearch['keyword_min'] > 0) {
+	$search_form->addElement(new XoopsFormLabel(_SR_SEARCHRULE, sprintf(_SR_KEYIGNORE, $xoopsConfigSearch['keyword_min'])));
+}
+$search_form->addElement(new XoopsFormHidden("action", "results"));
+$search_form->addElement(new XoopsFormHiddenToken('id'));
+$search_form->addElement(new XoopsFormButton("", "submit", _SR_SEARCH, "submit"));
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/searchform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/version.php
===================================================================
--- XoopsCore/trunk/htdocs/include/version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,4 @@
+<?php
+// $Id$
+define("XOOPS_VERSION","XOOPS 2.0.13.2");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/include/xoopscodes.php
===================================================================
--- XoopsCore/trunk/htdocs/include/xoopscodes.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/include/xoopscodes.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,107 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+/*
+*  displayes xoopsCode buttons and target textarea to which xoopscodes are inserted
+*  $textarea_id is a unique id of the target textarea
+*/
+function xoopsCodeTarea($textarea_id, $cols=60, $rows=15, $suffix=null)
+{
+	$hiddentext = isset($suffix) ? 'xoopsHiddenText'.trim($suffix) : 'xoopsHiddenText';
+	//Hack for url, email ...., the anchor is for having a link on [_More...]
+	echo "<a name='moresmiley'></a><img src='".XOOPS_URL."/images/url.gif' alt='url' onmouseover='style.cursor=\"hand\"' onclick='xoopsCodeUrl(\"$textarea_id\", \"".htmlspecialchars(_ENTERURL, ENT_QUOTES)."\", \"".htmlspecialchars(_ENTERWEBTITLE, ENT_QUOTES)."\");'/>&nbsp;<img src='".XOOPS_URL."/images/email.gif' alt='email' onmouseover='style.cursor=\"hand\"' onclick='xoopsCodeEmail(\"$textarea_id\", \"".htmlspecialchars(_ENTEREMAIL, ENT_QUOTES)."\");' />&nbsp;<img src='".XOOPS_URL."/images/imgsrc.gif' alt='imgsrc' onmouseover='style.cursor=\"hand\"' onclick='xoopsCodeImg(\"$textarea_id\", \"".htmlspecialchars(_ENTERIMGURL, ENT_QUOTES)."\", \"".htmlspecialchars(_ENTERIMGPOS, ENT_QUOTES)."\", \"".htmlspecialchars(_IMGPOSRORL, ENT_QUOTES)."\", \"".htmlspecialchars(_ERRORIMGPOS, ENT_QUOTES)."\");' />&nbsp;<img src='".XOOPS_URL."/images/image.gif' alt='image' onmouseover='style.cursor=\"hand\"' onclick='openWithSelfMain(\"".XOOPS_URL."/imagemanager.php?target=".$textarea_id."\",\!
 "imgmanager\",400,430);' />&nbsp;<img src='".XOOPS_URL."/images/code.gif' alt='code' onmouseover='style.cursor=\"hand\"' onclick='xoopsCodeCode(\"$textarea_id\", \"".htmlspecialchars(_ENTERCODE, ENT_QUOTES)."\");' />&nbsp;<img src='".XOOPS_URL."/images/quote.gif' alt='quote' onmouseover='style.cursor=\"hand\"' onclick='xoopsCodeQuote(\"$textarea_id\");'/><br />\n";
+
+	$sizearray = array("xx-small", "x-small", "small", "medium", "large", "x-large", "xx-large");
+	echo "<select id='".$textarea_id."Size' onchange='setVisible(\"xoopsHiddenText\");setElementSize(\"".$hiddentext."\",this.options[this.selectedIndex].value);'>\n";
+	echo "<option value='SIZE'>"._SIZE."</option>\n";
+	foreach ( $sizearray as $size ) {
+		echo "<option value='$size'>$size</option>\n";
+	}
+	echo "</select>\n";
+
+	$fontarray = array("Arial", "Courier", "Georgia", "Helvetica", "Impact", "Verdana");
+	echo "<select id='".$textarea_id."Font' onchange='setVisible(\"xoopsHiddenText\");setElementFont(\"".$hiddentext."\",this.options[this.selectedIndex].value);'>\n";
+	echo "<option value='FONT'>"._FONT."</option>\n";
+	foreach ( $fontarray as $font ) {
+		echo "<option value='$font'>$font</option>\n";
+	}
+	echo "</select>\n";
+
+	$colorarray = array("00", "33", "66", "99", "CC", "FF");
+	echo "<select id='".$textarea_id."Color' onchange='setVisible(\"xoopsHiddenText\");setElementColor(\"".$hiddentext."\",this.options[this.selectedIndex].value);'>\n";
+	echo "<option value='COLOR'>"._COLOR."</option>\n";
+	foreach ( $colorarray as $color1 ) {
+		foreach ( $colorarray as $color2 ) {
+			foreach ( $colorarray as $color3 ) {
+				echo "<option value='".$color1.$color2.$color3."' style='background-color:#".$color1.$color2.$color3.";color:#".$color1.$color2.$color3.";'>#".$color1.$color2.$color3."</option>\n";
+			}
+		}
+	}
+	echo "</select><span id='".$hiddentext."'>"._EXAMPLE."</span>\n";
+
+	echo "<br />\n";
+	//Hack smilies move for bold, italic ...
+    $areacontent = isset( $GLOBALS[$textarea_id] ) ? $GLOBALS[$textarea_id] : '';
+    echo "<img src='".XOOPS_URL."/images/bold.gif' alt='bold' onmouseover='style.cursor=\"hand\"' onclick='setVisible(\"".$hiddentext."\");makeBold(\"".$hiddentext."\");' />&nbsp;<img src='".XOOPS_URL."/images/italic.gif' alt='italic' onmouseover='style.cursor=\"hand\"' onclick='setVisible(\"".$hiddentext."\");makeItalic(\"".$hiddentext."\");' />&nbsp;<img src='".XOOPS_URL."/images/underline.gif' alt='underline' onmouseover='style.cursor=\"hand\"' onclick='setVisible(\"".$hiddentext."\");makeUnderline(\"".$hiddentext."\");'/>&nbsp;<img src='".XOOPS_URL."/images/linethrough.gif' alt='linethrough' onmouseover='style.cursor=\"hand\"' onclick='setVisible(\"".$hiddentext."\");makeLineThrough(\"".$hiddentext."\");' /></a>&nbsp;<input type='text' id='".$textarea_id."Addtext' size='20' />&nbsp;<input type='button' onclick='xoopsCodeText(\"$textarea_id\", \"".$hiddentext."\", \"".htmlspecialchars(_ENTERTEXTBOX, ENT_QUOTES)."\")' value='"._ADD."' /><br /><br /><textarea id='".$textar!
 ea_id."' name='".$textarea_id."' cols='$cols' rows='$rows'>".$areacontent."</textarea><br />\n";
+	//Fin du hack
+}
+
+/*
+*  Displays smilie image buttons used to insert smilie codes to a target textarea in a form
+* $textarea_id is a unique of the target textarea
+*/
+function xoopsSmilies($textarea_id)
+{
+	$myts =& MyTextSanitizer::getInstance();
+	$smiles =& $myts->getSmileys();
+	if (empty($smileys)) {
+		$db =& Database::getInstance();
+		if ($result = $db->query('SELECT * FROM '.$db->prefix('smiles').' WHERE display=1')) {
+			while ($smiles = $db->fetchArray($result)) {
+			//hack smilies move for the smilies !!
+				echo "<img src='".XOOPS_UPLOAD_URL."/".htmlspecialchars($smiles['smile_url'])."' border='0' onmouseover='style.cursor=\"hand\"' alt='' onclick='xoopsCodeSmilie(\"".$textarea_id."\", \" ".$smiles['code']." \");' />";
+			//fin du hack
+			}
+		}
+	} else {
+		$count = count($smiles);
+		for ($i = 0; $i < $count; $i++) {
+			if ($smiles[$i]['display'] == 1) {
+			//hack bis
+				echo "<img src='".XOOPS_UPLOAD_URL."/".$myts->oopsHtmlSpecialChars($smiles['smile_url'])."' border='0' alt='' onclick='xoopsCodeSmilie(\"".$textarea_id."\", \" ".$smiles[$i]['code']." \");' onmouseover='style.cursor=\"hand\"' />";
+			//fin du hack
+			}
+		}
+	}
+	//hack for more
+	echo "&nbsp;[<a href='#moresmiley' onmouseover='style.cursor=\"hand\"' alt='' onclick='openWithSelfMain(\"".XOOPS_URL."/misc.php?action=showpopups&amp;type=smilies&amp;target=".$textarea_id."\",\"smilies\",300,475);'>"._MORE."</a>]";
+}  //fin du hack
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/include/xoopscodes.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/index.php
===================================================================
--- XoopsCore/trunk/htdocs/index.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/index.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,46 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+/**
+ * Catch new users and redirect them to the start page, if any
+ * @copyright &copy; 2000 xoops.org
+ **/
+ 
+/**
+ * redirects to installation, if xoops is not installed yet
+ **/
+include "mainfile.php";
+
+//check if start page is defined
+if ( isset($xoopsConfig['startpage']) && $xoopsConfig['startpage'] != "" && $xoopsConfig['startpage'] != "--" ) {
+	header('Location: '.XOOPS_URL.'/modules/'.$xoopsConfig['startpage'].'/');
+	exit();
+} else {
+	$xoopsOption['show_cblock'] =1;
+	include "header.php";
+	include "footer.php";
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/index.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/class/cachemanager.php
===================================================================
--- XoopsCore/trunk/htdocs/install/class/cachemanager.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/class/cachemanager.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,64 @@
+<?php
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+/**
+* cache_manager for XOOPS installer
+*
+* @author Haruki Setoyama  <haruki at planewave.org>
+* @version $Id$
+* @access public
+**/
+class cache_manager {
+
+    var $s_files = array();
+    var $f_files = array();
+
+    function write($file, $source){
+        if (false != $fp = fopen(XOOPS_CACHE_PATH.'/'.$file, 'w')) {
+            fwrite($fp, $source);
+            fclose($fp);
+            $this->s_files[] = $file;
+        }else{
+            $this->f_files[] = $file;
+        }
+    }
+
+    function report(){
+        $content = "<table align='center'><tr><td align='left'>\n";
+        foreach($this->s_files as $val){
+            $content .= _OKIMG.sprintf(_INSTALL_L123, "<b>$val</b>")."<br />\n";
+        }
+        foreach($this->f_files as $val){
+            $content .= _NGIMG.sprintf(_INSTALL_L124, "<b>$val</b>")."<br />\n";
+        }
+        $content .= "</td></tr></table>\n";
+        return $content;
+    }
+
+}
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/class/cachemanager.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/class/dbmanager.php
===================================================================
--- XoopsCore/trunk/htdocs/install/class/dbmanager.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/class/dbmanager.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,244 @@
+<?php
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+include_once XOOPS_ROOT_PATH.'/class/logger.php';
+include_once XOOPS_ROOT_PATH.'/class/database/databasefactory.php';
+include_once XOOPS_ROOT_PATH.'/class/database/'.XOOPS_DB_TYPE.'database.php';
+include_once XOOPS_ROOT_PATH.'/class/database/sqlutility.php';
+
+/**
+* database manager for XOOPS installer
+*
+* @author Haruki Setoyama  <haruki at planewave.org>
+* @version $Id$
+* @access public
+**/
+class db_manager {
+
+    var $s_tables = array();
+    var $f_tables = array();
+	var $db;
+
+    function db_manager(){
+        $this->db = XoopsDatabaseFactory::getDatabase();
+        $this->db->setPrefix(XOOPS_DB_PREFIX);
+        $this->db->setLogger(XoopsLogger::instance());
+    }
+
+    function isConnectable(){
+        return ($this->db->connect(false) != false) ? true : false;
+    }
+    
+    function dbExists(){
+        return ($this->db->connect() != false) ? true : false;
+    }
+    
+    function createDB()
+    {
+        $this->db->connect(false);
+    
+        $result = $this->db->query("CREATE DATABASE ".XOOPS_DB_NAME);
+    
+        return ($result != false) ? true : false;
+    }
+
+    function queryFromFile($sql_file_path){
+        $tables = array();
+
+        if (!file_exists($sql_file_path)) {
+            return false;
+        }
+        $sql_query = trim(fread(fopen($sql_file_path, 'r'), filesize($sql_file_path)));
+        SqlUtility::splitMySqlFile($pieces, $sql_query);
+        $this->db->connect();
+        foreach ($pieces as $piece) {
+            $piece = trim($piece);
+            // [0] contains the prefixed query
+            // [4] contains unprefixed table name
+            $prefixed_query = SqlUtility::prefixQuery($piece, $this->db->prefix());
+            if ($prefixed_query != false ) {
+                $table = $this->db->prefix($prefixed_query[4]);
+                if($prefixed_query[1] == 'CREATE TABLE'){
+                    if ($this->db->query($prefixed_query[0]) != false) {
+                        if(! isset($this->s_tables['create'][$table])){
+                            $this->s_tables['create'][$table] = 1;
+                        }
+                    }else{
+                        if(! isset($this->f_tables['create'][$table])){
+                            $this->f_tables['create'][$table] = 1;
+                        }
+                    }
+                }
+                elseif($prefixed_query[1] == 'INSERT INTO'){
+                    if ($this->db->query($prefixed_query[0]) != false) {
+                        if(! isset($this->s_tables['insert'][$table])){
+                            $this->s_tables['insert'][$table] = 1;
+                        }else{
+                            $this->s_tables['insert'][$table]++;
+                        }
+                    }else{
+                        if(! isset($this->f_tables['insert'][$table])){
+                            $this->f_tables['insert'][$table] = 1;
+                        }else{
+                             $this->f_tables['insert'][$table]++;
+                        }
+                    }
+                }elseif($prefixed_query[1] == 'ALTER TABLE'){
+                    if ($this->db->query($prefixed_query[0]) != false) {
+                        if(! isset($this->s_tables['alter'][$table])){
+                            $this->s_tables['alter'][$table] = 1;
+                        }
+                    }else{
+                        if(! isset($this->s_tables['alter'][$table])){
+                            $this->f_tables['alter'][$table] = 1;
+                        }
+                    }
+                }elseif($prefixed_query[1] == 'DROP TABLE'){
+                    if ($this->db->query('DROP TABLE '.$table) != false) {
+                        if(! isset($this->s_tables['drop'][$table])){
+                            $this->s_tables['drop'][$table] = 1;
+                        }
+                    }else{
+                        if(! isset($this->s_tables['drop'][$table])){
+                            $this->f_tables['drop'][$table] = 1;
+                        }
+                    }
+                }
+            }
+        }
+        return true;
+    }
+
+    function report(){
+        $content = "<table align='center'><tr><td align='left'>\n";
+        if (isset($this->s_tables['create'])) {
+            foreach($this->s_tables['create'] as $key => $val){
+                $content .= _OKIMG.sprintf(_INSTALL_L45, "<b>$key</b>")."<br />\n";
+            }
+        }
+        if (isset($this->s_tables['insert'])) {
+            foreach($this->s_tables['insert'] as $key => $val){
+                $content .= _OKIMG.sprintf(_INSTALL_L119, $val, "<b>$key</b>")."<br />\n";
+            }
+        }
+		if (isset($this->s_tables['alter'])) {
+            foreach($this->s_tables['alter'] as $key => $val){
+                $content .= _OKIMG.sprintf(_INSTALL_L133, "<b>$key</b>")."<br />\n";
+            }
+        }
+		if (isset($this->s_tables['drop'])) {
+            foreach($this->s_tables['drop'] as $key => $val){
+                $content .= _OKIMG.sprintf(_INSTALL_L163, "<b>$key</b>")."<br />\n";
+            }
+        }
+        $content .= "<br />\n";
+        if (isset($this->f_tables['create'])) {
+            foreach($this->f_tables['create'] as $key => $val){
+                $content .= _NGIMG.sprintf(_INSTALL_L118, "<b>$key</b>")."<br />\n";
+            }
+        }
+        if (isset($this->f_tables['insert'])) {
+            foreach($this->f_tables['insert'] as $key => $val){
+                $content .= _NGIMG.sprintf(_INSTALL_L120, $val, "<b>$key</b>")."<br />\n";
+            }
+        }
+		if (isset($this->f_tables['alter'])) {
+            foreach($this->f_tables['alter'] as $key => $val){
+                $content .= _NGIMG.sprintf(_INSTALL_L134, "<b>$key</b>")."<br />\n";
+            }
+        }
+		if (isset($this->f_tables['drop'])) {
+            foreach($this->f_tables['drop'] as $key => $val){
+                $content .= _NGIMG.sprintf(_INSTALL_L164, "<b>$key</b>")."<br />\n";
+            }
+        }
+        $content .= "</td></tr></table>\n";
+        return $content;
+    }
+
+    function query($sql){
+        $this->db->connect();
+        return $this->db->query($sql);
+    }
+
+    function prefix($table){
+        $this->db->connect();
+        return $this->db->prefix($table);
+    }
+
+    function fetchArray($ret){
+        $this->db->connect();
+        return $this->db->fetchArray($ret);
+    }
+
+    function insert($table, $query){
+        $this->db->connect();
+        $table = $this->db->prefix($table);
+        $query = 'INSERT INTO '.$table.' '.$query;
+        if(!$this->db->queryF($query)){
+            if(!isset($this->f_tables['insert'][$table])){
+                $this->f_tables['insert'][$table] = 1;
+            }else{
+                $this->f_tables['insert'][$table]++;
+            }
+            return false;
+        }else{
+            if(!isset($this->s_tables['insert'][$table])){
+                $this->s_tables['insert'][$table] = 1;
+            }else{
+                $this->s_tables['insert'][$table]++;
+            }
+            return $this->db->getInsertId();
+        }
+    }
+
+    function isError(){
+        return (isset($this->f_tables)) ? true : false;
+    }
+
+    function deleteTables($tables){
+        $deleted = array();
+        $this->db->connect();
+        foreach ($tables as $key => $val) {
+            if(! $this->db->query("DROP TABLE ".$this->db->prefix($key))){
+                $deleted[] = $ct;
+            }
+        }
+        return $deleted;
+    }
+
+	function tableExists($table){
+		$table = trim($table);
+		$ret = false;
+		if ($table != '') {
+            $this->db->connect();
+			$sql = 'SELECT * FROM '.$this->db->prefix($table);
+			$ret = (false != $this->db->query($sql)) ? true : false;
+		}
+		return $ret;
+	}
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/class/dbmanager.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/class/mainfilemanager.php
===================================================================
--- XoopsCore/trunk/htdocs/install/class/mainfilemanager.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/class/mainfilemanager.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,118 @@
+<?php
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+/**
+* mainfile manager for XOOPS installer
+*
+* @author Haruki Setoyama  <haruki at planewave.org>
+* @version $Id$
+* @access public
+**/
+class mainfile_manager {
+
+    var $path = '../mainfile.php';
+    var $distfile = '../mainfile.dist.php';
+    var $rewrite = array();
+
+    var $report = '';
+    var $error = false;
+
+    function mainfile_manager(){
+        //
+    }
+
+    function setRewrite($def, $val){
+        $this->rewrite[$def] = $val;
+    }
+
+    function copyDistFile(){
+        if ( ! copy($this->distfile, $this->path) ) {
+            $this->report .= _NGIMG.sprintf(_INSTALL_L126, "<b>".$this->path."</b>")."<br />\n";
+            $this->error = true;
+            return false;
+        }
+        $this->report .= _OKIMG.sprintf(_INSTALL_L125, "<b>".$this->path."</b>", "<b>".$this->distfile."</b>")."<br />\n";
+        return true;
+    }
+
+    function doRewrite(){
+        if ( ! $file = fopen($this->path,"r") ) {
+            $this->error = true;
+            return false;
+        }
+        $content = fread($file, filesize($this->path) );
+        fclose($file);
+
+        foreach($this->rewrite as $key => $val){
+            if(is_int($val) &&
+             preg_match("/(define\()([\"'])(".$key.")\\2,\s*([0-9]+)\s*\)/",$content)){
+
+                $content = preg_replace("/(define\()([\"'])(".$key.")\\2,\s*([0-9]+)\s*\)/"
+                , "define('".$key."', ".$val.")"
+                , $content);
+                $this->report .= _OKIMG.sprintf(_INSTALL_L121, "<b>$key</b>", $val)."<br />\n";
+            }
+            elseif(preg_match("/(define\()([\"'])(".$key.")\\2,\s*([\"'])(.*?)\\4\s*\)/",$content)){
+                $content = preg_replace("/(define\()([\"'])(".$key.")\\2,\s*([\"'])(.*?)\\4\s*\)/"
+                , "define('".$key."', '".addslashes($val)."')"
+                , $content);
+                $this->report .= _OKIMG.sprintf(_INSTALL_L121, "<b>$key</b>", $val)."<br />\n";
+
+            }else{
+                $this->error = true;
+                $this->report .= _NGIMG.sprintf(_INSTALL_L122, "<b>$val</b>")."<br />\n";
+            }
+        }
+
+        if ( !$file = fopen($this->path,"w") ) {
+            $this->error = true;
+            return false;
+        }
+
+        if ( fwrite($file,$content) == -1 ) {
+            fclose($file);
+            $this->error = true;
+            return false;
+        }
+
+        fclose($file);
+
+        return true;
+    }
+
+    function report(){
+        $content = "<table align='center'><tr><td align='left'>\n";
+        $content .= $this->report;
+        $content .= "</td></tr></table>\n";
+        return $content;
+    }
+
+    function error(){
+        return $this->error;
+    }
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/class/mainfilemanager.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/class/settingmanager.php
===================================================================
--- XoopsCore/trunk/htdocs/install/class/settingmanager.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/class/settingmanager.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,291 @@
+<?php
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+include_once './class/textsanitizer.php';
+
+/**
+* setting manager for XOOPS installer
+*
+* @author Haruki Setoyama  <haruki at planewave.org>
+* @version $Id$
+* @access public
+**/
+class setting_manager {
+
+    var $database;
+    var $dbhost;
+    var $dbuname;
+    var $dbpass;
+    var $dbname;
+    var $prefix;
+    var $db_pconnect;
+    var $root_path;
+    var $xoops_url;
+
+    var $sanitizer;
+
+    function setting_manager($post=false){
+
+        $this->sanitizer =& TextSanitizer::getInstance();
+        if($post){
+            $this->readPost();
+        }else{
+            $this->database = 'mysql';
+            $this->dbhost = 'localhost';
+            $this->prefix = 'xoops';
+            $this->db_pconnect = 0;
+
+            $this->root_path = str_replace("\\","/",getcwd()); // "
+            $this->root_path = str_replace("/install", "", $this->root_path);
+        
+            $filepath = (! empty($_SERVER['REQUEST_URI']))
+                            ? dirname($_SERVER['REQUEST_URI'])
+                            : dirname($_SERVER['SCRIPT_NAME']);
+        
+            $filepath = str_replace("\\", "/", $filepath); // "
+            $filepath = str_replace("/install", "", $filepath);
+            if ( substr($filepath, 0, 1) == "/" ) {
+                $filepath = substr($filepath,1);
+            }
+            if ( substr($filepath, -1) == "/" ) {
+                $filepath = substr($filepath, 0, -1);
+            }
+            $protocol = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') ? 'https://' : 'http://';
+            $this->xoops_url = (!empty($filepath)) ? $protocol.$_SERVER['HTTP_HOST']."/".$filepath : $protocol.$_SERVER['HTTP_HOST'];
+        }
+    }
+
+    function readPost(){
+        if(isset($_POST['database']))
+            $this->database = $this->sanitizer->stripSlashesGPC($_POST['database']);
+        if(isset($_POST['dbhost']))
+            $this->dbhost = $this->sanitizer->stripSlashesGPC($_POST['dbhost']);
+        if(isset($_POST['dbuname']))
+            $this->dbuname = $this->sanitizer->stripSlashesGPC($_POST['dbuname']);
+        if(isset($_POST['dbpass']))
+            $this->dbpass = $this->sanitizer->stripSlashesGPC($_POST['dbpass']);
+        if(isset($_POST['dbname']))
+            $this->dbname = $this->sanitizer->stripSlashesGPC($_POST['dbname']);
+        if(isset($_POST['prefix']))
+            $this->prefix = $this->sanitizer->stripSlashesGPC($_POST['prefix']);
+        if(isset($_POST['db_pconnect']))
+            $this->db_pconnect = intval($_POST['db_pconnect']) > 0 ? 1 : 0;
+        if(isset($_POST['root_path']))
+            $this->root_path = $this->sanitizer->stripSlashesGPC($_POST['root_path']);
+        if(isset($_POST['xoops_url']))
+            $this->xoops_url = $this->sanitizer->stripSlashesGPC($_POST['xoops_url']);
+    }
+
+    function readConstant(){
+        if(defined('XOOPS_DB_TYPE'))
+            $this->database = XOOPS_DB_TYPE;
+        if(defined('XOOPS_DB_HOST'))
+            $this->dbhost = XOOPS_DB_HOST;
+        if(defined('XOOPS_DB_USER'))
+            $this->dbuname = XOOPS_DB_USER;
+        if(defined('XOOPS_DB_PASS'))
+            $this->dbpass = XOOPS_DB_PASS;
+        if(defined('XOOPS_DB_NAME'))
+            $this->dbname = XOOPS_DB_NAME;
+        if(defined('XOOPS_DB_PREFIX'))
+            $this->prefix = XOOPS_DB_PREFIX;
+        if(defined('XOOPS_DB_PCONNECT'))
+            $this->db_pconnect = intval(XOOPS_DB_PCONNECT) > 0 ? 1 : 0;
+        if(defined('XOOPS_ROOT_PATH'))
+            $this->root_path = XOOPS_ROOT_PATH;
+        if(defined('XOOPS_URL'))
+            $this->xoops_url = XOOPS_URL;
+    }
+
+    function checkData(){
+        $ret = '';
+        $error = array();
+
+        if ( empty($this->dbhost) ) {
+            $error[] = sprintf(_INSTALL_L57, _INSTALL_L27);
+        }
+        if ( empty($this->dbname) ) {
+            $error[] = sprintf(_INSTALL_L57, _INSTALL_L29);
+        }
+        if ( empty($this->prefix) ) {
+            $error[] = sprintf(_INSTALL_L57, _INSTALL_L30);
+        }
+        if ( empty($this->root_path) ) {
+            $error[] = sprintf(_INSTALL_L57, _INSTALL_L55);
+        }
+        if ( empty($this->xoops_url) ) {
+            $error[] = sprintf(_INSTALL_L57, _INSTALL_L56);
+        }
+    
+        if (!empty($error)) {
+            foreach ( $error as $err ) {
+                $ret .=  "<p><span style='color:#ff0000;'><b>".$err."</b></span></p>\n";
+            }
+        }
+
+        return $ret;
+    }
+
+    function editform(){
+        $ret =
+            "<table width='100%' class='outer' cellspacing='5'>
+                <tr>
+                    <th colspan='2'></th>
+                </tr>
+                <tr valign='top' align='left'>
+                    <td class='head'>
+                        <b>"._INSTALL_L51."</b><br />
+                        <span style='font-size:85%;'>"._INSTALL_L66."</span>
+                    </td>
+                    <td class='even'>
+                        <select  size='1' name='database' id='database'>";
+        $dblist = $this->getDBList();
+        foreach($dblist as $val){
+            $ret .= "<option value='$val'";
+            if($val == $this->database) $ret .= " selected='selected'";
+            $ret .= "'>$val</option>";
+        }
+        $ret .=         "</select>
+                    </td>
+                </tr>
+                ";
+        $ret .= $this->editform_sub(_INSTALL_L27, _INSTALL_L67, 'dbhost', $this->sanitizer->htmlSpecialChars($this->dbhost));
+        $ret .= $this->editform_sub(_INSTALL_L28, _INSTALL_L65, 'dbuname', $this->sanitizer->htmlSpecialChars($this->dbuname));
+        $ret .= $this->editform_sub(_INSTALL_L52, _INSTALL_L68, 'dbpass', $this->sanitizer->htmlSpecialChars($this->dbpass));
+        $ret .= $this->editform_sub(_INSTALL_L29, _INSTALL_L64, 'dbname', $this->sanitizer->htmlSpecialChars($this->dbname));
+        $ret .= $this->editform_sub(_INSTALL_L30, _INSTALL_L63, 'prefix', $this->sanitizer->htmlSpecialChars($this->prefix));
+
+        $ret .= "<tr valign='top' align='left'>
+                    <td class='head'>
+                        <b>"._INSTALL_L54."</b><br />
+                        <span style='font-size:85%;'>"._INSTALL_L69."</span>
+                    </td>
+                    <td class='even'>
+                        <input type='radio' name='db_pconnect' value='1'".($this->db_pconnect == 1 ? " checked='checked'" : "" )." />"._INSTALL_L23."
+                        <input type='radio' name='db_pconnect' value='0'".($this->db_pconnect != 1 ? " checked='checked'" : "" )." />"._INSTALL_L24."
+                    </td>
+                </tr>
+                ";
+
+        $ret .= $this->editform_sub(_INSTALL_L55, _INSTALL_L59, 'root_path', $this->sanitizer->htmlSpecialChars($this->root_path));
+        $ret .= $this->editform_sub(_INSTALL_L56, _INSTALL_L58, 'xoops_url', $this->sanitizer->htmlSpecialChars($this->xoops_url));
+
+        $ret .= "</table>";
+        return $ret;
+    }
+
+    function editform_sub($title, $desc, $name, $value){
+        return  "<tr valign='top' align='left'>
+                    <td class='head'>
+                        <b>".$title."</b><br />
+                        <span style='font-size:85%;'>".$desc."</span>
+                    </td>
+                    <td class='even'>
+                        <input type='text' name='".$name."' id='".$name."' size='30' maxlength='100' value='".htmlspecialchars($value)."' />
+                    </td>
+                </tr>
+                ";
+    }
+
+    function confirmForm(){
+        $yesno = empty($this->db_pconnect) ? _INSTALL_L24 : _INSTALL_L23;
+        $ret =
+            "<table border='0' cellpadding='0' cellspacing='0' valign='top' width='90%'><tr><td class='bg2'>
+                <table width='100%' border='0' cellpadding='4' cellspacing='1'>
+                    <tr>
+                        <td class='bg3'><b>"._INSTALL_L51."</b></td>
+                        <td class='bg1'>".$this->sanitizer->htmlSpecialChars($this->database)."</td>
+                    </tr>
+                    <tr>
+                        <td class='bg3'><b>"._INSTALL_L27."</b></td>
+                        <td class='bg1'>".$this->sanitizer->htmlSpecialChars($this->dbhost)."</td>
+                    </tr>
+                    <tr>
+                        <td class='bg3'><b>"._INSTALL_L28."</b></td>
+                        <td class='bg1'>".$this->sanitizer->htmlSpecialChars($this->dbuname)."</td>
+                    </tr>
+                    <tr>
+                        <td class='bg3'><b>"._INSTALL_L52."</b></td>
+                        <td class='bg1'>".$this->sanitizer->htmlSpecialChars($this->dbpass)."</td>
+                    </tr>
+                    <tr>
+                        <td class='bg3'><b>"._INSTALL_L29."</b></td>
+                        <td class='bg1'>".$this->sanitizer->htmlSpecialChars($this->dbname)."</td>
+                    </tr>
+                    <tr>
+                        <td class='bg3'><b>"._INSTALL_L30."</b></td>
+                        <td class='bg1'>".$this->sanitizer->htmlSpecialChars($this->prefix)."</td>
+                    </tr>
+                    <tr>
+                        <td class='bg3'><b>"._INSTALL_L54."</b></td>
+                        <td class='bg1'>".$yesno."</td>
+                    </tr>
+                    <tr>
+                        <td class='bg3'><b>"._INSTALL_L55."</b></td>
+                        <td class='bg1'>".$this->sanitizer->htmlSpecialChars($this->root_path)."</td>
+                    </tr>
+                    <tr>
+                        <td class='bg3'><b>"._INSTALL_L56."</b></td>
+                        <td class='bg1'>".$this->sanitizer->htmlSpecialChars($this->xoops_url)."</td>
+                    </tr>
+                </table></td></tr>
+            </table>
+            <input type='hidden' name='database' value='".$this->sanitizer->htmlSpecialChars($this->database)."' />
+            <input type='hidden' name='dbhost' value='".$this->sanitizer->htmlSpecialChars($this->dbhost)."' />
+            <input type='hidden' name='dbuname' value='".$this->sanitizer->htmlSpecialChars($this->dbuname)."' />
+            <input type='hidden' name='dbpass' value='".$this->sanitizer->htmlSpecialChars($this->dbpass)."' />
+            <input type='hidden' name='dbname' value='".$this->sanitizer->htmlSpecialChars($this->dbname)."' />
+            <input type='hidden' name='prefix' value='".$this->sanitizer->htmlSpecialChars($this->prefix)."' />
+            <input type='hidden' name='db_pconnect' value='".intval($this->db_pconnect)."' />
+            <input type='hidden' name='root_path' value='".$this->sanitizer->htmlSpecialChars($this->root_path)."' />
+            <input type='hidden' name='xoops_url' value='".$this->sanitizer->htmlSpecialChars($this->xoops_url)."' />
+            ";
+        return $ret;
+    }
+
+
+    function getDBList()
+    {
+		return array('mysql');
+        //$dirname = '../class/database/';
+        //$dirlist = array();
+        //if (is_dir($dirname) && $handle = opendir($dirname)) {
+        //    while (false !== ($file = readdir($handle))) {
+        //        if ( !preg_match("/^[.]{1,2}$/",$file) ) {
+        //            if (strtolower($file) != 'cvs' && is_dir($dirname.$file) ) {
+        //                $dirlist[$file] = strtolower($file);
+        //            }
+        //        }
+        //   }
+        //    closedir($handle);
+        //    asort($dirlist);
+        //    reset($dirlist);
+        //}
+        //return $dirlist;
+    }
+}
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/class/settingmanager.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/class/textsanitizer.php
===================================================================
--- XoopsCore/trunk/htdocs/install/class/textsanitizer.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/class/textsanitizer.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,260 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (http://www.myweb.ne.jp/, http://jp.xoops.org/)        //
+//         Goghs Cheng (http://www.eqiao.com, http://www.devbeez.com/)       //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+// This is subset and modified version of module.textsanitizer.php
+set_magic_quotes_runtime(0);
+
+class TextSanitizer
+{
+
+	/*
+	* Constructor of this class
+	* Gets allowed html tags from admin config settings
+	* <br> should not be allowed since nl2br will be used
+	* when storing data
+	*/
+	function TextSanitizer()
+	{
+
+	}
+
+	function &getInstance()
+	{
+		static $instance;
+		if (!isset($instance)) {
+			$instance = new TextSanitizer();
+		}
+		return $instance;
+	}
+
+	function &makeClickable(&$text)
+	{
+		$patterns = array("/([^]_a-z0-9-=\"'\/])([a-z]+?):\/\/([^, \r\n\"\(\)'<>]+)/i", "/([^]_a-z0-9-=\"'\/])www\.([a-z0-9\-]+)\.([^, \r\n\"\(\)'<>]+)/i", "/([^]_a-z0-9-=\"'\/])([a-z0-9\-_.]+?)@([^, \r\n\"\(\)'<>]+)/i");
+		$replacements = array("\\1<a href=\"\\2://\\3\" target=\"_blank\">\\2://\\3</a>", "\\1<a href=\"http://www.\\2.\\3\" target=\"_blank\">www.\\2.\\3</a>", "\\1<a href=\"mailto:\\2@\\3\">\\2@\\3</a>");
+		return preg_replace($patterns, $replacements, $text);
+	}
+
+	function &nl2Br($text)
+	{
+		return preg_replace("/(\015\012)|(\015)|(\012)/","<br />",$text);
+	}
+
+	function &addSlashes($text, $force=false)
+	{
+		if ($force) {
+			return addslashes($text);
+		}
+		if (!get_magic_quotes_gpc()) {
+			$text =& addslashes($text);
+		}
+		return $text;
+	}
+
+	/*
+	* if magic_quotes_gpc is on, stirip back slashes
+	*/
+	function &stripSlashesGPC($text)
+	{
+		if (get_magic_quotes_gpc()) {
+			$text =& stripslashes($text);
+		}
+		return $text;
+	}
+
+	/*
+	*  for displaying data in html textbox forms
+	*/
+	function &htmlSpecialChars($text)
+	{
+		return preg_replace("/&amp;/i", '&', htmlspecialchars($text, ENT_QUOTES));
+	}
+
+	function &undoHtmlSpecialChars(&$text)
+	{
+		return preg_replace(array("/&gt;/i", "/&lt;/i", "/&quot;/i", "/&#039;/i"), array(">", "<", "\"", "'"), $text);
+	}
+
+	/*
+	*  Filters textarea form data in DB for display
+	*/
+	function &displayText($text, $html=false)
+	{
+		if (! $html) {
+			// html not allowed
+			$text =& $this->htmlSpecialChars($text);
+		}
+		$text =& $this->makeClickable($text);
+		$text =& $this->nl2Br($text);
+		return $text;
+	}
+
+	/*
+	*  Filters textarea form data submitted for preview
+	*/
+	function &previewText($text, $html=false)
+	{
+		$text =& $this->stripSlashesGPC($text);
+		return $this->displayText($text, $html);
+	}
+
+##################### Deprecated Methods ######################
+
+	function sanitizeForDisplay($text, $allowhtml = 0, $smiley = 1, $bbcode = 1)
+	{
+		if ( $allowhtml == 0 ) {
+			$text = $this->htmlSpecialChars($text);
+		} else {
+			//$config =& $GLOBALS['xoopsConfig'];
+			//$allowed = $config['allowed_html'];
+			//$text = strip_tags($text, $allowed);
+			$text = $this->makeClickable($text);
+		}
+		if ( $smiley == 1 ) {
+			$text = $this->smiley($text);
+		}
+		if ( $bbcode == 1 ) {
+			$text = $this->xoopsCodeDecode($text);
+		}
+		$text = $this->nl2Br($text);
+		return $text;
+	}
+
+	function sanitizeForPreview($text, $allowhtml = 0, $smiley = 1, $bbcode = 1)
+	{
+		$text = $this->oopsStripSlashesGPC($text);
+		if ( $allowhtml == 0 ) {
+			$text = $this->htmlSpecialChars($text);
+		} else {
+			//$config =& $GLOBALS['xoopsConfig'];
+			//$allowed = $config['allowed_html'];
+			//$text = strip_tags($text, $allowed);
+			$text = $this->makeClickable($text);
+		}
+		if ( $smiley == 1 ) {
+			$text = $this->smiley($text);
+		}
+		if ( $bbcode == 1 ) {
+			$text = $this->xoopsCodeDecode($text);
+		}
+		$text = $this->nl2Br($text);
+		return $text;
+	}
+
+	function makeTboxData4Save($text)
+	{
+		//$text = $this->undoHtmlSpecialChars($text);
+		return $this->addSlashes($text);
+	}
+
+	function makeTboxData4Show($text, $smiley=0)
+	{
+		$text = $this->htmlSpecialChars($text);
+		return $text;
+	}
+
+	function makeTboxData4Edit($text)
+	{
+		return $this->htmlSpecialChars($text);
+	}
+
+	function makeTboxData4Preview($text, $smiley=0)
+	{
+		$text = $this->stripSlashesGPC($text);
+		$text = $this->htmlSpecialChars($text);
+		return $text;
+	}
+
+	function makeTboxData4PreviewInForm($text)
+	{
+		$text = $this->stripSlashesGPC($text);
+		return $this->htmlSpecialChars($text);
+	}
+
+	function makeTareaData4Save($text)
+	{
+		return $this->addSlashes($text);
+	}
+
+	function &makeTareaData4Show(&$text, $html=1, $smiley=1, $xcode=1)
+	{
+		return $this->displayTarea($text, $html, $smiley, $xcode);
+	}
+
+	function makeTareaData4Edit($text)
+	{
+		return htmlSpecialChars($text, ENT_QUOTES);
+	}
+
+	function &makeTareaData4Preview(&$text, $html=1, $smiley=1, $xcode=1)
+	{
+		return $this->previewTarea($text, $html, $smiley, $xcode);
+	}
+
+	function makeTareaData4PreviewInForm($text)
+	{
+		//if magic_quotes_gpc is on, do stipslashes
+		$text = $this->stripSlashesGPC($text);
+		return htmlSpecialChars($text, ENT_QUOTES);
+	}
+
+	function makeTareaData4InsideQuotes($text)
+	{
+		return $this->htmlSpecialChars($text);
+	}
+
+	function &oopsStripSlashesGPC($text)
+	{
+		return $this->stripSlashesGPC($text);
+	}
+
+	function &oopsStripSlashesRT($text)
+	{
+		if (get_magic_quotes_runtime()) {
+			$text =& stripslashes($text);
+		}
+		return $text;
+	}
+
+	function &oopsAddSlashes($text)
+	{
+		return $this->addSlashes($text);
+	}
+
+	function &oopsHtmlSpecialChars($text)
+	{
+		return $this->htmlSpecialChars($text);
+	}
+
+	function &oopsNl2Br($text)
+	{
+		return $this->nl2br($text);
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/class/textsanitizer.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/img/bg_content_left.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/bg_content_left.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/bg_content_right.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/bg_content_right.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/bg_darkblue.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/bg_darkblue.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/bg_table.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/bg_table.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/dummy.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/dummy.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/hbar_installer_right.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/hbar_installer_right.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/hbar_left.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/hbar_left.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/hbar_middle.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/hbar_middle.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/hbar_right.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/hbar_right.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/logo.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/logo.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/no.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/no.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/xoops2.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/xoops2.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/img/yes.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/install/img/yes.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/install/index.php
===================================================================
--- XoopsCore/trunk/htdocs/install/index.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/index.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,1317 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+//error_reporting (E_ALL);
+
+include_once './passwd.php';
+if(INSTALL_USER != '' || INSTALL_PASSWD != ''){
+    if (!isset($_SERVER['PHP_AUTH_USER'])) {
+        header('WWW-Authenticate: Basic realm="XOOPS Installer"');
+        header('HTTP/1.0 401 Unauthorized');
+        echo 'You can not access this XOOPS installer.';
+        exit;
+    } else {
+        if(INSTALL_USER != '' && $_SERVER['PHP_AUTH_USER'] != INSTALL_USER){
+            header('HTTP/1.0 401 Unauthorized');
+            echo 'You can not access this XOOPS installer.';
+            exit;
+        }
+        if(INSTALL_PASSWD != $_SERVER['PHP_AUTH_PW']){
+            header('HTTP/1.0 401 Unauthorized');
+            echo 'You can not access this XOOPS installer.';
+            exit;
+        }
+    }
+}
+
+include_once './class/textsanitizer.php';
+$myts =& TextSanitizer::getInstance();
+
+if ( isset($_POST) ) {
+    foreach ($_POST as $k=>$v) {
+        $$k = $myts->stripSlashesGPC($v);
+    }
+}
+
+$language = 'english';
+if ( !empty($_POST['lang']) ) {
+    $language = $_POST['lang'];
+} else {
+	if (isset($_COOKIE['install_lang'])) {
+		$language = $_COOKIE['install_lang'];
+	} else {
+		$_SERVER['HTTP_ACCEPT_LANGUAGE'] = 'ja,en-us;q=0.7,zh-TW;q=0.6';
+		if (isset($_SERVER['HTTP_ACCEPT_LANGUAGE'])) {
+			$accept_langs = explode(',', $_SERVER['HTTP_ACCEPT_LANGUAGE']);
+			$language_array = array('en' => 'english', 'ja' => 'japanese', 'fr' => 'french', 'de' => 'german', 'nl' => 'dutch', 'es' => 'spanish', 'tw' => 'tchinese', 'cn' => 'schinese', 'ro' => 'romanian');
+			foreach ($accept_langs as $al) {
+				$al = strtolower($al);
+				$al_len = strlen($al);
+				if ($al_len > 2) {
+					if (preg_match("/([a-z]{2});q=[0-9.]+$/", $al, $al_match)) {
+						$al = $al_match[1];
+					} else {
+						continue;
+					}
+				}
+				if (isset($language_array[$al])) {
+					$language = $language_array[$al];
+					break;
+				}
+			}
+		}
+	}
+}
+
+if ( file_exists("./language/".$language."/install.php") ) {
+    include_once "./language/".$language."/install.php";
+} elseif ( file_exists("./language/english/install.php") ) {
+    include_once "./language/english/install.php";
+    $language = 'english';
+} else {
+    echo 'no language file.';
+    exit();
+}
+setcookie("install_lang", $language);
+
+//include './include/viewerrors.php';
+//include './include/functions.php';
+
+define('_OKIMG',"<img src='img/yes.gif' width='6' height='12' border='0' alt='' /> ");
+define('_NGIMG',"<img src='img/no.gif' width='6' height='12' border='0' alt='' /> ");
+
+$b_back = '';
+$b_reload = '';
+$b_next = '';
+
+// options for mainfile.php
+$xoopsOption['nocommon'] = true;
+define('XOOPS_INSTALL', 1);
+
+if(!empty($_POST['op']))
+    $op = $_POST['op'];
+elseif(!empty($_GET['op']))
+    $op = $_GET['op'];
+else
+    $op = '';
+
+///// main
+
+switch ($op) {
+
+default:
+case "langselect":
+    $title = _INSTALL_L0;
+	if (!defined('_INSTALL_L128')) {
+		define('_INSTALL_L128', 'Choose language to be used for the installation process');
+	}
+    $content = "<p>"._INSTALL_L128."</p>"
+              ."<select name='lang'>";
+
+    $langarr = getDirList("./language/");
+    foreach ($langarr as $lang) {
+        $content .= "<option value='".$lang."'";
+        if (strtolower($lang) == $language) {
+            $content .= ' selected="selected"';
+        }
+        $content .= ">".$lang."</option>";
+    }
+    $content .= "</select>";
+
+    $b_next = array('start', _INSTALL_L80 );
+    include 'install_tpl.php';
+    break;
+
+case "start":
+    $title = _INSTALL_L0;
+    $content = "<table width='80%' align='center'><tr><td align='left'>\n";
+    include './language/'.$language.'/welcome.php';
+    $content .= "</td></tr></table>\n";
+    $b_next = array('modcheck', _INSTALL_L81 );
+    include 'install_tpl.php';
+    break;
+
+case "modcheck":
+    $writeok = array("uploads/", "cache/", "templates_c/", "mainfile.php");
+    $title = _INSTALL_L82;
+    $content = "<table align='center'><tr><td align='left'>\n";
+    $error = false;
+    foreach ($writeok as $wok) {
+        if (!is_dir("../".$wok)) {
+            if ( file_exists("../".$wok) ) {
+                @chmod("../".$wok, 0666);
+                if (! is_writeable("../".$wok)) {
+                    $content .= _NGIMG.sprintf(_INSTALL_L83, $wok)."<br />";
+                    $error = true;
+                }else{
+                    $content .= _OKIMG.sprintf(_INSTALL_L84, $wok)."<br />";
+                }
+            }
+        } else {
+            @chmod("../".$wok, 0777);
+            if (! is_writeable("../".$wok)) {
+                $content .= _NGIMG.sprintf(_INSTALL_L85, $wok)."<br />";
+                $error = true;
+            }else{
+                $content .= _OKIMG.sprintf(_INSTALL_L86, $wok)."<br />";
+            }
+        }
+    }
+    $content .= "</td></tr></table>\n";
+
+    if(! $error) {
+        $content .= "<p>"._INSTALL_L87."</p>";
+        $b_next = array('dbform', _INSTALL_L89 );
+    }else{
+        $content .= "<p>"._INSTALL_L46."</p>";
+        $b_reload = true;
+    }
+
+    include 'install_tpl.php';
+    break;
+
+case "dbform":
+    include_once '../mainfile.php';
+    include_once 'class/settingmanager.php';
+    $sm = new setting_manager();
+    $sm->readConstant();
+    $content = $sm->editform();
+    $title = _INSTALL_L90;
+    $b_next = array('dbconfirm',_INSTALL_L91);
+    include 'install_tpl.php';
+    break;
+
+case "dbconfirm":
+    include_once 'class/settingmanager.php';
+    $sm = new setting_manager(true);
+
+    $content = $sm->checkData();
+    if (!empty($content)) {
+        $content .= $sm->editform();
+        $b_next = array('dbconfirm',_INSTALL_L91);
+        include 'install_tpl.php';
+        break;
+    }
+
+    $title = _INSTALL_L53;
+    $content = $sm->confirmForm();
+    $b_next = array('dbsave',_INSTALL_L92 );
+    $b_back = array('', _INSTALL_L93 );
+    include 'install_tpl.php';
+    break;
+
+case "dbsave":
+    include_once "./class/mainfilemanager.php";
+    $title = _INSTALL_L88;
+    $mm = new mainfile_manager("../mainfile.php");
+
+    $ret = $mm->copyDistFile();
+    if(! $ret){
+        $content = _INSTALL_L60;
+        include 'install_tpl.php';
+        exit();
+    }
+
+    $mm->setRewrite('XOOPS_ROOT_PATH', $myts->stripSlashesGPC($_POST['root_path']));
+    $mm->setRewrite('XOOPS_URL', $myts->stripSlashesGPC($_POST['xoops_url']));
+    $mm->setRewrite('XOOPS_DB_TYPE', $myts->stripSlashesGPC($_POST['database']));
+    $mm->setRewrite('XOOPS_DB_PREFIX', $myts->stripSlashesGPC($_POST['prefix']));
+    $mm->setRewrite('XOOPS_DB_HOST', $myts->stripSlashesGPC($_POST['dbhost']));
+    $mm->setRewrite('XOOPS_DB_USER', $myts->stripSlashesGPC($_POST['dbuname']));
+    $mm->setRewrite('XOOPS_DB_PASS', $myts->stripSlashesGPC($_POST['dbpass']));
+    $mm->setRewrite('XOOPS_DB_NAME', $myts->stripSlashesGPC($_POST['dbname']));
+    $mm->setRewrite('XOOPS_DB_PCONNECT', intval($_POST['db_pconnect']));
+    $mm->setRewrite('XOOPS_GROUP_ADMIN', 1);
+    $mm->setRewrite('XOOPS_GROUP_USERS', 2);
+    $mm->setRewrite('XOOPS_GROUP_ANONYMOUS', 3);
+
+	// Check if XOOPS_CHECK_PATH should be initially set or not
+	$xoopsPathTrans = isset($_SERVER['PATH_TRANSLATED']) ? $_SERVER['PATH_TRANSLATED'] :  $_SERVER['SCRIPT_FILENAME'];
+	if ( DIRECTORY_SEPARATOR != '/' ) {
+	 	// IIS6 doubles the \ chars
+		$xoopsPathTrans = str_replace( strpos( $xoopsPathTrans, '\\\\', 2 ) ? '\\\\' : DIRECTORY_SEPARATOR, '/', $xoopsPathTrans);
+	}
+	$mm->setRewrite('XOOPS_CHECK_PATH', strcasecmp( substr($xoopsPathTrans, 0, strlen($myts->stripSlashesGPC($_POST['root_path']))), $_POST['root_path']) ? 0 : 1 );
+
+    $ret = $mm->doRewrite();
+    if(! $ret){
+        $content = _INSTALL_L60;
+        include 'install_tpl.php';
+        exit();
+    }
+
+    $content = $mm->report();
+    $content .= "<p>"._INSTALL_L62."</p>\n";
+    $b_next = array('mainfile', _INSTALL_L94 );
+    include 'install_tpl.php';
+    break;
+
+case "mainfile":
+    // checking XOOPS_ROOT_PATH and XOOPS_URL
+    include_once "../mainfile.php";
+    $title = _INSTALL_L94;
+    $content = "<table align='center'><tr><td align='left'>\n";
+
+    $detected = str_replace("\\", "/", getcwd()); // "
+    $detected = str_replace("/install", "", $detected);
+    if ( substr($detected, -1) == "/" ) {
+        $detected = substr($detected, 0, -1);
+    }
+
+    if (empty($detected)){
+        $content .= _NGIMG._INSTALL_L95.'<br />';
+    }
+    elseif ( XOOPS_ROOT_PATH != $detected ) {
+        $content .= _NGIMG.sprintf(_INSTALL_L96,$detected). '<br />';
+    }else {
+        $content .= _OKIMG._INSTALL_L97.'<br />';
+    }
+
+    if(!is_dir(XOOPS_ROOT_PATH)){
+        $content .= _NGIMG._INSTALL_L99.'<br />';
+    }
+
+    if(preg_match('/^http[s]?:\/\/(.*)[^\/]+$/i',XOOPS_URL)){
+        $content .= _OKIMG._INSTALL_L100.'<br />';
+    }else{
+        $content .= _NGIMG._INSTALL_L101.'<br />';
+    }
+
+    $content .= "<br /></td></tr></table>\n";
+
+    $content .= "<table align='center'><tr><td align='left'>\n";
+    $content .= _INSTALL_L11."<b>".XOOPS_ROOT_PATH."</b><br />";
+    $content .= _INSTALL_L12."<b>".XOOPS_URL."</b><br />";
+    $content .= "</td></tr></table>\n";
+    $content .= "<p align='center'>"._INSTALL_L13."</p>\n";
+
+    $b_next = array('initial', _INSTALL_L102 );
+    $b_back = array('start', _INSTALL_L103 );
+    $b_reload = true;
+
+    include 'install_tpl.php';
+    //mainfile_settings();
+    break;
+
+case "initial":
+    // confirm database setting
+    include_once "../mainfile.php";
+    $content = "<table align=\"center\">\n";
+    $content .= "<tr><td align='center'>";
+    $content .= "<table align=\"center\">\n";
+    $content .= "<tr><td>"._INSTALL_L27."&nbsp;&nbsp;</td><td><b>".XOOPS_DB_HOST."</b></td></tr>\n";
+    $content .= "<tr><td>"._INSTALL_L28."&nbsp;&nbsp;</td><td><b>".XOOPS_DB_USER."</b></td></tr>\n";
+    $content .= "<tr><td>"._INSTALL_L29."&nbsp;&nbsp;</td><td><b>".XOOPS_DB_NAME."</b></td></tr>\n";
+    $content .= "<tr><td>"._INSTALL_L30."&nbsp;&nbsp;</td><td><b>".XOOPS_DB_PREFIX."</b></td></tr>\n";
+    $content .= "</table><br />\n";
+    $content .= "</td></tr><tr><td align=\"center\">";
+    $content .= _INSTALL_L13."<br /><br />\n";
+    $content .= "</td></tr></table>\n";
+    $b_next = array('checkDB', _INSTALL_L104);
+    $b_back = array('start', _INSTALL_L103);
+    $b_reload = true;
+    $title = _INSTALL_L102;
+    include 'install_tpl.php';
+    break;
+
+case "checkDB":
+    include_once "../mainfile.php";
+    include_once './class/dbmanager.php';
+    $dbm = new db_manager;
+    $title = _INSTALL_L104;
+    $content = "<table align='center'><tr><td align='left'>\n";
+
+    if (! $dbm->isConnectable()) {
+        $content .= _NGIMG._INSTALL_L106."<br />";
+        $content .= "<div style='text-align:center'><br />"._INSTALL_L107;
+        $content .= "</div></td></tr></table>\n";
+        $b_back = array('start', _INSTALL_L103);
+        $b_reload = true;
+    }else{
+        $content .= _OKIMG._INSTALL_L108."<br />";
+        if (! $dbm->dbExists()) {
+            $content .= _NGIMG.sprintf(_INSTALL_L109, XOOPS_DB_NAME)."<br />";
+            $content .= "</td></tr></table>\n";
+
+            $content .= "<p>"._INSTALL_L21."<br />"
+                        ."<b>".XOOPS_DB_NAME."</b></p>"
+                        ."<p>"._INSTALL_L22."</p>";
+
+            $b_next = array('createDB', _INSTALL_L105);
+            $b_back = array('start', _INSTALL_L103);
+            $b_reload = true;
+        }else{
+			if (!$dbm->tableExists('users')) {
+            	$content .= _OKIMG.sprintf(_INSTALL_L110, XOOPS_DB_NAME)."<br />";
+            	$content .= "</td></tr></table>\n";
+            	$content .= "<p>"._INSTALL_L111."</p>";
+            	$b_next = array('createTables', _INSTALL_L40);
+			} else {
+				$content .= _OKIMG.sprintf(_INSTALL_L110, XOOPS_DB_NAME)."<br />";
+				if (!$dbm->tableExists('config')) {
+            		$content .= "</td></tr></table>\n";
+            		$content .= "<p>"._INSTALL_L130."</p>";
+            		$b_next = array('updateTables', _INSTALL_L14);
+				} else {
+					$content .= _NGIMG._INSTALL_L131."<br />";
+					$content .= "</td></tr></table>\n";
+            	}
+			}
+        }
+    }
+
+    include 'install_tpl.php';
+    break;
+
+case "createDB":
+    include_once "../mainfile.php";
+    include_once './class/dbmanager.php';
+    $dbm = new db_manager;
+
+    if(! $dbm->createDB()){
+        $content = "<p>"._INSTALL_L31."</p>";
+        $b_next = array('checkDB', _INSTALL_L104);
+        $b_back = array('start', _INSTALL_L103);
+    }else{
+        $content = "<p>".sprintf(_INSTALL_L43, XOOPS_DB_NAME)."</p>";
+        $b_next = array('checkDB', _INSTALL_L104);
+    }
+    include 'install_tpl.php';
+    break;
+
+case "createTables":
+    include_once "../mainfile.php";
+    include_once './class/dbmanager.php';
+    $dbm = new db_manager;
+
+    //$content = "<table align='center'><tr><td align='left'>\n";
+    $tables = array();
+    $result = $dbm->queryFromFile('./sql/'.XOOPS_DB_TYPE.'.structure.sql');
+    $content = $dbm->report();
+    if(! $result ){
+        //$deleted = $dbm->deleteTables($tables);
+        $content .= "<p>"._INSTALL_L114."</p>\n";
+        $b_back = array('start', _INSTALL_L103);
+    }else{
+        $content .= "<p>"._INSTALL_L115."</p>\n";
+        $b_next = array('siteInit', _INSTALL_L112);
+    }
+
+    include 'install_tpl.php';
+    break;
+
+case 'updateTables':
+	include_once "../mainfile.php";
+	include_once './class/dbmanager.php';
+    $db = new db_manager;
+	$sql = 'SELECT * FROM '.$db->prefix('groups');
+	$result = $db->query($sql);
+	$content = '<h5>'._INSTALL_L157.'</h5>';
+	$content .= '<table align="center" cellspacing="0" border="1"><tr><td>'._INSTALL_L158.'</td><td>'._INSTALL_L159.'</td><td>'._INSTALL_L160.'</td><td>'._INSTALL_L161.'</td></tr>';
+	while ($myrow = $db->fetchArray($result)) {
+		if ($myrow['type'] == 'Admin') {
+			$content .= '<tr><td>'.$myrow['name'].'</td><td><input type="radio" name="g_webmasters" value="'.$myrow['groupid'].'" /></td><td>&nbsp;</td><td>&nbsp;</td></tr>';
+		} elseif ($myrow['type'] == 'User') {
+			$content .= '<tr><td>'.$myrow['name'].'</td><td>&nbsp;</td><td><input type="radio" name="g_users" value="'.$myrow['groupid'].'" /></td><td>&nbsp;</td></tr>';
+		} else {
+			$content .= '<tr><td>'.$myrow['name'].'</td><td>&nbsp;</td><td>&nbsp;</td><td><input type="radio" name="g_anonymous" value="'.$myrow['groupid'].'" /></td></tr>';
+		}
+	}
+	$content .= '</table>';
+	$b_back = array();
+	$b_next = array('updateTables_go', _INSTALL_L132);
+	include 'install_tpl.php';
+	break;
+
+case 'updateTables_go':
+	include_once "../mainfile.php";
+	$error = false;
+	$g_webmasters = isset($g_webmasters) ? intval($g_webmasters) : 0;
+	$g_users = isset($g_users) ? intval($g_users) : 0;
+	$g_anonymous = isset($g_anonymous) ? intval($g_anonymous) : 0;
+	if (empty($g_webmasters) || empty($g_users) || empty($g_anonymous)) {
+		$error = true;
+	} else {
+		include_once "./class/mainfilemanager.php";
+    	$title = _INSTALL_L88;
+    	$mm = new mainfile_manager("../mainfile.php");
+    	$mm->setRewrite('XOOPS_GROUP_ADMIN', $g_webmasters);
+    	$mm->setRewrite('XOOPS_GROUP_USERS', $g_users);
+    	$mm->setRewrite('XOOPS_GROUP_ANONYMOUS', $g_anonymous);
+
+    	$ret = $mm->doRewrite();
+    	if(!$ret){
+        	$content = _INSTALL_L60;
+        	include 'install_tpl.php';
+        	exit();
+    	}
+	}
+	if (false != $error) {
+		$b_back = array();
+		$content = _INSTALL_L162;
+		include 'install_tpl.php';
+		break;
+	}
+	include_once './class/dbmanager.php';
+    $dbm = new db_manager;
+    if (!$dbm->query("ALTER TABLE ".$dbm->prefix("newblocks")." ADD dirname VARCHAR(50) NOT NULL, ADD func_file VARCHAR(50) NOT NULL, ADD show_func VARCHAR(50) NOT NULL, ADD edit_func VARCHAR(50) NOT NULL")) {
+    }
+    $result = $dbm->queryFromFile('./sql/upgrade/'.XOOPS_DB_TYPE.'.structure.sql');
+    $content = $dbm->report();
+    if (!$result) {
+        $content .= "<p>"._INSTALL_L135."</p>\n";
+		$b_back = array();
+    } else {
+        $content .= "<p>"._INSTALL_L136."</p>\n";
+		$b_next = array('updateConfig', _INSTALL_L14);
+    }
+	include 'install_tpl.php';
+	break;
+
+case 'updateConfig':
+	$b_next = array('updateConfig_go', _INSTALL_L144);
+	$content = "<p>"._INSTALL_L143."</p>\n";
+	include 'install_tpl.php';
+	break;
+
+case 'updateConfig_go':
+	include_once "../mainfile.php";
+
+	$language = check_language($language);
+    if ( file_exists("./language/".$language."/install2.php") ) {
+        include_once "./language/".$language."/install2.php";
+    } elseif ( file_exists("./language/english/install2.php") ) {
+        include_once "./language/english/install2.php";
+        $language = 'english';
+    } else {
+        echo 'no language file (install2.php).';
+        exit();
+    }
+	include_once './class/dbmanager.php';
+    $dbm = new db_manager;
+
+	// default settings
+	$xoopsConfig['sitename'] = 'XOOPS Site';
+	$xoopsConfig['slogan'] = 'Just use it!';
+	$xoopsConfig['adminmail'] = '';
+	$xoopsConfig['language'] = 'english';
+	$xoopsConfig['anonymous'] = 'Anonymous';
+	$xoopsConfig['minpass'] = 5;
+	$xoopsConfig['anonpost'] = 0;
+	$xoopsConfig['new_user_notify'] = 0;
+	$xoopsConfig['new_user_notify_group'] = 1;
+	$xoopsConfig['self_delete'] = 0;
+	$xoopsConfig['gzip_compression'] = 0;
+	$xoopsConfig['uname_test_level'] = 0;
+	$xoopsConfig['usercookie'] = "xoops_user";
+	$xoopsConfig['sessioncookie'] = "xoops_session";
+	$xoopsConfig['sessionexpire'] = 4500;
+	$xoopsConfig['server_TZ'] = 0;
+	$xoopsConfig['default_TZ'] = 0;
+	$xoopsConfig['banners'] = 1;
+	$xoopsConfig['com_mode'] = "nest";
+	$xoopsConfig['com_order'] = 1;
+	$xoopsConfig['my_ip'] = "127.0.0.1";
+	$xoopsConfig['avatar_allow_upload'] = 0;
+	$xoopsConfig['avatar_width'] = 120;
+	$xoopsConfig['avatar_height'] = 120;
+	$xoopsConfig['avatar_maxsize'] = 15000;
+
+	// override deafault with 1.3.x settings if any
+	if (file_exists('../modules/system/cache/config.php')) {
+		include_once('../modules/system/cache/config.php');
+	}
+
+	$dbm->insert('config', " VALUES (1, 0, 1, 'sitename', '_MD_AM_SITENAME', '".addslashes($xoopsConfig['sitename'])."', '_MD_AM_SITENAMEDSC', 'textbox', 'text', 0)");
+	$dbm->insert('config', " VALUES (2, 0, 1, 'slogan', '_MD_AM_SLOGAN', '".addslashes($xoopsConfig['slogan'])."', '_MD_AM_SLOGANDSC', 'textbox', 'text', 2)");
+	$dbm->insert('config', " VALUES (3, 0, 1, 'language', '_MD_AM_LANGUAGE', '".$xoopsConfig['language']."', '_MD_AM_LANGUAGEDSC', 'language', 'other', 4)");
+	$dbm->insert('config', " VALUES (4, 0, 1, 'startpage', '_MD_AM_STARTPAGE', '--', '_MD_AM_STARTPAGEDSC', 'startpage', 'other', 6)");
+	$dbm->insert('config', " VALUES (5, 0, 1, 'server_TZ', '_MD_AM_SERVERTZ', '".addslashes($xoopsConfig['server_TZ'])."', '_MD_AM_SERVERTZDSC', 'timezone', 'float', 8)");
+	$dbm->insert('config', " VALUES (6, 0, 1, 'default_TZ', '_MD_AM_DEFAULTTZ', '".addslashes($xoopsConfig['default_TZ'])."', '_MD_AM_DEFAULTTZDSC', 'timezone', 'float', 10)");
+	$dbm->insert('config', " VALUES (7, 0, 1, 'theme_set', '_MD_AM_DTHEME', 'default', '_MD_AM_DTHEMEDSC', 'theme', 'other', 12)");
+	$dbm->insert('config', " VALUES (8, 0, 1, 'anonymous', '_MD_AM_ANONNAME', '".addslashes($xoopsConfig['anonymous'])."', '_MD_AM_ANONNAMEDSC', 'textbox', 'text', 15)");
+	$dbm->insert('config', " VALUES (9, 0, 1, 'gzip_compression', '_MD_AM_USEGZIP', '".intval($xoopsConfig['gzip_compression'])."', '_MD_AM_USEGZIPDSC', 'yesno', 'int', 16)");
+	$dbm->insert('config', " VALUES (10, 0, 1, 'usercookie', '_MD_AM_USERCOOKIE', '".addslashes($xoopsConfig['usercookie'])."', '_MD_AM_USERCOOKIEDSC', 'textbox', 'text', 18)");
+    $dbm->insert('config', " VALUES (11, 0, 1, 'session_expire', '_MD_AM_SESSEXPIRE', '15', '_MD_AM_SESSEXPIREDSC', 'textbox', 'int', 22)");
+	$dbm->insert('config', " VALUES (12, 0, 1, 'banners', '_MD_AM_BANNERS', '".intval($xoopsConfig['banners'])."', '_MD_AM_BANNERSDSC', 'yesno', 'int', 26)");
+	$dbm->insert('config', " VALUES (13, 0, 1, 'debug_mode', '_MD_AM_DEBUGMODE', '0', '_MD_AM_DEBUGMODEDSC', 'select', 'int', 24)");
+	$dbm->insert('config', " VALUES (14, 0, 1, 'my_ip', '_MD_AM_MYIP', '".addslashes($xoopsConfig['my_ip'])."', '_MD_AM_MYIPDSC', 'textbox', 'text', 29)");
+	$dbm->insert('config', " VALUES (15, 0, 1, 'use_ssl', '_MD_AM_USESSL', '0', '_MD_AM_USESSLDSC', 'yesno', 'int', 30)");
+    $dbm->insert('config', " VALUES (16, 0, 1, 'session_name', '_MD_AM_SESSNAME', 'xoops_session', '_MD_AM_SESSNAMEDSC', 'textbox', 'text', 20)");
+	$dbm->insert('config', " VALUES (17, 0, 2, 'minpass', '_MD_AM_MINPASS', '".intval($xoopsConfig['minpass'])."', '_MD_AM_MINPASSDSC', 'textbox', 'int', 1)");
+	$dbm->insert('config', " VALUES (18, 0, 2, 'minuname', '_MD_AM_MINUNAME', '5', '_MD_AM_MINUNAMEDSC', 'textbox', 'int', 2)");
+	$dbm->insert('config', " VALUES (19, 0, 2, 'new_user_notify', '_MD_AM_NEWUNOTIFY', '".intval($xoopsConfig['new_user_notify'])."', '_MD_AM_NEWUNOTIFYDSC', 'yesno', 'int', 4)");
+	$dbm->insert('config', " VALUES (20, 0, 2, 'new_user_notify_group', '_MD_AM_NOTIFYTO', ".intval($xoopsConfig['new_user_notify_group']).", '_MD_AM_NOTIFYTODSC', 'group', 'int', 6)");
+	$dbm->insert('config', " VALUES (21, 0, 2, 'activation_type', '_MD_AM_ACTVTYPE', '0', '_MD_AM_ACTVTYPEDSC', 'select', 'int', 8)");
+	$dbm->insert('config', " VALUES (22, 0, 2, 'activation_group', '_MD_AM_ACTVGROUP', ".XOOPS_GROUP_ADMIN.", '_MD_AM_ACTVGROUPDSC', 'group', 'int', 10)");
+	$dbm->insert('config', " VALUES (23, 0, 2, 'uname_test_level', '_MD_AM_UNAMELVL', '".intval($xoopsConfig['uname_test_level'])."', '_MD_AM_UNAMELVLDSC', 'select', 'int', 12)");
+	$dbm->insert('config', " VALUES (24, 0, 2, 'avatar_allow_upload', '_MD_AM_AVATARALLOW', '".intval($xoopsConfig['avatar_allow_upload'])."', '_MD_AM_AVATARALWDSC', 'yesno', 'int', 14)");
+	$dbm->insert('config', " VALUES (27, 0, 2, 'avatar_width', '_MD_AM_AVATARW', '".intval($xoopsConfig['avatar_width'])."', '_MD_AM_AVATARWDSC', 'textbox', 'int', 16)");
+	$dbm->insert('config', " VALUES (28, 0, 2, 'avatar_height', '_MD_AM_AVATARH', '".intval($xoopsConfig['avatar_height'])."', '_MD_AM_AVATARHDSC', 'textbox', 'int', 18)");
+	$dbm->insert('config', " VALUES (29, 0, 2, 'avatar_maxsize', '_MD_AM_AVATARMAX', '".intval($xoopsConfig['avatar_maxsize'])."', '_MD_AM_AVATARMAXDSC', 'textbox', 'int', 20)");
+	$dbm->insert('config', " VALUES (30, 0, 1, 'adminmail', '_MD_AM_ADMINML', '".addslashes($xoopsConfig['adminmail'])."', '_MD_AM_ADMINMLDSC', 'textbox', 'text', 3)");
+	$dbm->insert('config', " VALUES (31, 0, 2, 'self_delete', '_MD_AM_SELFDELETE', '".intval($xoopsConfig['self_delete'])."', '_MD_AM_SELFDELETEDSC', 'yesno', 'int', 22)");
+	$dbm->insert('config', " VALUES (32, 0, 1, 'com_mode', '_MD_AM_COMMODE', '".addslashes($xoopsConfig['com_mode'])."', '_MD_AM_COMMODEDSC', 'select', 'text', 34)");
+	$dbm->insert('config', " VALUES (33, 0, 1, 'com_order', '_MD_AM_COMORDER', '".intval($xoopsConfig['com_order'])."', '_MD_AM_COMORDERDSC', 'select', 'int', 36)");
+	$dbm->insert('config', " VALUES (34, 0, 2, 'bad_unames', '_MD_AM_BADUNAMES', '".addslashes(serialize(array('webmaster', '^xoops', '^admin')))."', '_MD_AM_BADUNAMESDSC', 'textarea', 'array', 24)");
+	$dbm->insert('config', " VALUES (35, 0, 2, 'bad_emails', '_MD_AM_BADEMAILS', '".addslashes(serialize(array('xoops.org$')))."', '_MD_AM_BADEMAILSDSC', 'textarea', 'array', 26)");
+	$dbm->insert('config', " VALUES (36, 0, 2, 'maxuname', '_MD_AM_MAXUNAME', '10', '_MD_AM_MAXUNAMEDSC', 'textbox', 'int', 3)");
+	$dbm->insert('config', " VALUES (37, 0, 1, 'bad_ips', '_MD_AM_BADIPS', '".addslashes(serialize(array('127.0.0.1')))."', '_MD_AM_BADIPSDSC', 'textarea', 'array', 42)");
+	$dbm->insert('config', " VALUES (38, 0, 3, 'meta_keywords', '_MD_AM_METAKEY', 'news, technology, headlines, xoops, xoop, nuke, myphpnuke, myphp-nuke, phpnuke, SE, geek, geeks, hacker, hackers, linux, software, download, downloads, free, community, mp3, forum, forums, bulletin, board, boards, bbs, php, survey, poll, polls, kernel, comment, comments, portal, odp, open, source, opensource, FreeSoftware, gnu, gpl, license, Unix, *nix, mysql, sql, database, databases, web site, weblog, guru, module, modules, theme, themes, cms, content management', '_MD_AM_METAKEYDSC', 'textarea', 'text', 0)");
+	$dbm->insert('config', " VALUES (39, 0, 3, 'footer', '_MD_AM_FOOTER', 'Powered by XOOPS 2.0 &copy; 2001-2003 <a href=\"http://www.xoops.org/\" target=\"_blank\">The XOOPS Project</a>', '_MD_AM_FOOTERDSC', 'textarea', 'text', 20)");
+	$dbm->insert('config', " VALUES (40, 0, 4, 'censor_enable', '_MD_AM_DOCENSOR', '0', '_MD_AM_DOCENSORDSC', 'yesno', 'int', 0)");
+	$dbm->insert('config', " VALUES (41, 0, 4, 'censor_words', '_MD_AM_CENSORWRD', '".addslashes(serialize(array('fuck', 'shit')))."', '_MD_AM_CENSORWRDDSC', 'textarea', 'array', 1)");
+	$dbm->insert('config', " VALUES (42, 0, 4, 'censor_replace', '_MD_AM_CENSORRPLC', '#OOPS#', '_MD_AM_CENSORRPLCDSC', 'textbox', 'text', 2)");
+	$dbm->insert('config', " VALUES (43, 0, 3, 'meta_robots', '_MD_AM_METAROBOTS', 'index,follow', '_MD_AM_METAROBOTSDSC', 'select', 'text', 2)");
+	$dbm->insert('config', " VALUES (44, 0, 5, 'enable_search', '_MD_AM_DOSEARCH', '1', '_MD_AM_DOSEARCHDSC', 'yesno', 'int', 0)");
+	$dbm->insert('config', " VALUES (45, 0, 5, 'keyword_min', '_MD_AM_MINSEARCH', '5', '_MD_AM_MINSEARCHDSC', 'textbox', 'int', 1)");
+	$dbm->insert('config', " VALUES (46, 0, 2, 'avatar_minposts', '_MD_AM_AVATARMP', '0', '_MD_AM_AVATARMPDSC', 'textbox', 'int', 15)");
+	$dbm->insert('config', " VALUES (47, 0, 1, 'enable_badips', '_MD_AM_DOBADIPS', '0', '_MD_AM_DOBADIPSDSC', 'yesno', 'int', 40)");
+	$dbm->insert('config', " VALUES (48, 0, 3, 'meta_rating', '_MD_AM_METARATING', 'general', '_MD_AM_METARATINGDSC', 'select', 'text', 4)");
+	$dbm->insert('config', " VALUES (49, 0, 3, 'meta_author', '_MD_AM_METAAUTHOR', 'XOOPS', '_MD_AM_METAAUTHORDSC', 'textbox', 'text', 6)");
+	$dbm->insert('config', " VALUES (50, 0, 3, 'meta_copyright', '_MD_AM_METACOPYR', 'Copyright &copy; 2001-2003', '_MD_AM_METACOPYRDSC', 'textbox', 'text', 8)");
+	$dbm->insert('config', " VALUES (51, 0, 3, 'meta_description', '_MD_AM_METADESC', 'XOOPS is a dynamic Object Oriented based open source portal script written in PHP.', '_MD_AM_METADESCDSC', 'textarea', 'text', 1)");
+	$dbm->insert('config', " VALUES (52, 0, 2, 'allow_chgmail', '_MD_AM_ALLWCHGMAIL', '0', '_MD_AM_ALLWCHGMAILDSC', 'yesno', 'int', 3)");
+    $dbm->insert('config', " VALUES (53, 0, 1, 'use_mysession', '_MD_AM_USEMYSESS', '0', '_MD_AM_USEMYSESSDSC', 'yesno', 'int', 19)");
+	$dbm->insert('config', " VALUES (54, 0, 2, 'reg_dispdsclmr', '_MD_AM_DSPDSCLMR', 1, '_MD_AM_DSPDSCLMRDSC', 'yesno', 'int', 30)");
+	$dbm->insert('config', " VALUES (55, 0, 2, 'reg_disclaimer', '_MD_AM_REGDSCLMR', '".addslashes(_INSTALL_DISCLMR)."', '_MD_AM_REGDSCLMRDSC', 'textarea', 'text', 32)");
+	$dbm->insert('config', " VALUES (56, 0, 2, 'allow_register', '_MD_AM_ALLOWREG', 1, '_MD_AM_ALLOWREGDSC', 'yesno', 'int', 0)");
+	$dbm->insert('config', " VALUES (57, 0, 1, 'theme_fromfile', '_MD_AM_THEMEFILE', '0', '_MD_AM_THEMEFILEDSC', 'yesno', 'int', 13)");
+	$dbm->insert('config', " VALUES (58, 0, 1, 'closesite', '_MD_AM_CLOSESITE', '0', '_MD_AM_CLOSESITEDSC', 'yesno', 'int', 26)");
+	$dbm->insert('config', " VALUES (59, 0, 1, 'closesite_okgrp', '_MD_AM_CLOSESITEOK', '".addslashes(serialize(array('1')))."', '_MD_AM_CLOSESITEOKDSC', 'group_multi', 'array', 27)");
+	$dbm->insert('config', " VALUES (60, 0, 1, 'closesite_text', '_MD_AM_CLOSESITETXT', '"._INSTALL_L165."', '_MD_AM_CLOSESITETXTDSC', 'textarea', 'text', 28)");
+	$dbm->insert('config', " VALUES (61, 0, 1, 'sslpost_name', '_MD_AM_SSLPOST', 'xoops_ssl', '_MD_AM_SSLPOSTDSC', 'textbox', 'text', 31)");
+	$dbm->insert('config', " VALUES (62, 0, 1, 'module_cache', '_MD_AM_MODCACHE', '', '_MD_AM_MODCACHEDSC', 'module_cache', 'array', 50)");
+	$dbm->insert('config', " VALUES (63, 0, 1, 'template_set', '_MD_AM_DTPLSET', 'default', '_MD_AM_DTPLSETDSC', 'tplset', 'other', 14)");
+	$dbm->insert('config', " VALUES (64,0,6,'mailmethod','_MD_AM_MAILERMETHOD','mail','_MD_AM_MAILERMETHODDESC','select','text',4)");
+	$dbm->insert('config', " VALUES (65,0,6,'smtphost','_MD_AM_SMTPHOST','a:1:{i:0;s:0:\"\";}', '_MD_AM_SMTPHOSTDESC','textarea','array',6)");
+	$dbm->insert('config', " VALUES (66,0,6,'smtpuser','_MD_AM_SMTPUSER','','_MD_AM_SMTPUSERDESC','textbox','text',7)");
+	$dbm->insert('config', " VALUES (67,0,6,'smtppass','_MD_AM_SMTPPASS','','_MD_AM_SMTPPASSDESC','password','text',8)");
+	$dbm->insert('config', " VALUES (68,0,6,'sendmailpath','_MD_AM_SENDMAILPATH','/usr/sbin/sendmail','_MD_AM_SENDMAILPATHDESC','textbox','text',5)");
+	$dbm->insert('config', " VALUES (69,0,6,'from','_MD_AM_MAILFROM','','_MD_AM_MAILFROMDESC','textbox','text',1)");
+	$dbm->insert('config', " VALUES (70,0,6,'fromname','_MD_AM_MAILFROMNAME','','_MD_AM_MAILFROMNAMEDESC','textbox','text',2)");
+	$dbm->insert('config', " VALUES (71, 0, 1, 'sslloginlink', '_MD_AM_SSLLINK', 'https://', '_MD_AM_SSLLINKDSC', 'textbox', 'text', 33)");
+	$dbm->insert('config', " VALUES (72, 0, 1, 'theme_set_allowed', '_MD_AM_THEMEOK', '".serialize(array('default'))."', '_MD_AM_THEMEOKDSC', 'theme_multi', 'array', 13)");
+	$dbm->insert('config', " VALUES (73,0,6,'fromuid','_MD_AM_MAILFROMUID','1','_MD_AM_MAILFROMUIDDESC','user','int',3)");
+
+
+	// default the default theme
+
+    $time = time();
+    $dbm->insert('tplset', " VALUES (1, 'default', 'XOOPS Default Theme', '', ".$time.")");
+
+//	include_once './class/cachemanager.php';
+//    $cm = new cache_manager;
+//	$skinfiles = array('1' => 'skin.html', '2' => 'style.css'
+//                        , '3' => 'styleNN.css','4' =>  'styleMAC.css'
+//                        , '5' => 'skin_blockleft.html', '6' => 'skin_blockright.html'
+//                        , '7' => 'skin_blockcenter_l.html', '8' => 'skin_blockcenter_c.html'
+//                        , '9' => 'skin_blockcenter_r.html');
+//    foreach ($skinfiles as $key => $skinfile) {
+//        if(preg_match('/\.css$/', $skinfile)) {
+//            $type = 'css';
+//        }else{
+//            $type = 'skin';
+//        }
+//        $dbm->insert('tplfile', " VALUES ($key, 0, '', 'default', '$skinfile', '', $time, $time, '$type')");
+
+//        $fp = fopen('./templates/default_skin/'.$skinfile, 'r');
+//        $skinsource = fread($fp, filesize('./templates/default_skin/'.$skinfile));
+//        fclose($fp);
+//        $dbm->insert('tplsource', " (tpl_id, tpl_source) VALUES ($key, '".addslashes($skinsource)."')");
+//        if(preg_match('/\.css$/',$skinfile)) {
+//            $cm->write($skinfile, $skinsource);
+//        }
+//    }
+
+        $dbm->query("INSERT INTO ".$dbm->prefix('group_permission')." (gperm_groupid, gperm_itemid) SELECT groupid, block_id FROM ".$dbm->prefix('groups_blocks_link'));
+		$dbm->query("UPDATE ".$dbm->prefix('group_permission')." SET gperm_name = 'block_read'");
+    	$dbm->query("INSERT INTO ".$dbm->prefix('group_permission')." (gperm_groupid, gperm_itemid) SELECT groupid, mid FROM ".$dbm->prefix('groups_modules_link') ." WHERE type='A'");
+		$dbm->query("UPDATE ".$dbm->prefix('group_permission')." SET gperm_name = 'module_admin' WHERE gperm_name = ''");
+    	$dbm->query("INSERT INTO ".$dbm->prefix('group_permission')." (gperm_groupid, gperm_itemid) SELECT groupid, mid FROM ".$dbm->prefix('groups_modules_link')." WHERE type='R'");
+		$dbm->query("UPDATE ".$dbm->prefix('group_permission')." SET gperm_name = 'module_read' WHERE gperm_name = ''");
+		$dbm->query("UPDATE ".$dbm->prefix('group_permission')." SET gperm_modid = 1");
+		$dbm->query('DROP TABLE '.$dbm->prefix('groups_blocks_link'));
+		$dbm->query('DROP TABLE '.$dbm->prefix('groups_modules_link'));
+
+	// insert some more data
+	$result = $dbm->queryFromFile('./sql/'.XOOPS_DB_TYPE.'.data.sql');
+
+	$content = $dbm->report();
+    //$content .= $cm->report();
+	$b_next = array('updateModules', _INSTALL_L14);
+	include 'install_tpl.php';
+	break;
+
+case 'updateModules':
+	$b_next = array('updateModules_go', _INSTALL_L137);
+	$content = "<p>"._INSTALL_L141."</p>\n";
+	include 'install_tpl.php';
+	break;
+
+case 'updateModules_go':
+	unset($xoopsOption['nocommon']);
+	include_once "../mainfile.php";
+?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html>
+<head>
+  <title>XOOPS Custom Installation</title>
+  <meta http-equiv="Content-Type" content="text/html; charset=<?php echo _INSTALL_CHARSET ?>" />
+  <style type="text/css" media="all"><!-- @import url(../xoops.css); --></style>
+  <link rel="stylesheet" type="text/css" media="all" href="style.css" />
+</head>
+<body style="margin: 0; padding: 0;">
+<form action='index.php' method='post'>
+<table width="778" align="center" cellpadding="0" cellspacing="0" background="img/bg_table.gif">
+  <tr>
+    <td width="150"><img src="img/hbar_left.gif" width="100%" height="23" alt="" /></td>
+    <td width="478" background="img/hbar_middle.gif">&nbsp;</td>
+    <td width="150"><img src="img/hbar_right.gif" width="100%" height="23" alt="" /></td>
+  </tr>
+  <tr>
+    <td width="150"><a href="index.php"><img src="img/logo.gif" width="150" height="80" alt="" /></a></td>
+    <td width="478" background="img/bg_darkblue.gif">&nbsp;</td>
+    <td width="150"><img src="img/xoops2.gif" width="100%" height="80"></td>
+  </tr>
+  <tr>
+    <td width="150"><img src="img/hbar_left.gif" width="100%" height="23" alt="" /></td>
+    <td width="478" background="img/hbar_middle.gif">&nbsp;</td>
+    <td width="150"><img src="img/hbar_right.gif" width="100%" height="23" alt="" /></td>
+  </tr>
+</table>
+
+<table width="778" align="center" cellspacing="0" cellpadding="0" background="img/bg_table.gif"
+  <tr>
+    <td width='5%'>&nbsp;</td>
+    <td colspan="3"><h4 style="margin-top: 10px; margin-bottom: 5px; padding: 10px;"><?php echo _INSTALL_L142;?></h4><div style="padding: 10px; text-align:left;">
+<?php
+	$module_handler =& xoops_gethandler('module');
+	$modules =& $module_handler->getObjects(null, true);
+	foreach (array_keys($modules) as $mid) {
+		echo '<h5>'.$modules[$mid]->getVar('name').'</h5>';
+		$dirname = $modules[$mid]->getVar('dirname');
+		if (is_dir(XOOPS_ROOT_PATH.'/modules/'.$dirname)) {
+			$modules[$mid]->loadInfoAsVar($dirname, false);
+			if (!$module_handler->insert($modules[$mid])) {
+				echo '<p>Could not update '.$modules[$mid]->getVar('name').'</p>';
+			} else {
+				$newmid = $modules[$mid]->getVar('mid');
+				$msgs = array();
+				$msgs[] = 'Module data updated.';
+				$tplfile_handler =& xoops_gethandler('tplfile');
+				$templates = $modules[$mid]->getInfo('templates');
+				if ($templates != false) {
+					$msgs[] = 'Generating templates...';
+					foreach ($templates as $tpl) {
+						$tpl['file'] = trim($tpl['file']);
+						$tpldata =& xoops_module_gettemplate($dirname, $tpl['file']);
+						$tplfile =& $tplfile_handler->create();
+						$tplfile->setVar('tpl_refid', $newmid);
+						$tplfile->setVar('tpl_lastimported', 0);
+						$tplfile->setVar('tpl_lastmodified', time());
+						if (preg_match("/\.css$/i", $tpl['file'])) {
+							$tplfile->setVar('tpl_type', 'css');
+						} else {
+							$tplfile->setVar('tpl_type', 'module');
+							//if ($xoopsConfig['default_theme'] == 'default') {
+							//	include_once XOOPS_ROOT_PATH.'/class/template.php';
+							//	xoops_template_touch($tplfile->getVar('tpl_id'));
+							//}
+						}
+						$tplfile->setVar('tpl_source', $tpldata, true);
+						$tplfile->setVar('tpl_module', $dirname);
+						$tplfile->setVar('tpl_tplset', 'default');
+						$tplfile->setVar('tpl_file', $tpl['file'], true);
+						$tplfile->setVar('tpl_desc', $tpl['description'], true);
+						if (!$tplfile_handler->insert($tplfile)) {
+							$msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert template <b>'.$tpl['file'].'</b> to the database.</span>';
+						} else {
+							$msgs[] = '&nbsp;&nbsp;Template <b>'.$tpl['file'].'</b> inserted to the database.';
+						}
+						unset($tpldata);
+					}
+				}
+				$blocks = $modules[$mid]->getInfo('blocks');
+				$msgs[] = 'Rebuilding blocks...';
+				$showfuncs = array();
+				$funcfiles = array();
+				if ($blocks != false) {
+					$count = count($blocks);
+					include_once(XOOPS_ROOT_PATH.'/class/xoopsblock.php');
+					for ( $i = 1; $i <= $count; $i++ ) {
+						if (isset($blocks[$i]['show_func']) && $blocks[$i]['show_func'] != '' && isset($blocks[$i]['file']) && $blocks[$i]['file'] != '') {
+							$editfunc = isset($blocks[$i]['edit_func']) ? $blocks[$i]['edit_func'] : '';
+							$showfuncs[] = $blocks[$i]['show_func'];
+							$funcfiles[] = $blocks[$i]['file'];
+							$template = '';
+							if ((isset($blocks[$i]['template']) && trim($blocks[$i]['template']) != '')) {
+								$content =& xoops_module_gettemplate($dirname, $blocks[$i]['template'], true);
+								$template = $blocks[$i]['template'];
+							}
+							if (!$content) {
+								$content = '';
+							}
+							$options = '';
+							if (isset($blocks[$i]['options']) && $blocks[$i]['options'] != '') {
+								$options = $blocks[$i]['options'];
+							}
+							$sql = "SELECT bid, name FROM ".$xoopsDB->prefix('newblocks')." WHERE mid=".$mid." AND func_num=".$i;
+							$fresult = $xoopsDB->query($sql);
+							$fcount = 0;
+							while ($fblock = $xoopsDB->fetchArray($fresult)) {
+								$fcount++;
+								$sql = "UPDATE ".$xoopsDB->prefix("newblocks")." SET name='".addslashes($blocks[$i]['name'])."', title='".addslashes($blocks[$i]['name'])."', dirname='".addslashes($dirname)."',  func_file='".addslashes($blocks[$i]['file'])."', show_func='".addslashes($blocks[$i]['show_func'])."', template='".addslashes($template)."', edit_func='".addslashes($editfunc)."', options='".addslashes($options)."', content='', template='".$template."', last_modified=".time()." WHERE bid=".$fblock['bid'];
+								$result = $xoopsDB->query($sql);
+								if (!$result) {
+									$msgs[] = '&nbsp;&nbsp;ERROR: Could not update '.$fblock['name'];
+								} else {
+									$msgs[] = '&nbsp;&nbsp;Block <b>'.$fblock['name'].'</b> updated. Block ID: <b>'.$fblock['bid'].'</b>';
+									if ($template != '') {
+										$tplfile =& $tplfile_handler->create();
+										$tplfile->setVar('tpl_refid', $fblock['bid']);
+										$tplfile->setVar('tpl_source', $content, true);
+										$tplfile->setVar('tpl_tplset', 'default');
+										$tplfile->setVar('tpl_file', $blocks[$i]['template']);
+										$tplfile->setVar('tpl_module', $dirname);
+										$tplfile->setVar('tpl_type', 'block');
+										$tplfile->setVar('tpl_desc', $blocks[$i]['description'], true);
+										$tplfile->setVar('tpl_lastimported', 0);
+										$tplfile->setVar('tpl_lastmodified', time());
+										if (!$tplfile_handler->insert($tplfile)) {
+											$msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert template <b>'.$blocks[$i]['template'].'</b> to the database.</span>';
+										} else {
+											$msgs[] = '&nbsp;&nbsp;Template <b>'.$blocks[$i]['template'].'</b> inserted to the database.';
+											//if ($xoopsConfig['default_theme'] == 'default') {
+											//	if (!xoops_template_touch($tplfile[0]->getVar('tpl_id'))) {
+											//		$msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not recompile template <b>'.$blocks[$i]['template'].'</b>.</span>';
+											//	} else {
+											//		$msgs[] = '&nbsp;&nbsp;Template <b>'.$blocks[$i]['template'].'</b> recompiled.';
+											//	}
+											//}
+										}
+									}
+								}
+							}
+							if ($fcount == 0) {
+								$newbid = $xoopsDB->genId($xoopsDB->prefix('newblocks').'_bid_seq');
+								$block_name = addslashes($blocks[$i]['name']);
+								$sql = "INSERT INTO ".$xoopsDB->prefix("newblocks")." (bid, mid, func_num, options, name, title, content, side, weight, visible, block_type, isactive, dirname, func_file, show_func, edit_func, template, last_modified) VALUES (".$newbid.", ".$mid.", ".$i.",'".addslashes($options)."','".$block_name."', '".$block_name."', '', 0, 0, 0, 'M', 1, '".addslashes($dirname)."', '".addslashes($blocks[$i]['file'])."', '".addslashes($blocks[$i]['show_func'])."', '".addslashes($editfunc)."', '".$template."', ".time().")";
+								$result = $xoopsDB->query($sql);
+								if (!$result) {
+									$msgs[] = '&nbsp;&nbsp;ERROR: Could not create '.$blocks[$i]['name'];
+								} else {
+									if (empty($newbid)) {
+										$newbid = $xoopsDB->getInsertId();
+									}
+									if ($template != '') {
+										$tplfile =& $tplfile_handler->create();
+										$tplfile->setVar('tpl_module', $dirname);
+										$tplfile->setVar('tpl_refid', $newbid);
+										$tplfile->setVar('tpl_source', $content, true);
+										$tplfile->setVar('tpl_tplset', 'default');
+										$tplfile->setVar('tpl_file', $blocks[$i]['template'], true);
+										$tplfile->setVar('tpl_type', 'block');
+										$tplfile->setVar('tpl_lastimported', 0);
+										$tplfile->setVar('tpl_lastmodified', time());
+										$tplfile->setVar('tpl_desc', $blocks[$i]['description'], true);
+										if (!$tplfile_handler->insert($tplfile)) {
+											$msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert template <b>'.$blocks[$i]['template'].'</b> to the database.</span>';
+										} else {
+											$msgs[] = '&nbsp;&nbsp;Template <b>'.$blocks[$i]['template'].'</b> inserted to the database.';
+										}
+									}
+									$msgs[] = '&nbsp;&nbsp;Block <b>'.$blocks[$i]['name'].'</b> created. Block ID: <b>'.$newbid.'</b>';
+								}
+							}
+						}
+					}
+				}
+				$block_arr = XoopsBlock::getByModule($mid);
+				foreach ($block_arr as $block) {
+					if (!in_array($block->getVar('show_func'), $showfuncs) || !in_array($block->getVar('func_file'), $funcfiles)) {
+						$sql = sprintf("DELETE FROM %s WHERE bid = %u", $xoopsDB->prefix('newblocks'), $block->getVar('bid'));
+						if(!$xoopsDB->query($sql)) {
+							$msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete block <b>'.$block->getVar('name').'</b>. Block ID: <b>'.$block->getVar('bid').'</b></span>';
+						} else {
+							$msgs[] = '&nbsp;&nbsp;Block <b>'.$block->getVar('name').' deleted. Block ID: <b>'.$block->getVar('bid').'</b>';
+						}
+					}
+				}
+
+				$configs = $modules[$mid]->getInfo('config');
+				if ($configs != false) {
+					if ($modules[$mid]->getVar('hascomments') != 0) {
+						include_once(XOOPS_ROOT_PATH.'/include/comment_constants.php');
+						array_push($configs, array('name' => 'com_rule', 'title' => '_CM_COMRULES', 'description' => '', 'formtype' => 'select', 'valuetype' => 'int', 'default' => 1, 'options' => array('_CM_COMAPPROVEALL' => XOOPS_COMMENT_APPROVEALL, '_CM_COMAPPROVEUSER' => XOOPS_COMMENT_APPROVEUSER, '_CM_COMAPPROVEADMIN' => XOOPS_COMMENT_APPROVEADMIN)));
+						array_push($configs, array('name' => 'com_anonpost', 'title' => '_CM_COMANONPOST', 'description' => '', 'formtype' => 'yesno', 'valuetype' => 'int', 'default' => 0));
+					}
+				} else {
+					if ($modules[$mid]->getVar('hascomments') != 0) {
+						$configs = array();
+						include_once(XOOPS_ROOT_PATH.'/include/comment_constants.php');
+						$configs[] = array('name' => 'com_rule', 'title' => '_CM_COMRULES', 'description' => '', 'formtype' => 'select', 'valuetype' => 'int', 'default' => 1, 'options' => array('_CM_COMAPPROVEALL' => XOOPS_COMMENT_APPROVEALL, '_CM_COMAPPROVEUSER' => XOOPS_COMMENT_APPROVEUSER, '_CM_COMAPPROVEADMIN' => XOOPS_COMMENT_APPROVEADMIN));
+						array_push($configs, array('name' => 'com_anonpost', 'title' => '_CM_COMANONPOST', 'description' => '', 'formtype' => 'yesno', 'valuetype' => 'int', 'default' => 0));
+					}
+				}
+				// RMV-NOTIFY
+				if ($modules[$mid]->getVar('hasnotification') != 0) {
+					if (empty($configs)) {
+						$configs = array();
+					}
+					include_once(XOOPS_ROOT_PATH.'/include/notification_constants.php');
+					$configs[] = array ('name' => 'notification_enabled', 'title' => '_NOT_CONFIG_ENABLED', 'description' => '_NOT_CONFIG_ENABLEDDSC', 'formtype' => 'select', 'valuetype' => 'int', 'default' => XOOPS_NOTIFICATION_ENABLEBOTH, 'options' => $options);
+				}
+
+				if ($configs != false) {
+					$msgs[] = 'Adding module config data...';
+					$config_handler =& xoops_gethandler('config');
+					$order = 0;
+					foreach ($configs as $config) {
+						$confobj =& $config_handler->createConfig();
+						$confobj->setVar('conf_modid', $newmid);
+						$confobj->setVar('conf_catid', 0);
+						$confobj->setVar('conf_name', $config['name']);
+						$confobj->setVar('conf_title', $config['title'], true);
+						$confobj->setVar('conf_desc', $config['description'], true);
+						$confobj->setVar('conf_formtype', $config['formtype']);
+						$confobj->setVar('conf_valuetype', $config['valuetype']);
+						$confobj->setVar('conf_value', $config['default'], true);
+						$confobj->setVar('conf_order', $order);
+						$confop_msgs = '';
+						if (isset($config['options']) && is_array($config['options'])) {
+							foreach ($config['options'] as $key => $value) {
+								$confop =& $config_handler->createConfigOption();
+								$confop->setVar('confop_name', $key, true);
+								$confop->setVar('confop_value', $value, true);
+								$confobj->setConfOptions($confop);
+								$confop_msgs .= '<br />&nbsp;&nbsp;&nbsp;&nbsp;Config option added. Name: <b>'.$key.'</b> Value: <b>'.$value.'</b>';
+								unset($confop);
+							}
+						}
+						$order++;
+						if ($config_handler->insertConfig($confobj) != false) {
+							$msgs[] = '&nbsp;&nbsp;Config <b>'.$config['name'].'</b> added to the database.'.$confop_msgs;
+						} else {
+							$msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert config <b>'.$config['name'].'</b> to the database.</span>';
+						}
+						unset($confobj);
+					}
+					unset($configs);
+				}
+				foreach ($msgs as $msg) {
+					echo '<code>'.$msg.'</code><br />';
+				}
+			}
+			// data for table 'block_module_link'
+			include_once './class/dbmanager.php';
+    		$dbm = new db_manager;
+    		$sql = 'SELECT bid, side FROM '.$dbm->prefix('newblocks');
+    		$result = $dbm->query($sql);
+
+    		while ($myrow = $dbm->fetchArray($result)) {
+        		if ($myrow['side'] == 0) {
+            		$dbm->insert("block_module_link", " VALUES (".$myrow['bid'].", 0)");
+        		} else {
+            		$dbm->insert("block_module_link", " VALUES (".$myrow['bid'].", -1)");
+        		}
+    		}
+		}
+		echo '<br />';
+		flush();
+		sleep(1);
+	}
+?>
+	</div></td>
+    <td width='5%'>&nbsp;</td>
+  </tr>
+  <tr>
+    <td width='5%'>&nbsp;</td>
+    <td width='35%' align='left'>&nbsp;</td>
+    <td width='20%' align='center'>&nbsp;</td>
+    <td width='35%' align='right'><span style='font-size:85%;'><?php echo _INSTALL_L14;?> >></span> <input type='hidden' name='op' value='updateComments' /><input type='submit' name='submit' value='<?php echo _INSTALL_L47;?>' /></td>
+    <td width='5%'>&nbsp;</td>
+  </tr>
+  <tr>
+    <td colspan="5">&nbsp;</td>
+  </tr>
+</table>
+
+<table width="778" cellspacing="0" cellpadding="0" align="center" background="img/bg_table.gif">
+  <tr>
+    <td width="150"><img src="img/hbar_left.gif" width="100%" height="23" alt="" /></td>
+    <td width="478" background="img/hbar_middle.gif">&nbsp;</td>
+    <td width="150"><img src="img/hbar_installer_right.gif" width="100%" height="23" alt="" /></td>
+  </tr>
+</table>
+</form>
+</body>
+</html>
+<?php
+	break;
+
+case 'updateComments':
+	$content = "<p>"._INSTALL_L149."</p>\n";
+	$b_next = array('updateComments_go', _INSTALL_L138);
+	include 'install_tpl.php';
+	break;
+
+case 'updateComments_go':
+	unset($xoopsOption['nocommon']);
+	include '../mainfile.php';
+	include '../class/xoopscomments.php';
+	include '../include/comment_constants.php';
+	$module_handler =& xoops_gethandler('module');
+	$old_commentd_mods = array('news' => 'comments', 'xoopspoll' => 'xoopspollcomments');
+	$title = _INSTALL_L147;
+	$content = '';
+	foreach ($old_commentd_mods as $module => $com_table) {
+		$moduleobj =& $module_handler->getByDirname($module);
+		if (is_object($moduleobj)) {
+			$content .= '<h5>'.$moduleobj->getVar('name').'</h5>';
+			$comment_handler =& xoops_gethandler('comment');
+			$criteria = new CriteriaCompo();
+			$criteria->setOrder('DESC');
+			$criteria->setSort('com_id');
+			$criteria->setLimit(1);
+			$last_comment =& $comment_handler->getObjects($criteria);
+			$offset = (is_array($last_comment) && count($last_comment) > 0) ? $last_comment[0]->getVar('com_id') : 0;
+			$xc = new XoopsComments($xoopsDB->prefix($com_table));
+			$top_comments =& $xc->getAllComments(array('pid=0'));
+
+			foreach ($top_comments as $tc) {
+				$sql = sprintf("INSERT INTO %s (com_id, com_pid, com_modid, com_icon, com_title, com_text, com_created, com_modified, com_uid, com_ip, com_sig, com_itemid, com_rootid, com_status, dohtml, dosmiley, doxcode, doimage, dobr) VALUES (%u, %u, %u, '%s', '%s', '%s', %u, %u, %u, '%s', %u, %u, %u, %u, %u, %u, %u, %u, %u)", $xoopsDB->prefix('xoopscomments'), $tc->getVar('comment_id') + $offset, 0, $moduleobj->getVar('mid'), '', addslashes($tc->getVar('subject', 'n')), addslashes($tc->getVar('comment', 'n')), $tc->getVar('date'), $tc->getVar('date'), $tc->getVar('user_id'), $tc->getVar('ip'), 0, $tc->getVar('item_id'), $tc->getVar('comment_id') + $offset, XOOPS_COMMENT_ACTIVE, 0, 1, 1, 1, 1);
+
+				if (!$xoopsDB->query($sql)) {
+					$content .= _NGIMG.sprintf(_INSTALL_L146, $tc->getVar('comment_id') + $offset).'<br />';
+				} else {
+					$content .= _OKIMG.sprintf(_INSTALL_L145, $tc->getVar('comment_id') + $offset).'<br />';
+					$child_comments = $tc->getCommentTree();
+					foreach ($child_comments as $cc) {
+						$sql = sprintf("INSERT INTO %s (com_id, com_pid, com_modid, com_icon, com_title, com_text, com_created, com_modified, com_uid, com_ip, com_sig, com_itemid, com_rootid, com_status, dohtml, dosmiley, doxcode, doimage, dobr) VALUES (%u, %u, %u, '%s', '%s', '%s', %u, %u, %u, '%s', %u, %u, %u, %u, %u, %u, %u, %u, %u)", $xoopsDB->prefix('xoopscomments'), $cc->getVar('comment_id') + $offset, $cc->getVar('pid') + $offset, $moduleobj->getVar('mid'), '', addslashes($cc->getVar('subject', 'n')), addslashes($cc->getVar('comment', 'n')), $cc->getVar('date'), $cc->getVar('date'), $cc->getVar('user_id'), $cc->getVar('ip'), 0, $cc->getVar('item_id'), $tc->getVar('comment_id') + $offset, XOOPS_COMMENT_ACTIVE, 0, 1, 1, 1, 1);
+						if (!$xoopsDB->query($sql)) {
+							$content .= _NGIMG.sprintf(_INSTALL_L146, $cc->getVar('comment_id') + $offset).'<br />';
+						} else {
+							$content .= _OKIMG.sprintf(_INSTALL_L145, $cc->getVar('comment_id') + $offset).'<br />';
+						}
+					}
+				}
+			}
+		}
+	}
+	$xoopsDB->query('ALTER TABLE '.$xoopsDB->prefix('xoopscomments').' CHANGE com_id com_id mediumint(8) unsigned NOT NULL auto_increment PRIMARY KEY');
+	$b_next = array('updateSmilies', _INSTALL_L14);
+	include 'install_tpl.php';
+	break;
+
+case 'updateSmilies':
+	$content = '<p>'._INSTALL_L150.'</p>';
+	$b_next = array('updateSmilies_go', _INSTALL_L140);
+	include 'install_tpl.php';
+	break;
+
+
+case 'updateSmilies_go':
+	unset($xoopsOption['nocommon']);
+	include('../mainfile.php');
+	$result = $xoopsDB->query("SELECT * FROM ".$xoopsDB->prefix('smiles'));
+	$content = '';
+	$title = _INSTALL_L155;
+	if (!defined('XOOPS_UPLOAD_PATH')) {
+		define('XOOPS_UPLOAD_PATH', '../uploads');
+	}
+	while ($smiley = $xoopsDB->fetchArray($result)) {
+		if (file_exists('../images/smilies/'.$smiley['smile_url']) && false != $fp = fopen('../images/smilies/'.$smiley['smile_url'], 'rb')) {
+			$binary = fread($fp, filesize('../images/smilies/'.$smiley['smile_url']));
+			fclose($fp);
+			if (!preg_match("/\.([a-zA-Z0-9]+)$/", $smiley['smile_url'], $matched)) {
+            	continue;
+        	}
+            $newsmiley = uniqid('smil').'.'.strtolower($matched[1]);
+			if (false != $fp = fopen(XOOPS_UPLOAD_PATH.'/'.$newsmiley, 'wb')) {
+				if (-1 != fwrite($fp, $binary)) {
+					$xoopsDB->query("UPDATE ".$xoopsDB->prefix('smiles')." SET smile_url='".$newsmiley."' WHERE id=".$smiley['id']);
+					$content .= _OKIMG.sprintf(_INSTALL_L154, $smiley['smile_url']).'<br />';
+				} else {
+					$content .= _NGIMG.sprintf(_INSTALL_L153, $smiley['smile_url']).'<br />';
+				}
+				fclose($fp);
+			}
+		} else {
+			$content .= _OKIMG.sprintf(_INSTALL_L152, $smiley['smile_url']).'<br />';
+		}
+	}
+	$result = $xoopsDB->query("SELECT * FROM ".$xoopsDB->prefix('ranks'));
+	while ($rank = $xoopsDB->fetchArray($result)) {
+		if (file_exists('../images/ranks/'.$rank['rank_image']) && false != $fp = fopen('../images/ranks/'.$rank['rank_image'], 'rb')) {
+			$binary = fread($fp, filesize('../images/ranks/'.$rank['rank_image']));
+			fclose($fp);
+			if (!preg_match("/\.([a-zA-Z0-9]+)$/", $rank['rank_image'], $matched)) {
+            	continue;
+        	}
+            $newrank = uniqid('rank').'.'.strtolower($matched[1]);
+			if (false != $fp = fopen(XOOPS_UPLOAD_PATH.'/'.$newrank, 'wb')) {
+				if (-1 != fwrite($fp, $binary)) {
+					$content .= _OKIMG.sprintf(_INSTALL_L154, $rank['rank_image']).'<br />';
+					$xoopsDB->query("UPDATE ".$xoopsDB->prefix('ranks')." SET rank_image='".$newrank."' WHERE rank_id=".$rank['rank_id']);
+				} else {
+					$content .= _NGIMG.sprintf(_INSTALL_L153, $rank['rank_image']).'<br />';
+				}
+				fclose($fp);
+			}
+		} else {
+			$content .= _OKIMG.sprintf(_INSTALL_L152, $rank['rank_image']).'<br />';
+		}
+	}
+	$b_next = array('updateAvatars', _INSTALL_L14);
+	include 'install_tpl.php';
+	break;
+
+case 'updateAvatars':
+	$content = '<p>'._INSTALL_L151.'</p>';
+	$b_next = array('updateAvatars_go', _INSTALL_L139);
+	include 'install_tpl.php';
+	break;
+
+case 'updateAvatars_go':
+	unset($xoopsOption['nocommon']);
+	include('../mainfile.php');
+	$content = '';
+	$title = _INSTALL_L156;
+	$avatars = getImageFileList(XOOPS_ROOT_PATH.'/images/avatar/users/');
+	$xoopsDB->query("UPDATE ".$xoopsDB->prefix('users')." SET user_avatar='blank.gif'");
+	$avt_handler =& xoops_gethandler('avatar');
+	if (!defined('XOOPS_UPLOAD_PATH')) {
+		define('XOOPS_UPLOAD_PATH', '../uploads');
+	}
+	foreach ($avatars as $avatar_file) {
+		if (preg_match("/^([0-9]+)\.([a-zA-Z]+)$/", $avatar_file, $matched)) {
+			$user_id = intval($matched[1]);
+			if ($user_id > 0 && false != $fp = fopen('../images/avatar/users/'.$avatar_file, 'rb')) {
+				$binary = fread($fp, filesize('../images/avatar/users/'.$avatar_file));
+				fclose($fp);
+            	$newavatar = uniqid('cavt').'.'.strtolower($matched[2]);
+				if (false != $fp = fopen(XOOPS_UPLOAD_PATH.'/'.$newavatar, 'wb')) {
+					if (-1 != fwrite($fp, $binary)) {
+						$error = false;
+						if (!$xoopsDB->query("UPDATE ".$xoopsDB->prefix('users')." SET user_avatar='".$newavatar."' WHERE uid=".$user_id)) {
+							$error = true;
+						} else {
+							$avatar =& $avt_handler->create();
+							$avatar->setVar('avatar_file', $newavatar);
+							$avatar->setVar('avatar_name', 'custom');
+							$avatar->setVar('avatar_mimetype', '');
+							$avatar->setVar('avatar_display', 1);
+							$avatar->setVar('avatar_type', 'C');
+							if(!$avt_handler->insert($avatar)) {
+								$error = true;
+							} else {
+								$avt_handler->addUser($avatar->getVar('avatar_id'), $user['uid']);
+							}
+						}
+						if (false != $error) {
+							$content .= _NGIMG.sprintf(_INSTALL_L153, $avatar_file).'<br />';
+							@unlink(XOOPS_UPLOAD_PATH.'/'.$newavatar);
+						} else {
+							$content .= _OKIMG.sprintf(_INSTALL_L154, $avatar_file).'<br />';
+						}
+					} else {
+						$content .= _NGIMG.sprintf(_INSTALL_L153, $avatar_file).'<br />';
+						$xoopsDB->query("UPDATE ".$xoopsDB->prefix('users')." SET user_avatar='blank.gif' WHERE uid=".$user_id);
+					}
+					fclose($fp);
+				}
+			} else {
+				$content .= _NGIMG.sprintf(_INSTALL_L152, $avatar_file).'<br />';
+			}
+		}
+	}
+
+	$b_next = array('finish', _INSTALL_L14);
+	include 'install_tpl.php';
+	break;
+
+
+case "siteInit":
+    include_once "../mainfile.php";
+
+    $content = "<table align='center' width='70%'>\n";
+    $content .= "<tr><td colspan='2' align='center'>"._INSTALL_L36."</td></tr>\n";
+    $content .= "<tr><td align='right'><b>"._INSTALL_L37."</b></td><td><input type=\"text\" name=\"adminname\" /></td></tr>\n";
+    $content .= "<tr><td align='right'><b>"._INSTALL_L38."</b></td><td><input type='text' name='adminmail' value='' maxlength='60' /></td></tr>\n";
+    $content .= "<tr><td align='right'><b>"._INSTALL_L39."</b></td><td><input type='password' name='adminpass' /></td></tr>\n";
+    $content .= "<tr><td align='right'><b>"._INSTALL_L74."</b></td><td><input type='password' name='adminpass2' /></td></tr>\n";
+    $content .= "</table>\n";
+    $b_next = array('insertData', _INSTALL_L116);
+
+    include 'install_tpl.php';
+    break;
+
+case "insertData":
+    $adminname = $myts->stripSlashesGPC($_POST['adminname']);
+    $adminpass = $myts->stripSlashesGPC($_POST['adminpass']);
+    $adminpass2 = $myts->stripSlashesGPC($_POST['adminpass2']);
+    $adminmail = $myts->stripSlashesGPC($_POST['adminmail']);
+
+    if (!preg_match("/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+([\.][a-z0-9-]+)+$/i",$adminmail)) {
+        $content = "<p>"._INSTALL_L73."</p>\n";
+        $b_back = array('', _INSTALL_L112 );
+        include 'install_tpl.php';
+        exit();
+    }
+    if ( !isset($adminname) || !isset($adminpass) || !isset($adminmail) || $adminmail == "" || $adminname =="" || $adminpass =="" || $adminpass != $adminpass2) {
+        $content = "<p>"._INSTALL_L41."</p>\n";
+        $b_back = array('', _INSTALL_L112 );
+        include 'install_tpl.php';
+        exit();
+    }
+
+    include_once "../mainfile.php";
+    //include_once './include/createtables2.php';
+    include_once './makedata.php';
+    include_once './class/dbmanager.php';
+    $dbm = new db_manager;
+    include_once './class/cachemanager.php';
+    $cm = new cache_manager;
+
+    $language = check_language($language);
+    if ( file_exists("./language/".$language."/install2.php") ) {
+        include_once "./language/".$language."/install2.php";
+    } elseif ( file_exists("./language/english/install2.php") ) {
+        include_once "./language/english/install2.php";
+        $language = 'english';
+    } else {
+        echo 'no language file (install2.php).';
+        exit();
+    }
+
+    //$tables = array();
+    $result = $dbm->queryFromFile('./sql/'.XOOPS_DB_TYPE.'.data.sql');
+
+    $result = $dbm->queryFromFile('./language/'.$language.'/'.XOOPS_DB_TYPE.'.lang.data.sql');
+
+    $group = make_groups($dbm);
+    $result = make_data($dbm, $cm, $adminname, $adminpass, $adminmail, $language, $group);
+
+    $content = $dbm->report();
+    $content .= $cm->report();
+    include_once "./class/mainfilemanager.php";
+    $mm = new mainfile_manager("../mainfile.php");
+    foreach($group as $key => $val){
+        $mm->setRewrite($key, intval($val));
+    }
+    $result = $mm->doRewrite();
+    $content .= $mm->report();
+
+    $b_next = array('finish', _INSTALL_L117);
+    $title = _INSTALL_L116;
+    setcookie('xoops_session', '', time() - 3600);
+    include 'install_tpl.php';
+
+    break;
+
+case 'finish':
+
+    $title = _INSTALL_L32;
+    $content = "<table width='60%' align='center'><tr><td align='left'>\n";
+    include './language/'.$language.'/finish.php';
+    $content .= "</td></tr></table>\n";
+    include 'install_tpl.php';
+    break;
+}
+
+/*
+ * gets list of name of directories inside a directory
+ */
+function getDirList($dirname)
+{
+    $dirlist = array();
+    if (is_dir($dirname) && $handle = opendir($dirname)) {
+        while (false !== ($file = readdir($handle))) {
+            if ( !preg_match("/^[.]{1,2}$/",$file) ) {
+                if (strtolower($file) != 'cvs' && is_dir($dirname.$file) ) {
+                    $dirlist[$file]=$file;
+                }
+            }
+        }
+        closedir($handle);
+        asort($dirlist);
+        reset($dirlist);
+    }
+    return $dirlist;
+}
+
+/*
+ * gets list of name of files within a directory
+ */
+function getImageFileList($dirname)
+{
+    $filelist = array();
+    if (is_dir($dirname) && $handle = opendir($dirname)) {
+        while (false !== ($file = readdir($handle))) {
+            if (!preg_match("/^[.]{1,2}$/",$file) && preg_match("/[.gif|.jpg|.png]$/i",$file) ) {
+                    $filelist[$file]=$file;
+            }
+        }
+        closedir($handle);
+        asort($filelist);
+        reset($filelist);
+    }
+    return $filelist;
+}
+
+function &xoops_module_gettemplate($dirname, $template, $block=false)
+{
+	if ($block) {
+		$path = XOOPS_ROOT_PATH.'/modules/'.$dirname.'/templates/blocks/'.$template;
+	} else {
+		$path = XOOPS_ROOT_PATH.'/modules/'.$dirname.'/templates/'.$template;
+	}
+	if (!file_exists($path)) {
+		return false;
+	} else {
+		$lines = file($path);
+	}
+	if (!$lines) {
+		return false;
+	}
+	$ret = '';
+	$count = count($lines);
+	for ($i = 0; $i < $count; $i++) {
+		$ret .= str_replace("\n", "\r\n", str_replace("\r\n", "\n", $lines[$i]));
+	}
+	return $ret;
+}
+
+function check_language($language){
+     if ( file_exists('../modules/system/language/'.$language.'/modinfo.php') ) {
+        return $language;
+    } else {
+        return 'english';
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/index.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/install_tpl.php
===================================================================
--- XoopsCore/trunk/htdocs/install/install_tpl.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/install_tpl.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,97 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html>
+<head>
+  <title>XOOPS Custom Installation</title>
+  <meta http-equiv="Content-Type" content="text/html; charset=<?php echo _INSTALL_CHARSET ?>" />
+  <style type="text/css" media="all"><!-- @import url(../xoops.css); --></style>
+  <link rel="stylesheet" type="text/css" media="all" href="style.css" />
+</head>
+<body style="margin: 0; padding: 0;">
+<form action='index.php' method='post'>
+<table width="778" align="center" cellpadding="0" cellspacing="0" background="img/bg_table.gif">
+  <tr>
+    <td width="150"><img src="img/hbar_left.gif" width="100%" height="23" alt="" /></td>
+    <td width="478" background="img/hbar_middle.gif">&nbsp;</td>
+    <td width="150"><img src="img/hbar_right.gif" width="100%" height="23" alt="" /></td>
+  </tr>
+  <tr>
+    <td width="150"><a href="index.php"><img src="img/logo.gif" width="150" height="80" alt="" /></a></td>
+    <td width="478" background="img/bg_darkblue.gif">&nbsp;</td>
+    <td width="150"><img src="img/xoops2.gif" width="100%" height="80"></td>
+  </tr>
+  <tr>
+    <td width="150"><img src="img/hbar_left.gif" width="100%" height="23" alt="" /></td>
+    <td width="478" background="img/hbar_middle.gif">&nbsp;</td>
+    <td width="150"><img src="img/hbar_right.gif" width="100%" height="23" alt="" /></td>
+  </tr>
+</table>
+
+<table width="778" align="center" cellspacing="0" cellpadding="0" background="img/bg_table.gif"
+  <tr>
+    <td width='5%'>&nbsp;</td>
+    <td colspan="3"><?php if(!empty($title)) echo '<h4 style="margin-top: 10px; margin-bottom: 5px; padding: 10px;">'.$title.'</h4>'; echo '<div style="padding: 10px;">'.$content.'</div>'; ?></td>
+    <td width='5%'>&nbsp;</td>
+  </tr>
+  <tr>
+    <td width='5%'>&nbsp;</td>
+    <td width='35%' align='left'><?php echo b_back($b_back); ?></td>
+    <td width='20%' align='center'><?php echo b_reload($b_reload); ?></td>
+    <td width='35%' align='right'><?php echo b_next($b_next); ?></td>
+    <td width='5%'>&nbsp;</td>
+  </tr>
+  <tr>
+    <td colspan="5">&nbsp;</td>
+  </tr>
+</table>
+
+<table width="778" cellspacing="0" cellpadding="0" align="center" background="img/bg_table.gif">
+  <tr>
+    <td width="150"><img src="img/hbar_left.gif" width="100%" height="23" alt="" /></td>
+    <td width="478" background="img/hbar_middle.gif">&nbsp;</td>
+    <td width="150"><img src="img/hbar_installer_right.gif" width="100%" height="23" alt="" /></td>
+  </tr>
+</table>
+</form>
+</body>
+</html>
+<?php
+function b_back($option = null)
+{
+    if(!isset($option) || !is_array($option)) return '';
+    $content = '';
+    if(isset($option[0]) && $option[0] != ''){
+        $content .= "<input type='button' value='"
+            ._INSTALL_L42."' onclick=\"location='index.php?op="
+            .htmlspecialchars($option[0])."'\" /> ";
+    }else{
+        $content .= "<input type='button' value='"
+            ._INSTALL_L42."' onclick=\"javascript:history.back();\" /> ";
+    }
+    if(isset($option[1]) && $option[1] != ''){
+        $content .= "<span style='font-size:85%;'><< "
+                .htmlspecialchars($option[1])."</span> ";
+    }
+    return $content;
+}
+
+function b_reload($option=''){
+    if(empty($option)) return '';
+	if (!defined('_INSTALL_L200')) {
+		define('_INSTALL_L200', 'Reload');
+	}
+    return  "<input type='button' value='"._INSTALL_L200."' onclick=\"location.reload();\" /> ";
+}
+
+function b_next($option=null){
+    if(!isset($option) || !is_array($option)) return '';
+    $content = '';
+    if(isset($option[1]) && $option[1] != ''){
+        $content .= "<span style='font-size:85%;'>"
+                .htmlspecialchars($option[1])." >></span>";
+    }
+    $content .= "<input type='hidden' name='op' value='"
+                .htmlspecialchars($option[0])."' />\n";
+    $content .= "<input type='submit' name='submit' value='"._INSTALL_L47."' />\n";
+    return $content;
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/install_tpl.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/language/english/finish.php
===================================================================
--- XoopsCore/trunk/htdocs/install/language/english/finish.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/language/english/finish.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,11 @@
+<?php
+// $Id$
+$content .=
+"<u><b>Your site</b></u>
+<p>Click <a href='../index.php'>HERE</a> to see the home page of your site.</p>
+<u><b>Way to use</b></u>
+<p>[not yet]</p>
+<u><b>Support</b></u>
+<p>Visit <a href='http://www.xoops.org/' target='_blank'>XOOPS.org</a></p>
+";
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/language/english/finish.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/language/english/install.php
===================================================================
--- XoopsCore/trunk/htdocs/install/language/english/install.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/language/english/install.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,181 @@
+<?php
+// $Id$
+define("_INSTALL_L0","Welcome to the Install Wizard for XOOPS 2.0");
+define("_INSTALL_L70","Please change the file permission for mainfile.php so that it is writeable by the server (i.e. chmod 777 mainfile.php on a UNIX/LINUX server, or check the properties of the file and make sure the read-only flag is not set on a Windows server ). Reload this page once you have changed the permission setting.");
+//define("_INSTALL_L71","Click on the button below to begin the installation.");
+define("_INSTALL_L1","Open mainfile.php with your text editor and find the following codes on line 31:");
+define("_INSTALL_L2","Now, change this line to:");
+define("_INSTALL_L3","Next, on line 35, change %s to %s");
+define("_INSTALL_L4","OK, I have set the above setings, let me try again!");
+define("_INSTALL_L5","WARNING!");
+define("_INSTALL_L6","There is a mismatch between your XOOPS_ROOT_PATH configuration on line 31 of mainfile.php and the root path info we have detected.");
+define("_INSTALL_L7","Your setting: ");
+define("_INSTALL_L8","We detected: ");
+define("_INSTALL_L9","( On MS platforms, you may receive this error message even when your configuration is correct. If that is the case, please press the button below to continue)");
+define("_INSTALL_L10","Plesae press the button below to continue if this is really ok.");
+define("_INSTALL_L11","The server path to your XOOPS root directory: ");
+define("_INSTALL_L12","URL to your XOOPS root directory: ");
+define("_INSTALL_L13","If the above setting is correct, press the button below to continue.");
+define("_INSTALL_L14","Next");
+define("_INSTALL_L15","Please open mainfile.php and enter required DB settings data");
+define("_INSTALL_L16","%s is the hostname of your database server.");
+define("_INSTALL_L17","%s is the username of your database account.");
+define("_INSTALL_L18","%s is the password required to access your database.");
+define("_INSTALL_L19","%s is the name of your database in which XOOPS tables will be created.");
+define("_INSTALL_L20","%s is the prefix for tables that will be made during the installation.");
+define("_INSTALL_L21","The following database was not found on the server:");
+define("_INSTALL_L22","Attempt to create it?");
+define("_INSTALL_L23","Yes");
+define("_INSTALL_L24","No");
+define("_INSTALL_L25","We have detected the following database information from your configuration in mainfile.php. Please fix it now if this is not correct.");
+define("_INSTALL_L26","Database Configuration");
+define("_INSTALL_L51","Database");
+define("_INSTALL_L66","Choose the database to be used");
+define("_INSTALL_L27","Database Hostname");
+define("_INSTALL_L67","Hostname of the database server. If you are unsure, 'localhost' works in most cases.");
+define("_INSTALL_L28","Database Username");
+define("_INSTALL_L65","Your database user account on the host");
+define("_INSTALL_L29","Database Name");
+define("_INSTALL_L64","The name of database on the host. The installer will attempt to create the database if not exist");
+define("_INSTALL_L52","Database Password");
+define("_INSTALL_L68","Password for your database user account");
+define("_INSTALL_L30","Table Prefix");
+define("_INSTALL_L63","This prefix will be added to all new tables created to avoid name conflict in the database. If you are unsure, just use the default 'xoops'.");
+define("_INSTALL_L54","Use persistent connection?");
+define("_INSTALL_L69","Default is 'NO'. Choose 'NO' if you are unsure.");
+define("_INSTALL_L55","XOOPS Physical Path");
+define("_INSTALL_L59","Physical path to your main XOOPS directory WITHOUT trailing slash");
+define("_INSTALL_L56","XOOPS Virtual Path (URL)");
+define("_INSTALL_L58","Virtual path to your main XOOPS directory WITHOUT trailing slash");
+
+define("_INSTALL_L31","Could not create database. Contact the server administrator for details.");
+define("_INSTALL_L32","Installation Complete");
+define("_INSTALL_L33","Click <a href='../index.php'>HERE</a> to see the home page of your site.");
+define("_INSTALL_L35","If you had any errors, please contact the dev team at <a href='http://www.xoops.org/' target='_blank'>XOOPS.org</a>");
+define("_INSTALL_L36","Please choose your site admin's name and password.");
+define("_INSTALL_L37","Admin Name");
+define("_INSTALL_L38","Admin Email");
+define("_INSTALL_L39","Admin Password");
+define("_INSTALL_L74","Confirm Password");
+define("_INSTALL_L40","Create Tables");
+define("_INSTALL_L41","Please go back and type in all the required info.");
+define("_INSTALL_L42","Back");
+define("_INSTALL_L57","Please enter %s");
+
+// %s is database name
+define("_INSTALL_L43","Database %s created!");
+
+// %s is table name
+define("_INSTALL_L44","Unable to make %s");
+define("_INSTALL_L45","Table %s created.");
+
+define("_INSTALL_L46","In order for the modules included in the package to work correctly, the following files must be writeable by the server. Please change the permission setting for these files. (i.e. 'chmod 666 file_name' and 'chmod 777 dir_name' on a UNIX/LINUX server, or check the properties of the file and make sure the read-only flag is not set on a Windows server)");
+define("_INSTALL_L47","Next");
+
+define("_INSTALL_L53","Please confirm the following submitted data:");
+
+define("_INSTALL_L60","Could not write into mainfile.php. Please check the file permission and try again.");
+define("_INSTALL_L61","Could not write to mainfile.php. Contact the server administrator for details.");
+define("_INSTALL_L62","Configuration data has been saved successfully to mainfile.php.");
+define("_INSTALL_L72","The following directories must be created with the write permission by the server. (i.e. 'chmod 777 directory_name' on a UNIX/LINUX server)");
+define("_INSTALL_L73","Invalid Email");
+
+// add by haruki
+define("_INSTALL_L80","introduction");
+define("_INSTALL_L81","check file permissions");
+define("_INSTALL_L82","Checking file and directory permissions..");
+define("_INSTALL_L83","File %s is NOT writable.");
+define("_INSTALL_L84","File %s is writable.");
+define("_INSTALL_L85","Directory %s is NOT writable.");
+define("_INSTALL_L86","Directory %s is writable.");
+define("_INSTALL_L87","No errors detected.");
+define("_INSTALL_L89","general settings");
+define("_INSTALL_L90","General configuration");
+define("_INSTALL_L91","confirm");
+define("_INSTALL_L92","save settings");
+define("_INSTALL_L93","modify settings");
+define("_INSTALL_L88","Saving configuration data..");
+define("_INSTALL_L94","check path & URL");
+define("_INSTALL_L127","Checking file path & URL settings..");
+define("_INSTALL_L95","Could not detect the physical path to your XOOPS directory.");
+define("_INSTALL_L96","There is a conflict between the detected physical path (%s) and the one you input.");
+define("_INSTALL_L97","<b>Physical path</b> is correct.");
+
+define("_INSTALL_L99","<b>Physical path</b> must be a directory.");
+define("_INSTALL_L100","<b>Virtual path</b> is a valid URL.");
+define("_INSTALL_L101","<b>Virtual path</b> is not a valid URL.");
+define("_INSTALL_L102","confirm database settings");
+define("_INSTALL_L103","restart from the beginning");
+define("_INSTALL_L104","check database");
+define("_INSTALL_L105","atempt to create database");
+define("_INSTALL_L106","Could not connect to the database server.");
+define("_INSTALL_L107","Please check the database server and its configuration.");
+define("_INSTALL_L108","Connection to database server is OK.");
+define("_INSTALL_L109","Database %s does not exists.");
+define("_INSTALL_L110","Database %s exists and connectable.");
+define("_INSTALL_L111","Database connection is OK.<br />Press the button below to create database tables.");
+define("_INSTALL_L112","admin user setting");
+define("_INSTALL_L113","Table %s deleted.");
+define("_INSTALL_L114","Failed creating database tables.");
+define("_INSTALL_L115","Database tables created.");
+define("_INSTALL_L116","insert data");
+define("_INSTALL_L117","finish");
+
+define("_INSTALL_L118","Failed creating table %s.");
+define("_INSTALL_L119","%d entries inserted to table %s.");
+define("_INSTALL_L120","Failed inserting %d entries to table %s.");
+
+define("_INSTALL_L121","Constant %s written to %s.");
+define("_INSTALL_L122","Failed writing constant %s.");
+
+define("_INSTALL_L123","File %s stored in cache/ directory.");
+define("_INSTALL_L124","Failed storing file %s to cache/ directory.");
+
+define("_INSTALL_L125","File %s overwritten by %s.");
+define("_INSTALL_L126","Could not write to file %s.");
+
+define("_INSTALL_L130","The installer has detected tables for XOOPS 1.3.x in your database.<br />The installer will now attempt to upgrade your database to XOOPS2.");
+define("_INSTALL_L131","Tables for XOOPS2 already exist in your database.");
+define("_INSTALL_L132","update tables");
+define("_INSTALL_L133","Table %s updated.");
+define("_INSTALL_L134","Failed updating table %s.");
+define("_INSTALL_L135","Failed updating database tables.");
+define("_INSTALL_L136","Database tables updated.");
+define("_INSTALL_L137","update modules");
+define("_INSTALL_L138","update comments");
+define("_INSTALL_L139","update avatars");
+define("_INSTALL_L140","update smilies");
+define("_INSTALL_L141","The installer will now update each module to work with XOOPS2.<br />Make sure that you have uploaded all files in XOOPS2 package to your server.<br />This may take a while to complete.");
+define("_INSTALL_L142","Updating modules..");
+define("_INSTALL_L143","The installer will now update configuration data of XOOPS 1.3.x to be used with XOOPS2.");
+define("_INSTALL_L144","update config");
+define("_INSTALL_L145","Comment (ID: %s) inserted to the database.");
+define("_INSTALL_L146","Could not insert comment (ID: %s) to the database.");
+define("_INSTALL_L147","Updating comments..");
+define("_INSTALL_L148","Update complete.");
+define("_INSTALL_L149","The installer will now update comment posts in XOOPS 1.3.x to be used in XOOPS2.<br />This may take a while to complete.");
+define("_INSTALL_L150","The installer will now update the smiley and user rank images to be used with XOOPS2.<br />This may take a while to complete.");
+define("_INSTALL_L151","The installer will now update the user avatar images to be used in XOOPS2.<br />This may take a while to complete.");
+define("_INSTALL_L155","Updating smiley/rank images..");
+define("_INSTALL_L156","Updating user avatar images..");
+define("_INSTALL_L157","Select the default user group for each group type");
+define("_INSTALL_L158","Groups in 1.3.x");
+define("_INSTALL_L159","Webmasters");
+define("_INSTALL_L160","Register Users");
+define("_INSTALL_L161","Anonymous Users");
+define("_INSTALL_L162","You must select a default group for each group type.");
+define("_INSTALL_L163","Table %s dropped.");
+define("_INSTALL_L164","Failed deleting table %s.");
+define("_INSTALL_L165","The site is currently closed for maintainance. Please come back later.");
+
+// %s is filename
+define("_INSTALL_L152","Could not open %s.");
+define("_INSTALL_L153","Could not update %s.");
+define("_INSTALL_L154","%s updated.");
+
+define('_INSTALL_L128', 'Choose language to be used for the installation process');
+define('_INSTALL_L200', 'Reload');
+
+
+define('_INSTALL_CHARSET','ISO-8859-1');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/language/english/install.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/language/english/install2.php
===================================================================
--- XoopsCore/trunk/htdocs/install/language/english/install2.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/language/english/install2.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,40 @@
+<?php
+// $Id$
+define("_INSTALL_WEBMASTER","Webmasters");
+define("_INSTALL_WEBMASTERD","Webmasters of this site");
+define("_INSTALL_REGUSERS","Registered Users");
+define("_INSTALL_REGUSERSD","Registered Users Group");
+define("_INSTALL_ANONUSERS","Anonymous Users");
+define("_INSTALL_ANONUSERSD","Anonymous Users Group");
+
+define("_INSTALL_ANON","Anonymous");
+
+define("_INSTALL_DISCLMR", "While the administrators and moderators of this site will attempt to remove
+or edit any generally objectionable material as quickly as possible, it is
+impossible to review every message. Therefore you acknowledge that all posts
+made to this site express the views and opinions of the author and not the
+administrators, moderators or webmaster (except for posts by these people)
+and hence will not be held liable. 
+
+You agree not to post any abusive, obscene, vulgar, slanderous, hateful,
+threatening, sexually-orientated or any other material that may violate any
+applicable laws. Doing so may lead to you being immediately and permanently
+banned (and your service provider being informed). The IP address of all
+posts is recorded to aid in enforcing these conditions. Creating multiple
+accounts for a single user is not allowed. You agree that the webmaster,
+administrator and moderators of this site have the right to remove, edit,
+move or close any topic at any time should they see fit. As a user you agree
+to any information you have entered above being stored in a database. While
+this information will not be disclosed to any third party without your
+consent the webmaster, administrator and moderators cannot be held
+responsible for any hacking attempt that may lead to the data being
+compromised. 
+
+This site system uses cookies to store information on your local computer.
+These cookies do not contain any of the information you have entered above,
+they serve only to improve your viewing pleasure. The email address is used
+only for confirming your registration details and password (and for sending
+new passwords should you forget your current one). 
+
+By clicking Register below you agree to be bound by these conditions.");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/language/english/install2.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/language/english/welcome.php
===================================================================
--- XoopsCore/trunk/htdocs/install/language/english/welcome.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/language/english/welcome.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,36 @@
+<?php
+// $Id$
+$content .=
+"<u><b>What is it?</b></u>
+<p>
+<b>XOOPS</b> is a dynamic OO (Object Oriented) based open source portal script written in PHP.
+XOOPS supports a number of databases,
+making XOOPS an ideal tool for developing small to large dynamic community websites,
+intra company portals, corporate portals, weblogs and much more.
+</p>
+<p>
+XOOPS is released under the terms of the <a href='http://www.gnu.org/copyleft/gpl.html' target='_blank'>GNU General Public License (GPL)</a> and is free to use and modify.
+It is free to redistribute as long as you abide by the distribution terms of the GPL.
+</p>
+<u><b>Requirements</b></u>
+<p>
+<ul>
+<li>WWW Server (<a href='http://www.apache.org/' target='_blank'>Apache</a>, IIS, Roxen, etc)</li>
+<li><a href='http://www.php.net/' target='_blank'>PHP</a> 4.0.5 and higher (4.1.1 or higher recommended)</li>
+<li><a href='http://www.mysql.com/' target='_blank'>MySQL</a> Database 3.23.XX</li>
+</ul>
+</p>
+<u><b>Before you install</b></u>
+<ul>
+<li>Setup WWW server, PHP and database server properly.</li>
+<li>Prepare a database for your XOOPS site.</li>
+<li>Prepare user account and grant the user the access to the database.</li>
+<li>Make the directories of uploads/, cache/ and templates_c/ and the files of mainfile.php writabale.</li>
+<li>Turn cookie and JavaScript of your browser on.</li>
+</ul>
+<u><b>Installation</b></u>
+<p>
+Follow this install wizard.
+</p>
+"
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/language/english/welcome.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/makedata.php
===================================================================
--- XoopsCore/trunk/htdocs/install/makedata.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/makedata.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,247 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+include_once './class/dbmanager.php';
+
+// RMV
+// TODO: Shouldn't we insert specific field names??  That way we can use
+// the defaults specified in the database...!!!! (and don't have problem
+// of missing fields in install file, when add new fields to database)
+
+function make_groups(&$dbm){
+    $gruops['XOOPS_GROUP_ADMIN'] = $dbm->insert('groups', " VALUES (0, '".addslashes(_INSTALL_WEBMASTER)."', '".addslashes(_INSTALL_WEBMASTERD)."', 'Admin')");
+    $gruops['XOOPS_GROUP_USERS'] = $dbm->insert('groups', " VALUES (0, '".addslashes(_INSTALL_REGUSERS)."', '".addslashes(_INSTALL_REGUSERSD)."', 'User')");
+    $gruops['XOOPS_GROUP_ANONYMOUS'] = $dbm->insert('groups', " VALUES (0, '".addslashes(_INSTALL_ANONUSERS)."', '".addslashes(_INSTALL_ANONUSERSD)."', 'Anonymous')");
+
+    if(!$gruops['XOOPS_GROUP_ADMIN'] || !$gruops['XOOPS_GROUP_USERS'] || !$gruops['XOOPS_GROUP_ANONYMOUS']){
+        return false;
+    }
+
+    return $gruops;
+}
+
+function make_data(&$dbm, &$cm, $adminname, $adminpass, $adminmail, $language, $gruops){
+
+    $myts =& textSanitizer::getInstance();
+    //$xoopsDB =& Database::getInstance();
+    //$dbm = new db_manager;
+
+    $tables = array();
+
+    // data for table 'groups_users_link'
+
+    $dbm->insert('groups_users_link', " VALUES (0, ".$gruops['XOOPS_GROUP_ADMIN'].", 1)");
+    $dbm->insert('groups_users_link', " VALUES (0, ".$gruops['XOOPS_GROUP_USERS'].", 1)");
+
+    // data for table 'group_permission'
+
+    $dbm->insert("group_permission", " VALUES (0,".$gruops['XOOPS_GROUP_ADMIN'].",1,1,'module_admin')");
+    $dbm->insert("group_permission", " VALUES (0,".$gruops['XOOPS_GROUP_ADMIN'].",1,1, 'module_read')");
+    $dbm->insert("group_permission", " VALUES (0,".$gruops['XOOPS_GROUP_USERS'].",1,1,'module_read')");
+    $dbm->insert("group_permission", " VALUES (0,".$gruops['XOOPS_GROUP_ANONYMOUS'].",1,1,'module_read')");
+
+	$dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",1,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",2,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",3,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",4,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",5,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",6,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",7,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",8,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",9,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",10,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",11,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",12,1,'system_admin')");
+   $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",13,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",14,1,'system_admin')");
+    $dbm->insert("group_permission", " VALUES(0,".$gruops['XOOPS_GROUP_ADMIN'].",15,1,'system_admin')");
+
+    // data for table 'banner'
+
+    $dbm->insert("banner", " (bid, cid, imptotal, impmade, clicks, imageurl, clickurl, date) VALUES (1, 1, 0, 1, 0, '".XOOPS_URL."/images/banners/xoops_banner.gif', 'http://www.xoops.org/', 1008813250)");
+    $dbm->insert("banner", " (bid, cid, imptotal, impmade, clicks, imageurl, clickurl, date) VALUES (2, 1, 0, 1, 0, '".XOOPS_URL."/images/banners/xoops_banner_2.gif', 'http://www.xoops.org/', 1008813250)");
+    $dbm->insert("banner", " (bid, cid, imptotal, impmade, clicks, imageurl, clickurl, date) VALUES (3, 1, 0, 1, 0, '".XOOPS_URL."/images/banners/banner.swf', 'http://www.xoops.org/', 1008813250)");
+
+    // default theme
+
+    $time = time();
+    $dbm->insert('tplset', " VALUES (1, 'default', 'XOOPS Default Template Set', '', ".$time.")");
+
+    // system modules
+
+    if ( file_exists('../modules/system/language/'.$language.'/modinfo.php') ) {
+        include '../modules/system/language/'.$language.'/modinfo.php';
+    } else {
+        include '../modules/system/language/english/modinfo.php';
+        $language = 'english';
+    }
+
+    $modversion = array();
+    include_once '../modules/system/xoops_version.php';
+    $time = time();
+
+	// RMV-NOTIFY (updated for extra column in table)
+    $dbm->insert("modules", " VALUES (1, '"._MI_SYSTEM_NAME."', 100, ".$time.", 0, 1, 'system', 0, 1, 0, 0, 0, 0)");
+
+    foreach ($modversion['templates'] as $tplfile) {
+        if ($fp = fopen('../modules/system/templates/'.$tplfile['file'], 'r')) {
+            $newtplid = $dbm->insert('tplfile', " VALUES (0, 1, 'system', 'default', '".addslashes($tplfile['file'])."', '".addslashes($tplfile['description'])."', ".$time.", ".$time.", 'module')");
+            //$newtplid = $xoopsDB->getInsertId();
+            $tplsource = fread($fp, filesize('../modules/system/templates/'.$tplfile['file']));
+            fclose($fp);
+            $dbm->insert('tplsource', " (tpl_id, tpl_source) VALUES (".$newtplid.", '".addslashes($tplsource)."')");
+        }
+    }
+
+    foreach ($modversion['blocks'] as $func_num => $newblock) {
+        if ($fp = fopen('../modules/system/templates/blocks/'.$newblock['template'], 'r')) {
+            if (in_array($newblock['template'], array('system_block_user.html', 'system_block_login.html', 'system_block_mainmenu.html'))) {
+                $visible = 1;
+            } else {
+                $visible = 0;
+            }
+            $options = !isset($newblock['options']) ? '' : trim($newblock['options']);
+            $edit_func = !isset($newblock['edit_func']) ? '' : trim($newblock['edit_func']);
+            $newbid = $dbm->insert('newblocks', " VALUES (0, 1, ".$func_num.", '".addslashes($options)."', '".addslashes($newblock['name'])."', '".addslashes($newblock['name'])."', '', 0, 0, ".$visible.", 'S', 'H', 1, 'system', '".addslashes($newblock['file'])."', '".addslashes($newblock['show_func'])."', '".addslashes($edit_func)."', '".addslashes($newblock['template'])."', 0, ".$time.")");
+            //$newbid = $xoopsDB->getInsertId();
+            $newtplid = $dbm->insert('tplfile', " VALUES (0, ".$newbid.", 'system', 'default', '".addslashes($newblock['template'])."', '".addslashes($newblock['description'])."', ".$time.", ".$time.", 'block')");
+            //$newtplid = $xoopsDB->getInsertId();
+            $tplsource = fread($fp, filesize('../modules/system/templates/blocks/'.$newblock['template']));
+            fclose($fp);
+            $dbm->insert('tplsource', " (tpl_id, tpl_source) VALUES (".$newtplid.", '".addslashes($tplsource)."')");
+            $dbm->insert("group_permission", " VALUES (0, ".$gruops['XOOPS_GROUP_ADMIN'].", ".$newbid.", 1, 'block_read')");
+            //$dbm->insert("group_permission", " VALUES (0, ".$gruops['XOOPS_GROUP_ADMIN'].", ".$newbid.", 'xoops_blockadmiin')");
+            $dbm->insert("group_permission", " VALUES (0, ".$gruops['XOOPS_GROUP_USERS'].", ".$newbid.", 1, 'block_read')");
+            $dbm->insert("group_permission", " VALUES (0, ".$gruops['XOOPS_GROUP_ANONYMOUS'].", ".$newbid.", 1, 'block_read')");
+        }
+    }
+
+    // data for table 'users'
+
+    $temp = md5($adminpass);
+    $regdate = time();
+    //$dbadminname= addslashes($adminname);
+	// RMV-NOTIFY (updated for extra columns in user table)
+    $dbm->insert('users', " VALUES (1,'','".addslashes($adminname)."','".addslashes($adminmail)."','".XOOPS_URL."/','blank.gif','".$regdate."','','','',1,'','','','','".$temp."',0,0,7,5,'default','0.0',".time().",'thread',0,1,0,'','','',0)");
+
+
+    // data for table 'block_module_link'
+
+    $sql = 'SELECT bid, side FROM '.$dbm->prefix('newblocks');
+    $result = $dbm->query($sql);
+
+    while ($myrow = $dbm->fetchArray($result)) {
+        if ($myrow['side'] == 0) {
+            $dbm->insert("block_module_link", " VALUES (".$myrow['bid'].", 0)");
+        } else {
+            $dbm->insert("block_module_link", " VALUES (".$myrow['bid'].", -1)");
+        }
+    }
+
+    // data for table 'config'
+
+    $dbm->insert('config', " VALUES (1, 0, 1, 'sitename', '_MD_AM_SITENAME', 'XOOPS Site', '_MD_AM_SITENAMEDSC', 'textbox', 'text', 0)");
+    $dbm->insert('config', " VALUES (2, 0, 1, 'slogan', '_MD_AM_SLOGAN', 'Just Use it!', '_MD_AM_SLOGANDSC', 'textbox', 'text', 2)");
+    $dbm->insert('config', " VALUES (3, 0, 1, 'language', '_MD_AM_LANGUAGE', '".addslashes($language)."', '_MD_AM_LANGUAGEDSC', 'language', 'other', 4)");
+    $dbm->insert('config', " VALUES (4, 0, 1, 'startpage', '_MD_AM_STARTPAGE', '--', '_MD_AM_STARTPAGEDSC', 'startpage', 'other', 6)");
+    $dbm->insert('config', " VALUES (5, 0, 1, 'server_TZ', '_MD_AM_SERVERTZ', '0', '_MD_AM_SERVERTZDSC', 'timezone', 'float', 8)");
+    $dbm->insert('config', " VALUES (6, 0, 1, 'default_TZ', '_MD_AM_DEFAULTTZ', '0', '_MD_AM_DEFAULTTZDSC', 'timezone', 'float', 10)");
+    $dbm->insert('config', " VALUES (7, 0, 1, 'theme_set', '_MD_AM_DTHEME', 'default', '_MD_AM_DTHEMEDSC', 'theme', 'other', 12)");
+    $dbm->insert('config', " VALUES (8, 0, 1, 'anonymous', '_MD_AM_ANONNAME', '".addslashes(_INSTALL_ANON)."', '_MD_AM_ANONNAMEDSC', 'textbox', 'text', 15)");
+    $dbm->insert('config', " VALUES (9, 0, 1, 'gzip_compression', '_MD_AM_USEGZIP', '0', '_MD_AM_USEGZIPDSC', 'yesno', 'int', 16)");
+    $dbm->insert('config', " VALUES (10, 0, 1, 'usercookie', '_MD_AM_USERCOOKIE', 'xoops_user', '_MD_AM_USERCOOKIEDSC', 'textbox', 'text', 18)");
+    $dbm->insert('config', " VALUES (11, 0, 1, 'session_expire', '_MD_AM_SESSEXPIRE', '15', '_MD_AM_SESSEXPIREDSC', 'textbox', 'int', 22)");
+    $dbm->insert('config', " VALUES (12, 0, 1, 'banners', '_MD_AM_BANNERS', '1', '_MD_AM_BANNERSDSC', 'yesno', 'int', 26)");
+    $dbm->insert('config', " VALUES (13, 0, 1, 'debug_mode', '_MD_AM_DEBUGMODE', '0', '_MD_AM_DEBUGMODEDSC', 'select', 'int', 24)");
+    $dbm->insert('config', " VALUES (14, 0, 1, 'my_ip', '_MD_AM_MYIP', '127.0.0.1', '_MD_AM_MYIPDSC', 'textbox', 'text', 29)");
+    $dbm->insert('config', " VALUES (15, 0, 1, 'use_ssl', '_MD_AM_USESSL', '0', '_MD_AM_USESSLDSC', 'yesno', 'int', 30)");
+    $dbm->insert('config', " VALUES (16, 0, 1, 'session_name', '_MD_AM_SESSNAME', 'xoops_session', '_MD_AM_SESSNAMEDSC', 'textbox', 'text', 20)");
+    $dbm->insert('config', " VALUES (17, 0, 2, 'minpass', '_MD_AM_MINPASS', '5', '_MD_AM_MINPASSDSC', 'textbox', 'int', 1)");
+    $dbm->insert('config', " VALUES (18, 0, 2, 'minuname', '_MD_AM_MINUNAME', '3', '_MD_AM_MINUNAMEDSC', 'textbox', 'int', 2)");
+    $dbm->insert('config', " VALUES (19, 0, 2, 'new_user_notify', '_MD_AM_NEWUNOTIFY', '1', '_MD_AM_NEWUNOTIFYDSC', 'yesno', 'int', 4)");
+    $dbm->insert('config', " VALUES (20, 0, 2, 'new_user_notify_group', '_MD_AM_NOTIFYTO', ".$gruops['XOOPS_GROUP_ADMIN'].", '_MD_AM_NOTIFYTODSC', 'group', 'int', 6)");
+    $dbm->insert('config', " VALUES (21, 0, 2, 'activation_type', '_MD_AM_ACTVTYPE', '0', '_MD_AM_ACTVTYPEDSC', 'select', 'int', 8)");
+    $dbm->insert('config', " VALUES (22, 0, 2, 'activation_group', '_MD_AM_ACTVGROUP', ".$gruops['XOOPS_GROUP_ADMIN'].", '_MD_AM_ACTVGROUPDSC', 'group', 'int', 10)");
+    $dbm->insert('config', " VALUES (23, 0, 2, 'uname_test_level', '_MD_AM_UNAMELVL', '0', '_MD_AM_UNAMELVLDSC', 'select', 'int', 12)");
+    $dbm->insert('config', " VALUES (24, 0, 2, 'avatar_allow_upload', '_MD_AM_AVATARALLOW', '0', '_MD_AM_AVATARALWDSC', 'yesno', 'int', 14)");
+    $dbm->insert('config', " VALUES (27, 0, 2, 'avatar_width', '_MD_AM_AVATARW', '80', '_MD_AM_AVATARWDSC', 'textbox', 'int', 16)");
+    $dbm->insert('config', " VALUES (28, 0, 2, 'avatar_height', '_MD_AM_AVATARH', '80', '_MD_AM_AVATARHDSC', 'textbox', 'int', 18)");
+    $dbm->insert('config', " VALUES (29, 0, 2, 'avatar_maxsize', '_MD_AM_AVATARMAX', '35000', '_MD_AM_AVATARMAXDSC', 'textbox', 'int', 20)");
+    $dbm->insert('config', " VALUES (30, 0, 1, 'adminmail', '_MD_AM_ADMINML', '".addslashes($adminmail)."', '_MD_AM_ADMINMLDSC', 'textbox', 'text', 3)");
+    $dbm->insert('config', " VALUES (31, 0, 2, 'self_delete', '_MD_AM_SELFDELETE', '0', '_MD_AM_SELFDELETEDSC', 'yesno', 'int', 22)");
+    $dbm->insert('config', " VALUES (32, 0, 1, 'com_mode', '_MD_AM_COMMODE', 'nest', '_MD_AM_COMMODEDSC', 'select', 'text', 34)");
+    $dbm->insert('config', " VALUES (33, 0, 1, 'com_order', '_MD_AM_COMORDER', '0', '_MD_AM_COMORDERDSC', 'select', 'int', 36)");
+    $dbm->insert('config', " VALUES (34, 0, 2, 'bad_unames', '_MD_AM_BADUNAMES', '".addslashes(serialize(array('webmaster', '^xoops', '^admin')))."', '_MD_AM_BADUNAMESDSC', 'textarea', 'array', 24)");
+    $dbm->insert('config', " VALUES (35, 0, 2, 'bad_emails', '_MD_AM_BADEMAILS', '".addslashes(serialize(array('xoops.org$')))."', '_MD_AM_BADEMAILSDSC', 'textarea', 'array', 26)");
+    $dbm->insert('config', " VALUES (36, 0, 2, 'maxuname', '_MD_AM_MAXUNAME', '10', '_MD_AM_MAXUNAMEDSC', 'textbox', 'int', 3)");
+    $dbm->insert('config', " VALUES (37, 0, 1, 'bad_ips', '_MD_AM_BADIPS', '".addslashes(serialize(array('127.0.0.1')))."', '_MD_AM_BADIPSDSC', 'textarea', 'array', 42)");
+    $dbm->insert('config', " VALUES (38, 0, 3, 'meta_keywords', '_MD_AM_METAKEY', 'news, technology, headlines, xoops, xoop, nuke, myphpnuke, myphp-nuke, phpnuke, SE, geek, geeks, hacker, hackers, linux, software, download, downloads, free, community, mp3, forum, forums, bulletin, board, boards, bbs, php, survey, poll, polls, kernel, comment, comments, portal, odp, open, source, opensource, FreeSoftware, gnu, gpl, license, Unix, *nix, mysql, sql, database, databases, web site, weblog, guru, module, modules, theme, themes, cms, content management', '_MD_AM_METAKEYDSC', 'textarea', 'text', 0)");
+	$dbm->insert('config', " VALUES (39, 0, 3, 'footer', '_MD_AM_FOOTER', 'Powered by XOOPS 2.0 &copy; 2001-2003 <a href=\"http://www.xoops.org/\" target=\"_blank\">The XOOPS Project</a>', '_MD_AM_FOOTERDSC', 'textarea', 'text', 20)");
+    $dbm->insert('config', " VALUES (40, 0, 4, 'censor_enable', '_MD_AM_DOCENSOR', '0', '_MD_AM_DOCENSORDSC', 'yesno', 'int', 0)");
+    $dbm->insert('config', " VALUES (41, 0, 4, 'censor_words', '_MD_AM_CENSORWRD', '".addslashes(serialize(array('fuck', 'shit')))."', '_MD_AM_CENSORWRDDSC', 'textarea', 'array', 1)");
+    $dbm->insert('config', " VALUES (42, 0, 4, 'censor_replace', '_MD_AM_CENSORRPLC', '#OOPS#', '_MD_AM_CENSORRPLCDSC', 'textbox', 'text', 2)");
+    $dbm->insert('config', " VALUES (43, 0, 3, 'meta_robots', '_MD_AM_METAROBOTS', 'index,follow', '_MD_AM_METAROBOTSDSC', 'select', 'text', 2)");
+    $dbm->insert('config', " VALUES (44, 0, 5, 'enable_search', '_MD_AM_DOSEARCH', '1', '_MD_AM_DOSEARCHDSC', 'yesno', 'int', 0)");
+    $dbm->insert('config', " VALUES (45, 0, 5, 'keyword_min', '_MD_AM_MINSEARCH', '5', '_MD_AM_MINSEARCHDSC', 'textbox', 'int', 1)");
+    $dbm->insert('config', " VALUES (46, 0, 2, 'avatar_minposts', '_MD_AM_AVATARMP', '0', '_MD_AM_AVATARMPDSC', 'textbox', 'int', 15)");
+    $dbm->insert('config', " VALUES (47, 0, 1, 'enable_badips', '_MD_AM_DOBADIPS', '0', '_MD_AM_DOBADIPSDSC', 'yesno', 'int', 40)");
+    $dbm->insert('config', " VALUES (48, 0, 3, 'meta_rating', '_MD_AM_METARATING', 'general', '_MD_AM_METARATINGDSC', 'select', 'text', 4)");
+    $dbm->insert('config', " VALUES (49, 0, 3, 'meta_author', '_MD_AM_METAAUTHOR', 'XOOPS', '_MD_AM_METAAUTHORDSC', 'textbox', 'text', 6)");
+    $dbm->insert('config', " VALUES (50, 0, 3, 'meta_copyright', '_MD_AM_METACOPYR', 'Copyright &copy; 2001-2003', '_MD_AM_METACOPYRDSC', 'textbox', 'text', 8)");
+    $dbm->insert('config', " VALUES (51, 0, 3, 'meta_description', '_MD_AM_METADESC', 'XOOPS is a dynamic Object Oriented based open source portal script written in PHP.', '_MD_AM_METADESCDSC', 'textarea', 'text', 1)");
+    $dbm->insert('config', " VALUES (52, 0, 2, 'allow_chgmail', '_MD_AM_ALLWCHGMAIL', '0', '_MD_AM_ALLWCHGMAILDSC', 'yesno', 'int', 3)");
+    $dbm->insert('config', " VALUES (53, 0, 1, 'use_mysession', '_MD_AM_USEMYSESS', '0', '_MD_AM_USEMYSESSDSC', 'yesno', 'int', 19)");
+    $dbm->insert('config', " VALUES (54, 0, 2, 'reg_dispdsclmr', '_MD_AM_DSPDSCLMR', 1, '_MD_AM_DSPDSCLMRDSC', 'yesno', 'int', 30)");
+    $dbm->insert('config', " VALUES (55, 0, 2, 'reg_disclaimer', '_MD_AM_REGDSCLMR', '".addslashes(_INSTALL_DISCLMR)."', '_MD_AM_REGDSCLMRDSC', 'textarea', 'text', 32)");
+    $dbm->insert('config', " VALUES (56, 0, 2, 'allow_register', '_MD_AM_ALLOWREG', 1, '_MD_AM_ALLOWREGDSC', 'yesno', 'int', 0)");
+    $dbm->insert('config', " VALUES (57, 0, 1, 'theme_fromfile', '_MD_AM_THEMEFILE', '0', '_MD_AM_THEMEFILEDSC', 'yesno', 'int', 13)");
+    $dbm->insert('config', " VALUES (58, 0, 1, 'closesite', '_MD_AM_CLOSESITE', '0', '_MD_AM_CLOSESITEDSC', 'yesno', 'int', 26)");
+	$dbm->insert('config', " VALUES (59, 0, 1, 'closesite_okgrp', '_MD_AM_CLOSESITEOK', '".addslashes(serialize(array('1')))."', '_MD_AM_CLOSESITEOKDSC', 'group_multi', 'array', 27)");
+	$dbm->insert('config', " VALUES (60, 0, 1, 'closesite_text', '_MD_AM_CLOSESITETXT', '"._INSTALL_L165."', '_MD_AM_CLOSESITETXTDSC', 'textarea', 'text', 28)");
+	$dbm->insert('config', " VALUES (61, 0, 1, 'sslpost_name', '_MD_AM_SSLPOST', 'xoops_ssl', '_MD_AM_SSLPOSTDSC', 'textbox', 'text', 31)");
+	$dbm->insert('config', " VALUES (62, 0, 1, 'module_cache', '_MD_AM_MODCACHE', '', '_MD_AM_MODCACHEDSC', 'module_cache', 'array', 50)");
+	$dbm->insert('config', " VALUES (63, 0, 1, 'template_set', '_MD_AM_DTPLSET', 'default', '_MD_AM_DTPLSETDSC', 'tplset', 'other', 14)");
+
+	$dbm->insert('config', " VALUES (64,0,6,'mailmethod','_MD_AM_MAILERMETHOD','mail','_MD_AM_MAILERMETHODDESC','select','text',4)");
+	$dbm->insert('config', " VALUES (65,0,6,'smtphost','_MD_AM_SMTPHOST','a:1:{i:0;s:0:\"\";}', '_MD_AM_SMTPHOSTDESC','textarea','array',6)");
+	$dbm->insert('config', " VALUES (66,0,6,'smtpuser','_MD_AM_SMTPUSER','','_MD_AM_SMTPUSERDESC','textbox','text',7)");
+	$dbm->insert('config', " VALUES (67,0,6,'smtppass','_MD_AM_SMTPPASS','','_MD_AM_SMTPPASSDESC','password','text',8)");
+	$dbm->insert('config', " VALUES (68,0,6,'sendmailpath','_MD_AM_SENDMAILPATH','/usr/sbin/sendmail','_MD_AM_SENDMAILPATHDESC','textbox','text',5)");
+	$dbm->insert('config', " VALUES (69,0,6,'from','_MD_AM_MAILFROM','','_MD_AM_MAILFROMDESC','textbox','text', 1)");
+	$dbm->insert('config', " VALUES (70,0,6,'fromname','_MD_AM_MAILFROMNAME','','_MD_AM_MAILFROMNAMEDESC','textbox','text',2)");
+	$dbm->insert('config', " VALUES (71, 0, 1, 'sslloginlink', '_MD_AM_SSLLINK', 'https://', '_MD_AM_SSLLINKDSC', 'textbox', 'text', 33)");
+  	$dbm->insert('config', " VALUES (72, 0, 1, 'theme_set_allowed', '_MD_AM_THEMEOK', '".serialize(array('default'))."', '_MD_AM_THEMEOKDSC', 'theme_multi', 'array', 13)");
+	// RMV-NOTIFY... Need to specify which user is sender of notification PM
+	$dbm->insert('config', " VALUES (73,0,6,'fromuid','_MD_AM_MAILFROMUID','1','_MD_AM_MAILFROMUIDDESC','user','int',3)");
+
+
+    return $gruops;
+}
+
+
+
+?>


Property changes on: XoopsCore/trunk/htdocs/install/makedata.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/install/passwd.php
===================================================================
--- XoopsCore/trunk/htdocs/install/passwd.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/install/passwd.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,6 @@
+<?php
+//  If you use HTTP authentication for XOOPS installer,
+//  put user name and passward in the define statement below.
+define('INSTALL_USER', '');
+define('INSTALL_PASSWD', '');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/install/passwd.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/avatar.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/avatar.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/avatar.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,239 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+class XoopsAvatar extends XoopsObject
+{
+    var $_userCount;
+
+    function XoopsAvatar()
+    {
+        $this->XoopsObject();
+        $this->initVar('avatar_id', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('avatar_file', XOBJ_DTYPE_OTHER, null, false, 30);
+        $this->initVar('avatar_name', XOBJ_DTYPE_TXTBOX, null, true, 100);
+        $this->initVar('avatar_mimetype', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('avatar_created', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('avatar_display', XOBJ_DTYPE_INT, 1, false);
+        $this->initVar('avatar_weight', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('avatar_type', XOBJ_DTYPE_OTHER, 0, false);
+    }
+
+    function setUserCount($value)
+    {
+        $this->_userCount = intval($value);
+    }
+
+    function getUserCount()
+    {
+        return $this->_userCount;
+    }
+}
+
+
+/**
+* XOOPS avatar handler class.
+* This class is responsible for providing data access mechanisms to the data source
+* of XOOPS avatar class objects.
+*
+*
+* @author  Kazumi Ono <onokazu at xoops.org>
+*/
+
+class XoopsAvatarHandler extends XoopsObjectHandler
+{
+
+    function &create($isNew = true)
+    {
+        $avatar = new XoopsAvatar();
+        if ($isNew) {
+            $avatar->setNew();
+        }
+        return $avatar;
+    }
+
+    function &get($id)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('avatar').' WHERE avatar_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $avatar = new XoopsAvatar();
+                $avatar->assignVars($this->db->fetchArray($result));
+                return $avatar;
+            }
+        }
+        return false;
+    }
+
+    function insert(&$avatar)
+    {
+        if (strtolower(get_class($avatar)) != 'xoopsavatar') {
+            return false;
+        }
+        if (!$avatar->isDirty()) {
+            return true;
+        }
+        if (!$avatar->cleanVars()) {
+            return false;
+        }
+        foreach ($avatar->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($avatar->isNew()) {
+            $avatar_id = $this->db->genId('avatar_avatar_id_seq');
+            $sql = sprintf("INSERT INTO %s (avatar_id, avatar_file, avatar_name, avatar_created, avatar_mimetype, avatar_display, avatar_weight, avatar_type) VALUES (%u, %s, %s, %u, %s, %u, %u, %s)", $this->db->prefix('avatar'), $avatar_id, $this->db->quoteString($avatar_file), $this->db->quoteString($avatar_name), time(), $this->db->quoteString($avatar_mimetype), $avatar_display, $avatar_weight, $this->db->quoteString($avatar_type));
+        } else {
+            $sql = sprintf("UPDATE %s SET avatar_file = %s, avatar_name = %s, avatar_created = %u, avatar_mimetype= %s, avatar_display = %u, avatar_weight = %u, avatar_type = %s WHERE avatar_id = %u", $this->db->prefix('avatar'), $this->db->quoteString($avatar_file), $this->db->quoteString($avatar_name), $avatar_created, $this->db->quoteString($avatar_mimetype), $avatar_display, $avatar_weight, $this->db->quoteString($avatar_type), $avatar_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($avatar_id)) {
+            $avatar_id = $this->db->getInsertId();
+        }
+        $avatar->assignVar('avatar_id', $avatar_id);
+        return true;
+    }
+
+    function delete(&$avatar)
+    {
+        if (strtolower(get_class($avatar)) != 'xoopsavatar') {
+            return false;
+        }
+        $id = $avatar->getVar('avatar_id');
+        $sql = sprintf("DELETE FROM %s WHERE avatar_id = %u", $this->db->prefix('avatar'), $id);
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE avatar_id = %u", $this->db->prefix('avatar_user_link'), $id);
+		$result = $this->db->query($sql);
+        return true;
+    }
+
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT a.*, COUNT(u.user_id) AS count FROM '.$this->db->prefix('avatar').' a LEFT JOIN '.$this->db->prefix('avatar_user_link').' u ON u.avatar_id=a.avatar_id';
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $sql .= ' GROUP BY a.avatar_id ORDER BY avatar_weight, avatar_id';
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $avatar = new XoopsAvatar();
+            $avatar->assignVars($myrow);
+            $avatar->setUserCount($myrow['count']);
+            if (!$id_as_key) {
+                $ret[] =& $avatar;
+            } else {
+                $ret[$myrow['avatar_id']] =& $avatar;
+            }
+            unset($avatar);
+        }
+        return $ret;
+    }
+
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('avatar');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result =& $this->db->query($sql)) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+    function addUser($avatar_id, $user_id){
+        $avatar_id = intval($avatar_id);
+        $user_id = intval($user_id);
+        if ($avatar_id < 1 || $user_id < 1) {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE user_id = %u", $this->db->prefix('avatar_user_link'), $user_id);
+        $this->db->query($sql);
+        $sql = sprintf("INSERT INTO %s (avatar_id, user_id) VALUES (%u, %u)", $this->db->prefix('avatar_user_link'), $avatar_id, $user_id);
+        if (!$result =& $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    function &getUser(&$avatar){
+        $ret = array();
+        if (strtolower(get_class($avatar)) != 'xoopsavatar') {
+            return $ret;
+        }
+        $sql = 'SELECT user_id FROM '.$this->db->prefix('avatar_user_link').' WHERE avatar_id='.$avatar->getVar('avatar_id');
+        if (!$result = $this->db->query($sql)) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $ret[] =& $myrow['user_id'];
+        }
+        return $ret;
+    }
+
+    function &getList($avatar_type = null, $avatar_display = null)
+    {
+        $criteria = new CriteriaCompo();
+        if (isset($avatar_type)) {
+            $avatar_type = ($avatar_type == 'C') ? 'C' : 'S';
+            $criteria->add(new Criteria('avatar_type', $avatar_type));
+        }
+        if (isset($avatar_display)) {
+            $criteria->add(new Criteria('avatar_display', intval($avatar_display)));
+        }
+        $avatars =& $this->getObjects($criteria, true);
+        $ret = array('blank.gif' => _NONE);
+        foreach (array_keys($avatars) as $i) {
+            $ret[$avatars[$i]->getVar('avatar_file')] = $avatars[$i]->getVar('avatar_name');
+        }
+        return $ret;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/avatar.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/block.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/block.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/block.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,333 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+/**
+ * @author  Kazumi Ono <onokazu at xoops.org>
+ * @copyright copyright (c) 2000 XOOPS.org
+ **/
+
+/**
+ * A block
+ * 
+ * @author Kazumi Ono <onokazu at xoops.org>
+ * @copyright copyright (c) 2000 XOOPS.org
+ * 
+ * @package kernel
+ **/
+class XoopsBlock extends XoopsObject
+{
+
+    /**
+     * constructor
+	 *  
+     * @param mixed $id
+     **/
+    function XoopsBlock($id = null)
+    {
+        $this->initVar('bid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('mid', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('func_num', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('options', XOBJ_DTYPE_TXTBOX, null, false, 255);
+        $this->initVar('name', XOBJ_DTYPE_TXTBOX, null, true, 150);
+        //$this->initVar('position', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('title', XOBJ_DTYPE_TXTBOX, null, false, 150);
+        $this->initVar('content', XOBJ_DTYPE_TXTAREA, null, false);
+        $this->initVar('side', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('weight', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('visible', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('block_type', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('c_type', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('isactive', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('dirname', XOBJ_DTYPE_TXTBOX, null, false, 50);
+        $this->initVar('func_file', XOBJ_DTYPE_TXTBOX, null, false, 50);
+        $this->initVar('show_func', XOBJ_DTYPE_TXTBOX, null, false, 50);
+        $this->initVar('edit_func', XOBJ_DTYPE_TXTBOX, null, false, 50);
+        $this->initVar('template', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('bcachetime', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('last_modified', XOBJ_DTYPE_INT, 0, false);
+
+        // for backward compatibility
+        if (isset($id)) {
+            if (is_array($id)) {
+                $this->assignVars($id);
+            } else {
+                $blkhandler =& xoops_gethandler('block');
+                $obj =& $blkhandler->get($id);
+                foreach (array_keys($obj->getVars() ) as $i) {
+                    $this->assignVar($obj->getVar($i, 'n') );
+                }
+            }
+        }
+    }
+
+    /**
+     * return the content of the block for output
+	 * 
+	 * @param string $format
+	 * @param string $c_type type of content<br>
+	 * Legal value for the type of content<br>
+	 * <ul><li>H : custom HTML block
+	 * <li>P : custom PHP block
+	 * <li>S : use text sanitizater (smilies enabled)
+	 * <li>T : use text sanitizater (smilies disabled)</ul>
+	 * @return string content for output
+     **/
+    function &getContent($format = 'S', $c_type = 'T')
+    {
+        switch ( $format ) {
+        case 'S':
+            if ( $c_type == 'H' ) {
+                return str_replace('{X_SITEURL}', XOOPS_URL.'/', $this->getVar('content', 'N'));
+            } elseif ( $c_type == 'P' ) {
+                ob_start();
+                echo eval($this->getVar('content', 'N'));
+                $content = ob_get_contents();
+                ob_end_clean();
+                return str_replace('{X_SITEURL}', XOOPS_URL.'/', $content);
+            } elseif ( $c_type == 'S' ) {
+                $myts =& MyTextSanitizer::getInstance();
+                return str_replace('{X_SITEURL}', XOOPS_URL.'/', $myts->displayTarea($this->getVar('content', 'N'), 0, 1));
+            } else {
+                $myts =& MyTextSanitizer::getInstance();
+                return str_replace('{X_SITEURL}', XOOPS_URL.'/', $myts->displayTarea($this->getVar('content', 'N'), 0, 0));
+            }
+            break;
+        case 'E':
+            return $this->getVar('content', 'E');
+            break;
+        default:
+            return $this->getVar('content', 'N');
+            break;
+        }
+    }
+
+    /**
+     * (HTML-) form for setting the options of the block
+	 * 
+	 * @return string HTML for the form, FALSE if not defined for this block 
+     **/
+    function getOptions()
+    {
+        if ($this->getVar('block_type') != 'C') {
+            $edit_func = $this->getVar('edit_func');
+            if (!$edit_func) {
+                return false;
+            }
+            if (file_exists(XOOPS_ROOT_PATH.'/modules/'.$this->getVar('dirname').'/blocks/'.$this->getVar('func_file'))) {
+                if (file_exists(XOOPS_ROOT_PATH.'/modules/'.$this->getVar('dirname').'/language/'.$GLOBALS['xoopsConfig']['language'].'/blocks.php')) {
+                    include_once XOOPS_ROOT_PATH.'/modules/'.$this->getVar('dirname').'/language/'.$GLOBALS['xoopsConfig']['language'].'/blocks.php';
+                } elseif (file_exists(XOOPS_ROOT_PATH.'/modules/'.$this->getVar('dirname').'/language/english/blocks.php')) {
+                    include_once XOOPS_ROOT_PATH.'/modules/'.$this->getVar('dirname').'/language/english/blocks.php';
+                }
+                include_once XOOPS_ROOT_PATH.'/modules/'.$this->getVar('dirname').'/blocks/'.$this->getVar('func_file');
+                $options = explode('|', $this->getVar('options'));
+                $edit_form = $edit_func($options);
+                if (!$edit_form) {
+                    return false;
+                }
+                return $edit_form;
+            } else {
+                return false;
+            }
+        } else {
+            return false;
+        }
+    }
+}
+
+
+/**
+ * XOOPS block handler class. (Singelton)
+ * 
+ * This class is responsible for providing data access mechanisms to the data source 
+ * of XOOPS block class objects. 
+ *
+ * @author  Kazumi Ono <onokazu at xoops.org>
+ * @copyright copyright (c) 2000 XOOPS.org
+ * @package kernel
+ * @subpackage block
+*/
+class XoopsBlockHandler extends XoopsObjectHandler
+{
+
+    /**
+     * create a new block
+     * 
+	 * @see XoopsBlock
+	 * @param bool $isNew is the new block new??
+	 * @return object XoopsBlock reference to the new block 
+     **/
+    function &create($isNew = true)
+    {
+        $block = new XoopsBlock();
+        if ($isNew) {
+            $block->setNew();
+        }
+        return $block;
+    }
+
+    /**
+     * retrieve a specific {@link XoopsBlock}
+     * 
+	 * @see XoopsBlock
+	 * @param int $id bid of the block to retrieve
+	 * @return object XoopsBlock reference to the block 
+     **/
+    function &get($id)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('newblocks').' WHERE bid='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $block = new XoopsBlock();
+                $block->assignVars($this->db->fetchArray($result));
+                return $block;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * write a new block into the database
+     * 
+	 * @param object XoopsBlock $block reference to the block to insert
+	 * @return bool TRUE if succesful
+     **/
+    function insert(&$block)
+    {
+        if (strtolower(get_class($block)) != 'xoopsblock') {
+            return false;
+        }
+        if (!$block->isDirty()) {
+            return true;
+        }
+        if (!$block->cleanVars()) {
+            return false;
+        }
+        foreach ($block->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($block->isNew()) {
+            $bid = $this->db->genId('newblocks_bid_seq');
+            $sql = sprintf("INSERT INTO %s (bid, mid, func_num, options, name, title, content, side, weight, visible, block_type, c_type, isactive, dirname, func_file, show_func, edit_func, template, bcachetime, last_modified) VALUES (%u, %u, %u, '%s', '%s', '%s', '%s', %u, %u, %u, '%s', '%s', %u, '%s', '%s', '%s', '%s', '%s', %u, %u)", $this->db->prefix('newblocks'), $bid, $mid, $func_num, $options, $name, $title, $content, $side, $weight, $visible, $block_type, $c_type, 1, $dirname, $func_file, $show_func, $edit_func, $template, $bcachetime, time());
+        } else {
+            $sql = sprintf("UPDATE %s SET func_num = %u, options = '%s', name = '%s', title = '%s', content = '%s', side = %u, weight = %u, visible = %u, c_type = '%s', isactive = %u, func_file = '%s', show_func = '%s', edit_func = '%s', template = '%s', bcachetime = %u, last_modified = %u WHERE bid = %u", $this->db->prefix('newblocks'), $func_num, $options, $name, $title, $content, $side, $weight, $visible, $c_type, $isactive, $func_file, $show_func, $edit_func, $template, $bcachetime, time(), $bid);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($bid)) {
+            $bid = $this->db->getInsertId();
+        }
+		$block->assignVar('bid', $bid);
+        return true;
+    }
+
+    /**
+     * delete a block from the database
+     * 
+	 * @param object XoopsBlock $block reference to the block to delete 
+	 * @return bool TRUE if succesful
+     **/
+    function delete(&$block)
+    {
+        if (strtolower(get_class($block)) != 'xoopsblock') {
+            return false;
+        }
+        $id = $block->getVar('bid');
+        $sql = sprintf("DELETE FROM %s WHERE bid = %u", $this->db->prefix('newblocks'), $id);
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE block_id = %u", $this->db->prefix('block_module_link'), $id);
+        $this->db->query($sql);
+        return true;
+    }
+
+    /**
+     * retrieve array of {@link XoopsBlock}s meeting certain conditions
+	 * @param object $criteria {@link CriteriaElement} with conditions for the blocks
+	 * @param bool $id_as_key should the blocks' bid be the key for the returned array?
+	 * @return array {@link XoopsBlock}s matching the conditions
+     **/
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT DISTINCT(b.*) FROM '.$this->db->prefix('newblocks').' b LEFT JOIN '.$this->db->prefix('block_module_link').' l ON b.bid=l.block_id';
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $block = new XoopsBlock();
+            $block->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $block;
+            } else {
+                $ret[$myrow['bid']] =& $block;
+            }
+            unset($block);
+        }
+        return $ret;
+    }
+
+    /**
+     * get a list of blocks matchich certain conditions
+	 * 
+	 * @param string $criteria conditions to match
+	 * @return array array of blocks matching the conditions 
+     **/
+    function &getList($criteria = null)
+    {
+        $blocks =& $this->getObjects($criteria, true);
+        $ret = array();
+        foreach (array_keys($blocks) as $i) {
+            $name = ($blocks[$i]->getVar('block_type') != 'C') ? $blocks[$i]->getVar('name') : $blocks[$i]->getVar('title');
+            $ret[$i] = $name;
+        }
+        return $ret;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/block.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/comment.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/comment.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/comment.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,442 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+/**
+ * 
+ * 
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * A Comment
+ * 
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsComment extends XoopsObject
+{
+
+    /**
+     * Constructor
+     **/
+    function XoopsComment()
+    {
+        $this->XoopsObject();
+        $this->initVar('com_id', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('com_pid', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('com_modid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('com_icon', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('com_title', XOBJ_DTYPE_TXTBOX, null, true, 255, true);
+        $this->initVar('com_text', XOBJ_DTYPE_TXTAREA, null, true, null, true);
+        $this->initVar('com_created', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('com_modified', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('com_uid', XOBJ_DTYPE_INT, 0, true);
+        $this->initVar('com_ip', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('com_sig', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('com_itemid', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('com_rootid', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('com_status', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('com_exparams', XOBJ_DTYPE_OTHER, null, false, 255);
+        $this->initVar('dohtml', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('dosmiley', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('doxcode', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('doimage', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('dobr', XOBJ_DTYPE_INT, 0, false);
+    }
+
+	/**
+	 * Is this comment on the root level?
+	 * 
+	 * @return  bool
+	 **/
+	function isRoot()
+    {
+        return ($this->getVar('com_id') == $this->getVar('com_rootid'));
+    }
+}
+
+/**
+ * XOOPS comment handler class.  
+ * 
+ * This class is responsible for providing data access mechanisms to the data source 
+ * of XOOPS comment class objects.
+ *
+ * 
+ * @package     kernel
+ * @subpackage  comment
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsCommentHandler extends XoopsObjectHandler
+{
+
+    /**
+     * Create a {@link XoopsComment} 
+     * 
+     * @param	bool    $isNew  Flag the object as "new"?
+     * 
+     * @return	object
+     */
+    function &create($isNew = true)
+    {
+        $comment = new XoopsComment();
+        if ($isNew) {
+            $comment->setNew();
+        }
+        return $comment;
+    }
+
+    /**
+     * Retrieve a {@link XoopsComment} 
+     * 
+     * @param   int $id ID
+     * 
+     * @return  object  {@link XoopsComment}, FALSE on fail
+     **/
+    function &get($id)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('xoopscomments').' WHERE com_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $comment = new XoopsComment();
+                $comment->assignVars($this->db->fetchArray($result));
+                return $comment;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * Write a comment to database
+     * 
+     * @param   object  &$comment
+     * 
+     * @return  bool
+     **/
+    function insert(&$comment)
+    {
+        if (strtolower(get_class($comment)) != 'xoopscomment') {
+            return false;
+        }
+        if (!$comment->isDirty()) {
+            return true;
+        }
+        if (!$comment->cleanVars()) {
+            return false;
+        }
+        foreach ($comment->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($comment->isNew()) {
+            $com_id = $this->db->genId('xoopscomments_com_id_seq');
+            $sql = sprintf("INSERT INTO %s (com_id, com_pid, com_modid, com_icon, com_title, com_text, com_created, com_modified, com_uid, com_ip, com_sig, com_itemid, com_rootid, com_status, com_exparams, dohtml, dosmiley, doxcode, doimage, dobr) VALUES (%u, %u, %u, %s, %s, %s, %u, %u, %u, %s, %u, %u, %u, %u, %s, %u, %u, %u, %u, %u)", $this->db->prefix('xoopscomments'), $com_id, $com_pid, $com_modid, $this->db->quoteString($com_icon), $this->db->quoteString($com_title), $this->db->quoteString($com_text), $com_created, $com_modified, $com_uid, $this->db->quoteString($com_ip), $com_sig, $com_itemid, $com_rootid, $com_status, $this->db->quoteString($com_exparams), $dohtml, $dosmiley, $doxcode, $doimage, $dobr);
+        } else {
+            $sql = sprintf("UPDATE %s SET com_pid = %u, com_icon = %s, com_title = %s, com_text = %s, com_created = %u, com_modified = %u, com_uid = %u, com_ip = %s, com_sig = %u, com_itemid = %u, com_rootid = %u, com_status = %u, com_exparams = %s, dohtml = %u, dosmiley = %u, doxcode = %u, doimage = %u, dobr = %u WHERE com_id = %u", $this->db->prefix('xoopscomments'), $com_pid, $this->db->quoteString($com_icon), $this->db->quoteString($com_title), $this->db->quoteString($com_text), $com_created, $com_modified, $com_uid, $this->db->quoteString($com_ip), $com_sig, $com_itemid, $com_rootid, $com_status, $this->db->quoteString($com_exparams), $dohtml, $dosmiley, $doxcode, $doimage, $dobr, $com_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($com_id)) {
+            $com_id = $this->db->getInsertId();
+        }
+        $comment->assignVar('com_id', $com_id);
+        return true;
+    }
+
+    /**
+     * Delete a {@link XoopsComment} from the database
+     * 
+     * @param   object  &$comment
+     * 
+     * @return  bool
+     **/
+    function delete(&$comment)
+    {
+        if (strtolower(get_class($comment)) != 'xoopscomment') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE com_id = %u", $this->db->prefix('xoopscomments'), $comment->getVar('com_id'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Get some {@link XoopsComment}s 
+     * 
+     * @param   object  $criteria
+     * @param   bool    $id_as_key  Use IDs as keys into the array?
+     * 
+     * @return  array   Array of {@link XoopsComment} objects
+     **/
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('xoopscomments');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $sort = ($criteria->getSort() != '') ? $criteria->getSort() : 'com_id';
+            $sql .= ' ORDER BY '.$sort.' '.$criteria->getOrder();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $comment = new XoopsComment();
+            $comment->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $comment;
+            } else {
+                $ret[$myrow['com_id']] =& $comment;
+            }
+            unset($comment);
+        }
+        return $ret;
+    }
+
+    /**
+     * Count Comments
+     * 
+     * @param   object  $criteria   {@link CriteriaElement} 
+     * 
+     * @return  int     Count
+     **/
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('xoopscomments');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result =& $this->db->query($sql)) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+    /**
+     * Delete multiple comments
+     * 
+     * @param   object  $criteria   {@link CriteriaElement} 
+     * 
+     * @return  bool
+     **/
+    function deleteAll($criteria = null)
+    {
+        $sql = 'DELETE FROM '.$this->db->prefix('xoopscomments');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+   /**
+     * Get a list of comments
+     * 
+     * @param   object  $criteria   {@link CriteriaElement} 
+     * 
+     * @return  array   Array of raw database records
+     **/
+    function &getList($criteria = null)
+    {
+        $comments =& $this->getObjects($criteria, true);
+        $ret = array();
+        foreach (array_keys($comments) as $i) {
+            $ret[$i] = $comments[$i]->getVar('com_title');
+        }
+        return $ret;
+    }
+
+    /**
+     * Retrieves comments for an item
+     * 
+     * @param   int     $module_id  Module ID
+     * @param   int     $item_id    Item ID
+     * @param   string  $order      Sort order
+     * @param   int     $status     Status of the comment
+     * @param   int     $limit      Max num of comments to retrieve
+     * @param   int     $start      Start offset
+     * 
+     * @return  array   Array of {@link XoopsComment} objects
+     **/
+    function &getByItemId($module_id, $item_id, $order = null, $status = null, $limit = null, $start = 0)
+    {
+        $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
+        $criteria->add(new Criteria('com_itemid', intval($item_id)));
+        if (isset($status)) {
+            $criteria->add(new Criteria('com_status', intval($status)));
+        }
+        if (isset($order)) {
+            $criteria->setOrder($order);
+        }
+        if (isset($limit)) {
+            $criteria->setLimit($limit);
+			$criteria->setStart($start);
+        }
+        return $this->getObjects($criteria);
+    }
+
+    /**
+     * Gets total number of comments for an item
+     * 
+     * @param   int     $module_id  Module ID
+     * @param   int     $item_id    Item ID
+     * @param   int     $status     Status of the comment
+     * 
+     * @return  array   Array of {@link XoopsComment} objects
+     **/
+    function &getCountByItemId($module_id, $item_id, $status = null)
+    {
+        $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
+        $criteria->add(new Criteria('com_itemid', intval($item_id)));
+        if (isset($status)) {
+            $criteria->add(new Criteria('com_status', intval($status)));
+        }
+        return $this->getCount($criteria);
+    }
+
+
+    /**
+     * Get the top {@link XoopsComment}s 
+     * 
+     * @param   int     $module_id
+     * @param   int     $item_id
+     * @param   strint  $order
+     * @param   int     $status
+     * 
+     * @return  array   Array of {@link XoopsComment} objects
+     **/
+    function &getTopComments($module_id, $item_id, $order, $status = null)
+    {
+        $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
+        $criteria->add(new Criteria('com_itemid', intval($item_id)));
+        $criteria->add(new Criteria('com_pid', 0));
+        if (isset($status)) {
+            $criteria->add(new Criteria('com_status', intval($status)));
+        }
+        $criteria->setOrder($order);
+        return $this->getObjects($criteria);
+    }
+
+    /**
+     * Retrieve a whole thread
+     * 
+     * @param   int     $comment_rootid
+     * @param   int     $comment_id
+     * @param   int     $status
+     * 
+     * @return  array   Array of {@link XoopsComment} objects
+     **/
+    function &getThread($comment_rootid, $comment_id, $status = null)
+    {
+        $criteria = new CriteriaCompo(new Criteria('com_rootid', intval($comment_rootid)));
+        $criteria->add(new Criteria('com_id', intval($comment_id), '>='));
+        if (isset($status)) {
+            $criteria->add(new Criteria('com_status', intval($status)));
+        }
+        return $this->getObjects($criteria);
+    }
+
+    /**
+     * Update
+     * 
+     * @param   object  &$comment       {@link XoopsComment} object
+     * @param   string  $field_name     Name of the field
+     * @param   mixed   $field_value    Value to write
+     * 
+     * @return  bool
+     **/
+    function updateByField(&$comment, $field_name, $field_value)
+    {
+        $comment->unsetNew();
+        $comment->setVar($field_name, $field_value);
+        return $this->insert($comment);
+    }
+
+    /**
+     * Delete all comments for one whole module
+     * 
+     * @param   int $module_id  ID of the module
+     * @return  bool
+     **/
+    function deleteByModule($module_id)
+    {
+        return $this->deleteAll(new Criteria('com_modid', intval($module_id)));
+    }
+
+    /**
+     * Change a value in multiple comments
+     * 
+     * @param   string  $fieldname  Name of the field
+     * @param   string  $fieldvalue Value to write
+     * @param   object  $criteria   {@link CriteriaElement} 
+     * 
+     * @return  bool
+     **/
+/*    
+    function updateAll($fieldname, $fieldvalue, $criteria = null)
+    {
+        $set_clause = is_numeric($fieldvalue) ? $filedname.' = '.$fieldvalue : $filedname.' = '.$this->db->quoteString($fieldvalue);
+        $sql = 'UPDATE '.$this->db->prefix('xoopscomments').' SET '.$set_clause;
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+*/
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/comment.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/config.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/config.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/config.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,305 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+require_once XOOPS_ROOT_PATH.'/kernel/configoption.php';
+require_once XOOPS_ROOT_PATH.'/kernel/configitem.php';
+
+/**
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+
+/**
+* XOOPS configuration handling class.
+* This class acts as an interface for handling general configurations of XOOPS
+* and its modules.
+*
+*
+* @author  Kazumi Ono <webmaster at myweb.ne.jp>
+* @todo    Tests that need to be made:
+*          - error handling
+* @access  public
+*/
+
+class XoopsConfigHandler
+{
+
+    /**
+     * holds reference to config item handler(DAO) class
+     * 
+     * @var     object
+     * @access	private
+     */
+    var $_cHandler;
+
+    /**
+     * holds reference to config option handler(DAO) class
+     * 
+     * @var	    object
+     * @access	private
+     */
+    var $_oHandler;
+
+	/**
+	 * holds an array of cached references to config value arrays,
+	 *  indexed on module id and category id
+	 *
+	 * @var     array
+	 * @access  private
+	 */
+	var $_cachedConfigs = array();
+
+    /**
+     * Constructor
+     * 
+     * @param	object  &$db    reference to database object
+     */
+    function XoopsConfigHandler(&$db)
+    {
+        $this->_cHandler = new XoopsConfigItemHandler($db);
+        $this->_oHandler = new XoopsConfigOptionHandler($db);
+    }
+
+    /**
+     * Create a config
+     * 
+     * @see     XoopsConfigItem
+     * @return	object  reference to the new {@link XoopsConfigItem}
+     */
+    function &createConfig()
+    {
+        return $this->_cHandler->create();
+    }
+
+    /**
+     * Get a config
+     * 
+     * @param	int     $id             ID of the config
+     * @param	bool    $withoptions    load the config's options now?
+     * @return	object  reference to the {@link XoopsConfig} 
+     */
+    function &getConfig($id, $withoptions = false)
+    {
+        $config =& $this->_cHandler->get($id);
+        if ($withoptions == true) {
+            $config->setConfOptions($this->getConfigOptions(new Criteria('conf_id', $id)));
+        }
+        return $config;
+    }
+
+    /**
+     * insert a new config in the database
+     * 
+     * @param	object  &$config    reference to the {@link XoopsConfigItem} 
+     */
+    function insertConfig(&$config)
+    {
+        if (!$this->_cHandler->insert($config)) {
+            return false;
+        }
+        $options =& $config->getConfOptions();
+        $count = count($options);
+		$conf_id = $config->getVar('conf_id');
+        for ($i = 0; $i < $count; $i++) {
+            $options[$i]->setVar('conf_id', $conf_id);
+            if (!$this->_oHandler->insert($options[$i])) {
+				echo $options[$i]->getErrors();
+			}
+        }
+		if (!empty($this->_cachedConfigs[$config->getVar('conf_modid')][$config->getVar('conf_catid')])) {
+			unset ($this->_cachedConfigs[$config->getVar('conf_modid')][$config->getVar('conf_catid')]);
+		}
+        return true;
+    }
+
+    /**
+     * Delete a config from the database
+     * 
+     * @param	object  &$config    reference to a {@link XoopsConfigItem} 
+     */
+    function deleteConfig(&$config)
+    {
+        if (!$this->_cHandler->delete($config)) {
+            return false;
+        }
+        $options =& $config->getConfOptions();
+        $count = count($options);
+        if ($count == 0) {
+            $options =& $this->getConfigOptions(new Criteria('conf_id', $config->getVar('conf_id')));
+            $count = count($options);
+        }
+        if (is_array($options) && $count > 0) {
+            for ($i = 0; $i < $count; $i++) {
+                $this->_oHandler->delete($options[$i]);
+            }
+        }
+		if (!empty($this->_cachedConfigs[$config->getVar('conf_modid')][$config->getVar('conf_catid')])) {
+			unset ($this->_cachedConfigs[$config->getVar('conf_modid')][$config->getVar('conf_catid')]);
+		}
+        return true;
+    }
+
+    /**
+     * get one or more Configs
+     * 
+     * @param	object  $criteria       {@link CriteriaElement} 
+     * @param	bool    $id_as_key      Use the configs' ID as keys?
+     * @param	bool    $with_options   get the options now?
+     * 
+     * @return	array   Array of {@link XoopsConfigItem} objects
+     */
+    function &getConfigs($criteria = null, $id_as_key = false, $with_options = false)
+    {
+        return $this->_cHandler->getObjects($criteria, $id_as_key);
+    }
+
+    /**
+     * Count some configs
+     * 
+     * @param	object  $criteria   {@link CriteriaElement} 
+     */
+    function getConfigCount($criteria = null)
+    {
+        return $this->_cHandler->getCount($criteria);
+    }
+
+    /**
+     * Get configs from a certain category
+     * 
+     * @param	int $category   ID of a category
+     * @param	int $module     ID of a module
+     * 
+     * @return	array   array of {@link XoopsConfig}s 
+     */
+    function &getConfigsByCat($category, $module = 0)
+    {
+        static $_cachedConfigs;
+		if (!empty($_cachedConfigs[$module][$category])) {
+			return $_cachedConfigs[$module][$category];
+		} else {
+        	$ret = array();
+        	$criteria = new CriteriaCompo(new Criteria('conf_modid', intval($module)));
+        	if (!empty($category)) {
+            	$criteria->add(new Criteria('conf_catid', intval($category)));
+        	}
+        	$configs =& $this->getConfigs($criteria, true);
+			if (is_array($configs)) {
+            	foreach (array_keys($configs) as $i) {
+                	$ret[$configs[$i]->getVar('conf_name')] = $configs[$i]->getConfValueForOutput();
+            	}
+        	}
+			$_cachedConfigs[$module][$category] =& $ret;
+        	return $ret;
+		}
+    }
+
+    /**
+     * Make a new {@link XoopsConfigOption} 
+     * 
+     * @return	object  {@link XoopsConfigOption} 
+     */
+    function &createConfigOption(){
+        return $this->_oHandler->create();
+    }
+
+    /**
+     * Get a {@link XoopsConfigOption} 
+     * 
+     * @param	int $id ID of the config option
+     * 
+     * @return	object  {@link XoopsConfigOption} 
+     */
+    function &getConfigOption($id)
+    {
+        return $this->_oHandler->get($id);
+    }
+
+    /**
+     * Get one or more {@link XoopsConfigOption}s
+     * 
+     * @param	object  $criteria   {@link CriteriaElement} 
+     * @param	bool    $id_as_key  Use IDs as keys in the array?
+     * 
+     * @return	array   Array of {@link XoopsConfigOption}s
+     */
+    function &getConfigOptions($criteria = null, $id_as_key = false)
+    {
+        return $this->_oHandler->getObjects($criteria, $id_as_key);
+    }
+
+    /**
+     * Count some {@link XoopsConfigOption}s
+     * 
+     * @param	object  $criteria   {@link CriteriaElement} 
+     * 
+     * @return	int     Count of {@link XoopsConfigOption}s matching $criteria
+     */
+    function getConfigOptionsCount($criteria = null)
+    {
+        return $this->_oHandler->getCount($criteria);
+    }
+
+    /**
+     * Get a list of configs
+     * 
+     * @param	int $conf_modid ID of the modules
+     * @param	int $conf_catid ID of the category
+     * 
+     * @return	array   Associative array of name=>value pairs.
+     */
+    function &getConfigList($conf_modid, $conf_catid = 0)
+    {
+		if (!empty($this->_cachedConfigs[$conf_modid][$conf_catid])) {
+			return $this->_cachedConfigs[$conf_modid][$conf_catid];
+		} else {
+        	$criteria = new CriteriaCompo(new Criteria('conf_modid', $conf_modid));
+        	if (empty($conf_catid)) {
+            	$criteria->add(new Criteria('conf_catid', $conf_catid));
+        	}
+        	$configs =& $this->_cHandler->getObjects($criteria);
+        	$confcount = count($configs);
+        	$ret = array();
+        	for ($i = 0; $i < $confcount; $i++) {
+            	$ret[$configs[$i]->getVar('conf_name')] = $configs[$i]->getConfValueForOutput();
+        	}
+			$this->_cachedConfigs[$conf_modid][$conf_catid] =& $ret;
+        	return $ret;
+		}
+    }
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/kernel/config.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/configcategory.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/configcategory.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/configcategory.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,219 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+/**
+ * 
+ * 
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+
+/**
+ * A category of configs
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ */
+class XoopsConfigCategory extends XoopsObject
+{
+    /**
+     * Constructor
+     * 
+     */
+    function XoopsConfigCategory()
+    {
+        $this->XoopsObject();
+        $this->initVar('confcat_id', XOBJ_DTYPE_INT, null);
+        $this->initVar('confcat_name', XOBJ_DTYPE_OTHER, null);
+        $this->initVar('confcat_order', XOBJ_DTYPE_INT, 0);
+    }
+}
+
+
+/**
+ * XOOPS configuration category handler class.  
+ * 
+ * This class is responsible for providing data access mechanisms to the data source 
+ * of XOOPS configuration category class objects.
+ *
+ * @author  Kazumi Ono <onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ * @subpackage  config
+ */
+class XoopsConfigCategoryHandler extends XoopsObjectHandler
+{
+
+    /**
+     * Create a new category
+     * 
+     * @param	bool    $isNew  Flag the new object as "new"?
+     * 
+     * @return	object  New {@link XoopsConfigCategory} 
+     */
+    function &create($isNew = true)
+    {
+        $confcat = new XoopsConfigCategory();
+        if ($isNew) {
+            $confcat->setNew();
+        }
+        return $confcat;
+    }
+
+    /**
+     * Retrieve a {@link XoopsConfigCategory} 
+     * 
+     * @param	int $id ID
+     * 
+     * @return	object  {@link XoopsConfigCategory}, FALSE on fail
+     */
+    function &get($id)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('configcategory').' WHERE confcat_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $confcat = new XoopsConfigCategory();
+                $confcat->assignVars($this->db->fetchArray($result), false);
+                return $confcat;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * Store a {@link XoopsConfigCategory}
+     * 
+     * @param	object   &$confcat  {@link XoopsConfigCategory}
+     * 
+     * @return	bool    TRUE on success
+     */
+    function insert(&$confcat)
+    {
+        if (strtolower(get_class($confcat)) != 'xoopsconfigcategory') {
+            return false;
+        }
+        if (!$confcat->isDirty()) {
+            return true;
+        }
+        if (!$confcat->cleanVars()) {
+            return false;
+        }
+        foreach ($confcat->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($confcat->isNew()) {
+            $confcat_id = $this->db->genId('configcategory_confcat_id_seq');
+            $sql = sprintf("INSERT INTO %s (confcat_id, confcat_name, confcat_order) VALUES (%u, %s, %u)", $this->db->prefix('configcategory'), $confcat_id, $this->db->quoteString($confcat_name), $confcat_order);
+        } else {
+            $sql = sprintf("UPDATE %s SET confcat_name = %s, confcat_order = %u WHERE confcat_id = %u", $this->db->prefix('configcategory'), $this->db->quoteString($confcat_name), $confcat_order, $confcat_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($confcat_id)) {
+            $confcat_id = $this->db->getInsertId();
+        }
+        $confcat->assignVar('confcat_id', $confcat_id);
+        return $confcat_id;
+    }
+
+    /**
+     * Delelete a {@link XoopsConfigCategory}
+     * 
+     * @param	object  &$confcat   {@link XoopsConfigCategory}
+     * 
+     * @return	bool    TRUE on success
+     */
+    function delete(&$confcat)
+    {
+        if (strtolower(get_class($confcat)) != 'xoopsconfigcategory') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE confcat_id = %u", $this->db->prefix('configcategory'), $configcategory->getVar('confcat_id'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Get some {@link XoopsConfigCategory}s
+     * 
+     * @param	object  $criteria   {@link CriteriaElement} 
+     * @param	bool    $id_as_key  Use the IDs as keys to the array?
+     * 
+     * @return	array   Array of {@link XoopsConfigCategory}s
+     */
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('configcategory');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $sort = !in_array($criteria->getSort(), array('confcat_id', 'confcat_name', 'confcat_order')) ? 'confcat_order' : $criteria->getSort();
+            $sql .= ' ORDER BY '.$sort.' '.$criteria->getOrder();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $confcat = new XoopsConfigCategory();
+            $confcat->assignVars($myrow, false);
+            if (!$id_as_key) {
+                $ret[] =& $confcat;
+            } else {
+                $ret[$myrow['confcat_id']] =& $confcat;
+            }
+            unset($confcat);
+        }
+        return $ret;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/configcategory.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/configitem.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/configitem.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/configitem.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,333 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+/**
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**#@+
+ * Config type
+ */
+define('XOOPS_CONF', 1);
+define('XOOPS_CONF_USER', 2);
+define('XOOPS_CONF_METAFOOTER', 3);
+define('XOOPS_CONF_CENSOR', 4);
+define('XOOPS_CONF_SEARCH', 5);
+define('XOOPS_CONF_MAILER', 6);
+/**#@-*/
+
+/**
+ * 
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsConfigItem extends XoopsObject
+{
+
+    /**
+     * Config options
+     * 
+     * @var	array
+     * @access	private
+     */
+    var $_confOptions = array();
+
+    /**
+     * Constructor
+     */
+    function XoopsConfigItem()
+    {
+        $this->initVar('conf_id', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('conf_modid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('conf_catid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('conf_name', XOBJ_DTYPE_OTHER);
+        $this->initVar('conf_title', XOBJ_DTYPE_TXTBOX);
+        $this->initVar('conf_value', XOBJ_DTYPE_TXTAREA);
+        $this->initVar('conf_desc', XOBJ_DTYPE_OTHER);
+        $this->initVar('conf_formtype', XOBJ_DTYPE_OTHER);
+        $this->initVar('conf_valuetype', XOBJ_DTYPE_OTHER);
+        $this->initVar('conf_order', XOBJ_DTYPE_INT);
+    }
+
+    /**
+     * Get a config value in a format ready for output
+     * 
+     * @return	string
+     */
+    function &getConfValueForOutput()
+    {
+        switch ($this->getVar('conf_valuetype')) {
+        case 'int':
+            return intval($this->getVar('conf_value', 'N'));
+            break;
+        case 'array':
+            return unserialize($this->getVar('conf_value', 'N'));
+        case 'float':
+            $value = $this->getVar('conf_value', 'N');
+            return (float)$value;
+            break;
+        case 'textarea':
+            return $this->getVar('conf_value');
+        default:
+            return $this->getVar('conf_value', 'N');
+            break;
+        }
+    }
+
+    /**
+     * Set a config value
+     * 
+     * @param	mixed   &$value Value
+     * @param	bool    $force_slash
+     */
+    function setConfValueForInput(&$value, $force_slash = false)
+    {
+        switch($this->getVar('conf_valuetype')) {
+        case 'array':
+            if (!is_array($value)) {
+                $value = explode('|', trim($value));
+            }
+            $this->setVar('conf_value', serialize($value), $force_slash);
+            break;
+        case 'text':
+            $this->setVar('conf_value', trim($value), $force_slash);
+            break;
+        default:
+            $this->setVar('conf_value', $value, $force_slash);
+            break;
+        }
+    }
+
+    /**
+     * Assign one or more {@link XoopsConfigItemOption}s 
+     * 
+     * @param	mixed   $option either a {@link XoopsConfigItemOption} object or an array of them
+     */
+    function setConfOptions($option)
+    {
+        if (is_array($option)) {
+            $count = count($option);
+            for ($i = 0; $i < $count; $i++) {
+                $this->setConfOptions($option[$i]);
+            }
+        } else {
+            if(is_object($option)) {
+                $this->_confOptions[] =& $option;
+            }
+        }
+    }
+
+    /**
+     * Get the {@link XoopsConfigItemOption}s of this Config
+     * 
+     * @return	array   array of {@link XoopsConfigItemOption} 
+     */
+    function &getConfOptions()
+    {
+        return $this->_confOptions;
+    }
+}
+
+
+/**
+* XOOPS configuration handler class.  
+* 
+* This class is responsible for providing data access mechanisms to the data source 
+* of XOOPS configuration class objects.
+*
+* @author       Kazumi Ono <onokazu at xoops.org>
+* @copyright    copyright (c) 2000-2003 XOOPS.org
+*/
+class XoopsConfigItemHandler extends XoopsObjectHandler
+{
+
+    /**
+     * Create a new {@link XoopsConfigItem}
+     * 
+     * @see     XoopsConfigItem
+     * @param	bool    $isNew  Flag the config as "new"?
+     * @return	object  reference to the new config
+     */
+    function &create($isNew = true)
+    {
+        $config = new XoopsConfigItem();
+        if ($isNew) {
+            $config->setNew();
+        }
+        return $config;
+    }
+
+    /**
+     * Load a config from the database
+     * 
+     * @param	int $id ID of the config
+     * @return	object  reference to the config, FALSE on fail
+     */
+    function &get($id)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('config').' WHERE conf_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $myrow = $this->db->fetchArray($result);
+                $config = new XoopsConfigItem();
+                $config->assignVars($myrow);
+                return $config;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * Write a config to the database
+     * 
+     * @param	object  &$config    {@link XoopsConfigItem} object
+     * @return  mixed   FALSE on fail.
+     */
+    function insert(&$config)
+    {
+        if (strtolower(get_class($config)) != 'xoopsconfigitem') {
+            return false;
+        }
+        if (!$config->isDirty()) {
+            return true;
+        }
+        if (!$config->cleanVars()) {
+            return false;
+        }
+        foreach ($config->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($config->isNew()) {
+            $conf_id = $this->db->genId('config_conf_id_seq');
+            $sql = sprintf("INSERT INTO %s (conf_id, conf_modid, conf_catid, conf_name, conf_title, conf_value, conf_desc, conf_formtype, conf_valuetype, conf_order) VALUES (%u, %u, %u, %s, %s, %s, %s, %s, %s, %u)", $this->db->prefix('config'), $conf_id, $conf_modid, $conf_catid, $this->db->quoteString($conf_name), $this->db->quoteString($conf_title), $this->db->quoteString($conf_value), $this->db->quoteString($conf_desc), $this->db->quoteString($conf_formtype), $this->db->quoteString($conf_valuetype), $conf_order);
+        } else {
+            $sql = sprintf("UPDATE %s SET conf_modid = %u, conf_catid = %u, conf_name = %s, conf_title = %s, conf_value = %s, conf_desc = %s, conf_formtype = %s, conf_valuetype = %s, conf_order = %u WHERE conf_id = %u", $this->db->prefix('config'), $conf_modid, $conf_catid, $this->db->quoteString($conf_name), $this->db->quoteString($conf_title), $this->db->quoteString($conf_value), $this->db->quoteString($conf_desc), $this->db->quoteString($conf_formtype), $this->db->quoteString($conf_valuetype), $conf_order, $conf_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($conf_id)) {
+            $conf_id = $this->db->getInsertId();
+        }
+        $config->assignVar('conf_id', $conf_id);
+        return true;
+    }
+
+    /**
+     * Delete a config from the database
+     * 
+     * @param	object  &$config    Config to delete
+     * @return	bool    Successful?
+     */
+    function delete(&$config)
+    {
+        if (strtolower(get_class($config)) != 'xoopsconfigitem') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE conf_id = %u", $this->db->prefix('config'), $config->getVar('conf_id'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Get configs from the database
+     * 
+     * @param	object  $criteria   {@link CriteriaElement}
+     * @param	bool    $id_as_key  return the config's id as key?
+     * @return	array   Array of {@link XoopsConfigItem} objects
+     */
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('config');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $sql .= ' ORDER BY conf_order ASC';
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return false;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $config = new XoopsConfigItem();
+            $config->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $config;
+            } else {
+                $ret[$myrow['conf_id']] =& $config;
+            }
+            unset($config);
+        }
+        return $ret;
+    }
+
+    /**
+     * Count configs
+     * 
+     * @param	object  $criteria   {@link CriteriaElement} 
+     * @return	int     Count of configs matching $criteria
+     */
+    function &getCount($criteria = null)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('config');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        $result =& $this->db->query($sql);
+        if (!$result) {
+            return false;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/configitem.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/configoption.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/configoption.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/configoption.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,212 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+/**
+ * 
+ * 
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * A Config-Option
+ * 
+ * @author	Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * 
+ * @package     kernel
+ */
+class XoopsConfigOption extends XoopsObject
+{
+    /**
+     * Constructor
+     */
+    function XoopsConfigOption()
+    {
+        $this->XoopsObject();
+        $this->initVar('confop_id', XOBJ_DTYPE_INT, null);
+        $this->initVar('confop_name', XOBJ_DTYPE_TXTBOX, null, true, 255);
+        $this->initVar('confop_value', XOBJ_DTYPE_TXTBOX, null, true, 255);
+        $this->initVar('conf_id', XOBJ_DTYPE_INT, 0);
+    }
+}
+
+/**
+ * XOOPS configuration option handler class.  
+ * This class is responsible for providing data access mechanisms to the data source 
+ * of XOOPS configuration option class objects.
+ *
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ * @author  Kazumi Ono <onokazu at xoops.org>
+ * 
+ * @package     kernel
+ * @subpackage  config
+*/
+class XoopsConfigOptionHandler extends XoopsObjectHandler
+{
+
+    /**
+     * Create a new option
+     * 
+     * @param	bool    $isNew  Flag the option as "new"?
+     * 
+     * @return	object  {@link XoopsConfigOption} 
+     */
+    function &create($isNew = true)
+    {
+        $confoption = new XoopsConfigOption();
+        if ($isNew) {
+            $confoption->setNew();
+        }
+        return $confoption;
+    }
+
+    /**
+     * Get an option from the database
+     * 
+     * @param	int $id ID of the option
+     * 
+     * @return	object  reference to the {@link XoopsConfigOption}, FALSE on fail
+     */
+    function &get($id)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('configoption').' WHERE confop_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $confoption = new XoopsConfigOption();
+                $confoption->assignVars($this->db->fetchArray($result));
+                return $confoption;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * Insert a new option in the database
+     * 
+     * @param	object  &$confoption    reference to a {@link XoopsConfigOption} 
+     * @return	bool    TRUE if successfull.
+     */
+    function insert(&$confoption)
+    {
+        if (strtolower(get_class($confoption)) != 'xoopsconfigoption') {
+            return false;
+        }
+        if (!$confoption->isDirty()) {
+            return true;
+        }
+        if (!$confoption->cleanVars()) {
+            return false;
+        }
+        foreach ($confoption->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($confoption->isNew()) {
+            $confop_id = $this->db->genId('configoption_confop_id_seq');
+            $sql = sprintf("INSERT INTO %s (confop_id, confop_name, confop_value, conf_id) VALUES (%u, %s, %s, %u)", $this->db->prefix('configoption'), $confop_id, $this->db->quoteString($confop_name), $this->db->quoteString($confop_value), $conf_id);
+        } else {
+            $sql = sprintf("UPDATE %s SET confop_name = %s, confop_value = %s WHERE confop_id = %u", $this->db->prefix('configoption'), $this->db->quoteString($confop_name), $this->db->quoteString($confop_value), $confop_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($confop_id)) {
+            $confop_id = $this->db->getInsertId();
+        }
+        $confoption->assignVar('confop_id', $confop_id);
+        return $confop_id;
+    }
+
+    /**
+     * Delete an option
+     * 
+     * @param	object  &$confoption    reference to a {@link XoopsConfigOption} 
+     * @return	bool    TRUE if successful
+     */
+    function delete(&$confoption)
+    {
+        if (strtolower(get_class($confoption)) != 'xoopsconfigoption') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE confop_id = %u", $this->db->prefix('configoption'), $confoption->getVar('confop_id'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Get some {@link XoopsConfigOption}s 
+     * 
+     * @param	object  $criteria   {@link CriteriaElement} 
+     * @param	bool    $id_as_key  Use the IDs as array-keys?
+     * 
+     * @return	array   Array of {@link XoopsConfigOption}s 
+     */
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('configoption');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere().' ORDER BY confop_id '.$criteria->getOrder();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $confoption = new XoopsConfigOption();
+            $confoption->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $confoption;
+            } else {
+                $ret[$myrow['confop_id']] =& $confoption;
+            }
+            unset($confoption);
+        }
+        return $ret;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/configoption.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/group.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/group.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/group.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,444 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+/**
+ * a group of users
+ * 
+ * @copyright copyright (c) 2000-2003 XOOPS.org
+ * @author Kazumi Ono <onokazu at xoops.org> 
+ * @package kernel
+ */
+class XoopsGroup extends XoopsObject
+{
+    /**
+     * constructor 
+     */
+    function XoopsGroup()
+    {
+        $this->XoopsObject();
+        $this->initVar('groupid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('name', XOBJ_DTYPE_TXTBOX, null, true, 100);
+        $this->initVar('description', XOBJ_DTYPE_TXTAREA, null, false);
+        $this->initVar('group_type', XOBJ_DTYPE_OTHER, null, false);
+    }
+}
+
+
+/**
+* XOOPS group handler class.
+* This class is responsible for providing data access mechanisms to the data source
+* of XOOPS group class objects.
+*
+* @author Kazumi Ono <onokazu at xoops.org>
+* @copyright copyright (c) 2000-2003 XOOPS.org
+* @package kernel
+* @subpackage member
+*/
+class XoopsGroupHandler extends XoopsObjectHandler
+{
+
+    /**
+     * create a new {@link XoopsGroup} object
+     * 
+     * @param bool $isNew mark the new object as "new"?
+     * @return object XoopsGroup reference to the new object
+     * 
+     */
+    function &create($isNew = true)
+    {
+        $group = new XoopsGroup();
+        if ($isNew) {
+            $group->setNew();
+        }
+        return $group;
+    }
+
+    /**
+     * retrieve a specific group
+     * 
+     * @param int $id ID of the group to get
+     * @return object XoopsGroup reference to the group object, FALSE if failed
+     */
+    function &get($id)
+    {
+        if (intval($id) > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('groups').' WHERE groupid='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $group = new XoopsGroup();
+                $group->assignVars($this->db->fetchArray($result));
+                return $group;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * insert a group into the database
+     * 
+     * @param object reference to the group object
+     * @return mixed ID of the group if inserted, FALSE if failed, TRUE if already present and unchanged.
+     */
+    function insert(&$group)
+    {
+        if (strtolower(get_class($group)) != 'xoopsgroup') {
+            return false;
+        }
+        if (!$group->isDirty()) {
+            return true;
+        }
+        if (!$group->cleanVars()) {
+            return false;
+        }
+        foreach ($group->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($group->isNew()) {
+            $groupid = $this->db->genId('group_groupid_seq');
+            $sql = sprintf("INSERT INTO %s (groupid, name, description, group_type) VALUES (%u, %s, %s, %s)", $this->db->prefix('groups'), $groupid, $this->db->quoteString($name), $this->db->quoteString($description), $this->db->quoteString($group_type));
+        } else {
+            $sql = sprintf("UPDATE %s SET name = %s, description = %s, group_type = %s WHERE groupid = %u", $this->db->prefix('groups'), $this->db->quoteString($name), $this->db->quoteString($description), $this->db->quoteString($group_type), $groupid);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($groupid)) {
+            $groupid = $this->db->getInsertId();
+        }
+        $group->assignVar('groupid', $groupid);
+        return true;
+    }
+
+    /**
+     * remove a group from the database
+     * 
+     * @param object $group reference to the group to be removed
+     * @return bool FALSE if failed
+     */
+    function delete(&$group)
+    {
+        if (strtolower(get_class($group)) != 'xoopsgroup') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE groupid = %u", $this->db->prefix('groups'), $group->getVar('groupid'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * retrieve groups from the database
+     * 
+     * @param object $criteria {@link CriteriaElement} with conditions for the groups
+     * @param bool $id_as_key should the groups' IDs be used as keys for the associative array?
+     * @return mixed Array of groups
+     */
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('groups');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $group = new XoopsGroup();
+            $group->assignVars($myrow);
+			if (!$id_as_key) {
+            	$ret[] =& $group;
+			} else {
+				$ret[$myrow['groupid']] =& $group;
+			}
+            unset($group);
+        }
+        return $ret;
+    }
+}
+
+/**
+ * membership of a user in a group
+ * 
+ * @author Kazumi Ono <onokazu at xoops.org>
+ * @copyright copyright (c) 2000-2003 XOOPS.org
+ * @package kernel
+ */
+class XoopsMembership extends XoopsObject
+{
+    /**
+     * constructor 
+     */
+    function XoopsMembership()
+    {
+        $this->XoopsObject();
+        $this->initVar('linkid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('groupid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('uid', XOBJ_DTYPE_INT, null, false);
+    }
+}
+
+/**
+* XOOPS membership handler class. (Singleton)
+* 
+* This class is responsible for providing data access mechanisms to the data source 
+* of XOOPS group membership class objects.
+*
+* @author Kazumi Ono <onokazu at xoops.org>
+* @copyright copyright (c) 2000-2003 XOOPS.org
+* @package kernel
+*/
+class XoopsMembershipHandler extends XoopsObjectHandler
+{
+
+    /**
+     * create a new membership
+     * 
+     * @param bool $isNew should the new object be set to "new"?
+     * @return object XoopsMembership
+     */
+    function &create($isNew = true)
+    {
+        $mship = new XoopsMembership();
+        if ($isNew) {
+            $mship->setNew();
+        }
+        return $mship;
+    }
+
+    /**
+     * retrieve a membership
+     * 
+     * @param int $id ID of the membership to get
+     * @return mixed reference to the object if successful, else FALSE
+     */
+    function &get($id)
+    {
+        if (intval($id) > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('groups_users_link').' WHERE linkid='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $mship = new XoopsMembership();
+                $mship->assignVars($this->db->fetchArray($result));
+                return $mship;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * inserts a membership in the database
+     * 
+     * @param object $mship reference to the membership object
+     * @return bool TRUE if already in DB or successful, FALSE if failed
+     */
+    function insert(&$mship)
+    {
+        if (strtolower(get_class($mship)) != 'xoopsmembership') {
+            return false;
+        }
+        if (!$mship->isDirty()) {
+            return true;
+        }
+        if (!$mship->cleanVars()) {
+            return false;
+        }
+        foreach ($mship->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($mship->isNew()) {
+            $linkid = $this->db->genId('groups_users_link_linkid_seq');
+            $sql = sprintf("INSERT INTO %s (linkid, groupid, uid) VALUES (%u, %u, %u)", $this->db->prefix('groups_users_link'), $linkid, $groupid, $uid);
+        } else {
+            $sql = sprintf("UPDATE %s SET groupid = %u, uid = %u WHERE linkid = %u", $this->db->prefix('groups_users_link'), $groupid, $uid, $linkid);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($linkid)) {
+            $linkid = $this->db->getInsertId();
+        }
+        $mship->assignVar('linkid', $linkid);
+        return true;
+    }
+
+    /**
+     * delete a membership from the database
+     * 
+     * @param object $mship reference to the membership object
+     * @return bool FALSE if failed
+     */
+    function delete(&$mship)
+    {
+        if (strtolower(get_class($mship)) != 'xoopsmembership') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE linkid = %u", $this->db->prefix('groups_users_link'), $groupm->getVar('linkid'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * retrieve memberships from the database
+     * 
+     * @param object $criteria {@link CriteriaElement} conditions to meet
+     * @param bool $id_as_key should the ID be used as the array's key?
+     * @return array array of references
+     */
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('groups_users_link');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $mship = new XoopsMembership();
+            $mship->assignVars($myrow);
+			if (!$id_as_key) {
+            	$ret[] =& $mship;
+			} else {
+				$ret[$myrow['linkid']] =& $mship;
+			}
+            unset($mship);
+        }
+        return $ret;
+    }
+
+    /**
+     * count how many memberships meet the conditions
+     * 
+     * @param object $criteria {@link CriteriaElement} conditions to meet
+     * @return int
+     */
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('groups_users_link');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        $result = $this->db->query($sql);
+        if (!$result) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+    /**
+     * delete all memberships meeting the conditions
+     * 
+     * @param object $criteria {@link CriteriaElement} with conditions to meet
+     * @return bool
+     */
+    function deleteAll($criteria = null)
+    {
+        $sql = 'DELETE FROM '.$this->db->prefix('groups_users_link');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * retrieve groups for a user
+     * 
+     * @param int $uid ID of the user
+     * @param bool $asobject should the groups be returned as {@link XoopsGroup}
+     * objects? FALSE returns associative array.
+     * @return array array of groups the user belongs to
+     */
+    function &getGroupsByUser($uid)
+    {
+        $ret = array();
+        $sql = 'SELECT groupid FROM '.$this->db->prefix('groups_users_link').' WHERE uid='.intval($uid);
+        $result = $this->db->query($sql);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $ret[] = $myrow['groupid'];
+        }
+        return $ret;
+    }
+
+    /**
+     * retrieve users belonging to a group
+     * 
+     * @param int $groupid ID of the group
+     * @param bool $asobject return users as {@link XoopsUser} objects?
+     * FALSE will return arrays
+     * @param int $limit number of entries to return
+     * @param int $start offset of first entry to return
+     * @return array array of users belonging to the group
+     */
+    function getUsersByGroup($groupid, $limit=0, $start=0)
+    {
+        $ret = array();
+        $sql = 'SELECT uid FROM '.$this->db->prefix('groups_users_link').' WHERE groupid='.intval($groupid);
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $ret[] = $myrow['uid'];
+        }
+        return $ret;
+    }
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/kernel/group.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/groupperm.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/groupperm.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/groupperm.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,406 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+/**
+ * 
+ * 
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * A group permission
+ * 
+ * These permissions are managed through a {@link XoopsGroupPermHandler} object
+ * 
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsGroupPerm extends XoopsObject
+{
+
+    /**
+     * Constructor
+     * 
+     */
+    function XoopsGroupPerm()
+    {
+        $this->XoopsObject();
+        $this->initVar('gperm_id', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('gperm_groupid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('gperm_itemid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('gperm_modid', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('gperm_name', XOBJ_DTYPE_OTHER, null, false);
+    }
+}
+
+
+/**
+* XOOPS group permission handler class.
+* 
+* This class is responsible for providing data access mechanisms to the data source 
+* of XOOPS group permission class objects. 
+* This class is an abstract class to be implemented by child group permission classes.
+*
+* @see          XoopsGroupPerm
+* @author       Kazumi Ono  <onokazu at xoops.org>
+* @copyright	copyright (c) 2000-2003 XOOPS.org
+*/
+class XoopsGroupPermHandler extends XoopsObjectHandler
+{
+
+    /**
+     * Create a new {@link XoopsGroupPerm} 
+     * 
+     * @return	bool    $isNew  Flag the object as "new"?
+     */
+    function &create($isNew = true)
+    {
+        $perm = new XoopsGroupPerm();
+        if ($isNew) {
+            $perm->setNew();
+        }
+        return $perm;
+    }
+
+    /**
+     * Retrieve a group permission
+     * 
+     * @param	int $id ID
+     * 
+     * @return	object  {@link XoopsGroupPerm}, FALSE on fail
+     */
+    function &get($id)
+    {
+        if (intval($id) > 0) {
+            $sql = sprintf("SELECT * FROM %s WHERE gperm_id = %u", $this->db->prefix('group_permission'), $id);
+            if ( !$result = $this->db->query($sql) ) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ( $numrows == 1 ) {
+                $perm = new XoopsGroupPerm();
+                $perm->assignVars($this->db->fetchArray($result));
+                return $perm;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * Store a {@link XoopsGroupPerm} 
+     * 
+     * @param	object  &$perm  {@link XoopsGroupPerm} object
+     * 
+     * @return	bool    TRUE on success
+     */
+    function insert(&$perm)
+    {
+        if ( strtolower(get_class($perm)) != 'xoopsgroupperm' ) {
+            return false;
+        }
+        if ( !$perm->isDirty() ) {
+            return true;
+        }
+        if (!$perm->cleanVars()) {
+            return false;
+        }
+        foreach ($perm->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($perm->isNew()) {
+            $gperm_id = $this->db->genId('group_permission_gperm_id_seq');
+            $sql = sprintf("INSERT INTO %s (gperm_id, gperm_groupid, gperm_itemid, gperm_modid, gperm_name) VALUES (%u, %u, %u, %u, %s)", $this->db->prefix('group_permission'), $gperm_id, $gperm_groupid, $gperm_itemid, $gperm_modid, $this->db->quoteString($gperm_name));
+        } else {
+            $sql = sprintf("UPDATE %s SET gperm_groupid = %u, gperm_itemid = %u, gperm_modid = %u WHERE gperm_id = %u", $this->db->prefix('group_permission'), $gperm_groupid, $gperm_itemid, $gperm_modid, $gperm_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($gperm_id)) {
+            $gperm_id = $this->db->getInsertId();
+        }
+        $perm->assignVar('gperm_id', $gperm_id);
+        return true;
+    }
+
+    /**
+     * Delete a {@link XoopsGroupPerm} 
+     * 
+     * @param	object  &$perm  
+     * 
+     * @return	bool    TRUE on success
+     */
+    function delete(&$perm)
+    {
+        if (strtolower(get_class($perm)) != 'xoopsgroupperm') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE gperm_id = %u", $this->db->prefix('group_permission'), $perm->getVar('gperm_id'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Retrieve multiple {@link XoopsGroupPerm}s 
+     * 
+     * @param	object  $criteria   {@link CriteriaElement}
+     * @param	bool    $id_as_key  Use IDs as array keys?
+     * 
+     * @return	array   Array of {@link XoopsGroupPerm}s 
+     */
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('group_permission');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $perm = new XoopsGroupPerm();
+            $perm->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $perm;
+            } else {
+                $ret[$myrow['gperm_id']] =& $perm;
+            }
+            unset($perm);
+        }
+        return $ret;
+    }
+
+    /**
+     * Count some {@link XoopsGroupPerm}s 
+     * 
+     * @param	object  $criteria   {@link CriteriaElement} 
+     * 
+     * @return	int
+     */
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('group_permission');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        $result = $this->db->query($sql);
+        if (!$result) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+    /**
+     * Delete all permissions by a certain criteria
+     * 
+     * @param	object  $criteria   {@link CriteriaElement} 
+     * 
+     * @return	bool    TRUE on success
+     */
+    function deleteAll($criteria = null)
+    {
+        $sql = sprintf("DELETE FROM %s", $this->db->prefix('group_permission'));		if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Delete all module specific permissions assigned for a group
+     * 
+     * @param	int  $gperm_groupid ID of a group
+     * @param	int  $gperm_modid ID of a module
+     * 
+     * @return	bool TRUE on success
+     */
+    function deleteByGroup($gperm_groupid, $gperm_modid = null)
+    {
+        $criteria = new CriteriaCompo(new Criteria('gperm_groupid', intval($gperm_groupid)));
+		if (isset($gperm_modid)) {
+            $criteria->add(new Criteria('gperm_modid', intval($gperm_modid)));
+        }
+        return $this->deleteAll($criteria);
+    }
+
+    /**
+     * Delete all module specific permissions
+     * 
+     * @param	int  $gperm_modid ID of a module
+     * @param	string  $gperm_name Name of a module permission
+     * @param	int  $gperm_itemid ID of a module item
+     * 
+     * @return	bool TRUE on success
+     */
+    function deleteByModule($gperm_modid, $gperm_name = null, $gperm_itemid = null)
+    {
+        $criteria = new CriteriaCompo(new Criteria('gperm_modid', intval($gperm_modid)));
+		if (isset($gperm_name)) {
+			$criteria->add(new Criteria('gperm_name', $gperm_name));
+			if (isset($gperm_itemid)) {
+				$criteria->add(new Criteria('gperm_itemid', intval($gperm_itemid)));
+			}
+		}
+        return $this->deleteAll($criteria);
+    }
+    /**#@-*/
+
+    /**
+     * Check permission
+     * 
+     * @param	string    $gperm_name       Name of permission
+     * @param	int       $gperm_itemid     ID of an item
+     * @param	int/array $gperm_groupid    A group ID or an array of group IDs
+     * @param	int       $gperm_modid      ID of a module
+     * 
+     * @return	bool    TRUE if permission is enabled
+     */
+    function checkRight($gperm_name, $gperm_itemid, $gperm_groupid, $gperm_modid = 1)
+    {
+        $criteria = new CriteriaCompo(new Criteria('gperm_modid', $gperm_modid));
+        $criteria->add(new Criteria('gperm_name', $gperm_name));
+        $gperm_itemid = intval($gperm_itemid);
+        if ($gperm_itemid > 0) {
+            $criteria->add(new Criteria('gperm_itemid', $gperm_itemid));
+        }
+        if (is_array($gperm_groupid)) {
+			if (in_array(XOOPS_GROUP_ADMIN, $gperm_groupid)) {
+                return true;
+            }
+            $criteria2 = new CriteriaCompo();
+            foreach ($gperm_groupid as $gid) {
+                $criteria2->add(new Criteria('gperm_groupid', $gid), 'OR');
+            }
+            $criteria->add($criteria2);
+        } else {
+            if (XOOPS_GROUP_ADMIN == $gperm_groupid) {
+                return true;
+            }
+            $criteria->add(new Criteria('gperm_groupid', $gperm_groupid));
+        }
+        if ($this->getCount($criteria) > 0) {
+            return true;
+        }
+        return false;
+    }
+
+    /**
+     * Add a permission
+     * 
+     * @param	string  $gperm_name       Name of permission
+     * @param	int     $gperm_itemid     ID of an item
+     * @param	int     $gperm_groupid    ID of a group
+     * @param	int     $gperm_modid      ID of a module
+     *
+     * @return	bool    TRUE jf success
+     */
+    function addRight($gperm_name, $gperm_itemid, $gperm_groupid, $gperm_modid = 1)
+    {
+        $perm =& $this->create();
+        $perm->setVar('gperm_name', $gperm_name);
+        $perm->setVar('gperm_groupid', $gperm_groupid);
+        $perm->setVar('gperm_itemid', $gperm_itemid);
+        $perm->setVar('gperm_modid', $gperm_modid);
+        return $this->insert($perm);
+    }
+
+    /**
+     * Get all item IDs that a group is assigned a specific permission
+     * 
+     * @param	string    $gperm_name       Name of permission
+     * @param	int/array $gperm_groupid    A group ID or an array of group IDs
+     * @param	int       $gperm_modid      ID of a module
+     *
+     * @return  array     array of item IDs
+     */
+	function getItemIds($gperm_name, $gperm_groupid, $gperm_modid = 1)
+	{
+		$ret = array();
+		$criteria = new CriteriaCompo(new Criteria('gperm_name', $gperm_name));
+		$criteria->add(new Criteria('gperm_modid', intval($gperm_modid)));
+		if (is_array($gperm_groupid)) {
+            $criteria2 = new CriteriaCompo();
+            foreach ($gperm_groupid as $gid) {
+                $criteria2->add(new Criteria('gperm_groupid', $gid), 'OR');
+            }
+            $criteria->add($criteria2);
+		} else {
+			$criteria->add(new Criteria('gperm_groupid', intval($gperm_groupid)));
+		}
+		$perms =& $this->getObjects($criteria, true);
+		foreach (array_keys($perms) as $i) {
+			$ret[] = $perms[$i]->getVar('gperm_itemid');
+		}
+		return array_unique($ret);
+	}
+
+    /**
+     * Get all group IDs assigned a specific permission for a particular item
+     * 
+     * @param	string  $gperm_name       Name of permission
+     * @param	int     $gperm_itemid     ID of an item
+     * @param	int     $gperm_modid      ID of a module
+     *
+     * @return  array   array of group IDs
+     */
+	function getGroupIds($gperm_name, $gperm_itemid, $gperm_modid = 1)
+	{
+		$ret = array();
+		$criteria = new CriteriaCompo(new Criteria('gperm_name', $gperm_name));
+		$criteria->add(new Criteria('gperm_itemid', intval($gperm_itemid)));
+		$criteria->add(new Criteria('gperm_modid', intval($gperm_modid)));
+		$perms =& $this->getObjects($criteria, true);
+		foreach (array_keys($perms) as $i) {
+			$ret[] = $perms[$i]->getVar('gperm_groupid');
+		}
+		return $ret;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/groupperm.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/handlerregistry.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/handlerregistry.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/handlerregistry.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,146 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+/**
+ * A registry for holding references to {@link XoopsObjectHandler} classes
+ * 
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+class XoopsHandlerRegistry
+{
+    /**
+     * holds references to handler class objects
+     * 
+     * @var     array
+     * @access	private
+     */
+    var $_handlers = array();
+
+	/**
+	 * get a reference to the only instance of this class
+     * 
+     * if the class has not been instantiated yet, this will also take 
+     * care of that
+	 * 
+     * @static
+     * @staticvar   object  The only instance of this class
+     * @return      object  Reference to the only instance of this class
+	 */
+    function &instance()
+    {
+        static $instance;
+        if (!isset($instance)) {
+            $instance = new XoopsHandlerRegistry();
+        }
+        return $instance;
+    }
+
+    /**
+     * Register a handler class object
+     * 
+     * @param	string  $name     Short name of a handler class
+     * @param	object  &$handler {@link XoopsObjectHandler} class object
+     */
+    function setHandler($name, &$handler)
+    {
+        $this->_handlers['kernel'][$name] =& $handler;
+    }
+
+    /**
+     * Get a registered handler class object
+     * 
+     * @param	string  $name     Short name of a handler class
+     * 
+     * @return	object {@link XoopsObjectHandler}, FALSE if not registered
+     */
+    function &getHandler($name)
+    {
+        if (!isset($this->_handlers['kernel'][$name])) {
+            return false;
+        }
+        return $this->_handlers['kernel'][$name];
+    }
+
+    /**
+     * Unregister a handler class object
+     * 
+     * @param	string  $name     Short name of a handler class
+     */
+    function unsetHandler($name)
+    {
+        unset($this->_handlers['kernel'][$name]);
+    }
+
+    /**
+     * Register a handler class object for a module
+     * 
+     * @param	string  $module   Directory name of a module
+     * @param	string  $name     Short name of a handler class
+     * @param	object  &$handler {@link XoopsObjectHandler} class object
+     */
+    function setModuleHandler($module, $name, &$handler)
+    {
+        $this->_handlers['module'][$module][$name] =& $handler;
+    }
+
+    /**
+     * Get a registered handler class object for a module
+     * 
+     * @param	string  $module   Directory name of a module
+     * @param	string  $name     Short name of a handler class
+     * 
+     * @return	object {@link XoopsObjectHandler}, FALSE if not registered
+     */
+    function &getModuleHandler($module, $name)
+    {
+        if (!isset($this->_handlers['module'][$module][$name])) {
+            return false;
+        }
+        return $this->_handlers['module'][$module][$name];
+    }
+
+    /**
+     * Unregister a handler class object for a module
+     * 
+     * @param	string  $module   Directory name of a module
+     * @param	string  $name     Short name of a handler class
+     */
+    function unsetModuleHandler($module, $name)
+    {
+        unset($this->_handlers['module'][$module][$name]);
+    }
+
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/handlerregistry.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/image.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/image.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/image.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,273 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+/**
+ * An Image
+ *
+ * @package		kernel
+ * @author		Kazumi Ono 	<onokazu at xoops.org>
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class XoopsImage extends XoopsObject
+{
+	/**
+	 * Constructor
+	 **/
+	function XoopsImage()
+	{
+		$this->XoopsObject();
+		$this->initVar('image_id', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('image_name', XOBJ_DTYPE_OTHER, null, false, 30);
+		$this->initVar('image_nicename', XOBJ_DTYPE_TXTBOX, null, true, 100);
+		$this->initVar('image_mimetype', XOBJ_DTYPE_OTHER, null, false);
+		$this->initVar('image_created', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('image_display', XOBJ_DTYPE_INT, 1, false);
+		$this->initVar('image_weight', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('image_body', XOBJ_DTYPE_SOURCE, null, true);
+		$this->initVar('imgcat_id', XOBJ_DTYPE_INT, 0, false);
+	}
+}
+
+/**
+ * XOOPS image handler class.  
+ * 
+ * This class is responsible for providing data access mechanisms to the data source 
+ * of XOOPS image class objects.
+ *
+ * @package		kernel
+ *
+ * @author		Kazumi Ono 	<onokazu at xoops.org>
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class XoopsImageHandler extends XoopsObjectHandler
+{
+
+    /**
+     * Create a new {@link XoopsImage} 
+     * 
+     * @param   boolean $isNew  Flag the object as "new"
+     * @return  object
+     **/
+    function &create($isNew = true)
+    {
+        $image = new XoopsImage();
+        if ($isNew) {
+            $image->setNew();
+        }
+        return $image;
+    }
+
+    /**
+     * Load a {@link XoopsImage} object from the database
+     * 
+     * @param   int     $id     ID
+     * @param   boolean $getbinary  
+     * @return  object  {@link XoopsImage}, FALSE on fail
+     **/
+    function &get($id, $getbinary=true)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            $sql = 'SELECT i.*, b.image_body FROM '.$this->db->prefix('image').' i LEFT JOIN '.$this->db->prefix('imagebody').' b ON b.image_id=i.image_id WHERE i.image_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $image = new XoopsImage();
+                $image->assignVars($this->db->fetchArray($result));
+                return $image;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * Write a {@link XoopsImage} object to the database
+     * 
+     * @param   object  &$image {@link XoopsImage} 
+     * @return  bool
+     **/
+    function insert(&$image)
+    {
+        if (strtolower(get_class($image)) != 'xoopsimage') {
+            return false;
+        }
+        if (!$image->isDirty()) {
+            return true;
+        }
+        if (!$image->cleanVars()) {
+            return false;
+        }
+        foreach ($image->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($image->isNew()) {
+            $image_id = $this->db->genId('image_image_id_seq');
+            $sql = sprintf("INSERT INTO %s (image_id, image_name, image_nicename, image_mimetype, image_created, image_display, image_weight, imgcat_id) VALUES (%u, %s, %s, %s, %u, %u, %u, %u)", $this->db->prefix('image'), $image_id, $this->db->quoteString($image_name), $this->db->quoteString($image_nicename), $this->db->quoteString($image_mimetype), time(), $image_display, $image_weight, $imgcat_id);
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            if (empty($image_id)) {
+                $image_id = $this->db->getInsertId();
+            }
+            if (isset($image_body) && $image_body != '') {
+                $sql = sprintf("INSERT INTO %s (image_id, image_body) VALUES (%u, %s)", $this->db->prefix('imagebody'), $image_id, $this->db->quoteString($image_body));
+                if (!$result = $this->db->query($sql)) {
+                    $sql = sprintf("DELETE FROM %s WHERE image_id = %u", $this->db->prefix('image'), $image_id);
+                    $this->db->query($sql);
+                    return false;
+                }
+            }
+            $image->assignVar('image_id', $image_id);
+        } else {
+            $sql = sprintf("UPDATE %s SET image_name = %s, image_nicename = %s, image_display = %u, image_weight = %u, imgcat_id = %u WHERE image_id = %u", $this->db->prefix('image'), $this->db->quoteString($image_name), $this->db->quoteString($image_nicename), $image_display, $image_weight, $imgcat_id, $image_id);
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            if (isset($image_body) && $image_body != '') {
+                $sql = sprintf("UPDATE %s SET image_body = %s WHERE image_id = %u", $this->db->prefix('imagebody'), $this->db->quoteString($image_body), $image_id);
+                if (!$result = $this->db->query($sql)) {
+                    $this->db->query(sprintf("DELETE FROM %s WHERE image_id = %u", $this->db->prefix('image'), $image_id));
+                    return false;
+                }
+            }
+        }
+        return true;
+    }
+
+    /**
+     * Delete an image from the database
+     * 
+     * @param   object  &$image {@link XoopsImage} 
+     * @return  bool
+     **/
+    function delete(&$image)
+    {
+        if (strtolower(get_class($image)) != 'xoopsimage') {
+            return false;
+        }
+        $id = $image->getVar('image_id');
+        $sql = sprintf("DELETE FROM %s WHERE image_id = %u", $this->db->prefix('image'), $id);
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE image_id = %u", $this->db->prefix('imagebody'), $id);
+        $this->db->query($sql);
+        return true;
+    }
+
+    /**
+     * Load {@link XoopsImage}s from the database
+     * 
+     * @param   object  $criteria   {@link CriteriaElement} 
+     * @param   boolean $id_as_key  Use the ID as key into the array
+     * @param   boolean $getbinary  
+     * @return  array   Array of {@link XoopsImage} objects
+     **/
+    function &getObjects($criteria = null, $id_as_key = false, $getbinary = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        if ($getbinary) {
+            $sql = 'SELECT i.*, b.image_body FROM '.$this->db->prefix('image').' i LEFT JOIN '.$this->db->prefix('imagebody').' b ON b.image_id=i.image_id';
+        } else {
+            $sql = 'SELECT * FROM '.$this->db->prefix('image');
+        }
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $sort = !in_array($criteria->getSort(), array('image_id', 'image_created', 'image_mimetype', 'image_display', 'image_weight')) ? 'image_weight' : $criteria->getSort();
+            $sql .= ' ORDER BY '.$sort.' '.$criteria->getOrder();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $image = new XoopsImage();
+            $image->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $image;
+            } else {
+                $ret[$myrow['image_id']] =& $image;
+            }
+            unset($image);
+        }
+        return $ret;
+    }
+
+    /**
+     * Count some images
+     * 
+     * @param   object  $criteria   {@link CriteriaElement} 
+     * @return  int
+     **/
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('image');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result =& $this->db->query($sql)) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+    /**
+     * Get a list of images
+     * 
+     * @param   int     $imgcat_id
+     * @param   bool    $image_display
+     * @return  array   Array of {@link XoopsImage} objects
+     **/
+    function &getList($imgcat_id, $image_display = null)
+    {
+        $criteria = new CriteriaCompo(new Criteria('imgcat_id', intval($imgcat_id)));
+        if (isset($image_display)) {
+            $criteria->add(new Criteria('image_display', intval($image_display)));
+        }
+        $images =& $this->getObjects($criteria, false, true);
+        $ret = array();
+        foreach (array_keys($images) as $i) {
+            $ret[$images[$i]->getVar('image_name')] = $images[$i]->getVar('image_nicename');
+        }
+        return $ret;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/image.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/imagecategory.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/imagecategory.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/imagecategory.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,217 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+class XoopsImagecategory extends XoopsObject
+{
+	var $_imageCount;
+
+	function XoopsImagecategory()
+	{
+		$this->XoopsObject();
+		$this->initVar('imgcat_id', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('imgcat_name', XOBJ_DTYPE_TXTBOX, null, true, 100);
+		$this->initVar('imgcat_display', XOBJ_DTYPE_INT, 1, false);
+		$this->initVar('imgcat_weight', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('imgcat_maxsize', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('imgcat_maxwidth', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('imgcat_maxheight', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('imgcat_type', XOBJ_DTYPE_OTHER, null, false);
+		$this->initVar('imgcat_storetype', XOBJ_DTYPE_OTHER, null, false);
+	}
+
+	function setImageCount($value)
+	{
+		$this->_imageCount = intval($value);
+	}
+
+	function getImageCount()
+	{
+		return $this->_imageCount;
+	}
+}
+
+/**
+* XOOPS image caetgory handler class.  
+* This class is responsible for providing data access mechanisms to the data source 
+* of XOOPS image category class objects.
+*
+*
+* @author  Kazumi Ono <onokazu at xoops.org>
+*/
+
+class XoopsImagecategoryHandler extends XoopsObjectHandler
+{
+
+    function &create($isNew = true)
+    {
+        $imgcat = new XoopsImagecategory();
+        if ($isNew) {
+            $imgcat->setNew();
+        }
+        return $imgcat;
+    }
+
+    function &get($id)
+    {
+        if (intval($id) > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('imagecategory').' WHERE imgcat_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $imgcat = new XoopsImagecategory();
+                $imgcat->assignVars($this->db->fetchArray($result));
+                return $imgcat;
+            }
+        }
+        return false;
+    }
+
+    function insert(&$imgcat)
+    {
+        if (strtolower(get_class($imgcat)) != 'xoopsimagecategory') {
+            return false;
+        }
+        if (!$imgcat->isDirty()) {
+            return true;
+        }
+        if (!$imgcat->cleanVars()) {
+            return false;
+        }
+        foreach ($imgcat->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($imgcat->isNew()) {
+            $imgcat_id = $this->db->genId('imgcat_imgcat_id_seq');
+            $sql = sprintf("INSERT INTO %s (imgcat_id, imgcat_name, imgcat_display, imgcat_weight, imgcat_maxsize, imgcat_maxwidth, imgcat_maxheight, imgcat_type, imgcat_storetype) VALUES (%u, %s, %u, %u, %u, %u, %u, %s, %s)", $this->db->prefix('imagecategory'), $imgcat_id, $this->db->quoteString($imgcat_name), $imgcat_display, $imgcat_weight, $imgcat_maxsize, $imgcat_maxwidth, $imgcat_maxheight, $this->db->quoteString($imgcat_type), $this->db->quoteString($imgcat_storetype));
+        } else {
+            $sql = sprintf("UPDATE %s SET imgcat_name = %s, imgcat_display = %u, imgcat_weight = %u, imgcat_maxsize = %u, imgcat_maxwidth = %u, imgcat_maxheight = %u, imgcat_type = %s WHERE imgcat_id = %u", $this->db->prefix('imagecategory'), $this->db->quoteString($imgcat_name), $imgcat_display, $imgcat_weight, $imgcat_maxsize, $imgcat_maxwidth, $imgcat_maxheight, $this->db->quoteString($imgcat_type), $imgcat_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($imgcat_id)) {
+            $imgcat_id = $this->db->getInsertId();
+        }
+        $imgcat->assignVar('imgcat_id', $imgcat_id);
+        return true;
+    }
+
+    function delete(&$imgcat)
+    {
+        if (strtolower(get_class($imgcat)) != 'xoopsimagecategory') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE imgcat_id = %u", $this->db->prefix('imagecategory'), $imgcat->getVar('imgcat_id'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT DISTINCT c.* FROM '.$this->db->prefix('imagecategory').' c LEFT JOIN '.$this->db->prefix('group_permission')." l ON l.gperm_itemid=c.imgcat_id WHERE (l.gperm_name = 'imgcat_read' OR l.gperm_name = 'imgcat_write')";
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $where = $criteria->render();
+            $sql .= ($where != '') ? ' AND '.$where : '';
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+		$sql .= ' ORDER BY imgcat_weight, imgcat_id ASC';
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $imgcat = new XoopsImagecategory();
+            $imgcat->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $imgcat;
+            } else {
+                $ret[$myrow['imgcat_id']] =& $imgcat;
+            }
+            unset($imgcat);
+        }
+        return $ret;
+    }
+
+
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('imagecategory').' i LEFT JOIN '.$this->db->prefix('group_permission')." l ON l.gperm_itemid=i.imgcat_id WHERE (l.gperm_name = 'imgcat_read' OR l.gperm_name = 'imgcat_write')";
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $where = $criteria->render();
+            $sql .= ($where != '') ? ' AND '.$where : '';
+        }
+        if (!$result =& $this->db->query($sql)) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+    function &getList($groups = array(), $perm = 'imgcat_read', $display = null, $storetype = null)
+    {
+        $criteria = new CriteriaCompo();
+        if (is_array($groups) && !empty($groups)) {
+            $criteriaTray = new CriteriaCompo();
+            foreach ($groups as $gid) {
+                $criteriaTray->add(new Criteria('gperm_groupid', $gid), 'OR');
+            }
+            $criteria->add($criteriaTray);
+            if ($perm == 'imgcat_read' || $perm == 'imgcat_write') {
+                $criteria->add(new Criteria('gperm_name', $perm));
+                $criteria->add(new Criteria('gperm_modid', 1));
+            }
+        }
+        if (isset($display)) {
+            $criteria->add(new Criteria('imgcat_display', intval($display)));
+        }
+        if (isset($storetype)) {
+            $criteria->add(new Criteria('imgcat_storetype', $storetype));
+        }
+        $categories =& $this->getObjects($criteria, true);
+        $ret = array();
+        foreach (array_keys($categories) as $i) {
+                $ret[$i] = $categories[$i]->getVar('imgcat_name');
+        }
+        return $ret;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/imagecategory.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/imageset.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/imageset.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/imageset.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,207 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+class XoopsImageset extends XoopsObject
+{
+
+	function XoopsImageset()
+	{
+		$this->XoopsObject();
+		$this->initVar('imgset_id', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('imgset_name', XOBJ_DTYPE_TXTBOX, null, true, 50);
+		$this->initVar('imgset_refid', XOBJ_DTYPE_INT, 0, false);
+	}
+}
+
+/**
+* XOOPS imageset handler class.  
+* This class is responsible for providing data access mechanisms to the data source 
+* of XOOPS imageset class objects.
+*
+*
+* @author  Kazumi Ono <onokazu at xoops.org>
+*/
+
+class XoopsImagesetHandler extends XoopsObjectHandler
+{
+
+    function &create($isNew = true)
+    {
+        $imgset = new XoopsImageset();
+        if ($isNew) {
+            $imgset->setNew();
+        }
+        return $imgset;
+    }
+
+    function &get($id)
+    {
+        if (intval($id) > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('imgset').' WHERE imgset_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $imgset = new XoopsImageset();
+                $imgset->assignVars($this->db->fetchArray($result));
+                return $imgset;
+            }
+        }
+        return false;
+    }
+
+    function insert(&$imgset)
+    {
+        if (strtolower(get_class($imgset)) != 'xoopsimageset') {
+            return false;
+        }
+        if (!$imgset->isDirty()) {
+            return true;
+        }
+        if (!$imgset->cleanVars()) {
+            return false;
+        }
+        foreach ($imgset->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($imgset->isNew()) {
+            $imgset_id = $this->db->genId('imgset_imgset_id_seq');
+            $sql = sprintf("INSERT INTO %s (imgset_id, imgset_name, imgset_refid) VALUES (%u, %s, %u)", $this->db->prefix('imgset'), $imgset_id, $this->db->quoteString($imgset_name), $imgset_refid);
+        } else {
+            $sql = sprintf("UPDATE %s SET imgset_name = %s, imgset_refid = %u WHERE imgset_id = %u", $this->db->prefix('imgset'), $this->db->quoteString($imgset_name), $imgset_refid, $imgset_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($imgset_id)) {
+            $imgset_id = $this->db->getInsertId();
+        }
+		$imgset->assignVar('imgset_id', $imgset_id);
+        return true;
+    }
+
+    function delete(&$imgset)
+    {
+        if (strtolower(get_class($imgset)) != 'xoopsimageset') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE imgset_id = %u", $this->db->prefix('imgset'), $imgset->getVar('imgset_id'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE imgset_id = %u", $this->db->prefix('imgset_tplset_link'), $imgset->getVar('imgset_id'));
+        $this->db->query($sql);
+        return true;
+    }
+
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT DISTINCT i.* FROM '.$this->db->prefix('imgset'). ' i LEFT JOIN '.$this->db->prefix('imgset_tplset_link'). ' l ON l.imgset_id=i.imgset_id';
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $imgset = new XoopsImageset();
+            $imgset->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $imgset;
+            } else {
+                $ret[$myrow['imgset_id']] =& $imgset;
+            }
+            unset($imgset);
+        }
+        return $ret;
+    }
+
+    function linkThemeset($imgset_id, $tplset_name)
+    {
+        $imgset_id = intval($imgset_id);
+        $tplset_name = trim($tplset_name);
+        if ($imgset_id <= 0 || $tplset_name == '') {
+            return false;
+        }
+        if (!$this->unlinkThemeset($imgset_id, $tplset_name)) {
+            return false;
+        }
+        $sql = sprintf("INSERT INTO %s (imgset_id, tplset_name) VALUES (%u, %s)", $this->db->prefix('imgset_tplset_link'), $imgset_id, $this->db->quoteString($tplset_name));
+        $result = $this->db->query($sql);
+        if (!$result) {
+            return false;
+        }
+        return true;
+    }
+
+    function unlinkThemeset($imgset_id, $tplset_name)
+    {
+        $imgset_id = intval($imgset_id);
+        $tplset_name = trim($tplset_name);
+        if ($imgset_id <= 0 || $tplset_name == '') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE imgset_id = %u AND tplset_name = %s", $this->db->prefix('imgset_tplset_link'), $imgset_id, $this->db->quoteString($tplset_name));
+        $result = $this->db->query($sql);
+        if (!$result) {
+            return false;
+        }
+        return true;
+    }
+
+    function &getList($refid = null, $tplset = null)
+    {
+        $criteria = new CriteriaCompo();
+        if (isset($refid)) {
+            $criteria->add(new Criteria('imgset_refid', intval($refid)));
+        }
+        if (isset($tplset)) {
+            $criteria->add(new Criteria('tplset_name', $tplset));
+        }
+        $imgsets =& $this->getObjects($criteria, true);
+        $ret = array();
+        foreach (array_keys($imgsets) as $i) {
+            $ret[$i] = $imgsets[$i]->getVar('imgset_name');
+        }
+        return $ret;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/imageset.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/imagesetimg.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/imagesetimg.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/imagesetimg.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,199 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+class XoopsImagesetimg extends XoopsObject
+{
+	function XoopsImagesetimg()
+	{
+		$this->XoopsObject();
+		$this->initVar('imgsetimg_id', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('imgsetimg_file', XOBJ_DTYPE_OTHER, null, false);
+		$this->initVar('imgsetimg_body', XOBJ_DTYPE_SOURCE, null, false);
+		$this->initVar('imgsetimg_imgset', XOBJ_DTYPE_INT, null, false);
+	}
+}
+
+/**
+* XOOPS imageset image handler class.  
+* This class is responsible for providing data access mechanisms to the data source 
+* of XOOPS imageset image class objects.
+*
+*
+* @author  Kazumi Ono <onokazu at xoops.org>
+*/
+
+class XoopsImagesetimgHandler extends XoopsObjectHandler
+{
+
+    function &create($isNew = true)
+    {
+        $imgsetimg = new XoopsImagesetimg();
+        if ($isNew) {
+            $imgsetimg->setNew();
+        }
+        return $imgsetimg;
+    }
+
+    function &get($id)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('imgsetimg').' WHERE imgsetimg_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $imgsetimg = new XoopsImagesetimg();
+                $imgsetimg->assignVars($this->db->fetchArray($result));
+                return $imgsetimg;
+            }
+        }
+        return false;
+    }
+
+    function insert(&$imgsetimg)
+    {
+        if (strtolower(get_class($imgsetimg)) != 'xoopsimagesetimg') {
+            return false;
+        }
+        if (!$imgsetimg->isDirty()) {
+            return true;
+        }
+        if (!$imgsetimg->cleanVars()) {
+            return false;
+        }
+        foreach ($imgsetimg->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($imgsetimg->isNew()) {
+            $imgsetimg_id = $this->db->genId('imgsetimg_imgsetimg_id_seq');
+            $sql = sprintf("INSERT INTO %s (imgsetimg_id, imgsetimg_file, imgsetimg_body, imgsetimg_imgset) VALUES (%u, %s, %s, %s)", $this->db->prefix('imgsetimg'), $imgsetimg_id, $this->db->quoteString($imgsetimg_file), $this->db->quoteString($imgsetimg_body), $this->db->quoteString($imgsetimg_imgset));
+        } else {
+            $sql = sprintf("UPDATE %s SET imgsetimg_file = %s, imgsetimg_body = %s, imgsetimg_imgset = %s WHERE imgsetimg_id = %u", $this->db->prefix('imgsetimg'), $this->db->quoteString($imgsetimg_file), $this->db->quoteString($imgsetimg_body), $this->db->quoteString($imgsetimg_imgset), $imgsetimg_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($imgsetimg_id)) {
+            $imgsetimg_id = $this->db->getInsertId();
+        }
+		$imgsetimg->assignVar('imgsetimg_id', $imgsetimg_id);
+        return true;
+    }
+
+    function delete(&$imgsetimg)
+    {
+        if (strtolower(get_class($imgsetimg)) != 'xoopsimagesetimg') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE imgsetimg_id = %u", $this->db->prefix('imgsetimg'), $imgsetimg->getVar('imgsetimg_id'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT DISTINCT i.* FROM '.$this->db->prefix('imgsetimg'). ' i LEFT JOIN '.$this->db->prefix('imgset_tplset_link'). ' l ON l.imgset_id=i.imgsetimg_imgset LEFT JOIN '.$this->db->prefix('imgset').' s ON s.imgset_id=l.imgset_id';
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $sql .= ' ORDER BY imgsetimg_id '.$criteria->getOrder();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $imgsetimg = new XoopsImagesetimg();
+            $imgsetimg->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $imgsetimg;
+            } else {
+                $ret[$myrow['imgsetimg_id']] =& $imgsetimg;
+            }
+            unset($imgsetimg);
+        }
+        return $ret;
+    }
+
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(i.imgsetimg_id) FROM '.$this->db->prefix('imgsetimg'). ' i LEFT JOIN '.$this->db->prefix('imgset_tplset_link'). ' l ON l.imgset_id=i.imgsetimg_imgset';
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere().' GROUP BY i.imgsetimg_id';
+        }
+        if (!$result =& $this->db->query($sql)) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+/**
+ * Function-Documentation
+ * @param type $imgset_id documentation
+ * @param type $id_as_key = false documentation
+ * @return type documentation
+ * @author Kazumi Ono <onokazu at xoops.org>
+ **/
+    function &getByImageset($imgset_id, $id_as_key = false)
+    {
+        return $this->getObjects(new Criteria('imgsetimg_imgset', intval($imgset_id)), $id_as_key);
+    }
+
+/**
+ * Function-Documentation
+ * @param type $filename documentation
+ * @param type $imgset_id documentation
+ * @return type documentation
+ * @author Kazumi Ono <onokazu at xoops.org>
+ **/
+    function imageExists($filename, $imgset_id)
+    {
+        $criteria = new CriteriaCompo(new Criteria('imgsetimg_file', $filename));
+        $criteria->add(new Criteria('imgsetimg_imgset', intval($imgset_id)));
+        if ($this->getCount($criteria) > 0) {
+            return true;
+        }
+        return false;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/imagesetimg.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/member.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/member.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/member.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,418 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+require_once XOOPS_ROOT_PATH.'/kernel/user.php';
+require_once XOOPS_ROOT_PATH.'/kernel/group.php';
+
+/**
+* XOOPS member handler class.  
+* This class provides simple interface (a facade class) for handling groups/users/
+* membership data.
+*
+*
+* @author  Kazumi Ono <onokazu at xoops.org>
+* @copyright copyright (c) 2000-2003 XOOPS.org
+* @package kernel
+*/
+
+class XoopsMemberHandler{
+
+    /**#@+
+    * holds reference to group handler(DAO) class
+    * @access private
+    */
+    var $_gHandler;
+
+    /**
+    * holds reference to user handler(DAO) class
+    */
+    var $_uHandler;
+
+    /**
+    * holds reference to membership handler(DAO) class
+    */
+    var $_mHandler;
+
+    /**
+    * holds temporary user objects
+    */
+    var $_members = array();
+    /**#@-*/
+
+    /**
+     * constructor
+     * 
+     */
+    function XoopsMemberHandler(&$db)
+    {
+        $this->_gHandler = new XoopsGroupHandler($db);
+        $this->_uHandler = new XoopsUserHandler($db);
+        $this->_mHandler = new XoopsMembershipHandler($db);
+    }
+
+    /**
+     * create a new group
+     * 
+     * @return object XoopsGroup reference to the new group
+     */
+    function &createGroup()
+    {
+        return $this->_gHandler->create();
+    }
+
+    /**
+     * create a new user
+     * 
+     * @return object XoopsUser reference to the new user
+     */
+    function &createUser()
+    {
+        return $this->_uHandler->create();
+    }
+
+    /**
+     * retrieve a group
+     * 
+     * @param int $id ID for the group
+     * @return object XoopsGroup reference to the group
+     */
+    function getGroup($id)
+    {
+        return $this->_gHandler->get($id);
+    }
+
+    /**
+     * retrieve a user
+     * 
+     * @param int $id ID for the user
+     * @return object XoopsUser reference to the user
+     */
+    function &getUser($id)
+    {
+        if (!isset($this->_members[$id])) {
+            $this->_members[$id] =& $this->_uHandler->get($id);
+        }
+        return $this->_members[$id];
+    }
+
+    /**
+     * delete a group
+     * 
+     * @param object $group reference to the group to delete
+     * @return bool FALSE if failed
+     */
+    function deleteGroup(&$group)
+    {
+        $this->_gHandler->delete($group);
+		$this->_mHandler->deleteAll(new Criteria('groupid', $group->getVar('groupid')));
+		return true;
+    }
+
+    /**
+     * delete a user
+     * 
+     * @param object $user reference to the user to delete
+     * @return bool FALSE if failed
+     */
+    function deleteUser(&$user)
+    {
+        $this->_uHandler->delete($user);
+		$this->_mHandler->deleteAll(new Criteria('uid', $user->getVar('uid')));
+		return true;
+    }
+
+    /**
+     * insert a group into the database
+     * 
+     * @param object $group reference to the group to insert
+     * @return bool TRUE if already in database and unchanged
+     * FALSE on failure
+     */
+    function insertGroup(&$group)
+    {
+        return $this->_gHandler->insert($group);
+    }
+
+    /**
+     * insert a user into the database
+     * 
+     * @param object $user reference to the user to insert
+     * @return bool TRUE if already in database and unchanged
+     * FALSE on failure
+     */
+    function insertUser(&$user, $force = false)
+    {
+        return $this->_uHandler->insert($user, $force);
+    }
+
+    /**
+     * retrieve groups from the database
+     * 
+     * @param object $criteria {@link CriteriaElement}
+     * @param bool $id_as_key use the group's ID as key for the array?
+     * @return array array of {@link XoopsGroup} objects 
+     */
+    function getGroups($criteria = null, $id_as_key = false)
+    {
+        return $this->_gHandler->getObjects($criteria, $id_as_key);
+    }
+
+    /**
+     * retrieve users from the database
+     * 
+     * @param object $criteria {@link CriteriaElement} 
+     * @param bool $id_as_key use the group's ID as key for the array?
+     * @return array array of {@link XoopsUser} objects
+     */
+    function getUsers($criteria = null, $id_as_key = false)
+    {
+        return $this->_uHandler->getObjects($criteria, $id_as_key);
+    }
+
+    /**
+     * get a list of groupnames and their IDs
+     * 
+     * @param object $criteria {@link CriteriaElement} object
+     * @return array associative array of group-IDs and names
+     */
+    function &getGroupList($criteria = null)
+    {
+        $groups =& $this->_gHandler->getObjects($criteria, true);
+        $ret = array();
+        foreach (array_keys($groups) as $i) {
+            $ret[$i] = $groups[$i]->getVar('name');
+        }
+        return $ret;
+    }
+
+    /**
+     * get a list of usernames and their IDs
+     * 
+     * @param object $criteria {@link CriteriaElement} object
+     * @return array associative array of user-IDs and names
+     */
+    function getUserList($criteria = null)
+    {
+        $users =& $this->_uHandler->getObjects($criteria, true);
+        $ret = array();
+        foreach (array_keys($users) as $i) {
+            $ret[$i] = $users[$i]->getVar('uname');
+        }
+        return $ret;
+    }
+
+    /**
+     * add a user to a group
+     * 
+     * @param int $group_id ID of the group
+     * @param int $user_id ID of the user
+     * @return object XoopsMembership
+     */
+    function addUserToGroup($group_id, $user_id)
+    {
+        $mship =& $this->_mHandler->create();
+        $mship->setVar('groupid', $group_id);
+        $mship->setVar('uid', $user_id);
+        return $this->_mHandler->insert($mship);
+    }
+
+    /**
+     * remove a list of users from a group
+     * 
+     * @param int $group_id ID of the group
+     * @param array $user_ids array of user-IDs
+     * @return bool success?
+     */
+    function removeUsersFromGroup($group_id, $user_ids = array())
+    {
+        $criteria = new CriteriaCompo();
+        $criteria->add(new Criteria('groupid', $group_id));
+        $criteria2 = new CriteriaCompo();
+        foreach ($user_ids as $uid) {
+            $criteria2->add(new Criteria('uid', $uid), 'OR');
+        }
+        $criteria->add($criteria2);
+        return $this->_mHandler->deleteAll($criteria);
+    }
+
+    /**
+     * get a list of users belonging to a group
+     * 
+     * @param int $group_id ID of the group
+     * @param bool $asobject return the users as objects?
+     * @param int $limit number of users to return
+     * @param int $start index of the first user to return
+     * @return array Array of {@link XoopsUser} objects (if $asobject is TRUE)
+     * or of associative arrays matching the record structure in the database.
+     */
+    function getUsersByGroup($group_id, $asobject = false, $limit = 0, $start = 0)
+    {
+        $user_ids =& $this->_mHandler->getUsersByGroup($group_id, $limit, $start);
+        if (!$asobject) {
+           return $user_ids;
+        } else {
+           $ret = array();
+           foreach ($user_ids as $u_id) {
+               $user =& $this->getUser($u_id);
+				if (is_object($user)) {
+					$ret[] =& $user;
+				}
+				unset($user);
+           }
+           return $ret;
+        }
+    }
+
+    /**
+     * get a list of groups that a user is member of
+     * 
+     * @param int $user_id ID of the user
+     * @param bool $asobject return groups as {@link XoopsGroup} objects or arrays?
+     * @return array array of objects or arrays
+     */
+    function getGroupsByUser($user_id, $asobject = false)
+    {
+        $group_ids =& $this->_mHandler->getGroupsByUser($user_id);
+        if (!$asobject) {
+           return $group_ids;
+        } else {
+           foreach ($group_ids as $g_id) {
+               $ret[] =& $this->getGroup($g_id);
+           }
+           return $ret;
+        }
+    }
+
+    /**
+     * log in a user
+     * 
+     * @param string $uname username as entered in the login form
+     * @param string $pwd password entered in the login form
+     * @return object XoopsUser reference to the logged in user. FALSE if failed to log in 
+     */
+    function &loginUser($uname, $pwd)
+    {
+        $criteria = new CriteriaCompo(new Criteria('uname', $uname));
+        $criteria->add(new Criteria('pass', md5($pwd)));
+        $user =& $this->_uHandler->getObjects($criteria, false);
+        if (!$user || count($user) != 1) {
+            return false;
+        }
+        return $user[0];
+    }
+
+    /**
+     * logs in a user with an nd5 encrypted password
+     * 
+     * @param string $uname username
+     * @param string $md5pwd password encrypted with md5
+     * @return object XoopsUser reference to the logged in user. FALSE if failed to log in 
+     */
+    function &loginUserMd5($uname, $md5pwd)
+    {
+        $criteria = new CriteriaCompo(new Criteria('uname', $uname));
+        $criteria->add(new Criteria('pass', $md5pwd));
+        $user =& $this->_uHandler->getObjects($criteria, false);
+        if (!$user || count($user) != 1) {
+            return false;
+        }
+        return $user[0];
+    }
+
+    /**
+     * count users matching certain conditions
+     * 
+     * @param object $criteria {@link CriteriaElement} object
+     * @return int
+     */
+    function getUserCount($criteria = null)
+    {
+        return $this->_uHandler->getCount($criteria);
+    }
+
+    /**
+     * count users belonging to a group
+     * 
+     * @param int $group_id ID of the group
+     * @return int
+     */
+    function getUserCountByGroup($group_id)
+    {
+        return $this->_mHandler->getCount(new Criteria('groupid', $group_id));
+    }
+
+    /**
+     * updates a single field in a users record
+     * 
+     * @param object $user reference to the {@link XoopsUser} object
+     * @param string $fieldName name of the field to update
+     * @param string $fieldValue updated value for the field
+     * @return bool TRUE if success or unchanged, FALSE on failure
+     */
+    function updateUserByField(&$user, $fieldName, $fieldValue)
+    {
+        $user->setVar($fieldName, $fieldValue);
+        return $this->insertUser($user);
+    }
+
+    /**
+     * updates a single field in a users record
+     * 
+     * @param string $fieldName name of the field to update
+     * @param string $fieldValue updated value for the field
+     * @param object $criteria {@link CriteriaElement} object
+     * @return bool TRUE if success or unchanged, FALSE on failure
+     */
+    function updateUsersByField($fieldName, $fieldValue, $criteria = null)
+    {
+        return $this->_uHandler->updateAll($fieldName, $fieldValue, $criteria);
+    }
+
+    /**
+     * activate a user
+     * 
+     * @param object $user reference to the {@link XoopsUser} object
+     * @return bool successful?
+     */
+    function activateUser(&$user)
+    {
+        if ($user->getVar('level') != 0) {
+            return true;
+        }
+        $user->setVar('level', 1);
+        return $this->_uHandler->insert($user, true);
+    }
+
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/kernel/member.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/module.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/module.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/module.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,550 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+
+/**
+ * A Module
+ *
+ * @package		kernel
+ *
+ * @author		Kazumi Ono 	<onokazu at xoops.org>
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class XoopsModule extends XoopsObject
+{
+    /**
+     * @var string
+     */
+    var $modinfo;
+    /**
+     * @var string
+     */
+    var $adminmenu;
+
+    /**
+     * Constructor
+     */
+    function XoopsModule()
+    {
+        $this->XoopsObject();
+        $this->initVar('mid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('name', XOBJ_DTYPE_TXTBOX, null, true, 150);
+        $this->initVar('version', XOBJ_DTYPE_INT, 100, false);
+        $this->initVar('last_update', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('weight', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('isactive', XOBJ_DTYPE_INT, 1, false);
+        $this->initVar('dirname', XOBJ_DTYPE_OTHER, null, true);
+        $this->initVar('hasmain', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('hasadmin', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('hassearch', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('hasconfig', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('hascomments', XOBJ_DTYPE_INT, 0, false);
+		// RMV-NOTIFY
+		$this->initVar('hasnotification', XOBJ_DTYPE_INT, 0, false);
+    }
+
+    /**
+     * Load module info
+     * 
+     * @param   string  $dirname    Directory Name
+     * @param   boolean $verbose
+     **/
+    function loadInfoAsVar($dirname, $verbose = true)
+    {
+        if ( !isset($this->modinfo) ) {
+            $this->loadInfo($dirname, $verbose);
+        }
+        $this->setVar('name', $this->modinfo['name'], true);
+        $this->setVar('version', 100 * $this->modinfo['version']);
+        $this->setVar('dirname', $this->modinfo['dirname'], true);
+        $hasmain = (isset($this->modinfo['hasMain']) && $this->modinfo['hasMain'] == 1) ? 1 : 0;
+        $hasadmin = (isset($this->modinfo['hasAdmin']) && $this->modinfo['hasAdmin'] == 1) ? 1 : 0;
+        $hassearch = (isset($this->modinfo['hasSearch']) && $this->modinfo['hasSearch'] == 1) ? 1 : 0;
+        $hasconfig = ((isset($this->modinfo['config']) && is_array($this->modinfo['config'])) || !empty($this->modinfo['hasComments'])) ? 1 : 0;
+        $hascomments = (isset($this->modinfo['hasComments']) && $this->modinfo['hasComments'] == 1) ? 1 : 0;
+		// RMV-NOTIFY
+		$hasnotification = (isset($this->modinfo['hasNotification']) && $this->modinfo['hasNotification'] == 1) ? 1 : 0;
+        $this->setVar('hasmain', $hasmain);
+        $this->setVar('hasadmin', $hasadmin);
+        $this->setVar('hassearch', $hassearch);
+        $this->setVar('hasconfig', $hasconfig);
+        $this->setVar('hascomments', $hascomments);
+		// RMV-NOTIFY
+		$this->setVar('hasnotification', $hasnotification);
+    }
+
+    /**
+     * Get module info
+     * 
+     * @param   string  $name
+     * @return  array|string	Array of module information.
+	 * 			If {@link $name} is set, returns a singel module information item as string.
+     **/
+    function &getInfo($name=null)
+    {
+        if ( !isset($this->modinfo) ) {
+            $this->loadInfo($this->getVar('dirname'));
+        }
+        if ( isset($name) ) {
+            if ( isset($this->modinfo[$name]) ) {
+                return $this->modinfo[$name];
+            }
+            return false;
+        }
+        return $this->modinfo;
+    }
+
+    /**
+     * Get a link to the modules main page
+     * 
+     * @return	string  FALSE on fail
+     */
+    function mainLink()
+    {
+        if ( $this->getVar('hasmain') == 1 ) {
+            $ret = '<a href="'.XOOPS_URL.'/modules/'.$this->getVar('dirname').'/">'.$this->getVar('name').'</a>';
+            return $ret;
+        }
+        return false;
+    }
+
+    /**
+     * Get links to the subpages
+     * 
+     * @return	string
+     */
+    function &subLink()
+    {
+        $ret = array();
+        if ( $this->getInfo('sub') && is_array($this->getInfo('sub')) ) {
+            foreach ( $this->getInfo('sub') as $submenu ) {
+                $ret[] = array('name' => $submenu['name'], 'url' => $submenu['url']);
+            }
+        }
+        return $ret;
+    }
+
+    /**
+     * Load the admin menu for the module
+     */
+    function loadAdminMenu()
+    {
+        if ($this->getInfo('adminmenu') && $this->getInfo('adminmenu') != '' && file_exists(XOOPS_ROOT_PATH.'/modules/'.$this->getVar('dirname').'/'.$this->getInfo('adminmenu'))) {
+            include_once XOOPS_ROOT_PATH.'/modules/'.$this->getVar('dirname').'/'.$this->getInfo('adminmenu');
+            $this->adminmenu =& $adminmenu;
+        }
+    }
+
+    /**
+     * Get the admin menu for the module
+     * 
+     * @return	string
+     */
+    function &getAdminMenu()
+    {
+        if ( !isset($this->adminmenu) ) {
+            $this->loadAdminMenu();
+        }
+        return $this->adminmenu;
+    }
+
+    /**
+     * Load the module info for this module
+     * 
+     * @param	string  $dirname    Module directory
+     * @param	bool    $verbose    Give an error on fail?
+     */
+    function loadInfo($dirname, $verbose = true)
+    {
+        global $xoopsConfig;
+        if (file_exists(XOOPS_ROOT_PATH.'/modules/'.$dirname.'/language/'.$xoopsConfig['language'].'/modinfo.php')) {
+            include_once XOOPS_ROOT_PATH.'/modules/'.$dirname.'/language/'.$xoopsConfig['language'].'/modinfo.php';
+        } elseif (file_exists(XOOPS_ROOT_PATH.'/modules/'.$dirname.'/language/english/modinfo.php')) {
+            include_once XOOPS_ROOT_PATH.'/modules/'.$dirname.'/language/english/modinfo.php';
+        }
+        if (file_exists(XOOPS_ROOT_PATH.'/modules/'.$dirname.'/xoops_version.php')) {
+ 	        include XOOPS_ROOT_PATH.'/modules/'.$dirname.'/xoops_version.php';
+       	} else {
+           	if (false != $verbose) {
+				echo "Module File for $dirname Not Found!";
+			}
+           	return;
+       	}
+		$this->modinfo =& $modversion;
+    }
+
+    /**
+     * Search contents within a module
+     * 
+     * @param   string  $term
+     * @param   string  $andor  'AND' or 'OR'
+     * @param   integer $limit
+     * @param   integer $offset
+     * @param   integer $userid
+     * @return  mixed   Search result.
+     **/
+    function &search($term = '', $andor = 'AND', $limit = 0, $offset = 0, $userid = 0)
+    {
+        if ($this->getVar('hassearch') != 1) {
+            return false;
+        }
+        $search =& $this->getInfo('search');
+        if ($this->getVar('hassearch') != 1 || !isset($search['file']) || !isset($search['func']) || $search['func'] == '' || $search['file'] == '') {
+            return false;
+        }
+        if (file_exists(XOOPS_ROOT_PATH."/modules/".$this->getVar('dirname').'/'.$search['file'])) {
+            include_once XOOPS_ROOT_PATH.'/modules/'.$this->getVar('dirname').'/'.$search['file'];
+        } else {
+            return false;
+        }
+        if (function_exists($search['func'])) {
+            $func = $search['func'];
+            return $func($term, $andor, $limit, $offset, $userid);
+        }
+        return false;
+    }
+
+    /**#@+
+     * For backward compatibility only! 
+     * @deprecated
+     */
+    function mid()
+    {
+        return $this->getVar('mid');
+    }
+    function dirname()
+    {
+        return $this->getVar('dirname');
+    }
+    function name()
+    {
+        return $this->getVar('name');
+    }
+    function &getByDirName($dirname)
+    {
+        $modhandler =& xoops_gethandler('module');
+        return $modhandler->getByDirname($dirname);
+    }
+    /**#@-*/
+}
+
+
+/**
+ * XOOPS module handler class.
+ *   
+ * This class is responsible for providing data access mechanisms to the data source 
+ * of XOOPS module class objects.
+ *
+ * @package		kernel
+ *
+ * @author		Kazumi Ono 	<onokazu at xoops.org>
+ * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ */
+class XoopsModuleHandler extends XoopsObjectHandler
+{
+	/**
+	 * holds an array of cached module references, indexed by module id
+	 *
+	 * @var    array
+	 * @access private
+	 */
+	var $_cachedModule_mid = array();
+
+	/**
+	 * holds an array of cached module references, indexed by module dirname
+	 *
+	 * @var    array
+	 * @access private
+	 */
+	var $_cachedModule_dirname = array();
+
+    /**
+     * Create a new {@link XoopsModule} object
+     * 
+     * @param   boolean     $isNew   Flag the new object as "new"
+     * @return  object
+     **/
+    function &create($isNew = true)
+    {
+        $module = new XoopsModule();
+        if ($isNew) {
+            $module->setNew();
+        }
+        return $module;
+    }
+
+    /**
+     * Load a module from the database
+     * 
+     * @param	int     $id     ID of the module
+     * 
+     * @return	object  FALSE on fail
+     */
+    function &get($id)
+    {
+        static $_cachedModule_dirname;
+        static $_cachedModule_mid;
+        $id = intval($id);
+        if ($id > 0) {
+			if (!empty($_cachedModule_mid[$id])) {
+				return $_cachedModule_mid[$id];
+			} else {
+  	        	$sql = 'SELECT * FROM '.$this->db->prefix('modules').' WHERE mid = '.$id;
+  	        	if (!$result = $this->db->query($sql)) {
+  	            	return false;
+  	        	}
+  	        	$numrows = $this->db->getRowsNum($result);
+  	        	if ($numrows == 1) {
+  	            	$module = new XoopsModule();
+  	            	$myrow = $this->db->fetchArray($result);
+  	            	$module->assignVars($myrow);
+					$_cachedModule_mid[$id] =& $module;
+					$_cachedModule_dirname[$module->getVar('dirname')] =& $module;	
+  	            	return $module;
+  	        	}
+        	}
+		}
+        return false;
+    }
+
+    /**
+     * Load a module by its dirname
+     * 
+     * @param	string  $dirname
+     * 
+     * @return	object  FALSE on fail
+     */
+    function &getByDirname($dirname)
+    {
+        static $_cachedModule_mid;
+        static $_cachedModule_dirname;
+		if (!empty($_cachedModule_dirname[$dirname])) {
+			return $_cachedModule_dirname[$dirname];
+		} else {
+        	$sql = "SELECT * FROM ".$this->db->prefix('modules')." WHERE dirname = '".trim($dirname)."'";
+        	if (!$result = $this->db->query($sql)) {
+            	return false;
+        	}
+        	$numrows = $this->db->getRowsNum($result);
+        	if ($numrows == 1) {
+            	$module = new XoopsModule();
+            	$myrow = $this->db->fetchArray($result);
+            	$module->assignVars($myrow);
+				$_cachedModule_dirname[$dirname] =& $module;
+				$_cachedModule_mid[$module->getVar('mid')] =& $module;
+            	return $module;
+        	}
+        	return false;
+		}
+    }
+
+    /**
+     * Write a module to the database
+     * 
+     * @param   object  &$module reference to a {@link XoopsModule} 
+     * @return  bool
+     **/
+    function insert(&$module)
+    {
+        if (strtolower(get_class($module)) != 'xoopsmodule') {
+            return false;
+        }
+        if (!$module->isDirty()) {
+            return true;
+        }
+        if (!$module->cleanVars()) {
+            return false;
+        }
+        foreach ($module->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($module->isNew()) {
+            $mid = $this->db->genId('modules_mid_seq');
+            $sql = sprintf("INSERT INTO %s (mid, name, version, last_update, weight, isactive, dirname, hasmain, hasadmin, hassearch, hasconfig, hascomments, hasnotification) VALUES (%u, %s, %u, %u, %u, %u, %s, %u, %u, %u, %u, %u, %u)", $this->db->prefix('modules'), $mid, $this->db->quoteString($name), $version, time(), $weight, 1, $this->db->quoteString($dirname), $hasmain, $hasadmin, $hassearch, $hasconfig, $hascomments, $hasnotification);
+        } else {
+            $sql = sprintf("UPDATE %s SET name = %s, dirname = %s, version = %u, last_update = %u, weight = %u, isactive = %u, hasmain = %u, hasadmin = %u, hassearch = %u, hasconfig = %u, hascomments = %u, hasnotification = %u WHERE mid = %u", $this->db->prefix('modules'), $this->db->quoteString($name), $this->db->quoteString($dirname), $version, time(), $weight, $isactive, $hasmain, $hasadmin, $hassearch, $hasconfig, $hascomments, $hasnotification, $mid);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($mid)) {
+            $mid = $this->db->getInsertId();
+        }
+        $module->assignVar('mid', $mid);
+		if (!empty($this->_cachedModule_dirname[$dirname])) {
+			unset ($this->_cachedModule_dirname[$dirname]);
+		}
+		if (!empty($this->_cachedModule_mid[$mid])) {
+			unset ($this->_cachedModule_mid[$mid]);
+		}
+        return true;
+    }
+
+    /**
+     * Delete a module from the database
+     * 
+     * @param   object  &$module
+     * @return  bool
+     **/
+    function delete(&$module)
+    {
+        if (strtolower(get_class($module)) != 'xoopsmodule') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE mid = %u", $this->db->prefix('modules'), $module->getVar('mid'));
+        if ( !$result = $this->db->query($sql) ) {
+            return false;
+        }
+		// delete admin permissions assigned for this module
+		$sql = sprintf("DELETE FROM %s WHERE gperm_name = 'module_admin' AND gperm_itemid = %u", $this->db->prefix('group_permission'), $module->getVar('mid'));
+		$this->db->query($sql);
+		// delete read permissions assigned for this module
+		$sql = sprintf("DELETE FROM %s WHERE gperm_name = 'module_read' AND gperm_itemid = %u", $this->db->prefix('group_permission'), $module->getVar('mid'));
+		$this->db->query($sql);
+
+        $sql = sprintf("SELECT block_id FROM %s WHERE module_id = %u", $this->db->prefix('block_module_link'), $module->getVar('mid'));
+        if ($result = $this->db->query($sql)) {
+        	$block_id_arr = array();
+            while ($myrow = $this->db->fetchArray($result))
+{
+				array_push($block_id_arr, $myrow['block_id']);
+            }
+        }
+		// loop through block_id_arr
+        if (isset($block_id_arr)) {
+    		foreach ($block_id_arr as $i) {
+                $sql = sprintf("SELECT block_id FROM %s WHERE module_id != %u AND block_id = %u", $this->db->prefix('block_module_link'), $module->getVar('mid'), $i);
+	        	if ($result2 = $this->db->query($sql)) {
+                    if (0 < $this->db->getRowsNum($result2)) {
+					// this block has other entries, so delete the entry for this module
+                        $sql = sprintf("DELETE FROM %s WHERE (module_id = %u) AND (block_id = %u)", $this->db->prefix('block_module_link'), $module->getVar('mid'), $i);
+                        $this->db->query($sql);
+                    } else {	
+					// this block doesnt have other entries, so disable the block and let it show on top page only. otherwise, this block will not display anymore on block admin page!
+        				$sql = sprintf("UPDATE %s SET visible = 0 WHERE bid = %u", $this->db->prefix('newblocks'), $i);
+        				$this->db->query($sql);
+        				$sql = sprintf("UPDATE %s SET module_id = -1 WHERE module_id = %u", $this->db->prefix('block_module_link'), $module->getVar('mid'));
+        				$this->db->query($sql);
+                    }
+				}
+            }
+        }
+
+		if (!empty($this->_cachedModule_dirname[$module->getVar('dirname')])) {
+			unset ($this->_cachedModule_dirname[$module->getVar('dirname')]);
+		}
+		if (!empty($this->_cachedModule_mid[$module->getVar('mid')])) {
+			unset ($this->_cachedModule_mid[$module->getVar('mid')]);
+		}
+        return true;
+    }
+
+    /**
+     * Load some modules
+     * 
+     * @param   object  $criteria   {@link CriteriaElement} 
+     * @param   boolean $id_as_key  Use the ID as key into the array
+     * @return  array
+     **/
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('modules');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $sql .= ' ORDER BY weight '.$criteria->getOrder().', mid ASC';
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $module = new XoopsModule();
+            $module->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $module;
+            } else {
+                $ret[$myrow['mid']] =& $module;
+            }
+            unset($module);
+        }
+        return $ret;
+    }
+
+    /**
+     * Count some modules
+     * 
+     * @param   object  $criteria   {@link CriteriaElement} 
+     * @return  int
+     **/
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('modules');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result =& $this->db->query($sql)) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+    /**
+     * returns an array of module names
+     * 
+     * @param   bool    $criteria
+     * @param   boolean $dirname_as_key
+     *      if true, array keys will be module directory names
+     *      if false, array keys will be module id
+     * @return  array
+     **/
+    function &getList($criteria = null, $dirname_as_key = false)
+    {
+        $ret = array();
+        $modules =& $this->getObjects($criteria, true);
+        foreach (array_keys($modules) as $i) {
+            if (!$dirname_as_key) {
+                $ret[$i] =& $modules[$i]->getVar('name');
+            } else {
+                $ret[$modules[$i]->getVar('dirname')] =& $modules[$i]->getVar('name');
+            }
+        }
+        return $ret;
+    }
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/kernel/module.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/notification.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/notification.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/notification.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,813 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.xoops.org/ http://jp.xoops.org/  http://www.myweb.ne.jp/  //
+// Project: The XOOPS Project (http://www.xoops.org/)                        //
+// ------------------------------------------------------------------------- //
+
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+// RMV-NOTIFY
+include_once XOOPS_ROOT_PATH . '/include/notification_constants.php';
+include_once XOOPS_ROOT_PATH . '/include/notification_functions.php';
+
+/**
+ *
+ *
+ * @package     kernel
+ * @subpackage  notification
+ *
+ * @author	    Michael van Dam	<mvandam at caltech.edu>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * A Notification
+ *
+ * @package     kernel
+ * @subpackage  notification
+ *
+ * @author	    Michael van Dam	<mvandam at caltech.edu>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsNotification extends XoopsObject
+{
+
+    /**
+     * Constructor
+     **/
+    function XoopsNotification()
+    {
+        $this->XoopsObject();
+		$this->initVar('not_id', XOBJ_DTYPE_INT, NULL, false);
+		$this->initVar('not_modid', XOBJ_DTYPE_INT, NULL, false);
+		$this->initVar('not_category', XOBJ_DTYPE_TXTBOX, null, false, 30);
+		$this->initVar('not_itemid', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('not_event', XOBJ_DTYPE_TXTBOX, null, false, 30);
+		$this->initVar('not_uid', XOBJ_DTYPE_INT, 0, true);
+		$this->initVar('not_mode', XOBJ_DTYPE_INT, 0, false);
+    }
+
+// FIXME:???
+// To send email to multiple users simultaneously, we would need to move
+// the notify functionality to the handler class.  BUT, some of the tags
+// are user-dependent, so every email msg will be unique.  (Unless maybe use
+// smarty for email templates in the future.)  Also we would have to keep
+// track if each user wanted email or PM.
+
+	/**
+	 * Send a notification message to the user
+	 *
+	 * @param  string  $template_dir  Template directory
+	 * @param  string  $template      Template name
+     * @param  string  $subject       Subject line for notification message
+     * @param  array   $tags Array of substitutions for template variables
+	 *
+	 * @return  bool	true if success, false if error
+	 **/
+	function notifyUser($template_dir, $template, $subject, $tags)
+	{
+		// Check the user's notification preference.
+
+		$member_handler =& xoops_gethandler('member');
+		$user =& $member_handler->getUser($this->getVar('not_uid'));
+		if (!is_object($user)) {
+			return true;
+		}
+		$method = $user->getVar('notify_method');
+
+		$xoopsMailer =& getMailer();
+		include_once XOOPS_ROOT_PATH . '/include/notification_constants.php';
+		switch($method) {
+		case XOOPS_NOTIFICATION_METHOD_PM:
+			$xoopsMailer->usePM();
+			$config_handler =& xoops_gethandler('config');
+			$xoopsMailerConfig =& $config_handler->getConfigsByCat(XOOPS_CONF_MAILER);
+			$xoopsMailer->setFromUser($member_handler->getUser($xoopsMailerConfig['fromuid']));
+			foreach ($tags as $k=>$v) {
+				$xoopsMailer->assign($k, $v);
+			}
+			break;
+		case XOOPS_NOTIFICATION_METHOD_EMAIL:
+			$xoopsMailer->useMail();
+			foreach ($tags as $k=>$v) {
+				$xoopsMailer->assign($k, preg_replace("/&amp;/i", '&', $v));
+			}
+			break;
+		default:
+			return true; // report error in user's profile??
+			break;
+		}
+
+		// Set up the mailer
+		$xoopsMailer->setTemplateDir($template_dir);
+		$xoopsMailer->setTemplate($template);
+		$xoopsMailer->setToUsers($user);
+		//global $xoopsConfig;
+		//$xoopsMailer->setFromEmail($xoopsConfig['adminmail']);
+		//$xoopsMailer->setFromName($xoopsConfig['sitename']);
+		$xoopsMailer->setSubject($subject);
+		$success = $xoopsMailer->send();
+
+		// If send-once-then-delete, delete notification
+		// If send-once-then-wait, disable notification
+
+		include_once XOOPS_ROOT_PATH . '/include/notification_constants.php';
+		$notification_handler =& xoops_gethandler('notification');
+
+		if ($this->getVar('not_mode') == XOOPS_NOTIFICATION_MODE_SENDONCETHENDELETE) {
+			$notification_handler->delete($this);
+			return $success;
+		}
+
+		if ($this->getVar('not_mode') == XOOPS_NOTIFICATION_MODE_SENDONCETHENWAIT) {
+			$this->setVar('not_mode', XOOPS_NOTIFICATION_MODE_WAITFORLOGIN);
+			$notification_handler->insert($this);
+		}
+		return $success;
+
+	}
+
+}
+
+/**
+ * XOOPS notification handler class.
+ *
+ * This class is responsible for providing data access mechanisms to the data source
+ * of XOOPS notification class objects.
+ *
+ *
+ * @package     kernel
+ * @subpackage  notification
+ *
+ * @author	    Michael van Dam <mvandam at caltech.edu>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsNotificationHandler extends XoopsObjectHandler
+{
+
+    /**
+     * Create a {@link XoopsNotification}
+     *
+     * @param	bool    $isNew  Flag the object as "new"?
+     *
+     * @return	object
+     */
+    function &create($isNew = true)
+    {
+        $notification = new XoopsNotification();
+        if ($isNew) {
+            $notification->setNew();
+        }
+        return $notification;
+    }
+
+
+    /**
+     * Retrieve a {@link XoopsNotification}
+     *
+     * @param   int $id ID
+     *
+     * @return  object  {@link XoopsNotification}, FALSE on fail
+     **/
+    function &get($id)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('xoopsnotifications').' WHERE not_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $notification = new XoopsNotification();
+                $notification->assignVars($this->db->fetchArray($result));
+                return $notification;
+            }
+        }
+        return false;
+    }
+
+
+    /**
+     * Write a notification(subscription) to database
+     *
+     * @param   object  &$notification
+     *
+     * @return  bool
+     **/
+    function insert(&$notification)
+    {
+        if (strtolower(get_class($notification)) != 'xoopsnotification') {
+            return false;
+        }
+        if (!$notification->isDirty()) {
+            return true;
+        }
+        if (!$notification->cleanVars()) {
+            return false;
+        }
+        foreach ($notification->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($notification->isNew()) {
+            $not_id = $this->db->genId('xoopsnotifications_not_id_seq');
+	    $sql = sprintf("INSERT INTO %s (not_id, not_modid, not_itemid, not_category, not_uid, not_event, not_mode) VALUES (%u, %u, %u, %s, %u, %s, %u)", $this->db->prefix('xoopsnotifications'), $not_id, $not_modid, $not_itemid, $this->db->quoteString($not_category), $not_uid, $this->db->quoteString($not_event), $not_mode);
+        } else {
+	    $sql = sprintf("UPDATE %s SET not_modid = %u, not_itemid = %u, not_category = %s, not_uid = %u, not_event = %s, not_mode = %u WHERE not_id = %u", $this->db->prefix('xoopsnotifications'), $not_modid, $not_itemid, $this->db->quoteString($not_category), $not_uid, $this->db->quoteString($not_event), $not_mode, $not_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($not_id)) {
+            $not_id = $this->db->getInsertId();
+        }
+        $notification->assignVar('not_id', $not_id);
+        return true;
+    }
+
+    /**
+     * Delete a {@link XoopsNotification} from the database
+     *
+     * @param   object  &$notification
+     *
+     * @return  bool
+     **/
+    function delete(&$notification)
+    {
+        if (strtolower(get_class($notification)) != 'xoopsnotification') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE not_id = %u", $this->db->prefix('xoopsnotifications'), $notification->getVar('not_id'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Get some {@link XoopsNotification}s
+     *
+     * @param   object  $criteria
+     * @param   bool    $id_as_key  Use IDs as keys into the array?
+     *
+     * @return  array   Array of {@link XoopsNotification} objects
+     **/
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('xoopsnotifications');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $sort = ($criteria->getSort() != '') ? $criteria->getSort() : 'not_id';
+            $sql .= ' ORDER BY '.$sort.' '.$criteria->getOrder();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $notification = new XoopsNotification();
+            $notification->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $notification;
+            } else {
+                $ret[$myrow['not_id']] =& $notification;
+            }
+            unset($notification);
+        }
+        return $ret;
+    }
+
+// TODO: Need this??
+    /**
+     * Count Notifications
+     *
+     * @param   object  $criteria   {@link CriteriaElement}
+     *
+     * @return  int     Count
+     **/
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('xoopsnotifications');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result =& $this->db->query($sql)) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+    /**
+     * Delete multiple notifications
+     *
+     * @param   object  $criteria   {@link CriteriaElement}
+     *
+     * @return  bool
+     **/
+    function deleteAll($criteria = null)
+    {
+        $sql = 'DELETE FROM '.$this->db->prefix('xoopsnotifications');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+// Need this??
+    /**
+     * Change a value in multiple notifications
+     *
+     * @param   string  $fieldname  Name of the field
+     * @param   string  $fieldvalue Value to write
+     * @param   object  $criteria   {@link CriteriaElement}
+     *
+     * @return  bool
+     **/
+/*
+    function updateAll($fieldname, $fieldvalue, $criteria = null)
+    {
+        $set_clause = is_numeric($fieldvalue) ? $filedname.' = '.$fieldvalue : $filedname." = '".$fieldvalue."'";
+        $sql = 'UPDATE '.$this->db->prefix('xoopsnotifications').' SET '.$set_clause;
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+*/
+
+	// TODO: rename this...
+	// Also, should we have get by module, get by category, etc...??
+
+	function &getNotification ($module_id, $category, $item_id, $event, $user_id)
+	{
+		$criteria = new CriteriaCompo();
+		$criteria->add(new Criteria('not_modid', intval($module_id)));
+		$criteria->add(new Criteria('not_category', $category));
+		$criteria->add(new Criteria('not_itemid', intval($item_id)));
+		$criteria->add(new Criteria('not_event', $event));
+		$criteria->add(new Criteria('not_uid', intval($user_id)));
+		$objects = $this->getObjects($criteria);
+		if (count($objects) == 1) {
+			return $objects[0];
+		}
+		return false;
+	}
+
+	/**
+	 * Determine if a user is subscribed to a particular event in
+	 * a particular module.
+	 *
+	 * @param  string  $category  Category of notification event
+	 * @param  int     $item_id   Item ID of notification event
+	 * @param  string  $event     Event
+     * @param  int     $module_id ID of module (default current module)
+	 * @param  int     $user_id   ID of user (default current user)
+	 * return int  0 if not subscribe; non-zero if subscribed
+	 */
+
+	function isSubscribed ($category, $item_id, $event, $module_id, $user_id)
+	{
+		$criteria = new CriteriaCompo();
+		$criteria->add(new Criteria('not_modid', intval($module_id)));
+		$criteria->add(new Criteria('not_category', $category));
+		$criteria->add(new Criteria('not_itemid', intval($item_id)));
+		$criteria->add(new Criteria('not_event', $event));
+		$criteria->add(new Criteria('not_uid', intval($user_id)));
+		return $this->getCount($criteria);
+		
+	}
+
+
+	// TODO: how about a function to subscribe a whole group of users???
+	// e.g. if we want to add all moderators to be notified of subscription
+	// of new threads...
+
+    /**
+     * Subscribe for notification for an event(s)
+     *
+     * @param  string $category    category of notification
+     * @param  int    $item_id     ID of the item
+     * @param  mixed  $events      event string or array of events
+     * @param  int    $mode        force a particular notification mode
+     *                             (e.g. once_only) (default to current user preference)
+     * @param  int    $module_id   ID of the module (default to current module)
+     * @param  int    $user_id     ID of the user (default to current user)
+     **/
+    function subscribe ($category, $item_id, $events, $mode=null, $module_id=null, $user_id=null)
+    {
+        if (!isset($user_id)) {
+            global $xoopsUser;
+            if (empty($xoopsUser)) {
+                return false;  // anonymous cannot subscribe
+            } else {
+                $user_id = $xoopsUser->getVar('uid');
+            }
+        }
+
+        if (!isset($module_id)) {
+            global $xoopsModule;
+            $module_id = $xoopsModule->getVar('mid');
+        }
+
+        if (!isset($mode)) {
+            $user = new XoopsUser($user_id);
+            $mode = $user->getVar('notify_mode');
+        }
+
+        if (!is_array($events)) $events = array($events);
+        foreach ($events as $event) {
+            if ($notification =& $this->getNotification($module_id, $category, $item_id, $event, $user_id)) {
+                if ($notification->getVar('not_mode') != $mode) {
+                    $this->updateByField($notification, 'not_mode', $mode);
+            	}
+            } else {
+                $notification =& $this->create();
+                $notification->setVar('not_modid', $module_id);
+                $notification->setVar('not_category', $category);
+                $notification->setVar('not_itemid', $item_id);
+                $notification->setVar('not_uid', $user_id);
+                $notification->setVar('not_event', $event);
+                $notification->setVar('not_mode', $mode);
+                $this->insert($notification);
+            }
+        }
+    }
+
+
+// TODO: this will be to provide a list of everything a particular
+// user has subscribed to... e.g. for on the 'Profile' page, similar
+// to how we see the various posts etc. that the user has made.
+// We may also want to have a function where we can specify module id
+    /**
+     * Get a list of notifications by user ID
+     *
+     * @param  int  $user_id  ID of the user
+     *
+     * @return array  Array of {@link XoopsNotification} objects
+     **/
+    function &getByUser ($user_id)
+    {
+        $criteria = new Criteria ('not_uid', $user_id);
+        return $this->getObjects($criteria, true);
+    }
+
+	// TODO: rename this??
+    /**
+     * Get a list of notification events for the current item/mod/user
+     *
+     **/
+	function &getSubscribedEvents ($category, $item_id, $module_id, $user_id)
+    {
+        $criteria = new CriteriaCompo();
+        $criteria->add (new Criteria('not_modid', $module_id));
+        $criteria->add (new Criteria('not_category', $category));
+        if ($item_id) {
+            $criteria->add (new Criteria('not_itemid', $item_id));
+        }
+        $criteria->add (new Criteria('not_uid', $user_id));
+        $results = $this->getObjects($criteria, true);
+        $ret = array();
+        foreach (array_keys($results) as $i) {
+            $ret[] = $results[$i]->getVar('not_event');
+        }
+        return $ret;
+    }
+
+// TODO: is this a useful function?? (Copied from comment_handler)
+    /**
+     * Retrieve items by their ID
+     *
+     * @param   int     $module_id  Module ID
+     * @param   int     $item_id    Item ID
+     * @param   string  $order      Sort order
+     *
+     * @return  array   Array of {@link XoopsNotification} objects
+     **/
+    function &getByItemId($module_id, $item_id, $order = null, $status = null)
+    {
+        $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
+        $criteria->add(new Criteria('com_itemid', intval($item_id)));
+        if (isset($status)) {
+            $criteria->add(new Criteria('com_status', intval($status)));
+        }
+        if (isset($order)) {
+            $criteria->setOrder($order);
+        }
+        return $this->getObjects($criteria);
+    }
+
+
+    /**
+     * Send notifications to users
+     *
+     * @param  string $category   notification category
+     * @param  int $item_id    ID of the item
+     * @param  string  $event  notification event
+     * @param  array  $extra_tags array of substitutions for template to be
+     *                             merged with the one from function..
+	 * @param  array  $user_list  only notify the selected users
+     * @param  int $module_id  ID of the module
+     * @param  int $omit_user_id    ID of the user to omit from notifications. (default to current user).  set to 0 for all users to receive notification.
+     **/
+    // TODO:(?) - pass in an event LIST.  This will help to avoid
+    // problem of sending people multiple emails for similar events.
+    // BUT, then we need an array of mail templates, etc...  Unless
+    // mail templates can include logic in the future, then we can
+    // tailor the mail so it makes sense for any of the possible
+    // (or combination of) events.
+
+    function triggerEvents ($category, $item_id, $events, $extra_tags=array(), $user_list=array(), $module_id=null, $omit_user_id=null)
+    {
+        if (!is_array($events)) {
+            $events = array($events);
+        }
+        foreach ($events as $event) {
+            $this->triggerEvent($category, $item_id, $event, $extra_tags, $user_list, $module_id, $omit_user_id);
+        }
+    }
+
+    function triggerEvent ($category, $item_id, $event, $extra_tags=array(), $user_list=array(), $module_id=null, $omit_user_id=null)
+    {
+
+        if (!isset($module_id)) {
+            global $xoopsModule;
+            $module =& $xoopsModule;
+            $module_id = !empty($xoopsModule) ? $xoopsModule->getVar('mid') : 0;
+        } else {
+            $module_handler =& xoops_gethandler('module');
+            $module =& $module_handler->get($module_id);
+        }
+
+		// Check if event is enabled
+		$config_handler =& xoops_gethandler('config');
+		$mod_config =& $config_handler->getConfigsByCat(0,$module->getVar('mid'));
+		if (empty($mod_config['notification_enabled'])) {
+			return false;
+		}
+		$category_info =& notificationCategoryInfo ($category, $module_id);
+		$event_info =& notificationEventInfo ($category, $event, $module_id);
+		if (!in_array(notificationGenerateConfig($category_info,$event_info,'option_name'),$mod_config['notification_events']) && empty($event_info['invisible'])) {
+			return false;
+		}
+
+        if (!isset($omit_user_id)) {
+            global $xoopsUser;
+            if (!empty($xoopsUser)) {
+                $omit_user_id = $xoopsUser->getVar('uid');
+            } else {
+                $omit_user_id = 0;
+            }
+        }
+        $criteria = new CriteriaCompo();
+        $criteria->add(new Criteria('not_modid', intval($module_id)));
+        $criteria->add(new Criteria('not_category', $category));
+        $criteria->add(new Criteria('not_itemid', intval($item_id)));
+        $criteria->add(new Criteria('not_event', $event));
+        $mode_criteria = new CriteriaCompo();
+        $mode_criteria->add (new Criteria('not_mode', XOOPS_NOTIFICATION_MODE_SENDALWAYS), 'OR');
+        $mode_criteria->add (new Criteria('not_mode', XOOPS_NOTIFICATION_MODE_SENDONCETHENDELETE), 'OR');
+        $mode_criteria->add (new Criteria('not_mode', XOOPS_NOTIFICATION_MODE_SENDONCETHENWAIT), 'OR');
+        $criteria->add($mode_criteria);
+		if (!empty($user_list)) {
+			$user_criteria = new CriteriaCompo();
+			foreach ($user_list as $user) {
+				$user_criteria->add (new Criteria('not_uid', $user), 'OR');
+			}
+			$criteria->add($user_criteria);
+		}
+        $notifications =& $this->getObjects($criteria);
+        if (empty($notifications)) {
+            return;
+        }
+
+        // Add some tag substitutions here
+
+        $not_config = $module->getInfo('notification');
+        $tags = array();
+        if (!empty($not_config)) {
+            if (!empty($not_config['tags_file'])) {
+                $tags_file = XOOPS_ROOT_PATH . '/modules/' . $module->getVar('dirname') . '/' . $not_config['tags_file'];
+                if (file_exists($tags_file)) {
+                    include_once $tags_file;
+                    if (!empty($not_config['tags_func'])) {
+                        $tags_func = $not_config['tags_func'];
+                        if (function_exists($tags_func)) {
+                            $tags = $tags_func($category, intval($item_id), $event);
+                        }
+                    }
+                }
+            }
+			// RMV-NEW
+			if (!empty($not_config['lookup_file'])) {
+				$lookup_file = XOOPS_ROOT_PATH . '/modules/' . $module->getVar('dirname') . '/' . $not_config['lookup_file'];
+				if (file_exists($lookup_file)) {
+					include_once $lookup_file;
+					if (!empty($not_config['lookup_func'])) {
+						$lookup_func = $not_config['lookup_func'];
+						if (function_exists($lookup_func)) {
+							$item_info = $lookup_func($category, intval($item_id));
+						}
+					}
+				}
+			}
+        }
+		$tags['X_ITEM_NAME'] = !empty($item_info['name']) ? $item_info['name'] : '[' . _NOT_ITEMNAMENOTAVAILABLE . ']';
+		$tags['X_ITEM_URL']  = !empty($item_info['url']) ? $item_info['url'] : '[' . _NOT_ITEMURLNOTAVAILABLE . ']';
+		$tags['X_ITEM_TYPE'] = !empty($category_info['item_name']) ? $category_info['title'] : '[' . _NOT_ITEMTYPENOTAVAILABLE . ']';
+        $tags['X_MODULE'] = $module->getVar('name');
+        $tags['X_MODULE_URL'] = XOOPS_URL . '/modules/' . $module->getVar('dirname') . '/';
+        $tags['X_NOTIFY_CATEGORY'] = $category;
+        $tags['X_NOTIFY_EVENT'] = $event;
+
+        $template_dir = $event_info['mail_template_dir'];
+        $template = $event_info['mail_template'] . '.tpl';
+        $subject = $event_info['mail_subject'];
+
+		foreach ($notifications as $notification) {
+			if (empty($omit_user_id) || $notification->getVar('not_uid') != $omit_user_id) {
+				// user-specific tags
+				//$tags['X_UNSUBSCRIBE_URL'] = 'TODO';
+				// TODO: don't show unsubscribe link if it is 'one-time' ??
+				$tags['X_UNSUBSCRIBE_URL'] = XOOPS_URL . '/notifications.php';
+        		$tags = array_merge ($tags, $extra_tags);
+
+				$notification->notifyUser($template_dir, $template, $subject, $tags);
+			}
+		}
+	}
+
+
+    /**
+     * Delete all notifications for one user
+     *
+     * @param   int $user_id  ID of the user
+     * @return  bool
+     **/
+    function unsubscribeByUser ($user_id)
+    {
+        $criteria = new Criteria('not_uid', intval($user_id));
+        return $this->deleteAll($criteria);
+    }
+
+
+// TODO: allow these to use current module, etc...
+
+    /**
+     * Unsubscribe notifications for an event(s).
+     *
+     * @param  string  $category    category of the events
+     * @param  int     $item_id     ID of the item
+     * @param  mixed   $events      event string or array of events
+     * @param  int     $module_id   ID of the module (default current module)
+     * @param  int     $user_id     UID of the user (default current user)
+     *
+     * @return bool
+     **/
+
+    function unsubscribe ($category, $item_id, $events, $module_id=null, $user_id=null)
+    {
+        if (!isset($user_id)) {
+            global $xoopsUser;
+            if (empty($xoopsUser)) {
+                return false;  // anonymous cannot subscribe
+            } else {
+                $user_id = $xoopsUser->getVar('uid');
+            }
+        }
+
+        if (!isset($module_id)) {
+            global $xoopsModule;
+            $module_id = $xoopsModule->getVar('mid');
+        }
+
+        $criteria = new CriteriaCompo();
+        $criteria->add (new Criteria('not_modid', intval($module_id)));
+        $criteria->add (new Criteria('not_category', $category));
+        $criteria->add (new Criteria('not_itemid', intval($item_id)));
+        $criteria->add (new Criteria('not_uid', intval($user_id)));
+        if (!is_array($events)) {
+            $events = array($events);
+        }
+        $event_criteria = new CriteriaCompo();
+        foreach ($events as $event) {
+            $event_criteria->add (new Criteria('not_event', $event), 'OR');
+        }
+        $criteria->add($event_criteria);
+        return $this->deleteAll($criteria);
+    }
+
+
+    // TODO: When 'update' a module, may need to switch around some
+    //  notification classes/IDs...  or delete the ones that no longer
+    //  exist.
+
+    /**
+     * Delete all notifications for a particular module
+     *
+     * @param   int $module_id  ID of the module
+     * @return  bool
+     **/
+    function unsubscribeByModule ($module_id)
+    {
+        $criteria = new Criteria('not_modid', intval($module_id));
+        return $this->deleteAll($criteria);
+    }
+
+
+    /**
+     * Delete all subscriptions for a particular item.
+     *
+     * @param  int    $module_id  ID of the module to which item belongs
+     * @param  string $category   Notification category of the item
+     * @param  int    $item_id    ID of the item
+     *
+     * @return bool
+     **/
+    function unsubscribeByItem ($module_id, $category, $item_id)
+	{
+        $criteria = new CriteriaCompo();
+        $criteria->add (new Criteria('not_modid', intval($module_id)));
+        $criteria->add (new Criteria('not_category', $category));
+        $criteria->add (new Criteria('not_itemid', intval($item_id)));
+        return $this->deleteAll($criteria);
+    }
+
+
+    /**
+     * Perform notification maintenance activites at login time.
+     * In particular, any notifications for the newly logged-in
+     * user with mode XOOPS_NOTIFICATION_MODE_WAITFORLOGIN are
+     * switched to mode XOOPS_NOTIFICATION_MODE_SENDONCETHENWAIT.
+     *
+     * @param  int  $user_id  ID of the user being logged in
+     **/
+    function doLoginMaintenance ($user_id)
+    {
+        $criteria = new CriteriaCompo();
+        $criteria->add (new Criteria('not_uid', intval($user_id)));
+        $criteria->add (new Criteria('not_mode', XOOPS_NOTIFICATION_MODE_WAITFORLOGIN));
+
+        $notifications = $this->getObjects($criteria, true);
+        foreach ($notifications as $n) {
+            $n->setVar('not_mode', XOOPS_NOTIFICATION_MODE_SENDONCETHENWAIT);
+            $this->insert($n);
+        }
+    }
+
+
+    /**
+     * Update
+     *
+     * @param   object  &$notification  {@link XoopsNotification} object
+     * @param   string  $field_name     Name of the field
+     * @param   mixed   $field_value    Value to write
+     *
+     * @return  bool
+     **/
+    function updateByField(&$notification, $field_name, $field_value)
+    {
+        $notification->unsetNew();
+        $notification->setVar($field_name, $field_value);
+        return $this->insert($notification);
+    }
+
+
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/kernel/notification.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/object.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/object.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/object.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,656 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+/**
+ * @package kernel
+ * @copyright copyright &copy; 2000 XOOPS.org
+ */
+
+/**#@+
+ * Xoops object datatype
+ *
+ **/
+define('XOBJ_DTYPE_TXTBOX', 1);
+define('XOBJ_DTYPE_TXTAREA', 2);
+define('XOBJ_DTYPE_INT', 3);
+define('XOBJ_DTYPE_URL', 4);
+define('XOBJ_DTYPE_EMAIL', 5);
+define('XOBJ_DTYPE_ARRAY', 6);
+define('XOBJ_DTYPE_OTHER', 7);
+define('XOBJ_DTYPE_SOURCE', 8);
+define('XOBJ_DTYPE_STIME', 9);
+define('XOBJ_DTYPE_MTIME', 10);
+define('XOBJ_DTYPE_LTIME', 11);
+/**#@-*/
+
+//include_once "xoopspluginloader.php";
+    
+/**
+ * Base class for all objects in the Xoops kernel (and beyond) 
+ * 
+ * @author Kazumi Ono (AKA onokazu)
+ * @copyright copyright &copy; 2000 XOOPS.org
+ * @package kernel
+ **/
+class XoopsObject
+{
+
+    /**
+     * holds all variables(properties) of an object
+     * 
+     * @var array
+     * @access protected
+     **/
+    var $vars = array();
+
+    /**
+    * variables cleaned for store in DB
+    * 
+    * @var array
+    * @access protected
+    */
+    var $cleanVars = array();
+
+    /**
+    * is it a newly created object?
+    * 
+    * @var bool
+    * @access private
+    */
+    var $_isNew = false;
+
+    /**
+    * has any of the values been modified?
+    * 
+    * @var bool
+    * @access private
+    */
+    var $_isDirty = false;
+
+    /**
+    * errors
+    * 
+    * @var array
+    * @access private
+    */
+    var $_errors = array();
+
+    /**
+    * additional filters registered dynamically by a child class object
+    * 
+    * @access private
+    */
+    var $_filters = array();
+
+    /**
+    * constructor
+    * 
+    * normally, this is called from child classes only
+    * @access public
+    */
+    function XoopsObject()
+    {
+    }
+
+    /**#@+
+    * used for new/clone objects
+    * 
+    * @access public
+    */
+    function setNew()
+    {
+        $this->_isNew = true;
+    }
+    function unsetNew()
+    {
+        $this->_isNew = false;
+    }
+    function isNew()
+    {
+        return $this->_isNew;
+    }
+    /**#@-*/
+
+    /**#@+
+    * mark modified objects as dirty
+    * 
+    * used for modified objects only
+    * @access public
+    */
+    function setDirty()
+    {
+        $this->_isDirty = true;
+    }
+    function unsetDirty()
+    {
+        $this->_isDirty = false;
+    }
+    function isDirty()
+    {
+        return $this->_isDirty;
+    }
+    /**#@-*/
+
+    /**
+    * initialize variables for the object
+    * 
+    * @access public
+    * @param string $key
+    * @param int $data_type  set to one of XOBJ_DTYPE_XXX constants (set to XOBJ_DTYPE_OTHER if no data type ckecking nor text sanitizing is required)
+    * @param mixed
+    * @param bool $required  require html form input?
+    * @param int $maxlength  for XOBJ_DTYPE_TXTBOX type only
+    * @param string $option  does this data have any select options?
+    */
+    function initVar($key, $data_type, $value = null, $required = false, $maxlength = null, $options = '')
+    {
+        $this->vars[$key] = array('value' => $value, 'required' => $required, 'data_type' => $data_type, 'maxlength' => $maxlength, 'changed' => false, 'options' => $options);
+    }
+
+    /**
+    * assign a value to a variable
+    * 
+    * @access public
+    * @param string $key name of the variable to assign
+    * @param mixed $value value to assign
+    */
+    function assignVar($key, $value)
+    {
+        if (isset($value) && isset($this->vars[$key])) {
+            $this->vars[$key]['value'] =& $value;
+        }
+    }
+
+    /**
+    * assign values to multiple variables in a batch
+    * 
+    * @access private
+    * @param array $var_array associative array of values to assign
+    */
+    function assignVars($var_arr)
+    {
+        foreach ($var_arr as $key => $value) {
+            $this->assignVar($key, $value);
+        }
+    }
+
+    /**
+    * assign a value to a variable
+    * 
+    * @access public
+    * @param string $key name of the variable to assign
+    * @param mixed $value value to assign
+    * @param bool $not_gpc
+    */
+    function setVar($key, $value, $not_gpc = false)
+    {
+        if (!empty($key) && isset($value) && isset($this->vars[$key])) {
+            $this->vars[$key]['value'] =& $value;
+            $this->vars[$key]['not_gpc'] = $not_gpc;
+            $this->vars[$key]['changed'] = true;
+            $this->setDirty();
+        }
+    }
+
+    /**
+    * assign values to multiple variables in a batch
+    * 
+    * @access private
+    * @param array $var_arr associative array of values to assign
+    * @param bool $not_gpc
+    */
+    function setVars($var_arr, $not_gpc = false)
+    {
+        foreach ($var_arr as $key => $value) {
+            $this->setVar($key, $value, $not_gpc);
+        }
+    }
+
+	/**
+	* Assign values to multiple variables in a batch
+	*
+	* Meant for a CGI contenxt:
+	* - prefixed CGI args are considered save
+	* - avoids polluting of namespace with CGI args
+	*
+	* @access private
+	* @param array $var_arr associative array of values to assign
+	* @param string $pref prefix (only keys starting with the prefix will be set)
+	*/
+	function setFormVars($var_arr=null, $pref='xo_', $not_gpc=false) {
+		$len = strlen($pref);
+		foreach ($var_arr as $key => $value) {
+			if ($pref == substr($key,0,$len)) {
+				$this->setVar(substr($key,$len), $value, $not_gpc);
+			}
+		}
+	}
+
+
+    /**
+    * returns all variables for the object
+    * 
+    * @access public
+    * @return array associative array of key->value pairs
+    */
+    function &getVars()
+    {
+        return $this->vars;
+    }
+
+    /**
+    * returns a specific variable for the object in a proper format
+    * 
+    * @access public
+    * @param string $key key of the object's variable to be returned
+    * @param string $format format to use for the output
+    * @return mixed formatted value of the variable
+    */
+    function &getVar($key, $format = 's')
+    {
+        $ret = $this->vars[$key]['value'];
+        switch ($this->vars[$key]['data_type']) {
+
+        case XOBJ_DTYPE_TXTBOX:
+            switch (strtolower($format)) {
+            case 's':
+            case 'show':
+            case 'e':
+            case 'edit':
+                $ts =& MyTextSanitizer::getInstance();
+                return $ts->htmlSpecialChars($ret);
+                break 1;
+            case 'p':
+            case 'preview':
+            case 'f':
+            case 'formpreview':
+                $ts =& MyTextSanitizer::getInstance();
+                return $ts->htmlSpecialChars($ts->stripSlashesGPC($ret));
+                break 1;
+            case 'n':
+            case 'none':
+            default:
+                break 1;
+            }
+            break;
+        case XOBJ_DTYPE_TXTAREA:
+            switch (strtolower($format)) {
+            case 's':
+            case 'show':
+                $ts =& MyTextSanitizer::getInstance();
+                $html = !empty($this->vars['dohtml']['value']) ? 1 : 0;
+                $xcode = (!isset($this->vars['doxcode']['value']) || $this->vars['doxcode']['value'] == 1) ? 1 : 0;
+                $smiley = (!isset($this->vars['dosmiley']['value']) || $this->vars['dosmiley']['value'] == 1) ? 1 : 0;
+                $image = (!isset($this->vars['doimage']['value']) || $this->vars['doimage']['value'] == 1) ? 1 : 0;
+                $br = (!isset($this->vars['dobr']['value']) || $this->vars['dobr']['value'] == 1) ? 1 : 0;
+                return $ts->displayTarea($ret, $html, $smiley, $xcode, $image, $br);
+                break 1;
+            case 'e':
+            case 'edit':
+                return htmlspecialchars($ret, ENT_QUOTES);
+                break 1;
+            case 'p':
+            case 'preview':
+                $ts =& MyTextSanitizer::getInstance();
+                $html = !empty($this->vars['dohtml']['value']) ? 1 : 0;
+                $xcode = (!isset($this->vars['doxcode']['value']) || $this->vars['doxcode']['value'] == 1) ? 1 : 0;
+                $smiley = (!isset($this->vars['dosmiley']['value']) || $this->vars['dosmiley']['value'] == 1) ? 1 : 0;
+                $image = (!isset($this->vars['doimage']['value']) || $this->vars['doimage']['value'] == 1) ? 1 : 0;
+                $br = (!isset($this->vars['dobr']['value']) || $this->vars['dobr']['value'] == 1) ? 1 : 0;
+                return $ts->previewTarea($ret, $html, $smiley, $xcode, $image, $br);
+                break 1;
+            case 'f':
+            case 'formpreview':
+                $ts =& MyTextSanitizer::getInstance();
+                return htmlspecialchars($ts->stripSlashesGPC($ret), ENT_QUOTES);
+                break 1;
+            case 'n':
+            case 'none':
+            default:
+                break 1;
+            }
+            break;
+        case XOBJ_DTYPE_ARRAY:
+            $ret =& unserialize($ret);
+            break;
+        case XOBJ_DTYPE_SOURCE:
+            switch (strtolower($format)) {
+            case 's':
+            case 'show':
+                break 1;
+            case 'e':
+            case 'edit':
+                return htmlspecialchars($ret, ENT_QUOTES);
+                break 1;
+            case 'p':
+            case 'preview':
+                $ts =& MyTextSanitizer::getInstance();
+                return $ts->stripSlashesGPC($ret);
+                break 1;
+            case 'f':
+            case 'formpreview':
+                $ts =& MyTextSanitizer::getInstance();
+                return htmlspecialchars($ts->stripSlashesGPC($ret), ENT_QUOTES);
+                break 1;
+            case 'n':
+            case 'none':
+            default:
+                break 1;
+            }
+            break;
+        default:
+            if ($this->vars[$key]['options'] != '' && $ret != '') {
+                switch (strtolower($format)) {
+                case 's':
+                case 'show':
+					$selected = explode('|', $ret);
+                    $options = explode('|', $this->vars[$key]['options']);
+                    $i = 1;
+                    $ret = array();
+                    foreach ($options as $op) {
+                        if (in_array($i, $selected)) {
+                            $ret[] = $op;
+                        }
+                        $i++;
+                    }
+                    return implode(', ', $ret);
+                case 'e':
+                case 'edit':
+                    $ret = explode('|', $ret);
+                    break 1;
+                default:
+                    break 1;
+                }
+
+            }
+            break;
+        }
+        return $ret;
+    }
+
+    /**
+     * clean values of all variables of the object for storage. 
+     * also add slashes whereever needed
+     * 
+     * @return bool true if successful
+     * @access public
+     */
+    function cleanVars()
+    {
+        $ts =& MyTextSanitizer::getInstance();
+        foreach ($this->vars as $k => $v) {
+			$cleanv = $v['value'];
+            if (!$v['changed']) {
+            } else {
+                $cleanv = is_string($cleanv) ? trim($cleanv) : $cleanv;
+                switch ($v['data_type']) {
+                case XOBJ_DTYPE_TXTBOX:
+                    if ($v['required'] && $cleanv != '0' && $cleanv == '') {
+                        $this->setErrors("$k is required.");
+                        continue;
+                    }
+                    if (isset($v['maxlength']) && strlen($cleanv) > intval($v['maxlength'])) {
+                        $this->setErrors("$k must be shorter than ".intval($v['maxlength'])." characters.");
+                        continue;
+                    }
+                    if (!$v['not_gpc']) {
+                        $cleanv = $ts->stripSlashesGPC($ts->censorString($cleanv));
+                    } else {
+                        $cleanv = $ts->censorString($cleanv);
+                    }
+                    break;
+                case XOBJ_DTYPE_TXTAREA:
+                    if ($v['required'] && $cleanv != '0' && $cleanv == '') {
+                        $this->setErrors("$k is required.");
+                        continue;
+                    }
+                    if (!$v['not_gpc']) {
+                        $cleanv = $ts->stripSlashesGPC($ts->censorString($cleanv));
+                    } else {
+                        $cleanv = $ts->censorString($cleanv);
+                    }
+                    break;
+                case XOBJ_DTYPE_SOURCE:
+                    if (!$v['not_gpc']) {
+                        $cleanv = $ts->stripSlashesGPC($cleanv);
+                    } else {
+                        $cleanv = $cleanv;
+                    }
+                    break;
+                case XOBJ_DTYPE_INT:
+                    $cleanv = intval($cleanv);
+                    break;
+                case XOBJ_DTYPE_EMAIL:
+                    if ($v['required'] && $cleanv == '') {
+                        $this->setErrors("$k is required.");
+                        continue;
+                    }
+                    if ($cleanv != '' && !preg_match("/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+([\.][a-z0-9-]+)+$/i",$cleanv)) {
+                        $this->setErrors("Invalid Email");
+                        continue;
+                    }
+                    if (!$v['not_gpc']) {
+                        $cleanv = $ts->stripSlashesGPC($cleanv);
+                    }
+                    break;
+                case XOBJ_DTYPE_URL:
+                    if ($v['required'] && $cleanv == '') {
+                        $this->setErrors("$k is required.");
+                        continue;
+                    }
+                    if ($cleanv != '' && !preg_match("/^http[s]*:\/\//i", $cleanv)) {
+                        $cleanv = 'http://' . $cleanv;
+                    }
+                    if (!$v['not_gpc']) {
+                        $cleanv =& $ts->stripSlashesGPC($cleanv);
+                    }
+                    break;
+                case XOBJ_DTYPE_ARRAY:
+                    $cleanv = serialize($cleanv);
+                    break;
+                case XOBJ_DTYPE_STIME:
+                case XOBJ_DTYPE_MTIME:
+                case XOBJ_DTYPE_LTIME:
+                    $cleanv = !is_string($cleanv) ? intval($cleanv) : strtotime($cleanv);
+                    break;
+                default:
+                    break;
+                }
+            }
+            $this->cleanVars[$k] =& $cleanv;
+            unset($cleanv);
+        }
+        if (count($this->_errors) > 0) {
+            return false;
+        }
+        $this->unsetDirty();
+        return true;
+    }
+
+    /**
+     * dynamically register additional filter for the object
+     * 
+     * @param string $filtername name of the filter
+     * @access public
+     */
+    function registerFilter($filtername)
+    {
+        $this->_filters[] = $filtername;
+    }
+
+    /**
+     * load all additional filters that have been registered to the object
+     * 
+     * @access private
+     */
+    function _loadFilters()
+    {
+        //include_once XOOPS_ROOT_PATH.'/class/filters/filter.php';
+        //foreach ($this->_filters as $f) {
+        //    include_once XOOPS_ROOT_PATH.'/class/filters/'.strtolower($f).'php';
+        //}
+    }
+
+    /**
+     * create a clone(copy) of the current object
+     * 
+     * @access public
+     * @return object clone
+     */
+    function &xoopsClone()
+    {
+        $class = get_class($this);
+        $clone = new $class();
+        foreach ($this->vars as $k => $v) {
+            $clone->assignVar($k, $v['value']);
+        }
+        // need this to notify the handler class that this is a newly created object
+        $clone->setNew();
+        return $clone;
+    }
+
+    /**
+     * add an error 
+     * 
+     * @param string $value error to add
+     * @access public
+     */
+    function setErrors($err_str)
+    {
+        $this->_errors[] = trim($err_str);
+    }
+
+    /**
+     * return the errors for this object as an array
+     * 
+     * @return array an array of errors
+     * @access public
+     */
+    function getErrors()
+    {
+        return $this->_errors;
+    }
+
+    /**
+     * return the errors for this object as html
+     * 
+     * @return string html listing the errors
+     * @access public
+     */
+    function getHtmlErrors()
+    {
+        $ret = '<h4>Errors</h4>';
+        if (!empty($this->_errors)) {
+            foreach ($this->_errors as $error) {
+                $ret .= $error.'<br />';
+            }
+        } else {
+            $ret .= 'None<br />';
+        }
+        return $ret;
+    }
+}
+
+/**
+* XOOPS object handler class.  
+* This class is an abstract class of handler classes that are responsible for providing
+* data access mechanisms to the data source of its corresponsing data objects
+* @package kernel
+* @abstract
+*
+* @author  Kazumi Ono <onokazu at xoops.org>
+* @copyright copyright &copy; 2000 The XOOPS Project
+*/
+class XoopsObjectHandler
+{
+
+    /**
+     * holds referenced to {@link XoopsDatabase} class object
+	 * 
+	 * @var object
+	 * @see XoopsDatabase
+     * @access protected
+     */
+    var $db;
+
+    // 
+    /**
+     * called from child classes only
+	 * 
+	 * @param object $db reference to the {@link XoopsDatabase} object
+     * @access protected
+     */
+    function XoopsObjectHandler(&$db)
+    {
+        $this->db =& $db;
+    }
+
+    /**
+     * creates a new object
+     * 
+     * @abstract
+     */
+    function &create()
+    {
+    }
+
+    /**
+     * gets a value object
+     * 
+	 * @param int $int_id
+     * @abstract
+     */
+    function &get($int_id)
+    {
+    }
+
+    /**
+     * insert/update object
+     * 
+	 * @param object $object
+     * @abstract
+     */
+    function insert(&$object)
+    {
+    }
+
+    /**
+     * delete obejct from database
+     * 
+	 * @param object $object
+     * @abstract
+     */
+    function delete(&$object)
+    {
+    }
+
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/object.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/online.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/online.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/online.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,175 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+/**
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+/**
+ * A handler for "Who is Online?" information
+ * 
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsOnlineHandler
+{
+
+    /**
+     * Database connection
+     * 
+     * @var	object
+     * @access	private
+     */
+    var $db;
+
+    /**
+     * Constructor
+     * 
+     * @param	object  &$db    {@link XoopsHandlerFactory} 
+     */
+    function XoopsOnlineHandler(&$db)
+    {
+        $this->db =& $db;
+    }
+
+    /**
+     * Write online information to the database
+     * 
+     * @param	int     $uid    UID of the active user
+     * @param	string  $uname  Username
+     * @param	string  $timestamp
+     * @param	string  $module Current module
+     * @param	string  $ip     User's IP adress
+     * 
+     * @return	bool    TRUE on success
+     */
+    function write($uid, $uname, $time, $module, $ip)
+	{
+		$uid = intval($uid);
+		if ($uid > 0) {
+			$sql = "SELECT COUNT(*) FROM ".$this->db->prefix('online')." WHERE online_uid=".$uid;
+		} else {
+			$sql = "SELECT COUNT(*) FROM ".$this->db->prefix('online')." WHERE online_uid=".$uid." AND online_ip='".$ip."'";
+		}
+		list($count) = $this->db->fetchRow($this->db->queryF($sql));
+        if ( $count > 0 ) {
+            $sql = "UPDATE ".$this->db->prefix('online')." SET online_updated=".$time.", online_module = ".$module." WHERE online_uid = ".$uid;
+            if ($uid == 0) {
+                $sql .= " AND online_ip='".$ip."'";
+            }
+        } else {
+			$sql = sprintf("INSERT INTO %s (online_uid, online_uname, online_updated, online_ip, online_module) VALUES (%u, %s, %u, %s, %u)", $this->db->prefix('online'), $uid, $this->db->quoteString($uname), $time, $this->db->quoteString($ip), $module);
+        }
+		if (!$this->db->queryF($sql)) {
+            return false;
+        }
+		return true;
+    }
+
+    /**
+     * Delete online information for a user
+     * 
+     * @param	int $uid    UID
+     * 
+     * @return	bool    TRUE on success
+     */
+    function destroy($uid)
+    {
+		$sql = sprintf("DELETE FROM %s WHERE online_uid = %u", $this->db->prefix('online'), $uid);
+        if (!$result = $this->db->queryF($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Garbage Collection
+     * 
+     * Delete all online information that has not been updated for a certain time
+     * 
+     * @param	int $expire Expiration time in seconds
+     */
+    function gc($expire)
+    {
+		$sql = sprintf("DELETE FROM %s WHERE online_updated < %u", $this->db->prefix('online'), time() - intval($expire));
+        $this->db->queryF($sql);
+    }
+
+    /**
+     * Get an array of online information
+     * 
+     * @param	object  $criteria   {@link CriteriaElement} 
+     * @return	array   Array of associative arrays of online information
+     */
+    function &getAll($criteria = null)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('online');
+        if (is_object($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result =& $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return false;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $ret[] =& $myrow;
+            unset($myrow);
+        }
+        return $ret;
+    }
+
+    /**
+     * Count the number of online users
+     * 
+     * @param	object  $criteria   {@link CriteriaElement} 
+     */
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('online');
+        if (is_object($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result =& $this->db->query($sql)) {
+            return false;
+        }
+        list($ret) = $this->db->fetchRow($result);
+        return $ret;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/online.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/privmessage.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/privmessage.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/privmessage.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,238 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+/**
+ * {description}
+ *
+ * @package		kernel
+ *
+ * @author		Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 The XOOPS Project (http://www.xoops.org)
+ *
+ * @version		$Revision$ - $Date$
+ */
+class XoopsPrivmessage extends XoopsObject
+{
+
+/**
+ * constructor
+ **/
+    function XoopsPrivmessage()
+    {
+        $this->XoopsObject();
+        $this->initVar('msg_id', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('msg_image', XOBJ_DTYPE_OTHER, 'icon1.gif', false, 100);
+        $this->initVar('subject', XOBJ_DTYPE_TXTBOX, null, true, 255);
+        $this->initVar('from_userid', XOBJ_DTYPE_INT, null, true);
+        $this->initVar('to_userid', XOBJ_DTYPE_INT, null, true);
+        $this->initVar('msg_time', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('msg_text', XOBJ_DTYPE_TXTAREA, null, true);
+        $this->initVar('read_msg', XOBJ_DTYPE_INT, 0, false);
+    }
+}
+
+/**
+ * XOOPS private message handler class.
+ * 
+ * This class is responsible for providing data access mechanisms to the data source
+ * of XOOPS private message class objects.
+ *
+ * @package		kernel
+ *
+ * @author		Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 The XOOPS Project (http://www.xoops.org)
+ *
+ * @version		$Revision$ - $Date$
+ */
+class XoopsPrivmessageHandler extends XoopsObjectHandler
+{
+
+/**
+ * Create a new {@link XoopsPrivmessage} object
+ * @param 	bool 	$isNew 	Flag as "new"?
+ * @return 	object
+ **/
+    function &create($isNew = true)
+    {
+        $pm = new XoopsPrivmessage();
+        if ($isNew) {
+            $pm->setNew();
+        }
+        return $pm;
+    }
+
+/**
+ * Load a {@link XoopsPrivmessage} object
+ * @param 	int 	$id ID of the message
+ * @return 	object
+ **/
+    function &get($id)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('priv_msgs').' WHERE msg_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $pm = new XoopsPrivmessage();
+                $pm->assignVars($this->db->fetchArray($result));
+                return $pm;
+            }
+        }
+        return false;
+    }
+
+/**
+ * Insert a message in the database
+ * @param 	object 	$pm		{@link XoopsPrivmessage} object
+ * @return 	bool
+ **/
+    function insert(&$pm)
+    {
+        if (strtolower(get_class($pm)) != 'xoopsprivmessage') {
+            return false;
+        }
+        if (!$pm->isDirty()) {
+            return true;
+        }
+        if (!$pm->cleanVars()) {
+            return false;
+        }
+        foreach ($pm->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($pm->isNew()) {
+            $msg_id = $this->db->genId('priv_msgs_msg_id_seq');
+            $sql = sprintf("INSERT INTO %s (msg_id, msg_image, subject, from_userid, to_userid, msg_time, msg_text, read_msg) VALUES (%u, %s, %s, %u, %u, %u, %s, %u)", $this->db->prefix('priv_msgs'), $msg_id, $this->db->quoteString($msg_image), $this->db->quoteString($subject), $from_userid, $to_userid, time(), $this->db->quoteString($msg_text), 0);
+        } else {
+            $sql = sprintf("UPDATE %s SET msg_image = %s, subject = %s, from_userid = %u, to_userid = %u, msg_text = %s, read_msg = %u WHERE msg_id = %u", $this->db->prefix('priv_msgs'), $this->db->quoteString($msg_image), $this->db->quoteString($subject), $from_userid, $to_userid, $this->db->quoteString($msg_text), $read_msg, $msg_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($msg_id)) {
+            $msg_id = $this->db->getInsertId();
+        }
+		$pm->assignVar('msg_id', $msg_id);
+        return true;
+    }
+
+/**
+ * Delete from the database
+ * @param 	object 	$pm 	{@link XoopsPrivmessage} object
+ * @return 	bool
+ **/
+    function delete(&$pm)
+    {
+        if (strtolower(get_class($pm)) != 'xoopsprivmessage') {
+            return false;
+        }
+        if (!$result = $this->db->query(sprintf("DELETE FROM %s WHERE msg_id = %u", $this->db->prefix('priv_msgs'), $pm->getVar('msg_id')))) {
+            return false;
+        }
+        return true;
+    }
+
+/**
+ * Load messages from the database
+ * @param 	object 	$criteria 	{@link CriteriaElement} object
+ * @param 	bool 	$id_as_key 	use ID as key into the array?
+ * @return 	array	Array of {@link XoopsPrivmessage} objects
+ **/
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('priv_msgs');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            $sort = !in_array($criteria->getSort(), array('msg_id', 'msg_time', 'from_userid')) ? 'msg_id' : $criteria->getSort();
+            $sql .= ' ORDER BY '.$sort.' '.$criteria->getOrder();
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $pm = new XoopsPrivmessage();
+            $pm->assignVars($myrow);
+			if (!$id_as_key) {
+            	$ret[] =& $pm;
+			} else {
+				$ret[$myrow['msg_id']] =& $pm;
+			}
+            unset($pm);
+        }
+        return $ret;
+    }
+
+/**
+ * Count message
+ * @param 	object 	$criteria = null 	{@link CriteriaElement} object
+ * @return 	int
+ **/
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('priv_msgs');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result = $this->db->query($sql)) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+/**
+ * Mark a message as read
+ * @param 	object 	$pm 	{@link XoopsPrivmessage} object
+ * @return 	bool
+ **/
+    function setRead(&$pm)
+    {
+        if (strtolower(get_class($pm)) != 'xoopsprivmessage') {
+            return false;
+        }
+		$sql = sprintf("UPDATE %s SET read_msg = 1 WHERE msg_id = %u", $this->db->prefix('priv_msgs'), $pm->getVar('msg_id'));
+        if (!$this->db->queryF($sql)) {
+            return false;
+        }
+        return true;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/privmessage.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/session.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/session.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/session.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,161 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+/**
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+
+
+/**
+ * Handler for a session
+ * @package     kernel
+ * 
+ * @author	    Kazumi Ono	<onokazu at xoops.org>
+ * @copyright	copyright (c) 2000-2003 XOOPS.org
+ */
+class XoopsSessionHandler
+{
+
+    /**
+     * Database connection
+     * 
+     * @var	object
+     * @access	private
+     */
+    var $db;
+
+    /**
+     * Constructor
+     * 
+     * @param	object  &$mf    reference to a XoopsManagerFactory
+     * 
+     */
+    function XoopsSessionHandler(&$db)
+    {
+        $this->db =& $db;
+    }
+
+    /**
+     * Open a session
+     * 
+     * @param	string  $save_path
+     * @param	string  $session_name
+     * 
+     * @return	bool
+     */
+    function open($save_path, $session_name)
+	{
+        return true;
+    }
+
+    /**
+     * Close a session
+     * 
+     * @return	bool
+     */
+    function close()
+	{
+        return true;
+    }
+
+    /**
+     * Read a session from the database
+     * 
+     * @param	string  &sess_id    ID of the session
+     * 
+     * @return	array   Session data
+     */
+    function read($sess_id)
+	{
+        $sql = sprintf('SELECT sess_data FROM %s WHERE sess_id = %s', $this->db->prefix('session'), $this->db->quoteString($sess_id));
+        if (false != $result = $this->db->query($sql)) {
+            if (list($sess_data) = $this->db->fetchRow($result)) {
+                return $sess_data;
+            }
+        }
+        return '';
+    }
+
+    /**
+     * Write a session to the database
+     * 
+     * @param   string  $sess_id
+     * @param   string  $sess_data
+     * 
+     * @return  bool    
+     **/
+    function write($sess_id, $sess_data)
+	{
+		$sess_id = $this->db->quoteString($sess_id);
+		list($count) = $this->db->fetchRow($this->db->query("SELECT COUNT(*) FROM ".$this->db->prefix('session')." WHERE sess_id=".$sess_id));
+        if ( $count > 0 ) {
+			$sql = sprintf('UPDATE %s SET sess_updated = %u, sess_data = %s WHERE sess_id = %s', $this->db->prefix('session'), time(), $this->db->quoteString($sess_data), $sess_id);
+        } else {
+			$sql = sprintf('INSERT INTO %s (sess_id, sess_updated, sess_ip, sess_data) VALUES (%s, %u, %s, %s)', $this->db->prefix('session'), $sess_id, time(), $this->db->quoteString($_SERVER['REMOTE_ADDR']), $this->db->quoteString($sess_data));
+        }
+		if (!$this->db->queryF($sql)) {
+            return false;
+        }
+		return true;
+    }
+
+    /**
+     * Destroy a session
+     * 
+     * @param   string  $sess_id
+     * 
+     * @return  bool
+     **/
+    function destroy($sess_id)
+    {
+		$sql = sprintf('DELETE FROM %s WHERE sess_id = %s', $this->db->prefix('session'), $this->db->quoteString($sess_id));
+        if ( !$result = $this->db->queryF($sql) ) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * Garbage Collector
+     * 
+     * @param   int $expire Time in seconds until a session expires
+	 * @return  bool
+     **/
+    function gc($expire)
+    {
+        $mintime = time() - intval($expire);
+		$sql = sprintf('DELETE FROM %s WHERE sess_updated < %u', $this->db->prefix('session'), $mintime);
+        return $this->db->queryF($sql);
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/session.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/tplfile.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/tplfile.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/tplfile.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,313 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+class XoopsTplfile extends XoopsObject
+{
+
+	function XoopsTplfile()
+	{
+		$this->XoopsObject();
+		$this->initVar('tpl_id', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('tpl_refid', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('tpl_tplset', XOBJ_DTYPE_OTHER, null, false);
+		$this->initVar('tpl_file', XOBJ_DTYPE_TXTBOX, null, true, 100);
+		$this->initVar('tpl_desc', XOBJ_DTYPE_TXTBOX, null, false, 100);
+		$this->initVar('tpl_lastmodified', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('tpl_lastimported', XOBJ_DTYPE_INT, 0, false);
+		$this->initVar('tpl_module', XOBJ_DTYPE_OTHER, null, false);
+		$this->initVar('tpl_type', XOBJ_DTYPE_OTHER, null, false);
+		$this->initVar('tpl_source', XOBJ_DTYPE_SOURCE, null, false);
+	}
+
+	function &getSource()
+	{
+		return $this->getVar('tpl_source');
+	}
+
+	function getLastModified()
+	{
+		return $this->getVar('tpl_lastmodified');
+	}
+}
+
+/**
+* XOOPS template file handler class.  
+* This class is responsible for providing data access mechanisms to the data source 
+* of XOOPS template file class objects.
+*
+*
+* @author  Kazumi Ono <onokazu at xoops.org>
+*/
+
+class XoopsTplfileHandler extends XoopsObjectHandler
+{
+
+    function &create($isNew = true)
+    {
+        $tplfile = new XoopsTplfile();
+        if ($isNew) {
+            $tplfile->setNew();
+        }
+        return $tplfile;
+    }
+
+    function &get($id, $getsource = false)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            if (!$getsource) {
+                $sql = 'SELECT * FROM '.$this->db->prefix('tplfile').' WHERE tpl_id='.$id;
+            } else {
+                $sql = 'SELECT f.*, s.tpl_source FROM '.$this->db->prefix('tplfile').' f LEFT JOIN '.$this->db->prefix('tplsource').' s  ON s.tpl_id=f.tpl_id WHERE f.tpl_id='.$id;
+            }
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $tplfile = new XoopsTplfile();
+                $tplfile->assignVars($this->db->fetchArray($result));
+                return $tplfile;
+            }
+        }
+        return false;
+    }
+
+    function loadSource(&$tplfile)
+    {
+        if (strtolower(get_class($tplfile)) != 'xoopstplfile') {
+            return false;
+        }
+        if (!$tplfile->getVar('tpl_source')) {
+            $sql = 'SELECT tpl_source FROM '.$this->db->prefix('tplsource').' WHERE tpl_id='.$tplfile->getVar('tpl_id');
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $myrow = $this->db->fetchArray($result);
+            $tplfile->assignVar('tpl_source', $myrow['tpl_source']);
+        }
+		return true;
+    }
+
+    function insert(&$tplfile)
+    {
+        if (strtolower(get_class($tplfile)) != 'xoopstplfile') {
+            return false;
+        }
+        if (!$tplfile->isDirty()) {
+            return true;
+        }
+        if (!$tplfile->cleanVars()) {
+            return false;
+        }
+        foreach ($tplfile->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($tplfile->isNew()) {
+            $tpl_id = $this->db->genId('tpltpl_file_id_seq');
+            $sql = sprintf("INSERT INTO %s (tpl_id, tpl_module, tpl_refid, tpl_tplset, tpl_file, tpl_desc, tpl_lastmodified, tpl_lastimported, tpl_type) VALUES (%u, %s, %u, %s, %s, %s, %u, %u, %s)", $this->db->prefix('tplfile'), $tpl_id, $this->db->quoteString($tpl_module), $tpl_refid, $this->db->quoteString($tpl_tplset), $this->db->quoteString($tpl_file), $this->db->quoteString($tpl_desc), $tpl_lastmodified, $tpl_lastimported, $this->db->quoteString($tpl_type));
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            if (empty($tpl_id)) {
+                $tpl_id = $this->db->getInsertId();
+            }
+            if (isset($tpl_source) && $tpl_source != '') {
+                $sql = sprintf("INSERT INTO %s (tpl_id, tpl_source) VALUES (%u, %s)", $this->db->prefix('tplsource'), $tpl_id, $this->db->quoteString($tpl_source));
+                if (!$result = $this->db->query($sql)) {
+                    $this->db->query(sprintf("DELETE FROM %s WHERE tpl_id = %u", $this->db->prefix('tplfile'), $tpl_id));
+                    return false;
+                }
+            }
+			$tplfile->assignVar('tpl_id', $tpl_id);
+        } else {
+            $sql = sprintf("UPDATE %s SET tpl_tplset = %s, tpl_file = %s, tpl_desc = %s, tpl_lastimported = %u, tpl_lastmodified = %u WHERE tpl_id = %u", $this->db->prefix('tplfile'), $this->db->quoteString($tpl_tplset), $this->db->quoteString($tpl_file), $this->db->quoteString($tpl_desc), $tpl_lastimported, $tpl_lastmodified, $tpl_id);
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            if (isset($tpl_source) && $tpl_source != '') {
+                $sql = sprintf("UPDATE %s SET tpl_source = %s WHERE tpl_id = %u", $this->db->prefix('tplsource'), $this->db->quoteString($tpl_source), $tpl_id);
+                if (!$result = $this->db->query($sql)) {
+                    return false;
+                }
+            }
+        }
+        return true;
+    }
+
+    function forceUpdate(&$tplfile)
+    {
+        if (strtolower(get_class($tplfile)) != 'xoopstplfile') {
+            return false;
+        }
+        if (!$tplfile->isDirty()) {
+            return true;
+        }
+        if (!$tplfile->cleanVars()) {
+            return false;
+        }
+        foreach ($tplfile->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if (!$tplfile->isNew()) {
+            $sql = sprintf("UPDATE %s SET tpl_tplset = %s, tpl_file = %s, tpl_desc = %s, tpl_lastimported = %u, tpl_lastmodified = %u WHERE tpl_id = %u", $this->db->prefix('tplfile'), $this->db->quoteString($tpl_tplset), $this->db->quoteString($tpl_file), $this->db->quoteString($tpl_desc), $tpl_lastimported, $tpl_lastmodified, $tpl_id);
+            if (!$result = $this->db->queryF($sql)) {
+                return false;
+            }
+            if (isset($tpl_source) && $tpl_source != '') {
+                $sql = sprintf("UPDATE %s SET tpl_source = %s WHERE tpl_id = %u", $this->db->prefix('tplsource'), $this->db->quoteString($tpl_source), $tpl_id);
+                if (!$result = $this->db->queryF($sql)) {
+                    return false;
+                }
+            }
+			return true;
+        } else {
+			return false;
+		}
+    }
+
+    function delete(&$tplfile)
+    {
+        if (strtolower(get_class($tplfile)) != 'xoopstplfile') {
+            return false;
+        }
+        $id = $tplfile->getVar('tpl_id');
+        $sql = sprintf("DELETE FROM %s WHERE tpl_id = %u", $this->db->prefix('tplfile'), $id);
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE tpl_id = %u", $this->db->prefix('tplsource'), $id);
+        $this->db->query($sql);
+        return true;
+    }
+
+    function &getObjects($criteria = null, $getsource = false, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        if ($getsource) {
+            $sql = 'SELECT f.*, s.tpl_source FROM '.$this->db->prefix('tplfile').' f LEFT JOIN '.$this->db->prefix('tplsource').' s ON s.tpl_id=f.tpl_id';
+        } else {
+            $sql = 'SELECT * FROM '.$this->db->prefix('tplfile');
+        }
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere().' ORDER BY tpl_refid';
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $tplfile = new XoopsTplfile();
+            $tplfile->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $tplfile;
+            } else {
+                $ret[$myrow['tpl_id']] =& $tplfile;
+            }
+            unset($tplfile);
+        }
+        return $ret;
+    }
+
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('tplfile');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result =& $this->db->query($sql)) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+    function getModuleTplCount($tplset)
+    {
+        $ret = array();
+        $sql = "SELECT tpl_module, COUNT(tpl_id) AS count FROM ".$this->db->prefix('tplfile')." WHERE tpl_tplset='".$tplset."' GROUP BY tpl_module";
+        $result = $this->db->query($sql);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            if ($myrow['tpl_module'] != '') {
+                $ret[$myrow['tpl_module']] = $myrow['count'];
+            }
+        }
+        return $ret;
+    }
+
+    function &find($tplset = null, $type = null, $refid = null, $module = null, $file = null, $getsource = false)
+    {
+        $criteria = new CriteriaCompo();
+        if (isset($tplset)) {
+            $criteria->add(new Criteria('tpl_tplset', $tplset));
+        }
+        if (isset($module)) {
+            $criteria->add(new Criteria('tpl_module', $module));
+        }
+        if (isset($refid)) {
+            $criteria->add(new Criteria('tpl_refid', $refid));
+        }
+        if (isset($file)) {
+            $criteria->add(new Criteria('tpl_file', $file));
+        }
+        if (isset($type)) {
+            if (is_array($type)) {
+                $criteria2 = new CriteriaCompo();
+                foreach ($type as $t) {
+                    $criteria2->add(new Criteria('tpl_type', $t), 'OR');
+                }
+                $criteria->add($criteria2);
+            } else {
+                $criteria->add(new Criteria('tpl_type', $type));
+            }
+        }
+        return $this->getObjects($criteria, $getsource, false);
+    }
+
+    function templateExists($tplname, $tplset_name)
+    {
+        $criteria = new CriteriaCompo(new Criteria('tpl_file', trim($tplname)));
+        $criteria->add(new Criteria('tpl_tplset', trim($tplset_name)));
+        if ($this->getCount($criteria) > 0) {
+            return true;
+        }
+        return false;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/tplfile.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/tplset.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/tplset.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/tplset.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,200 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+class XoopsTplset extends XoopsObject
+{
+
+	function XoopsTplset()
+	{
+		$this->XoopsObject();
+		$this->initVar('tplset_id', XOBJ_DTYPE_INT, null, false);
+		$this->initVar('tplset_name', XOBJ_DTYPE_OTHER, null, false);
+		$this->initVar('tplset_desc', XOBJ_DTYPE_TXTBOX, null, false, 255);
+		$this->initVar('tplset_credits', XOBJ_DTYPE_TXTAREA, null, false);
+		$this->initVar('tplset_created', XOBJ_DTYPE_INT, 0, false);
+	}
+}
+
+/**
+* XOOPS tplset handler class.
+* This class is responsible for providing data access mechanisms to the data source
+* of XOOPS tplset class objects.
+*
+*
+* @author  Kazumi Ono <onokazu at xoops.org>
+*/
+
+class XoopsTplsetHandler extends XoopsObjectHandler
+{
+
+    function &create($isNew = true)
+    {
+        $tplset = new XoopsTplset();
+        if ($isNew) {
+            $tplset->setNew();
+        }
+        return $tplset;
+    }
+
+    function &get($id)
+    {
+        $id = intval($id);
+        if ($id > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('tplset').' WHERE tplset_id='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $tplset = new XoopsTplset();
+                $tplset->assignVars($this->db->fetchArray($result));
+                return $tplset;
+            }
+        }
+        return false;
+    }
+
+    function &getByName($tplset_name)
+    {
+        $tplset_name = trim($tplset_name);
+        if ($tplset_name != '') {
+            $sql = 'SELECT * FROM '.$this->db->prefix('tplset').' WHERE tplset_name='.$this->db->quoteString($tplset_name);
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $tplset = new XoopsTplset();
+                $tplset->assignVars($this->db->fetchArray($result));
+                return $tplset;
+            }
+        }
+        return false;
+    }
+
+    function insert(&$tplset)
+    {
+        if (strtolower(get_class($tplset)) != 'xoopstplset') {
+            return false;
+        }
+        if (!$tplset->isDirty()) {
+            return true;
+        }
+        if (!$tplset->cleanVars()) {
+            return false;
+        }
+        foreach ($tplset->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        if ($tplset->isNew()) {
+            $tplset_id = $this->db->genId('tplset_tplset_id_seq');
+            $sql = sprintf("INSERT INTO %s (tplset_id, tplset_name, tplset_desc, tplset_credits, tplset_created) VALUES (%u, %s, %s, %s, %u)", $this->db->prefix('tplset'), $tplset_id, $this->db->quoteString($tplset_name), $this->db->quoteString($tplset_desc), $this->db->quoteString($tplset_credits), $tplset_created);
+        } else {
+            $sql = sprintf("UPDATE %s SET tplset_name = %s, tplset_desc = %s, tplset_credits = %s, tplset_created = %u WHERE tplset_id = %u", $this->db->prefix('tplset'), $this->db->quoteString($tplset_name), $this->db->quoteString($tplset_desc), $this->db->quoteString($tplset_credits), $tplset_created, $tplset_id);
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        if (empty($tplset_id)) {
+            $tplset_id = $this->db->getInsertId();
+        }
+		$tplset->assignVar('tplset_id', $tplset_id);
+        return true;
+    }
+
+    function delete(&$tplset)
+    {
+        if (strtolower(get_class($tplset)) != 'xoopstplset') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE tplset_id = %u", $this->db->prefix('tplset'), $tplset->getVar('tplset_id'));
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE tplset_name = %s", $this->db->prefix('imgset_tplset_link'), $this->db->quoteString($tplset->getVar('tplset_name')));
+        $this->db->query($sql);
+        return true;
+    }
+
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('tplset');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere().' ORDER BY tplset_id';
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $tplset = new XoopsTplset();
+            $tplset->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $tplset;
+            } else {
+                $ret[$myrow['tplset_id']] =& $tplset;
+            }
+            unset($tplset);
+        }
+        return $ret;
+    }
+
+
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('tplset');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result =& $this->db->query($sql)) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+    function &getList($criteria = null)
+	{
+        $ret = array();
+		$tplsets =& $this->getObjects($criteria, true);
+		foreach (array_keys($tplsets) as $i) {
+            $ret[$tplsets[$i]->getVar('tplset_name')] = $tplsets[$i]->getVar('tplset_name');
+        }
+		return $ret;
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/tplset.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/kernel/user.php
===================================================================
--- XoopsCore/trunk/htdocs/kernel/user.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/kernel/user.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,665 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+if (!defined('XOOPS_ROOT_PATH')) {
+	exit();
+}
+/**
+ * Class for users 
+ * @author Kazumi Ono <onokazu at xoops.org>
+ * @copyright copyright (c) 2000-2003 XOOPS.org
+ * @package kernel
+ */
+class XoopsUser extends XoopsObject
+{
+
+    /**
+     * Array of groups that user belongs to 
+     * @var array
+	 * @access private
+     */
+    var $_groups = array();
+    /**
+     * @var bool is the user admin? 
+	 * @access private
+     */
+    var $_isAdmin = null;
+    /**
+     * @var string user's rank
+	 * @access private
+     */
+    var $_rank = null;
+    /**
+     * @var bool is the user online?
+     * @access private
+     */
+    var $_isOnline = null;
+
+    /**
+     * constructor 
+     * @param array $id Array of key-value-pairs to be assigned to the user. (for backward compatibility only)
+     * @param int $id ID of the user to be loaded from the database.
+     */
+    function XoopsUser($id = null)
+    {
+        $this->initVar('uid', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('name', XOBJ_DTYPE_TXTBOX, null, false, 60);
+        $this->initVar('uname', XOBJ_DTYPE_TXTBOX, null, true, 25);
+        $this->initVar('email', XOBJ_DTYPE_TXTBOX, null, true, 60);
+        $this->initVar('url', XOBJ_DTYPE_TXTBOX, null, false, 100);
+        $this->initVar('user_avatar', XOBJ_DTYPE_TXTBOX, null, false, 30);
+        $this->initVar('user_regdate', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('user_icq', XOBJ_DTYPE_TXTBOX, null, false, 15);
+        $this->initVar('user_from', XOBJ_DTYPE_TXTBOX, null, false, 100);
+        $this->initVar('user_sig', XOBJ_DTYPE_TXTAREA, null, false, null);
+        $this->initVar('user_viewemail', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('actkey', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('user_aim', XOBJ_DTYPE_TXTBOX, null, false, 18);
+        $this->initVar('user_yim', XOBJ_DTYPE_TXTBOX, null, false, 25);
+        $this->initVar('user_msnm', XOBJ_DTYPE_TXTBOX, null, false, 100);
+        $this->initVar('pass', XOBJ_DTYPE_TXTBOX, null, false, 32);
+        $this->initVar('posts', XOBJ_DTYPE_INT, null, false);
+        $this->initVar('attachsig', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('rank', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('level', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('theme', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('timezone_offset', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('last_login', XOBJ_DTYPE_INT, 0, false);
+        $this->initVar('umode', XOBJ_DTYPE_OTHER, null, false);
+        $this->initVar('uorder', XOBJ_DTYPE_INT, 1, false);
+        // RMV-NOTIFY
+        $this->initVar('notify_method', XOBJ_DTYPE_OTHER, 1, false);
+        $this->initVar('notify_mode', XOBJ_DTYPE_OTHER, 0, false); 
+        $this->initVar('user_occ', XOBJ_DTYPE_TXTBOX, null, false, 100);
+        $this->initVar('bio', XOBJ_DTYPE_TXTAREA, null, false, null);
+        $this->initVar('user_intrest', XOBJ_DTYPE_TXTBOX, null, false, 150);
+        $this->initVar('user_mailok', XOBJ_DTYPE_INT, 1, false);
+
+        // for backward compatibility
+        if (isset($id)) {
+            if (is_array($id)) {
+                $this->assignVars($id);
+            } else {
+                $member_handler =& xoops_gethandler('member');
+                $user =& $member_handler->getUser($id);
+                foreach ($user->vars as $k => $v) {
+                    $this->assignVar($k, $v['value']);
+                }
+            }
+        }
+    }
+
+	/**
+	 * check if the user is a guest user
+     *
+     * @return bool returns false
+     *
+     */
+	function isGuest()
+	{
+		return false;
+	}
+
+
+    /**
+     * Updated by Catzwolf 11 Jan 2004
+	 * find the username for a given ID
+	 * 
+	 * @param int $userid ID of the user to find
+	 * @param int $usereal switch for usename or realname
+	 * @return string name of the user. name for "anonymous" if not found.
+     */
+    function getUnameFromId( $userid, $usereal = 0 )
+    {
+		$userid = intval($userid);
+		$usereal = intval($usereal);
+		if ($userid > 0) {
+            $member_handler =& xoops_gethandler('member');
+            $user =& $member_handler->getUser($userid);
+            if (is_object($user)) {
+                $ts =& MyTextSanitizer::getInstance();
+                if ( $usereal ) { 
+					return $ts->htmlSpecialChars($user->getVar('name'));
+            	} else {
+					return $ts->htmlSpecialChars($user->getVar('uname'));
+				}
+            }
+        }
+        return $GLOBALS['xoopsConfig']['anonymous'];
+    }
+    /**
+     * increase the number of posts for the user 
+     *
+	 * @deprecated
+     */
+    function incrementPost(){
+        $member_handler =& xoops_gethandler('member');
+        return $member_handler->updateUserByField($this, 'posts', $this->getVar('posts') + 1);
+    }
+	/**
+	 * set the groups for the user
+	 * 
+	 * @param array $groupsArr Array of groups that user belongs to
+	 */
+	function setGroups($groupsArr)
+	{
+		if (is_array($groupsArr)) {
+			$this->_groups =& $groupsArr;
+		}
+	}
+    /**
+     * get the groups that the user belongs to
+	 * 
+	 * @return array array of groups 
+     */
+    function &getGroups()
+    {
+        if (empty($this->_groups)) {
+            $member_handler =& xoops_gethandler('member');
+            $this->_groups =& $member_handler->getGroupsByUser($this->getVar('uid'));
+        }
+        return $this->_groups;
+    }
+	/**
+	 * alias for {@link getGroups()}
+	 * @see getGroups()
+	 * @return array array of groups
+	 * @deprecated
+	 */
+	function &groups()
+    {
+        return $this->getGroups();
+    }
+    /**
+     * Is the user admin ?
+     *
+     * This method will return true if this user has admin rights for the specified module.<br />
+     * - If you don't specify any module ID, the current module will be checked.<br />
+     * - If you set the module_id to -1, it will return true if the user has admin rights for at least one module
+     *
+     * @param int $module_id check if user is admin of this module
+	 * @return bool is the user admin of that module?
+     */
+    function isAdmin( $module_id = null ) {
+		if ( is_null( $module_id ) ) {
+			$module_id = isset($GLOBALS['xoopsModule']) ? $GLOBALS['xoopsModule']->getVar( 'mid', 'n' ) : 1;
+		} elseif ( intval($module_id) < 1 ) {
+			$module_id = 0;
+		}
+        $moduleperm_handler =& xoops_gethandler('groupperm');
+        return $moduleperm_handler->checkRight('module_admin', $module_id, $this->getGroups());
+    }
+    /**
+     * get the user's rank
+	 * @return array array of rank ID and title
+     */
+    function rank()
+    {
+        if (!isset($this->_rank)) {
+            $this->_rank = xoops_getrank($this->getVar('rank'), $this->getVar('posts'));
+        }
+        return $this->_rank;
+    }
+    /**
+     * is the user activated?
+     * @return bool
+     */
+    function isActive()
+    {
+        if ($this->getVar('level') == 0) {
+            return false;
+        }
+        return true;
+    }
+    /**
+     * is the user currently logged in? 
+     * @return bool
+     */
+    function isOnline()
+    {
+        if (!isset($this->_isOnline)) {
+            $onlinehandler =& xoops_gethandler('online');
+            $this->_isOnline = ($onlinehandler->getCount(new Criteria('online_uid', $this->getVar('uid'))) > 0) ? true : false;
+        }
+        return $this->_isOnline;
+    }
+	/**#@+
+	 * specialized wrapper for {@link XoopsObject::getVar()}
+     * 
+     * kept for compatibility reasons.
+     * 
+ 	 * @see XoopsObject::getVar()
+	 * @deprecated
+	 */
+    /**
+     * get the users UID 
+     * @return int
+     */
+    function uid()
+    {
+        return $this->getVar("uid");
+    }
+    
+    /**
+     * get the users name
+	 * @param string $format format for the output, see {@link XoopsObject::getVar()}
+	 * @return string 
+     */
+    function name($format="S")
+    {
+        return $this->getVar("name", $format);
+    }
+    
+    /**
+     * get the user's uname
+	 * @param string $format format for the output, see {@link XoopsObject::getVar()}
+     * @return string
+     */
+    function uname($format="S")
+    {
+        return $this->getVar("uname", $format);
+    }
+    
+    /**
+     * get the user's email 
+	 * 
+	 * @param string $format format for the output, see {@link XoopsObject::getVar()}
+	 * @return string
+     */
+    function email($format="S")
+    {
+        return $this->getVar("email", $format);
+    }
+    
+    function url($format="S")
+    {
+        return $this->getVar("url", $format);
+    }
+    
+    function user_avatar($format="S")
+    {
+        return $this->getVar("user_avatar");
+    }
+    
+    function user_regdate()
+    {
+        return $this->getVar("user_regdate");
+    }
+    
+    function user_icq($format="S")
+    {
+        return $this->getVar("user_icq", $format);
+    }
+    
+    function user_from($format="S")
+    {
+        return $this->getVar("user_from", $format);
+    }
+    function user_sig($format="S")
+    {
+        return $this->getVar("user_sig", $format);
+    }
+    
+    function user_viewemail()
+    {
+        return $this->getVar("user_viewemail");
+    }
+    
+    function actkey()
+    {
+        return $this->getVar("actkey");
+    }
+    
+    function user_aim($format="S")
+    {
+        return $this->getVar("user_aim", $format);
+    }
+    
+    function user_yim($format="S")
+    {
+        return $this->getVar("user_yim", $format);
+    }
+    
+    function user_msnm($format="S")
+    {
+        return $this->getVar("user_msnm", $format);
+    }
+    
+    function pass()
+    {
+        return $this->getVar("pass");
+    }
+    
+    function posts()
+    {
+        return $this->getVar("posts");
+    }
+    
+    function attachsig()
+    {
+        return $this->getVar("attachsig");
+    }
+    
+    function level()
+    {
+        return $this->getVar("level");
+    }
+    
+    function theme()
+    {
+        return $this->getVar("theme");
+    }
+    
+    function timezone()
+    {
+        return $this->getVar("timezone_offset");
+    }
+    
+    function umode()
+    {
+        return $this->getVar("umode");
+    }
+    
+    function uorder()
+    {
+        return $this->getVar("uorder");
+    }
+   
+    // RMV-NOTIFY
+    function notify_method()
+    {
+        return $this->getVar("notify_method");
+    }
+
+    function notify_mode()
+    {
+        return $this->getVar("notify_mode");
+    }
+ 
+    function user_occ($format="S")
+    {
+        return $this->getVar("user_occ", $format);
+    }
+    
+    function bio($format="S")
+    {
+        return $this->getVar("bio", $format);
+    }
+    
+    function user_intrest($format="S")
+    {
+        return $this->getVar("user_intrest", $format);
+    }
+    
+    function last_login()
+    {
+        return $this->getVar("last_login");
+    }
+	/**#@-*/
+	
+}
+
+/**
+ * Class that represents a guest user
+ * @author Kazumi Ono <onokazu at xoops.org>
+ * @copyright copyright (c) 2000-2003 XOOPS.org
+ * @package kernel
+ */
+class XoopsGuestUser extends XoopsUser
+{
+	/**
+	 * check if the user is a guest user
+     *
+     * @return bool returns true
+     *
+     */
+	function isGuest()
+	{
+		return true;
+	}
+}
+
+
+/**
+* XOOPS user handler class.  
+* This class is responsible for providing data access mechanisms to the data source 
+* of XOOPS user class objects.
+*
+* @author  Kazumi Ono <onokazu at xoops.org>
+* @copyright copyright (c) 2000-2003 XOOPS.org
+* @package kernel
+*/
+class XoopsUserHandler extends XoopsObjectHandler
+{
+
+    /**
+     * create a new user
+     * 
+     * @param bool $isNew flag the new objects as "new"?
+     * @return object XoopsUser
+     */
+    function &create($isNew = true)
+    {
+        $user = new XoopsUser();
+        if ($isNew) {
+            $user->setNew();
+        }
+        return $user;
+    }
+
+    /**
+     * retrieve a user
+     * 
+     * @param int $id UID of the user
+     * @return mixed reference to the {@link XoopsUser} object, FALSE if failed
+     */
+    function &get($id)
+    {
+        if (intval($id) > 0) {
+            $sql = 'SELECT * FROM '.$this->db->prefix('users').' WHERE uid='.$id;
+            if (!$result = $this->db->query($sql)) {
+                return false;
+            }
+            $numrows = $this->db->getRowsNum($result);
+            if ($numrows == 1) {
+                $user = new XoopsUser();
+                $user->assignVars($this->db->fetchArray($result));
+                return $user;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * insert a new user in the database
+     * 
+     * @param object $user reference to the {@link XoopsUser} object
+     * @param bool $force
+     * @return bool FALSE if failed, TRUE if already present and unchanged or successful
+     */
+    function insert(&$user, $force = false)
+    {
+        if (strtolower(get_class($user)) != 'xoopsuser') {
+            return false;
+        }
+        if (!$user->isDirty()) {
+            return true;
+        }
+        if (!$user->cleanVars()) {
+            return false;
+        }
+        foreach ($user->cleanVars as $k => $v) {
+            ${$k} = $v;
+        }
+        // RMV-NOTIFY
+        // Added two fields, notify_method, notify_mode
+        if ($user->isNew()) {
+            $uid = $this->db->genId($this->db->prefix('users').'_uid_seq');
+            $sql = sprintf("INSERT INTO %s (uid, uname, name, email, url, user_avatar, user_regdate, user_icq, user_from, user_sig, user_viewemail, actkey, user_aim, user_yim, user_msnm, pass, posts, attachsig, rank, level, theme, timezone_offset, last_login, umode, uorder, notify_method, notify_mode, user_occ, bio, user_intrest, user_mailok) VALUES (%u, %s, %s, %s, %s, %s, %u, %s, %s, %s, %u, %s, %s, %s, %s, %s, %u, %u, %u, %u, %s, %.2f, %u, %s, %u, %u, %u, %s, %s, %s, %u)", $this->db->prefix('users'), $uid, $this->db->quoteString($uname), $this->db->quoteString($name), $this->db->quoteString($email), $this->db->quoteString($url), $this->db->quoteString($user_avatar), time(), $this->db->quoteString($user_icq), $this->db->quoteString($user_from), $this->db->quoteString($user_sig), $user_viewemail, $this->db->quoteString($actkey), $this->db->quoteString($user_aim), $this->db->quoteString($user_yim), $this->db->quoteString($user_msnm), $this->db->quoteString($pass), $posts, $!
 attachsig, $rank, $level, $this->db->quoteString($theme), $timezone_offset, 0, $this->db->quoteString($umode), $uorder, $notify_method, $notify_mode, $this->db->quoteString($user_occ), $this->db->quoteString($bio), $this->db->quoteString($user_intrest), $user_mailok);
+        } else {
+            $sql = sprintf("UPDATE %s SET uname = %s, name = %s, email = %s, url = %s, user_avatar = %s, user_icq = %s, user_from = %s, user_sig = %s, user_viewemail = %u, user_aim = %s, user_yim = %s, user_msnm = %s, posts = %d,  pass = %s, attachsig = %u, rank = %u, level= %u, theme = %s, timezone_offset = %.2f, umode = %s, last_login = %u, uorder = %u, notify_method = %u, notify_mode = %u, user_occ = %s, bio = %s, user_intrest = %s, user_mailok = %u WHERE uid = %u", $this->db->prefix('users'), $this->db->quoteString($uname), $this->db->quoteString($name), $this->db->quoteString($email), $this->db->quoteString($url), $this->db->quoteString($user_avatar), $this->db->quoteString($user_icq), $this->db->quoteString($user_from), $this->db->quoteString($user_sig), $user_viewemail, $this->db->quoteString($user_aim), $this->db->quoteString($user_yim), $this->db->quoteString($user_msnm), $posts, $this->db->quoteString($pass), $attachsig, $rank, $level, $this->db->quoteString($them!
 e), $timezone_offset, $this->db->quoteString($umode), $last_login, $uorder, $notify_method, $notify_mode, $this->db->quoteString($user_occ), $this->db->quoteString($bio), $this->db->quoteString($user_intrest), $user_mailok, $uid);
+        }
+        if (false != $force) {
+            $result = $this->db->queryF($sql);
+        } else {
+            $result = $this->db->query($sql);
+        }
+        if (!$result) {
+            return false;
+        }
+        if (empty($uid)) {
+            $uid = $this->db->getInsertId();
+        }
+        $user->assignVar('uid', $uid);
+        return true;
+    }
+
+    /**
+     * delete a user from the database
+     * 
+     * @param object $user reference to the user to delete
+     * @param bool $force
+     * @return bool FALSE if failed.
+     */
+    function delete(&$user, $force = false)
+    {
+        if (strtolower(get_class($user)) != 'xoopsuser') {
+            return false;
+        }
+        $sql = sprintf("DELETE FROM %s WHERE uid = %u", $this->db->prefix("users"), $user->getVar('uid'));
+        if (false != $force) {
+            $result = $this->db->queryF($sql);
+        } else {
+            $result = $this->db->query($sql);
+        }
+        if (!$result) {
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * retrieve users from the database
+     * 
+     * @param object $criteria {@link CriteriaElement} conditions to be met
+     * @param bool $id_as_key use the UID as key for the array?
+     * @return array array of {@link XoopsUser} objects
+     */
+    function &getObjects($criteria = null, $id_as_key = false)
+    {
+        $ret = array();
+        $limit = $start = 0;
+        $sql = 'SELECT * FROM '.$this->db->prefix('users');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+            if ($criteria->getSort() != '') {
+                $sql .= ' ORDER BY '.$criteria->getSort().' '.$criteria->getOrder();
+            }
+            $limit = $criteria->getLimit();
+            $start = $criteria->getStart();
+        }
+        $result = $this->db->query($sql, $limit, $start);
+        if (!$result) {
+            return $ret;
+        }
+        while ($myrow = $this->db->fetchArray($result)) {
+            $user = new XoopsUser();
+            $user->assignVars($myrow);
+            if (!$id_as_key) {
+                $ret[] =& $user;
+            } else {
+                $ret[$myrow['uid']] =& $user;
+            }
+            unset($user);
+        }
+        return $ret;
+    }
+
+    /**
+     * count users matching a condition
+     * 
+     * @param object $criteria {@link CriteriaElement} to match
+     * @return int count of users
+     */
+    function getCount($criteria = null)
+    {
+        $sql = 'SELECT COUNT(*) FROM '.$this->db->prefix('users');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        $result = $this->db->query($sql);
+        if (!$result) {
+            return 0;
+        }
+        list($count) = $this->db->fetchRow($result);
+        return $count;
+    }
+
+    /**
+     * delete users matching a set of conditions
+     * 
+     * @param object $criteria {@link CriteriaElement} 
+     * @return bool FALSE if deletion failed
+     */
+    function deleteAll($criteria = null)
+    {
+        $sql = 'DELETE FROM '.$this->db->prefix('users');
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+
+	/**
+     * Change a value for users with a certain criteria
+     * 
+     * @param   string  $fieldname  Name of the field
+     * @param   string  $fieldvalue Value to write
+     * @param   object  $criteria   {@link CriteriaElement} 
+     * 
+     * @return  bool
+     **/
+    function updateAll($fieldname, $fieldvalue, $criteria = null)
+    {
+        $set_clause = is_numeric($fieldvalue) ? $fieldname.' = '.$fieldvalue : $fieldname.' = '.$this->db->quoteString($fieldvalue);
+        $sql = 'UPDATE '.$this->db->prefix('users').' SET '.$set_clause;
+        if (isset($criteria) && is_subclass_of($criteria, 'criteriaelement')) {
+            $sql .= ' '.$criteria->renderWhere();
+        }
+        if (!$result = $this->db->query($sql)) {
+            return false;
+        }
+        return true;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/kernel/user.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/language/english/admin.php
===================================================================
--- XoopsCore/trunk/htdocs/language/english/admin.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/language/english/admin.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,15 @@
+<?php
+// $Id$
+//%%%%%%	File Name  admin.php 	%%%%%
+define("_AD_NORIGHT","You don't have the right to access this area");
+define("_AD_ACTION","Action");
+define("_AD_EDIT","Edit");
+define("_AD_DELETE","Delete");
+define("_AD_LASTTENUSERS","Last 10 registered users");
+define("_AD_NICKNAME","Nickname");
+define("_AD_EMAIL","Email");
+define("_AD_AVATAR","Avatar");
+define("_AD_REGISTERED","Registered"); //Registered Date
+define('_AD_PRESSGEN', 'This is your first time to enter the administration section. Press the button below to proceed.');
+define('_AD_LOGINADMIN', 'Logging you in..');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/language/english/admin.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/language/english/calendar.php
===================================================================
--- XoopsCore/trunk/htdocs/language/english/calendar.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/language/english/calendar.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,34 @@
+<?php
+// $Id$
+//%%%%%		Time Zone	%%%%
+define("_CAL_SUNDAY", "Sunday");
+define("_CAL_MONDAY", "Monday");
+define("_CAL_TUESDAY", "Tuesday");
+define("_CAL_WEDNESDAY", "Wednesday");
+define("_CAL_THURSDAY", "Thursday");
+define("_CAL_FRIDAY", "Friday");
+define("_CAL_SATURDAY", "Saturday");
+define("_CAL_JANUARY", "January");
+define("_CAL_FEBRUARY", "February");
+define("_CAL_MARCH", "March");
+define("_CAL_APRIL", "April");
+define("_CAL_MAY", "May");
+define("_CAL_JUNE", "June");
+define("_CAL_JULY", "July");
+define("_CAL_AUGUST", "August");
+define("_CAL_SEPTEMBER", "September");
+define("_CAL_OCTOBER", "October");
+define("_CAL_NOVEMBER", "November");
+define("_CAL_DECEMBER", "December");
+define("_CAL_TGL1STD", "Toggle first day of week");
+define("_CAL_PREVYR", "Prev. year (hold for menu)");
+define("_CAL_PREVMNTH", "Prev. month (hold for menu)");
+define("_CAL_GOTODAY", "Go Today");
+define("_CAL_NXTMNTH", "Next month (hold for menu)");
+define("_CAL_NEXTYR", "Next year (hold for menu)");
+define("_CAL_SELDATE", "Select date");
+define("_CAL_DRAGMOVE", "Drag to move");
+define("_CAL_TODAY", "Today");
+define("_CAL_DISPM1ST", "Display Monday first");
+define("_CAL_DISPS1ST", "Display Sunday first");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/language/english/calendar.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/language/english/comment.php
===================================================================
--- XoopsCore/trunk/htdocs/language/english/comment.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/language/english/comment.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,40 @@
+<?php
+// $Id$
+define('_CM_TITLE','Title');
+define('_CM_MESSAGE','Message');
+define('_CM_DOSMILEY','Enable Smiley Icons');
+define('_CM_DOHTML','Enable HTML Tags');
+define('_CM_DOAUTOWRAP','Auto wrap lines');
+define('_CM_DOXCODE','Enable XOOPS Codes');
+define('_CM_REFRESH','Refresh');
+define('_CM_PENDING','Pending');
+define('_CM_HIDDEN','Hidden');
+define('_CM_ACTIVE','Active');
+define('_CM_STATUS','Status');
+define('_CM_POSTCOMMENT','Post Comment');
+define('_CM_REPLIES','Replies');
+define('_CM_PARENT','Parent');
+define('_CM_TOP','Top');
+define('_CM_BOTTOM','Bottom');
+define('_CM_ONLINE','Online!');
+define('_CM_POSTED','Posted'); // Posted date
+define('_CM_UPDATED', 'Updated');
+define('_CM_THREAD','Thread');
+define('_CM_POSTER','Poster');
+define('_CM_JOINED','Joined');
+define('_CM_POSTS','Posts');
+define('_CM_FROM','From');
+define('_CM_COMDELETED', 'Comment(s) deleted.');
+define('_CM_COMDELETENG', 'Could not delete comment.');
+define('_CM_DELETESELECT' , 'Delete all its child comments?');
+define('_CM_DELETEONE' , 'No, delete only this comment');
+define('_CM_DELETEALL', 'Yes, delete all');
+define('_CM_THANKSPOST', 'Thanks for posting!');
+define('_CM_NOTICE', "The comments are owned by the poster. We aren't responsible for their content.");
+define('_CM_COMRULES','Comment Rules');
+define('_CM_COMAPPROVEALL','Comments are always approved');
+define('_CM_COMAPPROVEUSER','Comments by registered users are always approved');
+define('_CM_COMAPPROVEADMIN','All comments need to be approved by administrator');
+define('_CM_COMANONPOST','Allow anonymous post in comments?');
+define('_CM_COMNOCOM','Disable comments');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/language/english/comment.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/language/english/global.php
===================================================================
--- XoopsCore/trunk/htdocs/language/english/global.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/language/english/global.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,200 @@
+<?php
+// $Id$
+//%%%%%%	File Name mainfile.php 	%%%%%
+define("_PLEASEWAIT","Please Wait");
+define("_FETCHING","Loading...");
+define("_TAKINGBACK","Taking you back to where you were....");
+define("_LOGOUT","Logout");
+define("_SUBJECT","Subject");
+define("_MESSAGEICON","Message Icon");
+define("_COMMENTS","Comments");
+define("_POSTANON","Post Anonymously");
+define("_DISABLESMILEY","Disable smiley");
+define("_DISABLEHTML","Disable html");
+define("_PREVIEW","Preview");
+
+define("_GO","Go!");
+define("_NESTED","Nested");
+define("_NOCOMMENTS","No Comments");
+define("_FLAT","Flat");
+define("_THREADED","Threaded");
+define("_OLDESTFIRST","Oldest First");
+define("_NEWESTFIRST","Newest First");
+define("_MORE","more...");
+define("_MULTIPAGE","To have your article span multiple pages, insert the word <font color=red>[pagebreak]</font> (with brackets) in the article.");
+define("_IFNOTRELOAD","If the page does not automatically reload, please click <a href='%s'>here</a>");
+define("_WARNINSTALL2","WARNING: Directory %s exists on your server. <br />Please remove this directory for security reasons.");
+define("_WARNINWRITEABLE","WARNING: File %s is writeable by the server. <br />Please change the permission of this file for security reasons.<br /> in Unix (444), in Win32 (read-only)");
+
+//%%%%%%	File Name themeuserpost.php 	%%%%%
+define("_PROFILE","Profile");
+define("_POSTEDBY","Posted by");
+define("_VISITWEBSITE","Visit Website");
+define("_SENDPMTO","Send Private Message to %s");
+define("_SENDEMAILTO","Send Email to %s");
+define("_ADD","Add");
+define("_REPLY","Reply");
+define("_DATE","Date");   // Posted date
+
+//%%%%%%	File Name admin_functions.php 	%%%%%
+define("_MAIN","Main");
+define("_MANUAL","Manual");
+define("_INFO","Info");
+define("_CPHOME","Control Panel Home");
+define("_YOURHOME","Home Page");
+
+//%%%%%%	File Name misc.php (who's-online popup)	%%%%%
+define("_WHOSONLINE","Who's Online");
+define('_GUESTS', 'Guests');
+define('_MEMBERS', 'Members');
+define("_ONLINEPHRASE","<b>%s</b> user(s) are online");
+define("_ONLINEPHRASEX","<b>%s</b> user(s) are browsing <b>%s</b>");
+define("_CLOSE","Close");  // Close window
+
+//%%%%%%	File Name module.textsanitizer.php 	%%%%%
+define("_QUOTEC","Quote:");
+
+//%%%%%%	File Name admin.php 	%%%%%
+define("_NOPERM","Sorry, you don't have the permission to access this area.");
+
+//%%%%%		Common Phrases		%%%%%
+define("_NO","No");
+define("_YES","Yes");
+define("_EDIT","Edit");
+define("_DELETE","Delete");
+define("_SUBMIT","Submit");
+define("_MODULENOEXIST","Selected module does not exist!");
+define("_ALIGN","Align");
+define("_LEFT","Left");
+define("_CENTER","Center");
+define("_RIGHT","Right");
+define("_FORM_ENTER", "Please enter %s");
+// %s represents file name
+define("_MUSTWABLE","File %s must be writable by the server!");
+// Module info
+define('_PREFERENCES', 'Preferences');
+define("_VERSION", "Version");
+define("_DESCRIPTION", "Description");
+define("_ERRORS", "Errors");
+define("_NONE", "None");
+define('_ON','on');
+define('_READS','reads');
+define('_WELCOMETO','Welcome to %s');
+define('_SEARCH','Search');
+define('_ALL', 'All');
+define('_TITLE', 'Title');
+define('_OPTIONS', 'Options');
+define('_QUOTE', 'Quote');
+define('_LIST', 'List');
+define('_LOGIN','User Login');
+define('_USERNAME','Username: ');
+define('_PASSWORD','Password: ');
+define("_SELECT","Select");
+define("_IMAGE","Image");
+define("_SEND","Send");
+define("_CANCEL","Cancel");
+define("_ASCENDING","Ascending order");
+define("_DESCENDING","Descending order");
+define('_BACK', 'Back');
+define('_NOTITLE', 'No title');
+
+/* Image manager */
+define('_IMGMANAGER','Image Manager');
+define('_NUMIMAGES', '%s images');
+define('_ADDIMAGE','Add Image File');
+define('_IMAGENAME','Name:');
+define('_IMGMAXSIZE','Max size allowed (bytes):');
+define('_IMGMAXWIDTH','Max width allowed (pixels):');
+define('_IMGMAXHEIGHT','Max height allowed (pixels):');
+define('_IMAGECAT','Category:');
+define('_IMAGEFILE','Image file:');
+define('_IMGWEIGHT','Display order in image manager:');
+define('_IMGDISPLAY','Display this image?');
+define('_IMAGEMIME','MIME type:');
+define('_FAILFETCHIMG', 'Could not get uploaded file %s');
+define('_FAILSAVEIMG', 'Failed storing image %s into the database');
+define('_NOCACHE', 'No Cache');
+define('_CLONE', 'Clone');
+
+//%%%%%	File Name class/xoopsform/formmatchoption.php 	%%%%%
+define("_STARTSWITH", "Starts with");
+define("_ENDSWITH", "Ends with");
+define("_MATCHES", "Matches");
+define("_CONTAINS", "Contains");
+
+//%%%%%%	File Name commentform.php 	%%%%%
+define("_REGISTER","Register");
+
+//%%%%%%	File Name xoopscodes.php 	%%%%%
+define("_SIZE","SIZE");  // font size
+define("_FONT","FONT");  // font family
+define("_COLOR","COLOR");  // font color
+define("_EXAMPLE","SAMPLE");
+define("_ENTERURL","Enter the URL of the link you want to add:");
+define("_ENTERWEBTITLE","Enter the web site title:");
+define("_ENTERIMGURL","Enter the URL of the image you want to add.");
+define("_ENTERIMGPOS","Now, enter the position of the image.");
+define("_IMGPOSRORL","'R' or 'r' for right, 'L' or 'l' for left, or leave it blank.");
+define("_ERRORIMGPOS","ERROR! Enter the position of the image.");
+define("_ENTEREMAIL","Enter the email address you want to add.");
+define("_ENTERCODE","Enter the codes that you want to add.");
+define("_ENTERQUOTE","Enter the text that you want to be quoted.");
+define("_ENTERTEXTBOX","Please input text into the textbox.");
+define("_ALLOWEDCHAR","Allowed max chars length: ");
+define("_CURRCHAR","Current chars length: ");
+define("_PLZCOMPLETE","Please complete the subject and message fields.");
+define("_MESSAGETOOLONG","Your message is too long.");
+
+//%%%%%		TIME FORMAT SETTINGS   %%%%%
+define('_SECOND', '1 second');
+define('_SECONDS', '%s seconds');
+define('_MINUTE', '1 minute');
+define('_MINUTES', '%s minutes');
+define('_HOUR', '1 hour');
+define('_HOURS', '%s hours');
+define('_DAY', '1 day');
+define('_DAYS', '%s days');
+define('_WEEK', '1 week');
+define('_MONTH', '1 month');
+
+define("_DATESTRING","Y/n/j G:i:s");
+define("_MEDIUMDATESTRING","Y/n/j G:i");
+define("_SHORTDATESTRING","Y/n/j");
+/*
+The following characters are recognized in the format string:
+a - "am" or "pm"
+A - "AM" or "PM"
+d - day of the month, 2 digits with leading zeros; i.e. "01" to "31"
+D - day of the week, textual, 3 letters; i.e. "Fri"
+F - month, textual, long; i.e. "January"
+h - hour, 12-hour format; i.e. "01" to "12"
+H - hour, 24-hour format; i.e. "00" to "23"
+g - hour, 12-hour format without leading zeros; i.e. "1" to "12"
+G - hour, 24-hour format without leading zeros; i.e. "0" to "23"
+i - minutes; i.e. "00" to "59"
+j - day of the month without leading zeros; i.e. "1" to "31"
+l (lowercase 'L') - day of the week, textual, long; i.e. "Friday"
+L - boolean for whether it is a leap year; i.e. "0" or "1"
+m - month; i.e. "01" to "12"
+n - month without leading zeros; i.e. "1" to "12"
+M - month, textual, 3 letters; i.e. "Jan"
+s - seconds; i.e. "00" to "59"
+S - English ordinal suffix, textual, 2 characters; i.e. "th", "nd"
+t - number of days in the given month; i.e. "28" to "31"
+T - Timezone setting of this machine; i.e. "MDT"
+U - seconds since the epoch
+w - day of the week, numeric, i.e. "0" (Sunday) to "6" (Saturday)
+Y - year, 4 digits; i.e. "1999"
+y - year, 2 digits; i.e. "99"
+z - day of the year; i.e. "0" to "365"
+Z - timezone offset in seconds (i.e. "-43200" to "43200")
+*/
+
+
+//%%%%%		LANGUAGE SPECIFIC SETTINGS   %%%%%
+define('_CHARSET', 'ISO-8859-1');
+define('_LANGCODE', 'en');
+
+// change 0 to 1 if this language is a multi-bytes language
+define("XOOPS_USE_MULTIBYTES", "0");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/language/english/global.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/language/english/mail.php
===================================================================
--- XoopsCore/trunk/htdocs/language/english/mail.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/language/english/mail.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,10 @@
+<?php
+define("_MAIL_MSGBODY", "Message body is not set.");
+define("_MAIL_FAILOPTPL", "Failed opening template file.");
+define("_MAIL_FNAMENG", "From Name is not set.");
+define("_MAIL_FEMAILNG", "From Email is not set.");
+define("_MAIL_SENDMAILNG", "Could not send mail to %s.");
+define("_MAIL_MAILGOOD", "Mail sent to %s.");
+define("_MAIL_SENDPMNG", "Could not send private message to %s.");
+define("_MAIL_PMGOOD", "Private message sent to %s.");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/language/english/mail.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/language/english/misc.php
===================================================================
--- XoopsCore/trunk/htdocs/language/english/misc.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/language/english/misc.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,24 @@
+<?php
+// $Id$
+define("_MSC_YOURNAMEC","Your Name: ");
+define("_MSC_YOUREMAILC","Your Email: ");
+define("_MSC_FRIENDNAMEC","Friend Name: ");
+define("_MSC_FRIENDEMAILC","Friend Email: ");
+define("_MSC_RECOMMENDSITE","Recommend this Site to a Friend");
+// %s is your site name
+define("_MSC_INTSITE","Interesting Site: %s");
+define("_MSC_REFERENCESENT","The reference to our site has been sent to your friend. Thanks!");
+define("_MSC_ENTERYNAME","Please enter your name");
+define("_MSC_ENTERFNAME","Please enter your friend's name");
+define("_MSC_ENTERFMAIL","Please enter your friend's email address");
+define("_MSC_NEEDINFO","You need to enter required info!");
+define("_MSC_INVALIDEMAIL1","The email address you provided is not a valid address.");
+define("_MSC_INVALIDEMAIL2","Please check the address and try again.");
+
+define("_MSC_AVAVATARS","Available Avatars");
+
+define("_MSC_SMILIES","Smilies");
+define("_MSC_CLICKASMILIE","Click a smilie to insert it into your message.");
+define("_MSC_CODE","Code");
+define("_MSC_EMOTION","Emotion");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/language/english/misc.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/language/english/notification.php
===================================================================
--- XoopsCore/trunk/htdocs/language/english/notification.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/language/english/notification.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,87 @@
+<?php
+// $Id$
+
+// RMV-NOTIFY
+
+// Text for various templates...
+
+define ('_NOT_NOTIFICATIONOPTIONS', 'Notification Options');
+define ('_NOT_UPDATENOW', 'Update Now');
+define ('_NOT_UPDATEOPTIONS', 'Update Notification Options');
+
+define ('_NOT_CLEAR', 'Clear');
+define ('_NOT_CHECKALL', 'Check All');
+define ('_NOT_MODULE', 'Module');
+define ('_NOT_CATEGORY', 'Category');
+define ('_NOT_ITEMID', 'ID');
+define ('_NOT_ITEMNAME', 'Name');
+define ('_NOT_EVENT', 'Event');
+define ('_NOT_EVENTS', 'Events');
+define ('_NOT_ACTIVENOTIFICATIONS', 'Active Notifications');
+define ('_NOT_NAMENOTAVAILABLE', 'Name Not Available');
+// RMV-NEW : TODO: remove NAMENOTAVAILBLE above
+define ('_NOT_ITEMNAMENOTAVAILABLE', 'Item Name Not Available');
+define ('_NOT_ITEMTYPENOTAVAILABLE', 'Item Type Not Available');
+define ('_NOT_ITEMURLNOTAVAILABLE', 'Item URL Not Available');
+define ('_NOT_DELETINGNOTIFICATIONS', 'Deleting Notifications');
+define ('_NOT_DELETESUCCESS', 'Notification(s) deleted successfully.');
+define ('_NOT_UPDATEOK', 'Notification options updated');
+define ('_NOT_NOTIFICATIONMETHODIS', 'Notification method is');
+define ('_NOT_EMAIL', 'email');
+define ('_NOT_PM', 'private message');
+define ('_NOT_DISABLE', 'disabled');
+define ('_NOT_CHANGE', 'Change');
+
+define ('_NOT_NOACCESS', 'You do not have permission to access this page.');
+
+// Text for module config options
+
+define ('_NOT_ENABLE', 'Enable');
+define ('_NOT_NOTIFICATION', 'Notification');
+
+define ('_NOT_CONFIG_ENABLED', 'Enable Notification');
+define ('_NOT_CONFIG_ENABLEDDSC', 'This module allows users to select to be notified when certain events occur.  Choose "yes" to enable this feature.');
+
+define ('_NOT_CONFIG_EVENTS', 'Enable Specific Events');
+define ('_NOT_CONFIG_EVENTSDSC', 'Select which notification events to which your users may subscribe.');
+
+define ('_NOT_CONFIG_ENABLE', 'Enable Notification');
+define ('_NOT_CONFIG_ENABLEDSC', 'This module allows users to be notified when certain events occur.  Select if users should be presented with notification options in a Block (Block-style), within the module (Inline-style), or both.  For block-style notification, the Notification Options block must be enabled for this module.');
+define ('_NOT_CONFIG_DISABLE', 'Disable Notification');
+define ('_NOT_CONFIG_ENABLEBLOCK', 'Enable only Block-style');
+define ('_NOT_CONFIG_ENABLEINLINE', 'Enable only Inline-style');
+define ('_NOT_CONFIG_ENABLEBOTH', 'Enable Notification (both styles)');
+
+// For notification about comment events
+
+define ('_NOT_COMMENT_NOTIFY', 'Comment Added');
+define ('_NOT_COMMENT_NOTIFYCAP', 'Notify me when a new comment is posted for this item.');
+define ('_NOT_COMMENT_NOTIFYDSC', 'Receive notification whenever a new comment is posted (or approved) for this item.');
+define ('_NOT_COMMENT_NOTIFYSBJ', '[{X_SITENAME}] {X_MODULE} auto-notify: Comment added to {X_ITEM_TYPE}');
+
+define ('_NOT_COMMENTSUBMIT_NOTIFY', 'Comment Submitted');
+define ('_NOT_COMMENTSUBMIT_NOTIFYCAP', 'Notify me when a new comment is submitted (awaiting approval) for this item.');
+define ('_NOT_COMMENTSUBMIT_NOTIFYDSC', 'Receive notification whenever a new comment is submitted (awaiting approval) for this item.');
+define ('_NOT_COMMENTSUBMIT_NOTIFYSBJ', '[{X_SITENAME}] {X_MODULE} auto-notify: Comment submitted for {X_ITEM_TYPE}');
+
+// For notification bookmark feature
+// (Not really notification, but easy to do with this module)
+
+define ('_NOT_BOOKMARK_NOTIFY', 'Bookmark');
+define ('_NOT_BOOKMARK_NOTIFYCAP', 'Bookmark this item (no notification).');
+define ('_NOT_BOOKMARK_NOTIFYDSC', 'Keep track of this item without receiving any event notifications.');
+
+// For user profile
+// FIXME: These should be reworded a little...
+
+define ('_NOT_NOTIFYMETHOD', 'Notification Method: When you monitor e.g. a forum, how would you like to receive notifications of updates?');
+define ('_NOT_METHOD_EMAIL', 'Email (use address in my profile)');
+define ('_NOT_METHOD_PM', 'Private Message');
+define ('_NOT_METHOD_DISABLE', 'Temporarily Disable');
+
+define ('_NOT_NOTIFYMODE', 'Default Notification Mode');
+define ('_NOT_MODE_SENDALWAYS', 'Notify me of all selected updates');
+define ('_NOT_MODE_SENDONCE', 'Notify me only once');
+define ('_NOT_MODE_SENDONCEPERLOGIN', 'Notify me once then disable until I log in again');
+
+?>


Property changes on: XoopsCore/trunk/htdocs/language/english/notification.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/language/english/pmsg.php
===================================================================
--- XoopsCore/trunk/htdocs/language/english/pmsg.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/language/english/pmsg.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,44 @@
+<?php
+// $Id$
+//%%%%%%	File Name readpmsg.php 	%%%%%
+define("_PM_DELETED","Your message(s) has been deleted");
+define("_PM_PRIVATEMESSAGE","Private Messages");
+define("_PM_INBOX","Inbox");
+define("_PM_FROM","From");
+define("_PM_YOUDONTHAVE","You don't have any private messages");
+define("_PM_FROMC","From: ");
+define("_PM_SENTC","Sent: "); // The date of message sent
+define("_PM_PROFILE","Profile");
+
+// %s is a username
+define("_PM_PREVIOUS","Previous Message");
+define("_PM_NEXT","Next Message");
+
+//%%%%%%	File Name pmlite.php 	%%%%%
+define("_PM_SORRY","Sorry! You are not a registered user.");
+define("_PM_REGISTERNOW","Register Now!");
+define("_PM_GOBACK","Go Back");
+define("_PM_USERNOEXIST","The selected user doesn't exist in the database.");
+define("_PM_PLZTRYAGAIN","Please check the name and try again.");
+define("_PM_MESSAGEPOSTED","Your message has been posted");
+define("_PM_CLICKHERE","You can click here to view your private messages");
+define("_PM_ORCLOSEWINDOW","Or click here to close this window.");
+define("_PM_USERWROTE","%s wrote:");
+define("_PM_TO","To: ");
+define("_PM_SUBJECTC","Subject: ");
+define("_PM_MESSAGEC","Message: ");
+define("_PM_CLEAR","Clear");
+define("_PM_CANCELSEND","Cancel Send");
+define("_PM_SUBMIT","Submit");
+
+//%%%%%%	File Name viewpmsg.php 	%%%%%
+define("_PM_SUBJECT","Subject");
+define("_PM_DATE","Date");
+define("_PM_NOTREAD","Not Read");
+define("_PM_SEND","Send");
+define("_PM_DELETE","Delete");
+define("_PM_REPLY", "Reply");
+define("_PM_PLZREG","Please register first to send private messages!");
+
+define("_PM_ONLINE", "Online");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/language/english/pmsg.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/language/english/search.php
===================================================================
--- XoopsCore/trunk/htdocs/language/english/search.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/language/english/search.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,23 @@
+<?php
+// $Id$
+//%%%%%%	File Name search.php 	%%%%%
+define("_SR_SEARCH","Search");
+define("_SR_PLZENTER","Please enter all required data!");
+define("_SR_SEARCHRESULTS","Search Results");
+define("_SR_NOMATCH","No Match Found for your Query");
+define("_SR_FOUND","Found <b>%s</b> match(es)");
+define("_SR_SHOWING","(Showing %d - %d)");
+define("_SR_ANY","Any (OR)");
+define("_SR_ALL","All (AND)");
+define("_SR_EXACT","Exact Match");
+define("_SR_SHOWALLR","Show all results");
+define("_SR_NEXT","Next >>");
+define("_SR_PREVIOUS","<< Previous");
+define("_SR_KEYWORDS","Keyword(s)");
+define("_SR_TYPE","Type");
+define("_SR_SEARCHIN","Search in");
+define('_SR_KEYTOOSHORT', 'Keywords must be at least <b>%s</b> characters long');
+define('_SR_KEYIGNORE', 'Keywords shorter than <b>%s</b> characters will be ignored');
+define('_SR_SEARCHRULE', 'Seach Rule');
+define('_SR_IGNOREDWORDS', 'The following words are shorter than allowed minmum length (%u chars) and were not included in your search:');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/language/english/search.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/language/english/timezone.php
===================================================================
--- XoopsCore/trunk/htdocs/language/english/timezone.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/language/english/timezone.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,34 @@
+<?php
+// $Id$
+//%%%%%		Time Zone	%%%%
+define("_TZ_GMTM12", "(GMT-12:00) Eniwetok, Kwajalein");
+define("_TZ_GMTM11", "(GMT-11:00) Midway Island, Samoa");
+define("_TZ_GMTM10", "(GMT-10:00) Hawaii");
+define("_TZ_GMTM9", "(GMT-9:00) Alaska");
+define("_TZ_GMTM8", "(GMT-8:00) Pacific Time (US &amp; Canada)");
+define("_TZ_GMTM7", "(GMT-7:00) Mountain Time (US &amp; Canada)");
+define("_TZ_GMTM6", "(GMT-6:00) Central Time (US &amp; Canada), Mexico City");
+define("_TZ_GMTM5", "(GMT-5:00) Eastern Time (US &amp; Canada), Bogota, Lima, Quito");
+define("_TZ_GMTM4", "(GMT-4:00) Atlantic Time (Canada), Caracas, La Paz");
+define("_TZ_GMTM35", "(GMT-3:30) Newfoundland");
+define("_TZ_GMTM3", "(GMT-3:00) Brasilia, Buenos Aires, Georgetown");
+define("_TZ_GMTM2", "(GMT-2:00) Mid-Atlantic");
+define("_TZ_GMTM1", "(GMT-1:00) Azores, Cape Verde Islands");
+define("_TZ_GMT0", "(GMT) Greenwich Mean Time, London, Dublin, Lisbon, Casablanca, Monrovia");
+define("_TZ_GMTP1", "(GMT+1:00) Amsterdam, Berlin, Rome, Copenhagen, Brussels, Madrid, Paris");
+define("_TZ_GMTP2", "(GMT+2:00) Athens, Istanbul, Minsk, Helsinki, Jerusalem, South Africa");
+define("_TZ_GMTP3", "(GMT+3:00) Baghdad, Kuwait, Riyadh, Moscow, St. Petersburg");
+define("_TZ_GMTP35", "(GMT+3:30) Tehran");
+define("_TZ_GMTP4", "(GMT+4:00) Abu Dhabi, Muscat, Baku, Tbilisi");
+define("_TZ_GMTP45", "(GMT+4:30) Kabul");
+define("_TZ_GMTP5", "(GMT+5:00) Ekaterinburg, Islamabad, Karachi, Tashkent");
+define("_TZ_GMTP55", "(GMT+5:30) Bombay, Calcutta, Madras, New Delhi");
+define("_TZ_GMTP6", "(GMT+6:00) Almaty, Dhaka, Colombo");
+define("_TZ_GMTP7", "(GMT+7:00) Bangkok, Hanoi, Jakarta");
+define("_TZ_GMTP8", "(GMT+8:00) Beijing, Perth, Singapore, Hong Kong, Urumqi, Taipei");
+define("_TZ_GMTP9", "(GMT+9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk");
+define("_TZ_GMTP95", "(GMT+9:30) Adelaide, Darwin");
+define("_TZ_GMTP10", "(GMT+10:00) Brisbane, Canberra, Melbourne, Sydney, Guam,Vlasdiostok");
+define("_TZ_GMTP11", "(GMT+11:00) Magadan, Solomon Islands, New Caledonia");
+define("_TZ_GMTP12", "(GMT+12:00) Auckland, Wellington, Fiji, Kamchatka, Marshall Island");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/language/english/timezone.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/language/english/user.php
===================================================================
--- XoopsCore/trunk/htdocs/language/english/user.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/language/english/user.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,138 @@
+<?php
+// $Id$
+//%%%%%%		File Name user.php 		%%%%%
+define('_US_NOTREGISTERED','Not registered?  Click <a href="register.php">here</a>.');
+define('_US_LOSTPASSWORD','Lost your Password?');
+define('_US_NOPROBLEM','No problem. Simply enter the e-mail address we have on file for your account.');
+define('_US_YOUREMAIL','Your Email: ');
+define('_US_SENDPASSWORD','Send Password');
+define('_US_LOGGEDOUT','You are now logged out');
+define('_US_THANKYOUFORVISIT','Thank you for your visit to our site!');
+define('_US_INCORRECTLOGIN','Incorrect Login!');
+define('_US_LOGGINGU','Thank you for logging in, %s.');
+
+// 2001-11-17 ADD
+define('_US_NOACTTPADM','The selected user has been deactivated or has not been activated yet.<br />Please contact the administrator for details.');
+define('_US_ACTKEYNOT','Activation key not correct!');
+define('_US_ACONTACT','Selected account is already activated!');
+define('_US_ACTLOGIN','Your account has been activated. Please login with the registered password.');
+define('_US_NOPERMISS','Sorry, you dont have the permission to perform this action!');
+define('_US_SURETODEL','Are you sure you want to delete your account?');
+define('_US_REMOVEINFO','This will remove all your info from our database.');
+define('_US_BEENDELED','Your account has been deleted.');
+//
+
+//%%%%%%		File Name register.php 		%%%%%
+define('_US_USERREG','User Registration');
+define('_US_NICKNAME','Username');
+define('_US_EMAIL','Email');
+define('_US_ALLOWVIEWEMAIL','Allow other users to view my email address');
+define('_US_WEBSITE','Website');
+define('_US_TIMEZONE','Time Zone');
+define('_US_AVATAR','Avatar');
+define('_US_VERIFYPASS','Verify Password');
+define('_US_SUBMIT','Submit');
+define('_US_USERNAME','Username');
+define('_US_FINISH','Finish');
+define('_US_REGISTERNG','Could not register new user.');
+define('_US_MAILOK','Receive occasional email notices <br />from administrators and moderators?');
+define('_US_DISCLAIMER','Disclaimer');
+define('_US_IAGREE','I agree to the above');
+define('_US_UNEEDAGREE', 'Sorry, you have to agree to our disclaimer to get registered.');
+define('_US_NOREGISTER','Sorry, we are currently closed for new user registrations');
+
+
+// %s is username. This is a subject for email
+define('_US_USERKEYFOR','User activation key for %s');
+
+define('_US_YOURREGISTERED','You are now registered. An email containing an user activation key has been sent to the email account you provided. Please follow the instructions in the mail to activate your account. ');
+define('_US_YOURREGMAILNG','You are now registered. However, we were unable to send the activation mail to your email account due to an internal error that had occurred on our server. We are sorry for the inconvenience, please send the webmaster an email notifying him/her of the situation.');
+define('_US_YOURREGISTERED2','You are now registered.  Please wait for your account to be activated by the adminstrators.  You will receive an email once you are activated.  This could take a while so please be patient.');
+
+// %s is your site name
+define('_US_NEWUSERREGAT','New user registration at %s');
+// %s is a username
+define('_US_HASJUSTREG','%s has just registered!');
+
+define('_US_INVALIDMAIL','ERROR: Invalid email');
+define('_US_EMAILNOSPACES','ERROR: Email addresses do not contain spaces.');
+define('_US_INVALIDNICKNAME','ERROR: Invalid Username');
+define('_US_NICKNAMETOOLONG','Username is too long. It must be less than %s characters.');
+define('_US_NICKNAMETOOSHORT','Username is too short. It must be more than %s characters.');
+define('_US_NAMERESERVED','ERROR: Name is reserved.');
+define('_US_NICKNAMENOSPACES','There cannot be any spaces in the Username.');
+define('_US_NICKNAMETAKEN','ERROR: Username taken.');
+define('_US_EMAILTAKEN','ERROR: Email address already registered.');
+define('_US_ENTERPWD','ERROR: You must provide a password.');
+define('_US_SORRYNOTFOUND','Sorry, no corresponding user info was found.');
+
+
+
+
+// %s is your site name
+define('_US_NEWPWDREQ','New Password Request at %s');
+define('_US_YOURACCOUNT', 'Your account at %s');
+
+define('_US_MAILPWDNG','mail_password: could not update user entry. Contact the Administrator');
+
+// %s is a username
+define('_US_PWDMAILED','Password for %s mailed.');
+define('_US_CONFMAIL','Confirmation Mail for %s mailed.');
+define('_US_ACTVMAILNG', 'Failed sending notification mail to %s');
+define('_US_ACTVMAILOK', 'Notification mail to %s sent.');
+
+//%%%%%%		File Name userinfo.php 		%%%%%
+define('_US_SELECTNG','No User Selected! Please go back and try again.');
+define('_US_PM','PM');
+define('_US_ICQ','ICQ');
+define('_US_AIM','AIM');
+define('_US_YIM','YIM');
+define('_US_MSNM','MSNM');
+define('_US_LOCATION','Location');
+define('_US_OCCUPATION','Occupation');
+define('_US_INTEREST','Interest');
+define('_US_SIGNATURE','Signature');
+define('_US_EXTRAINFO','Extra Info');
+define('_US_EDITPROFILE','Edit Profile');
+define('_US_LOGOUT','Logout');
+define('_US_INBOX','Inbox');
+define('_US_MEMBERSINCE','Member Since');
+define('_US_RANK','Rank');
+define('_US_POSTS','Comments/Posts');
+define('_US_LASTLOGIN','Last Login');
+define('_US_ALLABOUT','All about %s');
+define('_US_STATISTICS','Statistics');
+define('_US_MYINFO','My Info');
+define('_US_BASICINFO','Basic information');
+define('_US_MOREABOUT','More About Me');
+define('_US_SHOWALL','Show All');
+
+//%%%%%%		File Name edituser.php 		%%%%%
+define('_US_PROFILE','Profile');
+define('_US_REALNAME','Real Name');
+define('_US_SHOWSIG','Always attach my signature');
+define('_US_CDISPLAYMODE','Comments Display Mode');
+define('_US_CSORTORDER','Comments Sort Order');
+define('_US_PASSWORD','Password');
+define('_US_TYPEPASSTWICE','(type a new password twice to change it)');
+define('_US_SAVECHANGES','Save Changes');
+define('_US_NOEDITRIGHT',"Sorry, you don't have the right to edit this user's info.");
+define('_US_PASSNOTSAME','Both passwords are different. They must be identical.');
+define('_US_PWDTOOSHORT','Sorry, your password must be at least <b>%s</b> characters long.');
+define('_US_PROFUPDATED','Your Profile Updated!');
+define('_US_USECOOKIE','Store my user name in a cookie for 1 year');
+define('_US_NO','No');
+define('_US_DELACCOUNT','Delete Account');
+define('_US_MYAVATAR', 'My Avatar');
+define('_US_UPLOADMYAVATAR', 'Upload Avatar');
+define('_US_MAXPIXEL','Max Pixels');
+define('_US_MAXIMGSZ','Max Image Size (Bytes)');
+define('_US_SELFILE','Select file');
+define('_US_OLDDELETED','Your old avatar will be deleted!');
+define('_US_CHOOSEAVT', 'Choose avatar from the available list');
+
+define('_US_PRESSLOGIN', 'Press the button below to login');
+
+define('_US_ADMINNO', 'User in the webmasters group cannot be removed');
+define('_US_GROUPS', 'User\'s Groups');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/language/english/user.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/lostpass.php
===================================================================
--- XoopsCore/trunk/htdocs/lostpass.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/lostpass.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,100 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$xoopsOption['pagetype'] = "user";
+include "mainfile.php";
+$email = isset($_GET['email']) ? trim($_GET['email']) : '';
+$email = isset($_POST['email']) ? trim($_POST['email']) : $email;
+if ($email == '') {
+    redirect_header("user.php",2,_US_SORRYNOTFOUND);
+    exit();
+}
+
+$myts =& MyTextSanitizer::getInstance();
+$member_handler =& xoops_gethandler('member');
+$getuser =& $member_handler->getUsers(new Criteria('email', $myts->addSlashes($email)));
+
+if (empty($getuser)) {
+    $msg = _US_SORRYNOTFOUND;
+    redirect_header("user.php",2,$msg);
+    exit();
+} else {
+    $code = isset($_GET['code']) ? trim($_GET['code']) : '';
+    $areyou = substr($getuser[0]->getVar("pass"), 0, 5);
+    if ($code != '' && $areyou == $code) {
+        $newpass = xoops_makepass();
+        $xoopsMailer =& getMailer();
+        $xoopsMailer->useMail();
+        $xoopsMailer->setTemplate("lostpass2.tpl");
+        $xoopsMailer->assign("SITENAME", $xoopsConfig['sitename']);
+        $xoopsMailer->assign("ADMINMAIL", $xoopsConfig['adminmail']);
+        $xoopsMailer->assign("SITEURL", XOOPS_URL."/");
+        $xoopsMailer->assign("IP", $_SERVER['REMOTE_ADDR']);
+        $xoopsMailer->assign("NEWPWD", $newpass);
+        $xoopsMailer->setToUsers($getuser[0]);
+        $xoopsMailer->setFromEmail($xoopsConfig['adminmail']);
+        $xoopsMailer->setFromName($xoopsConfig['sitename']);
+        $xoopsMailer->setSubject(sprintf(_US_NEWPWDREQ,XOOPS_URL));
+        if ( !$xoopsMailer->send() ) {
+            echo $xoopsMailer->getErrors();
+        }
+
+        // Next step: add the new password to the database
+        $sql = sprintf("UPDATE %s SET pass = '%s' WHERE uid = %u", $xoopsDB->prefix("users"), md5($newpass), $getuser[0]->getVar('uid'));
+        if ( !$xoopsDB->queryF($sql) ) {
+            include "header.php";
+            echo _US_MAILPWDNG;
+            include "footer.php";
+            exit();
+        }
+        redirect_header("user.php", 3, sprintf(_US_PWDMAILED,$getuser[0]->getVar("uname")), false);
+        exit();
+    // If no Code, send it
+    } else {
+        $xoopsMailer =& getMailer();
+        $xoopsMailer->useMail();
+        $xoopsMailer->setTemplate("lostpass1.tpl");
+        $xoopsMailer->assign("SITENAME", $xoopsConfig['sitename']);
+        $xoopsMailer->assign("ADMINMAIL", $xoopsConfig['adminmail']);
+        $xoopsMailer->assign("SITEURL", XOOPS_URL."/");
+        $xoopsMailer->assign("IP", $_SERVER['REMOTE_ADDR']);
+        $xoopsMailer->assign("NEWPWD_LINK", XOOPS_URL."/lostpass.php?email=".$email."&code=".$areyou);
+        $xoopsMailer->setToUsers($getuser[0]);
+        $xoopsMailer->setFromEmail($xoopsConfig['adminmail']);
+        $xoopsMailer->setFromName($xoopsConfig['sitename']);
+        $xoopsMailer->setSubject(sprintf(_US_NEWPWDREQ,$xoopsConfig['sitename']));
+        include "header.php";
+        if ( !$xoopsMailer->send() ) {
+            echo $xoopsMailer->getErrors();
+        }
+        echo "<h4>";
+        printf(_US_CONFMAIL,$getuser[0]->getVar("uname"));
+        echo "</h4>";
+        include "footer.php";
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/lostpass.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/mainfile.dist.php
===================================================================
--- XoopsCore/trunk/htdocs/mainfile.dist.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/mainfile.dist.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,98 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+if ( !defined("XOOPS_MAINFILE_INCLUDED") ) {
+	define("XOOPS_MAINFILE_INCLUDED",1);
+
+	// XOOPS Physical Path
+	// Physical path to your main XOOPS directory WITHOUT trailing slash
+	// Example: define('XOOPS_ROOT_PATH', '/path/to/xoops/directory');
+	define('XOOPS_ROOT_PATH', '');
+
+	// XOOPS Virtual Path (URL)
+	// Virtual path to your main XOOPS directory WITHOUT trailing slash
+	// Example: define('XOOPS_URL', 'http://url_to_xoops_directory');
+	define('XOOPS_URL', 'http://');
+
+	define('XOOPS_CHECK_PATH', 0);
+	// Protect against external scripts execution if safe mode is not enabled
+	if ( XOOPS_CHECK_PATH && !@ini_get('safe_mode') ) {
+		if ( function_exists('debug_backtrace') ) {
+			$xoopsScriptPath = debug_backtrace();
+			if ( !count($xoopsScriptPath) ) {
+			 	die("XOOPS path check: this file cannot be requested directly");
+			}
+			$xoopsScriptPath = $xoopsScriptPath[0]['file'];
+		} else {
+			$xoopsScriptPath = isset($_SERVER['PATH_TRANSLATED']) ? $_SERVER['PATH_TRANSLATED'] :  $_SERVER['SCRIPT_FILENAME'];
+		}
+		if ( DIRECTORY_SEPARATOR != '/' ) {
+			// IIS6 may double the \ chars
+			$xoopsScriptPath = str_replace( strpos( $xoopsScriptPath, '\\\\', 2 ) ? '\\\\' : DIRECTORY_SEPARATOR, '/', $xoopsScriptPath);
+		}
+		if ( strcasecmp( substr($xoopsScriptPath, 0, strlen(XOOPS_ROOT_PATH)), str_replace( DIRECTORY_SEPARATOR, '/', XOOPS_ROOT_PATH)) ) {
+		 	exit("XOOPS path check: Script is not inside XOOPS_ROOT_PATH and cannot run.");
+		}
+	}
+
+	// Database
+	// Choose the database to be used
+	define('XOOPS_DB_TYPE', 'mysql');
+
+	// Table Prefix
+	// This prefix will be added to all new tables created to avoid name conflict in the database. If you are unsure, just use the default 'xoops'.
+	define('XOOPS_DB_PREFIX', 'xoops');
+
+	// Database Hostname
+	// Hostname of the database server. If you are unsure, 'localhost' works in most cases.
+	define('XOOPS_DB_HOST', 'localhost');
+
+	// Database Username
+	// Your database user account on the host
+	define('XOOPS_DB_USER', '');
+
+	// Database Password
+	// Password for your database user account
+	define('XOOPS_DB_PASS', '');
+
+	// Database Name
+	// The name of database on the host. The installer will attempt to create the database if not exist
+	define('XOOPS_DB_NAME', '');
+
+	// Use persistent connection? (Yes=1 No=0)
+	// Default is 'Yes'. Choose 'Yes' if you are unsure.
+	define('XOOPS_DB_PCONNECT', 0);
+
+	define("XOOPS_GROUP_ADMIN", "1");
+	define("XOOPS_GROUP_USERS", "2");
+	define("XOOPS_GROUP_ANONYMOUS", "3");
+
+	if (!isset($xoopsOption['nocommon']) && XOOPS_ROOT_PATH != '') {
+		include XOOPS_ROOT_PATH."/include/common.php";
+	}
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/mainfile.dist.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/mainfile.php
===================================================================
--- XoopsCore/trunk/htdocs/mainfile.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/mainfile.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,35 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+/**
+ * Xoops is not installed, redirect to the installer 
+ **/
+
+// XOOPS is not installed yet.
+if(! defined('XOOPS_INSTALL')){
+    header('Location: install/index.php');
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/mainfile.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/misc.php
===================================================================
--- XoopsCore/trunk/htdocs/misc.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/misc.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,262 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+include "mainfile.php";
+include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/misc.php';
+$action = isset($_GET['action']) ? trim($_GET['action']) : '';
+$action = isset($_POST['action']) ? trim($_POST['action']) : $action;
+$type = isset($_GET['type']) ? trim($_GET['type']) : '';
+$type = isset($_POST['type']) ? trim($_POST['type']) : $type;
+
+if ( $action == "showpopups" ) {
+    xoops_header(false);
+    // show javascript close button?
+    $closebutton = 1;
+    switch ( $type ) {
+    case "smilies":
+        $target = isset($_GET['target']) ? trim($_GET['target']) : '';
+        if ($target == '' || !preg_match('/^[0-9a-z_]*$/i', $target)) {
+        } else {
+            echo "<script type=\"text/javascript\"><!--//
+            function doSmilie(addSmilie) {
+            var currentMessage = window.opener.xoopsGetElementById(\"".$target."\").value;
+            window.opener.xoopsGetElementById(\"".$target."\").value=currentMessage+addSmilie;
+            return;
+            }
+            //-->
+            </script>
+            ";
+            echo '</head><body>
+            <table width="100%" class="outer">
+            <tr><th colspan="3">'._MSC_SMILIES.'</th></tr>
+            <tr class="head"><td>'._MSC_CODE.'</td><td>'._MSC_EMOTION.'</td><td>'._IMAGE.'</td></tr>';
+            if ($getsmiles = $xoopsDB->query("SELECT * FROM ".$xoopsDB->prefix("smiles"))) {
+                $rcolor = 'even';
+                while ( $smile = $xoopsDB->fetchArray($getsmiles) ) {
+                    echo "<tr class='$rcolor'><td>".$smile['code']."</td><td>".$smile['emotion']."</td><td><img onmouseover='style.cursor=\"hand\"' onclick='doSmilie(\" ".$smile['code']." \");' src='".XOOPS_UPLOAD_URL."/".$smile['smile_url']."' alt='' /></td></tr>";
+                    $rcolor = ($rcolor == 'even') ? 'odd' : 'even';
+                }
+            } else {
+                echo "Could not retrieve data from the database.";
+            }
+            echo '</table>'._MSC_CLICKASMILIE;
+        }
+        break;
+    case "avatars":
+        ?>
+        <script language='javascript'>
+        <!--//
+        function myimage_onclick(counter){
+            window.opener.xoopsGetElementById("user_avatar").options[counter].selected = true;
+            showAvatar();
+            window.opener.xoopsGetElementById("user_avatar").focus();
+            window.close();
+        }
+        function showAvatar() {
+            window.opener.xoopsGetElementById("avatar").src='<?php echo XOOPS_UPLOAD_URL;?>/' + window.opener.xoopsGetElementById("user_avatar").options[window.opener.xoopsGetElementById("user_avatar").selectedIndex].value;
+        }
+        //-->
+        </script>
+        </head><body>
+        <h4><?php echo _MSC_AVAVATARS;?></h4>
+        <form name='avatars' action='<?php echo $_SERVER['REQUEST_URI'];?>'>
+        <table width='100%'><tr>
+        <?php
+        $avatar_handler =& xoops_gethandler('avatar');
+        $avatarslist =& $avatar_handler->getList('S');
+        $cntavs = 0;
+        $counter = isset($_GET['start']) ? intval($_GET['start']) : 0;
+            foreach ($avatarslist as $file => $name) {
+            echo '<td><img src="uploads/'.$file.'" alt="'.$name.'" style="padding:10px; vertical-align:top;"  /><br />'.$name.'<br /><input name="myimage" type="button" value="'._SELECT.'" onclick="myimage_onclick('.$counter.')" /></td>';
+            $counter++;
+            $cntavs++;
+            if ($cntavs > 8) {
+                echo '</tr><tr>';
+                $cntavs=0;
+            }
+        }
+        echo '</tr></table></form></div>';
+        break;
+    case "friend":
+        if ( !$GLOBALS['xoopsSecurity']->check() || !isset($_POST['op']) || $_POST['op'] == "sendform") {
+            if ( $xoopsUser ) {
+                $yname = $xoopsUser->getVar("uname", 'e');
+                $ymail = $xoopsUser->getVar("email", 'e');
+                $fname = "";
+                $fmail = "";
+            } else {
+                $yname = "";
+                $ymail = "";
+                $fname = "";
+                $fmail = "";
+            }
+            printCheckForm();
+            echo '</head><body>';
+            echo "<div class='errorMsg'>".implode('<br />', $GLOBALS['xoopsSecurity']->getErrors())."</div>";
+            echo '
+            <form action="'.XOOPS_URL.'/misc.php" method="post" onsubmit="return checkForm();"><table  width="100%" class="outer" cellspacing="1"><tr><th colspan="2">'._MSC_RECOMMENDSITE.'</th></tr>';
+            echo "<tr><td class='head'>
+                <input type='hidden' name='op' value='sendsite' />
+                <input type='hidden' name='action' value='showpopups' />
+                <input type='hidden' name='type' value='friend' />\n";
+            echo _MSC_YOURNAMEC."</td><td class='even'><input type='text' name='yname' value='$yname' id='yname' /></td></tr>
+                <tr><td class='head'>"._MSC_YOUREMAILC."</td><td class='odd'><input type='text' name='ymail' value='".$ymail."' id='ymail' /></td></tr>
+                <tr><td class='head'>"._MSC_FRIENDNAMEC."</td><td class='even'><input type='text' name='fname' value='$fname' id='fname' /></td></tr>
+                <tr><td class='head'>"._MSC_FRIENDEMAILC."</td><td class='odd'><input type='text' name='fmail' value='$fmail' id='fmail' /></td></tr>
+                <tr><td class='head'>&nbsp;</td><td class='even'><input type='submit' value='"._SEND."' />&nbsp;<input value='"._CLOSE."' type='button' onclick='javascript:window.close();' />".$GLOBALS['xoopsSecurity']->getTokenHTML()."</td></tr>
+                </table></form>\n";
+            $closebutton = 0;
+        } elseif ($_POST['op'] == "sendsite") {
+            $myts =& MyTextsanitizer::getInstance();
+            if ( $xoopsUser ) {
+                $ymail = $xoopsUser->getVar("email");
+            } else {
+                $ymail = isset($_POST['ymail']) ? $myts->stripSlashesGPC(trim($_POST['ymail'])) : '';
+            }
+            if ( !isset($_POST['yname']) || trim($_POST['yname']) == "" || $ymail == '' || !isset($_POST['fname']) || trim($_POST['fname']) == ""  || !isset($_POST['fmail']) || trim($_POST['fmail']) == '' ) {
+                redirect_header(XOOPS_URL."/misc.php?action=showpopups&amp;type=friend&amp;op=sendform",2,_MSC_NEEDINFO);
+                exit();
+            }
+            $yname = $myts->stripSlashesGPC(trim($_POST['yname']));
+            $fname = $myts->stripSlashesGPC(trim($_POST['fname']));
+            $fmail = $myts->stripSlashesGPC(trim($_POST['fmail']));
+            if (!checkEmail($fmail) || !checkEmail($ymail)) {
+                $errormessage = _MSC_INVALIDEMAIL1."<br />"._MSC_INVALIDEMAIL2."";
+                redirect_header(XOOPS_URL."/misc.php?action=showpopups&amp;type=friend&amp;op=sendform",2,$errormessage);
+                exit();
+            }
+            $xoopsMailer =& getMailer();
+            $xoopsMailer->setTemplate("tellfriend.tpl");
+            $xoopsMailer->assign("SITENAME", $xoopsConfig['sitename']);
+            $xoopsMailer->assign("ADMINMAIL", $xoopsConfig['adminmail']);
+            $xoopsMailer->assign("SITEURL", XOOPS_URL."/");
+            $xoopsMailer->assign("YOUR_NAME", $yname);
+            $xoopsMailer->assign("FRIEND_NAME", $fname);
+            $xoopsMailer->setToEmails($fmail);
+            $xoopsMailer->setFromEmail($ymail);
+            $xoopsMailer->setFromName($yname);
+            $xoopsMailer->setSubject(sprintf(_MSC_INTSITE,$xoopsConfig['sitename']));
+            //OpenTable();
+            if ( !$xoopsMailer->send() ) {
+                echo $xoopsMailer->getErrors();
+            } else {
+                echo "<div><h4>"._MSC_REFERENCESENT."</h4></div>";
+            }
+            //CloseTable();
+        }
+        break;
+    case 'online':
+        $isadmin = $xoopsUserIsAdmin;
+        echo '<table  width="100%" cellspacing="1" class="outer"><tr><th colspan="3">'._WHOSONLINE.'</th></tr>';
+        $start = isset($_GET['start']) ? intval($_GET['start']) : 0;
+        $online_handler =& xoops_gethandler('online');
+        $online_total =& $online_handler->getCount();
+        $limit = ($online_total > 20) ? 20 : $online_total;
+        $criteria = new CriteriaCompo();
+        $criteria->setLimit($limit);
+        $criteria->setStart($start);
+        $onlines =& $online_handler->getAll($criteria);
+        $count = count($onlines);
+        $module_handler =& xoops_gethandler('module');
+        $modules =& $module_handler->getList(new Criteria('isactive', 1));
+        for ($i = 0; $i < $count; $i++) {
+            if ($onlines[$i]['online_uid'] == 0) {
+                $onlineUsers[$i]['user'] = '';
+            } else {
+                $onlineUsers[$i]['user'] =& new XoopsUser($onlines[$i]['online_uid']);
+            }
+            $onlineUsers[$i]['ip'] = $onlines[$i]['online_ip'];
+            $onlineUsers[$i]['updated'] = $onlines[$i]['online_updated'];
+            $onlineUsers[$i]['module'] = ($onlines[$i]['online_module'] > 0) ? $modules[$onlines[$i]['online_module']] : '';
+        }
+        $class = 'even';
+        for ($i = 0; $i < $count; $i++) {
+            $class = ($class == 'odd') ? 'even' : 'odd';
+            echo '<tr valign="middle" align="center" class="'.$class.'">';
+            if (is_object($onlineUsers[$i]['user'])) {
+                $avatar = $onlineUsers[$i]['user']->getVar('user_avatar') ? '<img src="'.XOOPS_UPLOAD_URL.'/'.$onlineUsers[$i]['user']->getVar('user_avatar').'" alt="" />' : '&nbsp;';
+                echo '<td>'.$avatar."</td><td><a href=\"javascript:window.opener.location='".XOOPS_URL."/userinfo.php?uid=".$onlineUsers[$i]['user']->getVar('uid')."';window.close();\">".$onlineUsers[$i]['user']->getVar('uname')."</a>";
+            } else {
+                echo '<td>&nbsp;</td><td>'.$xoopsConfig['anonymous'];
+            }
+            if ($isadmin == 1) {
+                echo '<br />('.$onlineUsers[$i]['ip'].')';
+            }
+            echo '</td><td>'.$onlineUsers[$i]['module'].'</td></tr>';
+        }
+        echo '</table><br />';
+        if ($online_total > 20) {
+            include_once XOOPS_ROOT_PATH.'/class/pagenav.php';
+            $nav = new XoopsPageNav($online_total, 20, $start, 'start', 'action=showpopups&amp;type=online');
+            echo '<div style="text-align: right;">'.$nav->renderNav().'</div>';
+        }
+        break;
+    case 'ssllogin':
+        if ($xoopsConfig['use_ssl'] && isset($_POST[$xoopsConfig['sslpost_name']]) && is_object($xoopsUser)) {
+            include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/user.php';
+            echo sprintf(_US_LOGGINGU, $xoopsUser->getVar('uname'));
+            echo '<div style="text-align:center;"><input class="formButton" value="'._CLOSE.'" type="button" onclick="window.opener.location.reload();window.close();" /></div>';
+            $closebutton = false;
+        }
+        break;
+    default:
+        break;
+    }
+    if ($closebutton) {
+        echo '<div style="text-align:center;"><input class="formButton" value="'._CLOSE.'" type="button" onclick="javascript:window.close();" /></div>';
+    }
+    xoops_footer();
+}
+
+function printCheckForm()
+{
+    ?>
+    <script language='javascript'>
+        <!--//
+        function checkForm()
+        {
+            if ( xoopsGetElementById("yname").value == "" ){
+                alert( "<?php echo _MSC_ENTERYNAME;?>" );
+                xoopsGetElementById("yname").focus();
+                return false;
+            } else if ( xoopsGetElementById("fname").value == "" ){
+                alert( "<?php echo _MSC_ENTERFNAME;?>" );
+                xoopsGetElementById("fname").focus();
+                return false;
+            } else if ( xoopsGetElementById("fmail").value ==""){
+                alert( "<?php echo _MSC_ENTERFMAIL;?>" );
+                xoopsGetElementById("fmail").focus();
+                return false;
+            } else {
+                return true;
+            }
+        }
+        //-->
+    </script>
+    <?php
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/misc.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/avatars/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/avatars/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/avatars/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,232 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+} else {
+    $op = 'list';
+    if (isset($_POST)) {
+        foreach ( $_POST as $k => $v ) {
+            ${$k} = $v;
+        }
+    }
+    if (isset($_GET['op'])) {
+        $op = trim($_GET['op']);
+    }
+    if ($op == 'list') {
+        xoops_cp_header();
+        echo '<h4 style="text-align:left">'._MD_AVATARMAN.'</h4>';
+        $avt_handler =& xoops_gethandler('avatar');
+        $savatar_count = $avt_handler->getCount(new Criteria('avatar_type', 'S'));
+        $cavatar_count = $avt_handler->getCount(new Criteria('avatar_type', 'C'));
+        echo '<ul><li>'._MD_SYSAVATARS.' ('.sprintf(_NUMIMAGES, '<b>'.$savatar_count.'</b>').') [<a href="admin.php?fct=avatars&amp;op=listavt&amp;type=S">'._LIST.'</a>]</li><li>'._MD_CSTAVATARS.' ('.sprintf(_NUMIMAGES, '<b>'.$cavatar_count.'</b>').') [<a href="admin.php?fct=avatars&amp;op=listavt&amp;type=C">'._LIST.'</a>]</li></ul>';
+        include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+        $form = new XoopsThemeForm(_MD_ADDAVT, 'avatar_form', 'admin.php', "post", true);
+        $form->setExtra('enctype="multipart/form-data"');
+        $form->addElement(new XoopsFormText(_IMAGENAME, 'avatar_name', 50, 255), true);
+        $form->addElement(new XoopsFormFile(_IMAGEFILE, 'avatar_file', 500000));
+        $form->addElement(new XoopsFormText(_IMGWEIGHT, 'avatar_weight', 3, 4, 0));
+        $form->addElement(new XoopsFormRadioYN(_IMGDISPLAY, 'avatar_display', 1, _YES, _NO));
+        $form->addElement(new XoopsFormHidden('op', 'addfile'));
+        $form->addElement(new XoopsFormHidden('fct', 'avatars'));
+        $form->addElement(new XoopsFormButton('', 'avt_button', _SUBMIT, 'submit'));
+        $form->display();
+        xoops_cp_footer();
+        exit();
+    }
+
+    if ($op == 'listavt') {
+        $avt_handler =& xoops_gethandler('avatar');
+        xoops_cp_header();
+        $type = (isset($_GET['type']) && $_GET['type'] == 'C') ? 'C' : 'S';
+        echo '<a href="admin.php?fct=avatars">'. _MD_AVATARMAN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;';
+        if ($type == 'S') {
+            echo _MD_SYSAVATARS;
+        } else {
+            echo _MD_CSTAVATARS;
+        }
+        echo '<br /><br />';
+        $criteria = new Criteria('avatar_type', $type);
+        $avtcount = $avt_handler->getCount($criteria);
+        $start = isset($_GET['start']) ? intval($_GET['start']) : 0;
+        $criteria->setStart($start);
+        $criteria->setLimit(10);
+        $avatars =& $avt_handler->getObjects($criteria, true);
+        if ($type == 'S') {
+            foreach (array_keys($avatars) as $i) {
+                echo '<form action="admin.php" method="post">';
+                $id = $avatars[$i]->getVar('avatar_id');
+                echo '<table class="outer" cellspacing="1" width="100%"><tr><td align="center" width="30%" rowspan="6"><img src="'.XOOPS_UPLOAD_URL.'/'.$avatars[$i]->getVar('avatar_file').'" alt="" /></td><td class="head">'._IMAGENAME,'</td><td class="even"><input type="hidden" name="avatar_id[]" value="'.$id.'" /><input type="text" name="avatar_name[]" value="'.$avatars[$i]->getVar('avatar_name', 'E').'" size="20" maxlength="255" /></td></tr><tr><td class="head">'._IMAGEMIME.'</td><td class="odd">'.$avatars[$i]->getVar('avatar_mimetype').'</td></tr><tr><td class="head">'._MD_USERS.'</td><td class="even">'.$avatars[$i]->getUserCount().'</td></tr><tr><td class="head">'._IMGWEIGHT.'</td><td class="odd"><input type="text" name="avatar_weight[]" value="'.$avatars[$i]->getVar('avatar_weight').'" size="3" maxlength="4" /></td></tr><tr><td class="head">'._IMGDISPLAY.'</td><td class="even"><input type="checkbox" name="avatar_display[]" value="1"';
+                if ($avatars[$i]->getVar('avatar_display') == 1) {
+                    echo ' checked="checked"';
+                }
+                echo ' /></td></tr><tr><td class="head">&nbsp;</td><td class="even"><a href="admin.php?fct=avatars&amp;op=delfile&amp;avatar_id='.$id.'">'._DELETE.'</a></td></tr></table><br />';
+            }
+        } else {
+            foreach (array_keys($avatars) as $i) {
+                echo '<table cellspacing="1" class="outer" width="100%"><tr><td width="30%" rowspan="6" align="center"><img src="'.XOOPS_UPLOAD_URL.'/'.$avatars[$i]->getVar('avatar_file').'" alt="" /></td><td class="head">'._IMAGENAME,'</td><td class="even"><a href="'.XOOPS_URL.'/userinfo.php?uid=';
+                $userids =& $avt_handler->getUser($avatars[$i]);
+                echo $userids[0].'">'.$avatars[$i]->getVar('avatar_name').'</a></td></tr><tr><td class="head">'._IMAGEMIME.'</td><td class="odd">'.$avatars[$i]->getVar('avatar_mimetype').'</td></tr><tr><td class="head">&nbsp;</td><td align="center" class="even"><a href="admin.php?fct=avatars&amp;op=delfile&amp;avatar_id='.$avatars[$i]->getVar('avatar_id').'&amp;user_id='.$userids[0].'">'._DELETE.'</a></td></tr></table><br />';
+            }
+        }
+        if ($avtcount > 0) {
+            if ($avtcount > 10) {
+                include_once XOOPS_ROOT_PATH.'/class/pagenav.php';
+                $nav = new XoopsPageNav($avtcount, 10, $start, 'start', 'fct=avatars&amp;type='.$type.'&amp;op=listavt');
+                echo '<div style="text-align:right;">'.$nav->renderImageNav().'</div>';
+            }
+            if ($type == 'S') {
+                echo '<div style="text-align:center;"><input type="hidden" name="op" value="save" /><input type="hidden" name="fct" value="avatars" /><input type="submit" name="submit" value="'._SUBMIT.'" />'.$GLOBALS['xoopsSecurity']->getTokenHTML().'</div></form>';
+            }
+        }
+        xoops_cp_footer();
+        exit();
+    }
+
+    if ($op == 'save') {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=avatars', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+            exit();
+        }
+        $count = count($avatar_id);
+        if ($count > 0) {
+            $avt_handler =& xoops_gethandler('avatar');
+            $error = array();
+            for ($i = 0; $i < $count; $i++) {
+                $avatar =& $avt_handler->get($avatar_id[$i]);
+                if (!is_object($avatar)) {
+                    $error[] = sprintf(_FAILGETIMG, $avatar_id[$i]);
+                    continue;
+                }
+                $avatar_display[$i] = empty($avatar_display[$i]) ? 0 : 1;
+                $avatar->setVar('avatar_display', $avatar_display[$i]);
+                $avatar->setVar('avatar_weight', $avatar_weight[$i]);
+                $avatar->setVar('avatar_name', $avatar_name[$i]);
+                if (!$avt_handler->insert($avatar)) {
+                    $error[] = sprintf(_FAILSAVEIMG, $avatar_id[$i]);
+                }
+                unset($avatar_id[$i]);
+                unset($avatar_name[$i]);
+                unset($avatar_weight[$i]);
+                unset($avatar_display[$i]);
+            }
+            if (count($error) > 0) {
+                xoops_cp_header();
+                foreach ($error as $err) {
+                    echo $err.'<br />';
+                }
+                xoops_cp_footer();
+                exit();
+            }
+        }
+        redirect_header('admin.php?fct=avatars',2,_MD_AM_DBUPDATED);
+    }
+
+    if ($op == 'addfile') {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=avatars', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+            exit();
+        }
+        include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+        $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/x-png', 'image/png'), 500000);
+        $uploader->setPrefix('savt');
+        $err = array();
+        $ucount = count($_POST['xoops_upload_file']);
+        for ($i = 0; $i < $ucount; $i++) {
+            if ($uploader->fetchMedia($_POST['xoops_upload_file'][$i])) {
+                if (!$uploader->upload()) {
+                    $err[] = $uploader->getErrors();
+                } else {
+                    $avt_handler =& xoops_gethandler('avatar');
+                    $avatar =& $avt_handler->create();
+                    $avatar->setVar('avatar_file', $uploader->getSavedFileName());
+                    $avatar->setVar('avatar_name', $avatar_name);
+                    $avatar->setVar('avatar_mimetype', $uploader->getMediaType());
+                    $avatar_display = empty($avatar_display) ? 0 : 1;
+                    $avatar->setVar('avatar_display', $avatar_display);
+                    $avatar->setVar('avatar_weight', $avatar_weight);
+                    $avatar->setVar('avatar_type', 'S');
+                    if (!$avt_handler->insert($avatar)) {
+                        $err[] = sprintf(_FAILSAVEIMG, $avatar->getVar('avatar_name'));
+                    }
+                }
+            } else {
+                $err[] = sprintf(_FAILFETCHIMG, $i);
+                $err = array_merge($err, $uploader->getErrors(false));
+            }
+        }
+        if (count($err) > 0) {
+            xoops_cp_header();
+            xoops_error($err);
+            xoops_cp_footer();
+            exit();
+        }
+        redirect_header('admin.php?fct=avatars',2,_MD_AM_DBUPDATED);
+    }
+
+    if ($op == 'delfile') {
+        xoops_cp_header();
+        $user_id = isset($_GET['user_id']) ? intval($_GET['user_id']) : 0;
+        xoops_confirm(array('op' => 'delfileok', 'avatar_id' => intval($_GET['avatar_id']), 'fct' => 'avatars', 'user_id' => $user_id), 'admin.php', _MD_RUDELIMG);
+        xoops_cp_footer();
+        exit();
+    }
+
+    if ($op == 'delfileok') {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=avatars',1, 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $avatar_id = intval($avatar_id);
+        if ($avatar_id <= 0) {
+            redirect_header('admin.php?fct=avatars',1);
+        }
+        $avt_handler = xoops_gethandler('avatar');
+        $avatar =& $avt_handler->get($avatar_id);
+        if (!is_object($avatar)) {
+            redirect_header('admin.php?fct=avatars',1);
+        }
+        if (!$avt_handler->delete($avatar)) {
+            xoops_cp_header();
+            xoops_error(sprintf(_MD_FAILDEL, $avatar->getVar('avatar_id')));
+            xoops_cp_footer();
+            exit();
+        }
+        $file = $avatar->getVar('avatar_file');
+        @unlink(XOOPS_UPLOAD_PATH.'/'.$file);
+        if (isset($user_id) && $avatar->getVar('avatar_type') == 'C') {
+            $xoopsDB->query("UPDATE ".$xoopsDB->prefix('users')." SET user_avatar='blank.gif' WHERE uid=".intval($user_id));
+        } else {
+            $xoopsDB->query("UPDATE ".$xoopsDB->prefix('users')." SET user_avatar='blank.gif' WHERE user_avatar='".$file."'");
+        }
+        redirect_header('admin.php?fct=avatars',2,_MD_AM_DBUPDATED);
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/avatars/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/avatars/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/avatars/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/avatars/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_AVATARS;
+$modversion['version'] = "";
+$modversion['description'] = "XOOPS Site Avatar Manager";
+$modversion['author'] = "";
+$modversion['credits'] = "The XOOPS Project";
+$modversion['help'] = "images.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "avatars.gif";
+
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=avatars";
+$modversion['category'] = XOOPS_SYSTEM_AVATAR;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/avatars/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/banners/banners.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/banners/banners.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/banners/banners.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,402 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (!is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+} else {
+/*********************************************************/
+/* Banners Administration Functions                      */
+/*********************************************************/
+function BannersAdmin()
+{
+    global $xoopsConfig, $xoopsModule;
+    $xoopsDB =& Database::getInstance();
+    xoops_cp_header();
+    // Banners List
+    echo "<a name='top'></a>";
+    echo "<table width='100%' border='0' cellspacing='1' class='outer'><tr><td class=\"odd\">";
+    echo "<div style='text-align:center'><b>"._AM_CURACTBNR."</b></div><br />
+    <table width='100%' border='0'><tr>
+    <td align='center'>"._AM_BANNERID."</td>
+    <td align='center'>"._AM_IMPRESION."</td>
+    <td align='center'>"._AM_IMPLEFT."</td>
+    <td align='center'>"._AM_CLICKS."</td>
+    <td align='center'>"._AM_NCLICKS."</td>
+    <td align='center'>"._AM_CLINAME."</td>
+    <td align='center'>"._AM_FUNCTION."</td></tr><tr align='center'>";
+    $result = $xoopsDB->query("SELECT bid, cid, imptotal, impmade, clicks, date FROM ".$xoopsDB->prefix("banner")." ORDER BY bid");
+    $myts =& MyTextSanitizer::getInstance();
+    while(list($bid, $cid, $imptotal, $impmade, $clicks, $date) = $xoopsDB->fetchRow($result)) {
+        $result2 = $xoopsDB->query("SELECT cid, name FROM ".$xoopsDB->prefix("bannerclient")." WHERE cid=$cid");
+        list($cid, $name) = $xoopsDB->fetchRow($result2);
+        $name = $myts->makeTboxData4Show($name);
+        if ( $impmade == 0 ) {
+            $percent = 0;
+        } else {
+            $percent = substr(100 * $clicks / $impmade, 0, 5);
+        }
+        if ( $imptotal == 0 ) {
+            $left = ""._AM_UNLIMIT."";
+        } else {
+            $left = $imptotal-$impmade;
+        }
+        echo "<td align='center'>$bid</td>
+        <td align='center'>$impmade</td>
+        <td align='center'>$left</td>
+        <td align='center'>$clicks</td>
+        <td align='center'>$percent%</td>
+        <td align='center'>$name</td>
+        <td align='center'><a href='admin.php?fct=banners&amp;op=BannerEdit&amp;bid=$bid'>"._AM_EDIT."</a> | <a href='admin.php?fct=banners&amp;op=BannerDelete&amp;bid=$bid&amp;ok=0'>"._AM_DELETE."</a></td><tr>";
+    }
+    echo "</td></tr></table>";
+    echo "</td></tr></table>";
+    echo "<br />";
+    // Finished Banners List
+    echo "<a name='top'></a>";
+    echo "<table width='100%' border='0' cellspacing='1' class='outer'><tr><td class=\"odd\">";
+    echo "<div style='text-align:center'><b>"._AM_FINISHBNR."</b></div><br />
+    <table width='100%' border='0'><tr>
+    <td align='center'>"._AM_BANNERID."</td>
+    <td align='center'>"._AM_IMPD."</td>
+    <td align='center'>"._AM_CLICKS."</td>
+    <td align='center'>"._AM_NCLICKS."</td>
+    <td align='center'>"._AM_STARTDATE."</td>
+    <td align='center'>"._AM_ENDDATE."</td>
+    <td align='center'>"._AM_CLINAME."</td>
+    <td align='center'>"._AM_FUNCTION."</td></tr>
+    <tr>";
+    $result = $xoopsDB->query("SELECT bid, cid, impressions, clicks, datestart, dateend FROM ".$xoopsDB->prefix("bannerfinish")." ORDER BY bid");
+    while(list($bid, $cid, $impressions, $clicks, $datestart, $dateend) = $xoopsDB->fetchRow($result)) {
+        $result2 = $xoopsDB->query("SELECT cid, name FROM ".$xoopsDB->prefix("bannerclient")." WHERE cid=$cid");
+        list($cid, $name) = $xoopsDB->fetchRow($result2);
+        $name = $myts->makeTboxData4Show($name);
+        $percent = substr(100 * $clicks / $impressions, 0, 5);
+        echo "
+        <td align='center'>$bid</td>
+        <td align='center'>$impressions</td>
+        <td align='center'>$clicks</td>
+        <td align='center'>$percent%</td>
+        <td align='center'>".formatTimestamp($datestart,"m")."</td>
+        <td align='center'>".formatTimestamp($dateend,"m")."</td>
+        <td align='center'>$name</td>
+        <td align='center'><a href='admin.php?fct=banners&amp;op=BannerFinishDelete&amp;bid=$bid'>"._AM_DELETE."</a></td><tr>";
+    }
+    echo "</td></tr></table>";
+    echo "</td></tr></table>";
+    echo "<br />";
+    // Clients List
+    echo "<table width='100%' border='0' cellspacing='1' class='outer'><tr><td class=\"odd\">";
+    echo "
+    <div style='text-align:center'><b>"._AM_ADVCLI."</b></div><br />
+    <table width='100%' border='0'><tr align='center'>
+    <td align='center'>"._AM_BANNERID."</td>
+    <td align='center'>"._AM_CLINAME."</td>
+    <td align='center'>"._AM_ACTIVEBNR."</td>
+    <td align='center'>"._AM_CONTNAME."</td>
+    <td align='center'>"._AM_CONTMAIL."</td>
+    <td align='center'>"._AM_FUNCTION."</td></tr><tr align='center'>";
+    $result = $xoopsDB->query("SELECT cid, name, contact, email FROM ".$xoopsDB->prefix("bannerclient")." ORDER BY cid");
+    while(list($cid, $name, $contact, $email) = $xoopsDB->fetchRow($result)) {
+        $name = $myts->makeTboxData4Show($name);
+        $contact = $myts->makeTboxData4Show($contact);
+        $email = $myts->makeTboxData4Show($email);
+        $result2 = $xoopsDB->query("SELECT COUNT(*) FROM ".$xoopsDB->prefix("banner")." WHERE cid=$cid");
+        list($numrows) = $xoopsDB->fetchRow($result2);
+        echo "
+        <td align='center'>$cid</td>
+        <td align='center'>$name</td>
+        <td align='center'>$numrows</td>
+        <td align='center'>$contact</td>
+        <td align='center'>$email</td>
+        <td align='center'><a href='admin.php?fct=banners&amp;op=BannerClientEdit&amp;cid=$cid'>"._AM_EDIT."</a> | <a href='admin.php?fct=banners&amp;op=BannerClientDelete&amp;cid=$cid'>"._AM_DELETE."</a></td><tr>";
+    }
+    echo "</td></tr></table>";
+    echo "</td></tr></table>";
+    echo "<br />";
+    // Add Banner
+    $result = $xoopsDB->query("SELECT COUNT(*) FROM ".$xoopsDB->prefix("bannerclient"));
+    list($numrows) = $xoopsDB->fetchRow($result);
+        if ( $numrows > 0 ) {
+            echo"<table width='100%' border='0' cellspacing='1' class='outer'><tr><td class=\"odd\">";
+            echo"
+            <h4>"._AM_ADDNWBNR."</h4>
+            <form action='admin.php' method='post'>
+            "._AM_CLINAMET."
+            <select name='cid'>";
+            $result = $xoopsDB->query("SELECT cid, name FROM ".$xoopsDB->prefix("bannerclient"));
+            while(list($cid, $name) = $xoopsDB->fetchRow($result)) {
+                $name = $myts->makeTboxData4Show($name);
+                echo "<option value='$cid'>$name</option>";
+
+            }
+            echo "
+            </select><br />
+            "._AM_IMPPURCHT."<input type='text' name='imptotal' size='12' maxlength='11' /> 0 = "._AM_UNLIMIT."<br />
+            "._AM_IMGURLT."<input type='text' name='imageurl' size='50' maxlength='255' /><br />
+            "._AM_CLICKURLT."<input type='text' name='clickurl' size='50' maxlength='255' /><br />
+            "._AM_USEHTML." <input type='checkbox' name='htmlbanner' value='1'>
+            <br />
+            "._AM_CODEHTML."
+            <br />
+            <textarea name='htmlcode' rows='6'></textarea>
+            <br />
+            <input type='hidden' name='fct' value='banners' />
+            <input type='hidden' name='op' value='BannersAdd' />
+            ".$GLOBALS['xoopsSecurity']->getTokenHTML()."
+            <input type='submit' value='"._AM_ADDBNR."' />
+            </form>";
+            echo"</td></tr></table>";
+        }
+    // Add Client
+    echo "<br />";
+    echo "<table width='100%' border='0' cellspacing='1' class='outer'><tr><td class=\"odd\">";
+    echo "
+    <h4>"._AM_ADDNWCLI."</h4>
+    <form action='admin.php' method='post'>
+    "._AM_CLINAMET."<input type='text' name='name' size='30' maxlength='60' /><br />
+    "._AM_CONTNAMET."<input type='text' name='contact' size='30' maxlength='60' /><br />
+    "._AM_CONTMAILT."<input type='text' name='email' size='30' maxlength='60' /><br />
+    "._AM_CLILOGINT."<input type='text' name='login' size='12' maxlength='10' /><br />
+    "._AM_CLIPASST."<input type='text' name='passwd' size='12' maxlength='10' /><br />
+    "._AM_EXTINFO."<br /><textarea name='extrainfo' cols='60' rows='10' /></textarea><br />
+    <input type='hidden' name='op' value='BannerAddClient' />
+    ".$GLOBALS['xoopsSecurity']->getTokenHTML()."
+    <input type='hidden' name='fct' value='banners' />
+    <input type='submit' value='"._AM_ADDCLI."' />
+    </form>";
+    echo "</td></tr></table>";
+    xoops_cp_footer();
+}
+
+
+function BannerDelete($bid)
+{
+    global $xoopsConfig, $xoopsModule;
+    $xoopsDB =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    xoops_cp_header();
+    $result=$xoopsDB->query("SELECT cid, imptotal, impmade, clicks, imageurl, clickurl, htmlbanner, htmlcode FROM ".$xoopsDB->prefix("banner")." where bid=$bid");
+    list($cid, $imptotal, $impmade, $clicks, $imageurl, $clickurl, $htmlbanner, $htmlcode) = $xoopsDB->fetchRow($result);
+    $imageurl = htmlspecialchars($imageurl, ENT_QUOTES);
+    $clickurl = htmlspecialchars($clickurl, ENT_QUOTES);
+    echo"<table width='100%' border='0' cellspacing='1' class='outer'><tr><td class=\"odd\">";
+    echo "<h4>"._AM_DELEBNR."</h4>";
+    if ($htmlbanner){
+        echo $myts->displayTarea($htmlcode,1);
+    }else{
+        if(strtolower(substr($imageurl,strrpos($imageurl,".")))==".swf") {
+            echo "<object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/ swflash.cab#version=6,0,40,0\"; width=\"468\" height=\"60\">";
+            echo "<param name=movie value=\"$imageurl\">";
+            echo "<param name=quality value=high>";
+            echo "<embed src=\"$imageurl\" quality=high pluginspage=\"http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash\"; type=\"application/x-shockwave-flash\" width=\"468\" height=\"60\">";
+            echo "</embed>";
+            echo "</object>";
+        } else {
+            echo "<img src='$imageurl' alt='' />";
+        }
+    }
+    echo "<a href='$clickurl'>$clickurl</a><br /><br /><table width='100%' border='0'><tr align='center'><td align='center'>"._AM_BANNERID."</td><td align='center'>"._AM_IMPRESION."</td><td align='center'>"._AM_IMPLEFT."</td><td align='center'>"._AM_CLICKS."</td><td align='center'>"._AM_NCLICKS."</td><td align='center'>"._AM_CLINAME."</td></tr><tr align='center'>";
+    $result2 = $xoopsDB->query("SELECT cid, name FROM ".$xoopsDB->prefix("bannerclient")." WHERE cid=$cid");
+    list($cid, $name) = $xoopsDB->fetchRow($result2);
+    $name = $myts->makeTboxData4Show($name);
+    $percent = substr(100 * $clicks / $impmade, 0, 5);
+    if ( $imptotal == 0 ) {
+        $left = 'unlimited';
+    } else {
+        $left = $imptotal-$impmade;
+    }
+    echo "
+        <td align='center'>$bid</td>
+        <td align='center'>$impmade</td>
+        <td align='center'>$left</td>
+        <td align='center'>$clicks</td>
+        <td align='center'>$percent%</td>
+        <td align='center'>$name</td>
+        </tr></table><br />";
+    xoops_confirm(array('fct' => 'banners', 'op' => 'BannerDelete2', 'bid' => $bid), 'admin.php', _AM_SUREDELE);
+    echo"</td></tr></table>";
+    xoops_cp_footer();
+}
+
+function BannerEdit($bid)
+{
+    global $xoopsConfig, $xoopsModule;
+    $bid = intval($bid);
+    xoops_cp_header();
+    $xoopsDB =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    $result=$xoopsDB->query("SELECT cid, imptotal, impmade, clicks, imageurl, clickurl, htmlbanner, htmlcode FROM ".$xoopsDB->prefix("banner")." where bid=".$bid);
+    list($cid, $imptotal, $impmade, $clicks, $imageurl, $clickurl, $htmlbanner, $htmlcode) = $xoopsDB->fetchRow($result);
+    echo"<table width='100%' border='0' cellspacing='1' class='outer'><tr><td class=\"odd\">";
+    echo"<h4>"._AM_EDITBNR."</h4>";
+    if ($htmlbanner){
+        echo $myts->displayTarea($htmlcode,0);
+    }else{
+        if(strtolower(substr($imageurl,strrpos($imageurl,".")))==".swf") {
+            echo "<object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/ swflash.cab#version=6,0,40,0\"; width=\"468\" height=\"60\">";
+            echo "<param name=movie value=\"$imageurl\">";
+            echo "<param name=quality value=high>";
+            echo "<embed src=\"$imageurl\" quality=high pluginspage=\"http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash\"; type=\"application/x-shockwave-flash\" width=\"468\" height=\"60\">";
+            echo "</embed>";
+            echo "</object>";
+        } else {
+            echo "<img src='$imageurl' alt='' />";
+        }
+    }
+    echo "<form action='admin.php' method='post'>
+    "._AM_CLINAMET."
+    <select name='cid'>\n";
+    $result = $xoopsDB->query("SELECT cid, name FROM ".$xoopsDB->prefix("bannerclient")." where cid=$cid");
+    list($cid, $name) = $xoopsDB->fetchRow($result);
+    $name = $myts->makeTboxData4Show($name);
+    echo "<option value='$cid' selected='selected'>$name</option>";
+    $result = $xoopsDB->query("SELECT cid, name FROM ".$xoopsDB->prefix("bannerclient"));
+    while(list($ccid, $name) = $xoopsDB->fetchRow($result)) {
+        $name = $myts->makeTboxData4Show($name);
+        if ( $cid != $ccid ) {
+            echo "<option value='$ccid'>$name</option>";
+        }
+    }
+    echo "</select><br />";
+    if ( $imptotal == 0 ) {
+        $impressions = ""._AM_UNLIMIT."";
+    } else {
+        $impressions = $imptotal;
+    }
+    echo "
+    "._AM_ADDIMPT."<input type='text' name='impadded' size='12' maxlength='11' /> "._AM_PURCHT."<b>$impressions</b> "._AM_MADET."<b>$impmade</b><br />
+    "._AM_IMGURLT."<input type='text' name='imageurl' size='50' maxlength='200' value='".htmlspecialchars($imageurl, ENT_QUOTES)."'><br />
+    "._AM_CLICKURLT."<input type='text' name='clickurl' size='50' maxlength='200' value='".htmlspecialchars($clickurl, ENT_QUOTES)."' /><br />
+    "._AM_USEHTML;
+    if ($htmlbanner){
+        echo " <input type='checkbox' name='htmlbanner' value='1' checked='checked'>";
+    }else{
+        echo " <input type='checkbox' name='htmlbanner' value='1'>";
+    }
+    echo "
+    <br />
+    "._AM_CODEHTML."
+    <br />
+    <textarea name='htmlcode' rows='6'>".$myts->makeTboxData4Edit($htmlcode)."</textarea>
+    <br />
+    <input type='hidden' name='bid' value='$bid' />
+    <input type='hidden' name='imptotal' value='$imptotal' />
+    <input type='hidden' name='fct' value='banners' />
+    ".$GLOBALS['xoopsSecurity']->getTokenHTML()."
+    <input type='hidden' name='op' value='BannerChange' />
+    <input type='submit' value='"._AM_CHGBNR."' />
+    </form>";
+    echo"</td></tr></table>";
+    xoops_cp_footer();
+}
+
+function BannerClientDelete($cid)
+{
+    global $xoopsConfig, $xoopsModule;
+    $xoopsDB =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    xoops_cp_header();
+    $result = $xoopsDB->query("SELECT cid, name FROM ".$xoopsDB->prefix("bannerclient")." WHERE cid=$cid");
+    list($cid, $name) = $xoopsDB->fetchRow($result);
+    $name = $myts->makeTboxData4Show($name);
+    echo "<table width='100%' border='0' cellspacing='1' class='outer'><tr><td class=\"odd\">";
+    echo "<h4>"._AM_DELEADC."</h4>".sprintf(_AM_SUREDELCLI,$name)."<br /><br />";
+    $result2 = $xoopsDB->query("SELECT imageurl, clickurl, htmlbanner, htmlcode FROM ".$xoopsDB->prefix("banner")." WHERE cid=$cid");
+    $numrows = $xoopsDB->getRowsNum($result2);
+    if ( $numrows == 0 ) {
+        echo ""._AM_NOBNRRUN."<br /><br />";
+    } else {
+        echo "<font color='#ff0000'><b>"._AM_WARNING."</b></font><br />"._AM_ACTBNRRUN."<br /><br />";
+    }
+    while(list($imageurl, $clickurl, $htmlbanner, $htmlcode) = $xoopsDB->fetchRow($result2)) {
+        $imageurl = htmlspecialchars($imageurl, ENT_QUOTES);
+        $clickurl = htmlspecialchars($clickurl, ENT_QUOTES);
+        $bannerobject = "";
+        if ($htmlbanner){
+            $bannerobject = $myts->displayTarea($htmlcode,1);
+        } else {
+            $bannerobject = '<div><a href="'.$clickurl.'" target="_blank">';
+            if(strtolower(substr($imageurl,strrpos($imageurl,".")))==".swf") {
+                $bannerobject = $bannerobject
+                        .'<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" width="468" height="60">'
+                        .'<param name=movie value="'.$imageurl.'">'
+                        .'<param name=quality value=high>'
+                        .'<embed src="'.$imageurl.'" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash"; type="application/x-shockwave-flash" width="468" height="60">'
+                        .'</embed>'
+                        .'</object>';
+            } else {
+                $bannerobject = $bannerobject.'<img src="'.$imageurl.'" alt="" />';
+            }
+            $bannerobject = $bannerobject.'</a></div>';
+        }
+        echo $bannerobject."<a href='".$clickurl."'>".$clickurl."</a><br /><br />";
+    }
+    xoops_confirm(array('fct' => 'banners', 'op' => 'BannerClientDelete2', 'cid' => $cid), 'admin.php', _AM_SUREDELBNR);
+    echo "</td></tr></table>";
+    xoops_cp_footer();
+}
+
+function BannerClientEdit($cid)
+{
+    global $xoopsConfig, $xoopsModule;
+    $xoopsDB =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    xoops_cp_header();
+    $result = $xoopsDB->query("SELECT name, contact, email, login, passwd, extrainfo FROM ".$xoopsDB->prefix("bannerclient")." WHERE cid=$cid");
+    list($name, $contact, $email, $login, $passwd, $extrainfo) = $xoopsDB->fetchRow($result);
+    $name = $myts->makeTboxData4Edit($name);
+    $contact = $myts->makeTboxData4Edit($contact);
+    $email = $myts->makeTboxData4Edit($email);
+    $login = $myts->makeTboxData4Edit($login);
+    $passwd = $myts->makeTboxData4Edit($passwd);
+    $extrainfo = $myts->makeTareaData4Edit($extrainfo);
+    echo "<table width='100%' border='0' cellspacing='1' class='outer'><tr><td class=\"odd\">";
+    echo "
+    <h4>"._AM_EDITADVCLI."</h4>
+    <form action='admin.php' method='post'>
+    "._AM_CLINAMET."<input type='text' name='name' value='$name' size='30' maxlength='60' /><br />
+    "._AM_CONTNAMET."<input type='text' name='contact' value='$contact' size='30' maxlength='60' /><br />
+    "._AM_CONTMAILT ."<input type='text' name='email' size='30' maxlength='60' value='$email' /><br />
+    "._AM_CLILOGINT."<input type='text' name='login' size='12' maxlength='10' value='$login' /><br />
+    "._AM_CLIPASST."<input type='text' name='passwd' size='12' maxlength='10' value='$passwd' /><br />
+    "._AM_EXTINFO."<br /><textarea name='extrainfo' cols='60' rows='10' />$extrainfo</textarea><br />
+    <input type='hidden' name='cid' value='$cid' />
+    <input type='hidden' name='op' value='BannerClientChange' />
+    ".$GLOBALS['xoopsSecurity']->getTokenHTML()."
+    <input type='hidden' name='fct' value='banners' />
+    <input type='submit' value='"._AM_CHGCLI."' />";
+    echo "</td></tr></table>";
+    xoops_cp_footer();
+}
+
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/banners/banners.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/banners/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/banners/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/banners/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,199 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+include_once XOOPS_ROOT_PATH."/modules/system/admin/banners/banners.php";
+include_once XOOPS_ROOT_PATH."/class/module.textsanitizer.php";
+
+$op = "BannersAdmin";
+if (isset($_GET['op'])) {
+    $op = $_GET['op'];
+} elseif (isset($_POST['op'])) {
+    $op = $_POST['op'];
+}
+
+switch ( $op ) {
+case "BannersAdmin":
+    BannersAdmin();
+    break;
+
+case "BannersAdd":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $name = isset($_POST['name']) ? trim($_POST['name']) : '';
+    $cid = isset($_POST['cid']) ? intval($_POST['cid']) : 0;
+    $imageurl = isset($_POST['imageurl']) ? trim($_POST['imageurl']) : '';
+    $clickurl = isset($_POST['clickurl']) ? trim($_POST['clickurl']) : '';
+    $imptotal = isset($_POST['imptotal']) ? intval($_POST['imptotal']) : 0;
+    $htmlbanner = isset($_POST['htmlbanner']) ? intval($_POST['htmlbanner']) : 0;
+    $htmlcode = isset($_POST['htmlcode']) ? trim($_POST['htmlcode']) : '';
+    if ($cid <= 0) {
+        redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top");
+    }
+    $db =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    $newid = $db->genId($db->prefix("banner")."_bid_seq");
+    $sql = sprintf("INSERT INTO %s (bid, cid, imptotal, impmade, clicks, imageurl, clickurl, date, htmlbanner, htmlcode) VALUES (%d, %d, %d, 1, 0, %s, %s, %d, %d, %s)", $db->prefix("banner"), intval($newid), $cid, $imptotal, $db->quoteString($myts->stripSlashesGPC($imageurl)), $db->quoteString($myts->stripSlashesGPC($clickurl)), time(), $htmlbanner, $db->quoteString($myts->stripSlashesGPC($htmlcode)));
+    $db->query($sql);
+    redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top",1,_AM_DBUPDATED);
+    exit();
+    break;
+
+case "BannerAddClient":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $name = isset($_POST['name']) ? trim($_POST['name']) : '';
+    $contact = isset($_POST['contact']) ? trim($_POST['contact']) : '';
+    $email = isset($_POST['email']) ? trim($_POST['email']) : '';
+    $login = isset($_POST['login']) ? trim($_POST['login']) : '';
+    $passwd = isset($_POST['passwd']) ? trim($_POST['passwd']) : '';
+    $extrainfo = isset($_POST['extrainfo']) ? trim($_POST['extrainfo']) : '';
+    $db =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    $newid = $db->genId($xoopsDB->prefix("bannerclient")."_cid_seq");
+    $sql = sprintf("INSERT INTO %s (cid, name, contact, email, login, passwd, extrainfo) VALUES (%d, %s, %s, %s, %s, %s, %s)", $db->prefix("bannerclient"), intval($newid), $db->quoteString($myts->stripSlashesGPC($name)), $db->quoteString($myts->stripSlashesGPC($contact)), $db->quoteString($myts->stripSlashesGPC($email)), $db->quoteString($myts->stripSlashesGPC($login)), $db->quoteString($myts->stripSlashesGPC($passwd)), $db->quoteString($myts->stripSlashesGPC($extrainfo)));
+    $db->query($sql);
+    redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top",1,_AM_DBUPDATED);
+    exit();
+    break;
+
+case "BannerFinishDelete":
+    xoops_cp_header();
+    xoops_confirm(array('op' => 'BannerFinishDelete2', 'bid' => intval($_GET['bid']), 'fct' => 'banners'), 'admin.php', _AM_SUREDELE);
+    xoops_cp_footer();
+    break;
+
+case "BannerFinishDelete2":
+    $bid = isset($_POST['bid']) ? intval($_POST['bid']) : 0;
+    if ($bid <= 0 | !$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $db =& Database::getInstance();
+    $sql = sprintf("DELETE FROM %s WHERE bid = %u", $db->prefix("bannerfinish"), $bid);
+    $db->query($sql);
+    redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top",1,_AM_DBUPDATED);
+    exit();
+    break;
+
+case "BannerDelete":
+    $bid = isset($_GET['bid']) ? intval($_GET['bid']) : 0;
+    if ($bid > 0) {
+        BannerDelete($bid);
+    }
+    break;
+
+case "BannerDelete2":
+    $bid = isset($_POST['bid']) ? intval($_POST['bid']) : 0;
+    if ($bid <= 0 | !$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $db =& Database::getInstance();
+    $sql = sprintf("DELETE FROM %s WHERE bid = %u", $db->prefix("banner"), $bid);
+    $db->query($sql);
+    redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top",1,_AM_DBUPDATED);
+    break;
+
+case "BannerEdit":
+    $bid = isset($_GET['bid']) ? intval($_GET['bid']) : 0;
+    if ($bid > 0) {
+        BannerEdit($bid);
+    }
+    break;
+
+case "BannerChange":
+    $bid = isset($_POST['bid']) ? intval($_POST['bid']) : 0;
+    $cid = isset($_POST['cid']) ? intval($_POST['cid']) : 0;
+    if (($cid <= 0 || $bid <= 0) | !$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $imageurl = isset($_POST['imageurl']) ? trim($_POST['imageurl']) : '';
+    $clickurl = isset($_POST['clickurl']) ? trim($_POST['clickurl']) : '';
+    $imptotal = isset($_POST['imptotal']) ? intval($_POST['imptotal']) : 0;
+    $impadded = isset($_POST['impadded']) ? intval($_POST['impadded']) : 0;
+    $htmlbanner = isset($_POST['htmlbanner']) ? intval($_POST['htmlbanner']) : 0;
+    $htmlcode = isset($_POST['htmlcode']) ? trim($_POST['htmlcode']) : '';
+    $db =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    $sql = sprintf("UPDATE %s SET cid = %d, imptotal = %d, imageurl = %s, clickurl = %s, htmlbanner = %d, htmlcode = %s WHERE bid = %d", $db->prefix("banner"), $cid, $imptotal + $impadded, $db->quoteString($myts->stripSlashesGPC($imageurl)), $db->quoteString($myts->stripSlashesGPC($clickurl)), $htmlbanner, $db->quoteString($myts->stripSlashesGPC($htmlcode)), $bid);
+    $db->query($sql);
+    redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top",1,_AM_DBUPDATED);
+    break;
+
+case "BannerClientDelete":
+    $cid = isset($_GET['cid']) ? intval($_GET['cid']) : 0;
+    if ($cid > 0) {
+        BannerClientDelete($cid);
+    }
+    break;
+
+case "BannerClientDelete2":
+    $cid = isset($_POST['cid']) ? intval($_POST['cid']) : 0;
+    $db =& Database::getInstance();
+    if ($cid <= 0 | !$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $sql = sprintf("DELETE FROM %s WHERE cid = %u", $db->prefix("banner"), $cid);
+    $db->query($sql);
+    $sql = sprintf("DELETE FROM %s WHERE cid = %u", $db->prefix("bannerclient"), $cid);
+    $db->query($sql);
+    redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top",1,_AM_DBUPDATED);
+    break;
+
+case "BannerClientEdit":
+    $cid = isset($_GET['cid']) ? intval($_GET['cid']) : 0;
+    if ($cid > 0) {
+        BannerClientEdit($cid);
+    }
+    break;
+
+case "BannerClientChange":
+    $cid = isset($_POST['cid']) ? intval($_POST['cid']) : 0;
+    if ($cid <= 0 | !$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $name = isset($_POST['name']) ? trim($_POST['name']) : '';
+    $contact = isset($_POST['contact']) ? trim($_POST['contact']) : '';
+    $email = isset($_POST['email']) ? trim($_POST['email']) : '';
+    $login = isset($_POST['login']) ? trim($_POST['login']) : '';
+    $passwd = isset($_POST['passwd']) ? trim($_POST['passwd']) : '';
+    $extrainfo = isset($_POST['extrainfo']) ? trim($_POST['extrainfo']) : '';
+    $db =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    $sql = sprintf("UPDATE %s SET name = %s, contact = %s, email = %s, login = %s, passwd = %s, extrainfo = %s WHERE cid = %d", $db->prefix("bannerclient"), $db->quoteString($myts->stripSlashesGPC($name)), $db->quoteString($myts->stripSlashesGPC($contact)), $db->quoteString($myts->stripSlashesGPC($email)), $db->quoteString($myts->stripSlashesGPC($login)), $db->quoteString($myts->stripSlashesGPC($passwd)), $db->quoteString($myts->stripSlashesGPC($extrainfo)));
+    $db->query($sql);
+    redirect_header("admin.php?fct=banners&amp;op=BannersAdmin#top",1,_AM_DBUPDATED);
+    break;
+
+default:
+    BannersAdmin();
+    break;
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/banners/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/banners/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/banners/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/banners/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,44 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_BANS;
+$modversion['version'] = "";
+$modversion['description'] = "Banners Administration";
+$modversion['author'] = "Francisco Burzi <br>( http://phpnuke.org/ )";
+$modversion['credits'] = "The MPN SE Project";
+$modversion['help'] = "banners.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "banners.gif";
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=banners";
+$modversion['category'] = XOOPS_SYSTEM_BANNER;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/banners/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/blockform.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/blockform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/blockform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,87 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+include_once XOOPS_ROOT_PATH."/class/xoopsformloader.php";
+$form = new XoopsThemeForm($block['form_title'], 'blockform', 'admin.php', "post", true);
+if (isset($block['name'])) {
+    $form->addElement(new XoopsFormLabel(_AM_NAME, $block['name']));
+}
+$side_select = new XoopsFormSelect(_AM_BLKTYPE, "bside", $block['side']);
+$side_select->addOptionArray(array(0 => _AM_SBLEFT, 1 => _AM_SBRIGHT, 3 => _AM_CBLEFT, 4 => _AM_CBRIGHT, 5 => _AM_CBCENTER, ));
+$form->addElement($side_select);
+$form->addElement(new XoopsFormText(_AM_WEIGHT, "bweight", 2, 5, $block['weight']));
+$form->addElement(new XoopsFormRadioYN(_AM_VISIBLE, 'bvisible', $block['visible']));
+$mod_select = new XoopsFormSelect(_AM_VISIBLEIN, "bmodule", $block['modules'], 5, true);
+$module_handler =& xoops_gethandler('module');
+$criteria = new CriteriaCompo(new Criteria('hasmain', 1));
+$criteria->add(new Criteria('isactive', 1));
+$module_list =& $module_handler->getList($criteria);
+$module_list[-1] = _AM_TOPPAGE;
+$module_list[0] = _AM_ALLPAGES;
+ksort($module_list);
+$mod_select->addOptionArray($module_list);
+$form->addElement($mod_select);
+$form->addElement(new XoopsFormText(_AM_TITLE, 'btitle', 50, 255, $block['title']), false);
+if ( $block['is_custom'] ) {
+    $textarea = new XoopsFormDhtmlTextArea(_AM_CONTENT, 'bcontent', $block['content'], 15, 70);
+    $textarea->setDescription('<span style="font-size:x-small;font-weight:bold;">'._AM_USEFULTAGS.'</span><br /><span style="font-size:x-small;font-weight:normal;">'.sprintf(_AM_BLOCKTAG1, '{X_SITEURL}', XOOPS_URL.'/').'</span>');
+    $form->addElement($textarea, true);
+    $ctype_select = new XoopsFormSelect(_AM_CTYPE, 'bctype', $block['ctype']);
+    $ctype_select->addOptionArray(array('H' => _AM_HTML, 'P' => _AM_PHP, 'S' => _AM_AFWSMILE, 'T' => _AM_AFNOSMILE));
+    $form->addElement($ctype_select);
+} else {
+    if ($block['template'] != '') {
+        $tplfile_handler =& xoops_gethandler('tplfile');
+        $btemplate =& $tplfile_handler->find($GLOBALS['xoopsConfig']['template_set'], 'block', $block['bid']);
+        if (count($btemplate) > 0) {
+            $form->addElement(new XoopsFormLabel(_AM_CONTENT, '<a href="'.XOOPS_URL.'/modules/system/admin.php?fct=tplsets&op=edittpl&id='.$btemplate[0]->getVar('tpl_id').'">'._AM_EDITTPL.'</a>'));
+        } else {
+            $btemplate2 =& $tplfile_handler->find('default', 'block', $block['bid']);
+            if (count($btemplate2) > 0) {
+                $form->addElement(new XoopsFormLabel(_AM_CONTENT, '<a href="'.XOOPS_URL.'/modules/system/admin.php?fct=tplsets&op=edittpl&id='.$btemplate2[0]->getVar('tpl_id').'" target="_blank">'._AM_EDITTPL.'</a>'));
+            }
+        }
+    }
+    if ($block['edit_form'] != false) {
+        $form->addElement(new XoopsFormLabel(_AM_OPTIONS, $block['edit_form']));
+    }
+}
+$cache_select = new XoopsFormSelect(_AM_BCACHETIME, 'bcachetime', $block['cachetime']);
+$cache_select->addOptionArray(array('0' => _NOCACHE, '30' => sprintf(_SECONDS, 30), '60' => _MINUTE, '300' => sprintf(_MINUTES, 5), '1800' => sprintf(_MINUTES, 30), '3600' => _HOUR, '18000' => sprintf(_HOURS, 5), '86400' => _DAY, '259200' => sprintf(_DAYS, 3), '604800' => _WEEK, '2592000' => _MONTH));
+$form->addElement($cache_select);
+if (isset($block['bid'])) {
+    $form->addElement(new XoopsFormHidden('bid', $block['bid']));
+}
+$form->addElement(new XoopsFormHidden('op', $block['op']));
+$form->addElement(new XoopsFormHidden('fct', 'blocksadmin'));
+$button_tray = new XoopsFormElementTray('', '&nbsp;');
+if ($block['is_custom']) {
+    $button_tray->addElement(new XoopsFormButton('', 'previewblock', _PREVIEW, "submit"));
+}
+$button_tray->addElement(new XoopsFormButton('', 'submitblock', _SUBMIT, "submit"));
+$form->addElement($button_tray);
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/blockform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/blocksadmin.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/blocksadmin.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/blocksadmin.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,447 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+// check if the user is authorised
+if ( $xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    include_once XOOPS_ROOT_PATH.'/class/xoopsblock.php';
+
+    function list_blocks()
+    {
+        global $xoopsUser, $xoopsConfig;
+        include_once XOOPS_ROOT_PATH.'/class/xoopslists.php';
+        //OpenTable();
+        $selmod = isset($_GET['selmod']) ? intval($_GET['selmod']) : 0;
+        $selvis = isset($_GET['selvis']) ? intval($_GET['selvis']) : 2;
+        $selgrp = isset($_GET['selgrp']) ? intval($_GET['selgrp']) : XOOPS_GROUP_USERS;
+        echo "
+        <h4 style='text-align:left;'>"._AM_BADMIN."</h4>";
+        echo '<form action="admin.php" method="get">';
+        $form = "<select size=\"1\" name=\"selmod\" onchange=\"location='".XOOPS_URL."/modules/system/admin.php?fct=blocksadmin&amp;selvis=$selvis&amp;selgrp=$selgrp&amp;selmod='+this.options[this.selectedIndex].value\">";
+        $module_handler =& xoops_gethandler('module');
+        $criteria = new CriteriaCompo(new Criteria('hasmain', 1));
+        $criteria->add(new Criteria('isactive', 1));
+        $module_list =& $module_handler->getList($criteria);
+        $toponlyblock = false;
+        $module_list[-1] = _AM_TOPPAGE;
+        $selmod = isset($_GET['selmod']) ? intval($_GET['selmod']) : -1;
+        ksort($module_list);
+        foreach ($module_list as $k => $v) {
+            $sel = '';
+            if ($k == $selmod) {
+                $sel = ' selected="selected"';
+            }
+            $form .= '<option value="'.$k.'"'.$sel.'>'.$v.'</option>';
+        }
+        $form .= '</select>&nbsp;<input type="hidden" name="fct" value="blocksadmin" />';
+        printf(_AM_SVISIBLEIN, $form);
+        $member_handler =& xoops_gethandler('member');
+        $group_list =& $member_handler->getGroupList();
+        $group_sel = _AM_GROUP." <select size=\"1\" name=\"selgrp\" onchange=\"location='".XOOPS_URL."/modules/system/admin.php?fct=blocksadmin&amp;selvis=$selvis&amp;selmod=$selmod&amp;selgrp='+this.options[this.selectedIndex].value\">";
+        $group_list[0] = '#'._AM_UNASSIGNED; // fix for displaying blocks unassigned to any group
+        foreach ($group_list as $k => $v) {
+            $sel = '';
+            if ($k == $selgrp) {
+                $sel = ' selected="selected"';
+            }
+            $group_sel .= '<option value="'.$k.'"'.$sel.'>'.$v.'</option>';
+        }
+        $group_sel .= '</select> ';
+        echo $group_sel;
+        echo _AM_VISIBLE." <select size=\"1\" name=\"selvis\" onchange=\"location='".XOOPS_URL."/modules/system/admin.php?fct=blocksadmin&amp;selmod=$selmod&amp;selgrp=$selgrp&amp;selvis='+this.options[this.selectedIndex].value\">";
+        $selvis0 = $selvis1 = $selvis2 = "";
+        switch($selvis){
+        case 0:
+            $selvis0 = 'selected="selected"';
+            break;
+        case 1:
+            $selvis1 = 'selected="selected"';
+            break;
+        case 2:
+        default:
+            $selvis2 = 'selected="selected"';
+            break;
+        }
+        echo '<option value="0" '.$selvis0.'>'._NO.'</option>';
+        echo '<option value="1" '.$selvis1.'>'._YES.'</option>';
+        echo '<option value="2" '.$selvis2.'>'._ALL.'</option>';
+        echo '</select> <input type="submit" value="'._GO.'" name="selsubmit" />';
+        echo '</form>';
+        echo "<form action='admin.php' name='blockadmin' method='post'>
+        <table width='100%' class='outer' cellpadding='4' cellspacing='1'>
+        <tr valign='middle'><th width='20%'>"._AM_BLKDESC."</th><th>"._AM_TITLE."</th><th>"._AM_MODULE."</th><th align='center' nowrap='nowrap'>"._AM_SIDE."<br />"._LEFT."-"._CENTER."-"._RIGHT."</th><th align='center'>"._AM_WEIGHT."</th><th align='center'>"._AM_VISIBLE."</th><th align='right'>"._AM_ACTION."</th></tr>
+        ";
+        if ($selvis == 2) $selvis = null;
+        if ($selgrp == 0) {
+            // get blocks that are not assigned to any groups
+            $block_arr =& XoopsBlock::getNonGroupedBlocks($selmod, $toponlyblock, $selvis, 'b.side,b.weight,b.bid');
+        } else {
+            $block_arr =& XoopsBlock::getAllByGroupModule($selgrp, $selmod, $toponlyblock, $selvis, 'b.side,b.weight,b.bid');
+        }
+        $block_count = count($block_arr);
+        $class = 'even';
+        $module_list2 =& $module_handler->getList();
+        // for custom blocks
+        $module_list2[0] = '&nbsp;';
+        foreach (array_keys($block_arr) as $i) {
+            $sel0 = $sel1 = $ssel0 = $ssel1 = $ssel2 = $ssel3 = $ssel4 = "";
+            if ( $block_arr[$i]->getVar("visible") == 1 ) {
+                $sel1 = " checked='checked'";
+            } else {
+                $sel0 = " checked='checked'";
+            }
+            if ( $block_arr[$i]->getVar("side") == XOOPS_SIDEBLOCK_LEFT){
+                $ssel0 = " checked='checked'";
+            } elseif ( $block_arr[$i]->getVar("side") == XOOPS_SIDEBLOCK_RIGHT ){
+                $ssel1 = " checked='checked'";
+            } elseif ( $block_arr[$i]->getVar("side") == XOOPS_CENTERBLOCK_LEFT ){
+                $ssel2 = " checked='checked'";
+            } elseif ( $block_arr[$i]->getVar("side") == XOOPS_CENTERBLOCK_RIGHT ){
+                $ssel4 = " checked='checked'";
+            } elseif ( $block_arr[$i]->getVar("side") == XOOPS_CENTERBLOCK_CENTER ){
+                $ssel3 = " checked='checked'";
+            }
+            if ( $block_arr[$i]->getVar("title") == "" ) {
+                $title = "&nbsp;";
+            } else {
+                $title = $block_arr[$i]->getVar("title");
+            }
+            $name = $block_arr[$i]->getVar("name");
+            echo "<tr valign='top'><td class='$class'>".$name."</td><td class='$class'>".$title."</td><td class='$class'>".$module_list2[$block_arr[$i]->getVar('mid')]."</td><td class='$class' align='center' nowrap='nowrap'><input type='radio' name='side[$i]' value='".XOOPS_SIDEBLOCK_LEFT."'$ssel0 />-<input type='radio' name='side[$i]' value='".XOOPS_CENTERBLOCK_LEFT."'$ssel2 /><input type='radio' name='side[$i]' value='".XOOPS_CENTERBLOCK_CENTER."'$ssel3 /><input type='radio' name='side[$i]' value='".XOOPS_CENTERBLOCK_RIGHT."'$ssel4 />-<input type='radio' name='side[$i]' value='".XOOPS_SIDEBLOCK_RIGHT."'$ssel1 /></td><td class='$class' align='center'><input type='text' name='weight[$i]' value='".$block_arr[$i]->getVar("weight")."' size='5' maxlength='5' /></td><td class='$class' align='center' nowrap><input type='radio' name='visible[$i]' value='1'$sel1>"._YES."&nbsp;<input type='radio' name='visible[$i]' value='0'$sel0>"._NO."</td><td class='$class' align='right'><a href=!
 'admin.php?fct=blocksadmin&amp;op=edit&amp;bid=".$block_arr[$i]->getVar("bid")."'>"._EDIT."</a>";
+            if ($block_arr[$i]->getVar('block_type') != 'S') {
+                echo "&nbsp;<a href='admin.php?fct=blocksadmin&amp;op=delete&amp;bid=".$block_arr[$i]->getVar("bid")."'>"._DELETE."</a>";
+            }
+            echo "
+            <input type='hidden' name='oldside[$i]' value='".$block_arr[$i]->getVar('side')."' />
+            <input type='hidden' name='oldweight[$i]' value='".$block_arr[$i]->getVar('weight')."' />
+            <input type='hidden' name='oldvisible[$i]' value='".$block_arr[$i]->getVar('visible')."' />
+            <input type='hidden' name='bid[$i]' value='".$i."' />
+            </td></tr>
+            ";
+            $class = ($class == 'even') ? 'odd' : 'even';
+        }
+        echo "<tr><td class='foot' align='center' colspan='7'>
+        <input type='hidden' name='fct' value='blocksadmin' />
+        <input type='hidden' name='op' value='order' />
+        ".$GLOBALS['xoopsSecurity']->getTokenHTML()."
+        <input type='submit' name='submit' value='"._SUBMIT."' />
+        </td></tr></table>
+        </form>
+        <br /><br />";
+
+        $block = array('form_title' => _AM_ADDBLOCK, 'side' => 0, 'weight' => 0, 'visible' => 1, 'title' => '', 'content' => '', 'modules' => array(-1), 'is_custom' => true, 'ctype' => 'H', 'cachetime' => 0, 'op' => 'save', 'edit_form' => false);
+        include XOOPS_ROOT_PATH.'/modules/system/admin/blocksadmin/blockform.php';
+        $form->display();
+    }
+
+    function save_block($bside, $bweight, $bvisible, $btitle, $bcontent, $bctype, $bmodule, $bcachetime)
+    {
+        global $xoopsUser;
+        if (empty($bmodule)) {
+            xoops_cp_header();
+            xoops_error(sprintf(_AM_NOTSELNG, _AM_VISIBLEIN));
+            xoops_cp_footer();
+            exit();
+        }
+        $myblock = new XoopsBlock();
+        $myblock->setVar('side', $bside);
+        $myblock->setVar('weight', $bweight);
+        $myblock->setVar('visible', $bvisible);
+        $myblock->setVar('weight', $bweight);
+        $myblock->setVar('title', $btitle);
+        $myblock->setVar('content', $bcontent);
+        $myblock->setVar('c_type', $bctype);
+        $myblock->setVar('block_type', 'C');
+        $myblock->setVar('bcachetime', $bcachetime);
+        switch ($bctype) {
+        case 'H':
+            $name = _AM_CUSTOMHTML;
+            break;
+        case 'P':
+            $name = _AM_CUSTOMPHP;
+            break;
+        case 'S':
+            $name = _AM_CUSTOMSMILE;
+            break;
+        default:
+            $name = _AM_CUSTOMNOSMILE;
+            break;
+        }
+        $myblock->setVar('name', $name);
+        $newid = $myblock->store();
+        if (!$newid) {
+            xoops_cp_header();
+            $myblock->getHtmlErrors();
+            xoops_cp_footer();
+            exit();
+        }
+        $db =& Database::getInstance();
+        foreach ($bmodule as $bmid) {
+            $sql = 'INSERT INTO '.$db->prefix('block_module_link').' (block_id, module_id) VALUES ('.$newid.', '.intval($bmid).')';
+            $db->query($sql);
+        }
+        $groups =& $xoopsUser->getGroups();
+        $count = count($groups);
+        for ($i = 0; $i < $count; $i++) {
+            $sql = "INSERT INTO ".$db->prefix('group_permission')." (gperm_groupid, gperm_itemid, gperm_name, gperm_modid) VALUES (".$groups[$i].", ".$newid.", 'block_read', 1)";
+            $db->query($sql);
+        }
+        redirect_header('admin.php?fct=blocksadmin&amp;t='.time(),1,_AM_DBUPDATED);
+        exit();
+    }
+
+    function edit_block($bid)
+    {
+        $myblock = new XoopsBlock($bid);
+        $db =& Database::getInstance();
+        $sql = 'SELECT module_id FROM '.$db->prefix('block_module_link').' WHERE block_id='.intval($bid);
+        $result = $db->query($sql);
+        $modules = array();
+        while ($row = $db->fetchArray($result)) {
+            $modules[] = intval($row['module_id']);
+        }
+        $is_custom = ($myblock->getVar('block_type') == 'C' || $myblock->getVar('block_type') == 'E') ? true : false;
+        $block = array('form_title' => _AM_EDITBLOCK, 'name' => $myblock->getVar('name'), 'side' => $myblock->getVar('side'), 'weight' => $myblock->getVar('weight'), 'visible' => $myblock->getVar('visible'), 'title' => $myblock->getVar('title', 'E'), 'content' => $myblock->getVar('content', 'E'), 'modules' => $modules, 'is_custom' => $is_custom, 'ctype' => $myblock->getVar('c_type'), 'cachetime' => $myblock->getVar('bcachetime'), 'op' => 'update', 'bid' => $myblock->getVar('bid'), 'edit_form' => $myblock->getOptions(), 'template' => $myblock->getVar('template'), 'options' => $myblock->getVar('options'));
+        echo '<a href="admin.php?fct=blocksadmin">'. _AM_BADMIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'._AM_EDITBLOCK.'<br /><br />';
+        include XOOPS_ROOT_PATH.'/modules/system/admin/blocksadmin/blockform.php';
+        $form->display();
+    }
+
+    function update_block($bid, $bside, $bweight, $bvisible, $btitle, $bcontent, $bctype, $bcachetime, $bmodule, $options=array())
+    {
+        global $xoopsConfig;
+        if (empty($bmodule)) {
+            xoops_cp_header();
+            xoops_error(sprintf(_AM_NOTSELNG, _AM_VISIBLEIN));
+            xoops_cp_footer();
+            exit();
+        }
+        $myblock = new XoopsBlock($bid);
+        $myblock->setVar('side', $bside);
+        $myblock->setVar('weight', $bweight);
+        $myblock->setVar('visible', $bvisible);
+        $myblock->setVar('title', $btitle);
+        $myblock->setVar('content', $bcontent);
+        $myblock->setVar('bcachetime', $bcachetime);
+        if (isset($options)) {
+            $options_count = count($options);
+            if ($options_count > 0) {
+                //Convert array values to comma-separated
+                for ( $i = 0; $i < $options_count; $i++ ) {
+                    if (is_array($options[$i])) {
+                        $options[$i] = implode(',', $options[$i]);
+                    }
+                }
+                $options = implode('|', $options);
+                $myblock->setVar('options', $options);
+            }
+        }
+        if ($myblock->getVar('block_type') == 'C') {
+            switch ($bctype) {
+            case 'H':
+                $name = _AM_CUSTOMHTML;
+                break;
+            case 'P':
+                $name = _AM_CUSTOMPHP;
+                break;
+            case 'S':
+                $name = _AM_CUSTOMSMILE;
+                break;
+            default:
+                $name = _AM_CUSTOMNOSMILE;
+                break;
+            }
+            $myblock->setVar('name', $name);
+            $myblock->setVar('c_type', $bctype);
+        } else {
+            $myblock->setVar('c_type', 'H');
+        }
+        $msg = _AM_DBUPDATED;
+        if ($myblock->store() != false) {
+            $db =& Database::getInstance();
+            $sql = sprintf("DELETE FROM %s WHERE block_id = %u", $db->prefix('block_module_link'), $bid);
+            $db->query($sql);
+            foreach ($bmodule as $bmid) {
+                $sql = sprintf("INSERT INTO %s (block_id, module_id) VALUES (%u, %d)", $db->prefix('block_module_link'), $bid, intval($bmid));
+                $db->query($sql);
+            }
+            include_once XOOPS_ROOT_PATH.'/class/template.php';
+            $xoopsTpl = new XoopsTpl();
+            $xoopsTpl->xoops_setCaching(2);
+            if ($myblock->getVar('template') != '') {
+                if ($xoopsTpl->is_cached('db:'.$myblock->getVar('template'), 'blk_'.$myblock->getVar('bid'))) {
+                    if (!$xoopsTpl->clear_cache('db:'.$myblock->getVar('template'), 'blk_'.$myblock->getVar('bid'))) {
+                        $msg = 'Unable to clear cache for block ID '.$bid;
+                    }
+                }
+            } else {
+                if ($xoopsTpl->is_cached('db:system_dummy.html', 'blk_'.$bid)) {
+                    if (!$xoopsTpl->clear_cache('db:system_dummy.html', 'blk_'.$bid)) {
+                        $msg = 'Unable to clear cache for block ID '.$bid;
+                    }
+                }
+            }
+        } else {
+            $msg = 'Failed update of block. ID:'.$bid;
+        }
+        redirect_header('admin.php?fct=blocksadmin&amp;t='.time(),1,$msg);
+        exit();
+    }
+
+    function delete_block($bid)
+    {
+        $myblock = new XoopsBlock($bid);
+        if ( $myblock->getVar('block_type') == 'S' ) {
+            $message = _AM_SYSTEMCANT;
+            redirect_header('admin.php?fct=blocksadmin',4,$message);
+            exit();
+        } elseif ($myblock->getVar('block_type') == 'M') {
+            // Fix for duplicated blocks created in 2.0.9 module update
+            // A module block can be deleted if there is more than 1 that
+            // has the same func_num/show_func which is mostly likely
+            // be the one that was duplicated in 2.0.9
+            if (1 >= $count = XoopsBlock::countSimilarBlocks($myblock->getVar('mid'), $myblock->getVar('func_num'), $myblock->getVar('show_func'))) {
+                $message = _AM_MODULECANT;
+                redirect_header('admin.php?fct=blocksadmin',4,$message);
+                exit();
+            }
+        }
+        xoops_confirm(array('fct' => 'blocksadmin', 'op' => 'delete_ok', 'bid' => $myblock->getVar('bid')), 'admin.php', sprintf(_AM_RUSUREDEL,$myblock->getVar('title')));
+    }
+
+    function delete_block_ok($bid)
+    {
+        $myblock = new XoopsBlock($bid);
+        $myblock->delete();
+        if ($myblock->getVar('template') != '') {
+            $tplfile_handler =& xoops_gethandler('tplfile');
+            $btemplate =& $tplfile_handler->find($GLOBALS['xoopsConfig']['template_set'], 'block', $bid);
+            if (count($btemplate) > 0) {
+                $tplfile_handler->delete($btemplate[0]);
+            }
+        }
+        redirect_header('admin.php?fct=blocksadmin&amp;t='.time(),1,_AM_DBUPDATED);
+        exit();
+    }
+
+    function order_block($bid, $weight, $visible, $side)
+    {
+        $myblock = new XoopsBlock($bid);
+        $myblock->setVar('weight', $weight);
+        $myblock->setVar('visible', $visible);
+        $myblock->setVar('side', $side);
+        $myblock->store();
+    }
+
+    function clone_block($bid)
+    {
+        global $xoopsConfig;
+        xoops_cp_header();
+        $myblock = new XoopsBlock($bid);
+        $db =& Database::getInstance();
+        $sql = 'SELECT module_id FROM '.$db->prefix('block_module_link').' WHERE block_id='.intval($bid);
+        $result = $db->query($sql);
+        $modules = array();
+        while ($row = $db->fetchArray($result)) {
+            $modules[] = intval($row['module_id']);
+        }
+        $is_custom = ($myblock->getVar('block_type') == 'C' || $myblock->getVar('block_type') == 'E') ? true : false;
+        $block = array('form_title' => _AM_CLONEBLOCK, 'name' => $myblock->getVar('name'), 'side' => $myblock->getVar('side'), 'weight' => $myblock->getVar('weight'), 'visible' => $myblock->getVar('visible'), 'content' => $myblock->getVar('content', 'N'), 'modules' => $modules, 'is_custom' => $is_custom, 'ctype' => $myblock->getVar('c_type'), 'cachetime' => $myblock->getVar('bcachetime'), 'op' => 'clone_ok', 'bid' => $myblock->getVar('bid'), 'edit_form' => $myblock->getOptions(), 'template' => $myblock->getVar('template'), 'options' => $myblock->getVar('options'));
+        echo '<a href="admin.php?fct=blocksadmin">'. _AM_BADMIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'._AM_CLONEBLOCK.'<br /><br />';
+        include XOOPS_ROOT_PATH.'/modules/system/admin/blocksadmin/blockform.php';
+        $form->display();
+        xoops_cp_footer();
+        exit();
+    }
+
+    function clone_block_ok($bid, $bside, $bweight, $bvisible, $bcachetime, $bmodule, $options)
+    {
+        global $xoopsUser;
+        $block = new XoopsBlock($bid);
+        $clone =& $block->xoopsClone();
+        if (empty($bmodule)) {
+            xoops_cp_header();
+            xoops_error(sprintf(_AM_NOTSELNG, _AM_VISIBLEIN));
+            xoops_cp_footer();
+            exit();
+        }
+        $clone->setVar('side', $bside);
+        $clone->setVar('weight', $bweight);
+        $clone->setVar('visible', $bvisible);
+        $clone->setVar('content', $bcontent);
+        //$clone->setVar('title', $btitle);
+        $clone->setVar('bcachetime', $bcachetime);
+        if ( isset($options) && (count($options) > 0) ) {
+            $options = implode('|', $options);
+            $clone->setVar('options', $options);
+        }
+        $clone->setVar('bid', 0);
+        if ($block->getVar('block_type') == 'C' || $block->getVar('block_type') == 'E') {
+            $clone->setVar('block_type', 'E');
+        } else {
+            $clone->setVar('block_type', 'D');
+        }
+        $newid = $clone->store();
+        if (!$newid) {
+            xoops_cp_header();
+            $clone->getHtmlErrors();
+            xoops_cp_footer();
+            exit();
+        }
+        if ($clone->getVar('template') != '') {
+            $tplfile_handler =& xoops_gethandler('tplfile');
+            $btemplate =& $tplfile_handler->find($GLOBALS['xoopsConfig']['template_set'], 'block', $bid);
+            if (count($btemplate) > 0) {
+                $tplclone =& $btemplate[0]->xoopsClone();
+                $tplclone->setVar('tpl_id', 0);
+                $tplclone->setVar('tpl_refid', $newid);
+                $tplman->insert($tplclone);
+            }
+        }
+        $db =& Database::getInstance();
+        foreach ($bmodule as $bmid) {
+            $sql = 'INSERT INTO '.$db->prefix('block_module_link').' (block_id, module_id) VALUES ('.$newid.', '.$bmid.')';
+            $db->query($sql);
+        }
+        $groups =& $xoopsUser->getGroups();
+        $count = count($groups);
+        for ($i = 0; $i < $count; $i++) {
+            $sql = "INSERT INTO ".$db->prefix('group_permission')." (gperm_groupid, gperm_itemid, gperm_modid, gperm_name) VALUES (".$groups[$i].", ".$newid.", 1, 'block_read')";
+            $db->query($sql);
+        }
+        redirect_header('admin.php?fct=blocksadmin&amp;t='.time(),1,_AM_DBUPDATED);
+    }
+} else {
+    echo "Access Denied";
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/blocksadmin.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,186 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+include_once XOOPS_ROOT_PATH.'/class/xoopsblock.php';
+include XOOPS_ROOT_PATH."/modules/system/admin/blocksadmin/blocksadmin.php";
+
+$op = "list";
+if ( isset($_POST) ) {
+    foreach ( $_POST as $k => $v ) {
+        $$k = $v;
+    }
+}
+
+if ( isset($_GET['op']) ) {
+    if ($_GET['op'] == "edit" || $_GET['op'] == "delete" || $_GET['op'] == "delete_ok" || $_GET['op'] == "clone") {
+        $op = $_GET['op'];
+        $bid = isset($_GET['bid']) ? intval($_GET['bid']) : 0;
+    }
+}
+
+if (isset($previewblock)) {
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=blocksadmin", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        exit();
+    }
+    xoops_cp_header();
+    include_once XOOPS_ROOT_PATH.'/class/template.php';
+    $xoopsTpl = new XoopsTpl();
+    $xoopsTpl->xoops_setCaching(0);
+    if (isset($bid)) {
+        $block['bid'] = $bid;
+        $block['form_title'] = _AM_EDITBLOCK;
+        $myblock = new XoopsBlock($bid);
+        $block['name'] = $myblock->getVar('name');
+    } else {
+        if ($op == 'save') {
+            $block['form_title'] = _AM_ADDBLOCK;
+        } else {
+            $block['form_title'] = _AM_CLONEBLOCK;
+        }
+        $myblock = new XoopsBlock();
+        $myblock->setVar('block_type', 'C');
+    }
+    $myts =& MyTextSanitizer::getInstance();
+    $myblock->setVar('title', $myts->stripSlashesGPC($btitle));
+    $myblock->setVar('content', $myts->stripSlashesGPC($bcontent));
+    $dummyhtml = '<html><head><meta http-equiv="content-type" content="text/html; charset='._CHARSET.'" /><meta http-equiv="content-language" content="'._LANGCODE.'" /><title>'.$xoopsConfig['sitename'].'</title><link rel="stylesheet" type="text/css" media="all" href="'.getcss($xoopsConfig['theme_set']).'" /></head><body><table><tr><th>'.$myblock->getVar('title').'</th></tr><tr><td>'.$myblock->getContent('S', $bctype).'</td></tr></table></body></html>';
+
+    $block['edit_form'] = false;
+    $block['template'] = '';
+    $block['op'] = $op;
+    $block['side'] = $bside;
+    $block['weight'] = $bweight;
+    $block['visible'] = $bvisible;
+    $block['title'] = $myblock->getVar('title', 'E');
+    $block['content'] = $myblock->getVar('content', 'E');
+    $block['modules'] =& $bmodule;
+    $block['ctype'] = isset($bctype) ? $bctype : $myblock->getVar('c_type');
+    $block['is_custom'] = true;
+    $block['cachetime'] = intval($bcachetime);
+    echo '<a href="admin.php?fct=blocksadmin">'. _AM_BADMIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'.$block['form_title'].'<br /><br />';
+    include XOOPS_ROOT_PATH.'/modules/system/admin/blocksadmin/blockform.php';
+    $form->display();
+    xoops_cp_footer();
+    echo '<script type="text/javascript">
+    <!--//
+    win = openWithSelfMain("", "popup", 250, 200, true);
+    win.document.clear();
+    ';
+    $lines = preg_split("/(\r\n|\r|\n)( *)/", $dummyhtml);
+    foreach ($lines as $line) {
+        echo 'win.document.writeln("'.str_replace('"', '\"', $line).'");';
+    }
+    echo '
+    win.focus();
+    win.document.close();
+    //-->
+    </script>';
+    exit();
+}
+
+if ( $op == "list" ) {
+    xoops_cp_header();
+    list_blocks();
+    xoops_cp_footer();
+    exit();
+}
+
+if ( $op == "order" ) {
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=blocksadmin", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        exit();
+    }
+    foreach (array_keys($bid) as $i) {
+        if ( $oldweight[$i] != $weight[$i] || $oldvisible[$i] != $visible[$i] || $oldside[$i] != $side[$i] )
+        order_block($bid[$i], $weight[$i], $visible[$i], $side[$i]);
+    }
+    redirect_header("admin.php?fct=blocksadmin",1,_AM_DBUPDATED);
+    exit();
+}
+
+if ( $op == "save" ) {
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=blocksadmin", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        exit();
+    }
+    save_block($bside, $bweight, $bvisible, $btitle, $bcontent, $bctype, $bmodule, $bcachetime);
+    exit();
+}
+
+if ( $op == "update" ) {
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=blocksadmin", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        exit();
+    }
+    $bcachetime = isset($bcachetime) ? intval($bcachetime) : 0;
+    $options = isset($options) ? $options : array();
+    $bcontent = isset($bcontent) ? $bcontent : '';
+    $bctype = isset($bctype) ? $bctype : '';
+    update_block($bid, $bside, $bweight, $bvisible, $btitle, $bcontent, $bctype, $bcachetime, $bmodule, $options);
+}
+
+
+if ( $op == "delete_ok" ) {
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=blocksadmin", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        exit();
+    }
+    delete_block_ok($bid);
+    exit();
+}
+
+if ( $op == "delete" ) {
+    xoops_cp_header();
+    delete_block($bid);
+    xoops_cp_footer();
+    exit();
+}
+
+if ( $op == "edit" ) {
+    xoops_cp_header();
+    edit_block($bid);
+    xoops_cp_footer();
+    exit();
+}
+/*
+if ($op == 'clone') {
+    clone_block($bid);
+}
+
+if ($op == 'clone_ok') {
+    clone_block_ok($bid, $bside, $bweight, $bvisible, $bcachetime, $bmodule, $options);
+}
+*/
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,44 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_BKAD;
+$modversion['version'] = "";
+$modversion['description'] = "Side Blocks Administration";
+$modversion['author'] = "";
+$modversion['credits'] = "The MPN SE Project";
+$modversion['help'] = "blocks.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "blocksadmin.gif";
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=blocksadmin";
+$modversion['category'] = XOOPS_SYSTEM_BLOCK;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/blocksadmin/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/comments/admin_header.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/comments/admin_header.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/comments/admin_header.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,44 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+include '../../../../mainfile.php';
+include XOOPS_ROOT_PATH.'/include/cp_functions.php';
+if (is_object($xoopsUser)) {
+	$module_handler =& xoops_gethandler('module');
+	$xoopsModule =& $module_handler->getByDirname('system');
+	if (!in_array(XOOPS_GROUP_ADMIN, $xoopsUser->getGroups())) {
+		$sysperm_handler =& xoops_gethandler('groupperm');
+		if (!$sysperm_handler->checkRight('system_admin', XOOPS_SYSTEM_COMMENT, $xoopsUser->getGroups())) {
+			redirect_header(XOOPS_URL.'/', 3, _NOPERM);;
+			exit();
+		}
+	}
+} else {
+	redirect_header(XOOPS_URL.'/', 3, _NOPERM);
+	exit();
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/comments/admin_header.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_delete.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_delete.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_delete.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,29 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+include './admin_header.php';
+include XOOPS_ROOT_PATH.'/include/comment_delete.php';
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_delete.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_edit.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_edit.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_edit.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,29 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+include './admin_header.php';
+include XOOPS_ROOT_PATH.'/include/comment_edit.php';
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_edit.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_post.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_post.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_post.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,29 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+include './admin_header.php';
+include XOOPS_ROOT_PATH.'/include/comment_post.php';
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/comments/comment_post.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/comments/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/comments/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/comments/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,165 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->getVar('mid')) ) {
+    exit("Access Denied");
+} else {
+    $op = 'list';
+    if (isset($_GET['op'])) {
+        $op = trim($_GET['op']);
+    }
+    switch ($op) {
+    case 'list':
+        include_once XOOPS_ROOT_PATH.'/include/comment_constants.php';
+        include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/comment.php';
+        $limit_array = array(10, 20, 50, 100);
+        $status_array = array(XOOPS_COMMENT_PENDING => _CM_PENDING, XOOPS_COMMENT_ACTIVE => _CM_ACTIVE, XOOPS_COMMENT_HIDDEN => _CM_HIDDEN);
+        $status_array2 = array(XOOPS_COMMENT_PENDING => '<span style="text-decoration: none; font-weight: bold; color: #00ff00;">'._CM_PENDING.'</span>', XOOPS_COMMENT_ACTIVE => '<span style="text-decoration: none; font-weight: bold; color: #ff0000;">'._CM_ACTIVE.'</span>', XOOPS_COMMENT_HIDDEN => '<span style="text-decoration: none; font-weight: bold; color: #0000ff;">'._CM_HIDDEN.'</span>');
+        $start = 0;
+        $limit = 0;
+        $otherorder = 'DESC';
+        $comments = array();
+        $status = (!isset($_GET['status']) || !in_array(intval($_GET['status']), array_keys($status_array))) ? 0 : intval($_GET['status']);
+        $module = !isset($_GET['module']) ? 0 : intval($_GET['module']);
+        $module_handler =& xoops_gethandler('module');
+        $module_array =& $module_handler->getList(new Criteria('hascomments', 1));
+        $comment_handler =& xoops_gethandler('comment');
+        $criteria = new CriteriaCompo();
+        if ($status > 0) {
+            $criteria->add(new Criteria('com_status', $status));
+        }
+        if ($module > 0) {
+            $criteria->add(new Criteria('com_modid', $module));
+        }
+        $total = $comment_handler->getCount($criteria);
+        if ($total > 0) {
+            $start = isset($_GET['start']) ? intval($_GET['start']) : 0;
+            $limit = isset($_GET['limit']) ? intval($_GET['limit']) : 0;
+            if (!in_array($limit, $limit_array)) {
+                $limit = 50;
+            }
+            $sort = (!isset($_GET['sort']) || !in_array($_GET['sort'], array('com_modid', 'com_status', 'com_created', 'com_uid', 'com_ip', 'com_title'))) ? 'com_id' : $_GET['sort'];
+            if (!isset($_GET['order']) || $_GET['order'] != 'ASC') {
+                $order = 'DESC';
+                $otherorder = 'ASC';
+            } else {
+                $order = 'ASC';
+                $otherorder = 'DESC';
+            }
+            $criteria->setSort($sort);
+            $criteria->setOrder($order);
+            $criteria->setLimit($limit);
+            $criteria->setStart($start);
+            $comments =& $comment_handler->getObjects($criteria, true);
+        }
+        $form = '<form action="admin.php" method="get">';
+        $form .= '<select name="module">';
+        $module_array[0] = _MD_AM_ALLMODS;
+        foreach ($module_array as $k => $v) {
+            $sel = '';
+            if ($k == $module) {
+                $sel = ' selected="selected"';
+            }
+            $form .= '<option value="'.$k.'"'.$sel.'>'.$v.'</option>';
+        }
+        $form .= '</select>&nbsp;<select name="status">';
+        $status_array[0] = _MD_AM_ALLSTATUS;
+        foreach ($status_array as $k => $v) {
+            $sel = '';
+            if (isset($status) && $k == $status) {
+                $sel = ' selected="selected"';
+            }
+            $form .= '<option value="'.$k.'"'.$sel.'>'.$v.'</option>';
+        }
+        $form .= '</select>&nbsp;<select name="limit">';
+        foreach ($limit_array as $k) {
+            $sel = '';
+            if (isset($limit) && $k == $limit) {
+                $sel = ' selected="selected"';
+            }
+            $form .= '<option value="'.$k.'"'.$sel.'>'.$k.'</option>';
+        }
+        $form .= '</select>&nbsp;<input type="hidden" name="fct" value="comments" /><input type="submit" value="'._GO.'" name="selsubmit" /></form>';
+
+        xoops_cp_header();
+        echo '<h4 style="text-align:left">'._MD_AM_COMMMAN.'</h4>';
+        echo $form;
+        echo '<table width="100%" class="outer" cellspacing="1"><tr><th colspan="8">'._MD_AM_LISTCOMM.'</th></tr><tr align="center"><td class="head">&nbsp;</td><td class="head" align="left"><a href="admin.php?fct=comments&amp;op=list&amp;sort=com_title&amp;order='.$otherorder.'&amp;module='.$module.'&amp;status='.$status.'&amp;start='.$start.'&amp;limit='.$limit.'">'._CM_TITLE.'</a></td><td class="head"><a href="admin.php?fct=comments&amp;op=list&amp;sort=com_created&amp;order='.$otherorder.'&amp;module='.$module.'&amp;status='.$status.'&amp;start='.$start.'&amp;limit='.$limit.'">'._CM_POSTED.'</a></td><td class="head"><a href="admin.php?fct=comments&amp;op=list&amp;sort=com_uid&amp;order='.$otherorder.'&amp;module='.$module.'&amp;status='.$status.'&amp;start='.$start.'&amp;limit='.$limit.'">'._CM_POSTER.'</a></td><td class="head"><a href="admin.php?fct=comments&amp;op=list&amp;sort=com_ip&amp;order='.$otherorder.'&amp;module='.$module.'&amp;status='.$status.'&amp;start='.$!
 start.'&amp;limit='.$limit.'">IP</a></td><td class="head"><a href="admin.php?fct=comments&amp;op=list&amp;sort=com_modid&amp;order='.$otherorder.'&amp;module='.$module.'&amp;status='.$status.'&amp;start='.$start.'&amp;limit='.$limit.'">'._MD_AM_MODULE.'</a></td><td class="head"><a href="admin.php?fct=comments&amp;op=list&amp;sort=com_status&amp;order='.$otherorder.'&amp;module='.$module.'&amp;status='.$status.'&amp;start='.$start.'&amp;limit='.$limit.'">'._CM_STATUS.'</a></td><td class="head">&nbsp;</td></tr>';
+        $class = 'even';
+        foreach (array_keys($comments) as $i) {
+            $class = ($class == 'odd') ? 'even' : 'odd';
+            $poster_uname = $xoopsConfig['anonymous'];
+            if ($comments[$i]->getVar('com_uid') > 0) {
+                $poster =& $member_handler->getUser($comments[$i]->getVar('com_uid'));
+                if (is_object($poster)) {
+                    $poster_uname = '<a href="'.XOOPS_URL.'/userinfo.php?uid='.$comments[$i]->getVar('com_uid').'">'.$poster->getVar('uname').'</a>';
+                }
+            }
+            $icon = $comments[$i]->getVar('com_icon');
+            $icon = empty( $icon ) ? '/images/icons/no_posticon.gif' : ( '/images/subject/' . htmlspecialchars( $icon, ENT_QUOTES ) );
+            $icon = '<img src="' . XOOPS_URL . $icon  . '" alt="" />';
+            
+            echo '<tr align="center"><td class="'.$class.'">'.$icon.'</td><td class="'.$class.'" align="left"><a href="admin.php?fct=comments&amp;op=jump&amp;com_id='.$i.'">'. $comments[$i]->getVar('com_title').'</a></td><td class="'.$class.'">'.formatTimestamp($comments[$i]->getVar('com_created'), 'm').'</td><td class="'.$class.'">'.$poster_uname.'</td><td class="'.$class.'">'.$comments[$i]->getVar('com_ip').'</td><td class="'.$class.'">'.$module_array[$comments[$i]->getVar('com_modid')].'</td><td class="'.$class.'">'.$status_array2[$comments[$i]->getVar('com_status')].'</td><td class="'.$class.'" align="right"><a href="admin/comments/comment_edit.php?com_id='.$i.'">'._EDIT.'</a> <a href="admin/comments/comment_delete.php?com_id='.$i.'">'._DELETE.'</a></td></tr>';
+        }
+        echo '</table>';
+        echo '<table style="width: 100%; border: 0; margin: 3px; padding: 3px;"><tr><td>'.sprintf(_MD_AM_COMFOUND, '<b>'.$total.'</b>');
+        if ($total > $limit) {
+            include_once XOOPS_ROOT_PATH.'/class/pagenav.php';
+            $nav = new XoopsPageNav($total, $limit, $start, 'start', 'fct=comments&amp;op=list&amp;limit='.$limit.'&amp;sort='.$sort.'&amp;order='.$order.'&amp;module='.$module);
+            echo '</td><td align="right">'.$nav->renderNav();
+        }
+        echo '</td></tr></table>';
+        xoops_cp_footer();
+        break;
+
+    case 'jump':
+        $com_id = (isset($_GET['com_id'])) ? intval($_GET['com_id']) : 0;
+        if ($com_id > 0) {
+            $comment_handler =& xoops_gethandler('comment');
+            $comment =& $comment_handler->get($com_id);
+            if (is_object($comment)) {
+                $module_handler =& xoops_gethandler('module');
+                $module =& $module_handler->get($comment->getVar('com_modid'));
+                $comment_config = $module->getInfo('comments');
+                header('Location: '.XOOPS_URL.'/modules/'.$module->getVar('dirname').'/'.$comment_config['pageName'].'?'.$comment_config['itemName'].'='.$comment->getVar('com_itemid').'&com_id='.$comment->getVar('com_id').'&com_rootid='.$comment->getVar('com_rootid').'&com_mode=thread&'.str_replace('&amp;', '&', $comment->getVar('com_exparams')).'#comment'.$comment->getVar('com_id'));
+                exit();
+            }
+        }
+        redirect_header('admin.php?fct=comments', 1);
+        break;
+
+    default:
+        break;
+    }
+
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/comments/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/comments/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/comments/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/comments/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_COMMENTS;
+$modversion['version'] = "";
+$modversion['description'] = "XOOPS Site Comment Manager";
+$modversion['author'] = "";
+$modversion['credits'] = "The XOOPS Project";
+$modversion['help'] = "comments.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "comments.gif";
+
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=comments";
+$modversion['category'] = XOOPS_SYSTEM_COMMENT;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/comments/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/findusers/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/findusers/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/findusers/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,458 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+$op = "form";
+
+if ( isset($_POST['op']) && $_POST['op'] == "submit" ) {
+    $op = "submit";
+}
+
+xoops_cp_header();
+//OpenTable();
+
+if ( $op == "form" ) {
+    $member_handler =& xoops_gethandler('member');
+    $acttotal = $member_handler->getUserCount(new Criteria('level', 0, '>'));
+    $inacttotal = $member_handler->getUserCount(new Criteria('level', 0));
+    include_once XOOPS_ROOT_PATH."/class/xoopsformloader.php";
+    $uname_text = new XoopsFormText("", "user_uname", 30, 60);
+    $uname_match = new XoopsFormSelectMatchOption("", "user_uname_match");
+    $uname_tray = new XoopsFormElementTray(_AM_UNAME, "&nbsp;");
+    $uname_tray->addElement($uname_match);
+    $uname_tray->addElement($uname_text);
+    $name_text = new XoopsFormText("", "user_name", 30, 60);
+    $name_match = new XoopsFormSelectMatchOption("", "user_name_match");
+    $name_tray = new XoopsFormElementTray(_AM_REALNAME, "&nbsp;");
+    $name_tray->addElement($name_match);
+    $name_tray->addElement($name_text);
+    $email_text = new XoopsFormText("", "user_email", 30, 60);
+    $email_match = new XoopsFormSelectMatchOption("", "user_email_match");
+    $email_tray = new XoopsFormElementTray(_AM_EMAIL, "&nbsp;");
+    $email_tray->addElement($email_match);
+    $email_tray->addElement($email_text);
+    $url_text = new XoopsFormText(_AM_URLC, "user_url", 30, 100);
+    //$theme_select = new XoopsFormSelectTheme(_AM_THEME, "user_theme");
+    //$timezone_select = new XoopsFormSelectTimezone(_AM_TIMEZONE, "user_timezone_offset");
+    $icq_text = new XoopsFormText("", "user_icq", 30, 100);
+    $icq_match = new XoopsFormSelectMatchOption("", "user_icq_match");
+    $icq_tray = new XoopsFormElementTray(_AM_ICQ, "&nbsp;");
+    $icq_tray->addElement($icq_match);
+    $icq_tray->addElement($icq_text);
+    $aim_text = new XoopsFormText("", "user_aim", 30, 100);
+    $aim_match = new XoopsFormSelectMatchOption("", "user_aim_match");
+    $aim_tray = new XoopsFormElementTray(_AM_AIM, "&nbsp;");
+    $aim_tray->addElement($aim_match);
+    $aim_tray->addElement($aim_text);
+    $yim_text = new XoopsFormText("", "user_yim", 30, 100);
+    $yim_match = new XoopsFormSelectMatchOption("", "user_yim_match");
+    $yim_tray = new XoopsFormElementTray(_AM_YIM, "&nbsp;");
+    $yim_tray->addElement($yim_match);
+    $yim_tray->addElement($yim_text);
+    $msnm_text = new XoopsFormText("", "user_msnm", 30, 100);
+    $msnm_match = new XoopsFormSelectMatchOption("", "user_msnm_match");
+    $msnm_tray = new XoopsFormElementTray(_AM_MSNM, "&nbsp;");
+    $msnm_tray->addElement($msnm_match);
+    $msnm_tray->addElement($msnm_text);
+    $location_text = new XoopsFormText(_AM_LOCATION, "user_from", 30, 100);
+    $occupation_text = new XoopsFormText(_AM_OCCUPATION, "user_occ", 30, 100);
+    $interest_text = new XoopsFormText(_AM_INTEREST, "user_intrest", 30, 100);
+
+    //$bio_text = new XoopsFormText(_AM_EXTRAINFO, "user_bio", 30, 100);
+    $lastlog_more = new XoopsFormText(_AM_LASTLOGMORE, "user_lastlog_more", 10, 5);
+    $lastlog_less = new XoopsFormText(_AM_LASTLOGLESS, "user_lastlog_less", 10, 5);
+    $reg_more = new XoopsFormText(_AM_REGMORE, "user_reg_more", 10, 5);
+    $reg_less = new XoopsFormText(_AM_REGLESS, "user_reg_less", 10, 5);
+    $posts_more = new XoopsFormText(_AM_POSTSMORE, "user_posts_more", 10, 5);
+    $posts_less = new XoopsFormText(_AM_POSTSLESS, "user_posts_less", 10, 5);
+    $mailok_radio = new XoopsFormRadio(_AM_SHOWMAILOK, "user_mailok", "both");
+    $mailok_radio->addOptionArray(array("mailok"=>_AM_MAILOK, "mailng"=>_AM_MAILNG, "both"=>_AM_BOTH));
+    $type_radio = new XoopsFormRadio(_AM_SHOWTYPE, "user_type", "actv");
+    $type_radio->addOptionArray(array("actv"=>_AM_ACTIVE, "inactv"=>_AM_INACTIVE, "both"=>_AM_BOTH));
+    $sort_select = new XoopsFormSelect(_AM_SORT, "user_sort");
+    $sort_select->addOptionArray(array("uname"=>_AM_UNAME,"email"=>_AM_EMAIL,"last_login"=>_AM_LASTLOGIN,"user_regdate"=>_AM_REGDATE,"posts"=>_AM_POSTS));
+    $order_select = new XoopsFormSelect(_AM_ORDER, "user_order");
+    $order_select->addOptionArray(array("ASC"=>_AM_ASC,"DESC"=>_AM_DESC));
+    $limit_text = new XoopsFormText(_AM_LIMIT, "limit", 6, 2);
+    $fct_hidden = new XoopsFormHidden("fct", "findusers");
+    $op_hidden = new XoopsFormHidden("op", "submit");
+    $submit_button = new XoopsFormButton("", "user_submit", _SUBMIT, "submit");
+
+    $form = new XoopsThemeForm(_AM_FINDUS, "uesr_findform", "admin.php", 'post', true);
+    $form->addElement($uname_tray);
+    $form->addElement($name_tray);
+    $form->addElement($email_tray);
+    //$form->addElement($theme_select);
+    //$form->addElement($timezone_select);
+    $form->addElement($icq_tray);
+    $form->addElement($aim_tray);
+    $form->addElement($yim_tray);
+    $form->addElement($msnm_tray);
+    $form->addElement($url_text);
+    $form->addElement($location_text);
+    $form->addElement($occupation_text);
+    $form->addElement($interest_text);
+    //$form->addElement($bio_text);
+    $form->addElement($lastlog_more);
+    $form->addElement($lastlog_less);
+    $form->addElement($reg_more);
+    $form->addElement($reg_less);
+    $form->addElement($posts_more);
+    $form->addElement($posts_less);
+    $form->addElement($mailok_radio);
+    $form->addElement($type_radio);
+    $form->addElement($sort_select);
+    $form->addElement($order_select);
+    $form->addElement($fct_hidden);
+    $form->addElement($limit_text);
+    $form->addElement($op_hidden);
+    // if this is to find users for a specific group
+    if ( !empty($_GET['group']) && intval($_GET['group']) > 0 ) {
+        $group_hidden = new XoopsFormHidden("group", intval($_GET['group']));
+        $form->addElement($group_hidden);
+    }
+    $form->addElement($submit_button);
+    echo "<h4 style='text-align:left;'>"._AM_FINDUS."</h4>(".sprintf(_AM_ACTUS, "<span style='color:#ff0000;'>$acttotal</span>")." ".sprintf(_AM_INACTUS, "<span style='color:#ff0000;'>$inacttotal</span>").")";
+    $form->display();
+}
+
+elseif ($op == "submit" & $GLOBALS['xoopsSecurity']->check()) {
+    $myts =& MyTextSanitizer::getInstance();
+    $criteria = new CriteriaCompo();
+    if ( !empty($_POST['user_uname']) ) {
+        $match = (!empty($_POST['user_uname_match'])) ? intval($_POST['user_uname_match']) : XOOPS_MATCH_START;
+        switch ($match) {
+        case XOOPS_MATCH_START:
+            $criteria->add(new Criteria('uname', $myts->addSlashes(trim($_POST['user_uname'])).'%', 'LIKE'));
+            break;
+        case XOOPS_MATCH_END:
+            $criteria->add(new Criteria('uname', '%'.$myts->addSlashes(trim($_POST['user_uname'])), 'LIKE'));
+            break;
+        case XOOPS_MATCH_EQUAL:
+            $criteria->add(new Criteria('uname', $myts->addSlashes(trim($_POST['user_uname']))));
+            break;
+        case XOOPS_MATCH_CONTAIN:
+            $criteria->add(new Criteria('uname', '%'.$myts->addSlashes(trim($_POST['user_uname'])).'%', 'LIKE'));
+            break;
+        }
+    }
+    if ( !empty($_POST['user_name']) ) {
+        $match = (!empty($_POST['user_name_match'])) ? intval($_POST['user_name_match']) : XOOPS_MATCH_START;
+        switch ($match) {
+        case XOOPS_MATCH_START:
+            $criteria->add(new Criteria('name', $myts->addSlashes(trim($_POST['user_name'])).'%', 'LIKE'));
+            break;
+        case XOOPS_MATCH_END:
+            $criteria->add(new Criteria('name', '%'.$myts->addSlashes(trim($_POST['user_name'])), 'LIKE'));
+            break;
+        case XOOPS_MATCH_EQUAL:
+            $criteria->add(new Criteria('name', $myts->addSlashes(trim($_POST['user_name']))));
+            break;
+        case XOOPS_MATCH_CONTAIN:
+            $criteria->add(new Criteria('name', '%'.$myts->addSlashes(trim($_POST['user_name'])).'%', 'LIKE'));
+            break;
+        }
+    }
+    if ( !empty($_POST['user_email']) ) {
+        $match = (!empty($_POST['user_email_match'])) ? intval($_POST['user_email_match']) : XOOPS_MATCH_START;
+        switch ($match) {
+        case XOOPS_MATCH_START:
+            $criteria->add(new Criteria('email', $myts->addSlashes(trim($_POST['user_email'])).'%', 'LIKE'));
+            break;
+        case XOOPS_MATCH_END:
+            $criteria->add(new Criteria('email', '%'.$myts->addSlashes(trim($_POST['user_email'])), 'LIKE'));
+            break;
+        case XOOPS_MATCH_EQUAL:
+            $criteria->add(new Criteria('email', $myts->addSlashes(trim($_POST['user_email']))));
+            break;
+        case XOOPS_MATCH_CONTAIN:
+            $criteria->add(new Criteria('email', '%'.$myts->addSlashes(trim($_POST['user_email'])).'%', 'LIKE'));
+            break;
+        }
+    }
+    if ( !empty($_POST['user_url']) ) {
+        $url = formatURL(trim($_POST['user_url']));
+        $criteria->add(new Criteria('url', $url.'%', 'LIKE'));
+    }
+    if ( !empty($_POST['user_icq']) ) {
+        $match = (!empty($_POST['user_icq_match'])) ? intval($_POST['user_icq_match']) : XOOPS_MATCH_START;
+        switch ($match) {
+        case XOOPS_MATCH_START:
+            $criteria->add(new Criteria('user_icq', $myts->addSlashes(trim($_POST['user_icq'])).'%', 'LIKE'));
+            break;
+        case XOOPS_MATCH_END:
+            $criteria->add(new Criteria('user_icq', '%'.$myts->addSlashes(trim($_POST['user_icq'])), 'LIKE'));
+            break;
+        case XOOPS_MATCH_EQUAL:
+            $criteria->add(new Criteria('user_icq', '%'.$myts->addSlashes(trim($_POST['user_icq']))));
+            break;
+        case XOOPS_MATCH_CONTAIN:
+            $criteria->add(new Criteria('user_icq', '%'.$myts->addSlashes(trim($_POST['user_icq'])).'%', 'LIKE'));
+            break;
+        }
+    }
+    if ( !empty($_POST['user_aim']) ) {
+        $match = (!empty($_POST['user_aim_match'])) ? intval($_POST['user_aim_match']) : XOOPS_MATCH_START;
+        switch ($match) {
+        case XOOPS_MATCH_START:
+            $criteria->add(new Criteria('user_aim', $myts->addSlashes(trim($_POST['user_aim'])).'%', 'LIKE'));
+            break;
+        case XOOPS_MATCH_END:
+            $criteria->add(new Criteria('user_aim', '%'.$myts->addSlashes(trim($_POST['user_aim'])), 'LIKE'));
+            break;
+        case XOOPS_MATCH_EQUAL:
+            $criteria->add(new Criteria('user_aim', $myts->addSlashes(trim($_POST['user_aim']))));
+            break;
+        case XOOPS_MATCH_CONTAIN:
+            $criteria->add(new Criteria('user_aim', '%'.$myts->addSlashes(trim($_POST['user_aim'])).'%', 'LIKE'));
+            break;
+        }
+    }
+    if ( !empty($_POST['user_yim']) ) {
+        $match = (!empty($_POST['user_yim_match'])) ? intval($_POST['user_yim_match']) : XOOPS_MATCH_START;
+        switch ($match) {
+        case XOOPS_MATCH_START:
+            $criteria->add(new Criteria('user_yim', $myts->addSlashes(trim($_POST['user_yim'])).'%', 'LIKE'));
+            break;
+        case XOOPS_MATCH_END:
+            $criteria->add(new Criteria('user_yim', '%'.$myts->addSlashes(trim($_POST['user_yim'])), 'LIKE'));
+            break;
+        case XOOPS_MATCH_EQUAL:
+            $criteria->add(new Criteria('user_yim', $myts->addSlashes(trim($_POST['user_yim']))));
+            break;
+        case XOOPS_MATCH_CONTAIN:
+            $criteria->add(new Criteria('user_yim', '%'.$myts->addSlashes(trim($_POST['user_yim'])).'%', 'LIKE'));
+            break;
+        }
+    }
+    if ( !empty($_POST['user_msnm']) ) {
+        $match = (!empty($_POST['user_msnm_match'])) ? intval($_POST['user_msnm_match']) : XOOPS_MATCH_START;
+        switch ($match) {
+        case XOOPS_MATCH_START:
+            $criteria->add(new Criteria('user_msnm', $myts->addSlashes(trim($_POST['user_msnm'])).'%', 'LIKE'));
+            break;
+        case XOOPS_MATCH_END:
+            $criteria->add(new Criteria('user_msnm', '%'.$myts->addSlashes(trim($_POST['user_msnm'])), 'LIKE'));
+            break;
+        case XOOPS_MATCH_EQUAL:
+            $criteria->add(new Criteria('user_msnm', '%'.$myts->addSlashes(trim($_POST['user_msnm']))));
+            break;
+        case XOOPS_MATCH_CONTAIN:
+            $criteria->add(new Criteria('user_msnm', '%'.$myts->addSlashes(trim($_POST['user_msnm'])).'%', 'LIKE'));
+            break;
+        }
+    }
+    if ( !empty($_POST['user_from']) ) {
+        $criteria->add(new Criteria('user_from', '%'.$myts->addSlashes(trim($_POST['user_from'])).'%', 'LIKE'));
+    }
+    if ( !empty($_POST['user_intrest']) ) {
+        $criteria->add(new Criteria('user_intrest', '%'.$myts->addSlashes(trim($_POST['user_intrest'])).'%', 'LIKE'));
+    }
+    if ( !empty($_POST['user_occ']) ) {
+        $criteria->add(new Criteria('user_occ', '%'.$myts->addSlashes(trim($_POST['user_occ'])).'%', 'LIKE'));
+    }
+
+    if ( !empty($_POST['user_lastlog_more']) && is_numeric($_POST['user_lastlog_more']) ) {
+        $f_user_lastlog_more = intval(trim($_POST['user_lastlog_more']));
+        $time = time() - (60 * 60 * 24 * $f_user_lastlog_more);
+        if ( $time > 0 ) {
+            $criteria->add(new Criteria('last_login', $time, '<'));
+        }
+    }
+    if ( !empty($_POST['user_lastlog_less']) && is_numeric($_POST['user_lastlog_less']) ) {
+        $f_user_lastlog_less = intval(trim($_POST['user_lastlog_less']));
+        $time = time() - (60 * 60 * 24 * $f_user_lastlog_less);
+        if ( $time > 0 ) {
+            $criteria->add(new Criteria('last_login', $time, '>'));
+        }
+    }
+    if ( !empty($_POST['user_reg_more']) && is_numeric($_POST['user_reg_more']) ) {
+        $f_user_reg_more = intval(trim($_POST['user_reg_more']));
+        $time = time() - (60 * 60 * 24 * $f_user_reg_more);
+        if ( $time > 0 ) {
+            $criteria->add(new Criteria('user_regdate', $time, '<'));
+        }
+    }
+    if ( !empty($_POST['user_reg_less']) && is_numeric($_POST['user_reg_less']) ) {
+        $f_user_reg_less = intval($_POST['user_reg_less']);
+        $time = time() - (60 * 60 * 24 * $f_user_reg_less);
+        if ( $time > 0 ) {
+            $criteria->add(new Criteria('user_regdate', $time, '>'));
+        }
+    }
+    if ( !empty($_POST['user_posts_more']) && is_numeric($_POST['user_posts_more']) ) {
+        $criteria->add(new Criteria('posts', intval($_POST['user_posts_more']), '>'));
+    }
+    if ( !empty($_POST['user_posts_less']) && is_numeric($_POST['user_posts_less']) ) {
+        $criteria->add(new Criteria('posts', intval($_POST['user_posts_less']), '<'));
+    }
+    if ( isset($_POST['user_mailok']) ) {
+        if ( $_POST['user_mailok'] == "mailng" ) {
+            $criteria->add(new Criteria('user_mailok', 0));
+        } elseif ( $_POST['user_mailok'] == "mailok" ) {
+            $criteria->add(new Criteria('user_mailok', 1));
+        } else {
+            $criteria->add(new Criteria('user_mailok', 0, '>='));
+        }
+    }
+    if ( isset($_POST['user_type']) ) {
+        if ( $_POST['user_type'] == "inactv" ) {
+            $criteria->add(new Criteria('level', 0, '='));
+        } elseif ( $_POST['user_type'] == "actv" ) {
+            $criteria->add(new Criteria('level', 0, '>'));
+        } else {
+            $criteria->add(new Criteria('level', 0, '>='));
+        }
+    }
+
+    $validsort = array("uname", "email", "last_login", "user_regdate", "posts");
+    $sort = (!in_array($_POST['user_sort'], $validsort)) ? "uname" : $_POST['user_sort'];
+    $order = "ASC";
+    if ( isset($_POST['user_order']) && $_POST['user_order'] == "DESC") {
+        $order = "DESC";
+    }
+    $limit = (!empty($_POST['limit'])) ? intval($_POST['limit']) : 50;
+    if ( $limit == 0 || $limit > 50 ) {
+        $limit = 50;
+    }
+    $start = (!empty($_POST['start'])) ? intval($_POST['start']) : 0;
+    $member_handler =& xoops_gethandler('member');
+    $total = $member_handler->getUserCount($criteria);
+    echo "<a href='admin.php?fct=findusers&amp;op=form'>". _AM_FINDUS ."</a>&nbsp;<span style='font-weight:bold;'>&raquo;&raquo;</span>&nbsp;". _AM_RESULTS."<br /><br />";
+    if ( $total == 0 ) {
+        echo "<h4>"._AM_NOFOUND,"</h4>";
+    } elseif ( $start < $total ) {
+        echo sprintf(_AM_USERSFOUND, $total)."<br />";
+        echo "<form action='admin.php' method='post' name='memberslist' id='memberslist'><input type='hidden' name='op' value='delete_many' />
+        <table width='100%' border='0' cellspacing='1' cellpadding='4' class='outer'><tr><th align='center'><input type='checkbox' name='memberslist_checkall' id='memberslist_checkall' onclick='xoopsCheckAll(\"memberslist\", \"memberslist_checkall\");' /></th><th align='center'>"._AM_AVATAR."</th><th align='center'>"._AM_UNAME."</th><th align='center'>"._AM_REALNAME."</th><th align='center'>"._AM_EMAIL."</th><th align='center'>"._AM_PM."</th><th align='center'>"._AM_URL."</th><th align='center'>"._AM_REGDATE."</th><th align='center'>"._AM_LASTLOGIN."</th><th align='center'>"._AM_POSTS."</th><th align='center'>&nbsp;</th></tr>";
+        $criteria->setSort($sort);
+        $criteria->setOrder($order);
+        $criteria->setLimit($limit);
+        $criteria->setStart($start);
+        $foundusers =& $member_handler->getUsers($criteria, true);
+        $ucount = 0;
+        foreach (array_keys($foundusers) as $j) {
+            if ($ucount % 2 == 0) {
+                $class = 'even';
+            } else {
+                $class = 'odd';
+            }
+            $ucount++;
+            $fuser_avatar = $foundusers[$j]->getVar("user_avatar") ? "<img src='".XOOPS_UPLOAD_URL."/".$foundusers[$j]->getVar("user_avatar")."' alt='' />" : "&nbsp;";
+            $fuser_name = $foundusers[$j]->getVar("name") ? $foundusers[$j]->getVar("name") : "&nbsp;";
+            echo "<tr class='$class'><td align='center'><input type='checkbox' name='memberslist_id[]' id='memberslist_id[]' value='".$foundusers[$j]->getVar("uid")."' /><input type='hidden' name='memberslist_uname[".$foundusers[$j]->getVar("uid")."]' id='memberslist_uname[]' value='".$foundusers[$j]->getVar("uname")."' /></td>";
+            echo "<td>$fuser_avatar</td><td><a href='".XOOPS_URL."/userinfo.php?uid=".$foundusers[$j]->getVar("uid")."'>".$foundusers[$j]->getVar("uname")."</a></td><td>".$fuser_name."</td><td align='center'><a href='mailto:".$foundusers[$j]->getVar("email")."'><img src='".XOOPS_URL."/images/icons/email.gif' border='0' alt='";
+            printf(_SENDEMAILTO,$foundusers[$j]->getVar("uname", "E"));
+            echo "' /></a></td><td align='center'><a href='javascript:openWithSelfMain(\"".XOOPS_URL."/pmlite.php?send2=1&amp;to_userid=".$foundusers[$j]->getVar("uid")."\",\"pmlite\",450,370);'><img src='".XOOPS_URL."/images/icons/pm.gif' border='0' alt='";
+            printf(_SENDPMTO,$foundusers[$j]->getVar("uname", "E"));
+            echo "' /></a></td><td align='center'>";
+            if ( $foundusers[$j]->getVar("url","E") != "" ) {
+                echo "<a href='".$foundusers[$j]->getVar("url","E")."' target='_blank'><img src='".XOOPS_URL."/images/icons/www.gif' border='0' alt='"._VISITWEBSITE."' /></a>";
+            } else {
+                echo "&nbsp;";
+            }
+            echo "</td><td align='center'>".formatTimeStamp($foundusers[$j]->getVar("user_regdate"),"s")."</td><td align='center'>";
+            if ( $foundusers[$j]->getVar("last_login") != 0 ) {
+                echo formatTimeStamp($foundusers[$j]->getVar("last_login"),"m");
+            } else {
+                echo "&nbsp;";
+            }
+            echo "</td><td align='center'>".$foundusers[$j]->getVar("posts")."</td>";
+            echo "<td align='center'><a href='".XOOPS_URL."/modules/system/admin.php?fct=users&amp;uid=".$foundusers[$j]->getVar("uid")."&amp;op=modifyUser'>"._EDIT."</a></td></tr>\n";
+        }
+        echo "<tr class='foot'><td><select name='fct'><option value='users'>"._DELETE."</option><option value='mailusers'>"._AM_SENDMAIL."</option>";
+        $group = !empty($_POST['group']) ? intval($_POST['group']) : 0;
+        if ( $group > 0 ) {
+            $member_handler =& xoops_gethandler('member');
+            $add2group =& $member_handler->getGroup($group);
+            echo "<option value='groups' selected='selected'>".sprintf(_AM_ADD2GROUP, $add2group->getVar('name'))."</option>";
+        }
+        echo "</select>&nbsp;";
+        if ( $group > 0 ) {
+            echo "<input type='hidden' name='groupid' value='".$group."' />";
+        }
+        echo "</td><td colspan='10'>".$GLOBALS['xoopsSecurity']->getTokenHTML()."<input type='submit' value='"._SUBMIT."' /></td></tr></table></form>\n";
+        $totalpages = ceil($total / $limit);
+        if ( $totalpages > 1 ) {
+            $hiddenform = "<form name='findnext' action='admin.php' method='post'>";
+            foreach ( $_POST as $k => $v ) {
+                if ($k == 'XOOPS_TOKEN_REQUEST') {
+                    // regenerate token value
+                    $hiddenform .= $GLOBALS['xoopsSecurity']->getTokenHTML()."\n";
+                } else {
+                    $hiddenform .= "<input type='hidden' name='".$myts->htmlSpecialChars($k)."' value='".$myts->htmlSpecialChars($myts->stripSlashesGPC($v))."' />\n";
+                }
+            }
+            if (!isset($_POST['limit'])) {
+                $hiddenform .= "<input type='hidden' name='limit' value='".$limit."' />\n";
+            }
+            if (!isset($_POST['start'])) {
+                $hiddenform .= "<input type='hidden' name='start' value='".$start."' />\n";
+            }
+            $prev = $start - $limit;
+            if ( $start - $limit >= 0 ) {
+                $hiddenform .= "<a href='#0' onclick='javascript:document.findnext.start.value=".$prev.";document.findnext.submit();'>"._AM_PREVIOUS."</a>&nbsp;\n";
+            }
+            $counter = 1;
+            $currentpage = ($start+$limit) / $limit;
+            while ( $counter <= $totalpages ) {
+                if ( $counter == $currentpage ) {
+                    $hiddenform .= "<b>".$counter."</b> ";
+                } elseif ( ($counter > $currentpage-4 && $counter < $currentpage+4) || $counter == 1 || $counter == $totalpages ) {
+                    if ( $counter == $totalpages && $currentpage < $totalpages-4 ) {
+                        $hiddenform .= "... ";
+                    }
+                    $hiddenform .= "<a href='#".$counter."' onclick='javascript:document.findnext.start.value=".($counter-1)*$limit.";document.findnext.submit();'>".$counter."</a> ";
+                    if ( $counter == 1 && $currentpage > 5 ) {
+                        $hiddenform .= "... ";
+                    }
+                }
+                $counter++;
+            }
+            $next = $start+$limit;
+            if ( $total > $next ) {
+                $hiddenform .= "&nbsp;<a href='#".$total."' onclick='javascript:document.findnext.start.value=".$next.";document.findnext.submit();'>"._AM_NEXT."</a>\n";
+            }
+            $hiddenform .= "</form>";
+            echo "<div style='text-align:center'>".$hiddenform."<br />";
+            printf(_AM_USERSFOUND, $total);
+            echo "</div>";
+        }
+    }
+}
+else {
+    redirect_header('admin.php?fct=findusers', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+}
+//CloseTable();
+xoops_cp_footer();
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/findusers/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/findusers/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/findusers/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/findusers/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_FINDUSER;
+$modversion['version'] = "";
+$modversion['description'] = "Find Users";
+$modversion['author'] = "Kazumi Ono<br>( http://www.myweb.ne.jp/ )";
+$modversion['credits'] = "The XOOPS Project";
+$modversion['help'] = "findusers.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "users.gif";
+
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=findusers";
+$modversion['category'] = XOOPS_SYSTEM_FINDU;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/findusers/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/groupperm.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/groupperm.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/groupperm.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,70 @@
+<?php
+// $Id$
+
+include '../../../include/cp_header.php';
+$modid = isset($_POST['modid']) ? intval($_POST['modid']) : 0;
+
+// we dont want system module permissions to be changed here
+if ($modid <= 1 || !is_object($xoopsUser) || !$xoopsUser->isAdmin($modid)) {
+	redirect_header(XOOPS_URL.'/index.php', 1, _NOPERM);
+	exit();
+}
+$module_handler =& xoops_gethandler('module');
+$module =& $module_handler->get($modid);
+if (!is_object($module) || !$module->getVar('isactive')) {
+	redirect_header(XOOPS_URL.'/admin.php', 1, _MODULENOEXIST);
+	exit();
+}
+$member_handler =& xoops_gethandler('member');
+$group_list =& $member_handler->getGroupList();
+if (is_array($_POST['perms']) && !empty($_POST['perms'])) {
+	$gperm_handler = xoops_gethandler('groupperm');
+	foreach ($_POST['perms'] as $perm_name => $perm_data) {
+		if (false != $gperm_handler->deleteByModule($modid, $perm_name)) {
+			foreach ($perm_data['groups'] as $group_id => $item_ids) {
+				foreach ($item_ids as $item_id => $selected) {
+					if ($selected == 1) {
+						// make sure that all parent ids are selected as well
+						if ($perm_data['parents'][$item_id] != '') {
+							$parent_ids = explode(':', $perm_data['parents'][$item_id]);
+							foreach ($parent_ids as $pid) {
+								if ($pid != 0 && !in_array($pid, array_keys($item_ids))) {
+									// one of the parent items were not selected, so skip this item
+									$msg[] = sprintf(_MD_AM_PERMADDNG, '<b>'.$perm_name.'</b>', '<b>'.$perm_data['itemname'][$item_id].'</b>', '<b>'.$group_list[$group_id].'</b>').' ('._MD_AM_PERMADDNGP.')';
+									continue 2;
+								}
+							}
+						}
+						$gperm =& $gperm_handler->create();
+						$gperm->setVar('gperm_groupid', $group_id);
+						$gperm->setVar('gperm_name', $perm_name);
+						$gperm->setVar('gperm_modid', $modid);
+						$gperm->setVar('gperm_itemid', $item_id);
+						if (!$gperm_handler->insert($gperm)) {
+							$msg[] = sprintf(_MD_AM_PERMADDNG, '<b>'.$perm_name.'</b>', '<b>'.$perm_data['itemname'][$item_id].'</b>', '<b>'.$group_list[$group_id].'</b>');
+						} else {
+							$msg[] = sprintf(_MD_AM_PERMADDOK, '<b>'.$perm_name.'</b>', '<b>'.$perm_data['itemname'][$item_id].'</b>', '<b>'.$group_list[$group_id].'</b>');
+						}
+						unset($gperm);
+					}
+				}
+			}
+		} else {
++ $msg[] = sprintf(_MD_AM_PERMRESETNG, $module->getVar('name').'('.$perm_name.')');
+		}
+	}
+}
+
+$backlink = XOOPS_URL.'/admin.php';
+if ($module->getVar('hasadmin')) {
+    $adminindex = isset($_POST['redirect_url']) ? $_POST['redirect_url'] : $module->getInfo('adminindex');
+	if ($adminindex) {
+		$backlink = XOOPS_URL.'/modules/'.$module->getVar('dirname').'/'.$adminindex;
+	}
+}
+
+$msg[] = '<br /><br /><a href="'.$backlink.'">'._BACK.'</a>';
+xoops_cp_header();
+xoops_result($msg);
+xoops_cp_footer();
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/groupperm.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/groups/groupform.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/groups/groupform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/groups/groupform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,113 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+include_once XOOPS_ROOT_PATH."/class/xoopsformloader.php";
+
+$name_text = new XoopsFormText(_AM_NAME, "name", 30, 50, $name_value);
+$desc_text = new XoopsFormTextArea(_AM_DESCRIPTION, "desc", $desc_value);
+
+$s_cat_checkbox = new XoopsFormCheckBox(_AM_SYSTEMRIGHTS, "system_catids[]", $s_cat_value);
+//if (isset($s_cat_disable) && $s_cat_disable) {
+//  $s_cat_checkbox->setExtra('checked="checked" disabled="disabled"');
+//}
+include_once(XOOPS_ROOT_PATH.'/modules/system/constants.php');
+$handle = opendir(XOOPS_ROOT_PATH.'/modules/system/admin');
+while (false != $file = readdir($handle)) {
+    if (strtolower($file) != 'cvs' && !preg_match("/[.]/", $file) && is_dir(XOOPS_ROOT_PATH.'/modules/system/admin/'.$file)) {
+        include XOOPS_ROOT_PATH.'/modules/system/admin/'.$file.'/xoops_version.php';
+        if (!empty($modversion['category'])) {
+            $s_cat_checkbox->addOption($modversion['category'], $modversion['name']);
+        }
+        unset($modversion);
+    }
+}
+
+$a_mod_checkbox = new XoopsFormCheckBox(_AM_ACTIVERIGHTS, "admin_mids[]", $a_mod_value);
+$module_handler =& xoops_gethandler('module');
+$criteria = new CriteriaCompo(new Criteria('hasadmin', 1));
+$criteria->add(new Criteria('isactive', 1));
+$criteria->add(new Criteria('dirname', 'system', '<>'));
+$a_mod_checkbox->addOptionArray($module_handler->getList($criteria));
+
+$r_mod_checkbox = new XoopsFormCheckBox(_AM_ACCESSRIGHTS, "read_mids[]", $r_mod_value);
+$criteria = new CriteriaCompo(new Criteria('hasmain', 1));
+$criteria->add(new Criteria('isactive', 1));
+$r_mod_checkbox->addOptionArray($module_handler->getList($criteria));
+
+$r_lblock_checkbox = new XoopsFormCheckBox('<b>'._LEFT.'</b><br />', "read_bids[]", $r_block_value);
+$new_blocks_array = array();
+$blocks_array = XoopsBlock::getAllBlocks("list", XOOPS_SIDEBLOCK_LEFT);
+foreach ($blocks_array as $key=>$value) {
+    $new_blocks_array[$key] = "<a href='".XOOPS_URL."/modules/system/admin.php?fct=blocksadmin&amp;op=edit&amp;bid=".$key."'>".$value." (ID: ".$key.")</a>";
+}
+$r_lblock_checkbox->addOptionArray($new_blocks_array);
+
+$r_cblock_checkbox = new XoopsFormCheckBox("<b>"._CENTER."</b><br />", "read_bids[]", $r_block_value);
+$new_blocks_array = array();
+$blocks_array = XoopsBlock::getAllBlocks("list", XOOPS_CENTERBLOCK_ALL);
+foreach ($blocks_array as $key=>$value) {
+    $new_blocks_array[$key] = "<a href='".XOOPS_URL."/modules/system/admin.php?fct=blocksadmin&amp;op=edit&amp;bid=".$key."'>".$value." (ID: ".$key.")</a>";
+}
+$r_cblock_checkbox->addOptionArray($new_blocks_array);
+
+$r_rblock_checkbox = new XoopsFormCheckBox("<b>"._RIGHT."</b><br />", "read_bids[]", $r_block_value);
+$new_blocks_array = array();
+$blocks_array = XoopsBlock::getAllBlocks("list", XOOPS_SIDEBLOCK_RIGHT);
+foreach ($blocks_array as $key=>$value) {
+    $new_blocks_array[$key] = "<a href='".XOOPS_URL."/modules/system/admin.php?fct=blocksadmin&amp;op=edit&amp;bid=".$key."'>".$value." (ID: ".$key.")</a>";
+}
+$r_rblock_checkbox->addOptionArray($new_blocks_array);
+
+$r_block_tray = new XoopsFormElementTray(_AM_BLOCKRIGHTS, "<br /><br />");
+$r_block_tray->addElement($r_lblock_checkbox);
+$r_block_tray->addElement($r_cblock_checkbox);
+$r_block_tray->addElement($r_rblock_checkbox);
+
+$op_hidden = new XoopsFormHidden("op", $op_value);
+$fct_hidden = new XoopsFormHidden("fct", "groups");
+$submit_button = new XoopsFormButton("", "groupsubmit", $submit_value, "submit");
+$form = new XoopsThemeForm($form_title, "groupform", "admin.php", "post", true);
+$form->addElement($name_text);
+$form->addElement($desc_text);
+$form->addElement($s_cat_checkbox);
+$form->addElement($a_mod_checkbox);
+$form->addElement($r_mod_checkbox);
+$form->addElement($r_block_tray);
+$form->addElement($op_hidden);
+$form->addElement($fct_hidden);
+if ( !empty($g_id_value) ) {
+    $g_id_hidden = new XoopsFormHidden("g_id", $g_id_value);
+    $form->addElement($g_id_hidden);
+}
+$form->addElement($submit_button);
+$form->setRequired($name_text);
+$form->display();
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/groups/groupform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/groups/groups.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/groups/groups.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/groups/groups.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,200 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+
+/*********************************************************/
+/* Admin/Authors Functions                               */
+/*********************************************************/
+function displayGroups()
+{
+    xoops_cp_header();
+    //OpenTable();
+    echo "<h4 style='text-align:left'>"._AM_EDITADG."</h4>";
+    $member_handler =& xoops_gethandler('member');
+    $groups =& $member_handler->getGroups();
+        echo "<table class='outer' width='40%' cellpadding='4' cellspacing='1'><tr><th colspan='2'>"._AM_EDITADG."</th></tr>";
+    $count = count($groups);
+    for ($i = 0; $i < $count; $i++) {
+        $id = $groups[$i]->getVar('groupid');
+                echo '<tr><td class="head">'.$groups[$i]->getVar('name').'</td>';
+        echo '<td class="even"><a href="admin.php?fct=groups&amp;op=modify&amp;g_id='.$id.'">'._AM_MODIFY.'</a>';
+        if (XOOPS_GROUP_ADMIN == $id || XOOPS_GROUP_USERS == $id || XOOPS_GROUP_ANONYMOUS == $id) {
+            echo '</td></tr>';
+        } else {
+            echo '&nbsp;<a href="admin.php?fct=groups&amp;op=del&amp;g_id='.$id.'">'._AM_DELETE.'</a></td></tr>';
+        }
+    }
+    echo "</table>";
+    $name_value = "";
+    $desc_value = "";
+    $s_cat_value = '';
+    $a_mod_value = array();
+    $r_mod_value = array();
+    $r_block_value = array();
+    $op_value = "add";
+    $submit_value = _AM_CREATENEWADG;
+    $g_id_value = "";
+    $type_value = "";
+    $form_title = _AM_CREATENEWADG;
+    include XOOPS_ROOT_PATH."/modules/system/admin/groups/groupform.php";
+    //CloseTable();
+    xoops_cp_footer();
+}
+
+function modifyGroup($g_id)
+{
+    $userstart = $memstart = 0;
+    if ( !empty($_POST['userstart']) ) {
+        $userstart = intval($_POST['userstart']);
+    } elseif (!empty($_GET['userstart'])) {
+        $userstart = intval($_GET['userstart']);
+    }
+    if ( !empty($_POST['memstart']) ) {
+        $memstart = intval($_POST['memstart']);
+    } elseif (!empty($_GET['memstart'])) {
+        $memstart = intval($_GET['memstart']);
+    }
+    xoops_cp_header();
+    //OpenTable();
+    echo '<a href="admin.php?fct=groups">'. _AM_GROUPSMAIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'. _AM_MODIFYADG.'<br /><br />';
+    $member_handler =& xoops_gethandler('member');
+    $thisgroup =& $member_handler->getGroup($g_id);
+    $name_value = $thisgroup->getVar("name", "E");
+    $desc_value = $thisgroup->getVar("description", "E");
+    $moduleperm_handler =& xoops_gethandler('groupperm');
+    $a_mod_value =& $moduleperm_handler->getItemIds('module_admin', $thisgroup->getVar('groupid'));
+    $r_mod_value =& $moduleperm_handler->getItemIds('module_read', $thisgroup->getVar('groupid'));
+
+    $gperm_handler =& xoops_gethandler('groupperm');
+    $r_block_value =& $gperm_handler->getItemIds('block_read', $g_id);
+    $op_value = "update";
+    $submit_value = _AM_UPDATEADG;
+    $g_id_value = $thisgroup->getVar("groupid");
+    $type_value = $thisgroup->getVar("group_type", "E");
+    $form_title = _AM_MODIFYADG;
+    if (XOOPS_GROUP_ADMIN == $g_id) {
+        $s_cat_disable = true;
+    }
+
+    $sysperm_handler =& xoops_gethandler('groupperm');
+    $s_cat_value =& $sysperm_handler->getItemIds('system_admin', $g_id);
+
+    include XOOPS_ROOT_PATH."/modules/system/admin/groups/groupform.php";
+    echo "<br /><h4 style='text-align:left'>"._AM_EDITMEMBER."</h4>";
+    $usercount = $member_handler->getUserCount(new Criteria('level', 0, '>'));
+    $member_handler =& xoops_gethandler('member');
+    $membercount = $member_handler->getUserCountByGroup($g_id);
+    if ($usercount < 200 && $membercount < 200) {
+        // do the old way only when counts are small
+        $mlist = array();
+        $members =& $member_handler->getUsersByGroup($g_id, false);
+        if (count($members) > 0) {
+            $member_criteria = new Criteria('uid', "(".implode(',', $members).")", "IN");
+            $member_criteria->setSort('uname');
+            $mlist = $member_handler->getUserList($member_criteria);
+        }
+        $criteria = new Criteria('level', 0, '>');
+        $criteria->setSort('uname');
+        $userslist =& $member_handler->getUserList($criteria);
+        $users =& array_diff($userslist, $mlist);
+        echo '<table class="outer">
+        <tr><th align="center">'._AM_NONMEMBERS.'<br />';
+
+        echo '</th><th></th><th align="center">'._AM_MEMBERS.'<br />';
+        echo '</th></tr>
+        <tr><td class="even">
+        <form action="admin.php" method="post">
+        <select name="uids[]" size="10" multiple="multiple">'."\n";
+        foreach ($users as $u_id => $u_name) {
+            echo '<option value="'.$u_id.'">'.$u_name.'</option>'."\n";
+        }
+        echo '</select>';
+        echo "</td><td align='center' class='odd'>
+        <input type='hidden' name='op' value='addUser' />
+        ".$GLOBALS['xoopsSecurity']->getTokenHTML()."
+        <input type='hidden' name='fct' value='groups' />
+        <input type='hidden' name='groupid' value='".$thisgroup->getVar("groupid")."' />
+        <input type='submit' name='submit' value='"._AM_ADDBUTTON."' />
+        </form><br />
+        <form action='admin.php' method='post' />
+        <input type='hidden' name='op' value='delUser' />
+        ".$GLOBALS['xoopsSecurity']->getTokenHTML()."
+        <input type='hidden' name='fct' value='groups' />
+        <input type='hidden' name='groupid' value='".$thisgroup->getVar("groupid")."' />
+        <input type='submit' name='submit' value='"._AM_DELBUTTON."' />
+        </td>
+        <td class='even'>";
+        echo "<select name='uids[]' size='10' multiple='multiple'>";
+        foreach ($mlist as $m_id => $m_name) {
+            echo '<option value="'.$m_id.'">'.$m_name.'</option>'."\n";
+        }
+        echo "</select>";
+        echo '</td></tr>
+        </form>
+        </table>';
+    } else {
+        $members =& $member_handler->getUsersByGroup($g_id, false, 200, $memstart);
+        $mlist = array();
+        if (count($members) > 0) {
+            $member_criteria = new Criteria('uid', "(".implode(',', $members).")", "IN");
+            $member_criteria->setSort('uname');
+            $mlist = $member_handler->getUserList($member_criteria);
+        }
+        echo '<a href="'.XOOPS_URL.'/modules/system/admin.php?fct=findusers&amp;group='.$g_id.'">'._AM_FINDU4GROUP.'</a><br />';
+        echo '<form action="admin.php" method="post">
+        <table class="outer">
+        <tr><th align="center">'._AM_MEMBERS.'<br />';
+        $nav = new XoopsPageNav($membercount, 200, $memstart, "memstart", "fct=groups&amp;op=modify&amp;g_id=".$g_id);
+        echo $nav->renderNav(4);
+        echo "</th></tr>
+        <tr><td class='even' align='center'>
+        <input type='hidden' name='op' value='delUser' />
+        <input type='hidden' name='fct' value='groups' />
+        <input type='hidden' name='groupid' value='".$thisgroup->getVar("groupid")."' />
+        <input type='hidden' name='memstart' value='".$memstart."' />
+        ".$GLOBALS['xoopsSecurity']->getTokenHTML()."
+        <select name='uids[]' size='10' multiple='multiple'>";
+        foreach ($mlist as $m_id => $m_name ) {
+            echo '<option value="'.$m_id.'">'.$m_name.'</option>'."\n";
+        }
+        echo "</select><br />
+        <input type='submit' name='submit' value='"._DELETE."' />
+        </td></tr>
+        </table>
+        </form>";
+    }
+    //CloseTable();
+    xoops_cp_footer();
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/groups/groups.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/groups/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/groups/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/groups/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,254 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+} else {
+    include_once XOOPS_ROOT_PATH.'/class/xoopsblock.php';
+    include_once XOOPS_ROOT_PATH."/modules/system/admin/groups/groups.php";
+    $op = "display";
+    if ( isset($_POST) ) {
+        foreach ( $_POST as $k => $v ) {
+            $$k = $v;
+        }
+    }
+    if ( isset($_GET['op']) ) {
+        if ($_GET['op'] == "modify" || $_GET['op'] == "del") {
+            $op = $_GET['op'];
+            $g_id = $_GET['g_id'];
+        }
+    }
+
+    // from finduser section
+    if ( !empty($memberslist_id) && is_array($memberslist_id) ) {
+        $op = "addUser";
+        $uids =& $memberslist_id;
+    }
+
+    switch ($op) {
+    case "modify":
+        include_once XOOPS_ROOT_PATH.'/class/pagenav.php';
+        modifyGroup($g_id);
+        break;
+    case "update":
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header("admin.php?fct=groups&amp;op=adminMain", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $system_catids = empty($system_catids) ? array() : $system_catids;
+        $admin_mids = empty($admin_mids) ? array() : $admin_mids;
+        $read_mids = empty($read_mids) ? array() : $read_mids;
+        $read_bids = empty($read_bids) ? array() : $read_bids;
+        $member_handler =& xoops_gethandler('member');
+        $group =& $member_handler->getGroup($g_id);
+        $group->setVar('name', $name);
+        $group->setVar('description', $desc);
+        // if this group is not one of the default groups
+        if (!in_array($group->getVar('groupid'), array(XOOPS_GROUP_ADMIN, XOOPS_GROUP_USERS, XOOPS_GROUP_ANONYMOUS))) {
+            if (count($system_catids) > 0) {
+                $group->setVar('group_type', 'Admin');
+            } else {
+                $group->setVar('group_type', '');
+            }
+        }
+        if (!$member_handler->insertGroup($group)) {
+            xoops_cp_header();
+            echo $group->getHtmlErrors();
+            xoops_cp_footer();
+        } else {
+            $groupid = $group->getVar('groupid');
+            $gperm_handler =& xoops_gethandler('groupperm');
+            $criteria = new CriteriaCompo(new Criteria('gperm_groupid', $groupid));
+            $criteria->add(new Criteria('gperm_modid', 1));
+            $criteria2 = new CriteriaCompo(new Criteria('gperm_name', 'system_admin'));
+            $criteria2->add(new Criteria('gperm_name', 'module_admin'), 'OR');
+            $criteria2->add(new Criteria('gperm_name', 'module_read'), 'OR');
+            $criteria2->add(new Criteria('gperm_name', 'block_read'), 'OR');
+            $criteria->add($criteria2);
+            $gperm_handler->deleteAll($criteria);
+            if (count($system_catids) > 0) {
+                array_push($admin_mids, 1);
+                foreach ($system_catids as $s_cid) {
+                    $sysperm =& $gperm_handler->create();
+                    $sysperm->setVar('gperm_groupid', $groupid);
+                    $sysperm->setVar('gperm_itemid', $s_cid);
+                    $sysperm->setVar('gperm_name', 'system_admin');
+                    $sysperm->setVar('gperm_modid', 1);
+                    $gperm_handler->insert($sysperm);
+                }
+            }
+            foreach ($admin_mids as $a_mid) {
+                $modperm =& $gperm_handler->create();
+                $modperm->setVar('gperm_groupid', $groupid);
+                $modperm->setVar('gperm_itemid', $a_mid);
+                $modperm->setVar('gperm_name', 'module_admin');
+                $modperm->setVar('gperm_modid', 1);
+                $gperm_handler->insert($modperm);
+            }
+            array_push($read_mids, 1);
+            foreach ($read_mids as $r_mid) {
+                $modperm =& $gperm_handler->create();
+                $modperm->setVar('gperm_groupid', $groupid);
+                $modperm->setVar('gperm_itemid', $r_mid);
+                $modperm->setVar('gperm_name', 'module_read');
+                $modperm->setVar('gperm_modid', 1);
+                $gperm_handler->insert($modperm);
+            }
+            foreach ($read_bids as $r_bid) {
+                $blockperm =& $gperm_handler->create();
+                $blockperm->setVar('gperm_groupid', $groupid);
+                $blockperm->setVar('gperm_itemid', $r_bid);
+                $blockperm->setVar('gperm_name', 'block_read');
+                $blockperm->setVar('gperm_modid', 1);
+                $gperm_handler->insert($blockperm);
+            }
+            redirect_header("admin.php?fct=groups&amp;op=adminMain",1,_AM_DBUPDATED);
+        }
+        break;
+    case "add":
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header("admin.php?fct=groups&amp;op=adminMain", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        if (!$name) {
+            xoops_cp_header();
+            echo _AM_UNEED2ENTER;
+            xoops_cp_footer();
+            exit();
+        }
+        $system_catids = empty($system_catids) ? array() : $system_catids;
+        $admin_mids = empty($admin_mids) ? array() : $admin_mids;
+        $read_mids = empty($read_mids) ? array() : $read_mids;
+        $read_bids = empty($read_bids) ? array() : $read_bids;
+        $member_handler =& xoops_gethandler('member');
+        $group =& $member_handler->createGroup();
+        $group->setVar("name", $name);
+        $group->setVar("description", $desc);
+        if (count($system_catids) > 0) {
+            $group->setVar("group_type", 'Admin');
+        }
+        if (!$member_handler->insertGroup($group)) {
+            xoops_cp_header();
+            echo $group->getHtmlErrors();
+            xoops_cp_footer();
+        } else {
+            $groupid = $group->getVar('groupid');
+            $gperm_handler =& xoops_gethandler('groupperm');
+            if (count($system_catids) > 0) {
+                array_push($admin_mids, 1);
+                foreach ($system_catids as $s_cid) {
+                    $sysperm =& $gperm_handler->create();
+                    $sysperm->setVar('gperm_groupid', $groupid);
+                    $sysperm->setVar('gperm_itemid', $s_cid);
+                    $sysperm->setVar('gperm_name', 'system_admin');
+                    $sysperm->setVar('gperm_modid', 1);
+                    $gperm_handler->insert($sysperm);
+                }
+            }
+            foreach ($admin_mids as $a_mid) {
+                $modperm =& $gperm_handler->create();
+                $modperm->setVar('gperm_groupid', $groupid);
+                $modperm->setVar('gperm_itemid', $a_mid);
+                $modperm->setVar('gperm_name', 'module_admin');
+                $modperm->setVar('gperm_modid', 1);
+                $gperm_handler->insert($modperm);
+            }
+            array_push($read_mids, 1);
+            foreach ($read_mids as $r_mid) {
+                $modperm =& $gperm_handler->create();
+                $modperm->setVar('gperm_groupid', $groupid);
+                $modperm->setVar('gperm_itemid', $r_mid);
+                $modperm->setVar('gperm_name', 'module_read');
+                $modperm->setVar('gperm_modid', 1);
+                $gperm_handler->insert($modperm);
+            }
+            foreach ($read_bids as $r_bid) {
+                $blockperm =& $gperm_handler->create();
+                $blockperm->setVar('gperm_groupid', $groupid);
+                $blockperm->setVar('gperm_itemid', $r_bid);
+                $blockperm->setVar('gperm_name', 'block_read');
+                $blockperm->setVar('gperm_modid', 1);
+                $gperm_handler->insert($blockperm);
+            }
+            redirect_header("admin.php?fct=groups&amp;op=adminMain",1,_AM_DBUPDATED);
+        }
+        break;
+    case "del":
+        xoops_cp_header();
+        xoops_confirm(array('fct' => 'groups', 'op' => 'delConf', 'g_id' => $g_id), 'admin.php', _AM_AREUSUREDEL);
+        xoops_cp_footer();
+        break;
+    case "delConf":
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header("admin.php?fct=groups&amp;op=adminMain", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        if (intval($g_id) > 0 && !in_array($g_id, array(XOOPS_GROUP_ADMIN, XOOPS_GROUP_USERS, XOOPS_GROUP_ANONYMOUS))) {
+            $member_handler =& xoops_gethandler('member');
+            $group =& $member_handler->getGroup($g_id);
+            $member_handler->deleteGroup($group);
+            $gperm_handler =& xoops_gethandler('groupperm');
+            $gperm_handler->deleteByGroup($g_id);
+        }
+        redirect_header("admin.php?fct=groups&amp;op=adminMain",1,_AM_DBUPDATED);
+        break;
+    case "addUser":
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header("admin.php?fct=groups&amp;op=adminMain", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $member_handler =& xoops_gethandler('member');
+        $size = count($uids);
+        for ( $i = 0; $i < $size; $i++ ) {
+            $member_handler->addUserToGroup($groupid, $uids[$i]);
+        }
+        redirect_header("admin.php?fct=groups&amp;op=modify&amp;g_id=".$groupid."",0,_AM_DBUPDATED);
+        break;
+    case "delUser":
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header("admin.php?fct=groups&amp;op=adminMain", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        if (intval($groupid) > 0) {
+            $member_handler =& xoops_gethandler('member');
+            $memstart = isset($memstart) ? intval($memstart) : 0;
+            if ($groupid == XOOPS_GROUP_ADMIN) {
+                if ($member_handler->getUserCountByGroup($groupid) > count($uids)){
+                    $member_handler->removeUsersFromGroup($groupid, $uids);
+                }
+            } else {
+                $member_handler->removeUsersFromGroup($groupid, $uids);
+            }
+            redirect_header('admin.php?fct=groups&amp;op=modify&amp;g_id='.$groupid.'&amp;memstart='.$memstart,0,_AM_DBUPDATED);
+        }
+        break;
+    case "display":
+        default:
+        displayGroups();
+        break;
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/groups/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/groups/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/groups/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/groups/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,44 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_ADGS;
+$modversion['version'] = "";
+$modversion['description'] = "User Groups Configuration";
+$modversion['author'] = "";
+$modversion['credits'] = "";
+$modversion['help'] = "groups.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "groups.gif";
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=groups";
+$modversion['category'] = XOOPS_SYSTEM_GROUP;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/groups/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/images/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/images/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/images/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,471 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+} else {
+    $op = 'list';
+    if (isset($_POST)) {
+        foreach ( $_POST as $k => $v ) {
+            ${$k} = $v;
+        }
+    }
+    if (isset($_GET['op'])) {
+        $op = trim($_GET['op']);
+    }
+    if (isset($_GET['image_id'])) {
+        $image_id = intval($_GET['image_id']);
+    }
+    if (isset($_GET['imgcat_id'])) {
+        $imgcat_id = intval($_GET['imgcat_id']);
+    }
+    if ($op == 'list') {
+        $imgcat_handler = xoops_gethandler('imagecategory');
+        $imagecategorys =& $imgcat_handler->getObjects();
+        xoops_cp_header();
+        echo '<h4 style="text-align:left">'._IMGMANAGER.'</h4><ul>';
+        $catcount = count($imagecategorys);
+        $image_handler =& xoops_gethandler('image');
+        for ($i = 0; $i < $catcount; $i++) {
+            $count = $image_handler->getCount(new Criteria('imgcat_id', $imagecategorys[$i]->getVar('imgcat_id')));
+            echo '<li>'.$imagecategorys[$i]->getVar('imgcat_name').' ('.sprintf(_NUMIMAGES, '<b>'.$count.'</b>').') [<a href="admin.php?fct=images&amp;op=listimg&amp;imgcat_id='.$imagecategorys[$i]->getVar('imgcat_id').'">'._LIST.'</a>] [<a href="admin.php?fct=images&amp;op=editcat&amp;imgcat_id='.$imagecategorys[$i]->getVar('imgcat_id').'">'._EDIT.'</a>]';
+            if ($imagecategorys[$i]->getVar('imgcat_type') == 'C') {
+                echo ' [<a href="admin.php?fct=images&amp;op=delcat&amp;imgcat_id='.$imagecategorys[$i]->getVar('imgcat_id').'">'._DELETE.'</a>]';
+            }
+            echo '</li>';
+        }
+        echo '</ul>';
+        include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+        if (!empty($catcount)) {
+            $form = new XoopsThemeForm(_ADDIMAGE, 'image_form', 'admin.php', 'post', true);
+            $form->setExtra('enctype="multipart/form-data"');
+            $form->addElement(new XoopsFormText(_IMAGENAME, 'image_nicename', 50, 255), true);
+            $select = new XoopsFormSelect(_IMAGECAT, 'imgcat_id');
+            $select->addOptionArray($imgcat_handler->getList());
+            $form->addElement($select, true);
+            $form->addElement(new XoopsFormFile(_IMAGEFILE, 'image_file', 5000000));
+            $form->addElement(new XoopsFormText(_IMGWEIGHT, 'image_weight', 3, 4, 0));
+            $form->addElement(new XoopsFormRadioYN(_IMGDISPLAY, 'image_display', 1, _YES, _NO));
+            $form->addElement(new XoopsFormHidden('op', 'addfile'));
+            $form->addElement(new XoopsFormHidden('fct', 'images'));
+            $form->addElement(new XoopsFormButton('', 'img_button', _SUBMIT, 'submit'));
+            $form->display();
+        }
+        $form = new XoopsThemeForm(_MD_ADDIMGCAT, 'imagecat_form', 'admin.php', 'post', true);
+        $form->addElement(new XoopsFormText(_MD_IMGCATNAME, 'imgcat_name', 50, 255), true);
+        $form->addElement(new XoopsFormSelectGroup(_MD_IMGCATRGRP, 'readgroup', true, XOOPS_GROUP_ADMIN, 5, true));
+        $form->addElement(new XoopsFormSelectGroup(_MD_IMGCATWGRP, 'writegroup', true, XOOPS_GROUP_ADMIN, 5, true));
+        $form->addElement(new XoopsFormText(_IMGMAXSIZE, 'imgcat_maxsize', 10, 10, 50000));
+        $form->addElement(new XoopsFormText(_IMGMAXWIDTH, 'imgcat_maxwidth', 3, 4, 120));
+        $form->addElement(new XoopsFormText(_IMGMAXHEIGHT, 'imgcat_maxheight', 3, 4, 120));
+        $form->addElement(new XoopsFormText(_MD_IMGCATWEIGHT, 'imgcat_weight', 3, 4, 0));
+        $form->addElement(new XoopsFormRadioYN(_MD_IMGCATDISPLAY, 'imgcat_display', 1, _YES, _NO));
+        $storetype = new XoopsFormRadio(_MD_IMGCATSTRTYPE.'<br /><span style="color:#ff0000;">'._MD_STRTYOPENG.'</span>', 'imgcat_storetype', 'file');
+        $storetype->addOptionArray(array('file' => _MD_ASFILE, 'db' => _MD_INDB));
+        $form->addElement($storetype);
+        $form->addElement(new XoopsFormHidden('op', 'addcat'));
+        $form->addElement(new XoopsFormHidden('fct', 'images'));
+        $form->addElement(new XoopsFormButton('', 'imgcat_button', _SUBMIT, 'submit'));
+        $form->display();
+        xoops_cp_footer();
+        exit();
+    }
+
+    if ($op == 'listimg') {
+        $imgcat_id = intval($imgcat_id);
+        if ($imgcat_id <= 0) {
+            redirect_header('admin.php?fct=images',1);
+        }
+        $imgcat_handler = xoops_gethandler('imagecategory');
+        $imagecategory =& $imgcat_handler->get($imgcat_id);
+        if (!is_object($imagecategory)) {
+            redirect_header('admin.php?fct=images',1);
+        }
+        $image_handler = xoops_gethandler('image');
+        xoops_cp_header();
+        echo '<a href="admin.php?fct=images">'. _MD_IMGMAIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'.$imagecategory->getVar('imgcat_name').'<br /><br />';
+        $criteria = new Criteria('imgcat_id', $imgcat_id);
+        $imgcount = $image_handler->getCount($criteria);
+        $start = isset($_GET['start']) ? intval($_GET['start']) : 0;
+        $criteria->setStart($start);
+        $criteria->setLimit(20);
+        $images =& $image_handler->getObjects($criteria, true, false);
+        echo '<form action="admin.php" method="post">';
+        foreach (array_keys($images) as $i) {
+
+            echo '<table width="100%" class="outer"><tr><td width="30%" rowspan="6">';
+            if ($imagecategory->getVar('imgcat_storetype') == 'db') {
+                echo '<img src="'.XOOPS_URL.'/image.php?id='.$i.'" alt="" />';
+            } else {
+                echo '<img src="'.XOOPS_UPLOAD_URL.'/'.$images[$i]->getVar('image_name').'" alt="" />';
+            }
+            echo '</td><td class="head">'._IMAGENAME,'</td><td class="even"><input type="hidden" name="image_id[]" value="'.$i.'" /><input type="text" name="image_nicename[]" value="'.$images[$i]->getVar('image_nicename', 'E').'" size="20" maxlength="255" /></td></tr><tr><td class="head">'._IMAGEMIME.'</td><td class="odd">'.$images[$i]->getVar('image_mimetype').'</td></tr><tr><td class="head">'._IMAGECAT.'</td><td class="even"><select name="imgcat_id[]" size="1">';
+            $list =& $imgcat_handler->getList(array(), null, null, $imagecategory->getVar('imgcat_storetype'));
+            foreach ($list as $value => $name) {
+                $sel = '';
+                if ($value == $images[$i]->getVar('imgcat_id')) {
+                    $sel = ' selected="selected"';
+                }
+                echo '<option value="'.$value.'"'.$sel.'>'.$name.'</option>';
+            }
+            echo '</select></td></tr><tr><td class="head">'._IMGWEIGHT.'</td><td class="odd"><input type="text" name="image_weight[]" value="'.$images[$i]->getVar('image_weight').'" size="3" maxlength="4" /></td></tr><tr><td class="head">'._IMGDISPLAY.'</td><td class="even"><input type="checkbox" name="image_display[]" value="1"';
+            if ($images[$i]->getVar('image_display') == 1) {
+                echo ' checked="checked"';
+            }
+            echo ' /></td></tr><tr><td class="head">&nbsp;</td><td class="odd"><a href="admin.php?fct=images&amp;op=delfile&amp;image_id='.$i.'">'._DELETE.'</a></td></tr></table><br />';
+        }
+        if ($imgcount > 0) {
+            if ($imgcount > 20) {
+                include_once XOOPS_ROOT_PATH.'/class/pagenav.php';
+                $nav = new XoopsPageNav($imgcount, 20, $start, 'start', 'fct=images&amp;op=listimg&amp;imgcat_id='.$imgcat_id);
+                echo '<div text-align="right">'.$nav->renderNav().'</div>';
+            }
+            echo '<div style="text-align:center;"><input type="hidden" name="op" value="save" /><input type="hidden" name="fct" value="images" />'.$GLOBALS['xoopsSecurity']->getTokenHTML().'<input type="submit" name="submit" value="'._SUBMIT.'" /></div></form>';
+        }
+        xoops_cp_footer();
+        exit();
+    }
+
+    if ($op == 'save') {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=images', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $count = count($image_id);
+        if ($count > 0) {
+            $image_handler =& xoops_gethandler('image');
+            $error = array();
+            for ($i = 0; $i < $count; $i++) {
+                $image =& $image_handler->get($image_id[$i]);
+                if (!is_object($image)) {
+                    $error[] = sprintf(_FAILGETIMG, $image_id[$i]);
+                    continue;
+                }
+                $image_display[$i] = empty($image_display[$i]) ? 0 : 1;
+                $image->setVar('image_display', $image_display[$i]);
+                $image->setVar('image_weight', $image_weight[$i]);
+                $image->setVar('image_nicename', $image_nicename[$i]);
+                $image->setVar('imgcat_id', $imgcat_id[$i]);
+                if (!$image_handler->insert($image)) {
+                    $error[] = sprintf(_FAILSAVEIMG, $image_id[$i]);
+                }
+            }
+            if (count($error) > 0) {
+                xoops_cp_header();
+                foreach ($error as $err) {
+                    echo $err.'<br />';
+                }
+                xoops_cp_footer();
+                exit();
+            }
+        }
+        redirect_header('admin.php?fct=images',2,_MD_AM_DBUPDATED);
+    }
+
+    if ($op == 'addfile') {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=images', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $imgcat_handler =& xoops_gethandler('imagecategory');
+        $imagecategory =& $imgcat_handler->get(intval($imgcat_id));
+        if (!is_object($imagecategory)) {
+            redirect_header('admin.php?fct=images',1);
+        }
+        include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+        $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/x-png', 'image/png', 'image/bmp'), $imagecategory->getVar('imgcat_maxsize'), $imagecategory->getVar('imgcat_maxwidth'), $imagecategory->getVar('imgcat_maxheight'));
+        $uploader->setPrefix('img');
+        $err = array();
+        $ucount = count($_POST['xoops_upload_file']);
+        for ($i = 0; $i < $ucount; $i++) {
+            if ($uploader->fetchMedia($_POST['xoops_upload_file'][$i])) {
+                if (!$uploader->upload()) {
+                    $err[] = $uploader->getErrors();
+                } else {
+                    $image_handler =& xoops_gethandler('image');
+                    $image =& $image_handler->create();
+                    $image->setVar('image_name', $uploader->getSavedFileName());
+                    $image->setVar('image_nicename', $image_nicename);
+                    $image->setVar('image_mimetype', $uploader->getMediaType());
+                    $image->setVar('image_created', time());
+                    $image_display = empty($image_display) ? 0 : 1;
+                    $image->setVar('image_display', $image_display);
+                    $image->setVar('image_weight', $image_weight);
+                    $image->setVar('imgcat_id', $imgcat_id);
+                    if ($imagecategory->getVar('imgcat_storetype') == 'db') {
+                        $fp = @fopen($uploader->getSavedDestination(), 'rb');
+                        $fbinary = @fread($fp, filesize($uploader->getSavedDestination()));
+                        @fclose($fp);
+                        $image->setVar('image_body', $fbinary, true);
+                        @unlink($uploader->getSavedDestination());
+                    }
+                    if (!$image_handler->insert($image)) {
+                        $err[] = sprintf(_FAILSAVEIMG, $image->getVar('image_nicename'));
+                    }
+                }
+            } else {
+                $err[] = sprintf(_FAILFETCHIMG, $i);
+                $err = array_merge($err, $uploader->getErrors(false));
+            }
+        }
+        if (count($err) > 0) {
+            xoops_cp_header();
+            xoops_error($err);
+            xoops_cp_footer();
+            exit();
+        }
+        redirect_header('admin.php?fct=images',2,_MD_AM_DBUPDATED);
+    }
+
+    if ($op == 'addcat') {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=images', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $imgcat_handler =& xoops_gethandler('imagecategory');
+        $imagecategory =& $imgcat_handler->create();
+        $imagecategory->setVar('imgcat_name', $imgcat_name);
+        $imagecategory->setVar('imgcat_maxsize', $imgcat_maxsize);
+        $imagecategory->setVar('imgcat_maxwidth', $imgcat_maxwidth);
+        $imagecategory->setVar('imgcat_maxheight', $imgcat_maxheight);
+        $imgcat_display = empty($imgcat_display) ? 0 : 1;
+        $imagecategory->setVar('imgcat_display', $imgcat_display);
+        $imagecategory->setVar('imgcat_weight', $imgcat_weight);
+        $imagecategory->setVar('imgcat_storetype', $imgcat_storetype);
+        $imagecategory->setVar('imgcat_type', 'C');
+        if (!$imgcat_handler->insert($imagecategory)) {
+            exit();
+        }
+        $newid = $imagecategory->getVar('imgcat_id');
+        $imagecategoryperm_handler =& xoops_gethandler('groupperm');
+        if (!isset($readgroup)) {
+            $readgroup = array();
+        }
+        if (!in_array(XOOPS_GROUP_ADMIN, $readgroup)) {
+            array_push($readgroup, XOOPS_GROUP_ADMIN);
+        }
+        foreach ($readgroup as $rgroup) {
+            $imagecategoryperm =& $imagecategoryperm_handler->create();
+            $imagecategoryperm->setVar('gperm_groupid', $rgroup);
+            $imagecategoryperm->setVar('gperm_itemid', $newid);
+            $imagecategoryperm->setVar('gperm_name', 'imgcat_read');
+            $imagecategoryperm->setVar('gperm_modid', 1);
+            $imagecategoryperm_handler->insert($imagecategoryperm);
+            unset($imagecategoryperm);
+        }
+        if (!isset($writegroup)) {
+            $writegroup = array();
+        }
+        if (!in_array(XOOPS_GROUP_ADMIN, $writegroup)) {
+            array_push($writegroup, XOOPS_GROUP_ADMIN);
+        }
+        foreach ($writegroup as $wgroup) {
+            $imagecategoryperm =& $imagecategoryperm_handler->create();
+            $imagecategoryperm->setVar('gperm_groupid', $wgroup);
+            $imagecategoryperm->setVar('gperm_itemid', $newid);
+            $imagecategoryperm->setVar('gperm_name', 'imgcat_write');
+            $imagecategoryperm->setVar('gperm_modid', 1);
+            $imagecategoryperm_handler->insert($imagecategoryperm);
+            unset($imagecategoryperm);
+        }
+        redirect_header('admin.php?fct=images',2,_MD_AM_DBUPDATED);
+    }
+
+    if ($op == 'editcat') {
+        if ($imgcat_id <= 0) {
+            redirect_header('admin.php?fct=images',1);
+        }
+        $imgcat_handler = xoops_gethandler('imagecategory');
+        $imagecategory =& $imgcat_handler->get($imgcat_id);
+        if (!is_object($imagecategory)) {
+            redirect_header('admin.php?fct=images',1);
+        }
+        include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+        $imagecategoryperm_handler =& xoops_gethandler('groupperm');
+        $form = new XoopsThemeForm(_MD_EDITIMGCAT, 'imagecat_form', 'admin.php', 'post', true);
+        $form->addElement(new XoopsFormText(_MD_IMGCATNAME, 'imgcat_name', 50, 255, $imagecategory->getVar('imgcat_name')), true);
+        $form->addElement(new XoopsFormSelectGroup(_MD_IMGCATRGRP, 'readgroup', true, $imagecategoryperm_handler->getGroupIds('imgcat_read', $imgcat_id), 5, true));
+        $form->addElement(new XoopsFormSelectGroup(_MD_IMGCATWGRP, 'writegroup', true, $imagecategoryperm_handler->getGroupIds('imgcat_write', $imgcat_id), 5, true));
+        $form->addElement(new XoopsFormText(_IMGMAXSIZE, 'imgcat_maxsize', 10, 10, $imagecategory->getVar('imgcat_maxsize')));
+        $form->addElement(new XoopsFormText(_IMGMAXWIDTH, 'imgcat_maxwidth', 3, 4, $imagecategory->getVar('imgcat_maxwidth')));
+        $form->addElement(new XoopsFormText(_IMGMAXHEIGHT, 'imgcat_maxheight', 3, 4, $imagecategory->getVar('imgcat_maxheight')));
+        $form->addElement(new XoopsFormText(_MD_IMGCATWEIGHT, 'imgcat_weight', 3, 4, $imagecategory->getVar('imgcat_weight')));
+        $form->addElement(new XoopsFormRadioYN(_MD_IMGCATDISPLAY, 'imgcat_display', $imagecategory->getVar('imgcat_display'), _YES, _NO));
+        $storetype = array('db' => _MD_INDB, 'file' => _MD_ASFILE);
+        $form->addElement(new XoopsFormLabel(_MD_IMGCATSTRTYPE, $storetype[$imagecategory->getVar('imgcat_storetype')]));
+        $form->addElement(new XoopsFormHidden('imgcat_id', $imgcat_id));
+        $form->addElement(new XoopsFormHidden('op', 'updatecat'));
+        $form->addElement(new XoopsFormHidden('fct', 'images'));
+        $form->addElement(new XoopsFormButton('', 'imgcat_button', _SUBMIT, 'submit'));
+        xoops_cp_header();
+        echo '<a href="admin.php?fct=images">'. _MD_IMGMAIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'.$imagecategory->getVar('imgcat_name').'<br /><br />';
+        $form->display();
+        xoops_cp_footer();
+        exit();
+    }
+
+    if ($op == 'updatecat') {
+        if (!$GLOBALS['xoopsSecurity']->check() || $imgcat_id <= 0) {
+            redirect_header('admin.php?fct=images',1, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $imgcat_handler = xoops_gethandler('imagecategory');
+        $imagecategory =& $imgcat_handler->get($imgcat_id);
+        if (!is_object($imagecategory)) {
+            redirect_header('admin.php?fct=images',1);
+        }
+        $imagecategory->setVar('imgcat_name', $imgcat_name);
+        $imgcat_display = empty($imgcat_display) ? 0 : 1;
+        $imagecategory->setVar('imgcat_display', $imgcat_display);
+        $imagecategory->setVar('imgcat_maxsize', $imgcat_maxsize);
+        $imagecategory->setVar('imgcat_maxwidth', $imgcat_maxwidth);
+        $imagecategory->setVar('imgcat_maxheight', $imgcat_maxheight);
+        $imagecategory->setVar('imgcat_weight', $imgcat_weight);
+        if (!$imgcat_handler->insert($imagecategory)) {
+            exit();
+        }
+        $imagecategoryperm_handler =& xoops_gethandler('groupperm');
+        $criteria = new CriteriaCompo(new Criteria('gperm_itemid', $imgcat_id));
+        $criteria->add(new Criteria('gperm_modid', 1));
+        $criteria2 = new CriteriaCompo(new Criteria('gperm_name', 'imgcat_write'));
+        $criteria2->add(new Criteria('gperm_name', 'imgcat_read'), 'OR');
+        $criteria->add($criteria2);
+        $imagecategoryperm_handler->deleteAll($criteria);
+        if (!isset($readgroup)) {
+            $readgroup = array();
+        }
+        if (!in_array(XOOPS_GROUP_ADMIN, $readgroup)) {
+            array_push($readgroup, XOOPS_GROUP_ADMIN);
+        }
+        foreach ($readgroup as $rgroup) {
+            $imagecategoryperm =& $imagecategoryperm_handler->create();
+            $imagecategoryperm->setVar('gperm_groupid', $rgroup);
+            $imagecategoryperm->setVar('gperm_itemid', $imgcat_id);
+            $imagecategoryperm->setVar('gperm_name', 'imgcat_read');
+            $imagecategoryperm->setVar('gperm_modid', 1);
+            $imagecategoryperm_handler->insert($imagecategoryperm);
+            unset($imagecategoryperm);
+        }
+        if (!isset($writegroup)) {
+            $writegroup = array();
+        }
+        if (!in_array(XOOPS_GROUP_ADMIN, $writegroup)) {
+            array_push($writegroup, XOOPS_GROUP_ADMIN);
+        }
+        foreach ($writegroup as $wgroup) {
+            $imagecategoryperm =& $imagecategoryperm_handler->create();
+            $imagecategoryperm->setVar('gperm_groupid', $wgroup);
+            $imagecategoryperm->setVar('gperm_itemid', $imgcat_id);
+            $imagecategoryperm->setVar('gperm_name', 'imgcat_write');
+            $imagecategoryperm->setVar('gperm_modid', 1);
+            $imagecategoryperm_handler->insert($imagecategoryperm);
+            unset($imagecategoryperm);
+        }
+        redirect_header('admin.php?fct=images',2,_MD_AM_DBUPDATED);
+    }
+
+    if ($op == 'delfile') {
+        xoops_cp_header();
+        xoops_confirm(array('op' => 'delfileok', 'image_id' => $image_id, 'fct' => 'images'), 'admin.php', _MD_RUDELIMG);
+        xoops_cp_footer();
+        exit();
+    }
+
+    if ($op == 'delfileok') {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=images', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $image_id = intval($image_id);
+        if ($image_id <= 0) {
+            redirect_header('admin.php?fct=images',1);
+        }
+        $image_handler =& xoops_gethandler('image');
+        $image =& $image_handler->get($image_id);
+        if (!is_object($image)) {
+            redirect_header('admin.php?fct=images',1);
+        }
+        if (!$image_handler->delete($image)) {
+            xoops_cp_header();
+            xoops_error(sprintf(_MD_FAILDEL, $image->getVar('image_id')));
+            xoops_cp_footer();
+            exit();
+        }
+        @unlink(XOOPS_UPLOAD_PATH.'/'.$image->getVar('image_name'));
+        redirect_header('admin.php?fct=images',2,_MD_AM_DBUPDATED);
+    }
+
+    if ($op == 'delcat') {
+        xoops_cp_header();
+        xoops_confirm(array('op' => 'delcatok', 'imgcat_id' => $imgcat_id, 'fct' => 'images'), 'admin.php', _MD_RUDELIMGCAT);
+        xoops_cp_footer();
+        exit();
+    }
+
+    if ($op == 'delcatok') {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=images', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $imgcat_id = intval($imgcat_id);
+        if ($imgcat_id <= 0) {
+            redirect_header('admin.php?fct=images',1);
+        }
+        $imgcat_handler = xoops_gethandler('imagecategory');
+        $imagecategory =& $imgcat_handler->get($imgcat_id);
+        if (!is_object($imagecategory)) {
+            redirect_header('admin.php?fct=images',1);
+        }
+        if ($imagecategory->getVar('imgcat_type') != 'C') {
+            xoops_cp_header();
+            xoops_error(_MD_SCATDELNG);
+            xoops_cp_footer();
+            exit();
+        }
+        $image_handler =& xoops_gethandler('image');
+        $images =& $image_handler->getObjects(new Criteria('imgcat_id', $imgcat_id), true, false);
+        $errors = array();
+        foreach (array_keys($images) as $i) {
+            if (!$image_handler->delete($images[$i])) {
+                $errors[] = sprintf(_MD_FAILDEL, $i);
+            } else {
+                if (file_exists(XOOPS_UPLOAD_PATH.'/'.$images[$i]->getVar('image_name')) && !unlink(XOOPS_UPLOAD_PATH.'/'.$images[$i]->getVar('image_name'))) {
+                    $errors[] = sprintf(_MD_FAILUNLINK, $i);
+                }
+            }
+        }
+        if (!$imgcat_handler->delete($imagecategory)) {
+            $errors[] = sprintf(_MD_FAILDELCAT, $imagecategory->getVar('imgcat_name'));
+        }
+        if (count($errors) > 0) {
+            xoops_cp_header();
+            xoops_error($errors);
+            xoops_cp_footer();
+            exit();
+        }
+        redirect_header('admin.php?fct=images',2,_MD_AM_DBUPDATED);
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/images/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/images/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/images/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/images/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_IMAGES;
+$modversion['version'] = "";
+$modversion['description'] = "XOOPS Image Manager";
+$modversion['author'] = "";
+$modversion['credits'] = "The XOOPS Project";
+$modversion['help'] = "images.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "images.gif";
+
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=images";
+$modversion['category'] = XOOPS_SYSTEM_IMAGE;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/images/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/mailusers/mailform.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/mailusers/mailform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/mailusers/mailform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,101 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$form = new XoopsThemeForm(_AM_SENDMTOUSERS, "mailusers", "admin.php?fct=mailusers", 'post', true);
+
+// from finduser section
+if (!empty($_POST['memberslist_id'])) {
+    $user_count = count($_POST['memberslist_id']);
+    $display_names = "";
+    for ( $i = 0; $i < $user_count; $i++ ) {
+        $uid_hidden = new XoopsFormHidden("mail_to_user[]", $_POST['memberslist_id'][$i]);
+        $form->addElement($uid_hidden);
+        $display_names .= "<a href='".XOOPS_URL."/userinfo.php?uid=".$_POST['memberslist_id'][$i]."' target='_blank'>".$_POST['memberslist_uname'][$_POST['memberslist_id'][$i]]."</a>, ";
+        unset($uid_hidden);
+    }
+    $users_label = new XoopsFormLabel(_AM_SENDTOUSERS2, substr($display_names, 0, -2));
+    $form->addElement($users_label);
+    $display_criteria = 0;
+}
+if ( !empty($display_criteria) ) {
+    $selected_groups = array();
+    $group_select = new XoopsFormSelectGroup(_AM_GROUPIS."<br />", "mail_to_group", false, $selected_groups, 5, true);
+    $lastlog_min = new XoopsFormText(_AM_LASTLOGMIN."<br />"._AM_TIMEFORMAT."<br />", "mail_lastlog_min", 20, 10);
+    $lastlog_max = new XoopsFormText(_AM_LASTLOGMAX."<br />"._AM_TIMEFORMAT."<br />", "mail_lastlog_max", 20, 10);
+    $regd_min = new XoopsFormText(_AM_REGDMIN."<br />"._AM_TIMEFORMAT."<br />", "mail_regd_min", 20, 10);
+    $regd_max = new XoopsFormText(_AM_REGDMAX."<br />"._AM_TIMEFORMAT."<br />", "mail_regd_max", 20, 10);
+    $idle_more = new XoopsFormText(_AM_IDLEMORE."<br />", "mail_idle_more", 10, 5);
+    $idle_less = new XoopsFormText(_AM_IDLELESS."<br />", "mail_idle_less", 10, 5);
+    $mailok_cbox = new XoopsFormCheckBox('', 'mail_mailok');
+    $mailok_cbox->addOption(1, _AM_MAILOK);
+    $inactive_cbox = new XoopsFormCheckBox(_AM_INACTIVE."<br />", "mail_inactive");
+    $inactive_cbox->addOption(1, _AMIFCHECKD);
+    $inactive_cbox->setExtra("onclick='javascript:disableElement(\"mail_lastlog_min\");disableElement(\"mail_lastlog_max\");disableElement(\"mail_idle_more\");disableElement(\"mail_idle_less\");disableElement(\"mail_to_group[]\");'");
+    $criteria_tray = new XoopsFormElementTray(_AM_SENDTOUSERS, "<br /><br />");
+    $criteria_tray->addElement($group_select);
+    $criteria_tray->addElement($lastlog_min);
+    $criteria_tray->addElement($lastlog_max);
+    $criteria_tray->addElement($idle_more);
+    $criteria_tray->addElement($idle_less);
+    $criteria_tray->addElement($mailok_cbox);
+    $criteria_tray->addElement($inactive_cbox);
+    $criteria_tray->addElement($regd_min);
+    $criteria_tray->addElement($regd_max);
+    $form->addElement($criteria_tray);
+}
+
+$fname_text = new XoopsFormText(_AM_MAILFNAME, "mail_fromname", 30, 255, $xoopsConfig['sitename']);
+$fromemail = !empty($xoopsConfig['adminmail']) ? $xoopsConfig['adminmail'] : $xoopsUser->getVar("email", "E");
+$femail_text = new XoopsFormText(_AM_MAILFMAIL, "mail_fromemail", 30, 255, $fromemail);
+//$subject_caption = _AM_MAILSUBJECT."<br /><br /><span style='font-size:x-small;font-weight:bold;'>"._AM_MAILTAGS."</span><br /><span style='font-size:x-small;font-weight:normal;'>"._AM_MAILTAGS1."<br />"._AM_MAILTAGS2."<br />"._AM_MAILTAGS3."</span>";
+$subject_caption = _AM_MAILSUBJECT."<br /><br /><span style='font-size:x-small;font-weight:bold;'>"._AM_MAILTAGS."</span><br /><span style='font-size:x-small;font-weight:normal;'>"._AM_MAILTAGS2."</span>";
+$subject_text = new XoopsFormText($subject_caption, "mail_subject", 50, 255);
+$body_caption = _AM_MAILBODY."<br /><br /><span style='font-size:x-small;font-weight:bold;'>"._AM_MAILTAGS."</span><br /><span style='font-size:x-small;font-weight:normal;'>"._AM_MAILTAGS1."<br />"._AM_MAILTAGS2."<br />"._AM_MAILTAGS3."<br />"._AM_MAILTAGS4."</span>";
+$body_text = new XoopsFormTextArea($body_caption, "mail_body", "", 10);
+$to_checkbox = new XoopsFormCheckBox(_AM_SENDTO, "mail_send_to", "mail");
+$to_checkbox->addOption("mail", _AM_EMAIL);
+$to_checkbox->addOption("pm", _AM_PM);
+$start_hidden = new XoopsFormHidden("mail_start", 0);
+$op_hidden = new XoopsFormHidden("op", "send");
+$submit_button = new XoopsFormButton("", "mail_submit", _SEND, "submit");
+
+$form->addElement($fname_text);
+$form->addElement($femail_text);
+$form->addElement($subject_text);
+$form->addElement($body_text);
+$form->addElement($to_checkbox);
+$form->addElement($op_hidden);
+$form->addElement($start_hidden);
+$form->addElement($submit_button);
+$form->setRequired($subject_text);
+$form->setRequired($body_text);
+//$form->setRequired($to_checkbox);
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/mailusers/mailform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/mailusers/mailusers.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/mailusers/mailusers.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/mailusers/mailusers.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,226 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+} else {
+    include_once XOOPS_ROOT_PATH."/class/xoopsformloader.php";
+    $op = "form";
+
+    if (!empty($_POST['op']) && $_POST['op'] == "send") {
+        $op =  $_POST['op'];
+    }
+
+    if ( !$GLOBALS['xoopsSecurity']->check() || $op == "form" ) {
+        xoops_cp_header();
+        //OpenTable();
+        if (count($GLOBALS['xoopsSecurity']->getErrors()) > 0) {
+            echo "<div class='errorMsg'>".implode('<br />', $GLOBALS['xoopsSecurity']->getErrors())."</div>";
+        }
+        $display_criteria = 1;
+        include XOOPS_ROOT_PATH."/modules/system/admin/mailusers/mailform.php";
+        $form->display();
+        //CloseTable();
+        xoops_cp_footer();
+    }
+
+    if ($op == "send" && !empty($_POST['mail_send_to'])) {
+        $added = array();
+        $added_id = array();
+        $criteria = array();
+        if ( !empty($_POST['mail_inactive']) ) {
+            $criteria[] = "level = 0";
+        } else {
+            if (!empty($_POST['mail_mailok'])) {
+                $criteria[] = 'user_mailok = 1';
+            } else {
+                if (!empty($_POST['mail_to_group'])) {
+                    $member_handler =& xoops_gethandler('member');
+                    $user_list = array();
+                    foreach ($_POST['mail_to_group'] as $groupid ) {
+                        $members =& $member_handler->getUsersByGroup($groupid, false);
+                        $user_list = array_unique(array_merge($members, $user_list));
+                        unset($members);
+                    }
+                    if (!empty($user_list)) {
+                        $criteria[] = 'uid IN (' . join(',', $user_list) . ')';
+                    }
+                }
+            }
+            if ( !empty($_POST['mail_lastlog_min']) ) {
+                $f_mail_lastlog_min = trim($_POST['mail_lastlog_min']);
+                $time = mktime(0,0,0,substr($f_mail_lastlog_min,5,2),substr($f_mail_lastlog_min,8,2),substr($f_mail_lastlog_min,0,4));
+                if ( $time > 0 ) {
+                    $criteria[] = "last_login > $time";
+                }
+            }
+            if ( !empty($_POST['mail_lastlog_max']) ) {
+                $f_mail_lastlog_max = trim($_POST['mail_lastlog_max']);
+                $time = mktime(0,0,0,substr($f_mail_lastlog_max,5,2),substr($f_mail_lastlog_max,8,2),substr($f_mail_lastlog_max,0,4));
+                if ( $time > 0 ) {
+                    $criteria[] = "last_login < $time";
+                }
+            }
+            if ( !empty($_POST['mail_idle_more']) && is_numeric($_POST['mail_idle_more']) ) {
+                $f_mail_idle_more = intval(trim($_POST['mail_idle_more']));
+                $time = 60 * 60 * 24 * $f_mail_idle_more;
+                $time = time() - $time;
+                if ( $time > 0 ) {
+                    $criteria[] = "last_login < $time";
+                }
+            }
+            if ( !empty($_POST['mail_idle_less']) && is_numeric($_POST['mail_idle_less']) ) {
+                $f_mail_idle_less = intval(trim($_POST['mail_idle_less']));
+                $time = 60 * 60 * 24 * $f_mail_idle_less;
+                $time = time() - $time;
+                if ( $time > 0 ) {
+                    $criteria[] = "last_login > $time";
+                }
+            }
+        }
+        if ( !empty($_POST['mail_regd_min']) ) {
+            $f_mail_regd_min = trim($_POST['mail_regd_min']);
+            $time = mktime(0,0,0,substr($f_mail_regd_min,5,2),substr($f_mail_regd_min,8,2),substr($f_mail_regd_min,0,4));
+            if ( $time > 0 ) {
+                $criteria[] = "user_regdate > $time";
+            }
+        }
+        if ( !empty($_POST['mail_regd_max']) ) {
+            $f_mail_regd_max = trim($_POST['mail_regd_max']);
+            $time = mktime(0,0,0,substr($f_mail_regd_max,5,2),substr($f_mail_regd_max,8,2),substr($f_mail_regd_max,0,4));
+            if ( $time > 0 ) {
+                $criteria[] = "user_regdate < $time";
+            }
+        }
+        if ( !empty($criteria) ) {
+            if ( empty($_POST['mail_inactive']) ) {
+                $criteria[] = "level > 0";
+            }
+            $criteria_object = new CriteriaCompo();
+            foreach ($criteria as $c) {
+                list ($field, $op, $value) = split(' ', $c);
+                $criteria_object->add(new Criteria($field,$value,$op), 'AND');
+            }
+            $member_handler =& xoops_gethandler('member');
+            $getusers =& $member_handler->getUsers($criteria_object);
+            foreach ($getusers as $getuser) {
+                if ( !in_array($getuser->getVar("uid"), $added_id) ) {
+                    $added[] = $getuser;
+                    $added_id[] = $getuser->getVar("uid");
+                }
+            }
+        }
+        if ( !empty($_POST['mail_to_user']) ) {
+            foreach ($_POST['mail_to_user'] as $to_user) {
+                if ( !in_array($to_user, $added_id) ) {
+                    $added[] = new XoopsUser($to_user);
+                    $added_id[] = $to_user;
+                }
+            }
+        }
+        $added_count = count($added);
+        xoops_cp_header();
+        //OpenTable();
+        if ( $added_count > 0 ) {
+            $mail_start = !empty($_POST['mail_start']) ? $_POST['mail_start'] : 0;
+            $mail_end = ($added_count > ($mail_start + 100)) ? ($mail_start + 100) : $added_count;
+            $myts =& MyTextSanitizer::getInstance();
+            $xoopsMailer =& getMailer();
+            for ( $i = $mail_start; $i < $mail_end; $i++) {
+                $xoopsMailer->setToUsers($added[$i]);
+            }
+            $xoopsMailer->setFromName($myts->oopsStripSlashesGPC($_POST['mail_fromname']));
+            $xoopsMailer->setFromEmail($myts->oopsStripSlashesGPC($_POST['mail_fromemail']));
+            $xoopsMailer->setSubject($myts->oopsStripSlashesGPC($_POST['mail_subject']));
+            $xoopsMailer->setBody($myts->oopsStripSlashesGPC($_POST['mail_body']));
+            if ( in_array("mail", $_POST['mail_send_to']) ) {
+                $xoopsMailer->useMail();
+            }
+            if ( in_array("pm", $_POST['mail_send_to']) && empty($_POST['mail_inactive']) ) {
+                $xoopsMailer->usePM();
+            }
+            $xoopsMailer->send(true);
+            echo $xoopsMailer->getSuccess();
+            echo $xoopsMailer->getErrors();
+
+
+            if ( $added_count > $mail_end ) {
+                $form = new XoopsThemeForm(_AM_SENDMTOUSERS, "mailusers", "admin.php?fct=mailusers", 'post', true);
+                if ( !empty($_POST['mail_to_group']) ) {
+                    foreach ( $_POST['mail_to_group'] as $mailgroup) {
+                        $group_hidden = new XoopsFormHidden("mail_to_group[]", $mailgroup);
+                        $form->addElement($group_hidden);
+                    }
+                }
+                $inactive_hidden = new XoopsFormHidden("mail_inactive", $mail_inactive);
+                $lastlog_min_hidden = new XoopsFormHidden("mail_lastlog_min", $myts->makeTboxData4PreviewInForm($_POST['mail_lastlog_min']));
+                $lastlog_max_hidden = new XoopsFormHidden("mail_lastlog_max", $myts->makeTboxData4PreviewInForm($_POST['mail_lastlog_max']));
+                $regd_min_hidden = new XoopsFormHidden("mail_regd_min", $myts->makeTboxData4PreviewInForm($_POST['mail_regd_max']));
+                $regd_max_hidden = new XoopsFormHidden("mail_regd_max", $myts->makeTboxData4PreviewInForm($_POST['mail_regd_max']));
+                $idle_more_hidden = new XoopsFormHidden("mail_idle_more", $myts->makeTboxData4PreviewInForm($_POST['mail_idle_more']));
+                $idle_less_hidden = new XoopsFormHidden("mail_idle_less", $myts->makeTboxData4PreviewInForm($_POST['mail_idle_less']));
+                $fname_hidden = new XoopsFormHidden("mail_fromname", $myts->makeTboxData4PreviewInForm($_POST['mail_fromname']));
+                $femail_hidden = new XoopsFormHidden("mail_fromemail", $myts->makeTboxData4PreviewInForm($_POST['mail_fromemail']));
+                $subject_hidden = new XoopsFormHidden("mail_subject", $myts->makeTboxData4PreviewInForm($_POST['mail_subject']));
+                $body_hidden = new XoopsFormHidden("mail_body", $myts->makeTareaData4PreviewInForm($_POST['mail_body']));
+                $start_hidden = new XoopsFormHidden("mail_start", $mail_end);
+                $to_hidden = new XoopsFormHidden("mail_send_to[]", "mail");
+                $op_hidden = new XoopsFormHidden("op", "send");
+                $submit_button = new XoopsFormButton("", "mail_submit", _AM_SENDNEXT, "submit");
+                $sent_label = new XoopsFormLabel(_AM_SENT, sprintf(_AM_SENTNUM, $_POST['mail_start']+1, $mail_end, $added_count));
+                $form->addElement($sent_label);
+                $form->addElement($inactive_hidden);
+                $form->addElement($lastlog_min_hidden);
+                $form->addElement($lastlog_max_hidden);
+                $form->addElement($regd_min_hidden);
+                $form->addElement($regd_max_hidden);
+                $form->addElement($idle_more_hidden);
+                $form->addElement($idle_less_hidden);
+                $form->addElement($fname_hidden);
+                $form->addElement($femail_hidden);
+                $form->addElement($subject_hidden);
+                $form->addElement($body_hidden);
+                $form->addElement($to_hidden);
+                $form->addElement($op_hidden);
+                $form->addElement($start_hidden);
+                $form->addElement($submit_button);
+                $form->display();
+            } else {
+                echo "<h4>"._AM_SENDCOMP."</h4>";
+            }
+        } else {
+            echo "<h4>"._AM_NOUSERMATCH."</h4>";
+        }
+        //CloseTable();
+        xoops_cp_footer();
+    }
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/mailusers/mailusers.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/mailusers/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/mailusers/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/mailusers/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,33 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+include_once XOOPS_ROOT_PATH."/modules/system/admin/mailusers/mailusers.php";
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/mailusers/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/mailusers/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/mailusers/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/mailusers/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_MLUS;
+$modversion['version'] = "";
+$modversion['description'] = "Send message to users via Email and PM";
+$modversion['author'] = "Kazumi Ono<br>( http://www.myweb.ne.jp/ )";
+$modversion['credits'] = "";
+$modversion['help'] = "mailusers.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "mailusers.gif";
+
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=mailusers";
+$modversion['category'] = XOOPS_SYSTEM_MAILU;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/mailusers/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,627 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+include_once XOOPS_ROOT_PATH.'/class/xoopsblock.php';
+include_once XOOPS_ROOT_PATH."/modules/system/admin/modulesadmin/modulesadmin.php";
+$op = "list";
+if ( isset($_POST) ) {
+    foreach ( $_POST as $k => $v ) {
+        ${$k} = $v;
+    }
+}
+
+if (isset($_GET['op'])) {
+    $op = $_GET['op'];
+    $module = $_GET['module'];
+}
+
+if (in_array($op, array('submit', 'install_ok', 'update_ok', 'uninstall_ok'))) {
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        $op = 'list';
+    }
+}
+
+if ( $op == "list" ) {
+    xoops_module_list();
+    exit();
+}
+
+if ( $op == "confirm" ) {
+    xoops_cp_header();
+    //OpenTable();
+    $error = array();
+    if ( !is_writable(XOOPS_CACHE_PATH.'/') ) {
+        // attempt to chmod 666
+        if ( !chmod(XOOPS_CACHE_PATH.'/', 0777) ) {
+            $error[] = sprintf(_MUSTWABLE, "<b>".XOOPS_CACHE_PATH.'/</b>');
+        }
+    }
+    if ( count($error) > 0 ) {
+        xoops_error($error);
+        echo "<p><a href='admin.php?fct=modulesadmin'>"._MD_AM_BTOMADMIN."</a></p>";
+        xoops_cp_footer();
+        exit();
+    }
+    echo "<h4 style='text-align:left;'>"._MD_AM_PCMFM."</h4>
+    <form action='admin.php' method='post'>
+    <input type='hidden' name='fct' value='modulesadmin' />
+    <input type='hidden' name='op' value='submit' />
+    <table width='100%' border='0' cellspacing='1' class='outer'>
+    <tr align='center'><th>"._MD_AM_MODULE."</th><th>"._MD_AM_ACTION."</th><th>"._MD_AM_ORDER."</th></tr>";
+    $mcount = 0;
+    $myts =& MyTextsanitizer::getInstance();
+    foreach ($module as $mid) {
+        if ($mcount % 2 != 0) {
+            $class = 'odd';
+        } else {
+            $class = 'even';
+        }
+        echo '<tr class="'.$class.'"><td align="center">'.$myts->stripSlashesGPC($oldname[$mid]);
+        $newname[$mid] = trim($myts->stripslashesGPC($newname[$mid]));
+        if ($newname[$mid] != $oldname[$mid]) {
+            echo '&nbsp;&raquo;&raquo;&nbsp;<span style="color:#ff0000;font-weight:bold;">'.$newname[$mid].'</span>';
+        }
+        echo '</td><td align="center">';
+        if (isset($newstatus[$mid]) && $newstatus[$mid] ==1) {
+            if ($oldstatus[$mid] == 0) {
+                echo "<span style='color:#ff0000;font-weight:bold;'>"._MD_AM_ACTIVATE."</span>";
+            } else {
+                echo _MD_AM_NOCHANGE;
+            }
+        } else {
+            $newstatus[$mid] = 0;
+            if ($oldstatus[$mid] == 1) {
+                echo "<span style='color:#ff0000;font-weight:bold;'>"._MD_AM_DEACTIVATE."</span>";
+            } else {
+                echo _MD_AM_NOCHANGE;
+            }
+        }
+        echo "</td><td align='center'>";
+        if ($oldweight[$mid] != $weight[$mid]) {
+            echo "<span style='color:#ff0000;font-weight:bold;'>".$weight[$mid]."</span>";
+        } else {
+            echo $weight[$mid];
+        }
+        echo "
+        <input type='hidden' name='module[]' value='".$mid."' />
+        <input type='hidden' name='oldname[".$mid."]' value='".htmlspecialchars($oldname[$mid], ENT_QUOTES)."' />
+        <input type='hidden' name='newname[".$mid."]' value='".htmlspecialchars($newname[$mid], ENT_QUOTES)."' />
+        <input type='hidden' name='oldstatus[".$mid."]' value='".$oldstatus[$mid]."' />
+        <input type='hidden' name='newstatus[".$mid."]' value='".$newstatus[$mid]."' />
+        <input type='hidden' name='oldweight[".$mid."]' value='".intval($oldweight[$mid])."' />
+        <input type='hidden' name='weight[".$mid."]' value='".intval($weight[$mid])."' />
+        </td></tr>";
+    }
+    echo "
+    <tr class='foot' align='center'><td colspan='3'><input type='submit' value='"._MD_AM_SUBMIT."' />&nbsp;<input type='button' value='"._MD_AM_CANCEL."' onclick='location=\"admin.php?fct=modulesadmin\"' />".$GLOBALS['xoopsSecurity']->getTokenHTML()."</td></tr>
+    </table>
+    </form>";
+    xoops_cp_footer();
+    exit();
+}
+if ( $op == "submit" ) {
+    $ret = array();
+    $write = false;
+    foreach ($module as $mid) {
+        if (isset($newstatus[$mid]) && $newstatus[$mid] ==1) {
+            if ($oldstatus[$mid] == 0) {
+                $ret[] = xoops_module_activate($mid);
+            }
+        } else {
+            if ($oldstatus[$mid] == 1) {
+                $ret[] = xoops_module_deactivate($mid);
+            }
+        }
+        $newname[$mid] = trim($newname[$mid]);
+        if ($oldname[$mid] != $newname[$mid] || $oldweight[$mid] != $weight[$mid]) {
+            $ret[] = xoops_module_change($mid, $weight[$mid], $newname[$mid]);
+            $write = true;
+        }
+        flush();
+    }
+    if ( $write ) {
+        $contents = xoops_module_get_admin_menu();
+        if (!xoops_module_write_admin_menu($contents)) {
+            $ret[] = "<p>"._MD_AM_FAILWRITE."</p>";
+        }
+    }
+    xoops_cp_header();
+    if ( count($ret) > 0 ) {
+        foreach ($ret as $msg) {
+            if ($msg != '') {
+                echo $msg;
+            }
+        }
+    }
+    echo "<br /><a href='admin.php?fct=modulesadmin'>"._MD_AM_BTOMADMIN."</a>";
+    xoops_cp_footer();
+    exit();
+}
+
+if ($op == 'install') {
+    $module_handler =& xoops_gethandler('module');
+    $mod =& $module_handler->create();
+    $mod->loadInfoAsVar($module);
+    if ($mod->getInfo('image') != false && trim($mod->getInfo('image')) != '') {
+        $msgs ='<img src="'.XOOPS_URL.'/modules/'.$mod->getVar('dirname').'/'.trim($mod->getInfo('image')).'" alt="" />';
+    }
+    $msgs .= '<br /><span style="font-size:smaller;";>'.$mod->getVar('name').'</span><br /><br />'._MD_AM_RUSUREINS;
+    xoops_cp_header();
+    xoops_confirm(array('module' => $module, 'op' => 'install_ok', 'fct' => 'modulesadmin'), 'admin.php', $msgs, _MD_AM_INSTALL);
+    xoops_cp_footer();
+    exit();
+}
+
+if ($op == 'install_ok') {
+    $ret = array();
+    $ret[] = xoops_module_install($module);
+    $contents = xoops_module_get_admin_menu();
+    if (!xoops_module_write_admin_menu($contents)) {
+        $ret[] = "<p>"._MD_AM_FAILWRITE."</p>";
+    }
+    xoops_cp_header();
+    if (count($ret) > 0) {
+        foreach ($ret as $msg) {
+            if ($msg != '') {
+                echo $msg;
+            }
+        }
+    }
+    echo "<br /><a href='admin.php?fct=modulesadmin'>"._MD_AM_BTOMADMIN."</a>";
+    xoops_cp_footer();
+    exit();
+}
+
+if ($op == 'uninstall') {
+    $module_handler =& xoops_gethandler('module');
+    $mod =& $module_handler->getByDirname($module);
+    if ($mod->getInfo('image') != false && trim($mod->getInfo('image')) != '') {
+        $msgs ='<img src="'.XOOPS_URL.'/modules/'.$mod->getVar('dirname').'/'.trim($mod->getInfo('image')).'" alt="" />';
+    }
+    $msgs .= '<br /><span style="font-size:smaller;";>'.$mod->getVar('name').'</span><br /><br />'._MD_AM_RUSUREUNINS;
+    xoops_cp_header();
+    xoops_confirm(array('module' => $module, 'op' => 'uninstall_ok', 'fct' => 'modulesadmin'), 'admin.php', $msgs, _YES);
+    xoops_cp_footer();
+    exit();
+}
+
+if ($op == 'uninstall_ok') {
+    $ret = array();
+    $ret[] = xoops_module_uninstall($module);
+    $contents = xoops_module_get_admin_menu();
+    if (!xoops_module_write_admin_menu($contents)) {
+        $ret[] = "<p>"._MD_AM_FAILWRITE."</p>";
+    }
+    xoops_cp_header();
+    if (count($ret) > 0) {
+        foreach ($ret as $msg) {
+            if ($msg != '') {
+                echo $msg;
+            }
+        }
+    }
+    echo "<a href='admin.php?fct=modulesadmin'>"._MD_AM_BTOMADMIN."</a>";
+    xoops_cp_footer();
+    exit();
+}
+
+if ($op == 'update') {
+    $module_handler =& xoops_gethandler('module');
+    $mod =& $module_handler->getByDirname($module);
+    if ($mod->getInfo('image') != false && trim($mod->getInfo('image')) != '') {
+        $msgs ='<img src="'.XOOPS_URL.'/modules/'.$mod->getVar('dirname').'/'.trim($mod->getInfo('image')).'" alt="" />';
+    }
+    $msgs .= '<br /><span style="font-size:smaller;";>'.$mod->getVar('name').'</span><br /><br />'._MD_AM_RUSUREUPD;
+    xoops_cp_header();
+    xoops_confirm(array('dirname' => $module, 'op' => 'update_ok', 'fct' => 'modulesadmin'), 'admin.php', $msgs, _MD_AM_UPDATE);
+    xoops_cp_footer();
+    exit();
+}
+
+if ($op == 'update_ok') {
+    $dirname = trim($dirname);
+    $module_handler =& xoops_gethandler('module');
+    $module =& $module_handler->getByDirname($dirname);
+    // Save current version for use in the update function
+    $prev_version = $module->getVar('version');
+    include_once XOOPS_ROOT_PATH.'/class/template.php';
+    xoops_template_clear_module_cache($module->getVar('mid'));
+    // we dont want to change the module name set by admin
+    $temp_name = $module->getVar('name');
+    $module->loadInfoAsVar($dirname);
+    $module->setVar('name', $temp_name);
+    xoops_cp_header();
+    if (!$module_handler->insert($module)) {
+        echo '<p>Could not update '.$module->getVar('name').'</p>';
+        echo "<br /><a href='admin.php?fct=modulesadmin'>"._MD_AM_BTOMADMIN."</a>";
+    } else {
+        $newmid = $module->getVar('mid');
+        $msgs = array();
+        $msgs[] = 'Module data updated.';
+        $tplfile_handler =& xoops_gethandler('tplfile');
+        $deltpl =& $tplfile_handler->find('default', 'module', $module->getVar('mid'));
+        $delng = array();
+        if (is_array($deltpl)) {
+            $xoopsTpl = new XoopsTpl();
+            // clear cache files
+            $xoopsTpl->clear_cache(null, 'mod_'.$dirname);
+            // delete template file entry in db
+            $dcount = count($deltpl);
+            for ($i = 0; $i < $dcount; $i++) {
+                if (!$tplfile_handler->delete($deltpl[$i])) {
+                    $delng[] = $deltpl[$i]->getVar('tpl_file');
+                }
+            }
+        }
+        $templates = $module->getInfo('templates');
+        if ($templates != false) {
+            $msgs[] = 'Updating templates...';
+            foreach ($templates as $tpl) {
+                $tpl['file'] = trim($tpl['file']);
+                if (!in_array($tpl['file'], $delng)) {
+                    $tpldata =& xoops_module_gettemplate($dirname, $tpl['file']);
+                    $tplfile =& $tplfile_handler->create();
+                    $tplfile->setVar('tpl_refid', $newmid);
+                    $tplfile->setVar('tpl_lastimported', 0);
+                    $tplfile->setVar('tpl_lastmodified', time());
+                    if (preg_match("/\.css$/i", $tpl['file'])) {
+                        $tplfile->setVar('tpl_type', 'css');
+                    } else {
+                        $tplfile->setVar('tpl_type', 'module');
+                    }
+                    $tplfile->setVar('tpl_source', $tpldata, true);
+                    $tplfile->setVar('tpl_module', $dirname);
+                    $tplfile->setVar('tpl_tplset', 'default');
+                    $tplfile->setVar('tpl_file', $tpl['file'], true);
+                    $tplfile->setVar('tpl_desc', $tpl['description'], true);
+                    if (!$tplfile_handler->insert($tplfile)) {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert template <b>'.$tpl['file'].'</b> to the database.</span>';
+                    } else {
+                        $newid = $tplfile->getVar('tpl_id');
+                        $msgs[] = '&nbsp;&nbsp;Template <b>'.$tpl['file'].'</b> inserted to the database.';
+                        if ($xoopsConfig['template_set'] == 'default') {
+                            if (!xoops_template_touch($newid)) {
+                                $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not recompile template <b>'.$tpl['file'].'</b>.</span>';
+                            } else {
+                                $msgs[] = '&nbsp;&nbsp;Template <b>'.$tpl['file'].'</b> recompiled.</span>';
+                            }
+                        }
+                    }
+                    unset($tpldata);
+                } else {
+                    $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete old template <b>'.$tpl['file'].'</b>. Aborting update of this file.</span>';
+                }
+            }
+        }
+        $contents = xoops_module_get_admin_menu();
+        if (!xoops_module_write_admin_menu($contents)) {
+            $msgs[] = '<p><span style="color:#ff0000;">'._MD_AM_FAILWRITE.'</span></p>';
+        }
+        $blocks = $module->getInfo('blocks');
+        $msgs[] = 'Rebuilding blocks...';
+        if ($blocks != false) {
+            $count = count($blocks);
+            $showfuncs = array();
+            $funcfiles = array();
+            for ( $i = 1; $i <= $count; $i++ ) {
+                if (isset($blocks[$i]['show_func']) && $blocks[$i]['show_func'] != '' && isset($blocks[$i]['file']) && $blocks[$i]['file'] != '') {
+                    $editfunc = isset($blocks[$i]['edit_func']) ? $blocks[$i]['edit_func'] : '';
+                    $showfuncs[] = $blocks[$i]['show_func'];
+                    $funcfiles[] = $blocks[$i]['file'];
+                    $template = '';
+                    if ((isset($blocks[$i]['template']) && trim($blocks[$i]['template']) != '')) {
+                        $content =& xoops_module_gettemplate($dirname, $blocks[$i]['template'], true);
+                    }
+                    if (!$content) {
+                        $content = '';
+                    } else {
+                        $template = $blocks[$i]['template'];
+                    }
+                    $options = '';
+                    if (!empty($blocks[$i]['options'])) {
+                        $options = $blocks[$i]['options'];
+                    }
+                    $sql = "SELECT bid, name FROM ".$xoopsDB->prefix('newblocks')." WHERE mid=".$module->getVar('mid')." AND func_num=".$i." AND show_func='".addslashes($blocks[$i]['show_func'])."' AND func_file='".addslashes($blocks[$i]['file'])."'";
+                    $fresult = $xoopsDB->query($sql);
+                    $fcount = 0;
+                    while ($fblock = $xoopsDB->fetchArray($fresult)) {
+                        $fcount++;
+                        $sql = "UPDATE ".$xoopsDB->prefix("newblocks")." SET name='".addslashes($blocks[$i]['name'])."', edit_func='".addslashes($editfunc)."', options='".addslashes($options)."', content='', template='".$template."', last_modified=".time()." WHERE bid=".$fblock['bid'];
+                        $result = $xoopsDB->query($sql);
+                        if (!$result) {
+                            $msgs[] = '&nbsp;&nbsp;ERROR: Could not update '.$fblock['name'];
+                        } else {
+                            $msgs[] = '&nbsp;&nbsp;Block <b>'.$fblock['name'].'</b> updated. Block ID: <b>'.$fblock['bid'].'</b>';
+                            if ($template != '') {
+                                $tplfile =& $tplfile_handler->find('default', 'block', $fblock['bid']);
+                                if (count($tplfile) == 0) {
+                                    $tplfile_new =& $tplfile_handler->create();
+                                    $tplfile_new->setVar('tpl_module', $dirname);
+                                    $tplfile_new->setVar('tpl_refid', $fblock['bid']);
+                                    $tplfile_new->setVar('tpl_tplset', 'default');
+                                    $tplfile_new->setVar('tpl_file', $blocks[$i]['template'], true);
+                                    $tplfile_new->setVar('tpl_type', 'block');
+                                }
+                                else {
+                                    $tplfile_new = $tplfile[0];
+                                }
+                                $tplfile_new->setVar('tpl_source', $content, true);
+                                $tplfile_new->setVar('tpl_desc', $blocks[$i]['description'], true);
+                                $tplfile_new->setVar('tpl_lastmodified', time());
+                                $tplfile_new->setVar('tpl_lastimported', 0);
+                                if (!$tplfile_handler->insert($tplfile_new)) {
+                                    $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not update template <b>'.$blocks[$i]['template'].'</b>.</span>';
+                                } else {
+                                    $msgs[] = '&nbsp;&nbsp;Template <b>'.$blocks[$i]['template'].'</b> updated.';
+                                    if ($xoopsConfig['template_set'] == 'default') {
+                                        if (!xoops_template_touch($tplfile_new->getVar('tpl_id'))) {
+                                            $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not recompile template <b>'.$blocks[$i]['template'].'</b>.</span>';
+                                        } else {
+                                            $msgs[] = '&nbsp;&nbsp;Template <b>'.$blocks[$i]['template'].'</b> recompiled.';
+                                        }
+                                    }
+
+                                }
+                            }
+                        }
+                    }
+                    if ($fcount == 0) {
+                        $newbid = $xoopsDB->genId($xoopsDB->prefix('newblocks').'_bid_seq');
+                        $block_name = addslashes($blocks[$i]['name']);
+                        $sql = "INSERT INTO ".$xoopsDB->prefix("newblocks")." (bid, mid, func_num, options, name, title, content, side, weight, visible, block_type, isactive, dirname, func_file, show_func, edit_func, template, last_modified) VALUES (".$newbid.", ".$module->getVar('mid').", ".$i.",'".addslashes($options)."','".$block_name."', '".$block_name."', '', 0, 0, 0, 'M', 1, '".addslashes($dirname)."', '".addslashes($blocks[$i]['file'])."', '".addslashes($blocks[$i]['show_func'])."', '".addslashes($editfunc)."', '".$template."', ".time().")";
+                        $result = $xoopsDB->query($sql);
+                        if (!$result) {
+                            $msgs[] = '&nbsp;&nbsp;ERROR: Could not create '.$blocks[$i]['name'];echo $sql;
+                        } else {
+                            if (empty($newbid)) {
+                                $newbid = $xoopsDB->getInsertId();
+                            }
+                            $groups =& $xoopsUser->getGroups();
+                            $gperm_handler =& xoops_gethandler('groupperm');
+                            foreach ($groups as $mygroup) {
+                                $bperm =& $gperm_handler->create();
+                                $bperm->setVar('gperm_groupid', $mygroup);
+                                $bperm->setVar('gperm_itemid', $newbid);
+                                $bperm->setVar('gperm_name', 'block_read');
+                                $bperm->setVar('gperm_modid', 1);
+                                if (!$gperm_handler->insert($bperm)) {
+                                    $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not add block access right. Block ID: <b>'.$newbid.'</b> Group ID: <b>'.$mygroup.'</b></span>';
+                                } else {
+                                    $msgs[] = '&nbsp;&nbsp;Added block access right. Block ID: <b>'.$newbid.'</b> Group ID: <b>'.$mygroup.'</b>';
+                                }
+                            }
+
+                            if ($template != '') {
+                                $tplfile =& $tplfile_handler->create();
+                                $tplfile->setVar('tpl_module', $dirname);
+                                $tplfile->setVar('tpl_refid', $newbid);
+                                $tplfile->setVar('tpl_source', $content, true);
+                                $tplfile->setVar('tpl_tplset', 'default');
+                                $tplfile->setVar('tpl_file', $blocks[$i]['template'], true);
+                                $tplfile->setVar('tpl_type', 'block');
+                                $tplfile->setVar('tpl_lastimported', 0);
+                                $tplfile->setVar('tpl_lastmodified', time());
+                                $tplfile->setVar('tpl_desc', $blocks[$i]['description'], true);
+                                if (!$tplfile_handler->insert($tplfile)) {
+                                    $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert template <b>'.$blocks[$i]['template'].'</b> to the database.</span>';
+                                } else {
+                                    $newid = $tplfile->getVar('tpl_id');
+                                    $msgs[] = '&nbsp;&nbsp;Template <b>'.$blocks[$i]['template'].'</b> added to the database.';
+                                    if ($xoopsConfig['template_set'] == 'default') {
+                                        if (!xoops_template_touch($newid)) {
+                                            $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Template <b>'.$blocks[$i]['template'].'</b> recompile failed.</span>';
+                                        } else {
+                                            $msgs[] = '&nbsp;&nbsp;Template <b>'.$blocks[$i]['template'].'</b> recompiled.';
+                                        }
+                                    }
+                                }
+                            }
+                            $msgs[] = '&nbsp;&nbsp;Block <b>'.$blocks[$i]['name'].'</b> created. Block ID: <b>'.$newbid.'</b>';
+                            $sql = 'INSERT INTO '.$xoopsDB->prefix('block_module_link').' (block_id, module_id) VALUES ('.$newbid.', -1)';
+                            $xoopsDB->query($sql);
+                        }
+                    }
+                }
+            }
+            $block_arr = XoopsBlock::getByModule($module->getVar('mid'));
+            foreach ($block_arr as $block) {
+                if (!in_array($block->getVar('show_func'), $showfuncs) || !in_array($block->getVar('func_file'), $funcfiles)) {
+                    $sql = sprintf("DELETE FROM %s WHERE bid = %u", $xoopsDB->prefix('newblocks'), $block->getVar('bid'));
+                    if(!$xoopsDB->query($sql)) {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete block <b>'.$block->getVar('name').'</b>. Block ID: <b>'.$block->getVar('bid').'</b></span>';
+                    } else {
+                        $msgs[] = '&nbsp;&nbsp;Block <b>'.$block->getVar('name').' deleted. Block ID: <b>'.$block->getVar('bid').'</b>';
+                        if ($block->getVar('template') != '') {
+                            $tplfiles =& $tplfile_handler->find(null, 'block', $block->getVar('bid'));
+                            if (is_array($tplfiles)) {
+                                $btcount = count($tplfiles);
+                                for ($k = 0; $k < $btcount; $k++) {
+                                    if (!$tplfile_handler->delete($tplfiles[$k])) {
+                                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not remove deprecated block template. (ID: <b>'.$tplfiles[$k]->getVar('tpl_id').'</b>)</span>';
+                                    } else {
+                                        $msgs[] = '&nbsp;&nbsp;Block template <b>'.$tplfiles[$k]->getVar('tpl_file').'</b> deprecated.';
+                                    }
+                                }
+                            }
+                        }
+                    }
+                }
+            }
+        }
+
+        // first delete all config entries
+        $config_handler =& xoops_gethandler('config');
+        $configs =& $config_handler->getConfigs(new Criteria('conf_modid', $module->getVar('mid')));
+        $confcount = count($configs);
+        $config_delng = array();
+        if ($confcount > 0) {
+            $msgs[] = 'Deleting module config options...';
+            for ($i = 0; $i < $confcount; $i++) {
+                if (!$config_handler->deleteConfig($configs[$i])) {
+                    $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete config data from the database. Config ID: <b>'.$configs[$i]->getvar('conf_id').'</b></span>';
+                    // save the name of config failed to delete for later use
+                    $config_delng[] = $configs[$i]->getvar('conf_name');
+                } else {
+                    $config_old[$configs[$i]->getvar('conf_name')]['value'] = $configs[$i]->getvar('conf_value', 'N');
+                    $config_old[$configs[$i]->getvar('conf_name')]['formtype'] = $configs[$i]->getvar('conf_formtype');
+                    $config_old[$configs[$i]->getvar('conf_name')]['valuetype'] = $configs[$i]->getvar('conf_valuetype');
+                    $msgs[] = '&nbsp;&nbsp;Config data deleted from the database. Config ID: <b>'.$configs[$i]->getVar('conf_id').'</b>';
+                }
+            }
+        }
+
+        // now reinsert them with the new settings
+        $configs = $module->getInfo('config');
+        if ($configs != false) {
+            if ($module->getVar('hascomments') != 0) {
+                include_once(XOOPS_ROOT_PATH.'/include/comment_constants.php');
+                array_push($configs, array('name' => 'com_rule', 'title' => '_CM_COMRULES', 'description' => '', 'formtype' => 'select', 'valuetype' => 'int', 'default' => 1, 'options' => array('_CM_COMNOCOM' => XOOPS_COMMENT_APPROVENONE, '_CM_COMAPPROVEALL' => XOOPS_COMMENT_APPROVEALL, '_CM_COMAPPROVEUSER' => XOOPS_COMMENT_APPROVEUSER, '_CM_COMAPPROVEADMIN' => XOOPS_COMMENT_APPROVEADMIN)));
+                array_push($configs, array('name' => 'com_anonpost', 'title' => '_CM_COMANONPOST', 'description' => '', 'formtype' => 'yesno', 'valuetype' => 'int', 'default' => 0));
+            }
+        } else {
+            if ($module->getVar('hascomments') != 0) {
+                $configs = array();
+                include_once(XOOPS_ROOT_PATH.'/include/comment_constants.php');
+                $configs[] = array('name' => 'com_rule', 'title' => '_CM_COMRULES', 'description' => '', 'formtype' => 'select', 'valuetype' => 'int', 'default' => 1, 'options' => array('_CM_COMNOCOM' => XOOPS_COMMENT_APPROVENONE, '_CM_COMAPPROVEALL' => XOOPS_COMMENT_APPROVEALL, '_CM_COMAPPROVEUSER' => XOOPS_COMMENT_APPROVEUSER, '_CM_COMAPPROVEADMIN' => XOOPS_COMMENT_APPROVEADMIN));
+                $configs[] = array('name' => 'com_anonpost', 'title' => '_CM_COMANONPOST', 'description' => '', 'formtype' => 'yesno', 'valuetype' => 'int', 'default' => 0);
+            }
+        }
+        // RMV-NOTIFY
+        if ($module->getVar('hasnotification') != 0) {
+            if (empty($configs)) {
+                $configs = array();
+            }
+            // Main notification options
+            include_once XOOPS_ROOT_PATH . '/include/notification_constants.php';
+            include_once XOOPS_ROOT_PATH . '/include/notification_functions.php';
+            $options = array();
+            $options['_NOT_CONFIG_DISABLE'] = XOOPS_NOTIFICATION_DISABLE;
+            $options['_NOT_CONFIG_ENABLEBLOCK'] = XOOPS_NOTIFICATION_ENABLEBLOCK;
+            $options['_NOT_CONFIG_ENABLEINLINE'] = XOOPS_NOTIFICATION_ENABLEINLINE;
+            $options['_NOT_CONFIG_ENABLEBOTH'] = XOOPS_NOTIFICATION_ENABLEBOTH;
+
+            //$configs[] = array ('name' => 'notification_enabled', 'title' => '_NOT_CONFIG_ENABLED', 'description' => '_NOT_CONFIG_ENABLEDDSC', 'formtype' => 'yesno', 'valuetype' => 'int', 'default' => 1);
+            $configs[] = array ('name' => 'notification_enabled', 'title' => '_NOT_CONFIG_ENABLE', 'description' => '_NOT_CONFIG_ENABLEDSC', 'formtype' => 'select', 'valuetype' => 'int', 'default' => XOOPS_NOTIFICATION_ENABLEBOTH, 'options'=>$options);
+            // Event specific notification options
+            // FIXME: for some reason the default doesn't come up properly
+            //  initially is ok, but not when 'update' module..
+            $options = array();
+            $categories =& notificationCategoryInfo('',$module->getVar('mid'));
+            foreach ($categories as $category) {
+                $events =& notificationEvents ($category['name'], false, $module->getVar('mid'));
+                foreach ($events as $event) {
+                    if (!empty($event['invisible'])) {
+                        continue;
+                    }
+                    $option_name = $category['title'] . ' : ' . $event['title'];
+                    $option_value = $category['name'] . '-' . $event['name'];
+                    $options[$option_name] = $option_value;
+                    //$configs[] = array ('name' => notificationGenerateConfig($category,$event,'name'), 'title' => notificationGenerateConfig($category,$event,'title_constant'), 'description' => notificationGenerateConfig($category,$event,'description_constant'), 'formtype' => 'yesno', 'valuetype' => 'int', 'default' => 1);
+                }
+            }
+            $configs[] = array ('name' => 'notification_events', 'title' => '_NOT_CONFIG_EVENTS', 'description' => '_NOT_CONFIG_EVENTSDSC', 'formtype' => 'select_multi', 'valuetype' => 'array', 'default' => array_values($options), 'options' => $options);
+        }
+
+        if ($configs != false) {
+            $msgs[] = 'Adding module config data...';
+            $config_handler =& xoops_gethandler('config');
+            $order = 0;
+            foreach ($configs as $config) {
+                // only insert ones that have been deleted previously with success
+                if (!in_array($config['name'], $config_delng)) {
+                    $confobj =& $config_handler->createConfig();
+                    $confobj->setVar('conf_modid', $newmid);
+                    $confobj->setVar('conf_catid', 0);
+                    $confobj->setVar('conf_name', $config['name']);
+                    $confobj->setVar('conf_title', $config['title'], true);
+                    $confobj->setVar('conf_desc', $config['description'], true);
+                    $confobj->setVar('conf_formtype', $config['formtype']);
+                    $confobj->setVar('conf_valuetype', $config['valuetype']);
+                    if (isset($config_old[$config['name']]['value']) && $config_old[$config['name']]['formtype'] == $config['formtype'] && $config_old[$config['name']]['valuetype'] == $config['valuetype']) {
+                        // preserver the old value if any
+                        // form type and value type must be the same
+                        $confobj->setVar('conf_value', $config_old[$config['name']]['value'], true);
+                    } else {
+                        $confobj->setConfValueForInput($config['default'], true);
+
+                        //$confobj->setVar('conf_value', $config['default'], true);
+                    }
+                    $confobj->setVar('conf_order', $order);
+                    $confop_msgs = '';
+                    if (isset($config['options']) && is_array($config['options'])) {
+                        foreach ($config['options'] as $key => $value) {
+                            $confop =& $config_handler->createConfigOption();
+                            $confop->setVar('confop_name', $key, true);
+                            $confop->setVar('confop_value', $value, true);
+                            $confobj->setConfOptions($confop);
+                            $confop_msgs .= '<br />&nbsp;&nbsp;&nbsp;&nbsp;Config option added. Name: <b>'.$key.'</b> Value: <b>'.$value.'</b>';
+                            unset($confop);
+                        }
+                    }
+                    $order++;
+                    if (false != $config_handler->insertConfig($confobj)) {
+                        $msgs[] = '&nbsp;&nbsp;Config <b>'.$config['name'].'</b> added to the database.'.$confop_msgs;
+                    } else {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert config <b>'.$config['name'].'</b> to the database.</span>';
+                    }
+                    unset($confobj);
+                }
+            }
+            unset($configs);
+        }
+
+        // execute module specific update script if any
+        $update_script = $module->getInfo('onUpdate');
+        if (false != $update_script && trim($update_script) != '') {
+            include_once XOOPS_ROOT_PATH.'/modules/'.$dirname.'/'.trim($update_script);
+            if (function_exists('xoops_module_update_'.$dirname)) {
+                $func = 'xoops_module_update_'.$dirname;
+                if (!$func($module, $prev_version)) {
+                    $msgs[] = 'Failed to execute '.$func;
+                } else {
+                    $msgs[] = '<b>'.$func.'</b> executed successfully.';
+                }
+            }
+        }
+
+        foreach ($msgs as $msg) {
+            echo '<code>'.$msg.'</code><br />';
+        }
+        echo "<p>".sprintf(_MD_AM_OKUPD, "<b>".$module->getVar('name')."</b>")."</p>";
+    }
+    echo "<br /><a href='admin.php?fct=modulesadmin'>"._MD_AM_BTOMADMIN."</a>";
+    xoops_cp_footer();
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/modulesadmin.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/modulesadmin.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/modulesadmin.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,744 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+
+function xoops_module_list()
+{
+        xoops_cp_header();
+    //OpenTable();
+    echo "
+    <h4 style='text-align:left'>"._MD_AM_MODADMIN."</h4>
+    <form action='admin.php' method='post' name='moduleadmin' id='moduleadmin'>
+    <table class='outer' width='100%' cellpadding='4' cellspacing='1'>
+    <tr align='center'><th>"._MD_AM_MODULE."</th><th>"._MD_AM_VERSION."</th><th>"._MD_AM_LASTUP."</th><th>"._MD_AM_ACTIVE."</th><th>"._MD_AM_ORDER."<br /><small>"._MD_AM_ORDER0."</small></th><th>"._MD_AM_ACTION."</th></tr>
+    ";
+    $module_handler =& xoops_gethandler('module');
+    $installed_mods =& $module_handler->getObjects();
+    $listed_mods = array();
+    $count = 0;
+    foreach ( $installed_mods as $module ) {
+        if ($count % 2 == 0) {
+            $class = 'even';
+        } else {
+            $class = 'odd';
+        }
+        $count++;
+        echo "<tr class='$class' align='center' valign='middle'>\n";
+        echo "<td valign='bottom'>";
+        if ( $module->getVar('hasadmin') == 1 && $module->getVar('isactive') == 1) {
+            echo '<a href="'.XOOPS_URL.'/modules/'.$module->getVar('dirname').'/'.$module->getInfo('adminindex').'"><img src="'.XOOPS_URL.'/modules/'.$module->getVar('dirname').'/'.$module->getInfo('image').'" alt="'.$module->getVar('name', 'E').'" border="0" /></a><br /><input type="text" name="newname['.$module->getVar('mid').']" value="'.$module->getVar('name', 'E').'" maxlength="150" size="20" />';
+        } else {
+            echo '<img src="'.XOOPS_URL.'/modules/'.$module->getVar('dirname').'/'.$module->getInfo('image').'" alt="'.$module->getVar('name', 'E').'" border="0" /><br /><input type="text" name="newname['.$module->getVar('mid').']" value="'.$module->getVar('name', 'E').'" maxlength="150" size="20" />';
+        }
+        echo '<input type="hidden" name="oldname['.$module->getVar('mid').']" value="' .$module->getVar('name').'" /></td>';
+        echo "<td align='center'>".round($module->getVar('version') / 100, 2)."</td><td align='center'>".formatTimestamp($module->getVar('last_update'),'m')."<br />";
+        if ($module->getVar('dirname') != 'system' && $module->getVar('isactive') == 1) {
+            echo '</td><td><input type="checkbox" name="newstatus['.$module->getVar('mid').']" value="1" checked="checked" /><input type="hidden" name="oldstatus['.$module->getVar('mid').']" value="1" />';
+            $extra = '<a href="'.XOOPS_URL.'/modules/system/admin.php?fct=modulesadmin&amp;op=update&amp;module='.$module->getVar('dirname').'"><img src="'.XOOPS_URL.'/modules/system/images/update.gif" alt="'._MD_AM_UPDATE.'" /></a>';
+        } elseif ($module->getVar('dirname') != 'system') {
+            echo '</td><td><input type="checkbox" name="newstatus['.$module->getVar('mid').']" value="1" /><input type="hidden" name="oldstatus['.$module->getVar('mid').']" value="0" />';
+            $extra = '<a href="'.XOOPS_URL.'/modules/system/admin.php?fct=modulesadmin&amp;op=update&amp;module='.$module->getVar('dirname').'"><img src="'.XOOPS_URL.'/modules/system/images/update.gif" alt="'._MD_AM_UPDATE.'" /></a>&nbsp;<a href="'.XOOPS_URL.'/modules/system/admin.php?fct=modulesadmin&amp;op=uninstall&amp;module='.$module->getVar('dirname').'"><img src="'.XOOPS_URL.'/modules/system/images/uninstall.gif" alt="'._MD_AM_UNINSTALL.'" /></a>';
+        } else {
+            echo '</td><td><input type="checkbox" name="newstatus['.$module->getVar('mid').']" value="1" checked="checked" /><input type="hidden" name="oldstatus['.$module->getVar('mid').']" value="1" />';
+            $extra = '<a href="'.XOOPS_URL.'/modules/system/admin.php?fct=modulesadmin&amp;op=update&amp;module='.$module->getVar('dirname').'"><img src="'.XOOPS_URL.'/modules/system/images/update.gif" alt="'._MD_AM_UPDATE.'" /></a>';
+        }
+        echo "</td><td>";
+        if ($module->getVar('hasmain') == 1) {
+            echo '<input type="hidden" name="oldweight['.$module->getVar('mid').']" value="'.$module->getVar('weight').'" /><input type="text" name="weight['.$module->getVar('mid').']" size="3" maxlength="5" value="'.$module->getVar('weight').'" />';
+        } else {
+            echo '<input type="hidden" name="oldweight['.$module->getVar('mid').']" value="0" /><input type="hidden" name="weight['.$module->getVar('mid').']" value="0" />';
+        }
+        echo "
+        </td>
+        <td>".$extra."&nbsp;<a href='javascript:openWithSelfMain(\"".XOOPS_URL."/modules/system/admin.php?fct=version&amp;mid=".$module->getVar('mid')."\",\"Info\",300,230);'>";
+        echo '<img src="'.XOOPS_URL.'/modules/system/images/info.gif" alt="'._INFO.'" /></a><input type="hidden" name="module[]" value="'.$module->getVar('mid').'" /></td>
+        </tr>
+        ';
+        $listed_mods[] = $module->getVar('dirname');
+    }
+    echo "<tr class='foot'><td colspan='6' align='center'><input type='hidden' name='fct' value='modulesadmin' />
+    <input type='hidden' name='op' value='confirm' />
+    <input type='submit' name='submit' value='"._MD_AM_SUBMIT."' />
+    </td></tr></table>
+    </form>
+    <br />
+    <table width='100%' border='0' class='outer' cellpadding='4' cellspacing='1'>
+    <tr align='center'><th>"._MD_AM_MODULE."</th><th>"._MD_AM_VERSION."</th><th>"._MD_AM_ACTION."</th></tr>
+    ";
+    $modules_dir = XOOPS_ROOT_PATH."/modules";
+    $handle = opendir($modules_dir);
+    $count = 0;
+    while ($file = readdir($handle)) {
+        clearstatcache();
+        $file = trim($file);
+        if ($file != '' && strtolower($file) != 'cvs' && !preg_match("/^[.]{1,2}$/",$file) && is_dir($modules_dir.'/'.$file)) {
+            if ( !in_array($file, $listed_mods) ) {
+                $module =& $module_handler->create();
+                $module->loadInfo($file);
+                if ($count % 2 == 0) {
+                    $class = 'even';
+                } else {
+                    $class = 'odd';
+                }
+                echo '<tr class="'.$class.'" align="center" valign="middle">
+                <td align="center" valign="bottom"><img src="'.XOOPS_URL.'/modules/'.$module->getInfo('dirname').'/'.$module->getInfo('image').'" alt="'.htmlspecialchars($module->getInfo('name')).'" border="0" /></td>
+                <td align="center">'.round($module->getInfo('version'), 2).'</td>
+                <td>
+                <a href="'.XOOPS_URL.'/modules/system/admin.php?fct=modulesadmin&amp;op=install&amp;module='.$module->getInfo('dirname').'"><img src="'.XOOPS_URL.'/modules/system/images/install.gif" alt="'._MD_AM_INSTALL.'" /></a>';
+                echo "&nbsp;<a href='javascript:openWithSelfMain(\"".XOOPS_URL."/modules/system/admin.php?fct=version&amp;mid=".$module->getInfo('dirname')."\",\"Info\",300,230);'>";
+                echo '<img src="'.XOOPS_URL.'/modules/system/images/info.gif" alt="'._INFO.'" /></a></td></tr>
+                ';
+                unset($module);
+                $count++;
+            }
+        }
+    }
+    echo "</table>";
+    //CloseTable();
+    xoops_cp_footer();
+}
+
+function xoops_module_install($dirname)
+{
+    global $xoopsUser, $xoopsConfig;
+    $dirname = trim($dirname);
+    $db =& Database::getInstance();
+    $reservedTables = array('avatar', 'avatar_users_link', 'block_module_link', 'xoopscomments', 'config', 'configcategory', 'configoption', 'image', 'imagebody', 'imagecategory', 'imgset', 'imgset_tplset_link', 'imgsetimg', 'groups','groups_users_link','group_permission', 'online', 'bannerclient', 'banner', 'bannerfinish', 'priv_msgs', 'ranks', 'session', 'smiles', 'users', 'newblocks', 'modules', 'tplfile', 'tplset', 'tplsource', 'xoopsnotifications', 'banner', 'bannerclient', 'bannerfinish');
+    $module_handler =& xoops_gethandler('module');
+    if ($module_handler->getCount(new Criteria('dirname', $dirname)) == 0) {
+        $module =& $module_handler->create();
+        $module->loadInfoAsVar($dirname);
+        $module->setVar('weight', 1);
+        $error = false;
+        $errs = array();
+        $sqlfile =& $module->getInfo('sqlfile');
+        $msgs = array();
+        $msgs[] = '<h4 style="text-align:left;margin-bottom: 0px;border-bottom: dashed 1px #000000;">Installing '.$module->getInfo('name').'</h4>';
+        if ($module->getInfo('image') != false && trim($module->getInfo('image')) != '') {
+            $msgs[] ='<img src="'.XOOPS_URL.'/modules/'.$dirname.'/'.trim($module->getInfo('image')).'" alt="" />';
+        }
+        $msgs[] ='<b>Version:</b> '.$module->getInfo('version');
+        if ($module->getInfo('author') != false && trim($module->getInfo('author')) != '') {
+            $msgs[] ='<b>Author:</b> '.trim($module->getInfo('author'));
+        }
+        $msgs[] = '';
+        $errs[] = '<h4 style="text-align:left;margin-bottom: 0px;border-bottom: dashed 1px #000000;">Installing '.$module->getInfo('name').'</h4>';
+        if ($sqlfile != false && is_array($sqlfile)) {
+
+            $sql_file_path = XOOPS_ROOT_PATH."/modules/".$dirname."/".$sqlfile[XOOPS_DB_TYPE];
+            if (!file_exists($sql_file_path)) {
+                $errs[] = "SQL file not found at <b>$sql_file_path</b>";
+                $error = true;
+            } else {
+                $msgs[] = "SQL file found at <b>$sql_file_path</b>.<br  /> Creating tables...";
+                include_once XOOPS_ROOT_PATH.'/class/database/sqlutility.php';
+                $sql_query = fread(fopen($sql_file_path, 'r'), filesize($sql_file_path));
+                $sql_query = trim($sql_query);
+                SqlUtility::splitMySqlFile($pieces, $sql_query);
+                $created_tables = array();
+                foreach ($pieces as $piece) {
+                    // [0] contains the prefixed query
+                    // [4] contains unprefixed table name
+                    $prefixed_query = SqlUtility::prefixQuery($piece, $db->prefix());
+                    if (!$prefixed_query) {
+                        $errs[] = "<b>$piece</b> is not a valid SQL!";
+                        $error = true;
+                        break;
+                    }
+                    // check if the table name is reserved
+                    if (!in_array($prefixed_query[4], $reservedTables)) {
+                        // not reserved, so try to create one
+                        if (!$db->query($prefixed_query[0])) {
+                            $errs[] = $db->error();
+                            $error = true;
+                            break;
+                        } else {
+
+                            if (!in_array($prefixed_query[4], $created_tables)) {
+                                $msgs[] = '&nbsp;&nbsp;Table <b>'.$db->prefix($prefixed_query[4]).'</b> created.';
+                                $created_tables[] = $prefixed_query[4];
+                            } else {
+                                $msgs[] = '&nbsp;&nbsp;Data inserted to table <b>'.$db->prefix($prefixed_query[4]).'</b>.';
+                            }
+                        }
+                    } else {
+                        // the table name is reserved, so halt the installation
+                        $errs[] = '<b>'.$prefixed_query[4]."</b> is a reserved table!";
+                        $error = true;
+                        break;
+                    }
+                }
+                // if there was an error, delete the tables created so far, so the next installation will not fail
+                if ($error == true) {
+                    foreach ($created_tables as $ct) {
+                        //echo $ct;
+                        $db->query("DROP TABLE ".$db->prefix($ct));
+                    }
+                }
+            }
+        }
+        // if no error, save the module info and blocks info associated with it
+        if ($error == false) {
+            if (!$module_handler->insert($module)) {
+                $errs[] = 'Could not insert <b>'.$module->getVar('name').'</b> to database.';
+                foreach ($created_tables as $ct) {
+                    $db->query("DROP TABLE ".$db->prefix($ct));
+                }
+                $ret = "<p>".sprintf(_MD_AM_FAILINS, "<b>".$module->name()."</b>")."&nbsp;"._MD_AM_ERRORSC."<br />";
+                foreach ( $errs as $err ) {
+                    $ret .= " - ".$err."<br />";
+                }
+                $ret .= "</p>";
+                unset($module);
+                unset($created_tables);
+                unset($errs);
+                unset($msgs);
+                return $ret;
+            } else {
+                $newmid = $module->getVar('mid');
+                unset($created_tables);
+                $msgs[] = 'Module data inserted successfully. Module ID: <b>'.$newmid.'</b>';
+                $tplfile_handler =& xoops_gethandler('tplfile');
+                $templates = $module->getInfo('templates');
+                if ($templates != false) {
+                    $msgs[] = 'Adding templates...';
+                    foreach ($templates as $tpl) {
+                        $tplfile =& $tplfile_handler->create();
+                        $tpldata =& xoops_module_gettemplate($dirname, $tpl['file']);
+                        $tplfile->setVar('tpl_source', $tpldata, true);
+                        $tplfile->setVar('tpl_refid', $newmid);
+
+                        $tplfile->setVar('tpl_tplset', 'default');
+                        $tplfile->setVar('tpl_file', $tpl['file']);
+                        $tplfile->setVar('tpl_desc', $tpl['description'], true);
+                        $tplfile->setVar('tpl_module', $dirname);
+                        $tplfile->setVar('tpl_lastmodified', time());
+                        $tplfile->setVar('tpl_lastimported', 0);
+                        $tplfile->setVar('tpl_type', 'module');
+                        if (!$tplfile_handler->insert($tplfile)) {
+                            $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert template <b>'.$tpl['file'].'</b> to the database.</span>';
+                        } else {
+                            $newtplid = $tplfile->getVar('tpl_id');
+                            $msgs[] = '&nbsp;&nbsp;Template <b>'.$tpl['file'].'</b> added to the database. (ID: <b>'.$newtplid.'</b>)';
+                            // generate compiled file
+                            include_once XOOPS_ROOT_PATH.'/class/template.php';
+                            if (!xoops_template_touch($newtplid)) {
+                                $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Failed compiling template <b>'.$tpl['file'].'</b>.</span>';
+                            } else {
+                                $msgs[] = '&nbsp;&nbsp;Template <b>'.$tpl['file'].'</b> compiled.</span>';
+                            }
+                        }
+                        unset($tpldata);
+                    }
+                }
+                include_once XOOPS_ROOT_PATH.'/class/template.php';
+                xoops_template_clear_module_cache($newmid);
+                $blocks = $module->getInfo('blocks');
+                if ($blocks != false) {
+                    $msgs[] = 'Adding blocks...';
+                    foreach ($blocks as $blockkey => $block) {
+                        // break the loop if missing block config
+                        if (!isset($block['file']) || !isset($block['show_func'])) {
+                            break;
+                        }
+                        $options = '';
+                        if (!empty($block['options'])) {
+                            $options = trim($block['options']);
+                        }
+                        $newbid = $db->genId($db->prefix('newblocks').'_bid_seq');
+                        $edit_func = isset($block['edit_func']) ? trim($block['edit_func']) : '';
+                        $template = '';
+                        if ((isset($block['template']) && trim($block['template']) != '')) {
+                            $content =& xoops_module_gettemplate($dirname, $block['template'], true);
+                        }
+                        if (!$content) {
+                            $content = '';
+                        } else {
+                            $template = trim($block['template']);
+                        }
+                        $block_name = addslashes(trim($block['name']));
+                        $sql = "INSERT INTO ".$db->prefix("newblocks")." (bid, mid, func_num, options, name, title, content, side, weight, visible, block_type, c_type, isactive, dirname, func_file, show_func, edit_func, template, bcachetime, last_modified) VALUES ($newbid, $newmid, ".intval($blockkey).", '$options', '".$block_name."','".$block_name."', '', 0, 0, 0, 'M', 'H', 1, '".addslashes($dirname)."', '".addslashes(trim($block['file']))."', '".addslashes(trim($block['show_func']))."', '".addslashes($edit_func)."', '".$template."', 0, ".time().")";
+                        if (!$db->query($sql)) {
+                            $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not add block <b>'.$block['name'].'</b> to the database! Database error: <b>'.$db->error().'</b></span>';
+                        } else {
+                            if (empty($newbid)) {
+                                $newbid = $db->getInsertId();
+                            }
+                            $msgs[] = '&nbsp;&nbsp;Block <b>'.$block['name'].'</b> added. Block ID: <b>'.$newbid.'</b>';
+                            $sql = 'INSERT INTO '.$db->prefix('block_module_link').' (block_id, module_id) VALUES ('.$newbid.', -1)';
+                            $db->query($sql);
+                            if ($template != '') {
+                                $tplfile =& $tplfile_handler->create();
+                                $tplfile->setVar('tpl_refid', $newbid);
+                                $tplfile->setVar('tpl_source', $content, true);
+                                $tplfile->setVar('tpl_tplset', 'default');
+                                $tplfile->setVar('tpl_file', $block['template']);
+                                $tplfile->setVar('tpl_module', $dirname);
+                                $tplfile->setVar('tpl_type', 'block');
+                                $tplfile->setVar('tpl_desc', $block['description'], true);
+                                $tplfile->setVar('tpl_lastimported', 0);
+                                $tplfile->setVar('tpl_lastmodified', time());
+                                if (!$tplfile_handler->insert($tplfile)) {
+                                    $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert template <b>'.$block['template'].'</b> to the database.</span>';
+                                } else {
+                                    $newtplid = $tplfile->getVar('tpl_id');
+                                    $msgs[] = '&nbsp;&nbsp;Template <b>'.$block['template'].'</b> added to the database. (ID: <b>'.$newtplid.'</b>)';
+                                    // generate compiled file
+                                    include_once XOOPS_ROOT_PATH.'/class/template.php';
+                                    if (!xoops_template_touch($newtplid)) {
+                                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Failed compiling template <b>'.$block['template'].'</b>.</span>';
+                                    } else {
+                                        $msgs[] = '&nbsp;&nbsp;Template <b>'.$block['template'].'</b> compiled.</span>';
+                                    }
+                                }
+                            }
+                        }
+                        unset($content);
+                    }
+                    unset($blocks);
+                }
+                $configs = $module->getInfo('config');
+                if ($configs != false) {
+                    if ($module->getVar('hascomments') != 0) {
+                        include_once(XOOPS_ROOT_PATH.'/include/comment_constants.php');
+                        array_push($configs, array('name' => 'com_rule', 'title' => '_CM_COMRULES', 'description' => '', 'formtype' => 'select', 'valuetype' => 'int', 'default' => 1, 'options' => array('_CM_COMNOCOM' => XOOPS_COMMENT_APPROVENONE, '_CM_COMAPPROVEALL' => XOOPS_COMMENT_APPROVEALL, '_CM_COMAPPROVEUSER' => XOOPS_COMMENT_APPROVEUSER, '_CM_COMAPPROVEADMIN' => XOOPS_COMMENT_APPROVEADMIN)));
+                        array_push($configs, array('name' => 'com_anonpost', 'title' => '_CM_COMANONPOST', 'description' => '', 'formtype' => 'yesno', 'valuetype' => 'int', 'default' => 0));
+                    }
+                } else {
+                    if ($module->getVar('hascomments') != 0) {
+                        $configs = array();
+                        include_once(XOOPS_ROOT_PATH.'/include/comment_constants.php');
+                        $configs[] = array('name' => 'com_rule', 'title' => '_CM_COMRULES', 'description' => '', 'formtype' => 'select', 'valuetype' => 'int', 'default' => 1, 'options' => array('_CM_COMNOCOM' => XOOPS_COMMENT_APPROVENONE, '_CM_COMAPPROVEALL' => XOOPS_COMMENT_APPROVEALL, '_CM_COMAPPROVEUSER' => XOOPS_COMMENT_APPROVEUSER, '_CM_COMAPPROVEADMIN' => XOOPS_COMMENT_APPROVEADMIN));
+                        $configs[] = array('name' => 'com_anonpost', 'title' => '_CM_COMANONPOST', 'description' => '', 'formtype' => 'yesno', 'valuetype' => 'int', 'default' => 0);
+                    }
+                }
+                // RMV-NOTIFY
+                if ($module->getVar('hasnotification') != 0) {
+                    if (empty($configs)) {
+                        $configs = array();
+                    }
+                    // Main notification options
+                    include_once XOOPS_ROOT_PATH . '/include/notification_constants.php';
+                    include_once XOOPS_ROOT_PATH . '/include/notification_functions.php';
+                    $options = array();
+                    $options['_NOT_CONFIG_DISABLE'] = XOOPS_NOTIFICATION_DISABLE;
+                    $options['_NOT_CONFIG_ENABLEBLOCK'] = XOOPS_NOTIFICATION_ENABLEBLOCK;
+                    $options['_NOT_CONFIG_ENABLEINLINE'] = XOOPS_NOTIFICATION_ENABLEINLINE;
+                    $options['_NOT_CONFIG_ENABLEBOTH'] = XOOPS_NOTIFICATION_ENABLEBOTH;
+
+                    //$configs[] = array ('name' => 'notification_enabled', 'title' => '_NOT_CONFIG_ENABLED', 'description' => '_NOT_CONFIG_ENABLEDDSC', 'formtype' => 'yesno', 'valuetype' => 'int', 'default' => 1);
+                    $configs[] = array ('name' => 'notification_enabled', 'title' => '_NOT_CONFIG_ENABLE', 'description' => '_NOT_CONFIG_ENABLEDSC', 'formtype' => 'select', 'valuetype' => 'int', 'default' => XOOPS_NOTIFICATION_ENABLEBOTH, 'options' => $options);
+                    // Event-specific notification options
+                    // FIXME: doesn't work when update module... can't read back the array of options properly...  " changing to &quot;
+                    $options = array();
+                    $categories =& notificationCategoryInfo('',$module->getVar('mid'));
+                    foreach ($categories as $category) {
+                        $events =& notificationEvents ($category['name'], false, $module->getVar('mid'));
+                        foreach ($events as $event) {
+                            if (!empty($event['invisible'])) {
+                                continue;
+                            }
+                            $option_name = $category['title'] . ' : ' . $event['title'];
+                            $option_value = $category['name'] . '-' . $event['name'];
+                            $options[$option_name] = $option_value;
+                        }
+                    }
+                    $configs[] = array ('name' => 'notification_events', 'title' => '_NOT_CONFIG_EVENTS', 'description' => '_NOT_CONFIG_EVENTSDSC', 'formtype' => 'select_multi', 'valuetype' => 'array', 'default' => array_values($options), 'options' => $options);
+                }
+
+                if ($configs != false) {
+                    $msgs[] = 'Adding module config data...';
+                    $config_handler =& xoops_gethandler('config');
+                    $order = 0;
+                    foreach ($configs as $config) {
+                        $confobj =& $config_handler->createConfig();
+                        $confobj->setVar('conf_modid', $newmid);
+                        $confobj->setVar('conf_catid', 0);
+                        $confobj->setVar('conf_name', $config['name']);
+                        $confobj->setVar('conf_title', $config['title'], true);
+                        $confobj->setVar('conf_desc', $config['description'], true);
+                        $confobj->setVar('conf_formtype', $config['formtype']);
+                        $confobj->setVar('conf_valuetype', $config['valuetype']);
+                        $confobj->setConfValueForInput($config['default'], true);
+                        //$confobj->setVar('conf_value', $config['default'], true);
+                        $confobj->setVar('conf_order', $order);
+                        $confop_msgs = '';
+                        if (isset($config['options']) && is_array($config['options'])) {
+                            foreach ($config['options'] as $key => $value) {
+                                $confop =& $config_handler->createConfigOption();
+                                $confop->setVar('confop_name', $key, true);
+                                $confop->setVar('confop_value', $value, true);
+                                $confobj->setConfOptions($confop);
+                                $confop_msgs .= '<br />&nbsp;&nbsp;&nbsp;&nbsp;Config option added. Name: <b>'.$key.'</b> Value: <b>'.$value.'</b>';
+                                unset($confop);
+                            }
+                        }
+                        $order++;
+                        if ($config_handler->insertConfig($confobj) != false) {
+                            $msgs[] = '&nbsp;&nbsp;Config <b>'.$config['name'].'</b> added to the database.'.$confop_msgs;
+                        } else {
+                            $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert config <b>'.$config['name'].'</b> to the database.</span>';
+                        }
+                        unset($confobj);
+                    }
+                    unset($configs);
+                }
+            }
+
+            $groups =& $xoopsUser->getGroups();
+            // retrieve all block ids for this module
+            $blocks =& XoopsBlock::getByModule($newmid, false);
+            $msgs[] = 'Setting group rights...';
+            $gperm_handler =& xoops_gethandler('groupperm');
+            foreach ($groups as $mygroup) {
+                if ($gperm_handler->checkRight('module_admin', 0, $mygroup)) {
+                    $mperm =& $gperm_handler->create();
+                    $mperm->setVar('gperm_groupid', $mygroup);
+                    $mperm->setVar('gperm_itemid', $newmid);
+                    $mperm->setVar('gperm_name', 'module_admin');
+                    $mperm->setVar('gperm_modid', 1);
+                    if (!$gperm_handler->insert($mperm)) {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not add admin access right for Group ID <b>'.$mygroup.'</b></span>';
+                    } else {
+                        $msgs[] = '&nbsp;&nbsp;Added admin access right for Group ID <b>'.$mygroup.'</b>';
+                    }
+                    unset($mperm);
+                }
+                $mperm =& $gperm_handler->create();
+                $mperm->setVar('gperm_groupid', $mygroup);
+                $mperm->setVar('gperm_itemid', $newmid);
+                $mperm->setVar('gperm_name', 'module_read');
+                $mperm->setVar('gperm_modid', 1);
+                if (!$gperm_handler->insert($mperm)) {
+                    $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not add user access right for Group ID: <b>'.$mygroup.'</b></span>';
+                } else {
+                    $msgs[] = '&nbsp;&nbsp;Added user access right for Group ID: <b>'.$mygroup.'</b>';
+                }
+                unset($mperm);
+                foreach ($blocks as $blc) {
+                    $bperm =& $gperm_handler->create();
+                    $bperm->setVar('gperm_groupid', $mygroup);
+                    $bperm->setVar('gperm_itemid', $blc);
+                    $bperm->setVar('gperm_name', 'block_read');
+                    $bperm->setVar('gperm_modid', 1);
+                    if (!$gperm_handler->insert($bperm)) {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not add block access right. Block ID: <b>'.$blc.'</b> Group ID: <b>'.$mygroup.'</b></span>';
+                    } else {
+                        $msgs[] = '&nbsp;&nbsp;Added block access right. Block ID: <b>'.$blc.'</b> Group ID: <b>'.$mygroup.'</b>';
+                    }
+                    unset($bperm);
+                }
+            }
+            unset($blocks);
+            unset($groups);
+
+            // execute module specific install script if any
+            $install_script = $module->getInfo('onInstall');
+            if (false != $install_script && trim($install_script) != '') {
+                include_once XOOPS_ROOT_PATH.'/modules/'.$dirname.'/'.trim($install_script);
+                if (function_exists('xoops_module_install_'.$dirname)) {
+                    $func = 'xoops_module_install_'.$dirname;
+                    if (!$func($module)) {
+                        $msgs[] = 'Failed to execute '.$func;
+                    } else {
+                        $msgs[] = '<b>'.$func.'</b> executed successfully.';
+                    }
+                }
+            }
+
+            $ret = '<p><code>';
+            foreach ($msgs as $m) {
+                $ret .= $m.'<br />';
+            }
+            unset($msgs);
+            unset($errs);
+            $ret .= '</code><br />'.sprintf(_MD_AM_OKINS, "<b>".$module->getVar('name')."</b>").'</p>';
+            unset($module);
+            return $ret;
+        } else {
+            $ret = '<p>';
+            foreach ($errs as $er) {
+                $ret .= '&nbsp;&nbsp;'.$er.'<br />';
+            }
+            unset($msgs);
+            unset($errs);
+            $ret .= '<br />'.sprintf(_MD_AM_FAILINS, '<b>'.$dirname.'</b>').'&nbsp;'._MD_AM_ERRORSC.'</p>';
+            return $ret;
+        }
+    }
+    else {
+        return "<p>".sprintf(_MD_AM_FAILINS, "<b>".$dirname."</b>")."&nbsp;"._MD_AM_ERRORSC."<br />&nbsp;&nbsp;".sprintf(_MD_AM_ALEXISTS, $dirname)."</p>";
+    }
+}
+
+function &xoops_module_gettemplate($dirname, $template, $block=false)
+{
+    global $xoopsConfig;
+    if ($block) {
+        $path = XOOPS_ROOT_PATH.'/modules/'.$dirname.'/templates/blocks/'.$template;
+    } else {
+        $path = XOOPS_ROOT_PATH.'/modules/'.$dirname.'/templates/'.$template;
+    }
+    if (!file_exists($path)) {
+        return false;
+    } else {
+        $lines = file($path);
+    }
+    if (!$lines) {
+        return false;
+    }
+    $ret = '';
+    $count = count($lines);
+    for ($i = 0; $i < $count; $i++) {
+        $ret .= str_replace("\n", "\r\n", str_replace("\r\n", "\n", $lines[$i]));
+    }
+    return $ret;
+}
+
+function xoops_module_uninstall($dirname)
+{
+    global $xoopsConfig;
+    $reservedTables = array('avatar', 'avatar_users_link', 'block_module_link', 'xoopscomments', 'config', 'configcategory', 'configoption', 'image', 'imagebody', 'imagecategory', 'imgset', 'imgset_tplset_link', 'imgsetimg', 'groups','groups_users_link','group_permission', 'online', 'bannerclient', 'banner', 'bannerfinish', 'priv_msgs', 'ranks', 'session', 'smiles', 'users', 'newblocks', 'modules', 'tplfile', 'tplset', 'tplsource', 'xoopsnotifications', 'banner', 'bannerclient', 'bannerfinish');
+    $db =& Database::getInstance();
+    $module_handler =& xoops_gethandler('module');
+    $module =& $module_handler->getByDirname($dirname);
+    include_once XOOPS_ROOT_PATH.'/class/template.php';
+    xoops_template_clear_module_cache($module->getVar('mid'));
+    if ($module->getVar('dirname') == 'system') {
+        return "<p>".sprintf(_MD_AM_FAILUNINS, "<b>".$module->getVar('name')."</b>")."&nbsp;"._MD_AM_ERRORSC."<br /> - "._MD_AM_SYSNO."</p>";
+    } elseif ($module->getVar('dirname') == $xoopsConfig['startpage']) {
+        return "<p>".sprintf(_MD_AM_FAILUNINS, "<b>".$module->getVar('name')."</b>")."&nbsp;"._MD_AM_ERRORSC."<br /> - "._MD_AM_STRTNO."</p>";
+    } else {
+        $msgs = array();
+        if (!$module_handler->delete($module)) {
+            $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete '.$module->getVar('name').'</span>';
+        } else {
+
+            // delete template files
+            $tplfile_handler = xoops_gethandler('tplfile');
+            $templates =& $tplfile_handler->find(null, 'module', $module->getVar('mid'));
+            $tcount = count($templates);
+            if ($tcount > 0) {
+                $msgs[] = 'Deleting templates...';
+                for ($i = 0; $i < $tcount; $i++) {
+                    if (!$tplfile_handler->delete($templates[$i])) {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete template '.$templates[$i]->getVar('tpl_file').' from the database. Template ID: <b>'.$templates[$i]->getVar('tpl_id').'</b></span>';
+                    } else {
+                        $msgs[] = '&nbsp;&nbsp;Template <b>'.$templates[$i]->getVar('tpl_file').'</b> deleted from the database. Template ID: <b>'.$templates[$i]->getVar('tpl_id').'</b>';
+                    }
+                }
+            }
+            unset($templates);
+
+            // delete blocks and block tempalte files
+            $block_arr =& XoopsBlock::getByModule($module->getVar('mid'));
+            if (is_array($block_arr)) {
+                $bcount = count($block_arr);
+                $msgs[] = 'Deleting block...';
+                for ($i = 0; $i < $bcount; $i++) {
+                    if (!$block_arr[$i]->delete()) {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete block <b>'.$block_arr[$i]->getVar('name').'</b> Block ID: <b>'.$block_arr[$i]->getVar('bid').'</b></span>';
+                    } else {
+                        $msgs[] = '&nbsp;&nbsp;Block <b>'.$block_arr[$i]->getVar('name').'</b> deleted. Block ID: <b>'.$block_arr[$i]->getVar('bid').'</b>';
+                    }
+                    if ($block_arr[$i]->getVar('template') != ''){
+                        $templates =& $tplfile_handler->find(null, 'block', $block_arr[$i]->getVar('bid'));
+                        $btcount = count($templates);
+                        if ($btcount > 0) {
+                            for ($j = 0; $j < $btcount; $j++) {
+                                if (!$tplfile_handler->delete($templates[$j])) {
+                                $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete block template '.$templates[$j]->getVar('tpl_file').' from the database. Template ID: <b>'.$templates[$j]->getVar('tpl_id').'</b></span>';
+                                } else {
+                                $msgs[] = '&nbsp;&nbsp;Block template <b>'.$templates[$j]->getVar('tpl_file').'</b> deleted from the database. Template ID: <b>'.$templates[$j]->getVar('tpl_id').'</b>';
+                                }
+                            }
+                        }
+                        unset($templates);
+                    }
+                }
+            }
+
+            // delete tables used by this module
+            $modtables = $module->getInfo('tables');
+            if ($modtables != false && is_array($modtables)) {
+                $msgs[] = 'Deleting module tables...';
+                foreach ($modtables as $table) {
+                    // prevent deletion of reserved core tables!
+                    if (!in_array($table, $reservedTables)) {
+                        $sql = 'DROP TABLE '.$db->prefix($table);
+                        if (!$db->query($sql)) {
+                            $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not drop table <b>'.$db->prefix($table).'<b>.</span>';
+                        } else {
+                            $msgs[] = '&nbsp;&nbsp;Table <b>'.$db->prefix($table).'</b> dropped.</span>';
+                        }
+                    } else {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Not allowed to drop table <b>'.$db->prefix($table).'</b>!</span>';
+                    }
+                }
+            }
+
+            // delete comments if any
+            if ($module->getVar('hascomments') != 0) {
+                $msgs[] = 'Deleting comments...';
+                $comment_handler =& xoops_gethandler('comment');
+                if (!$comment_handler->deleteByModule($module->getVar('mid'))) {
+                    $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete comments</span>';
+                } else {
+                    $msgs[] = '&nbsp;&nbsp;Comments deleted';
+                }
+            }
+
+            // RMV-NOTIFY
+            // delete notifications if any
+            if ($module->getVar('hasnotification') != 0) {
+                $msgs[] = 'Deleting notifications...';
+                if (!xoops_notification_deletebymodule($module->getVar('mid'))) {
+                    $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete notifications</span>';
+                } else {
+                    $msgs[] = '&nbsp;&nbsp;Notifications deleted';
+                }
+            }
+
+            // delete permissions if any
+            $gperm_handler =& xoops_gethandler('groupperm');
+            if (!$gperm_handler->deleteByModule($module->getVar('mid'))) {
+                $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete group permissions</span>';
+            } else {
+                $msgs[] = '&nbsp;&nbsp;Group permissions deleted';
+            }
+
+            // delete module config options if any
+            if ($module->getVar('hasconfig') != 0 || $module->getVar('hascomments') != 0) {
+                $config_handler =& xoops_gethandler('config');
+                $configs =& $config_handler->getConfigs(new Criteria('conf_modid', $module->getVar('mid')));
+                $confcount = count($configs);
+                if ($confcount > 0) {
+                    $msgs[] = 'Deleting module config options...';
+                    for ($i = 0; $i < $confcount; $i++) {
+                        if (!$config_handler->deleteConfig($configs[$i])) {
+                            $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete config data from the database. Config ID: <b>'.$configs[$i]->getvar('conf_id').'</b></span>';
+                        } else {
+                            $msgs[] = '&nbsp;&nbsp;Config data deleted from the database. Config ID: <b>'.$configs[$i]->getVar('conf_id').'</b>';
+                        }
+                    }
+                }
+            }
+
+            // execute module specific install script if any
+            $uninstall_script = $module->getInfo('onUninstall');
+            if (false != $uninstall_script && trim($uninstall_script) != '') {
+                include_once XOOPS_ROOT_PATH.'/modules/'.$dirname.'/'.trim($uninstall_script);
+                if (function_exists('xoops_module_uninstall_'.$dirname)) {
+                    $func = 'xoops_module_uninstall_'.$dirname;
+                    if (!$func($module)) {
+                        $msgs[] = 'Failed to execute <b>'.$func.'</b>';
+                    } else {
+                        $msgs[] = '<b>'.$func.'</b> executed successfully.';
+                    }
+                }
+            }
+
+            $msgs[] = '</code><p>'.sprintf(_MD_AM_OKUNINS, "<b>".$module->getVar('name')."</b>").'</p>';
+        }
+        $ret = '<code>';
+        foreach ($msgs as $msg) {
+            $ret .= $msg.'<br />';
+        }
+        return $ret;
+    }
+}
+
+function xoops_module_activate($mid)
+{
+    $module_handler =& xoops_gethandler('module');
+    $module =& $module_handler->get($mid);
+    include_once XOOPS_ROOT_PATH.'/class/template.php';
+    xoops_template_clear_module_cache($module->getVar('mid'));
+    $module->setVar('isactive', 1);
+    if (!$module_handler->insert($module)) {
+        $ret = "<p>".sprintf(_MD_AM_FAILACT, "<b>".$module->getVar('name')."</b>")."&nbsp;"._MD_AM_ERRORSC."<br />".$module->getHtmlErrors();
+        return $ret."</p>";
+    }
+    $blocks =& XoopsBlock::getByModule($module->getVar('mid'));
+    $bcount = count($blocks);
+    for ($i = 0; $i < $bcount; $i++) {
+        $blocks[$i]->setVar('isactive', 1);
+        $blocks[$i]->store();
+    }
+    return "<p>".sprintf(_MD_AM_OKACT, "<b>".$module->getVar('name')."</b>")."</p>";
+}
+
+function xoops_module_deactivate($mid)
+{
+    global $xoopsConfig;
+    $module_handler =& xoops_gethandler('module');
+    $module =& $module_handler->get($mid);
+    include_once XOOPS_ROOT_PATH.'/class/template.php';
+    xoops_template_clear_module_cache($mid);
+    $module->setVar('isactive', 0);
+    if ($module->getVar('dirname') == "system") {
+        return "<p>".sprintf(_MD_AM_FAILDEACT, "<b>".$module->getVar('name')."</b>")."&nbsp;"._MD_AM_ERRORSC."<br /> - "._MD_AM_SYSNO."</p>";
+    } elseif ($module->getVar('dirname') == $xoopsConfig['startpage']) {
+        return "<p>".sprintf(_MD_AM_FAILDEACT, "<b>".$module->getVar('name')."</b>")."&nbsp;"._MD_AM_ERRORSC."<br /> - "._MD_AM_STRTNO."</p>";
+    } else {
+        if (!$module_handler->insert($module)) {
+            $ret = "<p>".sprintf(_MD_AM_FAILDEACT, "<b>".$module->getVar('name')."</b>")."&nbsp;"._MD_AM_ERRORSC."<br />".$module->getHtmlErrors();
+            return $ret."</p>";
+        }
+        $blocks =& XoopsBlock::getByModule($module->getVar('mid'));
+        $bcount = count($blocks);
+        for ($i = 0; $i < $bcount; $i++) {
+            $blocks[$i]->setVar('isactive', 0);
+            $blocks[$i]->store();
+        }
+        return "<p>".sprintf(_MD_AM_OKDEACT, "<b>".$module->getVar('name')."</b>")."</p>";
+    }
+}
+
+function xoops_module_change($mid, $weight, $name)
+{
+    $module_handler =& xoops_gethandler('module');
+    $module =& $module_handler->get($mid);
+    $module->setVar('weight', $weight);
+    $module->setVar('name', $name);
+    $myts =& MyTextSanitizer::getInstance();
+    if (!$module_handler->insert($module)) {
+        $ret = "<p>".sprintf(_MD_AM_FAILORDER, "<b>".$myts->stripSlashesGPC($name)."</b>")."&nbsp;"._MD_AM_ERRORSC."<br />";
+        $ret .= $module->getHtmlErrors()."</p>";
+        return $ret;
+    }
+    return "<p>".sprintf(_MD_AM_OKORDER, "<b>".$myts->stripSlashesGPC($name)."</b>")."</p>";
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/modulesadmin.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,44 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_MDAD;
+$modversion['version'] = "";
+$modversion['description'] = "Modules Administration";
+$modversion['author'] = "Kazumi Ono<br>( http://www.mywebaddons.com/ )";
+$modversion['credits'] = "";
+$modversion['help'] = "modulesadmin.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "modulesadmin.gif";
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=modulesadmin";
+$modversion['category'] = XOOPS_SYSTEM_MODULE;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/modulesadmin/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/preferences/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/preferences/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/preferences/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,444 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+} else {
+    $op = 'list';
+    if (isset($_POST)) {
+        foreach ( $_POST as $k => $v ) {
+            ${$k} = $v;
+        }
+    }
+    if (isset($_GET['op'])) {
+        $op = trim($_GET['op']);
+    }
+
+    if (isset($_GET['confcat_id'])) {
+        $confcat_id = intval($_GET['confcat_id']);
+    }
+    if ($op == 'list') {
+        $confcat_handler =& xoops_gethandler('configcategory');
+        $confcats =& $confcat_handler->getObjects();
+        $catcount = count($confcats);
+        xoops_cp_header();
+        echo '<h4 style="text-align:left">'._MD_AM_SITEPREF.'</h4><ul>';
+        for ($i = 0; $i < $catcount; $i++) {
+            echo '<li>'.constant($confcats[$i]->getVar('confcat_name')).' [<a href="admin.php?fct=preferences&amp;op=show&amp;confcat_id='.$confcats[$i]->getVar('confcat_id').'">'._EDIT.'</a>]</li>';
+        }
+        echo '</ul>';
+        xoops_cp_footer();
+        exit();
+    }
+
+    if ($op == 'show') {
+        if (empty($confcat_id)) {
+            $confcat_id = 1;
+        }
+        $confcat_handler =& xoops_gethandler('configcategory');
+        $confcat =& $confcat_handler->get($confcat_id);
+        if (!is_object($confcat)) {
+            redirect_header('admin.php?fct=preferences', 1);
+        }
+        include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+        include_once XOOPS_ROOT_PATH.'/class/xoopslists.php';
+        $form = new XoopsThemeForm(constant($confcat->getVar('confcat_name')), 'pref_form', 'admin.php?fct=preferences', 'post', true);
+        $config_handler =& xoops_gethandler('config');
+        $criteria = new CriteriaCompo();
+        $criteria->add(new Criteria('conf_modid', 0));
+        $criteria->add(new Criteria('conf_catid', $confcat_id));
+        $config =& $config_handler->getConfigs($criteria);
+        $confcount = count($config);
+        for ($i = 0; $i < $confcount; $i++) {
+            $title = (!defined($config[$i]->getVar('conf_desc')) || constant($config[$i]->getVar('conf_desc')) == '') ? constant($config[$i]->getVar('conf_title')) : constant($config[$i]->getVar('conf_title')).'<br /><br /><span style="font-weight:normal;">'.constant($config[$i]->getVar('conf_desc')).'</span>';
+            switch ($config[$i]->getVar('conf_formtype')) {
+            case 'textarea':
+                $myts =& MyTextSanitizer::getInstance();
+                if ($config[$i]->getVar('conf_valuetype') == 'array') {
+                    // this is exceptional.. only when value type is arrayneed a smarter way for this
+                    $ele = ($config[$i]->getVar('conf_value') != '') ? new XoopsFormTextArea($title, $config[$i]->getVar('conf_name'), $myts->htmlspecialchars(implode('|', $config[$i]->getConfValueForOutput())), 5, 50) : new XoopsFormTextArea($title, $config[$i]->getVar('conf_name'), '', 5, 50);
+                } else {
+                    $ele = new XoopsFormTextArea($title, $config[$i]->getVar('conf_name'), $myts->htmlspecialchars($config[$i]->getConfValueForOutput()), 5, 50);
+                }
+                break;
+            case 'select':
+                $ele = new XoopsFormSelect($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput());
+                $options =& $config_handler->getConfigOptions(new Criteria('conf_id', $config[$i]->getVar('conf_id')));
+                $opcount = count($options);
+                for ($j = 0; $j < $opcount; $j++) {
+                    $optval = defined($options[$j]->getVar('confop_value')) ? constant($options[$j]->getVar('confop_value')) : $options[$j]->getVar('confop_value');
+                    $optkey = defined($options[$j]->getVar('confop_name')) ? constant($options[$j]->getVar('confop_name')) : $options[$j]->getVar('confop_name');
+                    $ele->addOption($optval, $optkey);
+                }
+                break;
+            case 'select_multi':
+                $ele = new XoopsFormSelect($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput(), 5, true);
+                $options =& $config_handler->getConfigOptions(new Criteria('conf_id', $config[$i]->getVar('conf_id')));
+                $opcount = count($options);
+                for ($j = 0; $j < $opcount; $j++) {
+                    $optval = defined($options[$j]->getVar('confop_value')) ? constant($options[$j]->getVar('confop_value')) : $options[$j]->getVar('confop_value');
+                    $optkey = defined($options[$j]->getVar('confop_name')) ? constant($options[$j]->getVar('confop_name')) : $options[$j]->getVar('confop_name');
+                    $ele->addOption($optval, $optkey);
+                }
+                break;
+            case 'yesno':
+                $ele = new XoopsFormRadioYN($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput(), _YES, _NO);
+                break;
+            case 'theme':
+            case 'theme_multi':
+                $ele = ($config[$i]->getVar('conf_formtype') != 'theme_multi') ? new XoopsFormSelect($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput()) : new XoopsFormSelect($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput(), 5, true);
+                $handle = opendir(XOOPS_THEME_PATH.'/');
+                $dirlist = array();
+                while (false !== ($file = readdir($handle))) {
+                    if (is_dir(XOOPS_THEME_PATH.'/'.$file) && !preg_match("/^[.]{1,2}$/",$file) && strtolower($file) != 'cvs') {
+                        $dirlist[$file]=$file;
+                    }
+                }
+                closedir($handle);
+                if (!empty($dirlist)) {
+                    asort($dirlist);
+                    $ele->addOptionArray($dirlist);
+                }
+                //$themeset_handler =& xoops_gethandler('themeset');
+                //$themesetlist =& $themeset_handler->getList();
+                //asort($themesetlist);
+                //foreach ($themesetlist as $key => $name) {
+                //  $ele->addOption($key, $name.' ('._MD_AM_THEMESET.')');
+                //}
+                // old theme value is used to determine whether to update cache or not. kind of dirty way
+                $form->addElement(new XoopsFormHidden('_old_theme', $config[$i]->getConfValueForOutput()));
+                break;
+            case 'tplset':
+                $ele = new XoopsFormSelect($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput());
+                $tplset_handler =& xoops_gethandler('tplset');
+                $tplsetlist =& $tplset_handler->getList();
+                asort($tplsetlist);
+                foreach ($tplsetlist as $key => $name) {
+                    $ele->addOption($key, $name);
+                }
+                // old theme value is used to determine whether to update cache or not. kind of dirty way
+                $form->addElement(new XoopsFormHidden('_old_theme', $config[$i]->getConfValueForOutput()));
+                break;
+            case 'timezone':
+                $ele = new XoopsFormSelectTimezone($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput());
+                break;
+            case 'language':
+                $ele = new XoopsFormSelectLang($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput());
+                break;
+            case 'startpage':
+                $ele = new XoopsFormSelect($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput());
+                $module_handler =& xoops_gethandler('module');
+                $criteria = new CriteriaCompo(new Criteria('hasmain', 1));
+                $criteria->add(new Criteria('isactive', 1));
+                $moduleslist =& $module_handler->getList($criteria, true);
+                $moduleslist['--'] = _MD_AM_NONE;
+                $ele->addOptionArray($moduleslist);
+                break;
+            case 'group':
+                $ele = new XoopsFormSelectGroup($title, $config[$i]->getVar('conf_name'), false, $config[$i]->getConfValueForOutput(), 1, false);
+                break;
+            case 'group_multi':
+                $ele = new XoopsFormSelectGroup($title, $config[$i]->getVar('conf_name'), false, $config[$i]->getConfValueForOutput(), 5, true);
+                break;
+            // RMV-NOTIFY - added 'user' and 'user_multi'
+            case 'user':
+                $ele = new XoopsFormSelectUser($title, $config[$i]->getVar('conf_name'), false, $config[$i]->getConfValueForOutput(), 1, false);
+                break;
+            case 'user_multi':
+                $ele = new XoopsFormSelectUser($title, $config[$i]->getVar('conf_name'), false, $config[$i]->getConfValueForOutput(), 5, true);
+                break;
+            case 'module_cache':
+                $module_handler =& xoops_gethandler('module');
+                $modules =& $module_handler->getObjects(new Criteria('hasmain', 1), true);
+                $currrent_val = $config[$i]->getConfValueForOutput();
+                $cache_options = array('0' => _NOCACHE, '30' => sprintf(_SECONDS, 30), '60' => _MINUTE, '300' => sprintf(_MINUTES, 5), '1800' => sprintf(_MINUTES, 30), '3600' => _HOUR, '18000' => sprintf(_HOURS, 5), '86400' => _DAY, '259200' => sprintf(_DAYS, 3), '604800' => _WEEK);
+                if (count($modules) > 0) {
+                    $ele = new XoopsFormElementTray($title, '<br />');
+                    foreach (array_keys($modules) as $mid) {
+                        $c_val = isset($currrent_val[$mid]) ? intval($currrent_val[$mid]) : null;
+                        $selform = new XoopsFormSelect($modules[$mid]->getVar('name'), $config[$i]->getVar('conf_name')."[$mid]", $c_val);
+                        $selform->addOptionArray($cache_options);
+                        $ele->addElement($selform);
+                        unset($selform);
+                    }
+                } else {
+                    $ele = new XoopsFormLabel($title, _MD_AM_NOMODULE);
+                }
+                break;
+            case 'site_cache':
+                $ele = new XoopsFormSelect($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput());
+                $ele->addOptionArray(array('0' => _NOCACHE, '30' => sprintf(_SECONDS, 30), '60' => _MINUTE, '300' => sprintf(_MINUTES, 5), '1800' => sprintf(_MINUTES, 30), '3600' => _HOUR, '18000' => sprintf(_HOURS, 5), '86400' => _DAY, '259200' => sprintf(_DAYS, 3), '604800' => _WEEK));
+                break;
+            case 'password':
+                $myts =& MyTextSanitizer::getInstance();
+                $ele = new XoopsFormPassword($title, $config[$i]->getVar('conf_name'), 50, 255, $myts->htmlspecialchars($config[$i]->getConfValueForOutput()));
+                break;
+            case 'textbox':
+            default:
+                $myts =& MyTextSanitizer::getInstance();
+                $ele = new XoopsFormText($title, $config[$i]->getVar('conf_name'), 50, 255, $myts->htmlspecialchars($config[$i]->getConfValueForOutput()));
+                break;
+            }
+            $hidden = new XoopsFormHidden('conf_ids[]', $config[$i]->getVar('conf_id'));
+            $form->addElement($ele);
+            $form->addElement($hidden);
+            unset($ele);
+            unset($hidden);
+        }
+        $form->addElement(new XoopsFormHidden('op', 'save'));
+        $form->addElement(new XoopsFormButton('', 'button', _GO, 'submit'));
+        xoops_cp_header();
+        echo '<a href="admin.php?fct=preferences">'. _MD_AM_PREFMAIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'.constant($confcat->getVar('confcat_name')).'<br /><br />';
+        $form->display();
+        xoops_cp_footer();
+        exit();
+    }
+
+    if ($op == 'showmod') {
+        $config_handler =& xoops_gethandler('config');
+        $mod = isset($_GET['mod']) ? intval($_GET['mod']) : 0;
+        if (empty($mod)) {
+            header('Location: admin.php?fct=preferences');
+            exit();
+        }
+        $config =& $config_handler->getConfigs(new Criteria('conf_modid', $mod));
+        $count = count($config);
+        if ($count < 1) {
+            redirect_header('admin.php?fct=preferences', 1);
+        }
+        include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+        $form = new XoopsThemeForm(_MD_AM_MODCONFIG, 'pref_form', 'admin.php?fct=preferences', 'post', true);
+        $module_handler =& xoops_gethandler('module');
+        $module =& $module_handler->get($mod);
+        if (file_exists(XOOPS_ROOT_PATH.'/modules/'.$module->getVar('dirname').'/language/'.$xoopsConfig['language'].'/modinfo.php')) {
+            include_once XOOPS_ROOT_PATH.'/modules/'.$module->getVar('dirname').'/language/'.$xoopsConfig['language'].'/modinfo.php';
+        }
+
+        // if has comments feature, need comment lang file
+        if ($module->getVar('hascomments') == 1) {
+            include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/comment.php';
+        }
+        // RMV-NOTIFY
+        // if has notification feature, need notification lang file
+        if ($module->getVar('hasnotification') == 1) {
+            include_once XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/notification.php';
+        }
+
+        $modname = $module->getVar('name');
+        if ($module->getInfo('adminindex')) {
+            $form->addElement(new XoopsFormHidden('redirect', XOOPS_URL.'/modules/'.$module->getVar('dirname').'/'.$module->getInfo('adminindex')));
+        }
+        for ($i = 0; $i < $count; $i++) {
+            $title = (!defined($config[$i]->getVar('conf_desc')) || constant($config[$i]->getVar('conf_desc')) == '') ? constant($config[$i]->getVar('conf_title')) : constant($config[$i]->getVar('conf_title')).'<br /><br /><span style="font-weight:normal;">'.constant($config[$i]->getVar('conf_desc')).'</span>';
+            switch ($config[$i]->getVar('conf_formtype')) {
+            case 'textarea':
+                $myts =& MyTextSanitizer::getInstance();
+                if ($config[$i]->getVar('conf_valuetype') == 'array') {
+                    // this is exceptional.. only when value type is arrayneed a smarter way for this
+                    $ele = ($config[$i]->getVar('conf_value') != '') ? new XoopsFormTextArea($title, $config[$i]->getVar('conf_name'), $myts->htmlspecialchars(implode('|', $config[$i]->getConfValueForOutput())), 5, 50) : new XoopsFormTextArea($title, $config[$i]->getVar('conf_name'), '', 5, 50);
+                } else {
+                    $ele = new XoopsFormTextArea($title, $config[$i]->getVar('conf_name'), $myts->htmlspecialchars($config[$i]->getConfValueForOutput()), 5, 50);
+                }
+                break;
+            case 'select':
+                $ele = new XoopsFormSelect($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput());
+                $options =& $config_handler->getConfigOptions(new Criteria('conf_id', $config[$i]->getVar('conf_id')));
+                $opcount = count($options);
+                for ($j = 0; $j < $opcount; $j++) {
+                    $optval = defined($options[$j]->getVar('confop_value')) ? constant($options[$j]->getVar('confop_value')) : $options[$j]->getVar('confop_value');
+                    $optkey = defined($options[$j]->getVar('confop_name')) ? constant($options[$j]->getVar('confop_name')) : $options[$j]->getVar('confop_name');
+                    $ele->addOption($optval, $optkey);
+                }
+                break;
+            case 'select_multi':
+                $ele = new XoopsFormSelect($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput(), 5, true);
+                $options =& $config_handler->getConfigOptions(new Criteria('conf_id', $config[$i]->getVar('conf_id')));
+                $opcount = count($options);
+                for ($j = 0; $j < $opcount; $j++) {
+                    $optval = defined($options[$j]->getVar('confop_value')) ? constant($options[$j]->getVar('confop_value')) : $options[$j]->getVar('confop_value');
+                    $optkey = defined($options[$j]->getVar('confop_name')) ? constant($options[$j]->getVar('confop_name')) : $options[$j]->getVar('confop_name');
+                    $ele->addOption($optval, $optkey);
+                }
+                break;
+            case 'yesno':
+                $ele = new XoopsFormRadioYN($title, $config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput(), _YES, _NO);
+                break;
+            case 'group':
+                include_once XOOPS_ROOT_PATH.'/class/xoopslists.php';
+                $ele = new XoopsFormSelectGroup($title, $config[$i]->getVar('conf_name'), false, $config[$i]->getConfValueForOutput(), 1, false);
+                break;
+            case 'group_multi':
+                include_once XOOPS_ROOT_PATH.'/class/xoopslists.php';
+                $ele = new XoopsFormSelectGroup($title, $config[$i]->getVar('conf_name'), false, $config[$i]->getConfValueForOutput(), 5, true);
+                break;
+            // RMV-NOTIFY: added 'user' and 'user_multi'
+            case 'user':
+                include_once XOOPS_ROOT_PATH.'/class/xoopslists.php';
+                $ele = new XoopsFormSelectUser($title, $config[$i]->getVar('conf_name'), false, $config[$i]->getConfValueForOutput(), 1, false);
+                break;
+            case 'user_multi':
+                include_once XOOPS_ROOT_PATH.'/class/xoopslists.php';
+                $ele = new XoopsFormSelectUser($title, $config[$i]->getVar('conf_name'), false, $config[$i]->getConfValueForOutput(), 5, true);
+                break;
+            case 'password':
+                $myts =& MyTextSanitizer::getInstance();
+                $ele = new XoopsFormPassword($title, $config[$i]->getVar('conf_name'), 50, 255, $myts->htmlspecialchars($config[$i]->getConfValueForOutput()));
+                break;
+            case 'textbox':
+            default:
+                $myts =& MyTextSanitizer::getInstance();
+                $ele = new XoopsFormText($title, $config[$i]->getVar('conf_name'), 50, 255, $myts->htmlspecialchars($config[$i]->getConfValueForOutput()));
+                break;
+            }
+            $hidden = new XoopsFormHidden('conf_ids[]', $config[$i]->getVar('conf_id'));
+            $form->addElement($ele);
+            $form->addElement($hidden);
+            unset($ele);
+            unset($hidden);
+        }
+        $form->addElement(new XoopsFormHidden('op', 'save'));
+        $form->addElement(new XoopsFormButton('', 'button', _GO, 'submit'));
+        xoops_cp_header();
+        $form->display();
+        xoops_cp_footer();
+        exit();
+    }
+
+    if ($op == 'save') {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header("admin.php?fct=preferences", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        require_once(XOOPS_ROOT_PATH.'/class/template.php');
+        $xoopsTpl = new XoopsTpl();
+        $xoopsTpl->clear_all_cache();
+        // regenerate admin menu file
+        xoops_module_write_admin_menu(xoops_module_get_admin_menu());
+        $count = count($conf_ids);
+        $tpl_updated = false;
+        $theme_updated = false;
+        $startmod_updated = false;
+        $lang_updated = false;
+        if ($count > 0) {
+            for ($i = 0; $i < $count; $i++) {
+                $config =& $config_handler->getConfig($conf_ids[$i]);
+                $new_value =& ${$config->getVar('conf_name')};
+                if (is_array($new_value) || $new_value != $config->getVar('conf_value')) {
+                    // if language has been changed
+                    if (!$lang_updated && $config->getVar('conf_catid') == XOOPS_CONF && $config->getVar('conf_name') == 'language') {
+                        // regenerate admin menu file
+                        $xoopsConfig['language'] = ${$config->getVar('conf_name')};
+                        xoops_module_write_admin_menu(xoops_module_get_admin_menu());
+                        $lang_updated = true;
+                    }
+
+                    // if default theme has been changed
+                    if (!$theme_updated && $config->getVar('conf_catid') == XOOPS_CONF && $config->getVar('conf_name') == 'theme_set') {
+                        $member_handler =& xoops_gethandler('member');
+                        $member_handler->updateUsersByField('theme', ${$config->getVar('conf_name')});
+                        $theme_updated = true;
+                    }
+
+                    // if default template set has been changed
+                    if (!$tpl_updated && $config->getVar('conf_catid') == XOOPS_CONF && $config->getVar('conf_name') == 'template_set') {
+                        // clear cached/compiled files and regenerate them if default theme has been changed
+                        if ($xoopsConfig['template_set'] != ${$config->getVar('conf_name')}) {
+                            $newtplset = ${$config->getVar('conf_name')};
+
+                            // clear all compiled and cachedfiles
+                            $xoopsTpl->clear_compiled_tpl();
+
+                            // generate compiled files for the new theme
+                            // block files only for now..
+                            $tplfile_handler =& xoops_gethandler('tplfile');
+                            $dtemplates =& $tplfile_handler->find('default', 'block');
+                            $dcount = count($dtemplates);
+
+                            // need to do this to pass to xoops_template_touch function
+                            $GLOBALS['xoopsConfig']['template_set'] = $newtplset;
+
+                            for ($i = 0; $i < $dcount; $i++) {
+                                $found =& $tplfile_handler->find($newtplset, 'block', $dtemplates[$i]->getVar('tpl_refid'), null);
+                                if (count($found) > 0) {
+                                    // template for the new theme found, compile it
+                                    xoops_template_touch($found[0]->getVar('tpl_id'));
+                                } else {
+                                    // not found, so compile 'default' template file
+                                    xoops_template_touch($dtemplates[$i]->getVar('tpl_id'));
+                                }
+                            }
+
+                            // generate image cache files from image binary data, save them under cache/
+                            $image_handler =& xoops_gethandler('imagesetimg');
+                            $imagefiles =& $image_handler->getObjects(new Criteria('tplset_name', $newtplset), true);
+                            foreach (array_keys($imagefiles) as $i) {
+                                if (!$fp = fopen(XOOPS_CACHE_PATH.'/'.$newtplset.'_'.$imagefiles[$i]->getVar('imgsetimg_file'), 'wb')) {
+                                } else {
+                                    fwrite($fp, $imagefiles[$i]->getVar('imgsetimg_body'));
+                                    fclose($fp);
+                                }
+                            }
+                        }
+                        $tpl_updated = true;
+                    }
+
+                    // add read permission for the start module to all groups
+                    if (!$startmod_updated  && $new_value != '--' && $config->getVar('conf_catid') == XOOPS_CONF && $config->getVar('conf_name') == 'startpage') {
+                        $member_handler =& xoops_gethandler('member');
+                        $groups =& $member_handler->getGroupList();
+                        $moduleperm_handler =& xoops_gethandler('groupperm');
+                        $module_handler =& xoops_gethandler('module');
+                        $module =& $module_handler->getByDirname($new_value);
+                        foreach ($groups as $groupid => $groupname) {
+                            if (!$moduleperm_handler->checkRight('module_read', $module->getVar('mid'), $groupid)) {
+                                $moduleperm_handler->addRight('module_read', $module->getVar('mid'), $groupid);
+                            }
+                        }
+                        $startmod_updated = true;
+                    }
+
+                    $config->setConfValueForInput($new_value);
+                    $config_handler->insertConfig($config);
+                }
+                unset($new_value);
+            }
+        }
+        if (!empty($use_mysession) && $xoopsConfig['use_mysession'] == 0 && $session_name != '') {
+                setcookie($session_name, session_id(), time()+(60*intval($session_expire)), '/',  '', 0);
+        }
+        if (isset($redirect) && $redirect != '') {
+            redirect_header($redirect, 2, _MD_AM_DBUPDATED);
+        } else {
+            redirect_header("admin.php?fct=preferences",2,_MD_AM_DBUPDATED);
+        }
+    }
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/preferences/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/preferences/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/preferences/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/preferences/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_PREF;
+$modversion['version'] = "";
+$modversion['description'] = "XOOPS Site Preferences";
+$modversion['author'] = "";
+$modversion['credits'] = "The XOOPS Project";
+$modversion['help'] = "preferences.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "pref.gif";
+
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=preferences";
+$modversion['category'] = XOOPS_SYSTEM_PREF;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/preferences/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/smilies/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/smilies/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/smilies/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,178 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+include_once XOOPS_ROOT_PATH."/modules/system/admin/smilies/smilies.php";
+$op ='SmilesAdmin';
+
+if (!empty($_GET['op'])) {
+    $op = $_GET['op'];
+} elseif (!empty($_POST['op'])) {
+    $op = $_POST['op'];
+}
+
+switch($op) {
+case "SmilesUpdate":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header('admin.php?fct=smilies', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $count = (!empty($_POST['smile_id']) && is_array($_POST['smile_id'])) ? count($_POST['smile_id']) : 0;
+    $db =& Database::getInstance();
+    for ($i = 0; $i < $count; $i++) {
+        $smile_id = intval($_POST['smile_id'][$i]);
+        if (empty($smile_id)) {
+            continue;
+        }
+        $smile_display = empty($_POST['smile_display'][$i]) ? 0 : 1;
+        if (isset($_POST['old_display'][$i]) && $_POST['old_display'][$i] != $smile_display[$i]) {
+            $db->query('UPDATE '.$db->prefix('smiles').' SET display='.$smile_display.' WHERE id ='.$smile_id);
+        }
+    }
+    redirect_header('admin.php?fct=smilies',2,_AM_DBUPDATED);
+    break;
+
+case "SmilesAdd":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header('admin.php?fct=smilies', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $db =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+    $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/x-png'), 100000, 120, 120);
+    $uploader->setPrefix('smil');
+    if ($uploader->fetchMedia($_POST['xoops_upload_file'][0])) {
+        if (!$uploader->upload()) {
+            $err = $uploader->getErrors();
+        } else {
+            $smile_url = $uploader->getSavedFileName();
+            $smile_code = $myts->stripSlashesGPC($_POST['smile_code']);
+            $smile_desc = $myts->stripSlashesGPC($_POST['smile_desc']);
+            $smile_display = intval($_POST['smile_display']) > 0 ? 1 : 0;
+            $newid = $db->genId($db->prefix('smilies')."_id_seq");
+            $sql = sprintf("INSERT INTO %s (id, code, smile_url, emotion, display) VALUES (%d, %s, %s, %s, %d)", $db->prefix('smiles'), $newid, $db->quoteString($smile_code), $db->quoteString($smile_url), $db->quoteString($smile_desc), $smile_display);
+            if (!$db->query($sql)) {
+                $err = 'Failed storing smiley data into the database';
+            }
+        }
+    } else {
+        $err = $uploader->getErrors();
+    }
+    if (!isset($err)) {
+        redirect_header('admin.php?fct=smilies&amp;op=SmilesAdmin',2,_AM_DBUPDATED);
+    } else {
+        xoops_cp_header();
+        xoops_error($err);
+        xoops_cp_footer();
+    }
+    break;
+
+case "SmilesEdit":
+    $id = isset($_GET['id']) ? intval($_GET['id']) : 0;
+    if ($id > 0) {
+        SmilesEdit($id);
+    }
+    break;
+
+case "SmilesSave":
+    $id = isset($_POST['id']) ? intval($_POST['id']) : 0;
+    if ($id <= 0 | !$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header('admin.php?fct=smilies', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $myts =& MyTextSanitizer::getInstance();
+    $smile_code = $myts->stripSlashesGPC($_POST['smile_code']);
+    $smile_desc = $myts->stripSlashesGPC($_POST['smile_desc']);
+    $smile_display = intval($_POST['smile_display']) > 0 ? 1 : 0;
+    $db =& Database::getInstance();
+    if ($_FILES['smile_url']['name'] != "") {
+        include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+        $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/x-png'), 100000, 120, 120);
+        $uploader->setPrefix('smil');
+        if ($uploader->fetchMedia($_POST['xoops_upload_file'][0])) {
+            if (!$uploader->upload()) {
+                $err = $uploader->getErrors();
+            } else {
+                $smile_url = $uploader->getSavedFileName();
+                if (!$db->query(sprintf("UPDATE %s SET code = %s, smile_url = %s, emotion = %s, display = %d WHERE id = %d", $db->prefix('smiles'), $db->quoteString($smile_code), $db->quoteString($smile_url), $db->quoteString($smile_desc), $smile_display, $id))) {
+                    $err = 'Failed storing smiley data into the database';
+                } else {
+                    $oldsmile_path = str_replace("\\", "/", realpath(XOOPS_UPLOAD_PATH.'/'.trim($_POST['old_smile'])));
+                    if (0 === strpos($oldsmile_path, XOOPS_UPLOAD_PATH) && is_file($oldsmile_path)) {
+                        unlink($oldsmile_path);
+                    }
+                }
+            }
+        } else {
+            $err = $uploader->getErrors();
+        }
+    } else {
+        $sql = sprintf("UPDATE %s SET code = %s, emotion = %s, display = %d WHERE id = %d", $db->prefix('smiles'), $db->quoteString($smile_code), $db->quoteString($smile_desc), $smile_display, $id);
+        if (!$db->query($sql)) {
+            $err = 'Failed storing smiley data into the database';
+        }
+    }
+    if (!isset($err)) {
+        redirect_header('admin.php?fct=smilies&amp;op=SmilesAdmin',2,_AM_DBUPDATED);
+    } else {
+        xoops_cp_header();
+        xoops_error($err);
+        xoops_cp_footer();
+        exit();
+    }
+    break;
+
+case "SmilesDel":
+    $id = isset($_GET['id']) ? intval($_GET['id']) : 0;
+    if ($id > 0) {
+        xoops_cp_header();
+        xoops_confirm(array('fct' => 'smilies', 'op' => 'SmilesDelOk', 'id' => $id), 'admin.php', _AM_WAYSYWTDTS);
+        xoops_cp_footer();
+    }
+    break;
+
+case "SmilesDelOk":
+    $id = isset($_POST['id']) ? intval($_POST['id']) : 0;
+    if ($id <= 0 | !$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header('admin.php?fct=smilies', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $db =& Database::getInstance();
+    $sql = sprintf("DELETE FROM %s WHERE id = %u", $db->prefix('smiles'), $id);
+    $db->query($sql);
+    redirect_header("admin.php?fct=smilies&amp;op=SmilesAdmin",2,_AM_DBUPDATED);
+    break;
+
+case "SmilesAdmin":
+default:
+    SmilesAdmin();
+    break;
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/smilies/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/smilies/smileform.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/smilies/smileform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/smilies/smileform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,48 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+$smile_form = new XoopsThemeForm($smiles['smile_form'], 'smileform', 'admin.php', 'post', true);
+$smile_form->setExtra('enctype="multipart/form-data"');
+$smile_form->addElement(new XoopsFormText(_AM_SMILECODE, 'smile_code', 26, 25, $smiles['smile_code']), true);
+$smile_form->addElement(new XoopsFormText(_AM_SMILEEMOTION, 'smile_desc', 26, 25, $smiles['smile_desc']), true);
+$smile_select = new XoopsFormFile('', 'smile_url', 5000000);
+$smile_label = new XoopsFormLabel('', '<img src="'.XOOPS_UPLOAD_URL.'/'.$smiles['smile_url'].'" alt="" />');
+$smile_tray = new XoopsFormElementTray(_IMAGEFILE.':', '&nbsp;');
+$smile_tray->addElement($smile_select);
+$smile_tray->addElement($smile_label);
+$smile_form->addElement($smile_tray);
+$smile_form->addElement(new XoopsFormRadioYN(_AM_DISPLAYF, 'smile_display', $smiles['smile_display']));
+$smile_form->addElement(new XoopsFormHidden('id', $smiles['id']));
+$smile_form->addElement(new XoopsFormHidden('op', $smiles['op']));
+$smile_form->addElement(new XoopsFormHidden('fct', 'smilies'));
+$smile_form->addElement(new XoopsFormButton('', 'submit', _SUBMIT, 'submit'));
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/smilies/smileform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/smilies/smilies.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/smilies/smilies.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/smilies/smilies.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,123 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+error_reporting(E_ALL);
+function SmilesAdmin()
+{
+    $db =& Database::getInstance();
+    $url_smiles = XOOPS_UPLOAD_URL;
+    $myts =& MyTextSanitizer::getInstance();
+    xoops_cp_header();
+    echo "<h4 style='text-align:left;'>"._AM_SMILESCONTROL."</h4>";
+
+    if ($getsmiles = $db->query("SELECT * FROM ".$db->prefix("smiles"))) {
+        if (($numsmiles = $db->getRowsNum($getsmiles)) == "0") {
+            //EMPTY
+        } else {
+            echo '<form action="admin.php" method="post"><table width="100%" class="outer" cellpadding="4" cellspacing="1">';
+            echo "<tr align='center'><th align='left'>" ._AM_CODE."</th>";
+            echo "<th>" ._AM_SMILIE."</th>";
+            echo "<th>"._AM_SMILEEMOTION."</th>";
+            echo "<th>" ._AM_DISPLAYF."</th>";
+            echo "<th>"._AM_ACTION."</th>";
+            echo "</tr>\n";
+            $i = 0;
+            while ($smiles = $db->fetchArray($getsmiles)) {
+                if ($i % 2 == 0) {
+                    $class = 'even';
+                } else {
+                    $class= 'odd';
+                }
+                $smiles['code'] = $myts->makeTboxData4Show($smiles['code']);
+                $smiles['smile_url'] = $myts->makeTboxData4Edit($smiles['smile_url']);
+                $smiles['smile_emotion'] = $myts->makeTboxData4Edit($smiles['emotion']);
+                echo "<tr align='center' class='$class'>";
+                echo "<td align='left'>".$smiles['code']."</td>";
+                echo "<td><img src='".$url_smiles."/".$smiles['smile_url']."' alt='' /></td>";
+                echo '<td>'.$smiles['smile_emotion'].'</td>';
+                echo '<td><input type="hidden" name="smile_id['.$i.']" value="'.$smiles['id'].'" /><input type="hidden" name="old_display['.$i.']" value="'.$smiles['display'].'" /><input type="checkbox" value="1" name="smile_display['.$i.']"';
+                if ($smiles['display'] == 1) {
+                    echo ' checked="checked"';
+                }
+                echo "</td><td><a href='admin.php?fct=smilies&amp;op=SmilesEdit&amp;id=".$smiles['id']."'>" ._AM_EDIT."</a>&nbsp;";
+                echo "<a href='admin.php?fct=smilies&amp;op=SmilesDel&amp;id=".$smiles['id']."'>" ._AM_DEL."</a></td>";
+                echo "</tr>\n";
+                $i++;
+            }
+            echo '<tr><td class="foot" colspan="5" align="center"><input type="hidden" name="op" value="SmilesUpdate" /><input type="hidden" name="fct" value="smilies" />'.$GLOBALS['xoopsSecurity']->getTokenHTML().'<input type="submit" value="'._SUBMIT.'" /></tr></table></form>';
+        }
+    } else {
+        echo _AM_CNRFTSD;
+    }
+    $smiles['smile_code'] = '';
+    $smiles['smile_url'] = 'blank.gif';
+    $smiles['smile_desc'] = '';
+    $smiles['smile_display'] = 1;
+    $smiles['smile_form'] = _AM_ADDSMILE;
+    $smiles['op'] = 'SmilesAdd';
+    $smiles['id'] = '';
+    include XOOPS_ROOT_PATH.'/modules/system/admin/smilies/smileform.php';
+    $smile_form->display();
+    xoops_cp_footer();
+}
+
+function SmilesEdit($id)
+{
+    $db =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    xoops_cp_header();
+    echo '<a href="admin.php?fct=smilies">'._AM_SMILESCONTROL .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'._AM_EDITSMILE.'<br /><br />';
+    if ($getsmiles = $db->query("SELECT * FROM ".$db->prefix("smiles")." WHERE id = $id")) {
+        $numsmiles = $db->getRowsNum($getsmiles);
+        if ( $numsmiles == 0 ) {
+            //EMPTY
+        } else {
+            if ($smiles = $db->fetchArray($getsmiles)) {
+                $smiles['smile_code'] = $myts->makeTboxData4Edit($smiles['code']);
+                $smiles['smile_url'] = $myts->makeTboxData4Edit($smiles['smile_url']);
+                $smiles['smile_desc'] = $myts->makeTboxData4Edit($smiles['emotion']);
+                $smiles['smile_display'] = $smiles['display'];
+                $smiles['smile_form'] = _AM_EDITSMILE;
+                $smiles['op'] = 'SmilesSave';
+                include XOOPS_ROOT_PATH.'/modules/system/admin/smilies/smileform.php';
+                $smile_form->addElement(new XoopsFormHidden('old_smile', $smiles['smile_url']));
+                $smile_form->display();
+            }
+        }
+    } else {
+        echo _AM_CNRFTSD;
+    }
+    xoops_cp_footer();
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/smilies/smilies.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/smilies/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/smilies/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/smilies/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_SMLS;
+$modversion['version'] = "";
+$modversion['description'] = "Smilies Settings";
+$modversion['author'] = "";
+$modversion['credits'] = "The MPN SE Project";
+$modversion['help'] = "smilies.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "smiles.gif";
+
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=smilies";
+$modversion['category'] = XOOPS_SYSTEM_SMILE;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/smilies/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/tplsets/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/tplsets/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/tplsets/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,1396 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+} else {
+    $op = 'list';
+    if (isset($_POST)) {
+        foreach ( $_POST as $k => $v ) {
+            ${$k} = $v;
+        }
+    }
+    if (isset($_GET['op'])) {
+        $op = trim($_GET['op']);
+        $id = $moddir = $file = $type = $tplset = null;
+        if (isset($_GET['id'])) {
+            $id = intval($_GET['id']);
+        }
+        if (isset($_GET['moddir'])) {
+            $moddir = trim($_GET['moddir']);
+        }
+        if (isset($_GET['file'])) {
+            $file = trim($_GET['file']);
+        }
+        if (isset($_GET['type'])) {
+            $type = trim($_GET['type']);
+        }
+        if (isset($_GET['tplset'])) {
+            $tplset = trim($_GET['tplset']);
+        }
+    }
+
+    if ($op == 'edittpl_go') {
+        if (isset($previewtpl)) {
+            $op = 'previewtpl';
+        }
+    }
+
+    switch ($op) {
+    case 'list':
+        $tplset_handler =& xoops_gethandler('tplset');
+        $tplsets =& $tplset_handler->getObjects();
+        xoops_cp_header();
+        echo '<h4 style="text-align:left">'._MD_TPLMAIN.'</h4>';
+        $installed = array();
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        $installed_mods = $tpltpl_handler->getModuleTplCount('default');
+        $tcount = count($tplsets);
+        echo '<table width="100%" cellspacing="1" class="outer"><tr align="center"><th width="25%">'._MD_THMSETNAME.'</th><th>'._MD_CREATED.'</th><th>'._MD_TEMPLATES.'</th><th>'._MD_ACTION.'</th><th>&nbsp;</th></tr>';
+        $class = 'even';
+        for ($i = 0; $i < $tcount; $i++) {
+            $tplsetname = $tplsets[$i]->getVar('tplset_name');
+            $installed_themes[] = $tplsetname;
+            $class = ($class == 'even') ? 'odd' : 'even';
+            echo '<tr class="'.$class.'" align="center"><td class="head">'.$tplsetname.'<br /><br /><span style="font-weight:normal;">'.$tplsets[$i]->getVar('tplset_desc').'</span></td><td>'.formatTimestamp($tplsets[$i]->getVar('tplset_created'), 's').'</td><td align="left"><ul>';
+            $tplstats = $tpltpl_handler->getModuleTplCount($tplsetname);
+            if (count($tplstats) > 0) {
+                $module_handler =& xoops_gethandler('module');
+                echo '<ul>';
+                foreach ($tplstats as $moddir => $filecount) {
+                    $module =& $module_handler->getByDirname($moddir);
+                    if ($installed_mods[$moddir] > $filecount) {
+                        $filecount = '<span style="color:#ff0000;">'.$filecount.'</span>';
+                    }
+                    echo '<li>'.$module->getVar('name').' [<a href="admin.php?fct=tplsets&amp;op=listtpl&amp;tplset='.$tplsetname.'&amp;moddir='.$moddir.'">'._LIST.'</a> (<b>'.$filecount.'</b>)]</li>';
+                    unset($module);
+                }
+                $not_installed = array_diff(array_keys($installed_mods), array_keys($tplstats));
+            } else {
+                $not_installed =& array_keys($installed_mods);
+            }
+            foreach ($not_installed as $ni) {
+                $module =& $module_handler->getByDirname($ni);
+                echo '<li>'.$module->getVar('name').' [<a href="admin.php?fct=tplsets&amp;op=listtpl&amp;tplset='.$tplsetname.'&amp;moddir='.$ni.'">'._LIST.'</a> (<span style="color:#ff0000; font-weight: bold;">0</span>)] [<a href="admin.php?fct=tplsets&amp;op=generatemod&amp;tplset='.$tplsetname.'&amp;moddir='.$ni.'">'._MD_GENERATE.'</a>]</li>';
+            }
+            echo '</ul></td><td>';
+            echo '[<a href="admin.php?fct=tplsets&amp;op=download&amp;method=tar&amp;tplset='.$tplsetname.'">'._MD_DOWNLOAD.'</a>]<br />[<a href="admin.php?fct=tplsets&amp;op=clone&amp;tplset='.$tplsetname.'">'._CLONE.'</a>]';
+            if ($tplsetname != 'default' && $tplsetname != $xoopsConfig['template_set']) {
+                echo '<br />[<a href="admin.php?fct=tplsets&amp;op=delete&amp;tplset='.$tplsetname.'">'._DELETE.'</a>]';
+            }
+            echo '</td>';
+            if ($tplsetname == $xoopsConfig['template_set']) {
+                echo '<td><img src="'.XOOPS_URL.'/modules/system/images/check.gif" alt="'._MD_DEFAULTTHEME.'" /></td>';
+            } else {
+                echo '<td>&nbsp;</td>';
+            }
+            echo '</tr>';
+        }
+        echo '</table><br />';
+
+        include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+        $form = new XoopsThemeForm(_MD_UPLOADTAR, 'tplupload_form', 'admin.php', 'post', true);
+        $form->setExtra('enctype="multipart/form-data"');
+        $form->addElement(new XoopsFormFile(_MD_CHOOSETAR.'<br /><span style="color:#ff0000;">'._MD_ONLYTAR.'</span>', 'tpl_upload', 1000000));
+        $form->addElement(new XoopsFormText(_MD_NTHEMENAME.'<br /><span style="font-weight:normal;">'._MD_ENTERTH.'</span>', 'tplset_name', 20, 50));
+        $form->addElement(new XoopsFormHidden('op', 'uploadtar_go'));
+        $form->addElement(new XoopsFormHidden('fct', 'tplsets'));
+        $form->addElement(new XoopsFormButton('', 'upload_button', _MD_UPLOAD, 'submit'));
+        $form->display();
+        xoops_cp_footer();
+        break;
+    case 'listtpl':
+        $tplset = trim($_GET['tplset']);
+        if ($tplset == '') {
+            redirect_header('admin.php?fct=tplsets',1);
+        }
+        if ($moddir == '') {
+            redirect_header('admin.php?fct=tplsets',1);
+        }
+        xoops_cp_header();
+        $module_handler =& xoops_gethandler('module');
+        $module =& $module_handler->getByDirname($moddir);
+        $modname = $module->getVar('name');
+        echo '<a href="admin.php?fct=tplsets">'. _MD_TPLMAIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'.$tplset.'<br /><br />';
+
+        echo '<h4>'.$modname.'</h4><form action="admin.php" method="post" enctype="multipart/form-data"><table width="100%" class="outer" cellspacing="1"><tr><th width="40%">'._MD_FILENAME.'</th><th>'._MD_LASTMOD.'</th>';
+        if ($tplset != 'default') {
+            echo '<th>'._MD_LASTIMP.'</th><th colspan="2">'._MD_ACTION.'</th></tr>';
+        } else {
+            echo '<th>'._MD_ACTION.'</th></tr>';
+        }
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        // get files that are already installed
+        $templates =& $tpltpl_handler->find($tplset, 'module', null, $moddir);
+        $inst_files = array();
+        $tcount = count($templates);
+        for ($i = 0; $i < $tcount; $i++) {
+            if ($i % 2 == 0) {
+                $class = 'even';
+            } else {
+                $class = 'odd';
+            }
+            $last_modified = $templates[$i]->getVar('tpl_lastmodified');
+            $last_imported = $templates[$i]->getVar('tpl_lastimported');
+            $last_imported_f = ($last_imported > 0) ? formatTimestamp($last_imported, 'l') : '';
+            echo  '<tr class="'.$class.'"><td class="head">'.$templates[$i]->getVar('tpl_file').'<br /><br /><span style="font-weight:normal;">'.$templates[$i]->getVar('tpl_desc').'</span></td><td>'.formatTimestamp($last_modified, 'l').'</td>';
+            $filename = $templates[$i]->getVar('tpl_file');
+            if ($tplset != 'default') {
+                $physical_file = XOOPS_THEME_PATH.'/'.$tplset.'/templates/'.$moddir.'/'.$filename;
+                if (file_exists($physical_file)) {
+                    $mtime = filemtime($physical_file);
+                    if ($last_imported < $mtime) {
+                        if ($mtime > $last_modified) {
+                            $bg = '#ff9999';
+                        } elseif($mtime > $last_imported) {
+                            $bg = '#99ff99';
+                        }
+                        echo '<td style="background-color:'.$bg.';">'.$last_imported_f.' [<a href="admin.php?fct=tplsets&amp;tplset='.$tplset.'&amp;moddir='.$moddir.'&amp;op=importtpl&amp;id='.$templates[$i]->getVar('tpl_id').'">'._MD_IMPORT.'</a>]';
+                    } else {
+                        echo '<td>'.$last_imported_f;
+                    }
+                } else {
+                    echo '<td>'.$last_imported_f;
+                }
+                echo '</td><td>[<a href="admin.php?fct=tplsets&amp;op=edittpl&amp;id='.$templates[$i]->getVar('tpl_id').'">'._EDIT.'</a>] [<a href="admin.php?fct=tplsets&amp;op=deletetpl&amp;id='.$templates[$i]->getVar('tpl_id').'">'._DELETE.'</a>] [<a href="admin.php?fct=tplsets&amp;op=downloadtpl&amp;id='.$templates[$i]->getVar('tpl_id').'">'._MD_DOWNLOAD.'</a>]</td><td align="right"><input type="file" name="'.$filename.'" id="'.$filename.'" /><input type="hidden" name="xoops_upload_file[]" id="xoops_upload_file[]" value="'.$filename.'" /><input type="hidden" name="old_template['.$filename.']" value="'.$templates[$i]->getVar('tpl_id').'" /></td>';
+            } else {
+                echo '<td>[<a href="admin.php?fct=tplsets&amp;op=edittpl&amp;id='.$templates[$i]->getVar('tpl_id').'">'._MD_VIEW.'</a>] [<a href="admin.php?fct=tplsets&amp;op=downloadtpl&amp;id='.$templates[$i]->getVar('tpl_id').'">'._MD_DOWNLOAD.'</a>]</td>';
+            }
+            echo '</tr>'."\n";
+            $inst_files[] = $filename;
+        }
+        if ($tplset != 'default') {
+            include_once XOOPS_ROOT_PATH.'/class/xoopslists.php';
+            // get difference between already installed files and the files under modules directory. which will be recognized as files that are not installed
+            $notinst_files = array_diff(XoopsLists::getFileListAsArray(XOOPS_ROOT_PATH.'/modules/'.$moddir.'/templates/'), $inst_files);
+            foreach ($notinst_files as $nfile) {
+                if ($nfile != 'index.html') {
+                    echo  '<tr><td style="background-color:#FFFF99; padding: 5px;">'.$nfile.'</td><td style="background-color:#FFFF99; padding: 5px;">&nbsp;</td><td style="background-color:#FFFF99; padding: 5px;">';
+                    $physical_file = XOOPS_ROOT_PATH.'/templates/'.$tplset.'/'.$moddir.'/'.$nfile;
+                    if (file_exists($physical_file)) {
+                        echo '[<a href="admin.php?fct=tplsets&amp;moddir='.$moddir.'&amp;tplset='.$tplset.'&amp;op=importtpl&amp;file='.urlencode($nfile).'">'._MD_IMPORT.'</a>]';
+                    } else {
+                        echo '&nbsp;';
+                    }
+                    echo '</td><td style="background-color:#FFFF99; padding: 5px;">[<a href="admin.php?fct=tplsets&amp;moddir='.$moddir.'&amp;tplset='.$tplset.'&amp;op=generatetpl&amp;type=module&amp;file='.urlencode($nfile).'">'._MD_GENERATE.'</a>]</td><td style="background-color:#FFFF99; padding: 5px; text-align:right;"><input type="file" name="'.$nfile.'" id="'.$nfile.'" /><input type="hidden" name="xoops_upload_file[]" id="xoops_upload_file[]" value="'.$nfile.'" /></td></tr>'."\n";
+                }
+            }
+        }
+        echo '</table><br /><table width="100%" class="outer" cellspacing="1"><tr><th width="40%">'._MD_FILENAME.'</th><th>'._MD_LASTMOD.'</th>';
+        if ($tplset != 'default') {
+            echo '<th>'._MD_LASTIMP.'</th><th colspan="2">'._MD_ACTION.'</th></tr>';
+        } else {
+            echo '<th>'._MD_ACTION.'</th></tr>';
+        }
+        $btemplates =& $tpltpl_handler->find($tplset, 'block', null, $moddir);
+        $binst_files = array();
+        $btcount = count($btemplates);
+        for ($j = 0; $j < $btcount; $j++) {
+            $last_imported = $btemplates[$j]->getVar('tpl_lastimported');
+            $last_imported_f = ($last_imported > 0) ? formatTimestamp($last_imported, 'l') : '';
+            $last_modified = $btemplates[$j]->getVar('tpl_lastmodified');
+            if ($j % 2 == 0) {
+                $class = 'even';
+            } else {
+                $class = 'odd';
+            }
+            echo  '<tr class="'.$class.'"><td class="head"><span style="font-weight:bold;">'.$btemplates[$j]->getVar('tpl_file').'</span><br /><br /><span style="font-weight:normal;">'.$btemplates[$j]->getVar('tpl_desc').'</span></td><td>'.formatTimestamp($last_modified, 'l').'</td>';
+            $filename = $btemplates[$j]->getVar('tpl_file');
+            $physical_file = XOOPS_ROOT_PATH.'/templates/'.$tplset.'/'.$moddir.'/blocks/'.$filename;
+            if ($tplset != 'default') {
+                if (file_exists($physical_file)) {
+                    $mtime = filemtime($physical_file);
+                    if ($last_imported < $mtime) {
+                        if ($mtime > $last_modified) {
+                            $bg = '#ff9999';
+                        } elseif($mtime > $last_imported) {
+                            $bg = '#99ff99';
+                        }
+                        echo '<td style="background-color:'.$bg.';">'.$last_imported_f.' [<a href="admin.php?fct=tplsets&amp;tplset='.$tplset.'&amp;op=importtpl&amp;moddir='.$moddir.'&amp;id='.$btemplates[$j]->getVar('tpl_id').'">'._MD_IMPORT.'</a>]';
+                    } else {
+                        echo '<td>'.$last_imported_f;
+                    }
+                } else {
+                    echo '<td>'.$last_imported_f;
+                }
+                echo '</td><td>[<a href="admin.php?fct=tplsets&amp;op=edittpl&amp;id='.$btemplates[$j]->getVar('tpl_id').'">'._EDIT.'</a>] [<a href="admin.php?fct=tplsets&amp;op=deletetpl&amp;id='.$btemplates[$j]->getVar('tpl_id').'">'._DELETE.'</a>] [<a href="admin.php?fct=tplsets&amp;op=downloadtpl&amp;id='.$btemplates[$j]->getVar('tpl_id').'">'._MD_DOWNLOAD.'</a>]</td><td align="right"><input type="file" name="'.$filename.'" id="'.$filename.'" /><input type="hidden" name="xoops_upload_file[]" id="xoops_upload_file[]" value="'.$filename.'" /><input type="hidden" name="old_template['.$filename.']" value="'.$btemplates[$j]->getVar('tpl_id').'" /></td>';
+            } else {
+                echo '<td>[<a href="admin.php?fct=tplsets&amp;op=edittpl&amp;id='.$btemplates[$j]->getVar('tpl_id').'">'._MD_VIEW.'</a>] [<a href="admin.php?fct=tplsets&amp;op=downloadtpl&amp;id='.$btemplates[$j]->getVar('tpl_id').'">'._MD_DOWNLOAD.'</a>]</td>';
+            }
+            echo '</tr>'."\n";
+            $binst_files[] = $filename;
+        }
+        if ($tplset != 'default') {
+            include_once XOOPS_ROOT_PATH.'/class/xoopslists.php';
+            $bnotinst_files = array_diff(XoopsLists::getFileListAsArray(XOOPS_ROOT_PATH.'/modules/'.$moddir.'/templates/blocks/'), $binst_files);
+            foreach ($bnotinst_files as $nfile) {
+                if ($nfile != 'index.html') {
+                    echo  '<tr style="background-color:#FFFF99;"><td style="background-color:#FFFF99; padding: 5px;">'.$nfile.'</td><td style="background-color:#FFFF99; padding: 5px;">&nbsp;</td><td style="background-color:#FFFF99; padding: 5px;">';
+                    $physical_file = XOOPS_ROOT_PATH.'/templates/'.$tplset.'/'.$moddir.'/blocks/'.$nfile;
+                    if (file_exists($physical_file)) {
+                        echo '[<a href="admin.php?fct=tplsets&amp;moddir='.$moddir.'&amp;tplset='.$tplset.'&amp;op=importtpl&amp;file='.urlencode($nfile).'">'._MD_IMPORT.'</a>]';
+                    } else {
+                        echo '&nbsp;';
+                    }
+                    echo '</td><td style="background-color:#FFFF99; padding: 5px;">[<a href="admin.php?fct=tplsets&amp;moddir='.$moddir.'&amp;tplset='.$tplset.'&amp;op=generatetpl&amp;type=block&amp;file='.urlencode($nfile).'">'._MD_GENERATE.'</a>]</td><td style="background-color:#FFFF99; padding: 5px; text-align: right"><input type="file" name="'.$nfile.'" id="'.$nfile.'" /><input type="hidden" name="xoops_upload_file[]" id="xoops_upload_file[]" value="'.$nfile.'" /></td></tr>'."\n";
+                }
+            }
+        }
+        echo '</table>';
+        if ($tplset != 'default') {
+            echo '<div style="text-align: right; margin-top: 5px;"><input type="hidden" name="fct" value="tplsets" /><input type="hidden" name="op" value="update" />'.$GLOBALS['xoopsSecurity']->getTokenHTML().'<input type="hidden" name="moddir" value="'.$moddir.'" /><input type="hidden" name="tplset" value="'.$tplset.'" /><input type="submit" value="'._MD_UPLOAD.'" /></div></form>';
+        }
+        xoops_cp_footer();
+        break;
+    case 'edittpl':
+        if ($id <= 0) {
+            redirect_header('admin.php?fct=tplsets', 1);
+        }
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        $tplfile =& $tpltpl_handler->get($id, true);
+        if (is_object($tplfile)) {
+            $tplset = $tplfile->getVar('tpl_tplset');
+            $tform = array('tpl_tplset' => $tplset, 'tpl_id' => $id, 'tpl_file' => $tplfile->getVar('tpl_file'), 'tpl_desc' => $tplfile->getVar('tpl_desc'), 'tpl_lastmodified' => $tplfile->getVar('tpl_lastmodified'), 'tpl_source' => $tplfile->getVar('tpl_source', 'E'), 'tpl_module' => $tplfile->getVar('tpl_module'));
+            include_once XOOPS_ROOT_PATH.'/modules/system/admin/tplsets/tplform.php';
+            xoops_cp_header();
+            echo '<a href="admin.php?fct=tplsets">'. _MD_TPLMAIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;<a href="./admin.php?fct=tplsets&amp;op=listtpl&amp;moddir='.$tplfile->getVar('tpl_module').'&amp;tplset='.$tplset.'">'.$tplset.'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'._MD_EDITTEMPLATE.'<br /><br />';
+            $form->display();
+            xoops_cp_footer();
+            exit();
+        } else {
+            $err[] = 'Selected template (ID: $id) does not exist';
+        }
+        xoops_cp_header();
+        xoops_error($err);
+        echo '<br /><a href="admin.php?fct=tplsets">'._MD_AM_BTOTADMIN.'</a>';
+        xoops_cp_footer();
+        break;
+    case 'edittpl_go':
+        if ($id <= 0 | !$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        $tplfile =& $tpltpl_handler->get($id, true);
+        $err = array();
+        if (!is_object($tplfile)) {
+            $err[] = 'Selected template (ID: $id) does not exist';
+        } else {
+            if ($tplfile->getVar('tpl_tplset') != 'default') {
+                $tplfile->setVar('tpl_source', $html);
+                $tplfile->setVar('tpl_lastmodified', time());
+
+                if (!$tpltpl_handler->insert($tplfile)) {
+                    $err[] = 'Could not insert template file to the database.';
+                } else {
+                    include_once XOOPS_ROOT_PATH.'/class/template.php';
+                    $xoopsTpl = new XoopsTpl();
+                    if ($xoopsTpl->is_cached('db:'.$tplfile->getVar('tpl_file'))) {
+                        if (!$xoopsTpl->clear_cache('db:'.$tplfile->getVar('tpl_file'))) {
+                        }
+                    }
+                    if ($tplfile->getVar('tpl_tplset') == $xoopsConfig['template_set']) {
+                        xoops_template_touch($id);
+                    }
+                }
+            } else {
+                $err[] = 'Default template files cannot be edited.';
+            }
+        }
+        if (count($err) == 0) {
+            if (!empty($moddir)) {
+                redirect_header('admin.php?fct=tplsets&amp;op=edittpl&amp;id='.$tplfile->getVar('tpl_id'), 2, _MD_AM_DBUPDATED);
+            } elseif (isset($redirect)) {
+                redirect_header('admin.php?fct=tplsets&amp;tplset='.$tplfile->getVar('tpl_tplset').'&amp;op='.trim($redirect), 2, _MD_AM_DBUPDATED);
+            } else {
+                redirect_header('admin.php?fct=tplsets', 2, _MD_AM_DBUPDATED);
+            }
+        }
+        xoops_cp_header();
+        xoops_error($err);
+        echo '<br /><a href="admin.php?fct=tplsets">'._MD_AM_BTOTADMIN.'</a>';
+        xoops_cp_footer();
+        break;
+    case 'deletetpl':
+        xoops_cp_header();
+        xoops_confirm(array('id' => $id, 'op' => 'deletetpl_go', 'fct' => 'tplsets'), 'admin.php', _MD_RUSUREDELTPL, _YES);
+        xoops_cp_footer();
+        break;
+    case 'deletetpl_go':
+        if ($id <= 0 | !$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 1, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        $tplfile =& $tpltpl_handler->get($id);
+        $err = array();
+        if (!is_object($tplfile)) {
+            $err[] = 'Selected template (ID: $id) does not exist';
+        } else {
+            if ($tplfile->getVar('tpl_tplset') != 'default') {
+                if (!$tpltpl_handler->delete($tplfile)) {
+                    $err[] = 'Could not delete '.$tplfile->getVar('tpl_file').' from the database.';
+                } else {
+                    // need to compile default xoops template
+                    if ($tplfile->getVar('tpl_tplset') == $xoopsConfig['template_set']) {
+                        $defaulttpl =& $tpltpl_handler->find('default', $tplfile->getVar('tpl_type'), $tplfile->getVar('tpl_refid'), null, $tplfile->getVar('tpl_file'));
+                        if (count($defaulttpl) > 0) {
+                            include_once XOOPS_ROOT_PATH.'/class/template.php';
+                            xoops_template_touch($defaulttpl[0]->getVar('tpl_id'), true);
+                        }
+                    }
+                }
+            } else {
+                $err[] = 'Default template files cannot be deleted.';
+            }
+        }
+        if (count($err) == 0) {
+            redirect_header('admin.php?fct=tplsets&amp;op=listtpl&amp;moddir='.$tplfile->getVar('tpl_module').'&amp;tplset='.urlencode($tplfile->getVar('tpl_tplset')), 2, _MD_AM_DBUPDATED);
+        }
+        xoops_cp_header();
+        xoops_error($err);
+        echo '<br /><a href="admin.php?fct=tplsets">'._MD_AM_BTOTADMIN.'</a>';
+        xoops_cp_footer();
+        break;
+    case 'delete':
+        xoops_cp_header();
+        xoops_confirm(array('tplset' => $tplset, 'op' => 'delete_go', 'fct' => 'tplsets'), 'admin.php', _MD_RUSUREDELTH, _YES);
+        xoops_cp_footer();
+        break;
+    case 'delete_go':
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 1, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $msgs = array();
+        if ($tplset != 'default' && $tplset != $xoopsConfig['template_set']) {
+            $tpltpl_handler =& xoops_gethandler('tplfile');
+            $templates =& $tpltpl_handler->getObjects(new Criteria('tpl_tplset', $tplset));
+            $tcount = count($templates);
+            if ($tcount > 0) {
+                $msgs[] = 'Deleting template files...';
+                for ($i = 0; $i < $tcount; $i++) {
+                    if (!$tpltpl_handler->delete($templates[$i])) {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete template <b>'.$templates[$i]->getVar('tpl_file').'</b>. ID: <b>'.$templates[$i]->getVar('tpl_id').'</b></span>';
+                    } else {
+                        $msgs[] = '&nbsp;&nbsp;Template <b>'.$templates[$i]->getVar('tpl_file').'</b> deleted. ID: <b>'.$templates[$i]->getVar('tpl_id').'</b>';
+                    }
+                }
+            }
+/*
+            $image_handler =& xoops_gethandler('imagesetimg');
+            $imagefiles =& $image_handler->getObjects(new Criteria('tplset_name', $tplset));
+            $icount = count($imagefiles);
+            if ($icount > 0) {
+                $msgs[] = 'Deleting image files...';
+                for ($i = 0; $i < $icount; $i++) {
+                    if (!$image_handler->delete($imagefiles[$i])) {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not remove file <b>'.$imagefiles[$i]->getVar('imgsetimg_file').'</b> from the database (ID: <b>'.$imagefiles[$i]->getVar('imgsetimg_id').'</b>)</span>';
+                    } else {
+                        $msgs[] = '&nbsp;&nbsp;File <b>'.$imagefiles[$i]->getVar('imgsetimg_file').'</b> deleted from the database (ID: <b>'.$imagefiles[$i]->getVar('imgsetimg_id').'</b>)</span>';
+                    }
+                }
+            }
+            $imageset_handler =& xoops_gethandler('imageset');
+            $imagesets =& $imageset_handler->getObjects(new Criteria('tplset_name', $tplset));
+            $scount = count($imagesets);
+            if ($scount > 0) {
+                $msgs[] = 'Deleting image set data...';
+                for ($i = 0; $i < $scount; $i++) {
+                    if (!$imageset_handler->unlinktplset($imagesets[$i]->getVar('imgset_id'), $tplset)) {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not remove link between <b>'.$imagesets[$i]->getVar('imgset_name').'</b> (ID: <b>'.$imagesets[$i]->getVar('imgset_id').'</b>) and '.$tplset.' from the database.</span>';
+                    } else {
+                        $msgs[] = '&nbsp;&nbsp;Link between <b>'.$imagesets[$i]->getVar('imgset_name').'</b> (ID: <b>'.$imagesets[$i]->getVar('imgset_id').'</b>) and <b>'.$tplset.'</b> removed from the database.</span>';
+                    }
+                    if (!$imageset_handler->delete($imagesets[$i])) {
+                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not delete image set <b>'.$imagesets[$i]->getVar('imgset_name').'</b> (ID: <b>'.$imagesets[$i]->getVar('imgset_id').'</b>) from the database.</span>';
+                    } else {
+                        $msgs[] = '&nbsp;&nbsp;Image set <b>'.$imagesets[$i]->getVar('imgset_name').'</b> (ID: <b>'.$imagesets[$i]->getVar('imgset_id').'</b>) removed from the database.</span>';
+                    }
+                }
+            }
+*/
+            $tplset_handler =& xoops_gethandler('tplset');
+            $tplsets =& $tplset_handler->getObjects(new Criteria('tplset_name', $tplset));
+            if (count($tplsets) > 0 && is_object($tplsets[0])) {
+                $msgs[] = 'Deleting template set data...';
+                if (!$tplset_handler->delete($tplsets[0])) {
+                    $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Template set '.$tplset.' could not be deleted.</span>';
+                } else {
+                    $msgs[] = '&nbsp;&nbsp;Template set data removed from the database.';
+                }
+            }
+        } else {
+            $msgs[] = '<span style="color:#ff0000;">ERROR: Default template files cannot be deleted</span>';
+        }
+        xoops_cp_header();
+        foreach ($msgs as $msg) {
+            echo '<code>'.$msg.'</code><br />';
+        }
+        echo '<br /><a href="admin.php?fct=tplsets">'._MD_AM_BTOTADMIN.'</a>';
+        xoops_cp_footer();
+        break;
+    case 'clone':
+        include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+        $form = new XoopsThemeForm(_MD_CLONETHEME, 'template_form', 'admin.php', 'post', true);
+        $form->addElement(new XoopsFormLabel(_MD_THEMENAME, $tplset));
+        $form->addElement(new XoopsFormText(_MD_NEWNAME, 'newtheme', 30, 50), true);
+        $form->addElement(new XoopsFormHidden('tplset', $tplset));
+        $form->addElement(new XoopsFormHidden('op', 'clone_go'));
+        $form->addElement(new XoopsFormHidden('fct', 'tplsets'));
+        $form->addElement(new XoopsFormButton('', 'tpl_button', _SUBMIT, 'submit'));
+        xoops_cp_header();
+        echo '<a href="admin.php?fct=tplsets">'. _MD_TPLMAIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'._MD_CLONETHEME.'<br /><br />';
+        $form->display();
+        xoops_cp_footer();
+        break;
+    case 'clone_go':
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 1, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $msgs = array();
+        $tplset = trim($tplset);
+        $newtheme = trim($newtheme);
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        xoops_cp_header();
+        if ($tplset == $newtheme) {
+            xoops_error('Template set name must be a different name.');
+        } elseif ($tpltpl_handler->getCount(new Criteria('tpl_tplset', $newtheme)) > 0) {
+            xoops_error('Template set <b>'.$newtheme.'</b> already exists.');
+        } else {
+            $tplset_handler =& xoops_gethandler('tplset');
+            $tplsetobj =& $tplset_handler->create();
+            $tplsetobj->setVar('tplset_name', $newtheme);
+            $tplsetobj->setVar('tplset_created', time());
+            if (!$tplset_handler->insert($tplsetobj)) {
+                $msgs[] = '<span style="color:#ff0000;">ERROR: Could not create template set <b>'.$newtheme.'</b>.</span><br />';
+            } else {
+                $tplsetid = $tplsetobj->getVar('tplset_id');
+                $templates =& $tpltpl_handler->getObjects(new Criteria('tpl_tplset', $tplset), true);
+                $tcount = count($templates);
+                if ($tcount > 0) {
+                    $msgs[] = 'Copying template files...';
+                    for ($i = 0; $i < $tcount; $i++) {
+                        $newtpl =& $templates[$i]->xoopsClone();
+                        $newtpl->setVar('tpl_tplset', $newtheme);
+                        $newtpl->setVar('tpl_id', 0);
+                        $newtpl->setVar('tpl_lastimported', 0);
+                        $newtpl->setVar('tpl_lastmodified', time());
+                        if (!$tpltpl_handler->insert($newtpl)) {
+                            $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Failed copying template <b>'.$templates[$i]->getVar('tpl_file').'</b>. ID: <b>'.$templates[$i]->getVar('tpl_id').'</b></span>';
+                        } else {
+                            $msgs[] = '&nbsp;&nbsp;Template <b>'.$templates[$i]->getVar('tpl_file').'</b> copied. ID: <b>'.$newtpl->getVar('tpl_id').'</b>';
+                        }
+                        unset($newtpl);
+                    }
+/*
+                    $imageset_handler =& xoops_gethandler('imageset');
+                    $orig_imgset =& $imageset_handler->getObjects(new Criteria('tplset_name', $tplset));
+                    $msgs[] = 'Copying image files...';
+                    $imgsetcount = count($orig_imgset);
+                    for ($i = 0; $i < $imgsetcount; $i++) {
+                        if ($orig_imgset[$i]->getVar('imgset_refid') == 0) {
+                            $new_imgset =& $orig_imgset[$i]->xoopsClone();
+                            $new_imgset->setVar('imgset_id', 0);
+                            $new_imgset->setVar('imgset_name', $newtheme);
+                            if (!$imageset_handler->insert($new_imgset)) {
+                                $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Failed copying template image set data.</span>';
+                            } else {
+                                $new_imgsetid = $new_imgset->getVar('imgset_id');
+                                $msgs[] = '&nbsp;&nbsp;Template image set data copied. (Name: <b>'.$newtheme.'</b> ID: <b>'.$new_imgsetid.'</b>)</span>';
+                                $image_handler = xoops_gethandler('imagesetimg');
+                                $orig_images =& $image_handler->getByImageset($orig_imgset[$i]->getVar('imgset_id'));
+                                $imgcount = count($orig_images);
+                                for ($j = 0; $j < $imgcount; $j++) {
+                                    $new_image =& $orig_images[$j]->xoopsClone();
+                                    $new_image->setVar('imgsetimg_id', 0);
+                                    $new_image->setVar('imgsetimg_imgset', $new_imgsetid);
+                                    if (!$image_handler->insert($new_image)) {
+                                        $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Failed copying data for image file <b>'.$orig_images[$j]->getVar('imgsetimg_file').'</b>.</span>';
+                                    } else {
+                                        $thisimage = $orig_images[$j]->getVar('imgsetimg_file');
+                                        $msgs[] = '&nbsp;&nbsp;Data for image file <b>'.$thisimage.'</b> copied.</span>';
+                                    }
+                                }
+                                if (!$imageset_handler->linktplset($new_imgsetid, $newtheme)) {
+                                    $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Failed creating link between template image set (ID : <b>'.$new_imgsetid.'</b>) and template set <b>'.$newtheme.'</b>.</span>';
+                                } else {
+                                    $msgs[] = '&nbsp;&nbsp;Template image set (ID: <b>'.$new_imgsetid.'</b>) and template set <b>'.$newtheme.'</b> linked.</span>';
+                                }
+                            }
+                        } else {
+                            // module image set, so just create another link to the new template set
+                            if (!$imageset_handler->linktplset($orig_imgset[$i]->getVar('imgset_id'), $newtheme)) {
+                                $msgs[] = '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Failed creating link between module image set  <b>'.$orig_imgset[$i]->getVar('imgset_name').'</b> (ID <b>'.$orig_imgset[$i]->getVar('imgset_id').'</b>) and template set <b>'.$newtheme.'</b>.</span>';
+                            } else {
+                                $msgs[] = '&nbsp;&nbsp;Module image set <b>'.$orig_imgset[$i]->getVar('imgset_name').'</b> (ID <b>'.$orig_imgset[$i]->getVar('imgset_id').'</b>) and template set <b>'.$newtheme.'</b> linked.';
+                            }
+                        }
+                    }
+*/
+                    $msgs[] = 'Template set <b>'.$newtheme.'</b> created. (ID: <b>'.$tplsetid.'</b>)<br />';
+                } else {
+                    $msgs[] = '<span style="color:#ff0000;">ERROR: Template files for '.$theme.' do not exist</span>';
+                }
+            }
+        }
+        foreach ($msgs as $msg) {
+            echo '<code>'.$msg.'</code><br />';
+        }
+        echo '<br /><a href="admin.php?fct=tplsets">'._MD_AM_BTOTADMIN.'</a>';
+        xoops_cp_footer();
+        break;
+/*
+    case 'editimage':
+        xoops_cp_header();
+        echo '<a href="admin.php?fct=tplsets">'. _MD_TPLMAIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'._MD_EDITSKINIMG.' ('.$tplset.')<br /><br />';
+        include XOOPS_ROOT_PATH.'/modules/system/admin/tplsets/tplimgform.php';
+        xoops_cp_footer();
+        break;
+    case 'updateimage':
+
+        $tplset = trim($tplset);
+        $err = array();
+        if ($tplset != 'default') {
+            include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+            $mimetypes = array('image/gif', "image/pjpeg", "image/jpeg", "image/jpeg", "image/jpeg", "image/png", 'image/x-png', "application/x-shockwave-flash", "image/tiff", "image/tiff", 'image/bmp');
+            if ($tplset == $xoopsConfig['template_set']) {
+                //directly upload to cache to reduce one step ;-)
+                $uploader = new XoopsMediaUploader(XOOPS_CACHE_PATH, $mimetypes, 500000);
+            } else {
+                $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, $mimetypes, 500000);
+            }
+            $image_handler =& xoops_gethandler('imagesetimg');
+            foreach ($imgids as $id) {
+                if (isset($imgfiles[$id]) && trim($imgfiles[$id]) != '') {
+                    if ($uploader->fetchMedia('imgfiles', $id)) {
+                        $image =& $image_handler->get($id);
+                        $uploader->setTargetFileName($image->getVar('imgsetimg_file'));
+                        if (!$uploader->upload()) {
+                            $err[] = $uploader->getErrors();
+                        } else {
+                            $fp = @fopen($uploader->getSavedDestination(), 'rb');
+                            $image->setVar('imgsetimg_body', @fread($fp, filesize($uploader->getSavedDestination())), true);
+                            @fclose($fp);
+                            if ($tplset != $xoopsConfig['template_set']) {
+                                @unlink($uploader->getSavedDestination());
+                            }
+                            if (!$image_handler->insert($image)) {
+                                $err[] = 'Could not save '.$image->getVar('imgsetimg_file');
+                            }
+                        }
+                    } else {
+                        $err[] = $uploader->getErrors();
+                    }
+                } elseif (!empty($imgdelete[$id])) {
+                    $image =& $image_handler->get($id);
+                    if (!$image_handler->delete($image)) {
+                        $err[] = 'Could not remove image file '.$image->getVar('imgsetimg_file');
+                    } else {
+                        if ($tplset == $xoopsConfig['template_set']) {
+                            @unlink(XOOPS_CACHE_PATH.'/'.$image->getVar('imgsetimg_file'));
+                        }
+                    }
+                }
+            }
+        } else {
+            $err[] = 'Cannot change XOOPS system default theme set images';
+        }
+        // delete image set if no more images
+        $current_imgs =& $image_handler->getByImageset($imgset);
+        if (count($current_imgs) == 0) {
+            $imageset_handler =& xoops_gethandler('imageset');
+            $imgset =& $imageset_handler->get($imgset);
+            if (!$imageset_handler->delete($imgset)) {
+                $err[] = 'Could not remove image set '.$imgset->getVar('imgset_name');
+            }
+        }
+        if (count($err) > 0) {
+            xoops_cp_header();
+            xoops_error($err);
+            xoops_cp_footer();
+        } else {
+            redirect_header('admin.php?fct=tplsets&amp;op=editimage&amp;tplset='.$tplset, 2, _MD_AM_DBUPDATED);
+        }
+        break;
+    case 'addimage':
+        $tplset = trim($tplset);
+        $err = array();
+        if ($tplset != 'default') {
+            include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+            $mimetypes = array('image/gif', "image/pjpeg", "image/jpeg", "image/jpeg", "image/jpeg", "image/png", 'image/x-png', "application/x-shockwave-flash", "image/tiff", "image/tiff", 'image/bmp');
+            if ($tplset == $xoopsConfig['template_set']) {
+                //directly upload to cache to reduce one step ;-)
+                $uploader = new XoopsMediaUploader(XOOPS_CACHE_PATH, $mimetypes, 500000);
+            } else {
+                $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, $mimetypes, 500000);
+            }
+            $image_handler =& xoops_gethandler('imagesetimg');
+            if ($uploader->fetchMedia('imgfile')) {
+
+                if (!empty($imgset)) {
+                    //check if an image with the same name exists
+                    if ($image_handler->imageExists($uploader->getMediaName(), $imgset)) {
+                        $err[] = 'Image file '.$uploader->getMediaName().' already exists';
+                    }
+                }
+                if (empty($err)) {
+                    $image =& $image_handler->create();
+                    if (!$uploader->upload()) {
+                        $err[] = $uploader->getErrors();
+                    } else {
+                        if (!$fp = @fopen($uploader->getSavedDestination(), 'rb')) {
+                            $err[] = 'Could not read '.$uploader->getSavedFileName();
+                        } else {
+                            $image->setVar('imgsetimg_body', @fread($fp, filesize($uploader->getSavedDestination())), true);
+                            @fclose($fp);
+                            if ($tplset != $xoopsConfig['template_set']) {
+                                @unlink($uploader->getSavedDestination());
+                            }
+                            $image->setVar('imgsetimg_file', $uploader->getSavedFileName());
+                            if (!empty($imgset)) {
+                                $image->setVar('imgsetimg_imgset', $imgset);
+                            } else {
+                                $imageset_handler =& xoops_gethandler('imageset');
+                                $imgset =& $imageset_handler->create();
+                                $imgset->setVar('imgset_name', $tplset);
+                                $imgset->setVar('imgset_refid', 0);
+                                if (!$imageset_handler->insert($imgset)) {
+                                    $err[] = 'Could not create image set.';
+                                } else {
+                                    $newimgsetid = $imgset->getVar('imgset_id');
+                                    $image->setVar('imgsetimg_imgset', $newimgsetid);
+                                    if (!$imageset_handler->linktplset($newimgsetid, $tplset)) {
+                                        $err[] = 'Failed linking image set to template set '.$tplset;
+                                    }
+                                }
+                            }
+                            if (count($err) == 0) {
+                                if (!$image_handler->insert($image)) {
+                                    $err[] = 'Could not save '.$image->getVar('imgsetimg_file');
+                                }
+                            }
+                        }
+                    }
+                }
+            } else {
+                $err[] = $uploader->getErrors();
+            }
+        }
+        if (count($err) > 0) {
+            xoops_cp_header();
+            xoops_error($err);
+            xoops_cp_footer();
+        } else {
+            redirect_header('admin.php?fct=tplsets&amp;op=editimage&amp;tplset='.$tplset, 2, _MD_AM_DBUPDATED);
+        }
+        break;
+    case 'showimage':
+        $image_id = isset($_GET['id']) ? intval($_GET['id']) : 0;
+        if (empty($image_id)) {
+            header('Content-type: image/gif');
+            readfile(XOOPS_UPLOAD_PATH.'/blank.gif');
+            exit();
+        }
+        $image_handler =& xoops_gethandler('imagesetimg');
+        $image =& $image_handler->getObjects(new Criteria('imgsetimg_id', $image_id));
+        if (count($image) > 0) {
+            $mimetypes = array('gif' => 'image/gif', "jpe"=>"image/jpeg", "jpeg"=>"image/jpeg", "jpg"=>"image/jpeg", "png"=>"image/png", "swf"=>"application/x-shockwave-flash", "tif"=>"image/tiff", "tiff"=>"image/tiff", "bmp" => 'image/bmp');
+            $ext = substr(strtolower(strrchr($image[0]->getVar('imgsetimg_file'), '.')), 1);
+            if (in_array($ext, array_keys($mimetypes))) {
+                header('Content-type: '.$mimetypes[$ext]);
+            }
+            header('Cache-control: max-age=31536000');
+            header('Expires: '.gmdate("D, d M Y H:i:s",time()+31536000).'GMT');
+            header('Content-disposition: filename='.$image[0]->getVar('imgsetimg_file'));
+            header('Content-Length: '.strlen($image[0]->getVar('imgsetimg_body')));
+            header('Last-Modified: '.gmdate("D, d M Y H:i:s", time()).'GMT');
+            echo $image[0]->getVar('imgsetimg_body');
+        } else {
+            header('Content-type: image/gif');
+            readfile(XOOPS_UPLOAD_PATH.'/blank.gif');
+        }
+        break;
+*/
+    case 'viewdefault':
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        $tplfile =& $tpltpl_handler->get($id);
+        $default =& $tpltpl_handler->find('default', $tplfile->getVar('tpl_type'), $tplfile->getVar('tpl_refid'), null, $tplfile->getVar('tpl_file'));
+        echo "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>";
+        echo '<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="'._LANGCODE.'" lang="'._LANGCODE.'">
+        <head>
+        <meta http-equiv="content-type" content="text/html; charset='._CHARSET.'" />
+        <meta http-equiv="content-language" content="'._LANGCODE.'" />
+        <title>'.$xoopsConfig['sitename'].' Administration</title>
+        <link rel="stylesheet" type="text/css" media="all" href="'.XOOPS_URL.'/xoops.css" />
+            <link rel="stylesheet" type="text/css" media="all" href="'.XOOPS_URL.'/modules/system/style.css" />
+        </head><body>';
+        if (is_object($default[0])) {
+            $tpltpl_handler->loadSource($default[0]);
+            $last_modified = $default[0]->getVar('tpl_lastmodified');
+            $last_imported = $default[0]->getVar('tpl_lastimported');
+            if ($default[0]->getVar('tpl_type') == 'block') {
+                $path = XOOPS_ROOT_PATH.'/modules/'.$default[0]->getVar('tpl_module').'/blocks/'.$default[0]->getVar('tpl_file');
+            } else {
+                $path = XOOPS_ROOT_PATH.'/modules/'.$default[0]->getVar('tpl_module').'/'.$default[0]->getVar('tpl_file');
+            }
+            $colorchange = '';
+            if (!file_exists($path)) {
+                $filemodified_date = _MD_NOFILE;
+                $lastimported_date = _MD_NOFILE;
+            } else {
+                $tpl_modified = filemtime($path);
+                $filemodified_date = formatTimestamp($tpl_modified, 'l');
+                if ($tpl_modified > $last_imported) {
+                    $colorchange = ' bgcolor="#ffCC99"';
+                }
+                $lastimported_date = formatTimestamp($last_imported, 'l');
+            }
+            include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+            $form = new XoopsThemeForm(_MD_VIEWDEFAULT, 'template_form', 'admin.php');
+            $form->addElement(new XoopsFormTextArea(_MD_FILEHTML, 'html', $default[0]->getVar('tpl_source'), 25));
+            $form->display();
+        } else {
+            echo 'Selected file does not exist';
+        }
+        echo '<div style="text-align:center;">[<a href="#" onclick="javascript:window.close();">'._CLOSE.'</a>]</div></body></html>';
+        break;
+    case 'downloadtpl':
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        $tpl =& $tpltpl_handler->get(intval($id), true);
+        if (is_object($tpl)) {
+            $output = $tpl->getVar('tpl_source');
+            strlen($output);
+            header('Cache-Control: no-cache, must-revalidate');
+            header('Pragma: no-cache');
+            header('Content-Type: application/force-download');
+            if (preg_match("/MSIE 5.5/", $_SERVER['HTTP_USER_AGENT'])) {
+                header('Content-Disposition: filename='.$tpl->getVar('tpl_file'));
+            } else {
+                header('Content-Disposition: attachment; filename='.$tpl->getVar('tpl_file'));
+            }
+            header('Content-length: '.strlen($output));
+            echo $output;
+        }
+        break;
+    case 'uploadtpl':
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        $id = intval($_GET['id']);
+        $tpl =& $tpltpl_handler->get($id);
+        xoops_cp_header();
+        echo '<a href="admin.php?fct=tplsets">'. _MD_TPLMAIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;<a href="./admin.php?fct=tplsets&amp;op=listtpl&amp;moddir='.$tpl->getVar('tpl_module').'&amp;tplset='.$tpl->getVar('tpl_tplset').'">'.$tpl->getVar('tpl_tplset').'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'._MD_UPLOAD.'<br /><br />';
+        if (is_object($tpl)) {
+            include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+            $form = new XoopsThemeForm(_MD_UPLOAD, 'tplupload_form', 'admin.php', 'post', true);
+            $form->setExtra('enctype="multipart/form-data"');
+            $form->addElement(new XoopsFormLabel(_MD_FILENAME, $tpl->getVar('tpl_file').' ('.$tpl->getVar('tpl_tplset').')'));
+            $form->addElement(new XoopsFormFile(_MD_CHOOSEFILE.'<br /><span style="color:#ff0000;">'._MD_UPWILLREPLACE.'</span>', 'tpl_upload', 200000), true);
+            $form->addElement(new XoopsFormHidden('tpl_id', $id));
+            $form->addElement(new XoopsFormHidden('op', 'uploadtpl_go'));
+            $form->addElement(new XoopsFormHidden('fct', 'tplsets'));
+            $form->addElement(new XoopsFormButton('', 'upload_button', _MD_UPLOAD, 'submit'));
+            $form->display();
+            xoops_cp_footer();
+            exit();
+        } else {
+            echo 'Selected template does not exist';
+        }
+        xoops_cp_footer();
+        break;
+    case 'uploadtpl_go':
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 1, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        $tpl =& $tpltpl_handler->get($tpl_id);
+        if (is_object($tpl)) {
+            include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+            $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('text/html', 'application/x-cdf', 'text/plain'), 200000);
+            $uploader->setPrefix('tmp');
+            if ($uploader->fetchMedia($_POST['xoops_upload_file'][0])) {
+                if (!$uploader->upload()) {
+                    $err = $uploader->getErrors();
+                } else {
+                    $tpl->setVar('tpl_lastmodified', time());
+                    $fp = @fopen($uploader->getSavedDestination(), 'r');
+                    $fsource = @fread($fp, filesize($uploader->getSavedDestination()));
+                    @fclose($fp);
+                    $tpl->setVar('tpl_source', $fsource, true);
+                    @unlink($uploader->getSavedDestination());
+                    if (!$tpltpl_handler->insert($tpl)) {
+                        $err = 'Failed inserting data to database';
+                    } else {
+                        if ($tpl->getVar('tpl_tplset') == $xoopsConfig['template_set']) {
+                            include_once XOOPS_ROOT_PATH.'/class/template.php';
+                            xoops_template_touch($tpl_id, true);
+                        }
+                    }
+                }
+            } else {
+                $err = implode('<br />', $uploader->getErrors(false));
+            }
+            if (isset($err)) {
+                xoops_cp_header(false);
+                xoops_error($err);
+                xoops_cp_footer();
+                exit();
+            }
+            redirect_header('admin.php?fct=tplsets&amp;op=listtpl&amp;moddir='.$tpl->getVar('tpl_module').'&amp;tplset='.urlencode($tpl->getVar('tpl_tplset')), 2, _MD_AM_DBUPDATED);
+        }
+        break;
+    // upload new file
+    case 'uploadtpl2':
+        xoops_cp_header();
+        $tplset = htmlspecialchars($tplset);
+        $moddir = htmlspecialchars($moddir);
+        echo '<a href="admin.php?fct=tplsets">'. _MD_TPLMAIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;<a href="./admin.php?fct=tplsets&amp;op=listtpl&amp;moddir='.$moddir.'&amp;tplset='.$tplset.'">'.$tplset.'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'._MD_UPLOAD.'<br /><br />';
+        include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+        $form = new XoopsThemeForm(_MD_UPLOAD, 'tplupload_form', 'admin.php', 'post', true);
+        $form->setExtra('enctype="multipart/form-data"');
+        $form->addElement(new XoopsFormLabel(_MD_FILENAME, $file));
+        $form->addElement(new XoopsFormFile(_MD_CHOOSEFILE.'<br /><span style="color:#ff0000;">'._MD_UPWILLREPLACE.'</span>', 'tpl_upload', 200000), true);
+        $form->addElement(new XoopsFormHidden('moddir', $moddir));
+        $form->addElement(new XoopsFormHidden('tplset', $tplset));
+        $form->addElement(new XoopsFormHidden('file', $file));
+        $form->addElement(new XoopsFormHidden('type', $type));
+        $form->addElement(new XoopsFormHidden('op', 'uploadtpl2_go'));
+        $form->addElement(new XoopsFormHidden('fct', 'tplsets'));
+        $form->addElement(new XoopsFormButton('', 'ploadtarupload_button', _MD_UPLOAD, 'submit'));
+        $form->display();
+        xoops_cp_footer();
+        break;
+    case 'uploadtpl2_go':
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 1, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+        $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('text/html', 'application/x-cdf', 'text/plain'), 200000);
+        $uploader->setPrefix('tmp');
+        if ($uploader->fetchMedia($_POST['xoops_upload_file'][0])) {
+            if (!$uploader->upload()) {
+                $err = $uploader->getErrors();
+            } else {
+                $tpltpl_handler =& xoops_gethandler('tplfile');
+                $tplfile =& $tpltpl_handler->find('default', $type, null, $moddir, $file);
+                if (is_array($tplfile)) {
+                    $tpl =& $tplfile[0]->xoopsClone();
+                    $tpl->setVar('tpl_id', 0);
+                    $tpl->setVar('tpl_tplset', $tplset);
+                    $tpl->setVar('tpl_lastmodified', time());
+                    $fp = @fopen($uploader->getSavedDestination(), 'r');
+                    $fsource = @fread($fp, filesize($uploader->getSavedDestination()));
+                    @fclose($fp);
+                    $tpl->setVar('tpl_source', $fsource, true);
+                    @unlink($uploader->getSavedDestination());
+                    if (!$tpltpl_handler->insert($tpl)) {
+                        $err = 'Failed inserting data to database';
+                    } else {
+                        if ($tplset == $xoopsConfig['template_set']) {
+                            include_once XOOPS_ROOT_PATH.'/class/template.php';
+                            xoops_template_touch($tpl->getVar('tpl_id'), true);
+                        }
+                    }
+                } else {
+                    $err = 'This template file does not need to be installed (PHP files using this template file does not exist)';
+                }
+            }
+        } else {
+            $err = implode('<br />', $uploader->getErrors(false));
+        }
+        if (isset($err)) {
+            xoops_cp_header(false);
+            xoops_error($err);
+            xoops_cp_footer();
+            exit();
+        }
+        redirect_header('admin.php?fct=tplsets&amp;op=listtpl&amp;moddir='.$moddir.'&amp;tplset='.urlencode($tplset), 2, _MD_AM_DBUPDATED);
+        break;
+    case 'download':
+        if (isset($tplset)) {
+            if (false != extension_loaded('zlib')) {
+                if (isset($_GET['method']) && $_GET['method'] == 'tar') {
+                    if (@function_exists('gzencode')) {
+                        require_once(XOOPS_ROOT_PATH.'/class/tardownloader.php');
+                        $downloader = new XoopsTarDownloader();
+                    }
+                } else {
+                    if (@function_exists('gzcompress')) {
+                        require_once(XOOPS_ROOT_PATH.'/class/zipdownloader.php');
+                        $downloader = new XoopsZipDownloader();
+                    }
+                }
+                $tplset_handler =& xoops_gethandler('tplset');
+                $tplsetobj =& $tplset_handler->getByName($tplset);
+                $xml = "<"."?xml version=\"1.0\"?".">\r\n<tplset>\r\n  <name>".$tplset."</name>\r\n  <dateCreated>".$tplsetobj->getVar('tplset_created')."</dateCreated>\r\n  <credits>\r\n".$tplsetobj->getVar('tplset_credits')."\r\n  </credits>\r\n  <generator>".XOOPS_VERSION."</generator>\r\n  <templates>";
+                $tpltpl_handler =& xoops_gethandler('tplfile');
+                $files =& $tpltpl_handler->getObjects(new Criteria('tpl_tplset', $tplset), true);
+                $fcount = count($files);
+                if ($fcount > 0) {
+                    for ($i = 0; $i < $fcount; $i++) {
+                        if ($files[$i]->getVar('tpl_type') == 'block') {
+                            $path = $tplset.'/templates/'.$files[$i]->getVar('tpl_module').'/blocks/'.$files[$i]->getVar('tpl_file');
+                            $xml .= "\r\n    <template name=\"".$files[$i]->getVar('tpl_file')."\">\r\n      <module>".$files[$i]->getVar('tpl_module')."</module>\r\n      <type>block</type>\r\n      <lastModified>".$files[$i]->getVar('tpl_lastmodified')."</lastModified>\r\n    </template>";
+                        } elseif ($files[$i]->getVar('tpl_type') == 'module') {
+                            $path = $tplset.'/templates/'.$files[$i]->getVar('tpl_module').'/'.$files[$i]->getVar('tpl_file');
+                            $xml .= "\r\n    <template name=\"".$files[$i]->getVar('tpl_file')."\">\r\n      <module>".$files[$i]->getVar('tpl_module')."</module>\r\n      <type>module</type>\r\n      <lastModified>".$files[$i]->getVar('tpl_lastmodified')."</lastModified>\r\n    </template>";
+                        }
+                        $downloader->addFileData($files[$i]->getVar('tpl_source'), $path, $files[$i]->getVar('tpl_lastmodified'));
+                    }
+
+                    $xml .= "\r\n  </templates>";
+/*
+                    $xml ." "\r\n  <images>";
+                    $image_handler =& xoops_gethandler('imagesetimg');
+                    $criteria = new CriteriaCompo(new Criteria('l.tplset_name', $tplset));
+                    $criteria->add(new Criteria('s.imgset_refid', 0));
+                    $ifiles =& $image_handler->getObjects($criteria);
+                    $fcount = count($ifiles);
+                    for ($i = 0; $i < $fcount; $i++) {
+                        $dummyimage = XOOPS_CACHE_PATH.'/_dummyimage'.$i.time();
+                        $fp = @fopen($dummyimage, 'wb');
+                        @fwrite($fp, $ifiles[$i]->getVar('imgsetimg_body'));
+                        @fclose($fp);
+                        $downloader->addBinaryFile($dummyimage, $tplset.'/images/'.$ifiles[$i]->getVar('imgsetimg_file'));
+                        @unlink($dummyimage);
+                        $xml .= " \r\n   <image name=\"".$ifiles[$i]->getVar('imgsetimg_file')."\"></image>";
+                    }
+*/
+                }
+                //$xml .= "\r\n  </images>
+                $xml .= "\r\n</tplset>";
+                $downloader->addFileData($xml, $tplset.'/tplset.xml', time());
+                echo $downloader->download($tplset, true);
+            } else {
+                xoops_cp_header();
+                xoops_error(_MD_NOZLIB);
+                xoops_cp_footer();
+            }
+        }
+        break;
+    case 'generatetpl':
+        xoops_cp_header();
+        xoops_confirm(array('tplset' => $tplset, 'moddir' => $moddir, 'file' => $file, 'type' => $type, 'op' => 'generatetpl_go', 'fct' => 'tplsets'), 'admin.php', _MD_PLZGENERATE, _MD_GENERATE);
+        xoops_cp_footer();
+        break;
+    case 'generatetpl_go':
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        $tplfile =& $tpltpl_handler->find('default', $type, null, $moddir, $file, true);
+        if (count($tplfile) > 0) {
+            $newtpl =& $tplfile[0]->xoopsClone();
+            $newtpl->setVar('tpl_id', 0);
+            $newtpl->setVar('tpl_tplset', $tplset);
+            $newtpl->setVar('tpl_lastmodified', time());
+            $newtpl->setVar('tpl_lastimported', 0);
+            if (!$tpltpl_handler->insert($newtpl)) {
+                $err = 'ERROR: Could not insert template <b>'.$tplfile[0]->getVar('tpl_file').'</b> to the database.';
+            } else {
+                if ($tplset == $xoopsConfig['template_set']) {
+                    include_once XOOPS_ROOT_PATH.'/class/template.php';
+                    xoops_template_touch($newtpl->getVar('tpl_id'));
+                }
+            }
+        } else {
+            $err = 'Selected file does not exist)';
+        }
+        if (!isset($err)) {
+            redirect_header('admin.php?fct=tplsets&amp;op=listtpl&amp;moddir='.$newtpl->getVar('tpl_module').'&amp;tplset='.urlencode($newtpl->getVar('tpl_tplset')), 2, _MD_AM_DBUPDATED);
+        }
+        xoops_cp_header();
+        xoops_error($err);
+        echo '<br /><a href="admin.php?fct=tplsets">'._MD_AM_BTOTADMIN.'</a>';
+        xoops_cp_footer();
+        break;
+    case 'generatemod':
+        xoops_cp_header();
+        xoops_confirm(array('tplset' => $tplset, 'op' => 'generatemod_go', 'fct' => 'tplsets', 'moddir' => $moddir), 'admin.php', _MD_PLZGENERATE, _MD_GENERATE);
+        xoops_cp_footer();
+        break;
+    case 'generatemod_go':
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        xoops_cp_header();
+        echo '<code>';
+        $tplfiles =& $tpltpl_handler->find('default', 'module', null, $moddir, null, true);
+        $fcount = count($tplfiles);
+        if ($fcount > 0) {
+            echo 'Installing module template files for template set '.$tplset.'...<br />';
+            for ($i = 0; $i < $fcount; $i++) {
+                $newtpl =& $tplfiles[$i]->xoopsClone();
+                $newtpl->setVar('tpl_id', 0);
+                $newtpl->setVar('tpl_tplset', $tplset);
+                $newtpl->setVar('tpl_lastmodified', time());
+                $newtpl->setVar('tpl_lastimported', 0);
+                if (!$tpltpl_handler->insert($newtpl)) {
+                    echo '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert template <b>'.$file.'</b> to the database.</span><br />';
+                } else {
+                    if ($tplset == $xoopsConfig['template_set']) {
+                        include_once XOOPS_ROOT_PATH.'/class/template.php';
+                        xoops_template_touch($newtpl->getVar('tpl_id'));
+                    }
+                    echo '&nbsp;&nbsp;Template <b>'.$tplfiles[$i]->getVar('tpl_file').'</b> added to the database.<br />';
+                }
+            }
+            flush();
+            unset($newtpl);
+        }
+        unset($files);
+        $tplfiles =& $tpltpl_handler->find('default', 'block', null, $moddir, null, true);
+        $fcount = count($tplfiles);
+        if ($fcount > 0) {
+            echo '&nbsp;&nbsp;Installing block template files...<br />';
+            for ($i = 0; $i < $fcount; $i++) {
+                $newtpl =& $tplfiles[$i]->xoopsClone();
+                $newtpl->setVar('tpl_id', 0);
+                $newtpl->setVar('tpl_tplset', $tplset);
+                $newtpl->setVar('tpl_lastmodified', time());
+                $newtpl->setVar('tpl_lastimported', 0);
+                if (!$tpltpl_handler->insert($newtpl)) {
+                    echo '&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert block template <b>'.$tplfiles[$i]->getVar('tpl_file').'</b> to the database.</span><br />';echo $newtpl->getHtmlErrors();
+                } else {
+                    if ($tplset == $xoopsConfig['template_set']) {
+                        include_once XOOPS_ROOT_PATH.'/class/template.php';
+                        xoops_template_touch($newtpl->getVar('tpl_id'));
+                    }
+                    echo '&nbsp;&nbsp;&nbsp;&nbsp;Block template <b>'.$tplfiles[$i]->getVar('tpl_file').'</b> added to the database.<br />';
+                }
+            }
+            flush();
+            unset($newtpl);
+        }
+        echo '<br />Module template files for template set <b>'.$tplset.'</b> generated and installed.<br /></code><br /><a href="admin.php?fct=tplsets">'._MD_AM_BTOTADMIN.'</a>';
+        xoops_cp_footer();
+        break;
+    case 'uploadtar_go':
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+        $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('application/x-gzip', 'application/gzip', 'application/gzip-compressed', 'application/x-gzip-compressed', 'application/x-tar', 'application/x-tar-compressed', 'application/octet-stream'), 1000000);
+        $uploader->setPrefix('tmp');
+        xoops_cp_header();
+        echo '<code>';
+        if ($uploader->fetchMedia($_POST['xoops_upload_file'][0])) {
+            if (!$uploader->upload()) {
+                xoops_error($uploader->getErrors());
+            } else {
+                include_once XOOPS_ROOT_PATH.'/class/class.tar.php';
+                $tar = new tar();
+                $tar->openTar($uploader->getSavedDestination());
+                @unlink($uploader->getSavedDestination());
+                $themefound = false;
+                foreach ($tar->files as $id => $info) {
+                    $infoarr = explode('/', str_replace("\\", '/', $info['name']));
+                    if (!isset($tplset_name)) {
+                        $tplset_name = trim($infoarr[0]);
+                    } else {
+                        $tplset_name = trim($tplset_name);
+                        if ($tplset_name == '') {
+                            $tplset_name = trim($infoarr[0]);
+                        }
+                    }
+                    if ($tplset_name != '') {
+                        break;
+                    }
+                }
+                if ($tplset_name == '') {
+                    echo '<span style="color:#ff0000;">ERROR: Template file not found</span><br />';
+                } else {
+                    $tplset_handler =& xoops_gethandler('tplset');
+                    if ($tplset_handler->getCount(new Criteria('tplset_name', $tplset_name)) > 0) {
+                        echo '<span style="color:#ff0000;">ERROR: Template set <b>'.$tplset_name.'</b> already exists.</span><br />';
+                    } else {
+                        $tplset =& $tplset_handler->create();
+                        $tplset->setVar('tplset_name', $tplset_name);
+                        $tplset->setVar('tplset_created', time());
+                        if (!$tplset_handler->insert($tplset)) {
+                            echo '<span style="color:#ff0000;">ERROR: Could not create template set <b>'.$tplset_name.'</b>.</span><br />';
+                        } else {
+                            $tplsetid = $tplset->getVar('tplset_id');
+                            echo 'Template set <b>'.$tplset_name.'</b> created. (ID: <b>'.$tplsetid.'</b>)</span><br />';
+                            $tpltpl_handler = xoops_gethandler('tplfile');
+                            $themeimages = array();
+                            foreach ($tar->files as $id => $info) {
+                                $infoarr = explode('/', str_replace("\\", '/', $info['name']));
+                                if (isset($infoarr[3]) && trim($infoarr[3]) == 'blocks') {
+                                    $default =& $tpltpl_handler->find('default', 'block', null, trim($infoarr[2]), trim($infoarr[4]));
+                                } elseif ((!isset($infoarr[4]) || trim($infoarr[4]) == '') && $infoarr[1] == 'templates') {
+                                    $default =& $tpltpl_handler->find('default', 'module', null, trim($infoarr[2]), trim($infoarr[3]));
+                                } elseif (isset($infoarr[3]) && trim($infoarr[3]) == 'images') {
+                                    $infoarr[2] = trim($infoarr[2]);
+                                    if (preg_match("/(.*)\.(gif|jpg|jpeg|png)$/i", $infoarr[2], $match)) {
+                                        $themeimages[] = array('name' => $infoarr[2], 'content' => $info['file']);
+                                    }
+                                }
+                                if (isset($default) && count($default) > 0) {
+                                    $newtpl =& $default[0]->xoopsClone();
+                                    $newtpl->setVar('tpl_id', 0);
+                                    $newtpl->setVar('tpl_tplset', $tplset_name);
+                                    $newtpl->setVar('tpl_source', $info['file'], true);
+                                    $newtpl->setVar('tpl_lastmodified', time());
+                                    if (!$tpltpl_handler->insert($newtpl)) {
+                                        echo '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not insert <b>'.$info['name'].'</b> to the database.</span><br />';
+                                    } else {
+                                        echo '&nbsp;&nbsp;<b>'.$info['name'].'</b> inserted to the database.<br />';
+                                    }
+                                    unset($default);
+                                }
+                                unset($info);
+                            }
+                            $icount = count($themeimages);
+                            if ($icount > 0) {
+                                $imageset_handler =& xoops_gethandler('imageset');
+                                $imgset =& $imageset_handler->create();
+                                $imgset->setVar('imgset_name', $tplset_name);
+                                $imgset->setVar('imgset_refid', 0);
+                                if (!$imageset_handler->insert($imgset)) {
+                                    echo '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Could not create image set.</span><br />';
+                                } else {
+                                    $newimgsetid = $imgset->getVar('imgset_id');
+                                    echo '&nbsp;&nbsp;Image set <b>'.$tplset_name.'</b> created. (ID: <b>'.$newimgsetid.'</b>)<br />';
+                                    if (!$imageset_handler->linktplset($newimgsetid, $tplset_name)) {
+                                        echo '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Failed linking image set to template set <b>'.$tplset_name.'</b></span><br />';
+                                    }
+                                    $image_handler =& xoops_gethandler('imagesetimg');
+                                    for ($i = 0; $i < $icount; $i++) {
+                                        if (isset($themeimages[$i]['name']) && $themeimages[$i]['name'] != '') {
+                                            $image =& $image_handler->create();
+                                            $image->setVar('imgsetimg_file', $themeimages[$i]['name']);
+                                            $image->setVar('imgsetimg_imgset', $newimgsetid);
+                                            $image->setVar('imgsetimg_body', $themeimages[$i]['content'], true);
+                                            if (!$image_handler->insert($image)) {
+                                                echo '&nbsp;&nbsp;<span style="color:#ff0000;">ERROR: Failed storing image file data to database.</span><br />';
+                                            } else {
+                                                echo '&nbsp;&nbsp;Image file data stored into database. (ID: <b>'.$image->getVar('imgsetimg_id').'</b>)<br />';
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }
+                    }
+                }
+            }
+        } else {
+            $err = implode('<br />', $uploader->getErrors(false));
+            echo $err;
+        }
+        echo '</code><br /><a href="admin.php?fct=tplsets">'._MD_AM_BTOTADMIN.'</a>';
+        xoops_cp_footer();
+        break;
+    case 'previewtpl':
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        require_once XOOPS_ROOT_PATH.'/class/template.php';
+        $myts =& MyTextsanitizer::getInstance();
+        $html = $myts->stripSlashesGPC($html);
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        $tplfile =& $tpltpl_handler->get($id, true);
+        $xoopsTpl = new XoopsTpl();
+
+        if (is_object($tplfile)) {
+            $dummylayout = '<html><head><meta http-equiv="content-type" content="text/html; charset='._CHARSET.'" /><meta http-equiv="content-language" content="'._LANGCODE.'" /><title>'.$xoopsConfig['sitename'].'</title><style type="text/css" media="all">';
+            $css =& $tpltpl_handler->find($xoopsConfig['template_set'], 'css', 0, null, null, true);
+            $csscount = count($css);
+            for ($i = 0; $i < $csscount; $i++) {
+                $dummylayout .= "\n".$css[$i]->getVar('tpl_source');
+            }
+            $dummylayout .= "\n".'</style></head><body><{$content}></body></html>';
+            if ($tplfile->getVar('tpl_type') == 'block') {
+                include_once XOOPS_ROOT_PATH.'/class/xoopsblock.php';
+                $block = new XoopsBlock($tplfile->getVar('tpl_refid'));
+                $xoopsTpl->assign('block', $block->buildBlock());
+            }
+            $dummytpl = '_dummytpl_'.time().'.html';
+            $fp = fopen(XOOPS_CACHE_PATH.'/'.$dummytpl, 'w');
+            fwrite($fp, $html);
+            fclose($fp);
+            $xoopsTpl->assign('content', $xoopsTpl->fetch('file:'.XOOPS_CACHE_PATH.'/'.$dummytpl));
+            $xoopsTpl->clear_compiled_tpl('file:'.XOOPS_CACHE_PATH.'/'.$dummytpl);
+            unlink(XOOPS_CACHE_PATH.'/'.$dummytpl);
+            $dummyfile = '_dummy_'.time().'.html';
+            $fp = fopen(XOOPS_CACHE_PATH.'/'.$dummyfile, 'w');
+            fwrite($fp, $dummylayout);
+            fclose($fp);
+            $tplset= $tplfile->getVar('tpl_tplset');
+            $tform = array('tpl_tplset' => $tplset, 'tpl_id' => $id, 'tpl_file' => $tplfile->getVar('tpl_file'), 'tpl_desc' => $tplfile->getVar('tpl_desc'), 'tpl_lastmodified' => $tplfile->getVar('tpl_lastmodified'), 'tpl_source' => htmlspecialchars($html, ENT_QUOTES), 'tpl_module' => $moddir);
+            include_once XOOPS_ROOT_PATH.'/modules/system/admin/tplsets/tplform.php';
+            xoops_cp_header();
+            echo '<a href="admin.php?fct=tplsets">'. _MD_TPLMAIN .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;<a href="./admin.php?fct=tplsets&amp;op=listtpl&amp;moddir='.$moddir.'&amp;tplset='.$tplset.'">'.$tplset.'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'._MD_EDITTEMPLATE.'<br /><br />';
+            $form->display();
+            xoops_cp_footer();
+            echo '<script type="text/javascript">
+            <!--//
+            preview_window = openWithSelfMain("", "popup", 680, 450, true);
+            preview_window.document.clear();
+            ';
+            $lines = preg_split("/(\r\n|\r|\n)( *)/", $xoopsTpl->fetch('file:'.XOOPS_CACHE_PATH.'/'.$dummyfile));
+            $xoopsTpl->clear_compiled_tpl('file:'.XOOPS_CACHE_PATH.'/'.$dummyfile);
+            unlink(XOOPS_CACHE_PATH.'/'.$dummyfile);
+            foreach ($lines as $line) {
+                echo 'preview_window.document.writeln("'.str_replace('"', '\"', $line).'");';
+            }
+            echo '
+            preview_window.focus();
+            preview_window.document.close();
+            //-->
+            </script>';
+
+        }
+        break;
+    case 'update':
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+        $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('text/html', 'application/x-cdf'), 200000);
+        $uploader->setPrefix('tmp');
+        $msg = array();
+        foreach ($_POST['xoops_upload_file'] as $upload_file) {
+            // '.' is converted to '_' when upload
+            $upload_file2 = str_replace('.', '_', $upload_file);
+            if ($uploader->fetchMedia($upload_file2)) {
+                if (!$uploader->upload()) {
+                    $msg[] = $uploader->getErrors();
+                } else {
+                    $tpltpl_handler =& xoops_gethandler('tplfile');
+                    if (!isset($old_template[$upload_file])) {
+                        $tplfile =& $tpltpl_handler->find('default', null, null, $moddir, $upload_file);
+                        if (count($tplfile) > 0) {
+                            $tpl =& $tplfile[0]->xoopsClone();
+                            $tpl->setVar('tpl_id', 0);
+                            $tpl->setVar('tpl_tplset', $tplset);
+                        } else {
+                            $msg[] = 'Template file <b>'.$upload_file.'</b> does not need to be installed (PHP files using this template file does not exist)';
+                            continue;
+                        }
+                    } else {
+                        $tpl =& $tpltpl_handler->get($old_template[$upload_file]);
+                    }
+                    $tpl->setVar('tpl_lastmodified', time());
+                    $fp = @fopen($uploader->getSavedDestination(), 'r');
+                    $fsource = @fread($fp, filesize($uploader->getSavedDestination()));
+                    @fclose($fp);
+                    $tpl->setVar('tpl_source', $fsource, true);
+                    @unlink($uploader->getSavedDestination());
+                    if (!$tpltpl_handler->insert($tpl)) {
+                        $msg[] = 'Failed inserting data for '.$upload_file.' to database';
+                    } else {
+                        $msg[] = 'Template file <b>'.$upload_file.'</b> updated.';
+                        if ($tplset == $xoopsConfig['template_set']) {
+                            include_once XOOPS_ROOT_PATH.'/class/template.php';
+                            if (xoops_template_touch($tpl->getVar('tpl_id'), true)) {
+                                $msg[] = 'Template file <b>'.$upload_file.'</b> compiled.';
+                            }
+
+                        }
+                    }
+                }
+            } else {
+                if ($uploader->getMediaName() == '') {
+                    continue;
+                } else {
+                    $msg[] = $uploader->getErrors();
+                }
+            }
+        }
+        xoops_cp_header();
+        echo '<code>';
+        foreach ($msg as $m) {
+            echo $m.'<br />';
+        }
+        echo '</code><br /><a href="admin.php?fct=tplsets&amp;op=listtpl&amp;tplset='.$tplset.'&amp;moddir='.$moddir.'">'._MD_AM_BTOTADMIN.'</a>';
+        xoops_cp_footer();
+        break;
+    case 'importtpl':
+        xoops_cp_header();
+        if (!empty($id)) {
+            xoops_confirm(array('tplset' => $tplset, 'moddir' => $moddir, 'id' => $id, 'op' => 'importtpl_go', 'fct' => 'tplsets'), 'admin.php', _MD_RUSUREIMPT, _MD_IMPORT);
+        } elseif (isset($file)) {
+            xoops_confirm(array('tplset' => $tplset, 'moddir' => $moddir, 'file' => $file, 'op' => 'importtpl_go', 'fct' => 'tplsets'), 'admin.php', _MD_RUSUREIMPT, _MD_IMPORT);
+        }
+        xoops_cp_footer();
+        break;
+    case 'importtpl_go':
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            redirect_header('admin.php?fct=tplsets', 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+        }
+        $tpltpl_handler =& xoops_gethandler('tplfile');
+        $tplfile = '';
+        if (!empty($id)) {
+            $tplfile =& $tpltpl_handler->get($id, true);
+        } else {
+            $tplfiles =& $tpltpl_handler->find('default', null, null, null, trim($file), true);
+            $tplfile = (count($tplfiles) > 0) ? $tplfiles[0] : '';
+        }
+        $error = true;
+        if (is_object($tplfile)) {
+            switch ($tplfile->getVar('tpl_type')) {
+                case 'module':
+                    $filepath = XOOPS_ROOT_PATH.'/templates/'.$tplset.'/'.$tplfile->getVar('tpl_module').'/'.$tplfile->getVar('tpl_file');
+                    break;
+                case 'block':
+                    $filepath = XOOPS_ROOT_PATH.'/templates/'.$tplset.'/'.$tplfile->getVar('tpl_module').'/blocks/'.$tplfile->getVar('tpl_file');
+                    break;
+                default:
+                    break;
+            }
+            if (file_exists($filepath)) {
+                if (false != $fp = fopen($filepath, 'r')) {
+                    $filesource = fread($fp, filesize($filepath));
+                    fclose($fp);
+                    $tplfile->setVar('tpl_source', $filesource, true);
+                    $tplfile->setVar('tpl_tplset', $tplset);
+                    $tplfile->setVar('tpl_lastmodified', time());
+                    $tplfile->setVar('tpl_lastimported', time());
+                    if (!$tpltpl_handler->insert($tplfile)) {
+                    } else {
+                        $error = false;
+                    }
+                }
+            }
+        }
+        if (false != $error) {
+            xoops_cp_header();
+            xoops_error('Could not import file '.$filepath);
+            echo '<br /><a href="admin.php?fct=tplsets&amp;op=listtpl&amp;tplset='.$tplset.'&amp;moddir='.$moddir.'">'._MD_AM_BTOTADMIN.'</a>';
+            xoops_cp_footer();
+            exit();
+        }
+        redirect_header('admin.php?fct=tplsets&amp;op=listtpl&amp;moddir='.$tplfile->getVar('tpl_module').'&amp;tplset='.urlencode($tplfile->getVar('tpl_tplset')), 2, _MD_AM_DBUPDATED);
+        break;
+    default:
+        break;
+    }
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/tplsets/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/tplsets/themeimgform.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/tplsets/themeimgform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/tplsets/themeimgform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,56 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$image_handler =& xoops_gethandler('imageset', 'imagesetimg');
+$criteria = new CriteriaCompo(new Criteria('tplset_name', $tplset));
+// skin image sets have reference ID 0
+$criteria->add(new Criteria('imgset_refid', 0));
+$imgs =& $image_handler->getObjects($criteria);
+$icount = count($imgs);
+if ($tplset != 'default') {
+	if ($icount > 0) {
+		echo '<form action="admin.php" method="post" enctype="multipart/form-data"><table width="100%" class="outer" cellspacing="1"><tr><th colspan="3">'._MD_EDITSKINIMG.'</th></tr>';
+		for ($i = 0; $i < $icount; $i++) {
+			echo '<tr><td rowspan="3" valign="middle" align="center" class="odd"><img src="admin.php?fct=tplsets&op=showimage&id='.$imgs[$i]->getVar('imgsetimg_id').'" alt="" /></td><td class="head">'._MD_IMGFILE.'</td><td class="even">'.$imgs[$i]->getVar('imgsetimg_file').'</td></tr><tr><td class="head">'._MD_IMGNEWFILE.'</td><td class="even"><input type="file" name="imgfiles['.$imgs[$i]->getVar('imgsetimg_id').']" /></td></tr><tr><td class="head">'._MD_IMGDELETE.'</td><td class="even"><input type="checkbox" name="imgdelete['.$imgs[$i]->getVar('imgsetimg_id').']" value="1" /><input type="hidden" name="imgids[]" value="'.$imgs[$i]->getVar('imgsetimg_id').'" /></td></tr>';
+		}
+		echo '<tr class="foot"><td colspan="3" align="center"><input type="hidden" name="tplset" value="'.$tplset.'" /><input type="hidden" name="op" value="updateimage" /><input type="hidden" name="fct" value="tplsets" /><input type="hidden" name="imgset" value="'.$imgs[0]->getVar('imgsetimg_imgset').'" /><input type="submit" name="imgsubmit" value="'._SUBMIT.'" /></td></tr></table></form>';
+	}
+	echo '<form action="admin.php" method="post" enctype="multipart/form-data"><table width="100%" class="outer" cellspacing="1"><tr><th colspan="3">'._MD_ADDSKINIMG.'</th></tr>';
+	echo '<tr><td class="head">'._MD_IMGNEWFILE.'</td><td class="even"><input type="file" name="imgfile" /></td></tr>';
+	echo '<tr><td class="head">&nbsp;</td><td class="even"><input type="hidden" name="tplset" value="'.$tplset.'" /><input type="hidden" name="op" value="addimage" /><input type="hidden" name="fct" value="tplsets" /><input type="submit" name="imgsubmit" value="'._SUBMIT.'" /><input type="hidden" name="imgset" value="';
+	if ($icount > 0) {
+		echo $imgs[0]->getVar('imgsetimg_imgset');
+	}
+	echo '" /></td></tr></table></form>';
+} else {
+	echo '<table width="100%" class="outer" cellspacing="1"><tr><th colspan="3">'._MD_SKINIMGS.'</th></tr>';
+	for ($i = 0; $i < $icount; $i++) {
+		echo '<tr><td valign="middle" align="center" class="odd"><img src="admin.php?fct=tplsets&op=showimage&id='.$imgs[$i]->getVar('imgsetimg_id').'" alt="" /></td><td class="head">'._MD_IMGFILE.'</td><td class="even">'.$imgs[$i]->getVar('imgsetimg_file').'</td></tr>';
+	}
+	echo '</table>';
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/tplsets/themeimgform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/tplsets/tplform.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/tplsets/tplform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/tplsets/tplform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,47 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+$form = new XoopsThemeForm(_MD_EDITTEMPLATE, 'template_form', 'admin.php', 'post', true);
+$form->addElement(new XoopsFormLabel(_MD_FILENAME, $tform['tpl_file']));
+$form->addElement(new XoopsFormLabel(_MD_FILEDESC, $tform['tpl_desc']));
+$form->addElement(new XoopsFormLabel(_MD_LASTMOD, formatTimestamp($tform['tpl_lastmodified'], 'l')));
+$form->addElement(new XoopsFormTextArea(_MD_FILEHTML, 'html', $tform['tpl_source'], 25, 70));
+$form->addElement(new XoopsFormHidden('id', $tform['tpl_id']));
+$form->addElement(new XoopsFormHidden('op', 'edittpl_go'));
+$form->addElement(new XoopsFormHidden('redirect', 'edittpl'));
+$form->addElement(new XoopsFormHidden('fct', 'tplsets'));
+$form->addElement(new XoopsFormHidden('moddir', $tform['tpl_module']));
+if ($tform['tpl_tplset'] != 'default') {
+    $button_tray = new XoopsFormElementTray('');
+    $button_tray->addElement(new XoopsFormButton('', 'previewtpl', _PREVIEW, 'submit'));
+    $button_tray->addElement(new XoopsFormButton('', 'submittpl', _SUBMIT, 'submit'));
+    $form->addElement($button_tray);
+} else {
+    $form->addElement(new XoopsFormButton('', 'previewtpl', _MD_VIEW, 'submit'));
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/tplsets/tplform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/tplsets/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/tplsets/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/tplsets/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_TPLSETS;
+$modversion['version'] = "";
+$modversion['description'] = "XOOPS Template Set Manager";
+$modversion['author'] = "";
+$modversion['credits'] = "The XOOPS Project";
+$modversion['help'] = "tplsets.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "tplsets.gif";
+
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=tplsets";
+$modversion['category'] = XOOPS_SYSTEM_TPLSET;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/tplsets/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/userrank/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/userrank/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/userrank/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,158 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+/**
+ * Manage user rank.
+ * @copyright XOOPS Project
+ * @todo    Fix register_globals!
+ **/
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+
+$op = 'RankForumAdmin';
+
+if (isset($_GET['op'])) {
+    $op = $_GET['op'];
+} elseif (isset($_POST['op'])) {
+    $op = $_POST['op'];
+}
+
+switch ($op) {
+
+case "RankForumEdit":
+    $rank_id = isset($_GET['rank_id']) ? intval($_GET['rank_id']) : 0;
+    if ($rank_id > 0) {
+        include_once XOOPS_ROOT_PATH."/modules/system/admin/userrank/userrank.php";
+        RankForumEdit($rank_id);
+    }
+    break;
+
+case "RankForumDel":
+    $rank_id = isset($_GET['rank_id']) ? intval($_GET['rank_id']) : 0;
+    if ($rank_id > 0) {
+        xoops_cp_header();
+        xoops_confirm(array('fct' => 'userrank', 'op' => 'RankForumDelGo', 'rank_id' => $rank_id), 'admin.php', _AM_WAYSYWTDTR);
+        xoops_cp_footer();
+    }
+    break;
+
+case "RankForumDelGo":
+    $rank_id = isset($_POST['rank_id']) ? intval($_POST['rank_id']) : 0;
+    if ($rank_id <= 0 | !$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=userrank", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $db =& Database::getInstance();
+    $sql = sprintf("DELETE FROM %s WHERE rank_id = %u", $db->prefix("ranks"), $rank_id);
+    $db->query($sql);
+    redirect_header("admin.php?fct=userrank&amp;op=ForumAdmin",1,_AM_DBUPDATED);
+    break;
+
+case "RankForumAdd":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=userrank", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $db =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    $rank_special = isset($_POST['rank_special']) && intval($_POST['rank_special']) ? 1 : 0;
+    $rank_title = $myts->stripSlashesGPC($_POST['rank_title']);
+    $rank_image = '';
+    include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+    $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/x-png'), 100000, 120, 120);
+    $uploader->setPrefix('rank');
+    if ($uploader->fetchMedia($_POST['xoops_upload_file'][0])) {
+        if ($uploader->upload()) {
+            $rank_image = $uploader->getSavedFileName();
+        }
+    }
+    $newid = $db->genId($db->prefix("ranks")."_rank_id_seq");
+    if ($rank_special == 1) {
+        $sql = "INSERT INTO ".$db->prefix("ranks")." (rank_id, rank_title, rank_min, rank_max, rank_special, rank_image) VALUES ($newid, ".$db->quoteString($rank_title).", -1, -1, 1, ".$db->quoteString($rank_image).")";
+    } else {
+        $sql = "INSERT INTO ".$db->prefix("ranks")." (rank_id, rank_title, rank_min, rank_max, rank_special, rank_image) VALUES ($newid, ".$db->quoteString($rank_title).", ".intval($_POST['rank_min'])." , ".intval($_POST['rank_max'])." , 0, ".$db->quoteString($rank_image).")";
+    }
+    if (!$db->query($sql)) {
+        xoops_cp_header();
+        xoops_error('Failed storing rank data into the database');
+        xoops_cp_footer();
+    } else {
+        redirect_header("admin.php?fct=userrank&amp;op=RankForumAdmin",1,_AM_DBUPDATED);
+    }
+    break;
+
+case "RankForumSave":
+    $rank_id = isset($_POST['rank_id']) ? intval($_POST['rank_id']) : 0;
+    if ($rank_id <= 0 | !$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=userrank", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $db =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    $rank_special = isset($_POST['rank_special']) && intval($_POST['rank_special']) ? 1 : 0;
+    $rank_title = $myts->stripSlashesGPC($_POST['rank_title']);
+    $delete_old_image = false;
+    include_once XOOPS_ROOT_PATH.'/class/uploader.php';
+    $uploader = new XoopsMediaUploader(XOOPS_UPLOAD_PATH, array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/x-png'), 100000, 120, 120);
+    $uploader->setPrefix('rank');
+    if ($uploader->fetchMedia($_POST['xoops_upload_file'][0])) {
+        if ($uploader->upload()) {
+            $rank_image = $uploader->getSavedFileName();
+            $delete_old_image = true;
+        }
+    }
+    if ($rank_special > 0) {
+        $_POST['rank_min'] = $_POST['rank_max'] = -1;
+    }
+    $sql = "UPDATE ".$db->prefix("ranks")." SET rank_title = ".$db->quoteString($rank_title).", rank_min = ".intval($_POST['rank_min']).", rank_max = ".intval($_POST['rank_max']).", rank_special = ".$rank_special;
+    if ($delete_old_image) {
+        $sql .= ", rank_image = ".$db->quoteString($rank_image);
+    }
+    $sql .= " WHERE rank_id = ".$rank_id;
+    if (!$db->query($sql)) {
+        xoops_cp_header();
+        xoops_error('Failed storing rank data into the database');
+        xoops_cp_footer();
+    } else {
+        if ($delete_old_image) {
+            $old_rank_path = str_replace("\\", "/", realpath(XOOPS_UPLOAD_PATH.'/'.trim($_POST['old_rank'])));
+            if (0 === strpos($old_rank_path, XOOPS_UPLOAD_PATH) && is_file($old_rank_path)) {
+                unlink($old_rank_path);
+            }
+        }
+        redirect_header("admin.php?fct=userrank&amp;op=RankForumAdmin",1,_AM_DBUPDATED);
+    }
+    break;
+
+default:
+    include_once XOOPS_ROOT_PATH."/modules/system/admin/userrank/userrank.php";
+    RankForumAdmin();
+    break;
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/userrank/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/userrank/rankform.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/userrank/rankform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/userrank/rankform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,54 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+include_once XOOPS_ROOT_PATH.'/class/xoopsformloader.php';
+$rank_form = new XoopsThemeForm($rank['form_title'], 'rankform', 'admin.php', 'post', true);
+$rank_form->setExtra('enctype="multipart/form-data"');
+$rank_form->addElement(new XoopsFormText(_AM_RANKTITLE, 'rank_title', 50, 50, $rank['rank_title']), true);
+$rank_form->addElement(new XoopsFormText(_AM_MINPOST, 'rank_min', 10, 10, $rank['rank_min']));
+$rank_form->addElement(new XoopsFormText(_AM_MAXPOST, 'rank_max', 10, 10, $rank['rank_max']));
+$rank_tray = new XoopsFormElementTray(_AM_IMAGE, '&nbsp;');
+$rank_select = new XoopsFormFile('', 'rank_image', 5000000);
+$rank_tray->addElement($rank_select);
+if (trim($rank['rank_image']) != '' && file_exists(XOOPS_UPLOAD_PATH.'/'.$rank['rank_image'])) {
+    $rank_label = new XoopsFormLabel('', '<img src="'.XOOPS_UPLOAD_URL.'/'.$rank['rank_image'].'" alt="" />');
+    $rank_tray->addElement($rank_label);
+}
+$rank_form->addElement($rank_tray);
+$tray = new XoopsFormElementTray(_AM_SPECIAL, '<br />');
+$tray->addElement(new XoopsFormRadioYN('', 'rank_special', $rank['rank_special']));
+$tray->addElement(new XoopsFormLabel('', _AM_SPECIALCAN));
+$rank_form->addElement($tray);
+$rank_form->addElement(new XoopsFormHidden('rank_id', $rank['rank_id']));
+$rank_form->addElement(new XoopsFormHidden('op', $rank['op']));
+$rank_form->addElement(new XoopsFormHidden('fct', 'userrank'));
+$rank_form->addElement(new XoopsFormButton('', 'submit', _SUBMIT, 'submit'));
+?>


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/userrank/rankform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/userrank/userrank.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/userrank/userrank.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/userrank/userrank.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,108 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+
+function RankForumAdmin()
+{
+    $db =& Database::getInstance();
+    xoops_cp_header();
+    echo "<h4 style='text-align:left;'>"._AM_RANKSSETTINGS."</h4>
+    <table width='100%' class='outer' cellpadding='4' cellspacing='1'>
+    <tr align='center'>
+    <th align='left'>"._AM_TITLE."</th>
+    <th>"._AM_MINPOST."</th>
+    <th>"._AM_MAXPOST."</th>
+    <th>"._AM_IMAGE."</th>
+    <th>"._AM_SPERANK."</th>
+    <th>"._AM_ACTION."</th></tr>";
+    $result = $db->query("SELECT * FROM ".$db->prefix("ranks")." ORDER BY rank_id");
+    $count = 0;
+    while ( $rank = $db->fetchArray($result) ) {
+        if ($count % 2 == 0) {
+            $class = 'even';
+        } else {
+            $class = 'odd';
+        }
+        echo "<tr class='$class' align='center'>
+        <td align='left'>".$rank['rank_title']."</td>
+        <td>".$rank['rank_min']."</td>
+        <td>".$rank['rank_max']."</td>
+        <td>";
+        if ($rank['rank_image'] && file_exists(XOOPS_UPLOAD_PATH.'/'.$rank['rank_image'])) {
+            echo '<img src="'.XOOPS_UPLOAD_URL.'/'.$rank['rank_image'].'" alt="" /></td>';
+        } else {
+            echo '&nbsp;';
+        }
+        if ($rank['rank_special'] == 1) {
+            echo '<td>'._AM_ON.'</td>';
+        } else {
+            echo '<td>'._AM_OFF.'</td>';
+        }
+        echo"<td><a href='admin.php?fct=userrank&amp;op=RankForumEdit&amp;rank_id=".$rank['rank_id']."'>"._AM_EDIT."</a> <a href='admin.php?fct=userrank&amp;op=RankForumDel&amp;rank_id=".$rank['rank_id']."&amp;ok=0'>"._AM_DEL."</a></td></tr>";
+        $count++;
+    }
+    echo '</table><br /><br />';
+    $rank['rank_min'] = 0;
+    $rank['rank_max'] = 0;
+    $rank['rank_special'] = 0;
+    $rank['rank_id'] = '';
+    $rank['rank_title'] = '';
+    $rank['rank_image'] = 'blank.gif';
+    $rank['form_title'] = _AM_ADDNEWRANK;
+    $rank['op'] = 'RankForumAdd';
+    include_once XOOPS_ROOT_PATH.'/modules/system/admin/userrank/rankform.php';
+    $rank_form->display();
+    xoops_cp_footer();
+}
+
+
+function RankForumEdit($rank_id)
+{
+    $db =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    xoops_cp_header();
+    echo '<a href="admin.php?fct=userrank">'. _AM_RANKSSETTINGS .'</a>&nbsp;<span style="font-weight:bold;">&raquo;&raquo;</span>&nbsp;'._AM_EDITRANK.'<br /><br />';
+    $result = $db->query("SELECT * FROM ".$db->prefix("ranks")." WHERE rank_id=".$rank_id);
+    $rank = $db->fetchArray($result);
+    $rank['rank_title'] = $myts->makeTboxData4Edit($rank['rank_title']);
+    $rank['rank_image'] = $myts->makeTboxData4Edit($rank['rank_image']);
+    $rank['form_title'] = _AM_EDITRANK;
+    $rank['op'] = 'RankForumSave';
+    include_once XOOPS_ROOT_PATH.'/modules/system/admin/userrank/rankform.php';
+    $rank_form->addElement(new XoopsFormHidden('old_rank', $rank['rank_image']));
+    $rank_form->display();
+    xoops_cp_footer();
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/userrank/userrank.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/userrank/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/userrank/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/userrank/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_RANK;
+$modversion['version'] = "";
+$modversion['description'] = "User Posts Ranks Configuration";
+$modversion['author'] = "phpBB Group ( http://www.phpbb.com/ )";
+$modversion['credits'] = "";
+$modversion['help'] = "userrank.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "userrank.gif";
+
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=userrank";
+$modversion['category'] = XOOPS_SYSTEM_URANK;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/userrank/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/users/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/users/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/users/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,228 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+$op = 'mod_users';
+include_once XOOPS_ROOT_PATH."/modules/system/admin/users/users.php";
+if (isset($_POST)) {
+    foreach ( $_POST as $k => $v ) {
+        ${$k} = $v;
+    }
+}
+if (isset($_GET['op'])) {
+    $op = trim($_GET['op']);
+    if (isset($_GET['uid'])) {
+        $uid = intval($_GET['uid']);
+    }
+}
+switch ($op) {
+
+case "modifyUser":
+    modifyUser($uid);
+    break;
+case "updateUser":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=users", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    // RMV-NOTIFY
+    updateUser($uid, $username, $name, $url, $email, $user_icq, $user_aim, $user_yim, $user_msnm, $user_from, $user_occ, $user_intrest, $user_viewemail, $user_avatar, $user_sig, $attachsig, $theme, $password, $pass2, $rank, $bio, $uorder, $umode, $notify_method, $notify_mode, $timezone_offset, $user_mailok, $groups);
+    break;
+case "delUser":
+    xoops_cp_header();
+    $member_handler =& xoops_gethandler('member');
+    $userdata =& $member_handler->getUser($uid);
+    xoops_confirm(array('fct' => 'users', 'op' => 'delUserConf', 'del_uid' => $userdata->getVar('uid')), 'admin.php', sprintf(_AM_AYSYWTDU,$userdata->getVar('uname')));
+    xoops_cp_footer();
+    break;
+case "delete_many":
+    xoops_cp_header();
+    $count = count($memberslist_id);
+    if ( $count > 0 ) {
+        $list = "<a href='".XOOPS_URL."/userinfo.php?uid=".$memberslist_id[0]."' target='_blank'>".$memberslist_uname[$memberslist_id[0]]."</a>";
+        $hidden = "<input type='hidden' name='memberslist_id[]' value='".$memberslist_id[0]."' />\n";
+        for ( $i = 1; $i < $count; $i++ ) {
+            $list .= ", <a href='".XOOPS_URL."/userinfo.php?uid=".$memberslist_id[$i]."' target='_blank'>".$memberslist_uname[$memberslist_id[$i]]."</a>";
+            $hidden .= "<input type='hidden' name='memberslist_id[]' value='".$memberslist_id[$i]."' />\n";
+        }
+        echo "<div><h4>".sprintf(_AM_AYSYWTDU," ".$list." ")."</h4>";
+        echo _AM_BYTHIS."<br /><br />
+        <form action='admin.php' method='post'>
+        <input type='hidden' name='fct' value='users' />
+        <input type='hidden' name='op' value='delete_many_ok' />
+        ".$GLOBALS['xoopsSecurity']->getTokenHTML()."
+        <input type='submit' value='"._YES."' />
+        <input type='button' value='"._NO."' onclick='javascript:location.href=\"admin.php?op=adminMain\"' />";
+        echo $hidden;
+        echo "</form></div>";
+    } else {
+        echo _AM_NOUSERS;
+    }
+    xoops_cp_footer();
+    break;
+case "delete_many_ok":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=users", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $count = count($memberslist_id);
+    $output = "";
+    $member_handler =& xoops_gethandler('member');
+    for ( $i = 0; $i < $count; $i++ ) {
+        $deluser =& $member_handler->getUser($memberslist_id[$i]);
+        $groups = $deluser->getGroups();
+        if (in_array(XOOPS_GROUP_ADMIN, $groups)) {
+            $output .= sprintf('Admin user cannot be deleted. (User: %s)', $deluser->getVar("uname"))."<br />";
+        } else {
+            if (!$member_handler->deleteUser($deluser)) {
+                $output .= "Could not delete ".$deluser->getVar("uname")."<br />";
+            } else {
+                $output .= $deluser->getVar("uname")." deleted<br />";
+            }
+            // RMV-NOTIFY
+            xoops_notification_deletebyuser($deluser->getVar('uid'));
+        }
+    }
+    xoops_cp_header();
+    echo $output;
+    xoops_cp_footer();
+    break;
+case "delUserConf":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=users", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    $member_handler =& xoops_gethandler('member');
+    $user =& $member_handler->getUser($del_uid);
+    $groups = $user->getGroups();
+    if (in_array(XOOPS_GROUP_ADMIN, $groups)) {
+        xoops_cp_header();
+        echo sprintf('Admin user cannot be deleted. (User: %s)', $user->getVar("uname"));
+        xoops_cp_footer();
+    } elseif (!$member_handler->deleteUser($user)) {
+        xoops_cp_header();
+        echo "Could not delete ".$deluser->getVar("uname");
+        xoops_cp_footer();
+    } else {
+        $online_handler =& xoops_gethandler('online');
+        $online_handler->destroy($del_uid);
+        // RMV-NOTIFY
+        xoops_notification_deletebyuser($del_uid);
+        redirect_header("admin.php?fct=users",1,_AM_DBUPDATED);
+    }
+    break;
+case "addUser":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=users", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    if (!$username || !$email || !$password) {
+        $adduser_errormsg = _AM_YMCACF;
+    } else {
+        $member_handler =& xoops_gethandler('member');
+        // make sure the username doesnt exist yet
+        if ($member_handler->getUserCount(new Criteria('uname', $username)) > 0) {
+            $adduser_errormsg = 'User name '.$username.' already exists';
+        } else {
+            $newuser =& $member_handler->createUser();
+            if ( isset($user_viewemail) ) {
+                $newuser->setVar("user_viewemail",$user_viewemail);
+            }
+            if ( isset($attachsig) ) {
+                $newuser->setVar("attachsig",$attachsig);
+            }
+            $newuser->setVar("name", $name);
+            $newuser->setVar("uname", $username);
+            $newuser->setVar("email", $email);
+            $newuser->setVar("url", formatURL($url));
+            $newuser->setVar("user_avatar",'blank.gif');
+            $newuser->setVar("user_icq", $user_icq);
+            $newuser->setVar("user_from", $user_from);
+            $newuser->setVar("user_sig", $user_sig);
+            $newuser->setVar("user_aim", $user_aim);
+            $newuser->setVar("user_yim", $user_yim);
+            $newuser->setVar("user_msnm", $user_msnm);
+            if ($pass2 != "") {
+                if ( $password != $pass2 ) {
+                    xoops_cp_header();
+                    echo "
+                    <b>"._AM_STNPDNM."</b>";
+                    xoops_cp_footer();
+                    exit();
+                }
+                $newuser->setVar("pass", md5($password));
+            }
+            $newuser->setVar("timezone_offset", $timezone_offset);
+            $newuser->setVar("uorder", $uorder);
+            $newuser->setVar("umode", $umode);
+            // RMV-NOTIFY
+            $newuser->setVar("notify_method", $notify_method);
+            $newuser->setVar("notify_mode", $notify_mode);
+            $newuser->setVar("bio", $bio);
+            $newuser->setVar("rank", $rank);
+            $newuser->setVar("level", 1);
+            $newuser->setVar("user_occ", $user_occ);
+            $newuser->setVar("user_intrest", $user_intrest);
+            $newuser->setVar('user_mailok', $user_mailok);
+            if (!$member_handler->insertUser($newuser)) {
+                $adduser_errormsg = _AM_CNRNU;
+            } else {
+                if (!$member_handler->addUserToGroup(XOOPS_GROUP_USERS, $newuser->getVar('uid'))) {
+                    $adduser_errormsg = _AM_CNRNU2;
+                } else {
+                    redirect_header("admin.php?fct=users",1,_AM_DBUPDATED);
+                    exit();
+                }
+            }
+        }
+    }
+    xoops_cp_header();
+    xoops_error($adduser_errormsg);
+    xoops_cp_footer();
+    break;
+case "synchronize":
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header("admin.php?fct=users", 3, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    synchronize($id, $type);
+    break;
+case "reactivate":
+    $result=$xoopsDB->query("UPDATE ".$xoopsDB->prefix("users")." SET level=1 WHERE uid=".$uid);
+    if(!$result){
+        exit();
+    }
+    redirect_header("admin.php?fct=users&amp;op=modifyUser&amp;uid=".$uid,1,_AM_DBUPDATED);
+    break;
+case "mod_users":
+default:
+    include_once XOOPS_ROOT_PATH.'/class/pagenav.php';
+    displayUsers();
+    break;
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/users/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/users/userform.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/users/userform.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/users/userform.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,175 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$uid_label = new XoopsFormLabel(_AM_USERID, $uid_value);
+$uname_text = new XoopsFormText(_AM_NICKNAME, "username", 25, 25, $uname_value);
+$name_text = new XoopsFormText(_AM_NAME, "name", 30, 60, $name_value);
+$email_tray = new XoopsFormElementTray(_AM_EMAIL, "<br />");
+$email_text = new XoopsFormText("", "email", 30, 60, $email_value);
+$email_tray->addElement($email_text, true);
+$email_cbox = new XoopsFormCheckBox("", "user_viewemail", $email_cbox_value);
+$email_cbox->addOption(1, _AM_AOUTVTEAD);
+$email_tray->addElement($email_cbox);
+$url_text = new XoopsFormText(_AM_URL, "url", 30, 100, $url_value);
+//  $avatar_select = new XoopsFormSelect("", "user_avatar", $avatar_value);
+//  $avatar_array = XoopsLists::getImgListAsArray(XOOPS_ROOT_PATH."/images/avatar/");
+//  $avatar_select->addOptionArray($avatar_array);
+//  $a_dirlist = XoopsLists::getDirListAsArray(XOOPS_ROOT_PATH."/images/avatar/");
+//  $a_dir_labels = array();
+//  $a_count = 0;
+//  $a_dir_link = "<a href=\"javascript:openWithSelfMain('".XOOPS_URL."/misc.php?action=showpopups&amp;type=avatars&amp;start=".$a_count."','avatars',600,400);\">XOOPS</a>";
+//  $a_count = $a_count + count($avatar_array);
+//  $a_dir_labels[] = new XoopsFormLabel("", $a_dir_link);
+//  foreach ($a_dirlist as $a_dir) {
+//      if ( $a_dir == "users" ) {
+//          continue;
+//      }
+//      $avatars_array = XoopsLists::getImgListAsArray(XOOPS_ROOT_PATH."/images/avatar/".$a_dir."/", $a_dir."/");
+//      $avatar_select->addOptionArray($avatars_array);
+//      $a_dir_link = "<a href=\"javascript:openWithSelfMain('".XOOPS_URL."/misc.php?action=showpopups&amp;type=avatars&amp;subdir=".$a_dir."&amp;start=".$a_count."','avatars',600,400);\">".$a_dir."</a>";
+//      $a_dir_labels[] = new XoopsFormLabel("", $a_dir_link);
+//      $a_count = $a_count + count($avatars_array);
+//  }
+//  if (!empty($uid_value)) {
+//      $myavatar = avatarExists($uid_value);
+//      if ( $myavatar != false ) {
+//          $avatar_select->addOption($myavatar, _US_MYAVATAR);
+//      }
+//  }
+//  $avatar_select->setExtra("onchange='showImgSelected(\"avatar\", \"user_avatar\", \"images/avatar\", \"\", \"".XOOPS_URL."\")'");
+//  $avatar_label = new XoopsFormLabel("", "<img src='".XOOPS_URL."/images/avatar/".$avatar_value."' name='avatar' id='avatar' alt='' />");
+//  $avatar_tray = new XoopsFormElementTray(_AM_AVATAR, "&nbsp;");
+//  $avatar_tray->addElement($avatar_select);
+//  $avatar_tray->addElement($avatar_label);
+//  foreach ($a_dir_labels as $a_dir_label) {
+//      $avatar_tray->addElement($a_dir_label);
+//  }
+//  $theme_select = new XoopsFormSelectTheme(_AM_THEME, "theme", $theme_value);
+$timezone_select = new XoopsFormSelectTimezone(_US_TIMEZONE, "timezone_offset", $timezone_value);
+$icq_text = new XoopsFormText(_AM_ICQ, "user_icq", 15, 15, $icq_value);
+$aim_text = new XoopsFormText(_AM_AIM, "user_aim", 18, 18, $aim_value);
+$yim_text = new XoopsFormText(_AM_YIM, "user_yim", 25, 25, $yim_value);
+$msnm_text = new XoopsFormText(_AM_MSNM, "user_msnm", 30, 100, $msnm_value);
+$location_text = new XoopsFormText(_AM_LOCATION, "user_from", 30, 100, $location_value);
+$occupation_text = new XoopsFormText(_AM_OCCUPATION, "user_occ", 30, 100, $occ_value);
+$interest_text = new XoopsFormText(_AM_INTEREST, "user_intrest", 30, 150, $interest_value);
+$sig_tray = new XoopsFormElementTray(_AM_SIGNATURE, "<br />");
+$sig_tarea = new XoopsFormTextArea("", "user_sig", $sig_value);
+$sig_tray->addElement($sig_tarea);
+$sig_cbox = new XoopsFormCheckBox("", "attachsig", $sig_cbox_value);
+$sig_cbox->addOption(1, _US_SHOWSIG);
+$sig_tray->addElement($sig_cbox);
+$umode_select = new XoopsFormSelect(_US_CDISPLAYMODE, "umode", $umode_value);
+$umode_select->addOptionArray(array("nest"=>_NESTED, "flat"=>_FLAT, "thread"=>_THREADED));
+$uorder_select = new XoopsFormSelect(_US_CSORTORDER, "uorder", $uorder_value);
+$uorder_select->addOptionArray(array("0"=>_OLDESTFIRST, "1"=>_NEWESTFIRST));
+// RMV-NOTIFY
+include_once XOOPS_ROOT_PATH. '/language/' . $xoopsConfig['language'] . '/notification.php';
+include_once XOOPS_ROOT_PATH . '/include/notification_constants.php';
+$notify_method_select = new XoopsFormSelect(_NOT_NOTIFYMETHOD, 'notify_method', $notify_method_value);
+$notify_method_select->addOptionArray(array(XOOPS_NOTIFICATION_METHOD_DISABLE=>_NOT_METHOD_DISABLE, XOOPS_NOTIFICATION_METHOD_PM=>_NOT_METHOD_PM, XOOPS_NOTIFICATION_METHOD_EMAIL=>_NOT_METHOD_EMAIL));
+$notify_mode_select = new XoopsFormSelect(_NOT_NOTIFYMODE, 'notify_mode', $notify_mode_value);
+$notify_mode_select->addOptionArray(array(XOOPS_NOTIFICATION_MODE_SENDALWAYS=>_NOT_MODE_SENDALWAYS, XOOPS_NOTIFICATION_MODE_SENDONCETHENDELETE=>_NOT_MODE_SENDONCE, XOOPS_NOTIFICATION_MODE_SENDONCETHENWAIT=>_NOT_MODE_SENDONCEPERLOGIN));
+$bio_tarea = new XoopsFormTextArea(_US_EXTRAINFO, "bio", $bio_value);
+$rank_select = new XoopsFormSelect(_AM_RANK, "rank", $rank_value);
+$ranklist = XoopsLists::getUserRankList();
+if ( count($ranklist) > 0 ) {
+    $rank_select->addOption(0, _AM_NSRA);
+    $rank_select->addOption(0, "--------------");
+    $rank_select->addOptionArray($ranklist);
+} else {
+    $rank_select->addOption(0, _AM_NSRID);
+}
+$pwd_text = new XoopsFormPassword(_AM_PASSWORD, "password", 10, 32);
+$pwd_text2 = new XoopsFormPassword(_AM_RETYPEPD, "pass2", 10, 32);
+$mailok_radio = new XoopsFormRadioYN(_US_MAILOK, 'user_mailok', $mailok_value);
+
+// Groups administration addition XOOPS 2.0.9: Mith
+global $xoopsUser;
+$gperm_handler =& xoops_gethandler('groupperm');
+//If user has admin rights on groups
+if ($gperm_handler->checkRight("system_admin", XOOPS_SYSTEM_GROUP, $xoopsUser->getGroups(), 1)) {
+    //add group selection
+    $group_select = new XoopsFormSelectGroup(_US_GROUPS, 'groups', false, $groups, 5, true);
+}
+else {
+    //add empty variable
+    $group_select = new XoopsFormHidden('groups[]', XOOPS_GROUP_USERS);
+}
+
+$fct_hidden = new XoopsFormHidden("fct", "users");
+$op_hidden = new XoopsFormHidden("op", $op_value);
+$submit_button = new XoopsFormButton("", "submit", _SUBMIT, "submit");
+
+$form = new XoopsThemeForm($form_title, "userinfo", "admin.php", "post", true);
+$form->addElement($uname_text, true);
+$form->addElement($name_text);
+$form->addElement($email_tray, true);
+$form->addElement($url_text);
+//  $form->addElement($avatar_tray);
+//  $form->addElement($theme_select);
+$form->addElement($timezone_select);
+$form->addElement($icq_text);
+$form->addElement($aim_text);
+$form->addElement($yim_text);
+$form->addElement($msnm_text);
+$form->addElement($location_text);
+$form->addElement($occupation_text);
+$form->addElement($interest_text);
+$form->addElement($sig_tray);
+$form->addElement($umode_select);
+$form->addElement($uorder_select);
+// RMV-NOTIFY
+$form->addElement($notify_method_select);
+$form->addElement($notify_mode_select);
+$form->addElement($bio_tarea);
+$form->addElement($rank_select);
+// adding a new user requires password fields
+if (!$form_isedit) {
+    $form->addElement($pwd_text, true);
+    $form->addElement($pwd_text2, true);
+} else {
+    $form->addElement($pwd_text);
+    $form->addElement($pwd_text2);
+}
+$form->addElement($mailok_radio);
+$form->addElement($group_select);
+$form->addElement($fct_hidden);
+$form->addElement($op_hidden);
+$form->addElement($submit_button);
+if ( !empty($uid_value) ) {
+    $uid_hidden = new XoopsFormHidden("uid", $uid_value);
+    $form->addElement($uid_hidden);
+}
+//$form->setRequired($uname_text);
+//$form->setRequired($email_text);
+$form->display();
+?>


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/users/userform.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/users/users.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/users/users.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/users/users.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,296 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+    exit("Access Denied");
+}
+/*********************************************************/
+/* Users Functions                                       */
+/*********************************************************/
+include_once XOOPS_ROOT_PATH."/class/xoopslists.php";
+include_once XOOPS_ROOT_PATH."/class/xoopsformloader.php";
+
+function displayUsers()
+{
+    global $xoopsDB, $xoopsConfig, $xoopsModule;
+    $userstart = isset($_GET['userstart']) ? intval($_GET['userstart']) : 0;
+    xoops_cp_header();
+    $member_handler =& xoops_gethandler('member');
+    $usercount = $member_handler->getUserCount();
+    $nav = new XoopsPageNav($usercount, 200, $userstart, "userstart", "fct=users");
+    $editform = new XoopsThemeForm(_AM_EDEUSER, "edituser", "admin.php");
+    $user_select = new XoopsFormSelect('', "uid");
+    $criteria = new CriteriaCompo();
+    $criteria->setSort('uname');
+    $criteria->setOrder('ASC');
+    $criteria->setLimit(200);
+    $criteria->setStart($userstart);
+    $user_select->addOptionArray($member_handler->getUserList($criteria));
+    $user_select_tray = new XoopsFormElementTray(_AM_NICKNAME, "<br />");
+    $user_select_tray->addElement($user_select);
+    $user_select_nav = new XoopsFormLabel('', $nav->renderNav(4));
+    $user_select_tray->addElement($user_select_nav);
+    $op_select = new XoopsFormSelect("", "op");
+    $op_select->addOptionArray(array("modifyUser"=>_AM_MODIFYUSER, "delUser"=>_AM_DELUSER));
+    $submit_button = new XoopsFormButton("", "submit", _AM_GO, "submit");
+    $fct_hidden = new XoopsFormHidden("fct", "users");
+    $editform->addElement($user_select_tray);
+    $editform->addElement($op_select);
+    $editform->addElement($submit_button);
+    $editform->addElement($fct_hidden);
+    $editform->display();
+
+    echo "<br />\n";
+    $uid_value = "";
+    $uname_value = "";
+    $name_value = "";
+    $email_value = "";
+    $email_cbox_value = 0;
+    $url_value = "";
+//  $avatar_value = "blank.gif";
+//  $theme_value = $xoopsConfig['default_theme'];
+    $timezone_value = $xoopsConfig['default_TZ'];
+    $icq_value = "";
+    $aim_value = "";
+    $yim_value = "";
+    $msnm_value = "";
+    $location_value = "";
+    $occ_value = "";
+    $interest_value = "";
+    $sig_value = "";
+    $sig_cbox_value = 0;
+    $umode_value = $xoopsConfig['com_mode'];
+    $uorder_value = $xoopsConfig['com_order'];
+    // RMV-NOTIFY
+    include_once XOOPS_ROOT_PATH . '/include/notification_constants.php';
+    $notify_method_value = XOOPS_NOTIFICATION_METHOD_PM;
+    $notify_mode_value = XOOPS_NOTIFICATION_MODE_SENDALWAYS;
+    $bio_value = "";
+    $rank_value = 0;
+    $mailok_value = 0;
+    $op_value = "addUser";
+    $form_title = _AM_ADDUSER;
+    $form_isedit = false;
+    $groups = array(XOOPS_GROUP_USERS);
+    include XOOPS_ROOT_PATH."/modules/system/admin/users/userform.php";
+        xoops_cp_footer();
+}
+
+function modifyUser($user)
+{
+    global $xoopsDB, $xoopsConfig, $xoopsModule;
+    xoops_cp_header();
+    $member_handler =& xoops_gethandler('member');
+    $user =& $member_handler->getUser($user);
+    if (is_object($user)) {
+        if (!$user->isActive()) {
+            xoops_confirm(array('fct' => 'users', 'op' => 'reactivate', 'uid' => $user->getVar('uid')), 'admin.php', _AM_NOTACTIVE);
+            xoops_cp_footer();
+            exit();
+        }
+        $uid_value = $user->getVar("uid");
+        $uname_value = $user->getVar("uname", "E");
+        $name_value = $user->getVar("name", "E");
+        $email_value = $user->getVar("email", "E");
+        $email_cbox_value = $user->getVar("user_viewemail") ? 1 : 0;
+        $url_value = $user->getVar("url", "E");
+//      $avatar_value = $user->getVar("user_avatar");
+        $temp = $user->getVar("theme");
+//      $theme_value = empty($temp) ? $xoopsConfig['default_theme'] : $temp;
+        $timezone_value = $user->getVar("timezone_offset");
+        $icq_value = $user->getVar("user_icq", "E");
+        $aim_value = $user->getVar("user_aim", "E");
+        $yim_value = $user->getVar("user_yim", "E");
+        $msnm_value = $user->getVar("user_msnm", "E");
+        $location_value = $user->getVar("user_from", "E");
+        $occ_value = $user->getVar("user_occ", "E");
+        $interest_value = $user->getVar("user_intrest", "E");
+        $sig_value = $user->getVar("user_sig", "E");
+        $sig_cbox_value = ($user->getVar("attachsig") == 1) ? 1 : 0;
+        $umode_value = $user->getVar("umode");
+        $uorder_value = $user->getVar("uorder");
+        // RMV-NOTIFY
+        $notify_method_value = $user->getVar("notify_method");
+        $notify_mode_value = $user->getVar("notify_mode");
+        $bio_value = $user->getVar("bio", "E");
+        $rank_value = $user->rank(false);
+        $mailok_value = $user->getVar('user_mailok', 'E');
+        $op_value = "updateUser";
+        $form_title = _AM_UPDATEUSER.": ".$user->getVar("uname");
+        $form_isedit = true;
+        $groups = array_values($user->getGroups());
+        include XOOPS_ROOT_PATH."/modules/system/admin/users/userform.php";
+        echo "<br /><b>"._AM_USERPOST."</b><br /><br />\n";
+        echo "<table>\n";
+        echo "<tr><td>"._AM_COMMENTS."</td><td>".$user->getVar("posts")."</td></tr>\n";
+        echo "</table>\n";
+        echo "<br />"._AM_PTBBTSDIYT."<br />\n";
+        echo "<form action=\"admin.php\" method=\"post\">\n";
+        echo "<input type=\"hidden\" name=\"id\" value=\"".$user->getVar("uid")."\">";
+        echo "<input type=\"hidden\" name=\"type\" value=\"user\">\n";
+        echo "<input type=\"hidden\" name=\"fct\" value=\"users\">\n";
+        echo "<input type=\"hidden\" name=\"op\" value=\"synchronize\">\n";
+        echo $GLOBALS['xoopsSecurity']->getTokenHTML()."\n";
+        echo "<input type=\"submit\" value=\""._AM_SYNCHRONIZE."\">\n";
+        echo "</form>\n";
+    } else {
+        echo "<h4 style='text-align:left;'>";
+        echo _AM_USERDONEXIT;
+        echo "</h4>";
+    }
+    xoops_cp_footer();
+}
+
+// RMV-NOTIFY
+function updateUser($uid, $uname, $name, $url, $email, $user_icq, $user_aim, $user_yim, $user_msnm, $user_from, $user_occ, $user_intrest, $user_viewemail, $user_avatar, $user_sig, $attachsig, $theme, $pass, $pass2, $rank, $bio, $uorder, $umode, $notify_method, $notify_mode, $timezone_offset, $user_mailok, $groups = array())
+{
+    global $xoopsConfig, $xoopsDB, $xoopsModule;
+    $member_handler =& xoops_gethandler('member');
+    $edituser =& $member_handler->getUser($uid);
+    if ($edituser->getVar('uname') != $uname && $member_handler->getUserCount(new Criteria('uname', $uname)) > 0) {
+        xoops_cp_header();
+        echo 'User name '.$uname.' already exists';
+        xoops_cp_footer();
+    } else {
+        $edituser->setVar("name", $name);
+        $edituser->setVar("uname", $uname);
+        $edituser->setVar("email", $email);
+        if (isset($url) && $url != "") {
+            $edituser->setVar("url", formatURL($url));
+        }
+    //  $edituser->setVar("user_avatar", $user_avatar);
+        $edituser->setVar("user_icq", $user_icq);
+        $edituser->setVar("user_from", $user_from);
+        $edituser->setVar("user_sig", $user_sig);
+        $user_viewemail = (isset($user_viewemail) && $user_viewemail == 1) ? 1 : 0;
+        $edituser->setVar("user_viewemail", $user_viewemail);
+        $edituser->setVar("user_aim", $user_aim);
+        $edituser->setVar("user_yim", $user_yim);
+        $edituser->setVar("user_msnm", $user_msnm);
+        $edituser->setVar("attachsig", $attachsig);
+        $edituser->setVar("timezone_offset", $timezone_offset);
+    //  $edituser->setVar("theme", $theme);
+        $edituser->setVar("uorder", $uorder);
+        $edituser->setVar("umode", $umode);
+        // RMV-NOTIFY
+        $edituser->setVar("notify_method", $notify_method);
+        $edituser->setVar("notify_mode", $notify_mode);
+        $edituser->setVar("bio", $bio);
+        $edituser->setVar("rank", $rank);
+        $edituser->setVar("user_occ", $user_occ);
+        $edituser->setVar("user_intrest", $user_intrest);
+        $edituser->setVar('user_mailok', $user_mailok);
+        if ($pass2 != "") {
+            if ( $pass != $pass2 ) {
+                xoops_cp_header();
+                echo "
+                <b>"._AM_STNPDNM."</b>";
+                xoops_cp_footer();
+                exit();
+            }
+            $edituser->setVar("pass", md5($pass));
+        }
+        if (!$member_handler->insertUser($edituser)) {
+            xoops_cp_header();
+            echo $edituser->getHtmlErrors();
+            xoops_cp_footer();
+        } else {
+            if ($groups != array()) {
+                global $xoopsUser;
+                $oldgroups = $edituser->getGroups();
+                //If the edited user is the current user and the current user WAS in the webmaster's group and is NOT in the new groups array
+                if ($edituser->getVar('uid') == $xoopsUser->getVar('uid') && (in_array(XOOPS_GROUP_ADMIN, $oldgroups)) && !(in_array(XOOPS_GROUP_ADMIN, $groups))) {
+                    //Add the webmaster's group to the groups array to prevent accidentally removing oneself from the webmaster's group
+                    array_push($groups, XOOPS_GROUP_ADMIN);
+                }
+                $member_handler =& xoops_gethandler('member');
+                foreach ($oldgroups as $groupid) {
+                    $member_handler->removeUsersFromGroup($groupid, array($edituser->getVar('uid')));
+                }
+                foreach ($groups as $groupid) {
+                    $member_handler->addUserToGroup($groupid, $edituser->getVar('uid'));
+                }
+            }
+            redirect_header("admin.php?fct=users",1,_AM_DBUPDATED);
+        }
+    }
+    exit();
+}
+
+function synchronize($id, $type)
+{
+    global $xoopsDB;
+    switch($type) {
+    case 'user':
+        // Array of tables from which to count 'posts'
+        $tables = array();
+        // Count comments (approved only: com_status == XOOPS_COMMENT_ACTIVE)
+        include_once XOOPS_ROOT_PATH . '/include/comment_constants.php';
+        $tables[] = array ('table_name' => 'xoopscomments', 'uid_column' => 'com_uid', 'criteria' => new Criteria('com_status', XOOPS_COMMENT_ACTIVE));
+        // Count forum posts
+        $tables[] = array ('table_name' => 'bb_posts', 'uid_column' => 'uid');
+
+        $total_posts = 0;
+        foreach ($tables as $table) {
+            $criteria = new CriteriaCompo();
+            $criteria->add (new Criteria($table['uid_column'], $id));
+            if (!empty($table['criteria'])) {
+                $criteria->add ($table['criteria']);
+            }
+            $sql = "SELECT COUNT(*) AS total FROM ".$xoopsDB->prefix($table['table_name']) . ' ' . $criteria->renderWhere();
+            if ( $result = $xoopsDB->query($sql) ) {
+                if ($row = $xoopsDB->fetchArray($result)) {
+                    $total_posts = $total_posts + $row['total'];
+                }
+            }
+        }
+        $sql = "UPDATE ".$xoopsDB->prefix("users")." SET posts = $total_posts WHERE uid = $id";
+        if ( !$result = $xoopsDB->query($sql) ) {
+            exit(sprintf(_AM_CNUUSER %s ,$id));
+        }
+        break;
+    case 'all users':
+        $sql = "SELECT uid FROM ".$xoopsDB->prefix("users")."";
+        if ( !$result = $xoopsDB->query($sql) ) {
+            exit(_AM_CNGUSERID);
+        }
+        while ($row = $xoopsDB->fetchArray($result)) {
+            $id = $row['uid'];
+            synchronize($id, "user");
+        }
+        break;
+    default:
+        break;
+    }
+    redirect_header("admin.php?fct=users&amp;op=modifyUser&amp;uid=".$id,1,_AM_DBUPDATED);
+    exit();
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/users/users.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/users/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/users/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/users/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_USER;
+$modversion['version'] = "";
+$modversion['description'] = "Users Administration";
+$modversion['author'] = "Francisco Burzi<br>( http://phpnuke.org/ )";
+$modversion['credits'] = "Modified by Kazumi Ono<br>( http://www.mywebaddons.com/ )";
+$modversion['help'] = "users.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "users.gif";
+
+$modversion['hasAdmin'] = 1;
+$modversion['adminpath'] = "admin.php?fct=users";
+$modversion['category'] = XOOPS_SYSTEM_USER;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/users/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/version/main.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/version/main.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/version/main.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,106 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if ( !is_object($xoopsUser) || !is_object($xoopsModule) || !$xoopsUser->isAdmin($xoopsModule->getVar('mid')) || !isset($_GET['mid'])) {
+    exit("Access Denied");
+}
+
+if (intval($_GET['mid'])) {
+    $module_handler =& xoops_gethandler('module');
+    $versioninfo =& $module_handler->get(intval($_GET['mid']));
+} else {
+    $mid = str_replace('..', '', trim($_GET['mid']));
+    if (file_exists(XOOPS_ROOT_PATH.'/modules/'.$mid.'/xoops_version.php')) {
+        $module_handler =& xoops_gethandler('module');
+        $versioninfo =& $module_handler->create();
+        $versioninfo->loadInfo($mid);
+    }
+}
+if (!isset($versioninfo) || !is_object($versioninfo)) {
+    exit();
+}
+
+//$css = getCss($theme);
+echo "<html>\n<head>\n";
+echo "<meta http-equiv=\"Content-Type\" content=\"text/html; charset="._CHARSET."\"></meta>\n";
+echo "<title>".htmlspecialchars($xoopsConfig['sitename'])."</title>\n";
+
+?>
+<script type="text/javascript">
+<!--//
+scrollID=0;
+vPos=0;
+
+function onWard() {
+   vPos+=2;
+   window.scroll(0,vPos);
+   vPos%=1000;
+   scrollID=setTimeout("onWard()",30);
+   }
+function stop(){
+   clearTimeout(scrollID);
+}
+//-->
+</script>
+<?php
+/*
+if($css){
+    echo "<link rel=\"stylesheet\" href=\"".$css."\" type=\"text/css\">\n\n";
+}
+*/
+echo "</head>\n";
+echo "<body onLoad=\"if(window.scroll)onWard()\" onmouseover=\"stop()\" onmouseout=\"if(window.scroll)onWard()\">\n";
+echo "<div><table width=\"100%\"><tr><td align=\"center\"><br /><br /><br /><br /><br />";
+if ($modimage = $versioninfo->getInfo('image')) {
+    $modimage_path = '/modules/'.$versioninfo->getInfo('dirname').'/'.$modimage;
+    $modimage_realpath = str_replace("\\", "/", realpath(XOOPS_ROOT_PATH.$modimage_path));
+    if (0 === strpos($modimage_realpath, XOOPS_ROOT_PATH) && is_file($modimage_realpath)) {
+        echo "<img src='".XOOPS_URL.$modimage_path."' border='0' /><br />";
+    }
+}
+if ($modname = $versioninfo->getInfo('name')) {
+    echo "<big><b>".htmlspecialchars($modname)."</b></big>";
+}
+
+$modinfo = array('Version', 'Description', 'Author', 'Credits', 'License');
+foreach ($modinfo as $info) {
+    if ($info_output = $versioninfo->getInfo(strtolower($info))) {
+        echo "<br /><br /><u>$info</u><br />";
+        echo htmlspecialchars($info_output);
+    }
+}
+echo "<br /><br /><br /><br /><br />";
+echo "<br /><br /><br /><br /><br />";
+echo "<a href=\"javascript:window.close();\">Close</a>";
+echo "<br /><br /><br /><br /><br /><br />";
+echo "</td></tr></table></div>";
+echo "</body></html>";
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/version/main.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin/version/s_poweredby.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/version/s_poweredby.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/admin/version/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin/version/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin/version/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MD_AM_VRSN;
+$modversion['type'] = "";
+$modversion['version'] = "XOOPS RC4";
+$modversion['description'] = "XOOPS Version";
+$modversion['author'] = "";
+$modversion['credits'] = "The XOOPS Project";
+$modversion['help'] = "";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "s_poweredby.gif";
+
+$modversion['hasAdmin'] = 0;
+$modversion['adminpath'] = "";
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin/version/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/admin.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/admin.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/admin.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,155 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+if (isset($_POST['fct'])) {
+	$fct = trim($_POST['fct']);
+}
+if (isset($_GET['fct'])) {
+	$fct = trim($_GET['fct']);
+}
+if (isset($fct) && $fct == "users") {
+	$xoopsOption['pagetype'] = "user";
+}
+include "../../mainfile.php";
+include XOOPS_ROOT_PATH."/include/cp_functions.php";
+if ( file_exists(XOOPS_ROOT_PATH."/modules/system/language/".$xoopsConfig['language']."/admin.php") ) {
+	include XOOPS_ROOT_PATH."/modules/system/language/".$xoopsConfig['language']."/admin.php";
+} else {
+	include XOOPS_ROOT_PATH."/modules/system/language/english/admin.php";
+}
+include_once XOOPS_ROOT_PATH."/class/xoopsmodule.php";
+
+$admintest = 0;
+
+if (is_object($xoopsUser)) {
+	$xoopsModule =& XoopsModule::getByDirname("system");
+	if ( !$xoopsUser->isAdmin($xoopsModule->mid()) ) {
+		redirect_header(XOOPS_URL."/",3,_NOPERM);
+		exit();
+	}
+	$admintest=1;
+} else {
+	redirect_header(XOOPS_URL."/",3,_NOPERM);
+	exit();
+}
+
+// include system category definitions
+include_once XOOPS_ROOT_PATH."/modules/system/constants.php";
+$error = false;
+if ($admintest != 0) {
+	if (isset($fct) && $fct != '') {
+		if (file_exists(XOOPS_ROOT_PATH."/modules/system/admin/".$fct."/xoops_version.php")) {
+		
+			if (file_exists(XOOPS_ROOT_PATH."/modules/system/language/".$xoopsConfig['language']."/admin/".$fct.".php")) {
+				include XOOPS_ROOT_PATH."/modules/system/language/".$xoopsConfig['language']."/admin/".$fct.".php";
+			} elseif (file_exists(XOOPS_ROOT_PATH."/modules/system/language/english/admin/".$fct.".php")) {
+				include XOOPS_ROOT_PATH."/modules/system/language/english/admin/".$fct.".php";
+			}
+			include XOOPS_ROOT_PATH."/modules/system/admin/".$fct."/xoops_version.php";
+			$sysperm_handler =& xoops_gethandler('groupperm');
+			$category = !empty($modversion['category']) ? intval($modversion['category']) : 0;
+			unset($modversion);
+			if ($category > 0) {
+				$groups =& $xoopsUser->getGroups();
+				if (in_array(XOOPS_GROUP_ADMIN, $groups) || false != $sysperm_handler->checkRight('system_admin', $category, $groups, $xoopsModule->getVar('mid'))){
+					if (file_exists(XOOPS_ROOT_PATH."/modules/system/admin/".$fct."/main.php")) {
+						include_once XOOPS_ROOT_PATH."/modules/system/admin/".$fct."/main.php";
+					} else {
+						$error = true;
+					}
+				} else {
+					$error = true;
+				}
+			} elseif ($fct == 'version') {
+				if (file_exists(XOOPS_ROOT_PATH."/modules/system/admin/version/main.php")) {
+					include_once XOOPS_ROOT_PATH."/modules/system/admin/version/main.php";
+				} else {
+					$error = true;
+				}
+			} else {
+				$error = true;
+			}
+		} else {
+			$error = true;
+		}
+	} else {
+		$error = true;
+	}
+}
+
+if (false != $error) {
+	xoops_cp_header();
+	echo "<h4>System Configuration</h4>";
+	echo '<table class="outer" cellpadding="4" cellspacing="1">';
+	echo '<tr>';
+	$groups = $xoopsUser->getGroups();
+	$all_ok = false;
+	if (!in_array(XOOPS_GROUP_ADMIN, $groups)) {
+		$sysperm_handler =& xoops_gethandler('groupperm');
+		$ok_syscats =& $sysperm_handler->getItemIds('system_admin', $groups);
+	} else {
+		$all_ok = true;
+	}
+	$admin_dir = XOOPS_ROOT_PATH."/modules/system/admin";
+	$handle = opendir($admin_dir);
+	$counter = 0;
+	$class = 'even';
+	while ($file = readdir($handle)) {
+		if (strtolower($file) != 'cvs' && !preg_match("/[.]/", $file) && is_dir($admin_dir.'/'.$file)) {
+			include $admin_dir.'/'.$file.'/xoops_version.php';
+			if ($modversion['hasAdmin']) {
+				$category = isset($modversion['category']) ? intval($modversion['category']) : 0;
+				if (false != $all_ok || in_array($modversion['category'], $ok_syscats)) {
+					echo "<td class='$class' align='center' valign='bottom' width='19%'>";
+					echo "<a href='".XOOPS_URL."/modules/system/admin.php?fct=".$file."'><b>" .trim($modversion['name'])."</b></a>\n";
+					echo "</td>";
+					$counter++;
+					$class = ($class == 'even') ? 'odd' : 'even';
+				}
+				if ( $counter > 4 ) {
+					$counter = 0;
+					echo "</tr>";
+					echo "<tr>";
+				}
+			}
+			unset($modversion);
+		}
+	}
+	while ($counter < 5) {
+		echo '<td class="'.$class.'">&nbsp;</td>';
+		$class = ($class == 'even') ? 'odd' : 'even';
+		$counter++;
+	}
+	echo '</tr></table>';
+    xoops_cp_footer();
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/admin.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/blocks/system_blocks.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/blocks/system_blocks.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/blocks/system_blocks.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,523 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+function b_system_online_show()
+{
+    global $xoopsUser, $xoopsModule;
+    $online_handler =& xoops_gethandler('online');
+    mt_srand((double)microtime()*1000000);
+    // set gc probabillity to 10% for now..
+    if (mt_rand(1, 100) < 11) {
+        $online_handler->gc(300);
+    }
+    if (is_object($xoopsUser)) {
+        $uid = $xoopsUser->getVar('uid');
+        $uname = $xoopsUser->getVar('uname');
+    } else {
+        $uid = 0;
+        $uname = '';
+    }
+    if (is_object($xoopsModule)) {
+        $online_handler->write($uid, $uname, time(), $xoopsModule->getVar('mid'), $_SERVER['REMOTE_ADDR']);
+    } else {
+        $online_handler->write($uid, $uname, time(), 0, $_SERVER['REMOTE_ADDR']);
+    }
+    $onlines =& $online_handler->getAll();
+    if (false != $onlines) {
+        $total = count($onlines);
+        $block = array();
+        $guests = 0;
+        $members = '';
+        for ($i = 0; $i < $total; $i++) {
+            if ($onlines[$i]['online_uid'] > 0) {
+                $members .= ' <a href="'.XOOPS_URL.'/userinfo.php?uid='.$onlines[$i]['online_uid'].'">'.$onlines[$i]['online_uname'].'</a>,';
+            } else {
+                $guests++;
+            }
+        }
+        $block['online_total'] = sprintf(_ONLINEPHRASE, $total);
+        if (is_object($xoopsModule)) {
+            $mytotal = $online_handler->getCount(new Criteria('online_module', $xoopsModule->getVar('mid')));
+            $block['online_total'] .= ' ('.sprintf(_ONLINEPHRASEX, $mytotal, $xoopsModule->getVar('name')).')';
+        }
+        $block['lang_members'] = _MEMBERS;
+        $block['lang_guests'] = _GUESTS;
+        $block['online_names'] = $members;
+        $block['online_members'] = $total - $guests;
+        $block['online_guests'] = $guests;
+        $block['lang_more'] = _MORE;
+        return $block;
+    } else {
+        return false;
+    }
+}
+
+function b_system_login_show()
+{
+    global $xoopsUser, $xoopsConfig;
+    if (!$xoopsUser) {
+        $block = array();
+        $block['lang_username'] = _USERNAME;
+        $block['unamevalue'] = "";
+        if (isset($_COOKIE[$xoopsConfig['usercookie']])) {
+            $block['unamevalue'] = $_COOKIE[$xoopsConfig['usercookie']];
+        }
+        $block['lang_password'] = _PASSWORD;
+        $block['lang_login'] = _LOGIN;
+        $block['lang_lostpass'] = _MB_SYSTEM_LPASS;
+        $block['lang_registernow'] = _MB_SYSTEM_RNOW;
+        //$block['lang_rememberme'] = _MB_SYSTEM_REMEMBERME;
+        if ($xoopsConfig['use_ssl'] == 1 && $xoopsConfig['sslloginlink'] != '') {
+            $block['sslloginlink'] = "<a href=\"javascript:openWithSelfMain('".$xoopsConfig['sslloginlink']."', 'ssllogin', 300, 200);\">"._MB_SYSTEM_SECURE."</a>";
+        }
+        return $block;
+    }
+    return false;
+}
+
+function b_system_main_show()
+{
+    global $xoopsUser,$xoopsModule;
+    $block = array();
+    $block['lang_home'] = _MB_SYSTEM_HOME;
+    $block['lang_close'] = _CLOSE;
+    $module_handler =& xoops_gethandler('module');
+    $criteria = new CriteriaCompo(new Criteria('hasmain', 1));
+    $criteria->add(new Criteria('isactive', 1));
+    $criteria->add(new Criteria('weight', 0, '>'));
+    $modules =& $module_handler->getObjects($criteria, true);
+    $moduleperm_handler =& xoops_gethandler('groupperm');
+    $groups = is_object($xoopsUser) ? $xoopsUser->getGroups() : XOOPS_GROUP_ANONYMOUS;
+    $read_allowed =& $moduleperm_handler->getItemIds('module_read', $groups);
+    foreach (array_keys($modules) as $i) {
+        if (in_array($i, $read_allowed)) {
+            $block['modules'][$i]['name'] = $modules[$i]->getVar('name');
+            $block['modules'][$i]['directory'] = $modules[$i]->getVar('dirname');
+            $sublinks =& $modules[$i]->subLink();
+            if ((count($sublinks) > 0) && (!empty($xoopsModule)) && ($i == $xoopsModule->getVar('mid'))) {
+                foreach($sublinks as $sublink){
+                    $block['modules'][$i]['sublinks'][] = array('name' => $sublink['name'], 'url' => XOOPS_URL.'/modules/'.$modules[$i]->getVar('dirname').'/'.$sublink['url']);
+                }
+            } else {
+                $block['modules'][$i]['sublinks'] = array();
+            }
+        }
+    }
+    return $block;
+}
+
+function b_system_search_show()
+{
+    $block = array();
+    $block['lang_search'] = _MB_SYSTEM_SEARCH;
+    $block['lang_advsearch'] = _MB_SYSTEM_ADVS;
+    return $block;
+}
+
+function b_system_user_show()
+{
+    global $xoopsUser;
+    if (is_object($xoopsUser)) {
+        $pm_handler =& xoops_gethandler('privmessage');
+        $block = array();
+        $block['lang_youraccount'] = _MB_SYSTEM_VACNT;
+        $block['lang_editaccount'] = _MB_SYSTEM_EACNT;
+        $block['lang_notifications'] = _MB_SYSTEM_NOTIF;
+        $block['uid'] = $xoopsUser->getVar('uid');
+        $block['lang_logout'] = _MB_SYSTEM_LOUT;
+        $criteria = new CriteriaCompo(new Criteria('read_msg', 0));
+        $criteria->add(new Criteria('to_userid', $xoopsUser->getVar('uid')));
+        $block['new_messages'] = $pm_handler->getCount($criteria);
+        $block['lang_inbox'] = _MB_SYSTEM_INBOX;
+        $block['lang_adminmenu'] = _MB_SYSTEM_ADMENU;
+        return $block;
+    }
+    return false;
+}
+
+// this block is deprecated
+function b_system_waiting_show()
+{
+    global $xoopsUser;
+    $xoopsDB =& Database::getInstance();
+    $module_handler =& xoops_gethandler('module');
+    $block = array();
+    if ($module_handler->getCount(new Criteria('dirname', 'news'))) {
+        $result = $xoopsDB->query("SELECT COUNT(*) FROM ".$xoopsDB->prefix("stories")." WHERE published=0");
+        if ( $result ) {
+            $block['modules'][0]['adminlink'] = XOOPS_URL."/modules/news/admin/index.php?op=newarticle";
+            list($block['modules'][0]['pendingnum']) = $xoopsDB->fetchRow($result);
+            $block['modules'][0]['lang_linkname'] = _MB_SYSTEM_SUBMS;
+        }
+    }
+    if ($module_handler->getCount(new Criteria('dirname', 'mylinks'))) {
+        $result = $xoopsDB->query("SELECT COUNT(*) FROM ".$xoopsDB->prefix("mylinks_links")." WHERE status=0");
+        if ( $result ) {
+            $block['modules'][1]['adminlink'] = XOOPS_URL."/modules/mylinks/admin/index.php?op=listNewLinks";
+            list($block['modules'][1]['pendingnum']) = $xoopsDB->fetchRow($result);
+            $block['modules'][1]['lang_linkname'] = _MB_SYSTEM_WLNKS;
+        }
+        $result = $xoopsDB->query("SELECT COUNT(*) FROM ".$xoopsDB->prefix("mylinks_broken"));
+        if ( $result ) {
+            $block['modules'][2]['adminlink'] = XOOPS_URL."/modules/mylinks/admin/index.php?op=listBrokenLinks";
+            list($block['modules'][2]['pendingnum']) = $xoopsDB->fetchRow($result);
+            $block['modules'][2]['lang_linkname'] = _MB_SYSTEM_BLNK;
+        }
+        $result = $xoopsDB->query("SELECT COUNT(*) FROM ".$xoopsDB->prefix("mylinks_mod"));
+        if ( $result ) {
+            $block['modules'][3]['adminlink'] = XOOPS_URL."/modules/mylinks/admin/index.php?op=listModReq";
+            list($block['modules'][3]['pendingnum']) = $xoopsDB->fetchRow($result);
+            $block['modules'][3]['lang_linkname'] = _MB_SYSTEM_MLNKS;
+        }
+    }
+    if ($module_handler->getCount(new Criteria('dirname', 'mydownloads'))) {
+        $result = $xoopsDB->query("SELECT COUNT(*) FROM ".$xoopsDB->prefix("mydownloads_downloads")." WHERE status=0");
+        if ( $result ) {
+            $block['modules'][4]['adminlink'] = XOOPS_URL."/modules/mydownloads/admin/index.php?op=listNewDownloads";
+            list($block['modules'][4]['pendingnum']) = $xoopsDB->fetchRow($result);
+            $block['modules'][4]['lang_linkname'] = _MB_SYSTEM_WDLS;
+        }
+        $result = $xoopsDB->query("SELECT COUNT(*) FROM ".$xoopsDB->prefix("mydownloads_broken")."");
+        if ( $result ) {
+            $block['modules'][5]['adminlink'] = XOOPS_URL."/modules/mydownloads/admin/index.php?op=listBrokenDownloads";
+            list($block['modules'][5]['pendingnum']) = $xoopsDB->fetchRow($result);
+            $block['modules'][5]['lang_linkname'] = _MB_SYSTEM_BFLS;
+        }
+        $result = $xoopsDB->query("SELECT COUNT(*) FROM ".$xoopsDB->prefix("mydownloads_mod")."");
+        if ( $result ) {
+            $block['modules'][6]['adminlink'] = XOOPS_URL."/modules/mydownloads/admin/index.php?op=listModReq";
+            list($block['modules'][6]['pendingnum']) = $xoopsDB->fetchRow($result);
+            $block['modules'][6]['lang_linkname'] = _MB_SYSTEM_MFLS;
+        }
+    }
+        $result = $xoopsDB->query("SELECT COUNT(*) FROM ".$xoopsDB->prefix("xoopscomments")." WHERE com_status=1");
+        if ( $result ) {
+            $block['modules'][7]['adminlink'] = XOOPS_URL."/modules/system/admin.php?module=0&amp;status=1&amp;fct=comments";
+            list($block['modules'][7]['pendingnum']) = $xoopsDB->fetchRow($result);
+            $block['modules'][7]['lang_linkname'] =_MB_SYSTEM_COMPEND;
+        }
+    return $block;
+}
+
+function b_system_info_show($options)
+{
+    global $xoopsConfig, $xoopsUser;
+    $xoopsDB =& Database::getInstance();
+    $myts =& MyTextSanitizer::getInstance();
+    $block = array();
+    if (!empty($options[3])) {
+        $block['showgroups'] = true;
+        $result = $xoopsDB->query("SELECT u.uid, u.uname, u.email, u.user_viewemail, u.user_avatar, g.name AS groupname FROM ".$xoopsDB->prefix("groups_users_link")." l LEFT JOIN ".$xoopsDB->prefix("users")." u ON l.uid=u.uid LEFT JOIN ".$xoopsDB->prefix("groups")." g ON l.groupid=g.groupid WHERE g.group_type='Admin' ORDER BY l.groupid, u.uid");
+        if ($xoopsDB->getRowsNum($result) > 0) {
+            $prev_caption = "";
+            $i = 0;
+            while  ($userinfo = $xoopsDB->fetchArray($result)) {
+                if ($prev_caption != $userinfo['groupname']) {
+                    $prev_caption = $userinfo['groupname'];
+                    $block['groups'][$i]['name'] = $myts->htmlSpecialChars($userinfo['groupname']);
+                }
+                if ($xoopsUser != '') {
+                    $block['groups'][$i]['users'][] = array('id' => $userinfo['uid'], 'name' => $myts->htmlspecialchars($userinfo['uname']), 'msglink' => "<a href=\"javascript:openWithSelfMain('".XOOPS_URL."/pmlite.php?send2=1&amp;to_userid=".$userinfo['uid']."','pmlite',450,370);\"><img src=\"".XOOPS_URL."/images/icons/pm_small.gif\" border=\"0\" width=\"27\" height=\"17\" alt=\"\" /></a>", 'avatar' => XOOPS_UPLOAD_URL.'/'.$userinfo['user_avatar']);
+                } else {
+                    if ($userinfo['user_viewemail']) {
+                        $block['groups'][$i]['users'][] = array('id' => $userinfo['uid'], 'name' => $myts->htmlspecialchars($userinfo['uname']), 'msglink' => '<a href="mailto:'.$userinfo['email'].'"><img src="'.XOOPS_URL.'/images/icons/em_small.gif" border="0" width="16" height="14" alt="" /></a>', 'avatar' => XOOPS_UPLOAD_URL.'/'.$userinfo['user_avatar']);
+                    } else {
+                        $block['groups'][$i]['users'][] = array('id' => $userinfo['uid'], 'name' => $myts->htmlspecialchars($userinfo['uname']), 'msglink' => '&nbsp;', 'avatar' => XOOPS_UPLOAD_URL.'/'.$userinfo['user_avatar']);
+                    }
+                }
+                $i++;
+            }
+        }
+    } else {
+        $block['showgroups'] = false;
+    }
+    $block['logourl'] = XOOPS_URL.'/images/'.$options[2];
+    $block['recommendlink'] = "<a href=\"javascript:openWithSelfMain('".XOOPS_URL."/misc.php?action=showpopups&amp;type=friend&amp;op=sendform&amp;t=".time()."','friend',".$options[0].",".$options[1].")\">"._MB_SYSTEM_RECO."</a>";
+    return $block;
+}
+
+function b_system_newmembers_show($options)
+{
+    $block = array();
+    $criteria = new CriteriaCompo(new Criteria('level', 0, '>'));
+    $limit = (!empty($options[0])) ? $options[0] : 10;
+    $criteria->setOrder('DESC');
+    $criteria->setSort('user_regdate');
+    $criteria->setLimit($limit);
+    $member_handler =& xoops_gethandler('member');
+    $newmembers =& $member_handler->getUsers($criteria);
+    $count = count($newmembers);
+    for ($i = 0; $i < $count; $i++) {
+        if ( $options[1] == 1 ) {
+            $block['users'][$i]['avatar'] = $newmembers[$i]->getVar('user_avatar') != 'blank.gif' ? XOOPS_UPLOAD_URL.'/'.$newmembers[$i]->getVar('user_avatar') : '';
+        } else {
+            $block['users'][$i]['avatar'] = '';
+        }
+        $block['users'][$i]['id'] = $newmembers[$i]->getVar('uid');
+        $block['users'][$i]['name'] = $newmembers[$i]->getVar('uname');
+        $block['users'][$i]['joindate'] = formatTimestamp($newmembers[$i]->getVar('user_regdate'), 's');
+    }
+    return $block;
+}
+
+function b_system_topposters_show($options)
+{
+    $block = array();
+    $criteria = new CriteriaCompo(new Criteria('level', 0, '>'));
+    $limit = (!empty($options[0])) ? $options[0] : 10;
+    $size = count($options);
+    for ( $i = 2; $i < $size; $i++) {
+        $criteria->add(new Criteria('rank', $options[$i], '<>'));
+    }
+    $criteria->setOrder('DESC');
+    $criteria->setSort('posts');
+    $criteria->setLimit($limit);
+    $member_handler =& xoops_gethandler('member');
+    $topposters =& $member_handler->getUsers($criteria);
+    $count = count($topposters);
+    for ($i = 0; $i < $count; $i++) {
+        $block['users'][$i]['rank'] = $i+1;
+        if ( $options[1] == 1 ) {
+            $block['users'][$i]['avatar'] = $topposters[$i]->getVar('user_avatar') != 'blank.gif' ? XOOPS_UPLOAD_URL.'/'.$topposters[$i]->getVar('user_avatar') : '';
+        } else {
+            $block['users'][$i]['avatar'] = '';
+        }
+        $block['users'][$i]['id'] = $topposters[$i]->getVar('uid');
+        $block['users'][$i]['name'] = $topposters[$i]->getVar('uname');
+        $block['users'][$i]['posts'] = $topposters[$i]->getVar('posts');
+    }
+    return $block;
+}
+
+
+function b_system_comments_show($options)
+{
+    $block = array();
+    include_once XOOPS_ROOT_PATH.'/include/comment_constants.php';
+    $comment_handler =& xoops_gethandler('comment');
+    $criteria = new CriteriaCompo(new Criteria('com_status', XOOPS_COMMENT_ACTIVE));
+    $criteria->setLimit(intval($options[0]));
+    $criteria->setSort('com_created');
+    $criteria->setOrder('DESC');
+    $comments =& $comment_handler->getObjects($criteria, true);
+    $member_handler =& xoops_gethandler('member');
+    $module_handler =& xoops_gethandler('module');
+    $modules =& $module_handler->getObjects(new Criteria('hascomments', 1), true);
+    $comment_config = array();
+    foreach (array_keys($comments) as $i) {
+        $mid = $comments[$i]->getVar('com_modid');
+        $com['module'] = '<a href="'.XOOPS_URL.'/modules/'.$modules[$mid]->getVar('dirname').'/">'.$modules[$mid]->getVar('name').'</a>';
+        if (!isset($comment_config[$mid])) {
+            $comment_config[$mid] = $modules[$mid]->getInfo('comments');
+        }
+        $com['id'] = $i;
+        $com['title'] = '<a href="'.XOOPS_URL.'/modules/'.$modules[$mid]->getVar('dirname').'/'.$comment_config[$mid]['pageName'].'?'.$comment_config[$mid]['itemName'].'='.$comments[$i]->getVar('com_itemid').'&amp;com_id='.$i.'&amp;com_rootid='.$comments[$i]->getVar('com_rootid').'&amp;'.$comments[$i]->getVar('com_exparams').'#comment'.$i.'">'.$comments[$i]->getVar('com_title').'</a>';
+        $com['icon'] = htmlspecialchars( $comments[$i]->getVar('com_icon'), ENT_QUOTES );
+        $com['icon'] = ($com['icon'] != '') ? $com['icon'] : 'icon1.gif';
+        $com['time'] = formatTimestamp($comments[$i]->getVar('com_created'),'m');
+        if ($comments[$i]->getVar('com_uid') > 0) {
+            $poster =& $member_handler->getUser($comments[$i]->getVar('com_uid'));
+            if (is_object($poster)) {
+                $com['poster'] = '<a href="'.XOOPS_URL.'/userinfo.php?uid='.$comments[$i]->getVar('com_uid').'">'.$poster->getVar('uname').'</a>';
+            } else {
+                $com['poster'] = $GLOBALS['xoopsConfig']['anonymous'];
+            }
+        } else {
+            $com['poster'] = $GLOBALS['xoopsConfig']['anonymous'];
+        }
+        $block['comments'][] =& $com;
+        unset($com);
+    }
+    return $block;
+}
+
+// RMV-NOTIFY
+function b_system_notification_show()
+{
+    global $xoopsConfig, $xoopsUser, $xoopsModule;
+    include_once XOOPS_ROOT_PATH . '/include/notification_functions.php';
+    include_once XOOPS_ROOT_PATH . '/language/' . $xoopsConfig['language'] . '/notification.php';
+    // Notification must be enabled, and user must be logged in
+    if (empty($xoopsUser) || !notificationEnabled('block')) {
+        return false; // do not display block
+    }
+    $notification_handler =& xoops_gethandler('notification');
+    // Now build the a nested associative array of info to pass
+    // to the block template.
+    $block = array();
+    $categories =& notificationSubscribableCategoryInfo();
+    if (empty($categories)) {
+        return false;
+    }
+    foreach ($categories as $category) {
+        $section['name'] = $category['name'];
+        $section['title'] = $category['title'];
+        $section['description'] = $category['description'];
+        $section['itemid'] = $category['item_id'];
+        $section['events'] = array();
+        $subscribed_events =& $notification_handler->getSubscribedEvents ($category['name'], $category['item_id'], $xoopsModule->getVar('mid'), $xoopsUser->getVar('uid'));
+        foreach (notificationEvents($category['name'], true) as $event) {
+            if (!empty($event['admin_only']) && !$xoopsUser->isAdmin($xoopsModule->getVar('mid'))) {
+                continue;
+            }
+            $subscribed = in_array($event['name'], $subscribed_events) ? 1 : 0;
+            $section['events'][$event['name']] = array ('name'=>$event['name'], 'title'=>$event['title'], 'caption'=>$event['caption'], 'description'=>$event['description'], 'subscribed'=>$subscribed);
+        }
+        $block['categories'][$category['name']] = $section;
+    }
+    // Additional form data
+    $block['target_page'] = "notification_update.php";
+    // FIXME: better or more standardized way to do this?
+    $script_url = explode('/', $_SERVER['PHP_SELF']);
+    $script_name = $script_url[count($script_url)-1];
+    $block['redirect_script'] = $script_name;
+    $block['submit_button'] = _NOT_UPDATENOW;
+    $block['notification_token'] = $GLOBALS['xoopsSecurity']->createToken();
+    return $block;
+}
+
+function b_system_comments_edit($options)
+{
+    $inputtag = "<input type='text' name='options[]' value='".intval($options[0])."' />";
+    $form = sprintf(_MB_SYSTEM_DISPLAYC, $inputtag);
+    return $form;
+}
+
+function b_system_topposters_edit($options)
+{
+    include_once XOOPS_ROOT_PATH.'/class/xoopslists.php';
+    $inputtag = "<input type='text' name='options[]' value='".intval($options[0])."' />";
+    $form = sprintf(_MB_SYSTEM_DISPLAY,$inputtag);
+    $form .= "<br />"._MB_SYSTEM_DISPLAYA."&nbsp;<input type='radio' id='options[]' name='options[]' value='1'";
+    if ( $options[1] == 1 ) {
+        $form .= " checked='checked'";
+    }
+    $form .= " />&nbsp;"._YES."<input type='radio' id='options[]' name='options[]' value='0'";
+    if ( $options[1] == 0 ) {
+        $form .= " checked='checked'";
+    }
+    $form .= " />&nbsp;"._NO."";
+    $form .= "<br />"._MB_SYSTEM_NODISPGR."<br /><select id='options[]' name='options[]' multiple='multiple'>";
+    $ranks =& XoopsLists::getUserRankList();
+    $size = count($options);
+    foreach ($ranks as $k => $v) {
+        $sel = "";
+        for ( $i = 2; $i < $size; $i++ ) {
+            if ($k == $options[$i]) {
+                $sel = " selected='selected'";
+            }
+        }
+        $form .= "<option value='$k'$sel>$v</option>";
+    }
+    $form .= "</select>";
+    return $form;
+}
+
+function b_system_newmembers_edit($options)
+{
+    $inputtag = "<input type='text' name='options[]' value='".$options[0]."' />";
+    $form = sprintf(_MB_SYSTEM_DISPLAY,$inputtag);
+    $form .= "<br />"._MB_SYSTEM_DISPLAYA."&nbsp;<input type='radio' id='options[]' name='options[]' value='1'";
+    if ( $options[1] == 1 ) {
+        $form .= " checked='checked'";
+    }
+    $form .= " />&nbsp;"._YES."<input type='radio' id='options[]' name='options[]' value='0'";
+    if ( $options[1] == 0 ) {
+        $form .= " checked='checked'";
+    }
+    $form .= " />&nbsp;"._NO."";
+    return $form;
+}
+
+function b_system_info_edit($options)
+{
+    $form = _MB_SYSTEM_PWWIDTH."&nbsp;";
+    $form .= "<input type='text' name='options[]' value='".$options[0]."' />";
+    $form .= "<br />"._MB_SYSTEM_PWHEIGHT."&nbsp;";
+    $form .= "<input type='text' name='options[]' value='".$options[1]."' />";
+    $form .= "<br />".sprintf(_MB_SYSTEM_LOGO,XOOPS_URL."/images/")."&nbsp;";
+    $form .= "<input type='text' name='options[]' value='".$options[2]."' />";
+    $chk = "";
+    $form .= "<br />"._MB_SYSTEM_SADMIN."&nbsp;";
+    if ( $options[3] == 1 ) {
+        $chk = " checked='checked'";
+    }
+    $form .= "<input type='radio' name='options[3]' value='1'".$chk." />&nbsp;"._YES."";
+    $chk = "";
+    if ( $options[3] == 0 ) {
+        $chk = " checked=\"checked\"";
+    }
+    $form .= "&nbsp;<input type='radio' name='options[3]' value='0'".$chk." />"._NO."";
+    return $form;
+}
+
+function b_system_themes_show($options)
+{
+    global $xoopsConfig;
+    $theme_options = '';
+    foreach ($xoopsConfig['theme_set_allowed'] as $theme) {
+        $theme_options .= '<option value="'.$theme.'"';
+        if ($theme == $xoopsConfig['theme_set']) {
+            $theme_options .= ' selected="selected"';
+        }
+        $theme_options .= '>'.$theme.'</option>';
+    }
+    $block = array();
+    if ($options[0] == 1) {
+        $block['theme_select'] = "<img vspace=\"2\" id=\"xoops_theme_img\" src=\"".XOOPS_THEME_URL."/".$xoopsConfig['theme_set']."/shot.gif\" alt=\"screenshot\" width=\"".intval($options[1])."\" /><br /><select id=\"xoops_theme_select\" name=\"xoops_theme_select\" onchange=\"showImgSelected('xoops_theme_img', 'xoops_theme_select', 'themes', '/shot.gif', '".XOOPS_URL."');\">".$theme_options."</select><input type=\"submit\" value=\""._GO."\" />";
+    } else {
+        $block['theme_select'] = '<select name="xoops_theme_select" onchange="submit();" size="3">'.$theme_options.'</select>';
+    }
+
+    $block['theme_select'] .= '<br />('.sprintf(_MB_SYSTEM_NUMTHEME, '<b>'.count($xoopsConfig['theme_set_allowed']).'</b>').')<br />';
+    return $block;
+}
+
+function b_system_themes_edit($options)
+{
+
+    $chk = "";
+    $form = _MB_SYSTEM_THSHOW."&nbsp;";
+    if ( $options[0] == 1 ) {
+        $chk = " checked='checked'";
+    }
+    $form .= "<input type='radio' name='options[0]' value='1'".$chk." />&nbsp;"._YES;
+    $chk = "";
+    if ( $options[0] == 0 ) {
+        $chk = ' checked="checked"';
+    }
+    $form .= '&nbsp;<input type="radio" name="options[0]" value="0"'.$chk.' />'._NO;
+    $form .= '<br />'._MB_SYSTEM_THWIDTH.'&nbsp;';
+    $form .= "<input type='text' name='options[1]' value='".$options[1]."' />";
+    return $form;
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/blocks/system_blocks.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/constants.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/constants.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/constants.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,43 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+define('XOOPS_SYSTEM_GROUP', 1);
+define('XOOPS_SYSTEM_USER', 2);
+define('XOOPS_SYSTEM_PREF', 3);
+define('XOOPS_SYSTEM_MODULE', 4);
+define('XOOPS_SYSTEM_BLOCK', 5);
+//define('XOOPS_SYSTEM_THEME', 6);
+define('XOOPS_SYSTEM_FINDU', 7);
+define('XOOPS_SYSTEM_MAILU', 8);
+define('XOOPS_SYSTEM_IMAGE', 9);
+define('XOOPS_SYSTEM_AVATAR', 10);
+define('XOOPS_SYSTEM_URANK', 11);
+define('XOOPS_SYSTEM_SMILE', 12);
+define('XOOPS_SYSTEM_BANNER', 13);
+define('XOOPS_SYSTEM_COMMENT', 14);
+define('XOOPS_SYSTEM_TPLSET', 15);
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/constants.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/images/bg_content.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/bg_content.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/bg_menu.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/bg_menu.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/check.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/check.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/hbar_left.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/hbar_left.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/hbar_middle.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/hbar_middle.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/hbar_right.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/hbar_right.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/info.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/info.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/install.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/install.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/logo.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/logo.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/menu.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/menu.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/powered_by_xoops.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/powered_by_xoops.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/system_slogo.png
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/system_slogo.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: XoopsCore/trunk/htdocs/modules/system/images/uninstall.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/uninstall.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/update.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/update.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/images/xoops2.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/modules/system/images/xoops2.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/modules/system/include/update.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/include/update.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/include/update.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,54 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+function xoops_module_system_update(&$module) {
+    if ($module->getVar('version') == 100) {
+        $result = $xoopsDB->query("SELECT t1.tpl_id FROM ".$xoopsDB->prefix('tplfile')." t1, ".$xoopsDB->prefix('tplfile')." t2 WHERE t1.tpl_module = t2.tpl_module AND t1.tpl_tplset=t2.tpl_tplset AND t1.tpl_file = t2.tpl_file AND t1.tpl_id > t2.tpl_id");
+
+        $tplids = array();
+        while (list($tplid) = $xoopsDB->fetchRow($result)) {
+            $tplids[] = $tplid;
+        }
+        if (count($tplids) > 0) {
+            $tplfile_handler =& xoops_gethandler('tplfile');
+            $duplicate_files = $tplfile_handler->getObjects(new Criteria('tpl_id', "(".implode(',', $tplids).")", "IN"));
+
+            if (count($duplicate_files) > 0) {
+                foreach (array_keys($duplicate_files) as $i) {
+                    $tplfile_handler->delete($duplicate_files[$i]);
+                }
+            }
+        }
+    }
+    return true;
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/include/update.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/avatars.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/avatars.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/avatars.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,12 @@
+<?php
+// $Id
+//%%%%%% Avatar Manager %%%%%
+define('_MD_AVATARMAN','Avatar Manager');
+
+define('_MD_SYSAVATARS','System Avatars');
+define('_MD_CSTAVATARS','Custom Avatars');
+define('_MD_ADDAVT','Add Avatar');
+define('_MD_USERS','Users using this avatar');
+define('_MD_RUDELIMG','Are you sure that you want to delete this avatar image?');
+define('_MD_FAILDEL', 'Failed deleting avatar %s from the database');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/avatars.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/banners.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/banners.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/banners.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,58 @@
+<?php
+// $Id$
+//%%%%%%        Admin Module Name  Banners         %%%%%
+define("_AM_DBUPDATED",_MD_AM_DBUPDATED);
+
+define("_AM_CURACTBNR","Current Active Banners");
+define("_AM_BANNERID","Banner ID");
+define("_AM_IMPRESION","Impressions");
+define("_AM_IMPLEFT","Imp. Left");
+define("_AM_CLICKS","Clicks");
+define("_AM_NCLICKS","% Clicks");
+define("_AM_CLINAME","Client Name");
+define("_AM_FUNCTION","Functions");
+define("_AM_UNLIMIT","Unlimited");
+define("_AM_EDIT","Edit");
+define("_AM_DELETE","Delete");
+define("_AM_FINISHBNR","Finished Banners");
+define("_AM_IMPD","Imp.");
+define("_AM_STARTDATE","Date Started");
+define("_AM_ENDDATE","Date Ended");
+define("_AM_ADVCLI","Advertising Clients");
+define("_AM_ACTIVEBNR","Active Banners");
+define("_AM_CONTNAME","Contact Name");
+define("_AM_CONTMAIL","Contact Email");
+define("_AM_CLINAMET","Client Name:");
+define("_AM_ADDNWBNR","Add a New Banner");
+define("_AM_IMPPURCHT","Impressions Purchased:");
+define("_AM_IMGURLT","Image URL:");
+define("_AM_CLICKURLT","Click URL:");
+define("_AM_ADDBNR","Add Banner");
+define("_AM_ADDNWCLI","Add a New Client");
+define("_AM_CONTNAMET","Contact Name:");
+define("_AM_CONTMAILT","Contact Email:");
+define("_AM_CLILOGINT","Client Login:");
+define("_AM_CLIPASST","Client Password:");
+define("_AM_ADDCLI","Add Client");
+define("_AM_DELEBNR","Delete Banner");
+define("_AM_SUREDELE","Are you sure you want to delete this Banner?");
+define("_AM_NO","No");
+define("_AM_YES","Yes");
+define("_AM_EDITBNR","Edit Banner");
+define("_AM_ADDIMPT","Add More Impressions:");
+define("_AM_PURCHT","Purchased:");
+define("_AM_MADET","Made:");
+define("_AM_CHGBNR","Change Banner");
+define("_AM_DELEADC","Delete Advertising Client");
+define("_AM_SUREDELCLI","You are about to delete client <b>%s</b> and all its Banners!!!");
+define("_AM_NOBNRRUN","This client doesn't have any banner running now.");
+define("_AM_WARNING","WARNING!!!");
+define("_AM_ACTBNRRUN","This client has the following ACTIVE BANNERS running on our site:");
+define("_AM_SUREDELBNR","Are you sure you want to delete this Client and ALL its Banners?");
+define("_AM_EDITADVCLI","Edit Advertising Client");
+define("_AM_EXTINFO","Extra Info:");
+define("_AM_CHGCLI","Change Client");
+define("_AM_USEHTML","Use Html?");
+define("_AM_CODEHTML","Code Html:");
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/banners.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/blocksadmin.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/blocksadmin.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/blocksadmin.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,67 @@
+<?php
+// $Id$
+//%%%%%%	Admin Module Name  Blocks 	%%%%%
+define("_AM_DBUPDATED",_MD_AM_DBUPDATED);
+
+//%%%%%%	blocks.php 	%%%%%
+define("_AM_BADMIN","Blocks Administration");
+define("_AM_ADDBLOCK","Add a new block");
+define("_AM_LISTBLOCK","List all blocks");
+define("_AM_SIDE","Side");
+define("_AM_BLKDESC","Block Description");
+define("_AM_TITLE","Title");
+define("_AM_WEIGHT","Weight");
+define("_AM_ACTION","Action");
+define("_AM_BLKTYPE","Block Type");
+define("_AM_LEFT","Left");
+define("_AM_RIGHT","Right");
+define("_AM_CENTER","Center");
+define("_AM_VISIBLE","Visible");
+define("_AM_POSCONTT","Position of the additional content");
+define("_AM_ABOVEORG","Above the original content");
+define("_AM_AFTERORG","After the original content");
+define("_AM_EDIT","Edit");
+define("_AM_DELETE","Delete");
+define("_AM_SBLEFT","Side Block - Left");
+define("_AM_SBRIGHT","Side Block - Right");
+define("_AM_CBLEFT","Center Block - Left");
+define("_AM_CBRIGHT","Center Block - Right");
+define("_AM_CBCENTER","Center Block - Center");
+define("_AM_CONTENT","Content");
+define("_AM_OPTIONS","Options");
+define("_AM_CTYPE","Content Type");
+define("_AM_HTML","HTML");
+define("_AM_PHP","PHP Script");
+define("_AM_AFWSMILE","Auto Format (smilies enabled)");
+define("_AM_AFNOSMILE","Auto Format (smilies disabled)");
+define("_AM_SUBMIT","Submit");
+define("_AM_CUSTOMHTML","Custom Block (HTML)");
+define("_AM_CUSTOMPHP","Custom Block (PHP)");
+define("_AM_CUSTOMSMILE","Custom Block (Auto Format + smilies)");
+define("_AM_CUSTOMNOSMILE","Custom Block (Auto Format)");
+define("_AM_DISPRIGHT","Display only rightblocks");
+define("_AM_SAVECHANGES","Save Changes");
+define("_AM_EDITBLOCK","Edit a block");
+define("_AM_SYSTEMCANT","System blocks cannot be deleted!");
+define("_AM_MODULECANT","This block cannot be deleted directly! If you wish to disable this block, deactivate the module.");
+define("_AM_RUSUREDEL","Are you sure you want to delete block <b>%s</b>?");
+define("_AM_NAME","Name");
+define("_AM_USEFULTAGS","Useful Tags:");
+define("_AM_BLOCKTAG1","%s will print %s");
+define('_AM_SVISIBLEIN', 'Show blocks visible in %s');
+define('_AM_TOPPAGE', 'Top Page');
+define('_AM_VISIBLEIN', 'Visible in');
+define('_AM_ALLPAGES', 'All Pages');
+define('_AM_TOPONLY', 'Top Page Only');
+define('_AM_ADVANCED', 'Advanced Settings');
+define('_AM_BCACHETIME', 'Cache lifetime');
+define('_AM_BALIAS', 'Alias name');
+define('_AM_CLONE', 'Clone');  // clone a block
+define('_AM_CLONEBLK', 'Clone'); // cloned block
+define('_AM_CLONEBLOCK', 'Create a clone block');
+define('_AM_NOTSELNG', "'%s' is not selected!"); // error message
+define('_AM_EDITTPL', 'Edit Template');
+define('_AM_MODULE', 'Module');
+define('_AM_GROUP', 'Group');
+define('_AM_UNASSIGNED', 'Unassigned');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/blocksadmin.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/comments.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/comments.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/comments.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,11 @@
+<?php
+// $Id$
+//%%%%%% Comment Manager %%%%%
+define('_MD_AM_COMMMAN','Comment Manager');
+
+define('_MD_AM_LISTCOMM','List Comments');
+define('_MD_AM_ALLMODS','All modules');
+define('_MD_AM_ALLSTATUS','Any status');
+define('_MD_AM_MODULE','Module');
+define('_MD_AM_COMFOUND','%s comment(s) found.');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/comments.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/findusers.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/findusers.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/findusers.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,51 @@
+<?php
+// $Id$
+//%%%%%%	File Name findusers.php 	%%%%%
+
+define("_AM_FINDUS","Find Users");
+define("_AM_AVATAR","Avatar");
+define("_AM_REALNAME","Real Name");
+define("_AM_REGDATE","Joined Date");
+define("_AM_EMAIL","Email");
+define("_AM_PM","PM");
+define("_AM_URL","URL");
+define("_AM_PREVIOUS","Previous");
+define("_AM_NEXT","Next");
+define("_AM_USERSFOUND","%s user(s) found");
+
+define("_AM_ACTUS", "Active Users: %s");
+define("_AM_INACTUS", "Inactive Users: %s");
+define("_AM_NOFOUND","No Users Found");
+define("_AM_UNAME","User Name");
+define("_AM_ICQ","ICQ Number");
+define("_AM_AIM","AIM Handle");
+define("_AM_YIM","YIM Handle");
+define("_AM_MSNM","MSNM Handle");
+define("_AM_LOCATION","Location contains");
+define("_AM_OCCUPATION","Occupation contains");
+define("_AM_INTEREST","Interest contains");
+define("_AM_URLC","URL contains");
+define("_AM_LASTLOGMORE","Last login is more than <span style='color:#ff0000;'>X</span> days ago");
+define("_AM_LASTLOGLESS","Last login is less than <span style='color:#ff0000;'>X</span> days ago");
+define("_AM_REGMORE","Joined date is more than <span style='color:#ff0000;'>X</span> days ago");
+define("_AM_REGLESS","Joined date is less than <span style='color:#ff0000;'>X</span> days ago");
+define("_AM_POSTSMORE","Number of Posts is greater than <span style='color:#ff0000;'>X</span>");
+define("_AM_POSTSLESS","Number of Posts is less than <span style='color:#ff0000;'>X</span>");
+define("_AM_SORT","Sort by");
+define("_AM_ORDER","Order");
+define("_AM_LASTLOGIN","Last login");
+define("_AM_POSTS","Number of posts");
+define("_AM_ASC","Ascending order");
+define("_AM_DESC","Descending order");
+define("_AM_LIMIT","Number of users per page");
+define("_AM_RESULTS", "Search results");
+define("_AM_SHOWMAILOK", "Type of users to show");
+define("_AM_MAILOK","Only users that accept mail");
+define("_AM_MAILNG","Only users that don't accept mail");
+define("_AM_SHOWTYPE", "Type of users to show");
+define("_AM_ACTIVE","Only active users");
+define("_AM_INACTIVE","Only inactive users");
+define("_AM_BOTH", "All users");
+define("_AM_SENDMAIL", "Send mail");
+define("_AM_ADD2GROUP", "Add users to %s group");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/findusers.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/groups.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/groups.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/groups.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,37 @@
+<?php
+// $Id$
+//%%%%%%	Admin Module Name  AdminGroup 	%%%%%
+define("_AM_DBUPDATED",_MD_AM_DBUPDATED);
+
+define("_AM_EDITADG","Edit Groups");
+define("_AM_MODIFY","Modify");
+define("_AM_DELETE","Delete");
+define("_AM_CREATENEWADG","Create New Group");
+define("_AM_NAME","Name");
+define("_AM_DESCRIPTION","Description");
+define("_AM_INDICATES","* indicates required fields");
+define("_AM_SYSTEMRIGHTS","System Admin rights");
+define("_AM_ACTIVERIGHTS","Module Admin rights");
+define("_AM_IFADMIN","If admin right for a module is checked, access right for the module will always be enabled.");
+define("_AM_ACCESSRIGHTS","Module Access rights");
+define("_AM_UPDATEADG","Update Group");
+define("_AM_MODIFYADG","Modify Group");
+define("_AM_DELETEADG","Delete Group");
+define("_AM_AREUSUREDEL","Are you sure you want to delete this group?");
+define("_AM_YES","Yes");
+define("_AM_NO","No");
+define("_AM_EDITMEMBER","Edit Members of this Group");
+define("_AM_MEMBERS","Members");
+define("_AM_NONMEMBERS","Non-members");
+define("_AM_ADDBUTTON"," add --> ");
+define("_AM_DELBUTTON","<--delete");
+define("_AM_UNEED2ENTER","You need to enter required info!");
+
+// Added in RC3
+define("_AM_BLOCKRIGHTS","Block Access Rights");
+
+define('_AM_FINDU4GROUP', 'Find users for this group');
+define('_AM_GROUPSMAIN', 'Groups Main');
+
+define('_AM_ADMINNO', 'There must be at least one user in the webmasters group');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/groups.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/images.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/images.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/images.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,25 @@
+<?php
+// $Id$
+//%%%%%% Image Manager %%%%%
+
+
+define('_MD_IMGMAIN','Image Manager Main');
+
+define('_MD_ADDIMGCAT','Add Image Category:');
+define('_MD_EDITIMGCAT','Edit Image Category:');
+define('_MD_IMGCATNAME','Category Name:');
+define('_MD_IMGCATRGRP','Select groups for image manager use:<br /><br /><span style="font-weight: normal;">These are groups allowed to use the image manager for selecting images but not uploading. Webmaster has automatic access.</span>');
+define('_MD_IMGCATWGRP','Select groups allowed to upload images:<br /><br /><span style="font-weight: normal;">Typical usage is for moderator and admin groups.</span>');
+define('_MD_IMGCATWEIGHT','Display order in image manager:');
+define('_MD_IMGCATDISPLAY','Display this category?');
+define('_MD_IMGCATSTRTYPE','Images are uploaded to:');
+define('_MD_STRTYOPENG','This can not be changed afterwards!');
+define('_MD_INDB',' Store in the database (as binary "blob" data)');
+define('_MD_ASFILE',' Store as files (in uploads directory)<br />');
+define('_MD_RUDELIMGCAT','Are you sure that you want to delete this category and all of its images files?');
+define('_MD_RUDELIMG','Are you sure that you want to delete this images file?');
+
+define('_MD_FAILDEL', 'Failed deleting image %s from the database');
+define('_MD_FAILDELCAT', 'Failed deleting image category %s from the database');
+define('_MD_FAILUNLINK', 'Failed deleting image %s from the server directory');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/images.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/mailusers.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/mailusers.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/mailusers.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,39 @@
+<?php
+// $Id$
+//%%%%%%	Admin Module Name  MailUsers	%%%%%
+define("_AM_DBUPDATED",_MD_AM_DBUPDATED);
+
+//%%%%%%	mailusers.php 	%%%%%
+define("_AM_SENDTOUSERS","Send message to users whose:");
+define("_AM_SENDTOUSERS2","Send to:");
+define("_AM_GROUPIS","Group is (optional)");
+define("_AM_TIMEFORMAT", "(Format yyyy-mm-dd, optional)");
+define("_AM_LASTLOGMIN","Last Login is after");
+define("_AM_LASTLOGMAX","Last Login is before");
+define("_AM_REGDMIN","Registered date is after");
+define("_AM_REGDMAX","Registered date is before");
+define("_AM_IDLEMORE","Last Login was more than X days ago (optional)");
+define("_AM_IDLELESS","Last Login was less than X days ago (optional)");
+define("_AM_MAILOK","Send message only to users that accept notification messages (optional)");
+define("_AM_INACTIVE","Send message to inactive users only (optional)");
+define("_AMIFCHECKD", "If this is checked, all the above plus private messaging will be ignored");
+define("_AM_MAILFNAME","From Name (email only)");
+define("_AM_MAILFMAIL","From Email (email only)");
+define("_AM_MAILSUBJECT","Subject");
+define("_AM_MAILBODY","Body");
+define("_AM_MAILTAGS","Useful Tags:");
+define("_AM_MAILTAGS1","{X_UID} will print user id");
+define("_AM_MAILTAGS2","{X_UNAME} will print user name");
+define("_AM_MAILTAGS3","{X_UEMAIL} will print user email");
+define("_AM_MAILTAGS4","{X_UACTLINK} will print user activation link");
+define("_AM_SENDTO","Send to");
+define("_AM_EMAIL","Email");
+define("_AM_PM","Private Message");
+define("_AM_SENDMTOUSERS", "Send Message to Users");
+define("_AM_SENT", "Sent Users");
+define("_AM_SENTNUM", "%s - %s (total: %s users)");
+define("_AM_SENDNEXT", "Next");
+define("_AM_NOUSERMATCH", "No user matched");
+define("_AM_SENDCOMP", "Sending message completed.");
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/mailusers.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/modulesadmin.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/modulesadmin.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/modulesadmin.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,60 @@
+<?php
+// $Id$
+//%%%%%%	File Name  modulesadmin.php 	%%%%%
+define("_MD_AM_MODADMIN","Modules Administration");
+define("_MD_AM_MODULE","Module");
+define("_MD_AM_VERSION","Version");
+define("_MD_AM_LASTUP","Last Update");
+define("_MD_AM_DEACTIVATED","Deactivated");
+define("_MD_AM_ACTION","Action");
+define("_MD_AM_DEACTIVATE","Deactivate");
+define("_MD_AM_ACTIVATE","Activate");
+define("_MD_AM_UPDATE","Update");
+define("_MD_AM_DUPEN","Duplicate entry in modules table!");
+define("_MD_AM_DEACTED","The selected module has been deactivated. You can now safely uninstall the module.");
+define("_MD_AM_ACTED","The selected module has been activated!");
+define("_MD_AM_UPDTED","The selected module has been updated!");
+define("_MD_AM_SYSNO","System module cannot be deactivated.");
+define("_MD_AM_STRTNO","This module is set as your default start page. Please change the start module to whatever suits your preferences.");
+
+// added in RC2
+define("_MD_AM_PCMFM","Please confirm:");
+
+// added in RC3
+define("_MD_AM_ORDER","Order");
+define("_MD_AM_ORDER0","(0 = hide)");
+define("_MD_AM_ACTIVE","Active");
+define("_MD_AM_INACTIVE","Inactive");
+define("_MD_AM_NOTINSTALLED","Not Installed");
+define("_MD_AM_NOCHANGE","No Change");
+define("_MD_AM_INSTALL","Install");
+define("_MD_AM_UNINSTALL","Uninstall");
+define("_MD_AM_SUBMIT","Submit");
+define("_MD_AM_CANCEL","Cancel");
+define("_MD_AM_DBUPDATE","Database updated successfully!");
+define("_MD_AM_BTOMADMIN","Back to Module Administration page");
+
+// %s represents module name
+define("_MD_AM_FAILINS","Unable to install %s.");
+define("_MD_AM_FAILACT","Unable to activate %s.");
+define("_MD_AM_FAILDEACT","Unable to deactivate %s.");
+define("_MD_AM_FAILUPD","Unable to update %s.");
+define("_MD_AM_FAILUNINS","Unable to uninstall %s.");
+define("_MD_AM_FAILORDER","Unable to reorder %s.");
+define("_MD_AM_FAILWRITE","Unable to write to main menu.");
+define("_MD_AM_ALEXISTS","Module %s already exists.");
+define("_MD_AM_ERRORSC", "Error(s):");
+define("_MD_AM_OKINS","Module %s installed successfully.");
+define("_MD_AM_OKACT","Module %s activated successfully.");
+define("_MD_AM_OKDEACT","Module %s deactivated successfully.");
+define("_MD_AM_OKUPD","Module %s updated successfully.");
+define("_MD_AM_OKUNINS","Module %s uninstalled successfully.");
+define("_MD_AM_OKORDER","Module %s changed successfully.");
+
+define('_MD_AM_RUSUREINS', 'Press the button below to install this module');
+define('_MD_AM_RUSUREUPD', 'Press the button below to update this module');
+define('_MD_AM_RUSUREUNINS', 'Are you sure you would like to uninstall this module?');
+define('_MD_AM_LISTUPBLKS', 'The following blocks will be updated.<br />Select the blocks of which contents (template and options) may be overwritten.<br />');
+define('_MD_AM_NEWBLKS', 'New Blocks');
+define('_MD_AM_DEPREBLKS', 'Deprecated Blocks');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/modulesadmin.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/preferences.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/preferences.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/preferences.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,181 @@
+<?php
+// $Id$
+//%%%%%%	Admin Module Name  AdminGroup 	%%%%%
+// dont change
+define("_AM_DBUPDATED",_MD_AM_DBUPDATED);
+
+define("_MD_AM_SITEPREF","Site Preferences");
+define("_MD_AM_SITENAME","Site name");
+define("_MD_AM_SLOGAN","Slogan for your site");
+define("_MD_AM_ADMINML","Admin mail address");
+define("_MD_AM_LANGUAGE","Default language");
+define("_MD_AM_STARTPAGE","Module for your start page");
+define("_MD_AM_NONE","None");
+define("_MD_AM_SERVERTZ","Server timezone");
+define("_MD_AM_DEFAULTTZ","Default timezone");
+define("_MD_AM_DTHEME","Default theme");
+define("_MD_AM_THEMESET","Theme Set");
+define("_MD_AM_ANONNAME","Username for anonymous users");
+define("_MD_AM_MINPASS","Minimum length of password required");
+define("_MD_AM_NEWUNOTIFY","Notify by mail when a new user is registered?");
+define("_MD_AM_SELFDELETE","Allow users to delete own account?");
+define("_MD_AM_LOADINGIMG","Display loading... image?");
+define("_MD_AM_USEGZIP","Use gzip compression?");
+define("_MD_AM_UNAMELVL","Select the level of strictness for username filtering");
+define("_MD_AM_STRICT","Strict (only alphabets and numbers)");
+define("_MD_AM_MEDIUM","Medium");
+define("_MD_AM_LIGHT","Light (recommended for multi-byte chars)");
+define("_MD_AM_USERCOOKIE","Name for user cookies.");
+define("_MD_AM_USERCOOKIEDSC","This cookie contains only a user name and is saved in a user pc for a year (if the user wishes). If a user have this cookie, username will be automatically inserted in the login box.");
+define("_MD_AM_USEMYSESS","Use custom session");
+define("_MD_AM_USEMYSESSDSC","Select yes to customise session related values.");
+define("_MD_AM_SESSNAME","Session name");
+define("_MD_AM_SESSNAMEDSC","The name of session (Valid only when 'use custom session' is enabled)");
+define("_MD_AM_SESSEXPIRE","Session expiration");
+define("_MD_AM_SESSEXPIREDSC","Maximum duration of session idle time in minutes (Valid only when 'use custom session' is enabled. Works only when you are using PHP4.2.0 or later.)");
+define("_MD_AM_BANNERS","Activate banner ads?");
+define("_MD_AM_MYIP","Your IP address");
+define("_MD_AM_MYIPDSC","This IP will not counted as impression for banners");
+define("_MD_AM_ALWDHTML","HTML tags allowed in all posts.");
+define("_MD_AM_INVLDMINPASS","Invalid value for minimum length of password.");
+define("_MD_AM_INVLDUCOOK","Invalid value for usercookie name.");
+define("_MD_AM_INVLDSCOOK","Invalid value for sessioncookie name.");
+define("_MD_AM_INVLDSEXP","Invalid value for session expiration time.");
+define("_MD_AM_ADMNOTSET","Admin mail is not set.");
+define("_MD_AM_YES","Yes");
+define("_MD_AM_NO","No");
+define("_MD_AM_DONTCHNG","Don't change!");
+define("_MD_AM_REMEMBER","Remember to chmod 666 this file in order to let the system write to it properly.");
+define("_MD_AM_IFUCANT","If you can't change the permissions you can edit the rest of this file by hand.");
+
+
+define("_MD_AM_COMMODE","Default Comment Display Mode");
+define("_MD_AM_COMORDER","Default Comments Display Order");
+define("_MD_AM_ALLOWHTML","Allow HTML tags in user comments?");
+define("_MD_AM_DEBUGMODE","Debug mode");
+define("_MD_AM_DEBUGMODEDSC","Several debug options. A running website should have this turned off.");
+define("_MD_AM_AVATARALLOW","Allow custom avatar upload?");
+define('_MD_AM_AVATARMP','Minimum posts required');
+define('_MD_AM_AVATARMPDSC','Enter the minimum number of posts required to upload a custom avatar');
+define("_MD_AM_AVATARW","Avatar image max width (pixel)");
+define("_MD_AM_AVATARH","Avatar image max height (pixel)");
+define("_MD_AM_AVATARMAX","Avatar image max filesize (byte)");
+define("_MD_AM_AVATARCONF","Custom avatar settings");
+define("_MD_AM_CHNGUTHEME","Change all users' theme");
+define("_MD_AM_NOTIFYTO","Select group to which new user notification mail will be sent");
+define("_MD_AM_ALLOWTHEME","Allow users to select theme?");
+define("_MD_AM_ALLOWIMAGE","Allow users to display image files in posts?");
+
+define("_MD_AM_USERACTV","Requires activation by user (recommended)");
+define("_MD_AM_AUTOACTV","Activate automatically");
+define("_MD_AM_ADMINACTV","Activation by administrators");
+define("_MD_AM_ACTVTYPE","Select activation type of newly registered users");
+define("_MD_AM_ACTVGROUP","Select group to which activation mail will be sent");
+define("_MD_AM_ACTVGROUPDSC","Valid only when 'Activation by administrators' is selected");
+define('_MD_AM_USESSL', 'Use SSL for login?');
+define('_MD_AM_SSLPOST', 'SSL Post variable name');
+define('_MD_AM_SSLPOSTDSC', 'The name of variable used to transfer session value via POST. If you are unsure, set any name that is hard to guess.');
+define('_MD_AM_DEBUGMODE0','Off');
+define('_MD_AM_DEBUGMODE1','PHP Debug');
+define('_MD_AM_DEBUGMODE2','MySQL/Blocks Debug');
+define('_MD_AM_DEBUGMODE3','Smarty Templates Debug');
+define('_MD_AM_MINUNAME', 'Minimum length of username required');
+define('_MD_AM_MAXUNAME', 'Maximum length of username');
+define('_MD_AM_GENERAL', 'General Settings');
+define('_MD_AM_USERSETTINGS', 'User Info Settings');
+define('_MD_AM_ALLWCHGMAIL', 'Allow users to change email address?');
+define('_MD_AM_ALLWCHGMAILDSC', '');
+define('_MD_AM_IPBAN', 'IP Banning');
+define('_MD_AM_BADEMAILS', 'Enter emails that should not be used in user profile');
+define('_MD_AM_BADEMAILSDSC', 'Separate each with a <b>|</b>, case insensitive, regex enabled.');
+define('_MD_AM_BADUNAMES', 'Enter names that should not be selected as username');
+define('_MD_AM_BADUNAMESDSC', 'Separate each with a <b>|</b>, case insensitive, regex enabled.');
+define('_MD_AM_DOBADIPS', 'Enable IP bans?');
+define('_MD_AM_DOBADIPSDSC', 'Users from specified IP addresses will not be able to view your site');
+define('_MD_AM_BADIPS', 'Enter IP addresses that should be banned from the site.<br />Separate each with a <b>|</b>, case insensitive, regex enabled.');
+define('_MD_AM_BADIPSDSC', '^aaa.bbb.ccc will disallow visitors with an IP that starts with aaa.bbb.ccc<br />aaa.bbb.ccc$ will disallow visitors with an IP that ends with aaa.bbb.ccc<br />aaa.bbb.ccc will disallow visitors with an IP that contains aaa.bbb.ccc');
+define('_MD_AM_PREFMAIN', 'Preferences Main');
+define('_MD_AM_METAKEY', 'Meta Keywords');
+define('_MD_AM_METAKEYDSC', 'The keywords meta tag is a series of keywords that represents the content of your site. Type in keywords with each separated by a comma or a space in between. (Ex. XOOPS, PHP, mySQL, portal system)');
+define('_MD_AM_METARATING', 'Meta Rating');
+define('_MD_AM_METARATINGDSC', 'The rating meta tag defines your site age and content rating');
+define('_MD_AM_METAOGEN', 'General');
+define('_MD_AM_METAO14YRS', '14 years');
+define('_MD_AM_METAOREST', 'Restricted');
+define('_MD_AM_METAOMAT', 'Mature');
+define('_MD_AM_METAROBOTS', 'Meta Robots');
+define('_MD_AM_METAROBOTSDSC', 'The Robots Tag declares to search engines what content to index and spider');
+define('_MD_AM_INDEXFOLLOW', 'Index, Follow');
+define('_MD_AM_NOINDEXFOLLOW', 'No Index, Follow');
+define('_MD_AM_INDEXNOFOLLOW', 'Index, No Follow');
+define('_MD_AM_NOINDEXNOFOLLOW', 'No Index, No Follow');
+define('_MD_AM_METAAUTHOR', 'Meta Author');
+define('_MD_AM_METAAUTHORDSC', 'The author meta tag defines the name of the author of the document being read. Supported data formats include the name, email address of the webmaster, company name or URL.');
+define('_MD_AM_METACOPYR', 'Meta Copyright');
+define('_MD_AM_METACOPYRDSC', 'The copyright meta tag defines any copyright statements you wish to disclose about your web page documents.');
+define('_MD_AM_METADESC', 'Meta Description');
+define('_MD_AM_METADESCDSC', 'The description meta tag is a general description of what is contained in your web page');
+define('_MD_AM_METAFOOTER', 'Meta Tags and Footer');
+define('_MD_AM_FOOTER', 'Footer');
+define('_MD_AM_FOOTERDSC', 'Be sure to type links in full path starting from http://, otherwise the links will not work correctly in modules pages.');
+define('_MD_AM_CENSOR', 'Word Censoring Options');
+define('_MD_AM_DOCENSOR', 'Enable censoring of unwanted words?');
+define('_MD_AM_DOCENSORDSC', 'Words will be censored if this option is enabled. This option may be turned off for enhanced site speed.');
+define('_MD_AM_CENSORWRD', 'Words to censor');
+define('_MD_AM_CENSORWRDDSC', 'Enter words that should be censored in user posts.<br />Separate each with a <b>|</b>, case insensitive.');
+define('_MD_AM_CENSORRPLC', 'Bad words will be replaced with:');
+define('_MD_AM_CENSORRPLCDSC', 'Censored words will be replaced with the characters entered in this textbox');
+
+define('_MD_AM_SEARCH', 'Search Options');
+define('_MD_AM_DOSEARCH', 'Enable global searches?');
+define('_MD_AM_DOSEARCHDSC', 'Allow searching for posts/items within your site.');
+define('_MD_AM_MINSEARCH', 'Minimum keyword length');
+define('_MD_AM_MINSEARCHDSC', 'Enter the minimum keyword length that users are required to enter to perform search');
+define('_MD_AM_MODCONFIG', 'Module Config Options');
+define('_MD_AM_DSPDSCLMR', 'Display disclaimer?');
+define('_MD_AM_DSPDSCLMRDSC', 'Select yes to display disclaimer in registration page');
+define('_MD_AM_REGDSCLMR', 'Registration disclaimer');
+define('_MD_AM_REGDSCLMRDSC', 'Enter text to be displayed as registration disclaimer');
+define('_MD_AM_ALLOWREG', 'Allow new user registration?');
+define('_MD_AM_ALLOWREGDSC', 'Select yes to accept new user registration');
+define('_MD_AM_THEMEFILE', 'Update module template .html files from themes/your theme/templates directory?');
+define('_MD_AM_THEMEFILEDSC', 'If this option is enabled, module template .html files will be updated automatically if there are newer files under the themes/your theme/templates directory for the current theme. This should be turned off once the site goes public.');
+define('_MD_AM_CLOSESITE', 'Turn your site off?');
+define('_MD_AM_CLOSESITEDSC', 'Select yes to turn your site off so that only users in selected groups have access to the site. ');
+define('_MD_AM_CLOSESITEOK', 'Select groups that are allowed to access while the site is turned off.');
+define('_MD_AM_CLOSESITEOKDSC', 'Users in the default webmasters group are always granted access.');
+define('_MD_AM_CLOSESITETXT', 'Reason for turning off the site');
+define('_MD_AM_CLOSESITETXTDSC', 'The text that is presented when the site is closed.');
+define('_MD_AM_SITECACHE', 'Site-wide Cache');
+define('_MD_AM_SITECACHEDSC', 'Caches whole contents of the site for a specified amount of time to enhance performance. Setting site-wide cache will override module-level cache, block-level cache, and module item level cache if any.');
+define('_MD_AM_MODCACHE', 'Module-wide Cache');
+define('_MD_AM_MODCACHEDSC', 'Caches module contents for a specified amount of time to enhance performance. Setting module-wide cache will override module item level cache if any.');
+define('_MD_AM_NOMODULE', 'There is no module that can be cached.');
+define('_MD_AM_DTPLSET', 'Default template set');
+define('_MD_AM_SSLLINK', 'URL where SSL login page is located');
+
+// added for mailer
+define("_MD_AM_MAILER","Mail Setup");
+define("_MD_AM_MAILER_MAIL","");
+define("_MD_AM_MAILER_SENDMAIL","");
+define("_MD_AM_MAILER_","");
+define("_MD_AM_MAILFROM","FROM address");
+define("_MD_AM_MAILFROMDESC","");
+define("_MD_AM_MAILFROMNAME","FROM name");
+define("_MD_AM_MAILFROMNAMEDESC","");
+// RMV-NOTIFY
+define("_MD_AM_MAILFROMUID","FROM user");
+define("_MD_AM_MAILFROMUIDDESC","When the system sends a private message, which user should appear to have sent it?");
+define("_MD_AM_MAILERMETHOD","Mail delivery method");
+define("_MD_AM_MAILERMETHODDESC","Method used to deliver mail. Default is \"mail\", use others only if that makes trouble.");
+define("_MD_AM_SMTPHOST","SMTP host(s)");
+define("_MD_AM_SMTPHOSTDESC","List of SMTP servers to try to connect to.");
+define("_MD_AM_SMTPUSER","SMTPAuth username");
+define("_MD_AM_SMTPUSERDESC","Username to connect to an SMTP host with SMTPAuth.");
+define("_MD_AM_SMTPPASS","SMTPAuth password");
+define("_MD_AM_SMTPPASSDESC","Password to connect to an SMTP host with SMTPAuth.");
+define("_MD_AM_SENDMAILPATH","Path to sendmail");
+define("_MD_AM_SENDMAILPATHDESC","Path to the sendmail program (or substitute) on the webserver.");
+define("_MD_AM_THEMEOK","Selectable themes");
+define("_MD_AM_THEMEOKDSC","Choose themes that users can select as the default theme");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/preferences.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/smilies.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/smilies.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/smilies.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,21 @@
+<?php
+// $Id$
+//%%%%%%	Admin Module Name  Smilies 	%%%%%
+define('_AM_DBUPDATED',_MD_AM_DBUPDATED);
+
+define('_AM_SMILESCONTROL','Smilies Control');
+define('_AM_CODE','Code');
+define('_AM_SMILIE','Smilie');
+define('_AM_ACTION','Action');
+define('_AM_EDIT','Edit');
+define('_AM_DEL','Delete');
+define('_AM_CNRFTSD','Could not retrieve from the smilies database.');
+define('_AM_ADDSMILE','Add a Smilie');
+define('_AM_EDITSMILE','Edit a Smilie');
+define('_AM_SMILECODE','Smilie Code:');
+define('_AM_SMILEURL','Image URL:');
+define('_AM_SMILEEMOTION','Description:');
+define('_AM_ADD','Add');
+define('_AM_SAVE','Save');
+define('_AM_WAYSYWTDTS','WARNING: Are you sure you want to delete this Smile?');define('_AM_DISPLAYF', 'Display in form?');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/smilies.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/tplsets.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/tplsets.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/tplsets.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,61 @@
+<?php
+// $Id$
+//%%%%%% Template Manager %%%%%
+define('_MD_TPLMAIN','Template Set Manager');
+define('_MD_INSTALL','Install');
+define('_MD_EDITTEMPLATE','Edit template file');
+define('_MD_FILENAME','File name');
+define('_MD_FILEDESC','Description');
+define('_MD_LASTMOD','Last modified');
+define('_MD_FILEMOD','Last modified (file)');
+define('_MD_FILECSS','CSS');
+define('_MD_FILEHTML','HTML');
+define('_MD_AM_BTOTADMIN', 'Back to template set manager');
+define('_MD_RUSUREDELTH', 'Are you sure that you want to delete this template set and all its template data?');
+define('_MD_RUSUREDELTPL', 'Are you sure that you want to delete this template data?');
+define('_MD_PLZINSTALL', 'Press the button below to start installation');
+define('_MD_PLZGENERATE', 'Press the button below to generate file(s)');
+define('_MD_CLONETHEME','Clone a template set');
+define('_MD_THEMENAME','Base template set');
+define('_MD_NEWNAME','Enter new template set name');
+define('_MD_IMPORT','Import');
+define('_MD_RUSUREIMPT', 'Importing template data from the templates directory will overwrite your changes in database.<br />Click "Import" to proceed.');
+define('_MD_THMSETNAME','Name');
+define('_MD_CREATED','Created');
+define('_MD_SKIN','Skin');
+define('_MD_TEMPLATES','Templates');
+define('_MD_EDITSKIN','Edit skin');
+define('_MD_NOFILE','No File');
+define('_MD_VIEW','View');
+define('_MD_COPYDEFAULT','Copy default file');
+define('_MD_DLDEFAULT','Download default file');
+define('_MD_VIEWDEFAULT','View default template');
+define('_MD_DOWNLOAD','Download');
+define('_MD_UPLOAD','Upload');
+define('_MD_GENERATE','Generate');
+define('_MD_CHOOSEFILE', 'Choose file to upload');
+define('_MD_UPWILLREPLACE', 'Uploading this file will overwrite the data in database!');
+define('_MD_UPLOADTAR', 'Upload a template set');
+define('_MD_CHOOSETAR', 'Choose a template set package to upload');
+define('_MD_ONLYTAR', 'Must be a tar.gz/.tar file with a valid XOOPS template set structure');
+define('_MD_NTHEMENAME', 'New template set name');
+define('_MD_ENTERTH', 'Enter a template set name for this package. Leave it blank for automatic detection.');
+define('_MD_TITLE','Title');
+define('_MD_CONTENT','Content');
+define('_MD_ACTION','Action');
+define('_MD_DEFAULTTHEME','Your site uses this template set as default');
+define('_MD_AM_ERRTHEME', 'The following template sets have no valid skin files data. Press delete to remove data related to the template set.');
+define('_MD_SKINIMGS','Skin image files');
+define('_MD_EDITSKINIMG','Edit skin image files');
+define('_MD_IMGFILE','File name');
+define('_MD_IMGNEWFILE','Upload new file');
+define('_MD_IMGDELETE','Delete');
+define('_MD_ADDSKINIMG','Add skin image file');
+define('_MD_BLOCKHTML', 'Block HTML');
+define('_MD_IMAGES', 'Images');
+define('_MD_NOZLIB', 'Zlib support must be enabled on your server');
+define('_MD_LASTIMP', 'Last Imported');
+define('_MD_FILENEWER', 'A newer file that has not been imported yet exists under the <b>templates</b> directory.');
+define('_MD_FILEIMPORT', 'An older file that has not been imported yet exists under the <b>templates</b> directory.');
+define('_MD_FILEGENER', 'Template file does not eixst. It can be generated (copied from the <b>default</b> template), uploaded, or imported from the <b>templates</b> directory.');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/tplsets.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/userrank.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/userrank.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/userrank.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,28 @@
+<?php
+// $Id$
+//%%%%%%	Admin Module Name  UserRank 	%%%%%
+define("_AM_DBUPDATED",_MD_AM_DBUPDATED);
+define("_AM_RANKSSETTINGS","User Ranks Settings");
+define("_AM_TITLE","Title");
+define("_AM_MINPOST","Min. Posts");
+define("_AM_MAXPOST","Max. Posts");
+define("_AM_IMAGE","Image");
+define("_AM_SPERANK","Special Ranks");
+define("_AM_ON","on");
+define("_AM_OFF","off");
+define("_AM_EDIT","Edit");
+define("_AM_DEL","Delete");
+define("_AM_ADDNEWRANK","Add a New Rank");
+define("_AM_RANKTITLE","Rank Title");
+define("_AM_SPECIAL","Special");
+define("_AM_ADD","Add");
+define("_AM_EDITRANK","Edit Ranks");
+define("_AM_ACTIVE","active");
+define("_AM_SAVECHANGE","Save Changes");
+define("_AM_WAYSYWTDTR","WARNING: Are you sure you want to delete this Ranking?");
+define("_AM_YES","Yes");
+define("_AM_NO","No");
+define("_AM_VALIDUNDER","(A valid image file under <b>%s</b> directory)");
+define("_AM_SPECIALCAN","(Special ranks can be assigned to users irrespective of the number of user posts)");
+define("_AM_ACTION","Action");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/userrank.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/users.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/users.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/users.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,58 @@
+<?php
+// $Id$
+//%%%%%%	Admin Module Name  Users 	%%%%%
+define("_AM_DBUPDATED",_MD_AM_DBUPDATED);
+
+define("_AM_AYSYWTDU","Are you sure you want to delete user %s?");
+define("_AM_BYTHIS","By doing this all the info for this user will be removed permanently.");
+define("_AM_YES","Yes");
+define("_AM_NO","No");
+define("_AM_YMCACF","You must complete all required fields");
+define("_AM_CNRNU","Could not register new user.");
+define("_AM_EDEUSER","Edit/Delete Users");
+define("_AM_NICKNAME","Nickname");
+define("_AM_MODIFYUSER","Modify User");
+define("_AM_DELUSER","Delete User");
+define("_AM_GO","Go!");
+define("_AM_ADDUSER","Add User");
+define("_AM_NAME","Name");
+define("_AM_EMAIL","Email");
+define("_AM_OPTION","Option");
+define("_AM_AVATAR","Avatar");
+define("_AM_THEME","Theme");
+define("_AM_AOUTVTEAD","Allow other users to view this email address");
+define("_AM_URL","URL");
+define("_AM_ICQ","ICQ");
+define("_AM_AIM","AIM");
+define("_AM_YIM","YIM");
+define("_AM_MSNM","MSNM");
+define("_AM_LOCATION","Location");
+define("_AM_OCCUPATION","Occupation");
+define("_AM_INTEREST","Interest");
+define("_AM_RANK","Rank");
+define("_AM_NSRA","No Special Rank Assigned");
+define("_AM_NSRID","No Special Ranks in Database");
+define("_AM_ACCESSLEV","Access Level");
+define("_AM_SIGNATURE","Signature");
+define("_AM_PASSWORD","Password");
+define("_AM_INDICATECOF","* indicates required fields");
+define("_AM_NOTACTIVE","This user has not been activated. Do you wish to activate this user?");
+define("_AM_UPDATEUSER","Update User");
+define("_AM_USERINFO","User Info");
+define("_AM_USERID","User ID");
+define("_AM_RETYPEPD","Retype Password");
+define("_AM_CHANGEONLY","(for changes only)");
+define("_AM_USERPOST","User Posts");
+define("_AM_STORIES","Stories");
+define("_AM_COMMENTS","Comments");
+define("_AM_PTBBTSDIYT","Push the button below to synchronize data if you think the above user posts info does not seem to indicate the actual status");
+define("_AM_SYNCHRONIZE","Synchronize");
+define("_AM_USERDONEXIT","User doesn't exist!");
+define("_AM_STNPDNM","Sorry, the new passwords do not match. Click back and try again");
+define("_AM_CNGTCOM","Could not get total comments");
+define("_AM_CNGTST","Could not get total stories");
+define("_AM_CNUUSER","Could not update user");
+define("_AM_CNGUSERID","Could not get user IDS");
+define("_AM_LIST","List");
+define("_AM_NOUSERS", "No users selected");
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/users.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin/version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin/version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin/version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,7 @@
+<?php
+// $Id$
+//%%%%%%	Admin Module Name  Version 	%%%%%
+define("_AM_DBUPDATED",_MD_AM_DBUPDATED);
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin/version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/admin.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/admin.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/admin.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,29 @@
+<?php
+// $Id$
+//%%%%%%	File Name  admin.php 	%%%%%
+define('_MD_AM_DBUPDATED','Database Updated Successfully!');
+
+
+// Admin Module Names
+define('_MD_AM_ADGS','Groups');
+define('_MD_AM_BANS','Banners');
+define('_MD_AM_BKAD','Blocks');
+define('_MD_AM_MDAD','Modules');
+define('_MD_AM_SMLS','Smilies');
+define('_MD_AM_RANK','User Ranks');
+define('_MD_AM_USER','Edit Users');
+define('_MD_AM_FINDUSER', 'Find Users');
+define('_MD_AM_PREF','Preferences');
+define('_MD_AM_VRSN','Version');
+define('_MD_AM_MLUS', 'Mail Users');
+define('_MD_AM_IMAGES', 'Image Manager');
+define('_MD_AM_AVATARS', 'Avatars');
+define('_MD_AM_TPLSETS', 'Templates');
+define('_MD_AM_COMMENTS', 'Comments');
+
+// Group permission phrases
+define('_MD_AM_PERMADDNG', 'Could not add %s permission to %s for group %s');
+define('_MD_AM_PERMADDOK','Added %s permission to %s for group %s');
+define('_MD_AM_PERMRESETNG','Could not reset group permission for module %s');
+define('_MD_AM_PERMADDNGP', 'All parent items must be selected.');
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/admin.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/blocks.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/blocks.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/blocks.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,45 @@
+<?php
+// $Id$
+// Blocks
+define("_MB_SYSTEM_ADMENU","Administration Menu");
+define("_MB_SYSTEM_RNOW","Register now!");
+define("_MB_SYSTEM_LPASS","Lost Password?");
+define("_MB_SYSTEM_SEARCH","Search");
+define("_MB_SYSTEM_ADVS","Advanced Search");
+define("_MB_SYSTEM_VACNT","View Account");
+define("_MB_SYSTEM_EACNT","Edit Account");
+// RMV-NOTIFY
+define("_MB_SYSTEM_NOTIF", "Notifications");
+define("_MB_SYSTEM_LOUT","Logout");
+define("_MB_SYSTEM_INBOX","Inbox");
+define("_MB_SYSTEM_SUBMS","Submitted News");
+define("_MB_SYSTEM_WLNKS","Waiting Links");
+define("_MB_SYSTEM_BLNK","Broken Links");
+define("_MB_SYSTEM_MLNKS","Modified Links");
+define("_MB_SYSTEM_WDLS","Waiting Downloads");
+define("_MB_SYSTEM_BFLS","Broken Files");
+define("_MB_SYSTEM_MFLS","Modified Downloads");
+define("_MB_SYSTEM_HOME","Home"); // link to home page in main menu block
+define("_MB_SYSTEM_RECO","Recommend Us");
+define("_MB_SYSTEM_PWWIDTH","Pop-Up Window Width");
+define("_MB_SYSTEM_PWHEIGHT","Pop-Up Window Height");
+define("_MB_SYSTEM_LOGO","Logo image file under %s directory");  // %s is your root image directory name
+define("_MB_SYSTEM_COMPEND", "Comments");
+
+//define("_MB_SYSTEM_LOGGEDINAS", "Logged in as");
+define("_MB_SYSTEM_SADMIN","Show admin groups");
+define("_MB_SYSTEM_SPMTO","Send Private Message to %s");
+define("_MB_SYSTEM_SEMTO","Send Email to %s");
+
+define("_MB_SYSTEM_DISPLAY","Display %s members");
+define("_MB_SYSTEM_DISPLAYA","Display member avatars");
+define("_MB_SYSTEM_NODISPGR","Do not display users whose rank is:");
+
+define("_MB_SYSTEM_DISPLAYC","Display %s comments");
+define("_MB_SYSTEM_SECURE", "Secure Login");
+
+define("_MB_SYSTEM_NUMTHEME", "%s themes");
+define("_MB_SYSTEM_THSHOW", "Display screenshot image");
+define("_MB_SYSTEM_THWIDTH", "Screenshot image width");
+//define('_MB_SYSTEM_REMEMBERME', 'Remember me');
+?>


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/blocks.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/language/english/modinfo.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/language/english/modinfo.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/language/english/modinfo.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,41 @@
+<?php
+// $Id$
+// Module Info
+
+// The name of this module
+define("_MI_SYSTEM_NAME","System");
+
+// A brief description of this module
+define("_MI_SYSTEM_DESC","For administration of core settings of the site.");
+
+// Names of blocks for this module (Not all module has blocks)
+define("_MI_SYSTEM_BNAME2","User Menu");
+define("_MI_SYSTEM_BNAME3","Login");
+define("_MI_SYSTEM_BNAME4","Search");
+define("_MI_SYSTEM_BNAME5","Waiting Contents");
+define("_MI_SYSTEM_BNAME6","Main Menu");
+define("_MI_SYSTEM_BNAME7","Site Info");
+define('_MI_SYSTEM_BNAME8', "Who's Online");
+define('_MI_SYSTEM_BNAME9', "Top Posters");
+define('_MI_SYSTEM_BNAME10', "New Members");
+define('_MI_SYSTEM_BNAME11', "Recent Comments");
+// RMV-NOTIFY
+define('_MI_SYSTEM_BNAME12', "Notification Options");
+define('_MI_SYSTEM_BNAME13', "Themes");
+
+// Names of admin menu items
+define("_MI_SYSTEM_ADMENU1","Banners");
+define("_MI_SYSTEM_ADMENU2","Blocks");
+define("_MI_SYSTEM_ADMENU3","Groups");
+define("_MI_SYSTEM_ADMENU5","Modules");
+define("_MI_SYSTEM_ADMENU6","Preferences");
+define("_MI_SYSTEM_ADMENU7","Smilies");
+define("_MI_SYSTEM_ADMENU9","User Ranks");
+define("_MI_SYSTEM_ADMENU10","Edit User");
+define("_MI_SYSTEM_ADMENU11","Mail Users");
+define("_MI_SYSTEM_ADMENU12", "Find Users");
+define("_MI_SYSTEM_ADMENU13", "Images");
+define("_MI_SYSTEM_ADMENU14", "Avatars");
+define("_MI_SYSTEM_ADMENU15", "Templates");
+define("_MI_SYSTEM_ADMENU16", "Comments");
+?>


Property changes on: XoopsCore/trunk/htdocs/modules/system/language/english/modinfo.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/menu.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/menu.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/menu.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,60 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$adminmenu[0]['title'] = _MI_SYSTEM_ADMENU1;
+$adminmenu[0]['link'] = "admin.php?fct=banners";
+$adminmenu[1]['title'] = _MI_SYSTEM_ADMENU2;
+$adminmenu[1]['link'] = "admin.php?fct=blocksadmin";
+$adminmenu[2]['title'] = _MI_SYSTEM_ADMENU3;
+$adminmenu[2]['link'] = "admin.php?fct=groups";
+$adminmenu[3]['title'] = _MI_SYSTEM_ADMENU13;
+$adminmenu[3]['link'] = "admin.php?fct=images";
+$adminmenu[4]['title'] = _MI_SYSTEM_ADMENU5;
+$adminmenu[4]['link'] = "admin.php?fct=modulesadmin";
+$adminmenu[5]['title'] = _MI_SYSTEM_ADMENU6;
+$adminmenu[5]['link'] = "admin.php?fct=preferences";
+$adminmenu[6]['title'] = _MI_SYSTEM_ADMENU7;
+$adminmenu[6]['link'] = "admin.php?fct=smilies";
+$adminmenu[7]['title'] = _MI_SYSTEM_ADMENU9;
+$adminmenu[7]['link'] = "admin.php?fct=userrank";
+$adminmenu[8]['title'] = _MI_SYSTEM_ADMENU10;
+$adminmenu[8]['link'] = "admin.php?fct=users";
+$adminmenu[9]['title'] = _MI_SYSTEM_ADMENU12;
+$adminmenu[9]['link'] = "admin.php?fct=findusers";
+$adminmenu[10]['title'] = _MI_SYSTEM_ADMENU11;
+$adminmenu[10]['link'] = "admin.php?fct=mailusers";
+$adminmenu[11]['title'] = _MI_SYSTEM_ADMENU14;
+$adminmenu[11]['link'] = "admin.php?fct=avatars";
+$adminmenu[12]['title'] = _MI_SYSTEM_ADMENU15;
+$adminmenu[12]['link'] = "admin.php?fct=tplsets";
+$adminmenu[13]['title'] = _MI_SYSTEM_ADMENU16;
+$adminmenu[13]['link'] = "admin.php?fct=comments";
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/modules/system/menu.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/modules/system/xoops_version.php
===================================================================
--- XoopsCore/trunk/htdocs/modules/system/xoops_version.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/modules/system/xoops_version.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,169 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+// Author: Kazumi Ono (AKA onokazu)                                          //
+// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
+// Project: The XOOPS Project                                                //
+// ------------------------------------------------------------------------- //
+
+$modversion['name'] = _MI_SYSTEM_NAME;
+$modversion['version'] = 1.01;
+$modversion['description'] = _MI_SYSTEM_DESC;
+$modversion['author'] = "";
+$modversion['credits'] = "The XOOPS Project";
+$modversion['help'] = "system.html";
+$modversion['license'] = "GPL see LICENSE";
+$modversion['official'] = 1;
+$modversion['image'] = "images/system_slogo.png";
+$modversion['dirname'] = "system";
+
+// Admin things
+$modversion['hasAdmin'] = 1;
+$modversion['adminindex'] = "admin.php";
+$modversion['adminmenu'] = "menu.php";
+
+$modversion['onUpdate'] = "include/update.php";
+
+// Templates
+$modversion['templates'][1]['file'] = 'system_imagemanager.html';
+$modversion['templates'][1]['description'] = '';
+$modversion['templates'][2]['file'] = 'system_imagemanager2.html';
+$modversion['templates'][2]['description'] = '';
+$modversion['templates'][3]['file'] = 'system_userinfo.html';
+$modversion['templates'][3]['description'] = '';
+$modversion['templates'][4]['file'] = 'system_userform.html';
+$modversion['templates'][4]['description'] = '';
+$modversion['templates'][5]['file'] = 'system_rss.html';
+$modversion['templates'][5]['description'] = '';
+$modversion['templates'][6]['file'] = 'system_redirect.html';
+$modversion['templates'][6]['description'] = '';
+$modversion['templates'][7]['file'] = 'system_comment.html';
+$modversion['templates'][7]['description'] = '';
+$modversion['templates'][8]['file'] = 'system_comments_flat.html';
+$modversion['templates'][8]['description'] = '';
+$modversion['templates'][9]['file'] = 'system_comments_thread.html';
+$modversion['templates'][9]['description'] = '';
+$modversion['templates'][10]['file'] = 'system_comments_nest.html';
+$modversion['templates'][10]['description'] = '';
+$modversion['templates'][11]['file'] = 'system_siteclosed.html';
+$modversion['templates'][11]['description'] = '';
+$modversion['templates'][12]['file'] = 'system_dummy.html';
+$modversion['templates'][12]['description'] = 'Dummy template file for holding non-template contents. This should not be edited.';
+$modversion['templates'][13]['file'] = 'system_notification_list.html';
+$modversion['templates'][13]['description'] = '';
+$modversion['templates'][14]['file'] = 'system_notification_select.html';
+$modversion['templates'][14]['description'] = '';
+$modversion['templates'][15]['file'] = 'system_block_dummy.html';
+$modversion['templates'][15]['description'] = 'Dummy template for custom blocks or blocks without templates';
+
+// Blocks
+$modversion['blocks'][1]['file'] = "system_blocks.php";
+$modversion['blocks'][1]['name'] = _MI_SYSTEM_BNAME2;
+$modversion['blocks'][1]['description'] = "Shows user block";
+$modversion['blocks'][1]['show_func'] = "b_system_user_show";
+$modversion['blocks'][1]['template'] = 'system_block_user.html';
+
+$modversion['blocks'][2]['file'] = "system_blocks.php";
+$modversion['blocks'][2]['name'] = _MI_SYSTEM_BNAME3;
+$modversion['blocks'][2]['description'] = "Shows login form";
+$modversion['blocks'][2]['show_func'] = "b_system_login_show";
+$modversion['blocks'][2]['template'] = 'system_block_login.html';
+
+$modversion['blocks'][3]['file'] = "system_blocks.php";
+$modversion['blocks'][3]['name'] = _MI_SYSTEM_BNAME4;
+$modversion['blocks'][3]['description'] = "Shows search form block";
+$modversion['blocks'][3]['show_func'] = "b_system_search_show";
+$modversion['blocks'][3]['template'] = 'system_block_search.html';
+
+$modversion['blocks'][4]['file'] = "system_blocks.php";
+$modversion['blocks'][4]['name'] = _MI_SYSTEM_BNAME5;
+$modversion['blocks'][4]['description'] = "Shows contents waiting for approval";
+$modversion['blocks'][4]['show_func'] = "b_system_waiting_show";
+$modversion['blocks'][4]['template'] = 'system_block_waiting.html';
+
+$modversion['blocks'][5]['file'] = "system_blocks.php";
+$modversion['blocks'][5]['name'] = _MI_SYSTEM_BNAME6;
+$modversion['blocks'][5]['description'] = "Shows the main navigation menu of the site";
+$modversion['blocks'][5]['show_func'] = "b_system_main_show";
+$modversion['blocks'][5]['template'] = 'system_block_mainmenu.html';
+
+$modversion['blocks'][6]['file'] = "system_blocks.php";
+$modversion['blocks'][6]['name'] = _MI_SYSTEM_BNAME7;
+$modversion['blocks'][6]['description'] = "Shows basic info about the site and a link to Recommend Us pop up window";
+$modversion['blocks'][6]['show_func'] = "b_system_info_show";
+$modversion['blocks'][6]['edit_func'] = "b_system_info_edit";
+$modversion['blocks'][6]['options'] = "320|190|s_poweredby.gif|1";
+$modversion['blocks'][6]['template'] = 'system_block_siteinfo.html';
+
+$modversion['blocks'][7]['file'] = "system_blocks.php";
+$modversion['blocks'][7]['name'] = _MI_SYSTEM_BNAME8;
+$modversion['blocks'][7]['description'] = "Displays users/guests currently online";
+$modversion['blocks'][7]['show_func'] = "b_system_online_show";
+$modversion['blocks'][7]['template'] = 'system_block_online.html';
+
+$modversion['blocks'][8]['file'] = "system_blocks.php";
+$modversion['blocks'][8]['name'] = _MI_SYSTEM_BNAME9;
+$modversion['blocks'][8]['description'] = "Top posters";
+$modversion['blocks'][8]['show_func'] = "b_system_topposters_show";
+$modversion['blocks'][8]['options'] = "10|1";
+$modversion['blocks'][8]['edit_func'] = "b_system_topposters_edit";
+$modversion['blocks'][8]['template'] = 'system_block_topusers.html';
+
+$modversion['blocks'][9]['file'] = "system_blocks.php";
+$modversion['blocks'][9]['name'] = _MI_SYSTEM_BNAME10;
+$modversion['blocks'][9]['description'] = "Shows most recent users";
+$modversion['blocks'][9]['show_func'] = "b_system_newmembers_show";
+$modversion['blocks'][9]['options'] = "10|1";
+$modversion['blocks'][9]['edit_func'] = "b_system_newmembers_edit";
+$modversion['blocks'][9]['template'] = 'system_block_newusers.html';
+
+$modversion['blocks'][10]['file'] = "system_blocks.php";
+$modversion['blocks'][10]['name'] = _MI_SYSTEM_BNAME11;
+$modversion['blocks'][10]['description'] = "Shows most recent comments";
+$modversion['blocks'][10]['show_func'] = "b_system_comments_show";
+$modversion['blocks'][10]['options'] = "10";
+$modversion['blocks'][10]['edit_func'] = "b_system_comments_edit";
+$modversion['blocks'][10]['template'] = 'system_block_comments.html';
+
+// RMV-NOTIFY:
+// Adding a block...
+$modversion['blocks'][11]['file'] = "system_blocks.php";
+$modversion['blocks'][11]['name'] = _MI_SYSTEM_BNAME12;
+$modversion['blocks'][11]['description'] = "Shows notification options";
+$modversion['blocks'][11]['show_func'] = "b_system_notification_show";
+$modversion['blocks'][11]['template'] = 'system_block_notification.html';
+
+$modversion['blocks'][12]['file'] = "system_blocks.php";
+$modversion['blocks'][12]['name'] = _MI_SYSTEM_BNAME13;
+$modversion['blocks'][12]['description'] = "Shows theme selection box";
+$modversion['blocks'][12]['show_func'] = "b_system_themes_show";
+$modversion['blocks'][12]['options'] = "0|80";
+$modversion['blocks'][12]['edit_func'] = "b_system_themes_edit";
+$modversion['blocks'][12]['template'] = 'system_block_themes.html';
+
+// Menu
+$modversion['hasMain'] = 0;
+?>


Property changes on: XoopsCore/trunk/htdocs/modules/system/xoops_version.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/notifications.php
===================================================================
--- XoopsCore/trunk/htdocs/notifications.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/notifications.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,216 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$xoopsOption['pagetype'] = 'notification';
+include 'mainfile.php';
+
+if (empty($xoopsUser)) {
+    redirect_header('index.php', 3, _NOT_NOACCESS);
+    exit();
+}
+
+$uid = $xoopsUser->getVar('uid');
+
+$op = 'list';
+
+if (isset($_POST['op'])) {
+    $op = trim($_POST['op']);
+} elseif (isset($_GET['op'])) {
+    $op = trim($_GET['op']);
+}
+if (isset($_POST['delete'])) {
+    $op = 'delete';
+} elseif (isset($_GET['delete'])) {
+    $op = 'delete';
+}
+if (isset($_POST['delete_ok'])) {
+    $op = 'delete_ok';
+}
+if (isset($_POST['delete_cancel'])) {
+    $op = 'cancel';
+}
+
+switch ($op) {
+
+case 'cancel':
+
+    // FIXME: does this always go back to correct location??
+    redirect_header ('index.php');
+    break;
+
+case 'list':
+
+// Do we allow other users to see our notifications?  Nope, but maybe
+// see who else is monitoring a particular item (or at least how many)?
+// Well, maybe admin can see all...
+
+// TODO: need to span over multiple pages...???
+
+    // Get an array of all notifications for the selected user
+
+    $criteria = new Criteria ('not_uid', $uid);
+    $criteria->setSort ('not_modid,not_category,not_itemid');
+    $notification_handler =& xoops_gethandler('notification');
+    $notifications =& $notification_handler->getObjects($criteria);
+
+    // Generate the info for the template
+
+    $module_handler =& xoops_gethandler('module');
+    include_once XOOPS_ROOT_PATH . '/include/notification_functions.php';
+
+    $modules = array();
+    $prev_modid = -1;
+    $prev_category = -1;
+    $prev_item = -1;
+    foreach ($notifications as $n) {
+        $modid = $n->getVar('not_modid');
+        if ($modid != $prev_modid) {
+            $prev_modid = $modid;
+            $prev_category = -1;
+            $prev_item = -1;
+            $module =& $module_handler->get($modid);
+            $modules[$modid] = array ('id'=>$modid, 'name'=>$module->getVar('name'), 'categories'=>array());
+            // TODO: note, we could auto-generate the url from the id
+            // and category info... (except when category has multiple
+            // subscription scripts defined...)
+            // OR, add one more option to xoops_version 'view_from'
+            // which tells us where to redirect... BUT, e.g. forums, it
+            // still wouldn't give us all the required info... e.g. the
+            // topic ID doesn't give us the ID of the forum which is
+            // a required argument...
+
+            // Get the lookup function, if exists
+            $not_config = $module->getInfo('notification');
+            $lookup_func = '';
+            if (!empty($not_config['lookup_file'])) {
+                $lookup_file = XOOPS_ROOT_PATH . '/modules/' . $module->getVar('dirname') . '/' . $not_config['lookup_file'];
+                if (file_exists($lookup_file)) {
+                    include_once $lookup_file;
+                    if (!empty($not_config['lookup_func']) && function_exists($not_config['lookup_func'])) {
+                        $lookup_func = $not_config['lookup_func'];
+                    }
+                }
+            }
+        }
+        $category = $n->getVar('not_category');
+        if ($category != $prev_category) {
+            $prev_category = $category;
+            $prev_item = -1;
+            $category_info =& notificationCategoryInfo($category, $modid);
+            $modules[$modid]['categories'][$category] = array ('name'=>$category, 'title'=>$category_info['title'], 'items'=>array());
+        }
+        $item = $n->getVar('not_itemid');
+        if ($item != $prev_item) {
+            $prev_item = $item;
+            if (!empty($lookup_func)) {
+                $item_info = $lookup_func($category, $item);
+            } else {
+                $item_info = array ('name'=>'['._NOT_NAMENOTAVAILABLE.']', 'url'=>'');
+            }
+            $modules[$modid]['categories'][$category]['items'][$item] = array ('id'=>$item, 'name'=>$item_info['name'], 'url'=>$item_info['url'], 'notifications'=>array());
+        }
+        $event_info =& notificationEventInfo($category, $n->getVar('not_event'), $n->getVar('not_modid'));
+        $modules[$modid]['categories'][$category]['items'][$item]['notifications'][] = array ('id'=>$n->getVar('not_id'), 'module_id'=>$n->getVar('not_modid'), 'category'=>$n->getVar('not_category'), 'category_title'=>$category_info['title'], 'item_id'=>$n->getVar('not_itemid'), 'event'=>$n->getVar('not_event'), 'event_title'=>$event_info['title'], 'user_id'=>$n->getVar('not_uid'));
+    }
+    $xoopsOption['template_main'] = 'system_notification_list.html';
+    include XOOPS_ROOT_PATH.'/header.php';
+    $xoopsTpl->assign ('modules', $modules);
+    $user_info = array ('uid' => $xoopsUser->getVar('uid'));
+    $xoopsTpl->assign ('user', $user_info);
+    $xoopsTpl->assign ('lang_cancel', _CANCEL);
+    $xoopsTpl->assign ('lang_clear', _NOT_CLEAR);
+    $xoopsTpl->assign ('lang_delete', _DELETE);
+    $xoopsTpl->assign ('lang_checkall', _NOT_CHECKALL);
+    $xoopsTpl->assign ('lang_module', _NOT_MODULE);
+    $xoopsTpl->assign ('lang_event', _NOT_EVENT);
+    $xoopsTpl->assign ('lang_events', _NOT_EVENTS);
+    $xoopsTpl->assign ('lang_category', _NOT_CATEGORY);
+    $xoopsTpl->assign ('lang_itemid', _NOT_ITEMID);
+    $xoopsTpl->assign ('lang_itemname', _NOT_ITEMNAME);
+    $xoopsTpl->assign ('lang_activenotifications', _NOT_ACTIVENOTIFICATIONS);
+    $xoopsTpl->assign ('notification_token', $GLOBALS['xoopsSecurity']->createToken());
+    include XOOPS_ROOT_PATH.'/footer.php';
+
+// TODO: another display mode... instead of one notification per line,
+// show one line per item_id, with checkboxes for the available options...
+// and an update button to change them...  And still have the delete box
+// to delete all notification for that item
+
+// How about one line per ID, showing category, name, id, and list of
+// events...
+
+// TODO: it would also be useful to provide links to other available
+// options so we can say switch from new_message to 'bookmark' if we
+// are receiving too many emails.  OR, if we click on 'change options'
+// we get a form for that page...
+
+// TODO: option to specify one-time??? or other modes??
+
+    break;
+
+//case 'delete':
+case 'delete_ok':
+
+    if (empty($_POST['del_not'])) {
+        redirect_header('notifications.php', 2, _NOT_NOTHINGTODELETE);
+    }
+    include XOOPS_ROOT_PATH.'/header.php';
+    $hidden_vars = array('uid'=>$uid, 'delete_ok'=>1, 'del_not'=>$_POST['del_not']);
+    print '<h4>'._NOT_DELETINGNOTIFICATIONS.'</h4>';
+    xoops_confirm($hidden_vars, xoops_getenv('PHP_SELF'), _NOT_RUSUREDEL);
+    include XOOPS_ROOT_PATH.'/footer.php';
+
+// FIXME: There is a problem here... in xoops_confirm it treats arrays as
+// optional radio arguments on the confirmation page... change this or
+// write new function...
+
+    break;
+
+//case 'delete_ok':
+case 'delete':
+    if (!$GLOBALS['xoopsSecurity']->check()) {
+        redirect_header('notifications.php', 2, implode('<br />', $GLOBALS['xoopsSecurity']->getErrors()));
+    }
+    if (empty($_POST['del_not'])) {
+        redirect_header('notifications.php', 2, _NOT_NOTHINGTODELETE);
+    }
+    $notification_handler =& xoops_gethandler('notification');
+    foreach ($_POST['del_not'] as $n_array) {
+        foreach ($n_array as $n) {
+            $notification =& $notification_handler->get($n);
+            if ($notification->getVar('not_uid') == $uid) {
+                $notification_handler->delete($notification);
+            }
+        }
+    }
+    redirect_header('notifications.php', 2, _NOT_DELETESUCCESS);
+    break;
+default:
+    break;
+}
+
+?>


Property changes on: XoopsCore/trunk/htdocs/notifications.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/pda.php
===================================================================
--- XoopsCore/trunk/htdocs/pda.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/pda.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,56 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+include "mainfile.php";
+header("Content-Type: text/html");
+
+echo "<html><head><title>". htmlspecialchars($xoopsConfig['sitename'])."</title>
+      <meta name='HandheldFriendly' content='True' />
+      <meta name='PalmComputingPlatform' content='True' />
+      </head>
+      <body>";
+
+$sql = "SELECT storyid, title FROM ".$xoopsDB->prefix("stories")." WHERE published>0 AND published<".time()." ORDER BY published DESC";
+
+$result = $xoopsDB->query($sql,10,0);
+
+if (!$result) {
+    echo "An error occured";
+} else {
+    echo "<img src='images/logo.gif' alt='".htmlspecialchars($xoopsConfig['sitename'], ENT_QUOTES)."' border='0' /><br />";
+    echo "<h2>".htmlspecialchars($xoopsConfig['slogan'])."</h2>";
+    echo "<div>";
+    while (list($storyid, $title) = $xoopsDB->fetchRow($result)) {
+        echo "<a href='".XOOPS_URL."/modules/news/print.php?storyid=$storyid'>".htmlspecialchars($title)."</a><br />";
+
+    }
+    echo "</div>";
+}
+
+echo "</body></html>";
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/pda.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/pmlite.php
===================================================================
--- XoopsCore/trunk/htdocs/pmlite.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/pmlite.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,141 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$xoopsOption['pagetype'] = "pmsg";
+
+include "mainfile.php";
+$reply = !empty($_GET['reply']) ? 1 : 0;
+$send = !empty($_GET['send']) ? 1 : 0;
+$send2 = !empty($_GET['send2']) ? 1 : 0;
+$to_userid = !empty($_GET['to_userid']) ? intval($_GET['to_userid']) : 0;
+$msg_id = !empty($_GET['msg_id']) ? intval($_GET['msg_id']) : 0;
+if ( empty($_GET['refresh'] ) && isset($_POST['op']) && $_POST['op'] != "submit" ) {
+    $jump = "pmlite.php?refresh=".time()."";
+    if ( $send == 1 ) {
+        $jump .= "&amp;send=".$send."";
+    } elseif ( $send2 == 1 ) {
+        $jump .= "&amp;send2=".$send2."&amp;to_userid=".$to_userid."";
+    } elseif ( $reply == 1 ) {
+        $jump .= "&amp;reply=".$reply."&amp;msg_id=".$msg_id."";
+    } else {
+    }
+    echo "<html><head><meta http-equiv='Refresh' content='0; url=".$jump."' /></head><body></body></html>";
+    exit();
+}
+xoops_header();
+if ($xoopsUser) {
+    $myts =& MyTextSanitizer::getInstance();
+    if (isset($_POST['op']) && $_POST['op'] == "submit") {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            $security_error = true;
+        }
+        $res = $xoopsDB->query("SELECT COUNT(*) FROM ".$xoopsDB->prefix("users")." WHERE uid=".intval($_POST['to_userid'])."");
+        list($count) = $xoopsDB->fetchRow($res);
+        if ($count != 1) {
+            echo "<br /><br /><div><h4>"._PM_USERNOEXIST."<br />";
+            echo _PM_PLZTRYAGAIN."</h4><br />";
+            if (isset($security_error) && $security_error == true) {
+                echo implode('<br />', $GLOBALS['xoopsSecurity']->getErrors());
+            }
+            echo "[ <a href='javascript:history.go(-1)'>"._PM_GOBACK."</a> ]</div>";
+        } else {
+            $pm_handler =& xoops_gethandler('privmessage');
+            $pm =& $pm_handler->create();
+            $pm->setVar("subject", $_POST['subject']);
+            $pm->setVar("msg_text", $_POST['message']);
+            $pm->setVar("to_userid", $_POST['to_userid']);
+            $pm->setVar("from_userid", $xoopsUser->getVar("uid"));
+            if (!$pm_handler->insert($pm)) {
+                echo $pm->getHtmlErrors();
+                echo "<br /><a href='javascript:history.go(-1)'>"._PM_GOBACK."</a>";
+            } else {
+                echo "<br /><br /><div style='text-align:center;'><h4>"._PM_MESSAGEPOSTED."</h4><br /><a href=\"javascript:window.opener.location='".XOOPS_URL."/viewpmsg.php';window.close();\">"._PM_CLICKHERE."</a><br /><br /><a href=\"javascript:window.close();\">"._PM_ORCLOSEWINDOW."</a></div>";
+            }
+        }
+    } elseif ($reply == 1 || $send == 1 || $send2 == 1) {
+        include_once XOOPS_ROOT_PATH."/include/xoopscodes.php";
+        if ($reply == 1) {
+            $pm_handler =& xoops_gethandler('privmessage');
+            $pm =& $pm_handler->get($msg_id);
+            if ($pm->getVar("to_userid") == $xoopsUser->getVar('uid')) {
+                $pm_uname = XoopsUser::getUnameFromId($pm->getVar("from_userid"));
+                $message  = "[quote]\n";
+                $message .= sprintf(_PM_USERWROTE,$pm_uname);
+                $message .= "\n".$pm->getVar("msg_text", "E")."\n[/quote]";
+            } else {
+                unset($pm);
+                $reply = $send2 = 0;
+            }
+        }
+        echo "<form action='pmlite.php' method='post' name='coolsus'>\n";
+            echo "<table width='300' align='center' class='outer'><tr><td class='head' width='25%'>"._PM_TO."</td>";
+        if ( $reply == 1 ) {
+            echo "<td class='even'><input type='hidden' name='to_userid' value='".$pm->getVar("from_userid")."' />".$pm_uname."</td>";
+        } elseif ( $send2 == 1 ) {
+            $to_username = XoopsUser::getUnameFromId($to_userid);
+            echo "<td class='even'><input type='hidden' name='to_userid' value='".$to_userid."' />".$to_username."</td>";
+        } else {
+            echo "<td class='even'><select name='to_userid'>";
+            $result = $xoopsDB->query("SELECT uid, uname FROM ".$xoopsDB->prefix("users")." WHERE level > 0 ORDER BY uname");
+            while ( list($ftouid, $ftouname) = $xoopsDB->fetchRow($result) ) {
+                echo "<option value='".$ftouid."'>".$myts->makeTboxData4Show($ftouname)."</option>";
+            }
+            echo "</select></td>";
+        }
+        echo "</tr>";
+        echo "<tr><td class='head' width='25%'>"._PM_SUBJECTC."</td>";
+        if ( $reply == 1 ) {
+            $subject = $pm->getVar('subject', 'E');
+            if (!preg_match("/^Re:/i",$subject)) {
+                $subject = 'Re: '.$subject;
+            }
+            echo "<td class='even'><input type='text' name='subject' value='".$subject."' size='30' maxlength='100' /></td>";
+        } else {
+            echo "<td class='even'><input type='text' name='subject' size='30' maxlength='100' /></td>";
+        }
+        echo "</tr>";
+        echo "<tr valign='top'><td class='head' width='25%'>"._PM_MESSAGEC."</td>";
+        echo "<td class='even'>";
+        xoopsCodeTarea("message",37,8);
+        xoopsSmilies("message");
+        echo "</td>";
+        echo "</tr>";
+        echo "<tr><td class='head'>&nbsp;</td><td class='even'>
+        <input type='hidden' name='op' value='submit' />".$GLOBALS['xoopsSecurity']->getTokenHTML()."
+        <input type='submit' class='formButton' name='submit' value='"._PM_SUBMIT."' />&nbsp;
+        <input type='reset' class='formButton' value='"._PM_CLEAR."' />
+        &nbsp;<input type='button' class='formButton' name='cancel' value='"._PM_CANCELSEND."' onclick='javascript:window.close();' />
+        </td></tr></table>\n";
+        echo "</form>\n";
+    }
+} else {
+    echo _PM_SORRY."<br /><br /><a href='".XOOPS_URL."/register.php'>"._PM_REGISTERNOW."</a>.";
+}
+
+xoops_footer();
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/pmlite.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/readpmsg.php
===================================================================
--- XoopsCore/trunk/htdocs/readpmsg.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/readpmsg.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,112 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$xoopsOption['pagetype'] = "pmsg";
+include_once "mainfile.php";
+
+if ( !is_object($xoopsUser) ) {
+    redirect_header("user.php",0);
+    exit();
+} else {
+    $pm_handler =& xoops_gethandler('privmessage');
+    if ( !empty($_POST['delete']) ) {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            echo implode('<br />', $GLOBALS['xoopsSecurity']->getErrors());
+            exit();
+        }
+        $pm =& $pm_handler->get(intval($_POST['msg_id']));
+        if (!is_object($pm) || $pm->getVar('to_userid') != $xoopsUser->getVar('uid') || !$pm_handler->delete($pm)) {
+            exit();
+        } else {
+            redirect_header("viewpmsg.php",1,_PM_DELETED);
+            exit();
+        }
+    }
+    $start = !empty($_GET['start']) ? intval($_GET['start']) : 0;
+    $total_messages = !empty($_GET['total_messages']) ? intval($_GET['total_messages']) : 0;
+    include XOOPS_ROOT_PATH.'/header.php';
+    $criteria = new Criteria('to_userid', $xoopsUser->getVar('uid'));
+    $criteria->setLimit(1);
+    $criteria->setStart($start);
+    $criteria->setSort('msg_time');
+    $pm_arr =& $pm_handler->getObjects($criteria);
+    echo "<div><h4>". _PM_PRIVATEMESSAGE."</h4></div><br /><a href='userinfo.php?uid=". $xoopsUser->getVar("uid") ."'>". _PM_PROFILE ."</a>&nbsp;<span style='font-weight:bold;'>&raquo;&raquo;</span>&nbsp;<a href='viewpmsg.php'>". _PM_INBOX ."</a>&nbsp;<span style='font-weight:bold;'>&raquo;&raquo;</span>&nbsp;\n";
+    if (empty($pm_arr)) {
+        echo '<br /><br />'._PM_YOUDONTHAVE;
+    } else {
+        if (!$pm_handler->setRead($pm_arr[0])) {
+            //echo "failed";
+        }
+        echo $pm_arr[0]->getVar("subject")."<br /><form action='readpmsg.php' method='post' name='delete".$pm_arr[0]->getVar("msg_id")."'><table border='0' cellpadding='4' cellspacing='1' class='outer' width='100%'><tr><th colspan='2'>". _PM_FROM ."</th></tr><tr class='even'>\n";
+        $poster = new XoopsUser($pm_arr[0]->getVar("from_userid"));
+        if ( !$poster->isActive() ) {
+            $poster = false;
+        }
+        echo "<td valign='top'>";
+        if ( $poster != false ) { // we need to do this for deleted users
+                echo "<a href='userinfo.php?uid=".$poster->getVar("uid")."'>".$poster->getVar("uname")."</a><br />\n";
+            if ( $poster->getVar("user_avatar") != "" ) {
+                echo "<img src='uploads/".$poster->getVar("user_avatar")."' alt='' /><br />\n";
+            }
+            if ( $poster->getVar("user_from") != "" ) {
+                echo _PM_FROMC."".$poster->getVar("user_from")."<br /><br />\n";
+            }
+            if ( $poster->isOnline() ) {
+            echo "<span style='color:#ee0000;font-weight:bold;'>"._PM_ONLINE."</span><br /><br />\n";
+            }
+        } else {
+            echo $xoopsConfig['anonymous']; // we need to do this for deleted users
+        }
+        echo "</td><td><img src='images/subject/".$pm_arr[0]->getVar("msg_image", "E")."' alt='' />&nbsp;"._PM_SENTC."".formatTimestamp($pm_arr[0]->getVar("msg_time"));
+        echo "<hr /><b>".$pm_arr[0]->getVar("subject")."</b><br /><br />\n";
+        echo $pm_arr[0]->getVar("msg_text") . "<br /><br /></td></tr><tr class='foot'><td width='20%' colspan='2' align='left'>";
+        // we dont want to reply to a deleted user!
+        if ( $poster != false ) {
+            echo "<a href='#' onclick='javascript:openWithSelfMain(\"".XOOPS_URL."/pmlite.php?reply=1&amp;msg_id=".$pm_arr[0]->getVar("msg_id")."\",\"pmlite\",450,380);'><img src='".XOOPS_URL."/images/icons/reply.gif' alt='"._PM_REPLY."' /></a>\n";
+        }
+        echo "<input type='hidden' name='delete' value='1' />";
+        echo $GLOBALS['xoopsSecurity']->getTokenHTML();
+        echo "<input type='hidden' name='msg_id' value='".$pm_arr[0]->getVar("msg_id")."' />";
+        echo "<a href='#".$pm_arr[0]->getVar("msg_id")."' onclick='javascript:document.delete".$pm_arr[0]->getVar("msg_id").".submit();'><img src='".XOOPS_URL."/images/icons/delete.gif' alt='"._PM_DELETE."' /></a>";
+        echo "</td></tr><tr><td colspan='2' align='right'>";
+        $previous = $start - 1;
+            $next = $start + 1;
+            if ( $previous >= 0 ) {
+            echo "<a href='readpmsg.php?start=".$previous."&amp;total_messages=".$total_messages."'>"._PM_PREVIOUS."</a> | ";
+        } else {
+            echo _PM_PREVIOUS." | ";
+        }
+        if ( $next < $total_messages ) {
+            echo "<a href='readpmsg.php?start=".$next."&amp;total_messages=".$total_messages."'>"._PM_NEXT."</a>";
+        } else {
+            echo _PM_NEXT;
+        }
+        echo "</td></tr></table></form>\n";
+    }
+    include "footer.php";
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/readpmsg.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/register.php
===================================================================
--- XoopsCore/trunk/htdocs/register.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/register.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,273 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$xoopsOption['pagetype'] = 'user';
+
+include 'mainfile.php';
+$myts =& MyTextSanitizer::getInstance();
+
+$config_handler =& xoops_gethandler('config');
+$xoopsConfigUser =& $config_handler->getConfigsByCat(XOOPS_CONF_USER);
+
+if (empty($xoopsConfigUser['allow_register'])) {
+	redirect_header('index.php', 6, _US_NOREGISTER);
+	exit();
+}
+
+function userCheck($uname, $email, $pass, $vpass)
+{
+	global $xoopsConfigUser;
+	$xoopsDB =& Database::getInstance();
+	$myts =& MyTextSanitizer::getInstance();
+	$stop = '';
+	if (!checkEmail($email)) {
+		$stop .= _US_INVALIDMAIL.'<br />';
+	}
+	foreach ($xoopsConfigUser['bad_emails'] as $be) {
+		if (!empty($be) && preg_match("/".$be."/i", $email)) {
+			$stop .= _US_INVALIDMAIL.'<br />';
+			break;
+		}
+	}
+	if (strrpos($email,' ') > 0) {
+		$stop .= _US_EMAILNOSPACES.'<br />';
+	}
+	$uname = xoops_trim($uname);
+	switch ($xoopsConfigUser['uname_test_level']) {
+	case 0:
+		// strict
+		$restriction = '/[^a-zA-Z0-9\_\-]/';
+		break;
+	case 1:
+		// medium
+		$restriction = '/[^a-zA-Z0-9\_\-\<\>\,\.\$\%\#\@\!\\\'\"]/';
+		break;
+	case 2:
+		// loose
+		$restriction = '/[\000-\040]/';
+		break;
+	}
+	if (empty($uname) || preg_match($restriction, $uname)) {
+		$stop .= _US_INVALIDNICKNAME."<br />";
+	}
+	if (strlen($uname) > $xoopsConfigUser['maxuname']) {
+		$stop .= sprintf(_US_NICKNAMETOOLONG, $xoopsConfigUser['maxuname'])."<br />";
+	}
+	if (strlen($uname) < $xoopsConfigUser['minuname']) {
+		$stop .= sprintf(_US_NICKNAMETOOSHORT, $xoopsConfigUser['minuname'])."<br />";
+	}
+	foreach ($xoopsConfigUser['bad_unames'] as $bu) {
+		if (!empty($bu) && preg_match("/".$bu."/i", $uname)) {
+			$stop .= _US_NAMERESERVED."<br />";
+			break;
+		}
+	}
+	if (strrpos($uname, ' ') > 0) {
+		$stop .= _US_NICKNAMENOSPACES."<br />";
+	}
+	$sql = sprintf('SELECT COUNT(*) FROM %s WHERE uname = %s', $xoopsDB->prefix('users'), $xoopsDB->quoteString(addslashes($uname)));
+	$result = $xoopsDB->query($sql);
+	list($count) = $xoopsDB->fetchRow($result);
+	if ($count > 0) {
+		$stop .= _US_NICKNAMETAKEN."<br />";
+	}
+	$count = 0;
+	if ( $email ) {
+		$sql = sprintf('SELECT COUNT(*) FROM %s WHERE email = %s', $xoopsDB->prefix('users'), $xoopsDB->quoteString(addslashes($email)));
+		$result = $xoopsDB->query($sql);
+		list($count) = $xoopsDB->fetchRow($result);
+		if ( $count > 0 ) {
+			$stop .= _US_EMAILTAKEN."<br />";
+		}
+	}
+	if ( !isset($pass) || $pass == '' || !isset($vpass) || $vpass == '' ) {
+		$stop .= _US_ENTERPWD.'<br />';
+	}
+	if ( (isset($pass)) && ($pass != $vpass) ) {
+		$stop .= _US_PASSNOTSAME.'<br />';
+	} elseif ( ($pass != '') && (strlen($pass) < $xoopsConfigUser['minpass']) ) {
+		$stop .= sprintf(_US_PWDTOOSHORT,$xoopsConfigUser['minpass'])."<br />";
+	}
+	return $stop;
+}
+$op = !isset($_POST['op']) ? 'register' : $_POST['op'];
+$uname = isset($_POST['uname']) ? $myts->stripSlashesGPC($_POST['uname']) : '';
+$email = isset($_POST['email']) ? trim($myts->stripSlashesGPC($_POST['email'])) : '';
+$url = isset($_POST['url']) ? trim($myts->stripSlashesGPC($_POST['url'])) : '';
+$pass = isset($_POST['pass']) ? $myts->stripSlashesGPC($_POST['pass']) : '';
+$vpass = isset($_POST['vpass']) ? $myts->stripSlashesGPC($_POST['vpass']) : '';
+$timezone_offset = isset($_POST['timezone_offset']) ? intval($_POST['timezone_offset']) : $xoopsConfig['default_TZ'];
+$user_viewemail = (isset($_POST['user_viewemail']) && intval($_POST['user_viewemail'])) ? 1 : 0;
+$user_mailok = (isset($_POST['user_mailok']) && intval($_POST['user_mailok'])) ? 1 : 0;
+$agree_disc = (isset($_POST['agree_disc']) && intval($_POST['agree_disc'])) ? 1 : 0;
+switch ( $op ) {
+case 'newuser':
+	if (!$GLOBALS['xoopsSecurity']->check()) {
+	    echo implode('<br />', $GLOBALS['xoopsSecurity']->getErrors());
+		exit();
+	}
+	include 'header.php';
+	$stop = '';
+	if ($xoopsConfigUser['reg_dispdsclmr'] != 0 && $xoopsConfigUser['reg_disclaimer'] != '') {
+		if (empty($agree_disc)) {
+			$stop .= _US_UNEEDAGREE.'<br />';
+		}
+	}
+	$stop .= userCheck($uname, $email, $pass, $vpass);
+	if (empty($stop)) {
+		echo _US_USERNAME.": ".$myts->htmlSpecialChars($uname)."<br />";
+		echo _US_EMAIL.": ".$myts->htmlSpecialChars($email)."<br />";
+		if ($url != '') {
+			$url = formatURL($url);
+			echo _US_WEBSITE.': '.$myts->htmlSpecialChars($url).'<br />';
+		}
+		$f_timezone = ($timezone_offset < 0) ? 'GMT '.$timezone_offset : 'GMT +'.$timezone_offset;
+		echo _US_TIMEZONE.": $f_timezone<br />";
+		echo "<form action='register.php' method='post'>
+		<input type='hidden' name='uname' value='".$myts->htmlSpecialChars($uname)."' />
+		<input type='hidden' name='email' value='".$myts->htmlSpecialChars($email)."' />";
+		echo "<input type='hidden' name='user_viewemail' value='".$user_viewemail."' />
+		<input type='hidden' name='timezone_offset' value='".(float)$timezone_offset."' />
+		<input type='hidden' name='url' value='".$myts->htmlSpecialChars($url)."' />
+		<input type='hidden' name='pass' value='".$myts->htmlSpecialChars($pass)."' />
+		<input type='hidden' name='vpass' value='".$myts->htmlSpecialChars($vpass)."' />
+		<input type='hidden' name='user_mailok' value='".$user_mailok."' />
+		<br /><br /><input type='hidden' name='op' value='finish' />".$GLOBALS['xoopsSecurity']->getTokenHTML()."<input type='submit' value='". _US_FINISH ."' /></form>";
+	} else {
+		echo "<span style='color:#ff0000;'>$stop</span>";
+		include 'include/registerform.php';
+		$reg_form->display();
+	}
+	include 'footer.php';
+	break;
+case 'finish':
+	if (!$GLOBALS['xoopsSecurity']->check()) {
+	    echo implode('<br />', $GLOBALS['xoopsSecurity']->getErrors());
+		exit();
+	}
+	include 'header.php';
+	$stop = userCheck($uname, $email, $pass, $vpass);
+	if ( empty($stop) ) {
+		$member_handler =& xoops_gethandler('member');
+		$newuser =& $member_handler->createUser();
+		$newuser->setVar('user_viewemail',$user_viewemail, true);
+		$newuser->setVar('uname', $uname, true);
+		$newuser->setVar('email', $email, true);
+		if ($url != '') {
+			$newuser->setVar('url', formatURL($url), true);
+		}
+		$newuser->setVar('user_avatar','blank.gif', true);
+		$actkey = substr(md5(uniqid(mt_rand(), 1)), 0, 8);
+		$newuser->setVar('actkey', $actkey, true);
+		$newuser->setVar('pass', md5($pass), true);
+		$newuser->setVar('timezone_offset', $timezone_offset, true);
+		$newuser->setVar('user_regdate', time(), true);
+		$newuser->setVar('uorder',$xoopsConfig['com_order'], true);
+		$newuser->setVar('umode',$xoopsConfig['com_mode'], true);
+		$newuser->setVar('user_mailok',$user_mailok, true);
+		if ($xoopsConfigUser['activation_type'] == 1) {
+			$newuser->setVar('level', 1, true);
+		}
+		if (!$member_handler->insertUser($newuser)) {
+			echo _US_REGISTERNG;
+			include 'footer.php';
+			exit();
+		}
+		$newid = $newuser->getVar('uid');
+		if (!$member_handler->addUserToGroup(XOOPS_GROUP_USERS, $newid)) {
+			echo _US_REGISTERNG;
+			include 'footer.php';
+			exit();
+		}
+		if ($xoopsConfigUser['activation_type'] == 1) {
+			redirect_header('index.php', 4, _US_ACTLOGIN);
+			exit();
+		}
+		if ($xoopsConfigUser['activation_type'] == 0) {
+			$xoopsMailer =& getMailer();
+			$xoopsMailer->useMail();
+			$xoopsMailer->setTemplate('register.tpl');
+			$xoopsMailer->assign('SITENAME', $xoopsConfig['sitename']);
+			$xoopsMailer->assign('ADMINMAIL', $xoopsConfig['adminmail']);
+			$xoopsMailer->assign('SITEURL', XOOPS_URL."/");
+			$xoopsMailer->setToUsers(new XoopsUser($newid));
+			$xoopsMailer->setFromEmail($xoopsConfig['adminmail']);
+			$xoopsMailer->setFromName($xoopsConfig['sitename']);
+			$xoopsMailer->setSubject(sprintf(_US_USERKEYFOR, $uname));
+			if ( !$xoopsMailer->send() ) {
+				echo _US_YOURREGMAILNG;
+			} else {
+				echo _US_YOURREGISTERED;
+			}
+		} elseif ($xoopsConfigUser['activation_type'] == 2) {
+			$xoopsMailer =& getMailer();
+			$xoopsMailer->useMail();
+			$xoopsMailer->setTemplate('adminactivate.tpl');
+			$xoopsMailer->assign('USERNAME', $uname);
+			$xoopsMailer->assign('USEREMAIL', $email);
+			$xoopsMailer->assign('USERACTLINK', XOOPS_URL.'/user.php?op=actv&id='.$newid.'&actkey='.$actkey);
+			$xoopsMailer->assign('SITENAME', $xoopsConfig['sitename']);
+			$xoopsMailer->assign('ADMINMAIL', $xoopsConfig['adminmail']);
+			$xoopsMailer->assign('SITEURL', XOOPS_URL."/");
+			$member_handler =& xoops_gethandler('member');
+			$xoopsMailer->setToGroups($member_handler->getGroup($xoopsConfigUser['activation_group']));
+			$xoopsMailer->setFromEmail($xoopsConfig['adminmail']);
+			$xoopsMailer->setFromName($xoopsConfig['sitename']);
+			$xoopsMailer->setSubject(sprintf(_US_USERKEYFOR, $uname));
+			if ( !$xoopsMailer->send() ) {
+				echo _US_YOURREGMAILNG;
+			} else {
+				echo _US_YOURREGISTERED2;
+			}
+		}
+		if ($xoopsConfigUser['new_user_notify'] == 1 && !empty($xoopsConfigUser['new_user_notify_group'])) {
+			$xoopsMailer =& getMailer();
+			$xoopsMailer->useMail();
+			$member_handler =& xoops_gethandler('member');
+			$xoopsMailer->setToGroups($member_handler->getGroup($xoopsConfigUser['new_user_notify_group']));
+			$xoopsMailer->setFromEmail($xoopsConfig['adminmail']);
+			$xoopsMailer->setFromName($xoopsConfig['sitename']);
+			$xoopsMailer->setSubject(sprintf(_US_NEWUSERREGAT,$xoopsConfig['sitename']));
+			$xoopsMailer->setBody(sprintf(_US_HASJUSTREG, $uname));
+			$xoopsMailer->send();
+		}
+	} else {
+		echo "<span style='color:#ff0000; font-weight:bold;'>$stop</span>";
+		include 'include/registerform.php';
+		$reg_form->display();
+	}
+	include 'footer.php';
+	break;
+case 'register':
+default:
+	include 'header.php';
+	include 'include/registerform.php';
+	$reg_form->display();
+	include 'footer.php';
+	break;
+}
+?>


Property changes on: XoopsCore/trunk/htdocs/register.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/search.php
===================================================================
--- XoopsCore/trunk/htdocs/search.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/search.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,295 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$xoopsOption['pagetype'] = "search";
+
+include 'mainfile.php';
+$config_handler =& xoops_gethandler('config');
+$xoopsConfigSearch =& $config_handler->getConfigsByCat(XOOPS_CONF_SEARCH);
+
+if ($xoopsConfigSearch['enable_search'] != 1) {
+    header('Location: '.XOOPS_URL.'/index.php');
+    exit();
+}
+$action = "search";
+if (!empty($_GET['action'])) {
+  $action = $_GET['action'];
+} elseif (!empty($_POST['action'])) {
+  $action = $_POST['action'];
+}
+$query = "";
+if (!empty($_GET['query'])) {
+  $query = $_GET['query'];
+} elseif (!empty($_POST['query'])) {
+  $query = $_POST['query'];
+}
+$andor = "AND";
+if (!empty($_GET['andor'])) {
+  $andor = $_GET['andor'];
+} elseif (!empty($_POST['andor'])) {
+  $andor = $_POST['andor'];
+}
+$mid = $uid = $start = 0;
+if ( !empty($_GET['mid']) ) {
+  $mid = intval($_GET['mid']);
+} elseif ( !empty($_POST['mid']) ) {
+  $mid = intval($_POST['mid']);
+}
+if (!empty($_GET['uid'])) {
+  $uid = intval($_GET['uid']);
+} elseif (!empty($_POST['uid'])) {
+  $uid = intval($_POST['uid']);
+}
+if (!empty($_GET['start'])) {
+  $start = intval($_GET['start']);
+} elseif (!empty($_POST['start'])) {
+  $start = intval($_POST['start']);
+}
+
+$queries = array();
+
+if ($action == "results") {
+    if ($query == "") {
+         redirect_header("search.php",1,_SR_PLZENTER);
+        exit();
+    }
+} elseif ($action == "showall") {
+    if ($query == "" || empty($mid)) {
+        redirect_header("search.php",1,_SR_PLZENTER);
+        exit();
+    }
+} elseif ($action == "showallbyuser") {
+    if (empty($mid) || empty($uid)) {
+        redirect_header("search.php",1,_SR_PLZENTER);
+        exit();
+    }
+}
+
+$groups = ( $xoopsUser ) ? $xoopsUser -> getGroups() : XOOPS_GROUP_ANONYMOUS;
+$gperm_handler = & xoops_gethandler( 'groupperm' );
+$available_modules = $gperm_handler->getItemIds('module_read', $groups);
+
+if ($action == 'search') {
+    include XOOPS_ROOT_PATH.'/header.php';
+    include 'include/searchform.php';
+    $search_form->display();
+    include XOOPS_ROOT_PATH.'/footer.php';
+    exit();
+}
+
+if ( $andor != "OR" && $andor != "exact" && $andor != "AND" ) {
+    $andor = "AND";
+}
+
+$myts =& MyTextSanitizer::getInstance();
+if ($action != 'showallbyuser') {
+    if ( $andor != "exact" ) {
+        $ignored_queries = array(); // holds kewords that are shorter than allowed minmum length
+        $temp_queries = preg_split('/[\s,]+/', $query);
+        foreach ($temp_queries as $q) {
+            $q = trim($q);
+            if (strlen($q) >= $xoopsConfigSearch['keyword_min']) {
+                $queries[] = $myts->addSlashes($q);
+            } else {
+                $ignored_queries[] = $myts->addSlashes($q);
+            }
+        }
+        if (count($queries) == 0) {
+            redirect_header('search.php', 2, sprintf(_SR_KEYTOOSHORT, $xoopsConfigSearch['keyword_min']));
+            exit();
+        }
+    } else {
+        $query = trim($query);
+        if (strlen($query) < $xoopsConfigSearch['keyword_min']) {
+            redirect_header('search.php', 2, sprintf(_SR_KEYTOOSHORT, $xoopsConfigSearch['keyword_min']));
+            exit();
+        }
+        $queries = array($myts->addSlashes($query));
+    }
+}
+switch ($action) {
+    case "results":
+    $module_handler =& xoops_gethandler('module');
+    $criteria = new CriteriaCompo(new Criteria('hassearch', 1));
+    $criteria->add(new Criteria('isactive', 1));
+    $criteria->add(new Criteria('mid', "(".implode(',', $available_modules).")", 'IN'));
+    $modules =& $module_handler->getObjects($criteria, true);
+    $mids = isset($_REQUEST['mids']) ? $_REQUEST['mids'] : array();
+    if (empty($mids) || !is_array($mids)) {
+        unset($mids);
+        $mids = array_keys($modules);
+    }
+    include XOOPS_ROOT_PATH."/header.php";
+    echo "<h3>"._SR_SEARCHRESULTS."</h3>\n";
+    echo _SR_KEYWORDS.':';
+    if ($andor != 'exact') {
+        foreach ($queries as $q) {
+            echo ' <b>'.htmlspecialchars(stripslashes($q)).'</b>';
+        }
+        if (!empty($ignored_queries)) {
+            echo '<br />';
+            printf(_SR_IGNOREDWORDS, $xoopsConfigSearch['keyword_min']);
+            foreach ($ignored_queries as $q) {
+                echo ' <b>'.htmlspecialchars(stripslashes($q)).'</b>';
+            }
+        }
+    } else {
+        echo ' "<b>'.htmlspecialchars(stripslashes($queries[0])).'</b>"';
+    }
+    echo '<br />';
+    foreach ($mids as $mid) {
+        $mid = intval($mid);
+        if ( in_array($mid, $available_modules) ) {
+            $module =& $modules[$mid];
+            $results =& $module->search($queries, $andor, 5, 0);
+            echo "<h4>".$myts->makeTboxData4Show($module->getVar('name'))."</h4>";
+            $count = count($results);
+            if (!is_array($results) || $count == 0) {
+                echo "<p>"._SR_NOMATCH."</p>";
+            } else {
+                for ($i = 0; $i < $count; $i++) {
+                    if (isset($results[$i]['image']) && $results[$i]['image'] != "") {
+                        echo "<img src='modules/".$module->getVar('dirname')."/".$results[$i]['image']."' alt='".$myts->makeTboxData4Show($module->getVar('name'))."' />&nbsp;";
+                    } else {
+                        echo "<img src='images/icons/posticon2.gif' alt='".$myts->makeTboxData4Show($module->getVar('name'))."' width='26' height='26' />&nbsp;";
+                    }
+                    if (!preg_match("/^http[s]*:\/\//i", $results[$i]['link'])) {
+                        $results[$i]['link'] = "modules/".$module->getVar('dirname')."/".$results[$i]['link'];
+                    }
+                    echo "<b><a href='".$results[$i]['link']."'>".$myts->makeTboxData4Show($results[$i]['title'])."</a></b><br />\n";
+                    echo "<small>";
+                    $results[$i]['uid'] = intval($results[$i]['uid']);
+                    if ( !empty($results[$i]['uid']) ) {
+                        $uname = XoopsUser::getUnameFromId($results[$i]['uid']);
+                        echo "&nbsp;&nbsp;<a href='".XOOPS_URL."/userinfo.php?uid=".$results[$i]['uid']."'>".$uname."</a>\n";
+                    }
+                    echo $results[$i]['time'] ? " (". formatTimestamp(intval($results[$i]['time'])).")" : "";
+                    echo "</small><br />\n";
+                }
+                if ( $count == 5 ) {
+                    $search_url = XOOPS_URL.'/search.php?query='.urlencode(stripslashes(implode(' ', $queries)));
+                    $search_url .= "&mid=$mid&action=showall&andor=$andor";
+                    echo '<br /><a href="'.$search_url.'">'._SR_SHOWALLR.'</a></p>';
+                }
+            }
+        }
+        unset($results);
+        unset($module);
+    }
+    include "include/searchform.php";
+    $search_form->display();
+    break;
+    case "showall":
+    case 'showallbyuser':
+    include XOOPS_ROOT_PATH."/header.php";
+    $module_handler =& xoops_gethandler('module');
+    $module =& $module_handler->get($mid);
+    $results =& $module->search($queries, $andor, 20, $start, $uid);
+    $count = count($results);
+    if (is_array($results) && $count > 0) {
+        $next_results =& $module->search($queries, $andor, 1, $start + 20, $uid);
+        $next_count = count($next_results);
+        $has_next = false;
+        if (is_array($next_results) && $next_count == 1) {
+            $has_next = true;
+        }
+        echo "<h4>"._SR_SEARCHRESULTS."</h4>\n";
+        if ($action == 'showall') {
+            echo _SR_KEYWORDS.':';
+            if ($andor != 'exact') {
+                foreach ($queries as $q) {
+                    echo ' <b>'.htmlspecialchars(stripslashes($q)).'</b>';
+                }
+            } else {
+                echo ' "<b>'.htmlspecialchars(stripslashes($queries[0])).'</b>"';
+            }
+            echo '<br />';
+        }
+        //    printf(_SR_FOUND,$count);
+        //    echo "<br />";
+        printf(_SR_SHOWING, $start+1, $start + $count);
+        echo "<h5>".$myts->makeTboxData4Show($module->getVar('name'))."</h5>";
+        for ($i = 0; $i < $count; $i++) {
+            if (isset($results[$i]['image']) && $results[$i]['image'] != '') {
+                echo "<img src='modules/".$module->getVar('dirname')."/".$results[$i]['image']."' alt='".$myts->makeTboxData4Show($module->getVar('name'))."' />&nbsp;";
+            } else {
+                echo "<img src='images/icons/posticon2.gif' alt='".$myts->makeTboxData4Show($module->name())."' width='26' height='26' />&nbsp;";
+            }
+            if (!preg_match("/^http[s]*:\/\//i", $results[$i]['link'])) {
+                $results[$i]['link'] = "modules/".$module->getVar('dirname')."/".$results[$i]['link'];
+            }
+            echo "<b><a href='".$results[$i]['link']."'>".$myts->makeTboxData4Show($results[$i]['title'])."</a></b><br />\n";
+            echo "<small>";
+            $results[$i]['uid'] = intval($results[$i]['uid']);
+            if ( !empty($results[$i]['uid']) ) {
+                $uname = XoopsUser::getUnameFromId($results[$i]['uid']);
+                echo "&nbsp;&nbsp;<a href='".XOOPS_URL."/userinfo.php?uid=".$results[$i]['uid']."'>".$uname."</a>\n";
+            }
+            echo $results[$i]['time'] ? " (". formatTimestamp(intval($results[$i]['time'])).")" : "";
+            echo "</small><br />\n";
+        }
+        echo '
+        <table>
+          <tr>
+        ';
+        $search_url = XOOPS_URL.'/search.php?query='.urlencode(stripslashes(implode(' ', $queries)));
+        $search_url .= "&mid=$mid&action=$action&andor=$andor";
+        if ($action=='showallbyuser') {
+            $search_url .= "&uid=$uid";
+        }
+        if ( $start > 0 ) {
+            $prev = $start - 20;
+            echo '<td align="left">
+            ';
+            $search_url_prev = $search_url."&start=$prev";
+            echo '<a href="'.htmlspecialchars($search_url_prev).'">'._SR_PREVIOUS.'</a></td>
+            ';
+        }
+        echo '<td>&nbsp;&nbsp;</td>
+        ';
+        if (false != $has_next) {
+            $next = $start + 20;
+            $search_url_next = $search_url."&start=$next";
+            echo '<td align="right"><a href="'.htmlspecialchars($search_url_next).'">'._SR_NEXT.'</a></td>
+            ';
+        }
+        echo '
+          </tr>
+        </table>
+        <p>
+        ';
+    } else {
+        echo '<p>'._SR_NOMATCH.'</p>';
+    }
+    include "include/searchform.php";
+    $search_form->display();
+    echo '</p>
+    ';
+    break;
+}
+include XOOPS_ROOT_PATH."/footer.php";
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/search.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/themes/default/hbar.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/default/hbar.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/default/logo.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/default/logo.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/default/poweredby.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/default/poweredby.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/phpkaox/images/leftbar.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/phpkaox/images/leftbar.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/phpkaox/images/logo.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/phpkaox/images/logo.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/phpkaox/images/mainbar.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/phpkaox/images/mainbar.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/phpkaox/images/rightbar.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/phpkaox/images/rightbar.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/_cellpic_cat.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/_cellpic_cat.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/_foot_bg.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/_foot_bg.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/_foot_left.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/_foot_left.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/_foot_right.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/_foot_right.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/_toprow_bg.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/_toprow_bg.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/_toprow_left.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/_toprow_left.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/_toprow_right.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/_toprow_right.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/avatar.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/avatar.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/bg_left.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/bg_left.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/bg_left_blocktitle.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/bg_left_blocktitle.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/bg_right.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/bg_right.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/bg_right2.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/bg_right2.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/bg_right_blocktitle.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/bg_right_blocktitle.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/bookopen.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/bookopen.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/center_bg.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/center_bg.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/center_left.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/center_left.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/center_right.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/center_right.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/deleteuser.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/deleteuser.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/dots.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/dots.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/down.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/down.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/dummy.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/dummy.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/edityp.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/edityp.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/folder.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/folder.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/hbar_bg.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/hbar_bg.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/hbar_left.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/hbar_left.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/hbar_middle.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/hbar_middle.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/hbar_right.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/hbar_right.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/inputbg.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/inputbg.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/klipper.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/klipper.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/logo.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/logo.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/logout.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/logout.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/lostpass.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/lostpass.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/mainmenu_admin.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/mainmenu_admin.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/mainmenu_close.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/mainmenu_close.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/mainmenu_home.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/mainmenu_home.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/menu_arrow_norm.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/menu_arrow_norm.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/online_guests.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/online_guests.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/online_members.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/online_members.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/page.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/page.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/pm.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/pm.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/searchButton.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/searchButton.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/submenu_box_norm.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/submenu_box_norm.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/up.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/up.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/user_admin.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/user_admin.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/user_editaccount.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/user_editaccount.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/user_inbox.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/user_inbox.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/user_logout.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/user_logout.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/themes/x2t/user_notifications.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/themes/x2t/user_notifications.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/blank.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/blank.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/rank3dbf8e94a6f72.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/rank3dbf8e94a6f72.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/rank3dbf8e9e7d88d.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/rank3dbf8e9e7d88d.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/rank3dbf8ea81e642.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/rank3dbf8ea81e642.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/rank3dbf8eb1a72e7.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/rank3dbf8eb1a72e7.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/rank3dbf8edf15093.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/rank3dbf8edf15093.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/rank3dbf8ee8681cd.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/rank3dbf8ee8681cd.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/rank3e632f95e81ca.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/rank3e632f95e81ca.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4bf386b36.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4bf386b36.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4d4e4c4f2.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4d4e4c4f2.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4d6422f04.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4d6422f04.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4d75edb5e.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4d75edb5e.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4d8676346.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4d8676346.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4d99c6eaa.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4d99c6eaa.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4daabd491.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4daabd491.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4dbc14f3f.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4dbc14f3f.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4dcd7b9f4.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4dcd7b9f4.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4ddd6835f.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4ddd6835f.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4df1944ee.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4df1944ee.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4e02c5440.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4e02c5440.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4e1748cc9.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4e1748cc9.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4e29bbcc7.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4e29bbcc7.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4e398ff7b.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4e398ff7b.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4e4c2e742.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4e4c2e742.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4e5e7563a.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4e5e7563a.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/uploads/smil3dbd4e7853679.gif
===================================================================
(Binary files differ)


Property changes on: XoopsCore/trunk/htdocs/uploads/smil3dbd4e7853679.gif
___________________________________________________________________
Name: svn:mime-type
   + image/gif

Added: XoopsCore/trunk/htdocs/user.php
===================================================================
--- XoopsCore/trunk/htdocs/user.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/user.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,170 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$xoopsOption['pagetype'] = 'user';
+include 'mainfile.php';
+
+$op = 'main';
+
+if ( isset($_POST['op']) ) {
+    $op = trim($_POST['op']);
+} elseif ( isset($_GET['op']) ) {
+    $op = trim($_GET['op']);
+}
+
+if ($op == 'main') {
+    if ( !$xoopsUser ) {
+        $xoopsOption['template_main'] = 'system_userform.html';
+        include 'header.php';
+        $xoopsTpl->assign('lang_login', _LOGIN);
+        $xoopsTpl->assign('lang_username', _USERNAME);
+        if (isset($_COOKIE[$xoopsConfig['usercookie']])) {
+            $xoopsTpl->assign('usercookie', $_COOKIE[$xoopsConfig['usercookie']]);
+        }
+        if (isset($_GET['xoops_redirect'])) {
+            $xoopsTpl->assign('redirect_page', htmlspecialchars(trim($_GET['xoops_redirect']), ENT_QUOTES));
+        }
+        $xoopsTpl->assign('lang_password', _PASSWORD);
+        $xoopsTpl->assign('lang_notregister', _US_NOTREGISTERED);
+        $xoopsTpl->assign('lang_lostpassword', _US_LOSTPASSWORD);
+        $xoopsTpl->assign('lang_noproblem', _US_NOPROBLEM);
+        $xoopsTpl->assign('lang_youremail', _US_YOUREMAIL);
+        $xoopsTpl->assign('lang_sendpassword', _US_SENDPASSWORD);
+        $xoopsTpl->assign('mailpasswd_token', $GLOBALS['xoopsSecurity']->createToken());
+        include 'footer.php';
+    } elseif ( $xoopsUser ) {
+        header('Location: '.XOOPS_URL.'/userinfo.php?uid='.$xoopsUser->getVar('uid'));
+    }
+    exit();
+}
+
+if ($op == 'login') {
+    include_once XOOPS_ROOT_PATH.'/include/checklogin.php';
+    exit();
+}
+
+if ($op == 'logout') {
+    $message = '';
+    $_SESSION = array();
+    session_destroy();
+    if ($xoopsConfig['use_mysession'] && $xoopsConfig['session_name'] != '') {
+        setcookie($xoopsConfig['session_name'], '', time()- 3600, '/',  '', 0);
+    }
+    // clear entry from online users table
+    if (is_object($xoopsUser)) {
+        $online_handler =& xoops_gethandler('online');
+        $online_handler->destroy($xoopsUser->getVar('uid'));
+    }
+    $message = _US_LOGGEDOUT.'<br />'._US_THANKYOUFORVISIT;
+    redirect_header('index.php', 1, $message);
+    exit();
+}
+
+if ($op == 'actv') {
+    $id = intval($_GET['id']);
+    $actkey = trim($_GET['actkey']);
+    if (empty($id)) {
+        redirect_header('index.php',1,'');
+        exit();
+    }
+    $member_handler =& xoops_gethandler('member');
+    $thisuser =& $member_handler->getUser($id);
+    if (!is_object($thisuser)) {
+        exit();
+    }
+    if ($thisuser->getVar('actkey') != $actkey) {
+        redirect_header('index.php',5,_US_ACTKEYNOT);
+    } else {
+        if ($thisuser->getVar('level') > 0 ) {
+            redirect_header('user.php',5,_US_ACONTACT);
+        } else {
+            if (false != $member_handler->activateUser($thisuser)) {
+                $config_handler =& xoops_gethandler('config');
+                $xoopsConfigUser =& $config_handler->getConfigsByCat(XOOPS_CONF_USER);
+                if ($xoopsConfigUser['activation_type'] == 2) {
+                    $myts =& MyTextSanitizer::getInstance();
+                    $xoopsMailer =& getMailer();
+                    $xoopsMailer->useMail();
+                    $xoopsMailer->setTemplate('activated.tpl');
+                    $xoopsMailer->assign('SITENAME', $xoopsConfig['sitename']);
+                    $xoopsMailer->assign('ADMINMAIL', $xoopsConfig['adminmail']);
+                    $xoopsMailer->assign('SITEURL', XOOPS_URL."/");
+                    $xoopsMailer->setToUsers($thisuser);
+                    $xoopsMailer->setFromEmail($xoopsConfig['adminmail']);
+                    $xoopsMailer->setFromName($xoopsConfig['sitename']);
+                    $xoopsMailer->setSubject(sprintf(_US_YOURACCOUNT,$xoopsConfig['sitename']));
+                    include 'header.php';
+                    if ( !$xoopsMailer->send() ) {
+                        printf(_US_ACTVMAILNG, $thisuser->getVar('uname'));
+                    } else {
+                        printf(_US_ACTVMAILOK, $thisuser->getVar('uname'));
+                    }
+                    include 'footer.php';
+                } else {
+                    redirect_header('user.php',5,_US_ACTLOGIN);
+                }
+            } else {
+                redirect_header('index.php',5,'Activation failed!');
+            }
+        }
+    }
+    exit();
+}
+
+if ($op == 'delete') {
+    $config_handler =& xoops_gethandler('config');
+    $xoopsConfigUser =& $config_handler->getConfigsByCat(XOOPS_CONF_USER);
+    if (!$xoopsUser || $xoopsConfigUser['self_delete'] != 1) {
+        redirect_header('index.php',5,_US_NOPERMISS);
+        exit();
+    } else {
+        $groups = $xoopsUser->getGroups();
+        if (in_array(XOOPS_GROUP_ADMIN, $groups)){
+            // users in the webmasters group may not be deleted
+            redirect_header('user.php', 5, _US_ADMINNO);
+            exit();
+        }
+        $ok = !isset($_POST['ok']) ? 0 : intval($_POST['ok']);
+        if ($ok != 1) {
+            include 'header.php';
+            xoops_confirm(array('op' => 'delete', 'ok' => 1), 'user.php', _US_SURETODEL.'<br/>'._US_REMOVEINFO);
+            include 'footer.php';
+        } else {
+            $del_uid = $xoopsUser->getVar("uid");
+            $member_handler =& xoops_gethandler('member');
+            if (false != $member_handler->deleteUser($xoopsUser)) {
+                $online_handler =& xoops_gethandler('online');
+                $online_handler->destroy($del_uid);
+                xoops_notification_deletebyuser($del_uid);
+                redirect_header('index.php', 5, _US_BEENDELED);
+            }
+            redirect_header('index.php',5,_US_NOPERMISS);
+        }
+        exit();
+    }
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/user.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/userinfo.php
===================================================================
--- XoopsCore/trunk/htdocs/userinfo.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/userinfo.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,196 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$xoopsOption['pagetype'] = 'user';
+include 'mainfile.php';
+include_once XOOPS_ROOT_PATH.'/class/module.textsanitizer.php';
+
+include_once XOOPS_ROOT_PATH . '/modules/system/constants.php';
+
+$uid = intval($_GET['uid']);
+if ($uid <= 0) {
+    redirect_header('index.php', 3, _US_SELECTNG);
+    exit();
+}
+
+$gperm_handler = & xoops_gethandler( 'groupperm' );
+$groups = is_object($xoopsUser) ? $xoopsUser->getGroups() : XOOPS_GROUP_ANONYMOUS;
+
+$isAdmin = $gperm_handler->checkRight( 'system_admin', XOOPS_SYSTEM_USER, $groups);         // isadmin is true if user has 'edit users' admin rights
+
+if (is_object($xoopsUser)) {
+    if ($uid == $xoopsUser->getVar('uid')) {
+        $config_handler =& xoops_gethandler('config');
+        $xoopsConfigUser =& $config_handler->getConfigsByCat(XOOPS_CONF_USER);
+        $xoopsOption['template_main'] = 'system_userinfo.html';
+        include XOOPS_ROOT_PATH.'/header.php';
+        $xoopsTpl->assign('user_ownpage', true);
+        $xoopsTpl->assign('lang_editprofile', _US_EDITPROFILE);
+        $xoopsTpl->assign('lang_avatar', _US_AVATAR);
+        $xoopsTpl->assign('lang_inbox', _US_INBOX);
+        $xoopsTpl->assign('lang_logout', _US_LOGOUT);
+        if ($xoopsConfigUser['self_delete'] == 1) {
+            $xoopsTpl->assign('user_candelete', true);
+            $xoopsTpl->assign('lang_deleteaccount', _US_DELACCOUNT);
+        } else {
+            $xoopsTpl->assign('user_candelete', false);
+        }
+        $thisUser =& $xoopsUser;
+    } else {
+        $member_handler =& xoops_gethandler('member');
+        $thisUser =& $member_handler->getUser($uid);
+        if (!is_object($thisUser) || !$thisUser->isActive() ) {
+            redirect_header("index.php",3,_US_SELECTNG);
+            exit();
+        }
+        $xoopsOption['template_main'] = 'system_userinfo.html';
+        include XOOPS_ROOT_PATH.'/header.php';
+        $xoopsTpl->assign('user_ownpage', false);
+    }
+} else {
+    $member_handler =& xoops_gethandler('member');
+    $thisUser =& $member_handler->getUser($uid);
+    if (!is_object($thisUser) || !$thisUser->isActive()) {
+        redirect_header("index.php",3,_US_SELECTNG);
+        exit();
+    }
+    $xoopsOption['template_main'] = 'system_userinfo.html';
+    include(XOOPS_ROOT_PATH.'/header.php');
+    $xoopsTpl->assign('user_ownpage', false);
+}
+$myts =& MyTextSanitizer::getInstance();
+if ( is_object($xoopsUser) && $isAdmin ) {
+    $xoopsTpl->assign('lang_editprofile', _US_EDITPROFILE);
+    $xoopsTpl->assign('lang_deleteaccount', _US_DELACCOUNT);
+    $xoopsTpl->assign('user_uid', $thisUser->getVar('uid'));
+}
+$xoopsTpl->assign('lang_allaboutuser', sprintf(_US_ALLABOUT,$thisUser->getVar('uname')));
+$xoopsTpl->assign('lang_avatar', _US_AVATAR);
+$xoopsTpl->assign('user_avatarurl', 'uploads/'.$thisUser->getVar('user_avatar'));
+$xoopsTpl->assign('lang_realname', _US_REALNAME);
+$xoopsTpl->assign('user_realname', $thisUser->getVar('name'));
+$xoopsTpl->assign('lang_website', _US_WEBSITE);
+$xoopsTpl->assign('user_websiteurl', '<a href="'.$thisUser->getVar('url', 'E').'" target="_blank">'.$thisUser->getVar('url').'</a>');
+$xoopsTpl->assign('lang_email', _US_EMAIL);
+$xoopsTpl->assign('lang_privmsg', _US_PM);
+$xoopsTpl->assign('lang_icq', _US_ICQ);
+$xoopsTpl->assign('user_icq', $thisUser->getVar('user_icq'));
+$xoopsTpl->assign('lang_aim', _US_AIM);
+$xoopsTpl->assign('user_aim', $thisUser->getVar('user_aim'));
+$xoopsTpl->assign('lang_yim', _US_YIM);
+$xoopsTpl->assign('user_yim', $thisUser->getVar('user_yim'));
+$xoopsTpl->assign('lang_msnm', _US_MSNM);
+$xoopsTpl->assign('user_msnm', $thisUser->getVar('user_msnm'));
+$xoopsTpl->assign('lang_location', _US_LOCATION);
+$xoopsTpl->assign('user_location', $thisUser->getVar('user_from'));
+$xoopsTpl->assign('lang_occupation', _US_OCCUPATION);
+$xoopsTpl->assign('user_occupation', $thisUser->getVar('user_occ'));
+$xoopsTpl->assign('lang_interest', _US_INTEREST);
+$xoopsTpl->assign('user_interest', $thisUser->getVar('user_intrest'));
+$xoopsTpl->assign('lang_extrainfo', _US_EXTRAINFO);
+$xoopsTpl->assign('user_extrainfo', $myts->makeTareaData4Show($thisUser->getVar('bio', 'N'),0,1,1));
+$xoopsTpl->assign('lang_statistics', _US_STATISTICS);
+$xoopsTpl->assign('lang_membersince', _US_MEMBERSINCE);
+$xoopsTpl->assign('user_joindate', formatTimestamp($thisUser->getVar('user_regdate'),'s'));
+$xoopsTpl->assign('lang_rank', _US_RANK);
+$xoopsTpl->assign('lang_posts', _US_POSTS);
+$xoopsTpl->assign('lang_basicInfo', _US_BASICINFO);
+$xoopsTpl->assign('lang_more', _US_MOREABOUT);
+$xoopsTpl->assign('lang_myinfo', _US_MYINFO);
+$xoopsTpl->assign('user_posts', $thisUser->getVar('posts'));
+$xoopsTpl->assign('lang_lastlogin', _US_LASTLOGIN);
+$xoopsTpl->assign('lang_notregistered', _US_NOTREGISTERED);
+
+$xoopsTpl->assign('lang_signature', _US_SIGNATURE);
+$xoopsTpl->assign('user_signature', $myts->makeTareaData4Show($thisUser->getVar('user_sig', 'N'),0,1,1));
+
+if ($thisUser->getVar('user_viewemail') == 1) {
+    $xoopsTpl->assign('user_email', $thisUser->getVar('email', 'E'));
+} else {
+    if (is_object($xoopsUser)) {
+        // All admins will be allowed to see emails, even those that are not allowed to edit users (I think it's ok like this)
+        if ($xoopsUserIsAdmin || ($xoopsUser->getVar("uid") == $thisUser->getVar("uid"))) {
+            $xoopsTpl->assign('user_email', $thisUser->getVar('email', 'E'));
+        } else {
+            $xoopsTpl->assign('user_email', '&nbsp;');
+        }
+    }
+}
+if (is_object($xoopsUser)) {
+    $xoopsTpl->assign('user_pmlink', "<a href=\"javascript:openWithSelfMain('".XOOPS_URL."/pmlite.php?send2=1&amp;to_userid=".$thisUser->getVar('uid')."', 'pmlite', 450, 380);\"><img src=\"".XOOPS_URL."/images/icons/pm.gif\" alt=\"".sprintf(_SENDPMTO,$thisUser->getVar('uname'))."\" /></a>");
+} else {
+    $xoopsTpl->assign('user_pmlink', '');
+}
+$userrank =& $thisUser->rank();
+if ($userrank['image']) {
+    $xoopsTpl->assign('user_rankimage', '<img src="'.XOOPS_UPLOAD_URL.'/'.$userrank['image'].'" alt="" />');
+}
+$xoopsTpl->assign('user_ranktitle', $userrank['title']);
+$date = $thisUser->getVar("last_login");
+if (!empty($date)) {
+    $xoopsTpl->assign('user_lastlogin', formatTimestamp($date,"m"));
+}
+
+
+$module_handler =& xoops_gethandler('module');
+$criteria = new CriteriaCompo(new Criteria('hassearch', 1));
+$criteria->add(new Criteria('isactive', 1));
+$mids =& array_keys($module_handler->getList($criteria));
+
+foreach ($mids as $mid) {
+    // Hack by marcan : only return results of modules for which user has access permission
+  if ( $gperm_handler->checkRight('module_read', $mid, $groups)) {
+    $module =& $module_handler->get($mid);
+    $results =& $module->search('', '', 5, 0, $thisUser->getVar('uid'));
+    $count = count($results);
+    if (is_array($results) && $count > 0) {
+        for ($i = 0; $i < $count; $i++) {
+            if (isset($results[$i]['image']) && $results[$i]['image'] != '') {
+                $results[$i]['image'] = 'modules/'.$module->getVar('dirname').'/'.$results[$i]['image'];
+            } else {
+                $results[$i]['image'] = 'images/icons/posticon2.gif';
+            }
+            
+            if (!preg_match("/^http[s]*:\/\//i", $results[$i]['link'])) {
+                $results[$i]['link'] = "modules/".$module->getVar('dirname')."/".$results[$i]['link'];
+            }
+
+            $results[$i]['title'] = $myts->makeTboxData4Show($results[$i]['title']);
+            $results[$i]['time'] = $results[$i]['time'] ? formatTimestamp($results[$i]['time']) : '';
+        }
+        if ($count == 5) {
+            $showall_link = '<a href="search.php?action=showallbyuser&amp;mid='.$mid.'&amp;uid='.$thisUser->getVar('uid').'">'._US_SHOWALL.'</a>';
+        } else {
+            $showall_link = '';
+        }
+        $xoopsTpl->append('modules', array('name' => $module->getVar('name'), 'results' => $results, 'showall_link' => $showall_link));
+    }
+    unset($module);
+  }
+}
+include XOOPS_ROOT_PATH.'/footer.php';
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/userinfo.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/viewpmsg.php
===================================================================
--- XoopsCore/trunk/htdocs/viewpmsg.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/viewpmsg.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,96 @@
+<?php
+// $Id$
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+$xoopsOption['pagetype'] = "pmsg";
+include_once "mainfile.php";
+
+if (!is_object($xoopsUser)) {
+    $errormessage = _PM_SORRY."<br />"._PM_PLZREG."";
+    redirect_header("user.php",2,$errormessage);
+} else {
+    $pm_handler =& xoops_gethandler('privmessage');
+    if (isset($_POST['delete_messages']) && isset($_POST['msg_id'])) {
+        if (!$GLOBALS['xoopsSecurity']->check()) {
+            echo implode('<br />', $GLOBALS['xoopsSecurity']->getErrors());
+            exit();
+        }
+        $size = count($_POST['msg_id']);
+        $msg =& $_POST['msg_id'];
+            for ( $i = 0; $i < $size; $i++ ) {
+            $pm =& $pm_handler->get($msg[$i]);
+            if ($pm->getVar('to_userid') == $xoopsUser->getVar('uid')) {
+                $pm_handler->delete($pm);
+            }
+            unset($pm);
+        }
+        redirect_header("viewpmsg.php",1,_PM_DELETED);
+        exit();
+    }
+    include XOOPS_ROOT_PATH.'/header.php';
+    $pm_arr =& $pm_handler->getObjects(new Criteria('to_userid', $xoopsUser->getVar('uid')));
+    echo "<h4 style='text-align:center;'>". _PM_PRIVATEMESSAGE ."</h4><br /><a href='userinfo.php?uid=". $xoopsUser->getVar("uid")."'>". _PM_PROFILE ."</a>&nbsp;<span style='font-weight:bold;'>&raquo;&raquo;</span>&nbsp;". _PM_INBOX ."<br /><br /><table border='0' cellspacing='1' cellpadding='4' width='100%' class='outer'>\n";
+    echo "<form name='prvmsg' method='post' action='viewpmsg.php'>";
+    echo "<tr align='center' valign='middle'><th><input name='allbox' id='allbox' onclick='xoopsCheckAll(\"prvmsg\", \"allbox\");' type='checkbox' value='Check All' /></th><th><img src='images/download.gif' alt='' border='0' /></th><th>&nbsp;</th><th>". _PM_FROM ."</th><th>". _PM_SUBJECT ."</th><th align='center'>". _PM_DATE ."</th></tr>\n";
+    $total_messages = count($pm_arr);
+    if ( $total_messages == 0 ) {
+        echo "<tr><td class='even' colspan='6' align='center'>"._PM_YOUDONTHAVE."</td></tr> ";
+        $display= 0;
+    } else {
+
+        $display = 1;
+    }
+    for ($i = 0; $i < $total_messages; $i++) {
+        $class = ($i % 2 == 0) ? 'even' : 'odd';
+        echo "<tr align='left' class='$class'><td valign='top' width='2%' align='center'><input type='checkbox' id='msg_id[]' name='msg_id[]' value='".$pm_arr[$i]->getVar("msg_id")."' /></td>\n";
+        if ($pm_arr[$i]->getVar('read_msg') == 1) {
+            echo "<td valign='top' width='5%' align='center'>&nbsp;</td>\n";
+        } else {
+            echo "<td valign='top' width='5%' align='center'><img src='images/read.gif' alt='"._PM_NOTREAD."' /></td>\n";
+        }
+        echo "<td valign='top' width='5%' align='center'><img src='images/subject/".$pm_arr[$i]->getVar("msg_image", "E")."' alt='' /></td>\n";
+        $postername = XoopsUser::getUnameFromId($pm_arr[$i]->getVar("from_userid"));
+        echo "<td valign='middle' width='10%'>";
+        // no need to show deleted users
+        if ($postername) {
+            echo "<a href='userinfo.php?uid=".$pm_arr[$i]->getVar("from_userid")."'>".$postername."</a>";
+        } else {
+            echo $xoopsConfig['anonymous'];
+        }
+        echo "</td>\n";
+        echo "<td valign='middle'><a href='readpmsg.php?start=$i&amp;total_messages=$total_messages'>".$pm_arr[$i]->getVar("subject")."</a></td>";
+        echo "<td valign='middle' align='center' width='20%'>".formatTimestamp($pm_arr[$i]->getVar("msg_time"))."</td></tr>";
+    }
+
+    if ( $display == 1 ) {
+        echo "<tr class='foot' align='left'><td colspan='6' align='left'><input type='button' class='formButton' onclick='javascript:openWithSelfMain(\"".XOOPS_URL."/pmlite.php?send=1\",\"pmlite\",450,380);' value='"._PM_SEND."' />&nbsp;<input type='submit' class='formButton' name='delete_messages' value='"._PM_DELETE."' />".$GLOBALS['xoopsSecurity']->getTokenHTML()."</td></tr></form>";
+    } else {
+        echo "<tr class='bg2' align='left'><td colspan='6' align='left'><input type='button' class='formButton' onclick='javascript:openWithSelfMain(\"".XOOPS_URL."/pmlite.php?send=1\",\"pmlite\",450,380);' value='"._PM_SEND."' /></td></tr></form>";
+    }
+    echo "</table>";
+    include "footer.php";
+}
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/viewpmsg.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/trunk/htdocs/xmlrpc.php
===================================================================
--- XoopsCore/trunk/htdocs/xmlrpc.php	2005-10-11 19:14:06 UTC (rev 1)
+++ XoopsCore/trunk/htdocs/xmlrpc.php	2005-11-02 18:23:29 UTC (rev 2)
@@ -0,0 +1,78 @@
+<?php
+//  ------------------------------------------------------------------------ //
+//                XOOPS - PHP Content Management System                      //
+//                    Copyright (c) 2000 XOOPS.org                           //
+//                       <http://www.xoops.org/>                             //
+//  ------------------------------------------------------------------------ //
+//  This program is free software; you can redistribute it and/or modify     //
+//  it under the terms of the GNU General Public License as published by     //
+//  the Free Software Foundation; either version 2 of the License, or        //
+//  (at your option) any later version.                                      //
+//                                                                           //
+//  You may not change or alter any portion of this comment or credits       //
+//  of supporting developers from this source code or any supporting         //
+//  source code which is considered copyrighted (c) material of the          //
+//  original comment or credit authors.                                      //
+//                                                                           //
+//  This program is distributed in the hope that it will be useful,          //
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
+//  GNU General Public License for more details.                             //
+//                                                                           //
+//  You should have received a copy of the GNU General Public License        //
+//  along with this program; if not, write to the Free Software              //
+//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
+//  ------------------------------------------------------------------------ //
+
+define('XOOPS_XMLRPC', 1);
+include './mainfile.php';
+error_reporting(0);
+include_once XOOPS_ROOT_PATH.'/class/xml/rpc/xmlrpctag.php';
+include_once XOOPS_ROOT_PATH.'/class/xml/rpc/xmlrpcparser.php';
+$response = new XoopsXmlRpcResponse();
+$parser = new XoopsXmlRpcParser($GLOBALS['HTTP_RAW_POST_DATA']);
+if (!$parser->parse()) {
+	$response->add(new XoopsXmlRpcFault(102));
+} else {
+	$module_handler =& xoops_gethandler('module');
+	$module =& $module_handler->getByDirname('news');
+	if (!is_object($module)) {
+		$response->add(new XoopsXmlRpcFault(110));
+	} else {
+		$methods = explode('.', $parser->getMethodName());
+		switch ($methods[0]) {
+		case 'blogger':
+			include_once XOOPS_ROOT_PATH.'/class/xml/rpc/bloggerapi.php';
+			$rpc_api = new BloggerApi($parser->getParam(), $response, $module);
+			break;
+		case 'metaWeblog':
+			include_once XOOPS_ROOT_PATH.'/class/xml/rpc/metaweblogapi.php';
+			$rpc_api = new MetaWeblogApi($parser->getParam(), $response, $module);
+			break;
+		case 'mt':
+			include_once XOOPS_ROOT_PATH.'/class/xml/rpc/movabletypeapi.php';
+			$rpc_api = new MovableTypeApi($parser->getParam(), $response, $module);
+			break;
+		case 'xoops':
+		default:
+			include_once XOOPS_ROOT_PATH.'/class/xml/rpc/xoopsapi.php';
+			$rpc_api = new XoopsApi($parser->getParam(), $response, $module);
+			break;
+		}
+		$method = $methods[1];
+		if (!method_exists($rpc_api, $method)) {
+			$response->add(new XoopsXmlRpcFault(107));
+		} else {
+			$rpc_api->$method();
+		}
+	}
+}
+$payload =& $response->render();
+//$fp = fopen(XOOPS_CACHE_PATH.'/xmllog.txt', 'w');
+//fwrite($fp, $payload);
+//fclose($fp);
+header('Server: XOOPS XML-RPC Server');
+header('Content-type: text/xml');
+header('Content-Length: '.strlen($payload));
+echo $payload;
+?>
\ No newline at end of file


Property changes on: XoopsCore/trunk/htdocs/xmlrpc.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"



From skalpa at berlios.de  Thu Nov  3 14:46:56 2005
From: skalpa at berlios.de (Skalpa Keo at BerliOS)
Date: Thu, 3 Nov 2005 14:46:56 +0100
Subject: [Xoops4-svn] r3 - XoopsCore/branches
Message-ID: <200511031346.jA3DkurL003814@sheep.berlios.de>

Author: skalpa
Date: 2005-11-03 14:45:57 +0100 (Thu, 03 Nov 2005)
New Revision: 3

Added:
   XoopsCore/branches/2.0.x/
   XoopsCore/branches/2.3.x/
Log:
Created folders to hold the first 2.x branches.
The main branch for 2.0.x versions will be in /branches/2.0.x/2.0-main
and sub-branches for individual versions in /branches/2.0.x/2.0.14 , /branches/2.0.x/2.0.15 , etc...



From skalpa at berlios.de  Thu Nov  3 14:50:49 2005
From: skalpa at berlios.de (Skalpa Keo at BerliOS)
Date: Thu, 3 Nov 2005 14:50:49 +0100
Subject: [Xoops4-svn] r4 - XoopsCore/branches/2.0.x
Message-ID: <200511031350.jA3Don9O004548@sheep.berlios.de>

Author: skalpa
Date: 2005-11-03 14:49:40 +0100 (Thu, 03 Nov 2005)
New Revision: 4

Added:
   XoopsCore/branches/2.0.x/2.0-main/
Log:
Creating main 2.0.x branch

Copied: XoopsCore/branches/2.0.x/2.0-main (from rev 3, XoopsCore/trunk)



From skalpa at berlios.de  Fri Nov  4 14:31:01 2005
From: skalpa at berlios.de (Skalpa Keo at BerliOS)
Date: Fri, 4 Nov 2005 14:31:01 +0100
Subject: [Xoops4-svn] r5 - XoopsCore/branches/2.0.x
Message-ID: <200511041331.jA4DV1dx014867@sheep.berlios.de>

Author: skalpa
Date: 2005-11-04 14:30:32 +0100 (Fri, 04 Nov 2005)
New Revision: 5

Added:
   XoopsCore/branches/2.0.x/2.0.14/
Log:
Creating the 2.0.14 working branch

Copied: XoopsCore/branches/2.0.x/2.0.14 (from rev 4, XoopsCore/branches/2.0.x/2.0-main)



From skalpa at berlios.de  Fri Nov  4 18:40:36 2005
From: skalpa at berlios.de (Skalpa Keo at BerliOS)
Date: Fri, 4 Nov 2005 18:40:36 +0100
Subject: [Xoops4-svn] r6 - XoopsCore/branches
Message-ID: <200511041740.jA4Headv027007@sheep.berlios.de>

Author: skalpa
Date: 2005-11-04 18:40:35 +0100 (Fri, 04 Nov 2005)
New Revision: 6

Added:
   XoopsCore/branches/tasks/
Log:
Added a new "tasks" folder in /branches/ to hold the branches related to a task or tracker item set on SF.



From skalpa at berlios.de  Fri Nov  4 18:44:56 2005
From: skalpa at berlios.de (Skalpa Keo at BerliOS)
Date: Fri, 4 Nov 2005 18:44:56 +0100
Subject: [Xoops4-svn] r7 - XoopsCore/branches/tasks
Message-ID: <200511041744.jA4HiuRA029726@sheep.berlios.de>

Author: skalpa
Date: 2005-11-04 18:44:50 +0100 (Fri, 04 Nov 2005)
New Revision: 7

Added:
   XoopsCore/branches/tasks/120976-installer/
Log:
New branch for the task #120976 created (installer refactoring)
See:
http://sourceforge.net/pm/task.php?func=detailtask&project_task_id=120976&group_id=41586&group_project_id=45174

Copied: XoopsCore/branches/tasks/120976-installer (from rev 6, XoopsCore/branches/2.0.x/2.0.14)



From skalpa at berlios.de  Fri Nov 11 01:17:35 2005
From: skalpa at berlios.de (Skalpa Keo at BerliOS)
Date: Fri, 11 Nov 2005 01:17:35 +0100
Subject: [Xoops4-svn] r13 - XoopsCore/tags
Message-ID: <200511110017.jAB0HZ5P022529@sheep.berlios.de>

Author: skalpa
Date: 2005-11-11 01:17:25 +0100 (Fri, 11 Nov 2005)
New Revision: 13

Added:
   XoopsCore/tags/121199-upd3rdparty-1/
Log:
made a copy

Copied: XoopsCore/tags/121199-upd3rdparty-1 (from rev 12, XoopsCore/branches/tasks/121199-upd3rdparty)



From skalpa at berlios.de  Sun Nov 20 05:22:00 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 20 Nov 2005 05:22:00 +0100
Subject: [Xoops4-svn] r14 - XoopsCore/branches/2.3.x
Message-ID: <200511200422.jAK4M0Tq016270@sheep.berlios.de>

Author: skalpa
Date: 2005-11-20 05:21:59 +0100 (Sun, 20 Nov 2005)
New Revision: 14

Added:
   XoopsCore/branches/2.3.x/2.3-main/
Log:
Creating main 2.3.x branch

Copied: XoopsCore/branches/2.3.x/2.3-main (from rev 13, XoopsCore/trunk)



From skalpa at berlios.de  Sun Nov 20 05:42:22 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 20 Nov 2005 05:42:22 +0100
Subject: [Xoops4-svn] r15 - in XoopsCore/branches/2.3.x/2.3-main: docs htdocs htdocs/class htdocs/class/smarty htdocs/class/smarty/plugins htdocs/include
Message-ID: <200511200442.jAK4gMEn017756@sheep.berlios.de>

Author: skalpa
Date: 2005-11-20 05:41:49 +0100 (Sun, 20 Nov 2005)
New Revision: 15

Added:
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/internals/
Removed:
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/configs/
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/core/
Modified:
   XoopsCore/branches/2.3.x/2.3-main/docs/changelog.txt
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Config_File.class.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Smarty.class.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Smarty_Compiler.class.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/debug.tpl
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/block.textformat.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/compiler.assign.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.assign_debug_info.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.config_load.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.counter.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.cycle.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.debug.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.eval.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.fetch.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_checkboxes.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_image.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_options.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_radios.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_select_date.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_select_time.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_table.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.mailto.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.math.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.popup.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.popup_init.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.capitalize.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.cat.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_characters.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_paragraphs.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_sentences.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_words.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.date_format.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.debug_print_var.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.default.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.escape.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.indent.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.lower.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.nl2br.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.regex_replace.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.replace.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.spacify.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.string_format.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.strip.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.strip_tags.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.truncate.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.upper.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.wordwrap.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/outputfilter.trimwhitespace.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/shared.escape_special_chars.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/shared.make_timestamp.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/snoopy.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/include/version.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php
Log:
Merged the changes from task #121119, updating Smarty to 2.6.10 and Snoopy to 1.2.3

Modified: XoopsCore/branches/2.3.x/2.3-main/docs/changelog.txt
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/docs/changelog.txt	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/docs/changelog.txt	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,5 +1,19 @@
-XOOPS v2.0.x Changelog
+XOOPS 2 changelog
+
 ============================
+YYYY/MM/DD: Version 2.3.0-alpha1
+============================
+- Updated Smarty to 2.6.10 (skalpa)
+- Updated Snoopy to 1.2.3 (skalpa)
+
+
+
+
+
+
+
+
+============================
 2005/10/28: Version 2.0.13.2
 ============================
 - SECURITY: Fix to prevent mail headers injection (Skalpa/XOOPS Cube)

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Config_File.class.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Config_File.class.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Config_File.class.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,389 +1,389 @@
-<?php
-
-/**
- * Config_File class.
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 2.1 of the License, or (at your option) any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- * @link http://smarty.php.net/
- * @version 2.6.5-dev
- * @copyright Copyright: 2001-2004 ispi of Lincoln, Inc.
- * @author Andrei Zmievski <andrei at php.net>
- * @access public
- * @package Smarty
- */
-
-/* $Id$ */
-
-/**
- * Config file reading class
- * @package Smarty
- */
-class Config_File {
-    /**#@+
-     * Options
-     * @var boolean
-     */
-    /**
-     * Controls whether variables with the same name overwrite each other.
-     */
-    var $overwrite        =    true;
-
-    /**
-     * Controls whether config values of on/true/yes and off/false/no get
-     * converted to boolean values automatically.
-     */
-    var $booleanize        =    true;
-
-    /**
-     * Controls whether hidden config sections/vars are read from the file.
-     */
-    var $read_hidden     =    true;
-
-    /**
-     * Controls whether or not to fix mac or dos formatted newlines.
-     * If set to true, \r or \r\n will be changed to \n.
-     */
-    var $fix_newlines =    true;
-    /**#@-*/
-
-    /** @access private */
-    var $_config_path    = "";
-    var $_config_data    = array();
-    /**#@-*/
-
-    /**
-     * Constructs a new config file class.
-     *
-     * @param string $config_path (optional) path to the config files
-     */
-    function Config_File($config_path = NULL)
-    {
-        if (isset($config_path))
-            $this->set_path($config_path);
-    }
-
-
-    /**
-     * Set the path where configuration files can be found.
-     *
-     * @param string $config_path path to the config files
-     */
-    function set_path($config_path)
-    {
-        if (!empty($config_path)) {
-            if (!is_string($config_path) || !file_exists($config_path) || !is_dir($config_path)) {
-                $this->_trigger_error_msg("Bad config file path '$config_path'");
-                return;
-            }
-            if(substr($config_path, -1) != DIRECTORY_SEPARATOR) {
-                $config_path .= DIRECTORY_SEPARATOR;
-            }
-
-            $this->_config_path = $config_path;
-        }
-    }
-
-
-    /**
-     * Retrieves config info based on the file, section, and variable name.
-     *
-     * @param string $file_name config file to get info for
-     * @param string $section_name (optional) section to get info for
-     * @param string $var_name (optional) variable to get info for
-     * @return string|array a value or array of values
-     */
-    function &get($file_name, $section_name = NULL, $var_name = NULL)
-    {
-        if (empty($file_name)) {
-            $this->_trigger_error_msg('Empty config file name');
-            return;
-        } else {
-            $file_name = $this->_config_path . $file_name;
-            if (!isset($this->_config_data[$file_name]))
-                $this->load_file($file_name, false);
-        }
-
-        if (!empty($var_name)) {
-            if (empty($section_name)) {
-                return $this->_config_data[$file_name]["vars"][$var_name];
-            } else {
-                if(isset($this->_config_data[$file_name]["sections"][$section_name]["vars"][$var_name]))
-                    return $this->_config_data[$file_name]["sections"][$section_name]["vars"][$var_name];
-                else
-                    return array();
-            }
-        } else {
-            if (empty($section_name)) {
-                return (array)$this->_config_data[$file_name]["vars"];
-            } else {
-                if(isset($this->_config_data[$file_name]["sections"][$section_name]["vars"]))
-                    return (array)$this->_config_data[$file_name]["sections"][$section_name]["vars"];
-                else
-                    return array();
-            }
-        }
-    }
-
-
-    /**
-     * Retrieves config info based on the key.
-     *
-     * @param $file_name string config key (filename/section/var)
-     * @return string|array same as get()
-     * @uses get() retrieves information from config file and returns it
-     */
-    function &get_key($config_key)
-    {
-        list($file_name, $section_name, $var_name) = explode('/', $config_key, 3);
-        $result = &$this->get($file_name, $section_name, $var_name);
-        return $result;
-    }
-
-    /**
-     * Get all loaded config file names.
-     *
-     * @return array an array of loaded config file names
-     */
-    function get_file_names()
-    {
-        return array_keys($this->_config_data);
-    }
-
-
-    /**
-     * Get all section names from a loaded file.
-     *
-     * @param string $file_name config file to get section names from
-     * @return array an array of section names from the specified file
-     */
-    function get_section_names($file_name)
-    {
-        $file_name = $this->_config_path . $file_name;
-        if (!isset($this->_config_data[$file_name])) {
-            $this->_trigger_error_msg("Unknown config file '$file_name'");
-            return;
-        }
-
-        return array_keys($this->_config_data[$file_name]["sections"]);
-    }
-
-
-    /**
-     * Get all global or section variable names.
-     *
-     * @param string $file_name config file to get info for
-     * @param string $section_name (optional) section to get info for
-     * @return array an array of variables names from the specified file/section
-     */
-    function get_var_names($file_name, $section = NULL)
-    {
-        if (empty($file_name)) {
-            $this->_trigger_error_msg('Empty config file name');
-            return;
-        } else if (!isset($this->_config_data[$file_name])) {
-            $this->_trigger_error_msg("Unknown config file '$file_name'");
-            return;
-        }
-
-        if (empty($section))
-            return array_keys($this->_config_data[$file_name]["vars"]);
-        else
-            return array_keys($this->_config_data[$file_name]["sections"][$section]["vars"]);
-    }
-
-
-    /**
-     * Clear loaded config data for a certain file or all files.
-     *
-     * @param string $file_name file to clear config data for
-     */
-    function clear($file_name = NULL)
-    {
-        if ($file_name === NULL)
-            $this->_config_data = array();
-        else if (isset($this->_config_data[$file_name]))
-            $this->_config_data[$file_name] = array();
-    }
-
-
-    /**
-     * Load a configuration file manually.
-     *
-     * @param string $file_name file name to load
-     * @param boolean $prepend_path whether current config path should be
-     *                              prepended to the filename
-     */
-    function load_file($file_name, $prepend_path = true)
-    {
-        if ($prepend_path && $this->_config_path != "")
-            $config_file = $this->_config_path . $file_name;
-        else
-            $config_file = $file_name;
-
-        ini_set('track_errors', true);
-        $fp = @fopen($config_file, "r");
-        if (!is_resource($fp)) {
-            $this->_trigger_error_msg("Could not open config file '$config_file'");
-            return false;
-        }
-
-        $contents = ($size = filesize($config_file)) ? fread($fp, $size) : '';
-        fclose($fp);
-
-        $this->_config_data[$config_file] = $this->parse_contents($contents);
-        return true;
-    }
-
-    /**
-     * Store the contents of a file manually.
-     *
-     * @param string $config_file file name of the related contents
-     * @param string $contents the file-contents to parse
-     */
-    function set_file_contents($config_file, $contents)
-    {
-        $this->_config_data[$config_file] = $this->parse_contents($contents);
-        return true;
-    }
-
-    /**
-     * parse the source of a configuration file manually.
-     *
-     * @param string $contents the file-contents to parse
-     */
-    function parse_contents($contents)
-    {
-        if($this->fix_newlines) {
-            // fix mac/dos formatted newlines
-            $contents = preg_replace('!\r\n?!', "\n", $contents);
-        }
-
-        $config_data = array();
-        $config_data['sections'] = array();
-        $config_data['vars'] = array();
-
-        /* reference to fill with data */
-        $vars =& $config_data['vars'];
-
-        /* parse file line by line */
-        preg_match_all('!^.*\r?\n?!m', $contents, $match);
-        $lines = $match[0];
-        for ($i=0, $count=count($lines); $i<$count; $i++) {
-            $line = $lines[$i];
-            if (empty($line)) continue;
-
-            if ( $line{0} == '[' && preg_match('!^\[(.*?)\]!', $line, $match) ) {
-                /* section found */
-                if ($match[1]{0} == '.') {
-                    /* hidden section */
-                    if ($this->read_hidden) {
-                        $section_name = substr($match[1], 1);
-                    } else {
-                        /* break reference to $vars to ignore hidden section */
-                        unset($vars);
-                        $vars = array();
-                        continue;
-                    }
-                } else {                    
-                    $section_name = $match[1];
-                }
-                if (!isset($config_data['sections'][$section_name]))
-                    $config_data['sections'][$section_name] = array('vars' => array());
-                $vars =& $config_data['sections'][$section_name]['vars'];
-                continue;
-            }
-
-            if (preg_match('/^\s*(\.?\w+)\s*=\s*(.*)/s', $line, $match)) {
-                /* variable found */
-                $var_name = rtrim($match[1]);
-                if (strpos($match[2], '"""') === 0) {
-                    /* handle multiline-value */
-                    $lines[$i] = substr($match[2], 3);
-                    $var_value = '';
-                    while ($i<$count) {
-                        if (($pos = strpos($lines[$i], '"""')) === false) {
-                            $var_value .= $lines[$i++];
-                        } else {
-                            /* end of multiline-value */
-                            $var_value .= substr($lines[$i], 0, $pos);
-                            break;
-                        }
-                    }
-                    $booleanize = false;
-
-                } else {
-                    /* handle simple value */
-                    $var_value = preg_replace('/^([\'"])(.*)\1$/', '\2', rtrim($match[2]));
-                    $booleanize = $this->booleanize;
-
-                }
-                $this->_set_config_var($vars, $var_name, $var_value, $booleanize);
-            }
-            /* else unparsable line / means it is a comment / means ignore it */
-        }
-        return $config_data;
-    }
-
-    /**#@+ @access private */
-    /**
-     * @param array &$container
-     * @param string $var_name
-     * @param mixed $var_value
-     * @param boolean $booleanize determines whether $var_value is converted to
-     *                            to true/false
-     */
-    function _set_config_var(&$container, $var_name, $var_value, $booleanize)
-    {
-        if ($var_name{0} == '.') {
-            if (!$this->read_hidden)
-                return;
-            else
-                $var_name = substr($var_name, 1);
-        }
-
-        if (!preg_match("/^[a-zA-Z_]\w*$/", $var_name)) {
-            $this->_trigger_error_msg("Bad variable name '$var_name'");
-            return;
-        }
-
-        if ($booleanize) {
-            if (preg_match("/^(on|true|yes)$/i", $var_value))
-                $var_value = true;
-            else if (preg_match("/^(off|false|no)$/i", $var_value))
-                $var_value = false;
-        }
-
-        if (!isset($container[$var_name]) || $this->overwrite)
-            $container[$var_name] = $var_value;
-        else {
-            settype($container[$var_name], 'array');
-            $container[$var_name][] = $var_value;
-        }
-    }
-
-    /**
-     * @uses trigger_error() creates a PHP warning/error
-     * @param string $error_msg
-     * @param integer $error_type one of
-     */
-    function _trigger_error_msg($error_msg, $error_type = E_USER_WARNING)
-    {
-        trigger_error("Config_File error: $error_msg", $error_type);
-    }
-    /**#@-*/
-}
-
-?>
+<?php
+
+/**
+ * Config_File class.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ * @link http://smarty.php.net/
+ * @version 2.6.10
+ * @copyright Copyright: 2001-2005 New Digital Group, Inc.
+ * @author Andrei Zmievski <andrei at php.net>
+ * @access public
+ * @package Smarty
+ */
+
+/* $Id$ */
+
+/**
+ * Config file reading class
+ * @package Smarty
+ */
+class Config_File {
+    /**#@+
+     * Options
+     * @var boolean
+     */
+    /**
+     * Controls whether variables with the same name overwrite each other.
+     */
+    var $overwrite        =    true;
+
+    /**
+     * Controls whether config values of on/true/yes and off/false/no get
+     * converted to boolean values automatically.
+     */
+    var $booleanize        =    true;
+
+    /**
+     * Controls whether hidden config sections/vars are read from the file.
+     */
+    var $read_hidden     =    true;
+
+    /**
+     * Controls whether or not to fix mac or dos formatted newlines.
+     * If set to true, \r or \r\n will be changed to \n.
+     */
+    var $fix_newlines =    true;
+    /**#@-*/
+
+    /** @access private */
+    var $_config_path    = "";
+    var $_config_data    = array();
+    /**#@-*/
+
+    /**
+     * Constructs a new config file class.
+     *
+     * @param string $config_path (optional) path to the config files
+     */
+    function Config_File($config_path = NULL)
+    {
+        if (isset($config_path))
+            $this->set_path($config_path);
+    }
+
+
+    /**
+     * Set the path where configuration files can be found.
+     *
+     * @param string $config_path path to the config files
+     */
+    function set_path($config_path)
+    {
+        if (!empty($config_path)) {
+            if (!is_string($config_path) || !file_exists($config_path) || !is_dir($config_path)) {
+                $this->_trigger_error_msg("Bad config file path '$config_path'");
+                return;
+            }
+            if(substr($config_path, -1) != DIRECTORY_SEPARATOR) {
+                $config_path .= DIRECTORY_SEPARATOR;
+            }
+
+            $this->_config_path = $config_path;
+        }
+    }
+
+
+    /**
+     * Retrieves config info based on the file, section, and variable name.
+     *
+     * @param string $file_name config file to get info for
+     * @param string $section_name (optional) section to get info for
+     * @param string $var_name (optional) variable to get info for
+     * @return string|array a value or array of values
+     */
+    function get($file_name, $section_name = NULL, $var_name = NULL)
+    {
+        if (empty($file_name)) {
+            $this->_trigger_error_msg('Empty config file name');
+            return;
+        } else {
+            $file_name = $this->_config_path . $file_name;
+            if (!isset($this->_config_data[$file_name]))
+                $this->load_file($file_name, false);
+        }
+
+        if (!empty($var_name)) {
+            if (empty($section_name)) {
+                return $this->_config_data[$file_name]["vars"][$var_name];
+            } else {
+                if(isset($this->_config_data[$file_name]["sections"][$section_name]["vars"][$var_name]))
+                    return $this->_config_data[$file_name]["sections"][$section_name]["vars"][$var_name];
+                else
+                    return array();
+            }
+        } else {
+            if (empty($section_name)) {
+                return (array)$this->_config_data[$file_name]["vars"];
+            } else {
+                if(isset($this->_config_data[$file_name]["sections"][$section_name]["vars"]))
+                    return (array)$this->_config_data[$file_name]["sections"][$section_name]["vars"];
+                else
+                    return array();
+            }
+        }
+    }
+
+
+    /**
+     * Retrieves config info based on the key.
+     *
+     * @param $file_name string config key (filename/section/var)
+     * @return string|array same as get()
+     * @uses get() retrieves information from config file and returns it
+     */
+    function &get_key($config_key)
+    {
+        list($file_name, $section_name, $var_name) = explode('/', $config_key, 3);
+        $result = &$this->get($file_name, $section_name, $var_name);
+        return $result;
+    }
+
+    /**
+     * Get all loaded config file names.
+     *
+     * @return array an array of loaded config file names
+     */
+    function get_file_names()
+    {
+        return array_keys($this->_config_data);
+    }
+
+
+    /**
+     * Get all section names from a loaded file.
+     *
+     * @param string $file_name config file to get section names from
+     * @return array an array of section names from the specified file
+     */
+    function get_section_names($file_name)
+    {
+        $file_name = $this->_config_path . $file_name;
+        if (!isset($this->_config_data[$file_name])) {
+            $this->_trigger_error_msg("Unknown config file '$file_name'");
+            return;
+        }
+
+        return array_keys($this->_config_data[$file_name]["sections"]);
+    }
+
+
+    /**
+     * Get all global or section variable names.
+     *
+     * @param string $file_name config file to get info for
+     * @param string $section_name (optional) section to get info for
+     * @return array an array of variables names from the specified file/section
+     */
+    function get_var_names($file_name, $section = NULL)
+    {
+        if (empty($file_name)) {
+            $this->_trigger_error_msg('Empty config file name');
+            return;
+        } else if (!isset($this->_config_data[$file_name])) {
+            $this->_trigger_error_msg("Unknown config file '$file_name'");
+            return;
+        }
+
+        if (empty($section))
+            return array_keys($this->_config_data[$file_name]["vars"]);
+        else
+            return array_keys($this->_config_data[$file_name]["sections"][$section]["vars"]);
+    }
+
+
+    /**
+     * Clear loaded config data for a certain file or all files.
+     *
+     * @param string $file_name file to clear config data for
+     */
+    function clear($file_name = NULL)
+    {
+        if ($file_name === NULL)
+            $this->_config_data = array();
+        else if (isset($this->_config_data[$file_name]))
+            $this->_config_data[$file_name] = array();
+    }
+
+
+    /**
+     * Load a configuration file manually.
+     *
+     * @param string $file_name file name to load
+     * @param boolean $prepend_path whether current config path should be
+     *                              prepended to the filename
+     */
+    function load_file($file_name, $prepend_path = true)
+    {
+        if ($prepend_path && $this->_config_path != "")
+            $config_file = $this->_config_path . $file_name;
+        else
+            $config_file = $file_name;
+
+        ini_set('track_errors', true);
+        $fp = @fopen($config_file, "r");
+        if (!is_resource($fp)) {
+            $this->_trigger_error_msg("Could not open config file '$config_file'");
+            return false;
+        }
+
+        $contents = ($size = filesize($config_file)) ? fread($fp, $size) : '';
+        fclose($fp);
+
+        $this->_config_data[$config_file] = $this->parse_contents($contents);
+        return true;
+    }
+
+    /**
+     * Store the contents of a file manually.
+     *
+     * @param string $config_file file name of the related contents
+     * @param string $contents the file-contents to parse
+     */
+    function set_file_contents($config_file, $contents)
+    {
+        $this->_config_data[$config_file] = $this->parse_contents($contents);
+        return true;
+    }
+
+    /**
+     * parse the source of a configuration file manually.
+     *
+     * @param string $contents the file-contents to parse
+     */
+    function parse_contents($contents)
+    {
+        if($this->fix_newlines) {
+            // fix mac/dos formatted newlines
+            $contents = preg_replace('!\r\n?!', "\n", $contents);
+        }
+
+        $config_data = array();
+        $config_data['sections'] = array();
+        $config_data['vars'] = array();
+
+        /* reference to fill with data */
+        $vars =& $config_data['vars'];
+
+        /* parse file line by line */
+        preg_match_all('!^.*\r?\n?!m', $contents, $match);
+        $lines = $match[0];
+        for ($i=0, $count=count($lines); $i<$count; $i++) {
+            $line = $lines[$i];
+            if (empty($line)) continue;
+
+            if ( $line{0} == '[' && preg_match('!^\[(.*?)\]!', $line, $match) ) {
+                /* section found */
+                if ($match[1]{0} == '.') {
+                    /* hidden section */
+                    if ($this->read_hidden) {
+                        $section_name = substr($match[1], 1);
+                    } else {
+                        /* break reference to $vars to ignore hidden section */
+                        unset($vars);
+                        $vars = array();
+                        continue;
+                    }
+                } else {                    
+                    $section_name = $match[1];
+                }
+                if (!isset($config_data['sections'][$section_name]))
+                    $config_data['sections'][$section_name] = array('vars' => array());
+                $vars =& $config_data['sections'][$section_name]['vars'];
+                continue;
+            }
+
+            if (preg_match('/^\s*(\.?\w+)\s*=\s*(.*)/s', $line, $match)) {
+                /* variable found */
+                $var_name = rtrim($match[1]);
+                if (strpos($match[2], '"""') === 0) {
+                    /* handle multiline-value */
+                    $lines[$i] = substr($match[2], 3);
+                    $var_value = '';
+                    while ($i<$count) {
+                        if (($pos = strpos($lines[$i], '"""')) === false) {
+                            $var_value .= $lines[$i++];
+                        } else {
+                            /* end of multiline-value */
+                            $var_value .= substr($lines[$i], 0, $pos);
+                            break;
+                        }
+                    }
+                    $booleanize = false;
+
+                } else {
+                    /* handle simple value */
+                    $var_value = preg_replace('/^([\'"])(.*)\1$/', '\2', rtrim($match[2]));
+                    $booleanize = $this->booleanize;
+
+                }
+                $this->_set_config_var($vars, $var_name, $var_value, $booleanize);
+            }
+            /* else unparsable line / means it is a comment / means ignore it */
+        }
+        return $config_data;
+    }
+
+    /**#@+ @access private */
+    /**
+     * @param array &$container
+     * @param string $var_name
+     * @param mixed $var_value
+     * @param boolean $booleanize determines whether $var_value is converted to
+     *                            to true/false
+     */
+    function _set_config_var(&$container, $var_name, $var_value, $booleanize)
+    {
+        if ($var_name{0} == '.') {
+            if (!$this->read_hidden)
+                return;
+            else
+                $var_name = substr($var_name, 1);
+        }
+
+        if (!preg_match("/^[a-zA-Z_]\w*$/", $var_name)) {
+            $this->_trigger_error_msg("Bad variable name '$var_name'");
+            return;
+        }
+
+        if ($booleanize) {
+            if (preg_match("/^(on|true|yes)$/i", $var_value))
+                $var_value = true;
+            else if (preg_match("/^(off|false|no)$/i", $var_value))
+                $var_value = false;
+        }
+
+        if (!isset($container[$var_name]) || $this->overwrite)
+            $container[$var_name] = $var_value;
+        else {
+            settype($container[$var_name], 'array');
+            $container[$var_name][] = $var_value;
+        }
+    }
+
+    /**
+     * @uses trigger_error() creates a PHP warning/error
+     * @param string $error_msg
+     * @param integer $error_type one of
+     */
+    function _trigger_error_msg($error_msg, $error_type = E_USER_WARNING)
+    {
+        trigger_error("Config_File error: $error_msg", $error_type);
+    }
+    /**#@-*/
+}
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Smarty.class.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Smarty.class.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Smarty.class.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,1932 +1,1934 @@
-<?php
-
-/**
- * Project:     Smarty: the PHP compiling template engine
- * File:        Smarty.class.php
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 2.1 of the License, or (at your option) any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- * For questions, help, comments, discussion, etc., please join the
- * Smarty mailing list. Send a blank e-mail to
- * smarty-general-subscribe at lists.php.net
- *
- * @link http://smarty.php.net/
- * @copyright 2001-2004 ispi of Lincoln, Inc.
- * @author Monte Ohrt <monte at ispi.net>
- * @author Andrei Zmievski <andrei at php.net>
- * @package Smarty
- * @version 2.6.5-dev
- */
-
-/* $Id$ */
-
-/**
- * DIR_SEP isn't used anymore, but third party apps might
- */
-if(!defined('DIR_SEP')) {
-    define('DIR_SEP', DIRECTORY_SEPARATOR);
-}
-
-/**
- * set SMARTY_DIR to absolute path to Smarty library files.
- * if not defined, include_path will be used. Sets SMARTY_DIR only if user
- * application has not already defined it.
- */
-
-if (!defined('SMARTY_DIR')) {
-    define('SMARTY_DIR', dirname(__FILE__) . DIRECTORY_SEPARATOR);
-}
-
-define('SMARTY_PHP_PASSTHRU',   0);
-define('SMARTY_PHP_QUOTE',      1);
-define('SMARTY_PHP_REMOVE',     2);
-define('SMARTY_PHP_ALLOW',      3);
-
-/**
- * @package Smarty
- */
-class Smarty
-{
-    /**#@+
-     * Smarty Configuration Section
-     */
-
-    /**
-     * The name of the directory where templates are located.
-     *
-     * @var string
-     */
-    var $template_dir    =  'templates';
-
-    /**
-     * The directory where compiled templates are located.
-     *
-     * @var string
-     */
-    var $compile_dir     =  'templates_c';
-
-    /**
-     * The directory where config files are located.
-     *
-     * @var string
-     */
-    var $config_dir      =  'configs';
-
-    /**
-     * An array of directories searched for plugins.
-     *
-     * @var array
-     */
-    var $plugins_dir     =  array('plugins');
-
-    /**
-     * If debugging is enabled, a debug console window will display
-     * when the page loads (make sure your browser allows unrequested
-     * popup windows)
-     *
-     * @var boolean
-     */
-    var $debugging       =  false;
-
-    /**
-     * When set, smarty does uses this value as error_reporting-level.
-     *
-     * @var boolean
-     */
-    var $error_reporting  =  null;
-
-    /**
-     * This is the path to the debug console template. If not set,
-     * the default one will be used.
-     *
-     * @var string
-     */
-    var $debug_tpl       =  '';
-
-    /**
-     * This determines if debugging is enable-able from the browser.
-     * <ul>
-     *  <li>NONE => no debugging control allowed</li>
-     *  <li>URL => enable debugging when SMARTY_DEBUG is found in the URL.</li>
-     * </ul>
-     * @link http://www.foo.dom/index.php?SMARTY_DEBUG
-     * @var string
-     */
-    var $debugging_ctrl  =  'NONE';
-
-    /**
-     * This tells Smarty whether to check for recompiling or not. Recompiling
-     * does not need to happen unless a template or config file is changed.
-     * Typically you enable this during development, and disable for
-     * production.
-     *
-     * @var boolean
-     */
-    var $compile_check   =  true;
-
-    /**
-     * This forces templates to compile every time. Useful for development
-     * or debugging.
-     *
-     * @var boolean
-     */
-    var $force_compile   =  false;
-
-    /**
-     * This enables template caching.
-     * <ul>
-     *  <li>0 = no caching</li>
-     *  <li>1 = use class cache_lifetime value</li>
-     *  <li>2 = use cache_lifetime in cache file</li>
-     * </ul>
-     * @var integer
-     */
-    var $caching         =  0;
-
-    /**
-     * The name of the directory for cache files.
-     *
-     * @var string
-     */
-    var $cache_dir       =  'cache';
-
-    /**
-     * This is the number of seconds cached content will persist.
-     * <ul>
-     *  <li>0 = always regenerate cache</li>
-     *  <li>-1 = never expires</li>
-     * </ul>
-     *
-     * @var integer
-     */
-    var $cache_lifetime  =  3600;
-
-    /**
-     * Only used when $caching is enabled. If true, then If-Modified-Since headers
-     * are respected with cached content, and appropriate HTTP headers are sent.
-     * This way repeated hits to a cached page do not send the entire page to the
-     * client every time.
-     *
-     * @var boolean
-     */
-    var $cache_modified_check = false;
-
-    /**
-     * This determines how Smarty handles "<?php ... ?>" tags in templates.
-     * possible values:
-     * <ul>
-     *  <li>SMARTY_PHP_PASSTHRU -> print tags as plain text</li>
-     *  <li>SMARTY_PHP_QUOTE    -> escape tags as entities</li>
-     *  <li>SMARTY_PHP_REMOVE   -> remove php tags</li>
-     *  <li>SMARTY_PHP_ALLOW    -> execute php tags</li>
-     * </ul>
-     *
-     * @var integer
-     */
-    var $php_handling    =  SMARTY_PHP_PASSTHRU;
-
-    /**
-     * This enables template security. When enabled, many things are restricted
-     * in the templates that normally would go unchecked. This is useful when
-     * untrusted parties are editing templates and you want a reasonable level
-     * of security. (no direct execution of PHP in templates for example)
-     *
-     * @var boolean
-     */
-    var $security       =   false;
-
-    /**
-     * This is the list of template directories that are considered secure. This
-     * is used only if {@link $security} is enabled. One directory per array
-     * element.  {@link $template_dir} is in this list implicitly.
-     *
-     * @var array
-     */
-    var $secure_dir     =   array();
-
-    /**
-     * These are the security settings for Smarty. They are used only when
-     * {@link $security} is enabled.
-     *
-     * @var array
-     */
-    var $security_settings  = array(
-                                    'PHP_HANDLING'    => false,
-                                    'IF_FUNCS'        => array('array', 'list',
-                                                               'isset', 'empty',
-                                                               'count', 'sizeof',
-                                                               'in_array', 'is_array',
-                                                               'true','false'),
-                                    'INCLUDE_ANY'     => false,
-                                    'PHP_TAGS'        => false,
-                                    'MODIFIER_FUNCS'  => array('count'),
-                                    'ALLOW_CONSTANTS'  => false
-                                   );
-
-    /**
-     * This is an array of directories where trusted php scripts reside.
-     * {@link $security} is disabled during their inclusion/execution.
-     *
-     * @var array
-     */
-    var $trusted_dir        = array();
-
-    /**
-     * The left delimiter used for the template tags.
-     *
-     * @var string
-     */
-    var $left_delimiter  =  '{';
-
-    /**
-     * The right delimiter used for the template tags.
-     *
-     * @var string
-     */
-    var $right_delimiter =  '}';
-
-    /**
-     * The order in which request variables are registered, similar to
-     * variables_order in php.ini E = Environment, G = GET, P = POST,
-     * C = Cookies, S = Server
-     *
-     * @var string
-     */
-    var $request_vars_order    = 'EGPCS';
-
-    /**
-     * Indicates wether $HTTP_*_VARS[] (request_use_auto_globals=false)
-     * are uses as request-vars or $_*[]-vars. note: if
-     * request_use_auto_globals is true, then $request_vars_order has
-     * no effect, but the php-ini-value "gpc_order"
-     *
-     * @var boolean
-     */
-    var $request_use_auto_globals      = true;
-
-    /**
-     * Set this if you want different sets of compiled files for the same
-     * templates. This is useful for things like different languages.
-     * Instead of creating separate sets of templates per language, you
-     * set different compile_ids like 'en' and 'de'.
-     *
-     * @var string
-     */
-    var $compile_id            = null;
-
-    /**
-     * This tells Smarty whether or not to use sub dirs in the cache/ and
-     * templates_c/ directories. sub directories better organized, but
-     * may not work well with PHP safe mode enabled.
-     *
-     * @var boolean
-     *
-     */
-    var $use_sub_dirs          = false;
-
-    /**
-     * This is a list of the modifiers to apply to all template variables.
-     * Put each modifier in a separate array element in the order you want
-     * them applied. example: <code>array('escape:"htmlall"');</code>
-     *
-     * @var array
-     */
-    var $default_modifiers        = array();
-
-    /**
-     * This is the resource type to be used when not specified
-     * at the beginning of the resource path. examples:
-     * $smarty->display('file:index.tpl');
-     * $smarty->display('db:index.tpl');
-     * $smarty->display('index.tpl'); // will use default resource type
-     * {include file="file:index.tpl"}
-     * {include file="db:index.tpl"}
-     * {include file="index.tpl"} {* will use default resource type *}
-     *
-     * @var array
-     */
-    var $default_resource_type    = 'file';
-
-    /**
-     * The function used for cache file handling. If not set, built-in caching is used.
-     *
-     * @var null|string function name
-     */
-    var $cache_handler_func   = null;
-
-    /**
-     * This indicates which filters are automatically loaded into Smarty.
-     *
-     * @var array array of filter names
-     */
-    var $autoload_filters = array();
-
-    /**#@+
-     * @var boolean
-     */
-    /**
-     * This tells if config file vars of the same name overwrite each other or not.
-     * if disabled, same name variables are accumulated in an array.
-     */
-    var $config_overwrite = true;
-
-    /**
-     * This tells whether or not to automatically booleanize config file variables.
-     * If enabled, then the strings "on", "true", and "yes" are treated as boolean
-     * true, and "off", "false" and "no" are treated as boolean false.
-     */
-    var $config_booleanize = true;
-
-    /**
-     * This tells whether hidden sections [.foobar] are readable from the
-     * tempalates or not. Normally you would never allow this since that is
-     * the point behind hidden sections: the application can access them, but
-     * the templates cannot.
-     */
-    var $config_read_hidden = false;
-
-    /**
-     * This tells whether or not automatically fix newlines in config files.
-     * It basically converts \r (mac) or \r\n (dos) to \n
-     */
-    var $config_fix_newlines = true;
-    /**#@-*/
-
-    /**
-     * If a template cannot be found, this PHP function will be executed.
-     * Useful for creating templates on-the-fly or other special action.
-     *
-     * @var string function name
-     */
-    var $default_template_handler_func = '';
-
-    /**
-     * The file that contains the compiler class. This can a full
-     * pathname, or relative to the php_include path.
-     *
-     * @var string
-     */
-    var $compiler_file        =    'Smarty_Compiler.class.php';
-
-    /**
-     * The class used for compiling templates.
-     *
-     * @var string
-     */
-    var $compiler_class        =   'Smarty_Compiler';
-
-    /**
-     * The class used to load config vars.
-     *
-     * @var string
-     */
-    var $config_class          =   'Config_File';
-
-/**#@+
- * END Smarty Configuration Section
- * There should be no need to touch anything below this line.
- * @access private
- */
-    /**
-     * where assigned template vars are kept
-     *
-     * @var array
-     */
-    var $_tpl_vars             = array();
-
-    /**
-     * stores run-time $smarty.* vars
-     *
-     * @var null|array
-     */
-    var $_smarty_vars          = null;
-
-    /**
-     * keeps track of sections
-     *
-     * @var array
-     */
-    var $_sections             = array();
-
-    /**
-     * keeps track of foreach blocks
-     *
-     * @var array
-     */
-    var $_foreach              = array();
-
-    /**
-     * keeps track of tag hierarchy
-     *
-     * @var array
-     */
-    var $_tag_stack            = array();
-
-    /**
-     * configuration object
-     *
-     * @var Config_file
-     */
-    var $_conf_obj             = null;
-
-    /**
-     * loaded configuration settings
-     *
-     * @var array
-     */
-    var $_config               = array(array('vars'  => array(), 'files' => array()));
-
-    /**
-     * md5 checksum of the string 'Smarty'
-     *
-     * @var string
-     */
-    var $_smarty_md5           = 'f8d698aea36fcbead2b9d5359ffca76f';
-
-    /**
-     * Smarty version number
-     *
-     * @var string
-     */
-    var $_version              = '2.6.5-dev';
-
-    /**
-     * current template inclusion depth
-     *
-     * @var integer
-     */
-    var $_inclusion_depth      = 0;
-
-    /**
-     * for different compiled templates
-     *
-     * @var string
-     */
-    var $_compile_id           = null;
-
-    /**
-     * text in URL to enable debug mode
-     *
-     * @var string
-     */
-    var $_smarty_debug_id      = 'SMARTY_DEBUG';
-
-    /**
-     * debugging information for debug console
-     *
-     * @var array
-     */
-    var $_smarty_debug_info    = array();
-
-    /**
-     * info that makes up a cache file
-     *
-     * @var array
-     */
-    var $_cache_info           = array();
-
-    /**
-     * default file permissions
-     *
-     * @var integer
-     */
-    var $_file_perms           = 0644;
-
-    /**
-     * default dir permissions
-     *
-     * @var integer
-     */
-    var $_dir_perms               = 0771;
-
-    /**
-     * registered objects
-     *
-     * @var array
-     */
-    var $_reg_objects           = array();
-
-    /**
-     * table keeping track of plugins
-     *
-     * @var array
-     */
-    var $_plugins              = array(
-                                       'modifier'      => array(),
-                                       'function'      => array(),
-                                       'block'         => array(),
-                                       'compiler'      => array(),
-                                       'prefilter'     => array(),
-                                       'postfilter'    => array(),
-                                       'outputfilter'  => array(),
-                                       'resource'      => array(),
-                                       'insert'        => array());
-
-
-    /**
-     * cache serials
-     *
-     * @var array
-     */
-    var $_cache_serials = array();
-
-    /**
-     * name of optional cache include file
-     *
-     * @var string
-     */
-    var $_cache_include = null;
-
-    /**
-     * indicate if the current code is used in a compiled
-     * include
-     *
-     * @var string
-     */
-    var $_cache_including = false;
-
-    /**#@-*/
-    /**
-     * The class constructor.
-     */
-    function Smarty()
-    {
-      $this->assign('SCRIPT_NAME', isset($_SERVER['SCRIPT_NAME']) ? $_SERVER['SCRIPT_NAME']
-                    : @$GLOBALS['HTTP_SERVER_VARS']['SCRIPT_NAME']);
-    }
-
-    /**
-     * assigns values to template variables
-     *
-     * @param array|string $tpl_var the template variable name(s)
-     * @param mixed $value the value to assign
-     */
-    function assign($tpl_var, $value = null)
-    {
-        if (is_array($tpl_var)){
-            foreach ($tpl_var as $key => $val) {
-                if ($key != '') {
-                    $this->_tpl_vars[$key] = $val;
-                }
-            }
-        } else {
-            if ($tpl_var != '')
-                $this->_tpl_vars[$tpl_var] = $value;
-        }
-    }
-
-    /**
-     * assigns values to template variables by reference
-     *
-     * @param string $tpl_var the template variable name
-     * @param mixed $value the referenced value to assign
-     */
-    function assign_by_ref($tpl_var, &$value)
-    {
-        if ($tpl_var != '')
-            $this->_tpl_vars[$tpl_var] = &$value;
-    }
-
-    /**
-     * appends values to template variables
-     *
-     * @param array|string $tpl_var the template variable name(s)
-     * @param mixed $value the value to append
-     */
-    function append($tpl_var, $value=null, $merge=false)
-    {
-        if (is_array($tpl_var)) {
-            // $tpl_var is an array, ignore $value
-            foreach ($tpl_var as $_key => $_val) {
-                if ($_key != '') {
-                    if(!@is_array($this->_tpl_vars[$_key])) {
-                        settype($this->_tpl_vars[$_key],'array');
-                    }
-                    if($merge && is_array($_val)) {
-                        foreach($_val as $_mkey => $_mval) {
-                            $this->_tpl_vars[$_key][$_mkey] = $_mval;
-                        }
-                    } else {
-                        $this->_tpl_vars[$_key][] = $_val;
-                    }
-                }
-            }
-        } else {
-            if ($tpl_var != '' && isset($value)) {
-                if(!@is_array($this->_tpl_vars[$tpl_var])) {
-                    settype($this->_tpl_vars[$tpl_var],'array');
-                }
-                if($merge && is_array($value)) {
-                    foreach($value as $_mkey => $_mval) {
-                        $this->_tpl_vars[$tpl_var][$_mkey] = $_mval;
-                    }
-                } else {
-                    $this->_tpl_vars[$tpl_var][] = $value;
-                }
-            }
-        }
-    }
-
-    /**
-     * appends values to template variables by reference
-     *
-     * @param string $tpl_var the template variable name
-     * @param mixed $value the referenced value to append
-     */
-    function append_by_ref($tpl_var, &$value, $merge=false)
-    {
-        if ($tpl_var != '' && isset($value)) {
-            if(!@is_array($this->_tpl_vars[$tpl_var])) {
-             settype($this->_tpl_vars[$tpl_var],'array');
-            }
-            if ($merge && is_array($value)) {
-                foreach($value as $_key => $_val) {
-                    $this->_tpl_vars[$tpl_var][$_key] = &$value[$_key];
-                }
-            } else {
-                $this->_tpl_vars[$tpl_var][] = &$value;
-            }
-        }
-    }
-
-
-    /**
-     * clear the given assigned template variable.
-     *
-     * @param string $tpl_var the template variable to clear
-     */
-    function clear_assign($tpl_var)
-    {
-        if (is_array($tpl_var))
-            foreach ($tpl_var as $curr_var)
-                unset($this->_tpl_vars[$curr_var]);
-        else
-            unset($this->_tpl_vars[$tpl_var]);
-    }
-
-
-    /**
-     * Registers custom function to be used in templates
-     *
-     * @param string $function the name of the template function
-     * @param string $function_impl the name of the PHP function to register
-     */
-    function register_function($function, $function_impl, $cacheable=true, $cache_attrs=null)
-    {
-        $this->_plugins['function'][$function] =
-            array($function_impl, null, null, false, $cacheable, $cache_attrs);
-
-    }
-
-    /**
-     * Unregisters custom function
-     *
-     * @param string $function name of template function
-     */
-    function unregister_function($function)
-    {
-        unset($this->_plugins['function'][$function]);
-    }
-
-    /**
-     * Registers object to be used in templates
-     *
-     * @param string $object name of template object
-     * @param object &$object_impl the referenced PHP object to register
-     * @param null|array $allowed list of allowed methods (empty = all)
-     * @param boolean $smarty_args smarty argument format, else traditional
-     * @param null|array $block_functs list of methods that are block format
-     */
-    function register_object($object, &$object_impl, $allowed = array(), $smarty_args = true, $block_methods = array())
-    {
-        settype($allowed, 'array');
-        settype($smarty_args, 'boolean');
-        $this->_reg_objects[$object] =
-            array(&$object_impl, $allowed, $smarty_args, $block_methods);
-    }
-
-    /**
-     * Unregisters object
-     *
-     * @param string $object name of template object
-     */
-    function unregister_object($object)
-    {
-        unset($this->_reg_objects[$object]);
-    }
-
-
-    /**
-     * Registers block function to be used in templates
-     *
-     * @param string $block name of template block
-     * @param string $block_impl PHP function to register
-     */
-    function register_block($block, $block_impl, $cacheable=true, $cache_attrs=null)
-    {
-        $this->_plugins['block'][$block] =
-            array($block_impl, null, null, false, $cacheable, $cache_attrs);
-    }
-
-    /**
-     * Unregisters block function
-     *
-     * @param string $block name of template function
-     */
-    function unregister_block($block)
-    {
-        unset($this->_plugins['block'][$block]);
-    }
-
-    /**
-     * Registers compiler function
-     *
-     * @param string $function name of template function
-     * @param string $function_impl name of PHP function to register
-     */
-    function register_compiler_function($function, $function_impl, $cacheable=true)
-    {
-        $this->_plugins['compiler'][$function] =
-            array($function_impl, null, null, false, $cacheable);
-    }
-
-    /**
-     * Unregisters compiler function
-     *
-     * @param string $function name of template function
-     */
-    function unregister_compiler_function($function)
-    {
-        unset($this->_plugins['compiler'][$function]);
-    }
-
-    /**
-     * Registers modifier to be used in templates
-     *
-     * @param string $modifier name of template modifier
-     * @param string $modifier_impl name of PHP function to register
-     */
-    function register_modifier($modifier, $modifier_impl)
-    {
-        $this->_plugins['modifier'][$modifier] =
-            array($modifier_impl, null, null, false);
-    }
-
-    /**
-     * Unregisters modifier
-     *
-     * @param string $modifier name of template modifier
-     */
-    function unregister_modifier($modifier)
-    {
-        unset($this->_plugins['modifier'][$modifier]);
-    }
-
-    /**
-     * Registers a resource to fetch a template
-     *
-     * @param string $type name of resource
-     * @param array $functions array of functions to handle resource
-     */
-    function register_resource($type, $functions)
-    {
-        if (count($functions)==4) {
-            $this->_plugins['resource'][$type] =
-                array($functions, false);
-
-        } elseif (count($functions)==5) {
-            $this->_plugins['resource'][$type] =
-                array(array(array(&$functions[0], $functions[1])
-                            ,array(&$functions[0], $functions[2])
-                            ,array(&$functions[0], $functions[3])
-                            ,array(&$functions[0], $functions[4]))
-                      ,false);
-
-        } else {
-            $this->trigger_error("malformed function-list for '$type' in register_resource");
-
-        }
-    }
-
-    /**
-     * Unregisters a resource
-     *
-     * @param string $type name of resource
-     */
-    function unregister_resource($type)
-    {
-        unset($this->_plugins['resource'][$type]);
-    }
-
-    /**
-     * Registers a prefilter function to apply
-     * to a template before compiling
-     *
-     * @param string $function name of PHP function to register
-     */
-    function register_prefilter($function)
-    {
-    $_name = (is_array($function)) ? $function[1] : $function;
-        $this->_plugins['prefilter'][$_name]
-            = array($function, null, null, false);
-    }
-
-    /**
-     * Unregisters a prefilter function
-     *
-     * @param string $function name of PHP function
-     */
-    function unregister_prefilter($function)
-    {
-        unset($this->_plugins['prefilter'][$function]);
-    }
-
-    /**
-     * Registers a postfilter function to apply
-     * to a compiled template after compilation
-     *
-     * @param string $function name of PHP function to register
-     */
-    function register_postfilter($function)
-    {
-    $_name = (is_array($function)) ? $function[1] : $function;
-        $this->_plugins['postfilter'][$_name]
-            = array($function, null, null, false);
-    }
-
-    /**
-     * Unregisters a postfilter function
-     *
-     * @param string $function name of PHP function
-     */
-    function unregister_postfilter($function)
-    {
-        unset($this->_plugins['postfilter'][$function]);
-    }
-
-    /**
-     * Registers an output filter function to apply
-     * to a template output
-     *
-     * @param string $function name of PHP function
-     */
-    function register_outputfilter($function)
-    {
-    $_name = (is_array($function)) ? $function[1] : $function;
-        $this->_plugins['outputfilter'][$_name]
-            = array($function, null, null, false);
-    }
-
-    /**
-     * Unregisters an outputfilter function
-     *
-     * @param string $function name of PHP function
-     */
-    function unregister_outputfilter($function)
-    {
-        unset($this->_plugins['outputfilter'][$function]);
-    }
-
-    /**
-     * load a filter of specified type and name
-     *
-     * @param string $type filter type
-     * @param string $name filter name
-     */
-    function load_filter($type, $name)
-    {
-        switch ($type) {
-            case 'output':
-                $_params = array('plugins' => array(array($type . 'filter', $name, null, null, false)));
-                require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_plugins.php');
-                smarty_core_load_plugins($_params, $this);
-                break;
-
-            case 'pre':
-            case 'post':
-                if (!isset($this->_plugins[$type . 'filter'][$name]))
-                    $this->_plugins[$type . 'filter'][$name] = false;
-                break;
-        }
-    }
-
-    /**
-     * clear cached content for the given template and cache id
-     *
-     * @param string $tpl_file name of template file
-     * @param string $cache_id name of cache_id
-     * @param string $compile_id name of compile_id
-     * @param string $exp_time expiration time
-     * @return boolean
-     */
-    function clear_cache($tpl_file = null, $cache_id = null, $compile_id = null, $exp_time = null)
-    {
-
-        if (!isset($compile_id))
-            $compile_id = $this->compile_id;
-
-        if (!isset($tpl_file))
-            $compile_id = null;
-
-        $_auto_id = $this->_get_auto_id($cache_id, $compile_id);
-
-        if (!empty($this->cache_handler_func)) {
-            return call_user_func_array($this->cache_handler_func,
-                                  array('clear', &$this, &$dummy, $tpl_file, $cache_id, $compile_id, $exp_time));
-        } else {
-            $_params = array('auto_base' => $this->cache_dir,
-                            'auto_source' => $tpl_file,
-                            'auto_id' => $_auto_id,
-                            'exp_time' => $exp_time);
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.rm_auto.php');
-            return smarty_core_rm_auto($_params, $this);
-        }
-
-    }
-
-
-    /**
-     * clear the entire contents of cache (all templates)
-     *
-     * @param string $exp_time expire time
-     * @return boolean results of {@link smarty_core_rm_auto()}
-     */
-    function clear_all_cache($exp_time = null)
-    {
-        return $this->clear_cache(null, null, null, $exp_time);
-    }
-
-
-    /**
-     * test to see if valid cache exists for this template
-     *
-     * @param string $tpl_file name of template file
-     * @param string $cache_id
-     * @param string $compile_id
-     * @return string|false results of {@link _read_cache_file()}
-     */
-    function is_cached($tpl_file, $cache_id = null, $compile_id = null)
-    {
-        if (!$this->caching)
-            return false;
-
-        if (!isset($compile_id))
-            $compile_id = $this->compile_id;
-
-        $_params = array(
-            'tpl_file' => $tpl_file,
-            'cache_id' => $cache_id,
-            'compile_id' => $compile_id
-        );
-        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.read_cache_file.php');
-        return smarty_core_read_cache_file($_params, $this);
-    }
-
-
-    /**
-     * clear all the assigned template variables.
-     *
-     */
-    function clear_all_assign()
-    {
-        $this->_tpl_vars = array();
-    }
-
-    /**
-     * clears compiled version of specified template resource,
-     * or all compiled template files if one is not specified.
-     * This function is for advanced use only, not normally needed.
-     *
-     * @param string $tpl_file
-     * @param string $compile_id
-     * @param string $exp_time
-     * @return boolean results of {@link smarty_core_rm_auto()}
-     */
-    function clear_compiled_tpl($tpl_file = null, $compile_id = null, $exp_time = null)
-    {
-        if (!isset($compile_id)) {
-            $compile_id = $this->compile_id;
-        }
-        $_params = array('auto_base' => $this->compile_dir,
-                        'auto_source' => $tpl_file,
-                        'auto_id' => $compile_id,
-                        'exp_time' => $exp_time,
-                        'extensions' => array('.inc', '.php'));
-        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.rm_auto.php');
-        return smarty_core_rm_auto($_params, $this);
-    }
-
-    /**
-     * Checks whether requested template exists.
-     *
-     * @param string $tpl_file
-     * @return boolean
-     */
-    function template_exists($tpl_file)
-    {
-        $_params = array('resource_name' => $tpl_file, 'quiet'=>true, 'get_source'=>false);
-        return $this->_fetch_resource_info($_params);
-    }
-
-    /**
-     * Returns an array containing template variables
-     *
-     * @param string $name
-     * @param string $type
-     * @return array
-     */
-    function &get_template_vars($name=null)
-    {
-        if(!isset($name)) {
-            return $this->_tpl_vars;
-        }
-        if(isset($this->_tpl_vars[$name])) {
-            return $this->_tpl_vars[$name];
-        }
-    }
-
-    /**
-     * Returns an array containing config variables
-     *
-     * @param string $name
-     * @param string $type
-     * @return array
-     */
-    function &get_config_vars($name=null)
-    {
-        if(!isset($name) && is_array($this->_config[0])) {
-            return $this->_config[0]['vars'];
-        } else if(isset($this->_config[0]['vars'][$name])) {
-            return $this->_config[0]['vars'][$name];
-        }
-    }
-
-    /**
-     * trigger Smarty error
-     *
-     * @param string $error_msg
-     * @param integer $error_type
-     */
-    function trigger_error($error_msg, $error_type = E_USER_WARNING)
-    {
-        trigger_error("Smarty error: $error_msg", $error_type);
-    }
-
-
-    /**
-     * executes & displays the template results
-     *
-     * @param string $resource_name
-     * @param string $cache_id
-     * @param string $compile_id
-     */
-    function display($resource_name, $cache_id = null, $compile_id = null)
-    {
-        $this->fetch($resource_name, $cache_id, $compile_id, true);
-    }
-
-    /**
-     * executes & returns or displays the template results
-     *
-     * @param string $resource_name
-     * @param string $cache_id
-     * @param string $compile_id
-     * @param boolean $display
-     */
-    function fetch($resource_name, $cache_id = null, $compile_id = null, $display = false)
-    {
-        static $_cache_info = array();
-        
-        $_smarty_old_error_level = $this->debugging ? error_reporting() : error_reporting(isset($this->error_reporting)
-               ? $this->error_reporting : error_reporting() & ~E_NOTICE);
-
-        if (!$this->debugging && $this->debugging_ctrl == 'URL') {
-            $_query_string = $this->request_use_auto_globals ? $_SERVER['QUERY_STRING'] : $GLOBALS['HTTP_SERVER_VARS']['QUERY_STRING'];
-            if (@strstr($_query_string, $this->_smarty_debug_id)) {
-                if (@strstr($_query_string, $this->_smarty_debug_id . '=on')) {
-                    // enable debugging for this browser session
-                    @setcookie('SMARTY_DEBUG', true);
-                    $this->debugging = true;
-                } elseif (@strstr($_query_string, $this->_smarty_debug_id . '=off')) {
-                    // disable debugging for this browser session
-                    @setcookie('SMARTY_DEBUG', false);
-                    $this->debugging = false;
-                } else {
-                    // enable debugging for this page
-                    $this->debugging = true;
-                }
-            } else {
-                $_cookie_var = $this->request_use_auto_globals ? $_COOKIE['SMARTY_DEBUG'] : $GLOBALS['HTTP_COOKIE_VARS']['SMARTY_DEBUG'];
-                $this->debugging = $_cookie_var ? true : false;
-            }
-        }
-
-        if ($this->debugging) {
-            // capture time for debugging info
-            $_params = array();
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
-            $_debug_start_time = smarty_core_get_microtime($_params, $this);
-            $this->_smarty_debug_info[] = array('type'      => 'template',
-                                                'filename'  => $resource_name,
-                                                'depth'     => 0);
-            $_included_tpls_idx = count($this->_smarty_debug_info) - 1;
-        }
-
-        if (!isset($compile_id)) {
-            $compile_id = $this->compile_id;
-        }
-
-        $this->_compile_id = $compile_id;
-        $this->_inclusion_depth = 0;
-
-        if ($this->caching) {
-            // save old cache_info, initialize cache_info
-            array_push($_cache_info, $this->_cache_info);
-            $this->_cache_info = array();
-            $_params = array(
-                'tpl_file' => $resource_name,
-                'cache_id' => $cache_id,
-                'compile_id' => $compile_id,
-                'results' => null
-            );
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.read_cache_file.php');
-            if (smarty_core_read_cache_file($_params, $this)) {
-                $_smarty_results = $_params['results'];
-                if (@count($this->_cache_info['insert_tags'])) {
-                    $_params = array('plugins' => $this->_cache_info['insert_tags']);
-                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_plugins.php');
-                    smarty_core_load_plugins($_params, $this);
-                    $_params = array('results' => $_smarty_results);
-                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.process_cached_inserts.php');
-                    $_smarty_results = smarty_core_process_cached_inserts($_params, $this);
-                }
-                if (@count($this->_cache_info['cache_serials'])) {
-                    $_params = array('results' => $_smarty_results);
-                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.process_compiled_include.php');
-                    $_smarty_results = smarty_core_process_compiled_include($_params, $this);
-                }
-
-
-                if ($display) {
-                    if ($this->debugging)
-                    {
-                        // capture time for debugging info
-                        $_params = array();
-                        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
-                        $this->_smarty_debug_info[$_included_tpls_idx]['exec_time'] = smarty_core_get_microtime($_params, $this) - $_debug_start_time;
-                        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.display_debug_console.php');
-                        $_smarty_results .= smarty_core_display_debug_console($_params, $this);
-                    }
-                    if ($this->cache_modified_check) {
-                        $_server_vars = ($this->request_use_auto_globals) ? $_SERVER : $GLOBALS['HTTP_SERVER_VARS'];
-                        $_last_modified_date = @substr($_server_vars['HTTP_IF_MODIFIED_SINCE'], 0, strpos($_server_vars['HTTP_IF_MODIFIED_SINCE'], 'GMT') + 3);
-                        $_gmt_mtime = gmdate('D, d M Y H:i:s', $this->_cache_info['timestamp']).' GMT';
-                        if (@count($this->_cache_info['insert_tags']) == 0
-                            && !$this->_cache_serials
-                            && $_gmt_mtime == $_last_modified_date) {
-                            if (php_sapi_name()=='cgi')
-                                header('Status: 304 Not Modified');
-                            else
-                                header('HTTP/1.1 304 Not Modified');
-
-                        } else {
-                            header('Last-Modified: '.$_gmt_mtime);
-                            echo $_smarty_results;
-                        }
-                    } else {
-                            echo $_smarty_results;
-                    }
-                    error_reporting($_smarty_old_error_level);
-                    // restore initial cache_info
-                    $this->_cache_info = array_pop($_cache_info);
-                    return true;
-                } else {
-                    error_reporting($_smarty_old_error_level);
-                    // restore initial cache_info
-                    $this->_cache_info = array_pop($_cache_info);
-                    return $_smarty_results;
-                }
-            } else {
-                $this->_cache_info['template'][$resource_name] = true;
-                if ($this->cache_modified_check && $display) {
-                    header('Last-Modified: '.gmdate('D, d M Y H:i:s', time()).' GMT');
-                }
-            }
-        }
-
-        // load filters that are marked as autoload
-        if (count($this->autoload_filters)) {
-            foreach ($this->autoload_filters as $_filter_type => $_filters) {
-                foreach ($_filters as $_filter) {
-                    $this->load_filter($_filter_type, $_filter);
-                }
-            }
-        }
-
-        $_smarty_compile_path = $this->_get_compile_path($resource_name);
-
-        // if we just need to display the results, don't perform output
-        // buffering - for speed
-        $_cache_including = $this->_cache_including;
-        $this->_cache_including = false;
-        if ($display && !$this->caching && count($this->_plugins['outputfilter']) == 0) {
-            if ($this->_is_compiled($resource_name, $_smarty_compile_path)
-                    || $this->_compile_resource($resource_name, $_smarty_compile_path))
-            {
-                include($_smarty_compile_path);
-            }
-        } else {
-            ob_start();
-            if ($this->_is_compiled($resource_name, $_smarty_compile_path)
-                    || $this->_compile_resource($resource_name, $_smarty_compile_path))
-            {
-                include($_smarty_compile_path);
-            }
-            $_smarty_results = ob_get_contents();
-            ob_end_clean();
-
-            foreach ((array)$this->_plugins['outputfilter'] as $_output_filter) {
-                $_smarty_results = call_user_func_array($_output_filter[0], array($_smarty_results, &$this));
-            }
-        }
-
-        if ($this->caching) {
-            $_params = array('tpl_file' => $resource_name,
-                        'cache_id' => $cache_id,
-                        'compile_id' => $compile_id,
-                        'results' => $_smarty_results);
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.write_cache_file.php');
-            smarty_core_write_cache_file($_params, $this);
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.process_cached_inserts.php');
-            $_smarty_results = smarty_core_process_cached_inserts($_params, $this);
-
-            if ($this->_cache_serials) {
-                // strip nocache-tags from output
-                $_smarty_results = preg_replace('!(\{/?nocache\:[0-9a-f]{32}#\d+\})!s'
-                                                ,''
-                                                ,$_smarty_results);
-            }
-            // restore initial cache_info
-            $this->_cache_info = array_pop($_cache_info);
-        }
-        $this->_cache_including = $_cache_including;
-
-        if ($display) {
-            if (isset($_smarty_results)) { echo $_smarty_results; }
-            if ($this->debugging) {
-                // capture time for debugging info
-                $_params = array();
-                require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
-                $this->_smarty_debug_info[$_included_tpls_idx]['exec_time'] = (smarty_core_get_microtime($_params, $this) - $_debug_start_time);
-                require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.display_debug_console.php');
-                echo smarty_core_display_debug_console($_params, $this);
-            }
-            error_reporting($_smarty_old_error_level);
-            return;
-        } else {
-            error_reporting($_smarty_old_error_level);
-            if (isset($_smarty_results)) { return $_smarty_results; }
-        }
-    }
-
-    /**
-     * load configuration values
-     *
-     * @param string $file
-     * @param string $section
-     * @param string $scope
-     */
-    function config_load($file, $section = null, $scope = 'global')
-    {
-        require_once($this->_get_plugin_filepath('function', 'config_load'));
-        smarty_function_config_load(array('file' => $file, 'section' => $section, 'scope' => $scope), $this);
-    }
-
-    /**
-     * return a reference to a registered object
-     *
-     * @param string $name
-     * @return object
-     */
-    function &get_registered_object($name) {
-        if (!isset($this->_reg_objects[$name]))
-        $this->_trigger_fatal_error("'$name' is not a registered object");
-
-        if (!is_object($this->_reg_objects[$name][0]))
-        $this->_trigger_fatal_error("registered '$name' is not an object");
-
-        return $this->_reg_objects[$name][0];
-    }
-
-    /**
-     * clear configuration values
-     *
-     * @param string $var
-     */
-    function clear_config($var = null)
-    {
-        if(!isset($var)) {
-            // clear all values
-            $this->_config = array(array('vars'  => array(),
-                                         'files' => array()));
-        } else {
-            unset($this->_config[0]['vars'][$var]);
-        }
-    }
-
-    /**
-     * get filepath of requested plugin
-     *
-     * @param string $type
-     * @param string $name
-     * @return string|false
-     */
-    function _get_plugin_filepath($type, $name)
-    {
-        $_params = array('type' => $type, 'name' => $name);
-        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.assemble_plugin_filepath.php');
-        return smarty_core_assemble_plugin_filepath($_params, $this);
-    }
-
-   /**
-     * test if resource needs compiling
-     *
-     * @param string $resource_name
-     * @param string $compile_path
-     * @return boolean
-     */
-    function _is_compiled($resource_name, $compile_path)
-    {
-        if (!$this->force_compile && file_exists($compile_path)) {
-            if (!$this->compile_check) {
-                // no need to check compiled file
-                return true;
-            } else {
-                // get file source and timestamp
-                $_params = array('resource_name' => $resource_name, 'get_source'=>false);
-                if (!$this->_fetch_resource_info($_params)) {
-                    return false;
-                }
-                if ($_params['resource_timestamp'] <= filemtime($compile_path)) {
-                    // template not expired, no recompile
-                    return true;
-                } else {
-                    // compile template
-                    return false;
-                }
-            }
-        } else {
-            // compiled template does not exist, or forced compile
-            return false;
-        }
-    }
-
-   /**
-     * compile the template
-     *
-     * @param string $resource_name
-     * @param string $compile_path
-     * @return boolean
-     */
-    function _compile_resource($resource_name, $compile_path)
-    {
-
-        $_params = array('resource_name' => $resource_name);
-        if (!$this->_fetch_resource_info($_params)) {
-            return false;
-        }
-
-        $_source_content = $_params['source_content'];
-        $_cache_include    = substr($compile_path, 0, -4).'.inc';
-
-        if ($this->_compile_source($resource_name, $_source_content, $_compiled_content, $_cache_include)) {
-            // if a _cache_serial was set, we also have to write an include-file:
-            if ($this->_cache_include_info) {
-                require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.write_compiled_include.php');
-                smarty_core_write_compiled_include(array_merge($this->_cache_include_info, array('compiled_content'=>$_compiled_content)),  $this);
-            }
-
-            $_params = array('compile_path'=>$compile_path, 'compiled_content' => $_compiled_content);
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.write_compiled_resource.php');
-            smarty_core_write_compiled_resource($_params, $this);
-
-            return true;
-        } else {
-            return false;
-        }
-
-    }
-
-   /**
-     * compile the given source
-     *
-     * @param string $resource_name
-     * @param string $source_content
-     * @param string $compiled_content
-     * @return boolean
-     */
-    function _compile_source($resource_name, &$source_content, &$compiled_content, $cache_include_path=null)
-    {
-        if (file_exists(SMARTY_DIR . $this->compiler_file)) {
-            require_once(SMARTY_DIR . $this->compiler_file);
-        } else {
-            // use include_path
-            require_once($this->compiler_file);
-        }
-
-
-        $smarty_compiler = new $this->compiler_class;
-
-        $smarty_compiler->template_dir      = $this->template_dir;
-        $smarty_compiler->compile_dir       = $this->compile_dir;
-        $smarty_compiler->plugins_dir       = $this->plugins_dir;
-        $smarty_compiler->config_dir        = $this->config_dir;
-        $smarty_compiler->force_compile     = $this->force_compile;
-        $smarty_compiler->caching           = $this->caching;
-        $smarty_compiler->php_handling      = $this->php_handling;
-        $smarty_compiler->left_delimiter    = $this->left_delimiter;
-        $smarty_compiler->right_delimiter   = $this->right_delimiter;
-        $smarty_compiler->_version          = $this->_version;
-        $smarty_compiler->security          = $this->security;
-        $smarty_compiler->secure_dir        = $this->secure_dir;
-        $smarty_compiler->security_settings = $this->security_settings;
-        $smarty_compiler->trusted_dir       = $this->trusted_dir;
-        $smarty_compiler->use_sub_dirs      = $this->use_sub_dirs;
-        $smarty_compiler->_reg_objects      = &$this->_reg_objects;
-        $smarty_compiler->_plugins          = &$this->_plugins;
-        $smarty_compiler->_tpl_vars         = &$this->_tpl_vars;
-        $smarty_compiler->default_modifiers = $this->default_modifiers;
-        $smarty_compiler->compile_id        = $this->_compile_id;
-        $smarty_compiler->_config            = $this->_config;
-        $smarty_compiler->request_use_auto_globals  = $this->request_use_auto_globals;
-
-        $smarty_compiler->_cache_serial = null;
-        $smarty_compiler->_cache_include = $cache_include_path;
-
-
-        $_results = $smarty_compiler->_compile_file($resource_name, $source_content, $compiled_content);
-
-        if ($smarty_compiler->_cache_serial) {
-            $this->_cache_include_info = array(
-                'cache_serial'=>$smarty_compiler->_cache_serial
-                ,'plugins_code'=>$smarty_compiler->_plugins_code
-                ,'include_file_path' => $cache_include_path);
-
-        } else {
-            $this->_cache_include_info = null;
-
-        }
-
-        return $_results;
-    }
-
-    /**
-     * Get the compile path for this resource
-     *
-     * @param string $resource_name
-     * @return string results of {@link _get_auto_filename()}
-     */
-    function _get_compile_path($resource_name)
-    {
-        return $this->_get_auto_filename($this->compile_dir, $resource_name,
-                                         $this->_compile_id) . '.php';
-    }
-
-    /**
-     * fetch the template info. Gets timestamp, and source
-     * if get_source is true
-     *
-     * sets $source_content to the source of the template, and
-     * $resource_timestamp to its time stamp
-     * @param string $resource_name
-     * @param string $source_content
-     * @param integer $resource_timestamp
-     * @param boolean $get_source
-     * @param boolean $quiet
-     * @return boolean
-     */
-
-    function _fetch_resource_info(&$params)
-    {
-        if(!isset($params['get_source'])) { $params['get_source'] = true; }
-        if(!isset($params['quiet'])) { $params['quiet'] = false; }
-
-        $_return = false;
-        $_params = array('resource_name' => $params['resource_name']) ;
-        if (isset($params['resource_base_path']))
-            $_params['resource_base_path'] = $params['resource_base_path'];
-        else
-            $_params['resource_base_path'] = $this->template_dir;
-
-        if ($this->_parse_resource_name($_params)) {
-            $_resource_type = $_params['resource_type'];
-            $_resource_name = $_params['resource_name'];
-            switch ($_resource_type) {
-                case 'file':
-                    if ($params['get_source']) {
-                        $params['source_content'] = $this->_read_file($_resource_name);
-                    }
-                    $params['resource_timestamp'] = filemtime($_resource_name);
-                    $_return = is_file($_resource_name);
-                    break;
-
-                default:
-                    // call resource functions to fetch the template source and timestamp
-                    if ($params['get_source']) {
-                        $_source_return = isset($this->_plugins['resource'][$_resource_type]) &&
-                            call_user_func_array($this->_plugins['resource'][$_resource_type][0][0],
-                                                 array($_resource_name, &$params['source_content'], &$this));
-                    } else {
-                        $_source_return = true;
-                    }
-
-                    $_timestamp_return = isset($this->_plugins['resource'][$_resource_type]) &&
-                        call_user_func_array($this->_plugins['resource'][$_resource_type][0][1],
-                                             array($_resource_name, &$params['resource_timestamp'], &$this));
-
-                    $_return = $_source_return && $_timestamp_return;
-                    break;
-            }
-        }
-
-        if (!$_return) {
-            // see if we can get a template with the default template handler
-            if (!empty($this->default_template_handler_func)) {
-                if (!is_callable($this->default_template_handler_func)) {
-                    $this->trigger_error("default template handler function \"$this->default_template_handler_func\" doesn't exist.");
-                } else {
-                    $_return = call_user_func_array(
-                        $this->default_template_handler_func,
-                        array($_params['resource_type'], $_params['resource_name'], &$params['source_content'], &$params['resource_timestamp'], &$this));
-                }
-            }
-        }
-
-        if (!$_return) {
-            if (!$params['quiet']) {
-                $this->trigger_error('unable to read resource: "' . $params['resource_name'] . '"');
-            }
-        } else if ($_return && $this->security) {
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.is_secure.php');
-            if (!smarty_core_is_secure($_params, $this)) {
-                if (!$params['quiet'])
-                    $this->trigger_error('(secure mode) accessing "' . $params['resource_name'] . '" is not allowed');
-                $params['source_content'] = null;
-                $params['resource_timestamp'] = null;
-                return false;
-            }
-        }
-        return $_return;
-    }
-
-
-    /**
-     * parse out the type and name from the resource
-     *
-     * @param string $resource_base_path
-     * @param string $resource_name
-     * @param string $resource_type
-     * @param string $resource_name
-     * @return boolean
-     */
-
-    function _parse_resource_name(&$params)
-    {
-
-        // split tpl_path by the first colon
-        $_resource_name_parts = explode(':', $params['resource_name'], 2);
-
-        if (count($_resource_name_parts) == 1) {
-            // no resource type given
-            $params['resource_type'] = $this->default_resource_type;
-            $params['resource_name'] = $_resource_name_parts[0];
-        } else {
-            if(strlen($_resource_name_parts[0]) == 1) {
-                // 1 char is not resource type, but part of filepath
-                $params['resource_type'] = $this->default_resource_type;
-                $params['resource_name'] = $params['resource_name'];
-            } else {
-                $params['resource_type'] = $_resource_name_parts[0];
-                $params['resource_name'] = $_resource_name_parts[1];
-            }
-        }
-
-        if ($params['resource_type'] == 'file') {
-            if (!preg_match('/^([\/\\\\]|[a-zA-Z]:[\/\\\\])/', $params['resource_name'])) {
-                // relative pathname to $params['resource_base_path']
-                // use the first directory where the file is found
-                foreach ((array)$params['resource_base_path'] as $_curr_path) {
-                    $_fullpath = $_curr_path . DIRECTORY_SEPARATOR . $params['resource_name'];
-                    if (file_exists($_fullpath) && is_file($_fullpath)) {
-                        $params['resource_name'] = $_fullpath;
-                        return true;
-                    }
-                    // didn't find the file, try include_path
-                    $_params = array('file_path' => $_fullpath);
-                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_include_path.php');
-                    if(smarty_core_get_include_path($_params, $this)) {
-                        $params['resource_name'] = $_params['new_file_path'];
-                        return true;
-                    }
-                }
-                return false;
-            } else {
-                /* absolute path */
-                return file_exists($params['resource_name']);
-            }
-        } elseif (empty($this->_plugins['resource'][$params['resource_type']])) {
-            $_params = array('type' => $params['resource_type']);
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_resource_plugin.php');
-            smarty_core_load_resource_plugin($_params, $this);
-        }
-
-        return true;
-    }
-
-
-    /**
-     * Handle modifiers
-     *
-     * @param string|null $modifier_name
-     * @param array|null $map_array
-     * @return string result of modifiers
-     */
-    function _run_mod_handler()
-    {
-        $_args = func_get_args();
-        list($_modifier_name, $_map_array) = array_splice($_args, 0, 2);
-        list($_func_name, $_tpl_file, $_tpl_line) =
-            $this->_plugins['modifier'][$_modifier_name];
-
-        $_var = $_args[0];
-        foreach ($_var as $_key => $_val) {
-            $_args[0] = $_val;
-            $_var[$_key] = call_user_func_array($_func_name, $_args);
-        }
-        return $_var;
-    }
-
-    /**
-     * Remove starting and ending quotes from the string
-     *
-     * @param string $string
-     * @return string
-     */
-    function _dequote($string)
-    {
-        if (($string{0} == "'" || $string{0} == '"') &&
-            $string{strlen($string)-1} == $string{0})
-            return substr($string, 1, -1);
-        else
-            return $string;
-    }
-
-
-    /**
-     * read in a file from line $start for $lines.
-     * read the entire file if $start and $lines are null.
-     *
-     * @param string $filename
-     * @param integer $start
-     * @param integer $lines
-     * @return string
-     */
-    function _read_file($filename)
-    {
-        if ( file_exists($filename) && ($fd = @fopen($filename, 'rb')) ) {
-            $contents = ($size = filesize($filename)) ? fread($fd, $size) : '';
-            fclose($fd);
-            return $contents;
-        } else {
-            return false;
-        }
-    }
-
-    /**
-     * get a concrete filename for automagically created content
-     *
-     * @param string $auto_base
-     * @param string $auto_source
-     * @param string $auto_id
-     * @return string
-     * @staticvar string|null
-     * @staticvar string|null
-     */
-    function _get_auto_filename($auto_base, $auto_source = null, $auto_id = null)
-    {
-        $_compile_dir_sep =  $this->use_sub_dirs ? DIRECTORY_SEPARATOR : '^';
-        $_return = $auto_base . DIRECTORY_SEPARATOR;
-
-        if(isset($auto_id)) {
-            // make auto_id safe for directory names
-            $auto_id = str_replace('%7C',$_compile_dir_sep,(urlencode($auto_id)));
-            // split into separate directories
-            $_return .= $auto_id . $_compile_dir_sep;
-        }
-
-        if(isset($auto_source)) {
-            // make source name safe for filename
-            $_filename = urlencode(basename($auto_source));
-            $_crc32 = sprintf('%08X', crc32($auto_source));
-            // prepend %% to avoid name conflicts with
-            // with $params['auto_id'] names
-            $_crc32 = substr($_crc32, 0, 2) . $_compile_dir_sep .
-                      substr($_crc32, 0, 3) . $_compile_dir_sep . $_crc32;
-            $_return .= '%%' . $_crc32 . '%%' . $_filename;
-        }
-
-        return $_return;
-    }
-
-    /**
-     * unlink a file, possibly using expiration time
-     *
-     * @param string $resource
-     * @param integer $exp_time
-     */
-    function _unlink($resource, $exp_time = null)
-    {
-        if(isset($exp_time)) {
-            if(time() - @filemtime($resource) >= $exp_time) {
-                return @unlink($resource);
-            }
-        } else {
-            return @unlink($resource);
-        }
-    }
-
-    /**
-     * returns an auto_id for auto-file-functions
-     *
-     * @param string $cache_id
-     * @param string $compile_id
-     * @return string|null
-     */
-    function _get_auto_id($cache_id=null, $compile_id=null) {
-    if (isset($cache_id))
-        return (isset($compile_id)) ? $cache_id . '|' . $compile_id  : $cache_id;
-    elseif(isset($compile_id))
-        return $compile_id;
-    else
-        return null;
-    }
-
-    /**
-     * trigger Smarty plugin error
-     *
-     * @param string $error_msg
-     * @param string $tpl_file
-     * @param integer $tpl_line
-     * @param string $file
-     * @param integer $line
-     * @param integer $error_type
-     */
-    function _trigger_fatal_error($error_msg, $tpl_file = null, $tpl_line = null,
-            $file = null, $line = null, $error_type = E_USER_ERROR)
-    {
-        if(isset($file) && isset($line)) {
-            $info = ' ('.basename($file).", line $line)";
-        } else {
-            $info = '';
-        }
-        if (isset($tpl_line) && isset($tpl_file)) {
-            $this->trigger_error('[in ' . $tpl_file . ' line ' . $tpl_line . "]: $error_msg$info", $error_type);
-        } else {
-            $this->trigger_error($error_msg . $info, $error_type);
-        }
-    }
-
-
-    /**
-     * callback function for preg_replace, to call a non-cacheable block
-     * @return string
-     */
-    function _process_compiled_include_callback($match) {
-        $_func = '_smarty_tplfunc_'.$match[2].'_'.$match[3];
-        ob_start();
-        $_func($this);
-        $_ret = ob_get_contents();
-        ob_end_clean();
-        return $_ret;
-    }
-
-
-    /**
-     * called for included templates
-     *
-     * @param string $_smarty_include_tpl_file
-     * @param string $_smarty_include_vars
-     */
-
-    // $_smarty_include_tpl_file, $_smarty_include_vars
-
-    function _smarty_include($params)
-    {
-        if ($this->debugging) {
-            $_params = array();
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
-            $debug_start_time = smarty_core_get_microtime($_params, $this);
-            $this->_smarty_debug_info[] = array('type'      => 'template',
-                                                  'filename'  => $params['smarty_include_tpl_file'],
-                                                  'depth'     => ++$this->_inclusion_depth);
-            $included_tpls_idx = count($this->_smarty_debug_info) - 1;
-        }
-
-        $this->_tpl_vars = array_merge($this->_tpl_vars, $params['smarty_include_vars']);
-
-        // config vars are treated as local, so push a copy of the
-        // current ones onto the front of the stack
-        array_unshift($this->_config, $this->_config[0]);
-
-        $_smarty_compile_path = $this->_get_compile_path($params['smarty_include_tpl_file']);
-
-
-        if ($this->_is_compiled($params['smarty_include_tpl_file'], $_smarty_compile_path)
-            || $this->_compile_resource($params['smarty_include_tpl_file'], $_smarty_compile_path))
-        {
-            include($_smarty_compile_path);
-        }
-
-        // pop the local vars off the front of the stack
-        array_shift($this->_config);
-
-        $this->_inclusion_depth--;
-
-        if ($this->debugging) {
-            // capture time for debugging info
-            $_params = array();
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
-            $this->_smarty_debug_info[$included_tpls_idx]['exec_time'] = smarty_core_get_microtime($_params, $this) - $debug_start_time;
-        }
-
-        if ($this->caching) {
-            $this->_cache_info['template'][$params['smarty_include_tpl_file']] = true;
-        }
-    }
-
-
-    /**
-     * get or set an array of cached attributes for function that is
-     * not cacheable
-     * @return array
-     */
-    function &_smarty_cache_attrs($cache_serial, $count) {
-        $_cache_attrs =& $this->_cache_info['cache_attrs'][$cache_serial][$count];
-
-        if ($this->_cache_including) {
-            /* return next set of cache_attrs */
-            $_return =& current($_cache_attrs);
-            next($_cache_attrs);
-            return $_return;
-
-        } else {
-            /* add a reference to a new set of cache_attrs */
-            $_cache_attrs[] = array();
-            return $_cache_attrs[count($_cache_attrs)-1];
-
-        }
-
-    }
-
-
-    /**
-     * wrapper for include() retaining $this
-     * @return mixed
-     */
-    function _include($filename, $once=false, $params=null)
-    {
-        if ($once) {
-            return include_once($filename);
-        } else {
-            return include($filename);
-        }
-    }
-
-
-    /**
-     * wrapper for eval() retaining $this
-     * @return mixed
-     */
-    function _eval($code, $params=null)
-    {
-        return eval($code);
-    }
-    /**#@-*/
-
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+
+/**
+ * Project:     Smarty: the PHP compiling template engine
+ * File:        Smarty.class.php
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ * For questions, help, comments, discussion, etc., please join the
+ * Smarty mailing list. Send a blank e-mail to
+ * smarty-general-subscribe at lists.php.net
+ *
+ * @link http://smarty.php.net/
+ * @copyright 2001-2005 New Digital Group, Inc.
+ * @author Monte Ohrt <monte at ohrt dot com>
+ * @author Andrei Zmievski <andrei at php.net>
+ * @package Smarty
+ * @version 2.6.10
+ */
+
+/* $Id$ */
+
+/**
+ * DIR_SEP isn't used anymore, but third party apps might
+ */
+if(!defined('DIR_SEP')) {
+    define('DIR_SEP', DIRECTORY_SEPARATOR);
+}
+
+/**
+ * set SMARTY_DIR to absolute path to Smarty library files.
+ * if not defined, include_path will be used. Sets SMARTY_DIR only if user
+ * application has not already defined it.
+ */
+
+if (!defined('SMARTY_DIR')) {
+    define('SMARTY_DIR', dirname(__FILE__) . DIRECTORY_SEPARATOR);
+}
+
+if (!defined('SMARTY_CORE_DIR')) {
+    define('SMARTY_CORE_DIR', SMARTY_DIR . 'internals' . DIRECTORY_SEPARATOR);
+}
+
+define('SMARTY_PHP_PASSTHRU',   0);
+define('SMARTY_PHP_QUOTE',      1);
+define('SMARTY_PHP_REMOVE',     2);
+define('SMARTY_PHP_ALLOW',      3);
+
+/**
+ * @package Smarty
+ */
+class Smarty
+{
+    /**#@+
+     * Smarty Configuration Section
+     */
+
+    /**
+     * The name of the directory where templates are located.
+     *
+     * @var string
+     */
+    var $template_dir    =  'templates';
+
+    /**
+     * The directory where compiled templates are located.
+     *
+     * @var string
+     */
+    var $compile_dir     =  'templates_c';
+
+    /**
+     * The directory where config files are located.
+     *
+     * @var string
+     */
+    var $config_dir      =  'configs';
+
+    /**
+     * An array of directories searched for plugins.
+     *
+     * @var array
+     */
+    var $plugins_dir     =  array('plugins');
+
+    /**
+     * If debugging is enabled, a debug console window will display
+     * when the page loads (make sure your browser allows unrequested
+     * popup windows)
+     *
+     * @var boolean
+     */
+    var $debugging       =  false;
+
+    /**
+     * When set, smarty does uses this value as error_reporting-level.
+     *
+     * @var boolean
+     */
+    var $error_reporting  =  null;
+
+    /**
+     * This is the path to the debug console template. If not set,
+     * the default one will be used.
+     *
+     * @var string
+     */
+    var $debug_tpl       =  '';
+
+    /**
+     * This determines if debugging is enable-able from the browser.
+     * <ul>
+     *  <li>NONE => no debugging control allowed</li>
+     *  <li>URL => enable debugging when SMARTY_DEBUG is found in the URL.</li>
+     * </ul>
+     * @link http://www.foo.dom/index.php?SMARTY_DEBUG
+     * @var string
+     */
+    var $debugging_ctrl  =  'NONE';
+
+    /**
+     * This tells Smarty whether to check for recompiling or not. Recompiling
+     * does not need to happen unless a template or config file is changed.
+     * Typically you enable this during development, and disable for
+     * production.
+     *
+     * @var boolean
+     */
+    var $compile_check   =  true;
+
+    /**
+     * This forces templates to compile every time. Useful for development
+     * or debugging.
+     *
+     * @var boolean
+     */
+    var $force_compile   =  false;
+
+    /**
+     * This enables template caching.
+     * <ul>
+     *  <li>0 = no caching</li>
+     *  <li>1 = use class cache_lifetime value</li>
+     *  <li>2 = use cache_lifetime in cache file</li>
+     * </ul>
+     * @var integer
+     */
+    var $caching         =  0;
+
+    /**
+     * The name of the directory for cache files.
+     *
+     * @var string
+     */
+    var $cache_dir       =  'cache';
+
+    /**
+     * This is the number of seconds cached content will persist.
+     * <ul>
+     *  <li>0 = always regenerate cache</li>
+     *  <li>-1 = never expires</li>
+     * </ul>
+     *
+     * @var integer
+     */
+    var $cache_lifetime  =  3600;
+
+    /**
+     * Only used when $caching is enabled. If true, then If-Modified-Since headers
+     * are respected with cached content, and appropriate HTTP headers are sent.
+     * This way repeated hits to a cached page do not send the entire page to the
+     * client every time.
+     *
+     * @var boolean
+     */
+    var $cache_modified_check = false;
+
+    /**
+     * This determines how Smarty handles "<?php ... ?>" tags in templates.
+     * possible values:
+     * <ul>
+     *  <li>SMARTY_PHP_PASSTHRU -> print tags as plain text</li>
+     *  <li>SMARTY_PHP_QUOTE    -> escape tags as entities</li>
+     *  <li>SMARTY_PHP_REMOVE   -> remove php tags</li>
+     *  <li>SMARTY_PHP_ALLOW    -> execute php tags</li>
+     * </ul>
+     *
+     * @var integer
+     */
+    var $php_handling    =  SMARTY_PHP_PASSTHRU;
+
+    /**
+     * This enables template security. When enabled, many things are restricted
+     * in the templates that normally would go unchecked. This is useful when
+     * untrusted parties are editing templates and you want a reasonable level
+     * of security. (no direct execution of PHP in templates for example)
+     *
+     * @var boolean
+     */
+    var $security       =   false;
+
+    /**
+     * This is the list of template directories that are considered secure. This
+     * is used only if {@link $security} is enabled. One directory per array
+     * element.  {@link $template_dir} is in this list implicitly.
+     *
+     * @var array
+     */
+    var $secure_dir     =   array();
+
+    /**
+     * These are the security settings for Smarty. They are used only when
+     * {@link $security} is enabled.
+     *
+     * @var array
+     */
+    var $security_settings  = array(
+                                    'PHP_HANDLING'    => false,
+                                    'IF_FUNCS'        => array('array', 'list',
+                                                               'isset', 'empty',
+                                                               'count', 'sizeof',
+                                                               'in_array', 'is_array',
+                                                               'true', 'false', 'null'),
+                                    'INCLUDE_ANY'     => false,
+                                    'PHP_TAGS'        => false,
+                                    'MODIFIER_FUNCS'  => array('count'),
+                                    'ALLOW_CONSTANTS'  => false
+                                   );
+
+    /**
+     * This is an array of directories where trusted php scripts reside.
+     * {@link $security} is disabled during their inclusion/execution.
+     *
+     * @var array
+     */
+    var $trusted_dir        = array();
+
+    /**
+     * The left delimiter used for the template tags.
+     *
+     * @var string
+     */
+    var $left_delimiter  =  '{';
+
+    /**
+     * The right delimiter used for the template tags.
+     *
+     * @var string
+     */
+    var $right_delimiter =  '}';
+
+    /**
+     * The order in which request variables are registered, similar to
+     * variables_order in php.ini E = Environment, G = GET, P = POST,
+     * C = Cookies, S = Server
+     *
+     * @var string
+     */
+    var $request_vars_order    = 'EGPCS';
+
+    /**
+     * Indicates wether $HTTP_*_VARS[] (request_use_auto_globals=false)
+     * are uses as request-vars or $_*[]-vars. note: if
+     * request_use_auto_globals is true, then $request_vars_order has
+     * no effect, but the php-ini-value "gpc_order"
+     *
+     * @var boolean
+     */
+    var $request_use_auto_globals      = true;
+
+    /**
+     * Set this if you want different sets of compiled files for the same
+     * templates. This is useful for things like different languages.
+     * Instead of creating separate sets of templates per language, you
+     * set different compile_ids like 'en' and 'de'.
+     *
+     * @var string
+     */
+    var $compile_id            = null;
+
+    /**
+     * This tells Smarty whether or not to use sub dirs in the cache/ and
+     * templates_c/ directories. sub directories better organized, but
+     * may not work well with PHP safe mode enabled.
+     *
+     * @var boolean
+     *
+     */
+    var $use_sub_dirs          = false;
+
+    /**
+     * This is a list of the modifiers to apply to all template variables.
+     * Put each modifier in a separate array element in the order you want
+     * them applied. example: <code>array('escape:"htmlall"');</code>
+     *
+     * @var array
+     */
+    var $default_modifiers        = array();
+
+    /**
+     * This is the resource type to be used when not specified
+     * at the beginning of the resource path. examples:
+     * $smarty->display('file:index.tpl');
+     * $smarty->display('db:index.tpl');
+     * $smarty->display('index.tpl'); // will use default resource type
+     * {include file="file:index.tpl"}
+     * {include file="db:index.tpl"}
+     * {include file="index.tpl"} {* will use default resource type *}
+     *
+     * @var array
+     */
+    var $default_resource_type    = 'file';
+
+    /**
+     * The function used for cache file handling. If not set, built-in caching is used.
+     *
+     * @var null|string function name
+     */
+    var $cache_handler_func   = null;
+
+    /**
+     * This indicates which filters are automatically loaded into Smarty.
+     *
+     * @var array array of filter names
+     */
+    var $autoload_filters = array();
+
+    /**#@+
+     * @var boolean
+     */
+    /**
+     * This tells if config file vars of the same name overwrite each other or not.
+     * if disabled, same name variables are accumulated in an array.
+     */
+    var $config_overwrite = true;
+
+    /**
+     * This tells whether or not to automatically booleanize config file variables.
+     * If enabled, then the strings "on", "true", and "yes" are treated as boolean
+     * true, and "off", "false" and "no" are treated as boolean false.
+     */
+    var $config_booleanize = true;
+
+    /**
+     * This tells whether hidden sections [.foobar] are readable from the
+     * tempalates or not. Normally you would never allow this since that is
+     * the point behind hidden sections: the application can access them, but
+     * the templates cannot.
+     */
+    var $config_read_hidden = false;
+
+    /**
+     * This tells whether or not automatically fix newlines in config files.
+     * It basically converts \r (mac) or \r\n (dos) to \n
+     */
+    var $config_fix_newlines = true;
+    /**#@-*/
+
+    /**
+     * If a template cannot be found, this PHP function will be executed.
+     * Useful for creating templates on-the-fly or other special action.
+     *
+     * @var string function name
+     */
+    var $default_template_handler_func = '';
+
+    /**
+     * The file that contains the compiler class. This can a full
+     * pathname, or relative to the php_include path.
+     *
+     * @var string
+     */
+    var $compiler_file        =    'Smarty_Compiler.class.php';
+
+    /**
+     * The class used for compiling templates.
+     *
+     * @var string
+     */
+    var $compiler_class        =   'Smarty_Compiler';
+
+    /**
+     * The class used to load config vars.
+     *
+     * @var string
+     */
+    var $config_class          =   'Config_File';
+
+/**#@+
+ * END Smarty Configuration Section
+ * There should be no need to touch anything below this line.
+ * @access private
+ */
+    /**
+     * where assigned template vars are kept
+     *
+     * @var array
+     */
+    var $_tpl_vars             = array();
+
+    /**
+     * stores run-time $smarty.* vars
+     *
+     * @var null|array
+     */
+    var $_smarty_vars          = null;
+
+    /**
+     * keeps track of sections
+     *
+     * @var array
+     */
+    var $_sections             = array();
+
+    /**
+     * keeps track of foreach blocks
+     *
+     * @var array
+     */
+    var $_foreach              = array();
+
+    /**
+     * keeps track of tag hierarchy
+     *
+     * @var array
+     */
+    var $_tag_stack            = array();
+
+    /**
+     * configuration object
+     *
+     * @var Config_file
+     */
+    var $_conf_obj             = null;
+
+    /**
+     * loaded configuration settings
+     *
+     * @var array
+     */
+    var $_config               = array(array('vars'  => array(), 'files' => array()));
+
+    /**
+     * md5 checksum of the string 'Smarty'
+     *
+     * @var string
+     */
+    var $_smarty_md5           = 'f8d698aea36fcbead2b9d5359ffca76f';
+
+    /**
+     * Smarty version number
+     *
+     * @var string
+     */
+    var $_version              = '2.6.10';
+
+    /**
+     * current template inclusion depth
+     *
+     * @var integer
+     */
+    var $_inclusion_depth      = 0;
+
+    /**
+     * for different compiled templates
+     *
+     * @var string
+     */
+    var $_compile_id           = null;
+
+    /**
+     * text in URL to enable debug mode
+     *
+     * @var string
+     */
+    var $_smarty_debug_id      = 'SMARTY_DEBUG';
+
+    /**
+     * debugging information for debug console
+     *
+     * @var array
+     */
+    var $_smarty_debug_info    = array();
+
+    /**
+     * info that makes up a cache file
+     *
+     * @var array
+     */
+    var $_cache_info           = array();
+
+    /**
+     * default file permissions
+     *
+     * @var integer
+     */
+    var $_file_perms           = 0644;
+
+    /**
+     * default dir permissions
+     *
+     * @var integer
+     */
+    var $_dir_perms               = 0771;
+
+    /**
+     * registered objects
+     *
+     * @var array
+     */
+    var $_reg_objects           = array();
+
+    /**
+     * table keeping track of plugins
+     *
+     * @var array
+     */
+    var $_plugins              = array(
+                                       'modifier'      => array(),
+                                       'function'      => array(),
+                                       'block'         => array(),
+                                       'compiler'      => array(),
+                                       'prefilter'     => array(),
+                                       'postfilter'    => array(),
+                                       'outputfilter'  => array(),
+                                       'resource'      => array(),
+                                       'insert'        => array());
+
+
+    /**
+     * cache serials
+     *
+     * @var array
+     */
+    var $_cache_serials = array();
+
+    /**
+     * name of optional cache include file
+     *
+     * @var string
+     */
+    var $_cache_include = null;
+
+    /**
+     * indicate if the current code is used in a compiled
+     * include
+     *
+     * @var string
+     */
+    var $_cache_including = false;
+
+    /**#@-*/
+    /**
+     * The class constructor.
+     */
+    function Smarty()
+    {
+      $this->assign('SCRIPT_NAME', isset($_SERVER['SCRIPT_NAME']) ? $_SERVER['SCRIPT_NAME']
+                    : @$GLOBALS['HTTP_SERVER_VARS']['SCRIPT_NAME']);
+    }
+
+    /**
+     * assigns values to template variables
+     *
+     * @param array|string $tpl_var the template variable name(s)
+     * @param mixed $value the value to assign
+     */
+    function assign($tpl_var, $value = null)
+    {
+        if (is_array($tpl_var)){
+            foreach ($tpl_var as $key => $val) {
+                if ($key != '') {
+                    $this->_tpl_vars[$key] = $val;
+                }
+            }
+        } else {
+            if ($tpl_var != '')
+                $this->_tpl_vars[$tpl_var] = $value;
+        }
+    }
+
+    /**
+     * assigns values to template variables by reference
+     *
+     * @param string $tpl_var the template variable name
+     * @param mixed $value the referenced value to assign
+     */
+    function assign_by_ref($tpl_var, &$value)
+    {
+        if ($tpl_var != '')
+            $this->_tpl_vars[$tpl_var] = &$value;
+    }
+
+    /**
+     * appends values to template variables
+     *
+     * @param array|string $tpl_var the template variable name(s)
+     * @param mixed $value the value to append
+     */
+    function append($tpl_var, $value=null, $merge=false)
+    {
+        if (is_array($tpl_var)) {
+            // $tpl_var is an array, ignore $value
+            foreach ($tpl_var as $_key => $_val) {
+                if ($_key != '') {
+                    if(!@is_array($this->_tpl_vars[$_key])) {
+                        settype($this->_tpl_vars[$_key],'array');
+                    }
+                    if($merge && is_array($_val)) {
+                        foreach($_val as $_mkey => $_mval) {
+                            $this->_tpl_vars[$_key][$_mkey] = $_mval;
+                        }
+                    } else {
+                        $this->_tpl_vars[$_key][] = $_val;
+                    }
+                }
+            }
+        } else {
+            if ($tpl_var != '' && isset($value)) {
+                if(!@is_array($this->_tpl_vars[$tpl_var])) {
+                    settype($this->_tpl_vars[$tpl_var],'array');
+                }
+                if($merge && is_array($value)) {
+                    foreach($value as $_mkey => $_mval) {
+                        $this->_tpl_vars[$tpl_var][$_mkey] = $_mval;
+                    }
+                } else {
+                    $this->_tpl_vars[$tpl_var][] = $value;
+                }
+            }
+        }
+    }
+
+    /**
+     * appends values to template variables by reference
+     *
+     * @param string $tpl_var the template variable name
+     * @param mixed $value the referenced value to append
+     */
+    function append_by_ref($tpl_var, &$value, $merge=false)
+    {
+        if ($tpl_var != '' && isset($value)) {
+            if(!@is_array($this->_tpl_vars[$tpl_var])) {
+             settype($this->_tpl_vars[$tpl_var],'array');
+            }
+            if ($merge && is_array($value)) {
+                foreach($value as $_key => $_val) {
+                    $this->_tpl_vars[$tpl_var][$_key] = &$value[$_key];
+                }
+            } else {
+                $this->_tpl_vars[$tpl_var][] = &$value;
+            }
+        }
+    }
+
+
+    /**
+     * clear the given assigned template variable.
+     *
+     * @param string $tpl_var the template variable to clear
+     */
+    function clear_assign($tpl_var)
+    {
+        if (is_array($tpl_var))
+            foreach ($tpl_var as $curr_var)
+                unset($this->_tpl_vars[$curr_var]);
+        else
+            unset($this->_tpl_vars[$tpl_var]);
+    }
+
+
+    /**
+     * Registers custom function to be used in templates
+     *
+     * @param string $function the name of the template function
+     * @param string $function_impl the name of the PHP function to register
+     */
+    function register_function($function, $function_impl, $cacheable=true, $cache_attrs=null)
+    {
+        $this->_plugins['function'][$function] =
+            array($function_impl, null, null, false, $cacheable, $cache_attrs);
+
+    }
+
+    /**
+     * Unregisters custom function
+     *
+     * @param string $function name of template function
+     */
+    function unregister_function($function)
+    {
+        unset($this->_plugins['function'][$function]);
+    }
+
+    /**
+     * Registers object to be used in templates
+     *
+     * @param string $object name of template object
+     * @param object &$object_impl the referenced PHP object to register
+     * @param null|array $allowed list of allowed methods (empty = all)
+     * @param boolean $smarty_args smarty argument format, else traditional
+     * @param null|array $block_functs list of methods that are block format
+     */
+    function register_object($object, &$object_impl, $allowed = array(), $smarty_args = true, $block_methods = array())
+    {
+        settype($allowed, 'array');
+        settype($smarty_args, 'boolean');
+        $this->_reg_objects[$object] =
+            array(&$object_impl, $allowed, $smarty_args, $block_methods);
+    }
+
+    /**
+     * Unregisters object
+     *
+     * @param string $object name of template object
+     */
+    function unregister_object($object)
+    {
+        unset($this->_reg_objects[$object]);
+    }
+
+
+    /**
+     * Registers block function to be used in templates
+     *
+     * @param string $block name of template block
+     * @param string $block_impl PHP function to register
+     */
+    function register_block($block, $block_impl, $cacheable=true, $cache_attrs=null)
+    {
+        $this->_plugins['block'][$block] =
+            array($block_impl, null, null, false, $cacheable, $cache_attrs);
+    }
+
+    /**
+     * Unregisters block function
+     *
+     * @param string $block name of template function
+     */
+    function unregister_block($block)
+    {
+        unset($this->_plugins['block'][$block]);
+    }
+
+    /**
+     * Registers compiler function
+     *
+     * @param string $function name of template function
+     * @param string $function_impl name of PHP function to register
+     */
+    function register_compiler_function($function, $function_impl, $cacheable=true)
+    {
+        $this->_plugins['compiler'][$function] =
+            array($function_impl, null, null, false, $cacheable);
+    }
+
+    /**
+     * Unregisters compiler function
+     *
+     * @param string $function name of template function
+     */
+    function unregister_compiler_function($function)
+    {
+        unset($this->_plugins['compiler'][$function]);
+    }
+
+    /**
+     * Registers modifier to be used in templates
+     *
+     * @param string $modifier name of template modifier
+     * @param string $modifier_impl name of PHP function to register
+     */
+    function register_modifier($modifier, $modifier_impl)
+    {
+        $this->_plugins['modifier'][$modifier] =
+            array($modifier_impl, null, null, false);
+    }
+
+    /**
+     * Unregisters modifier
+     *
+     * @param string $modifier name of template modifier
+     */
+    function unregister_modifier($modifier)
+    {
+        unset($this->_plugins['modifier'][$modifier]);
+    }
+
+    /**
+     * Registers a resource to fetch a template
+     *
+     * @param string $type name of resource
+     * @param array $functions array of functions to handle resource
+     */
+    function register_resource($type, $functions)
+    {
+        if (count($functions)==4) {
+            $this->_plugins['resource'][$type] =
+                array($functions, false);
+
+        } elseif (count($functions)==5) {
+            $this->_plugins['resource'][$type] =
+                array(array(array(&$functions[0], $functions[1])
+                            ,array(&$functions[0], $functions[2])
+                            ,array(&$functions[0], $functions[3])
+                            ,array(&$functions[0], $functions[4]))
+                      ,false);
+
+        } else {
+            $this->trigger_error("malformed function-list for '$type' in register_resource");
+
+        }
+    }
+
+    /**
+     * Unregisters a resource
+     *
+     * @param string $type name of resource
+     */
+    function unregister_resource($type)
+    {
+        unset($this->_plugins['resource'][$type]);
+    }
+
+    /**
+     * Registers a prefilter function to apply
+     * to a template before compiling
+     *
+     * @param string $function name of PHP function to register
+     */
+    function register_prefilter($function)
+    {
+    $_name = (is_array($function)) ? $function[1] : $function;
+        $this->_plugins['prefilter'][$_name]
+            = array($function, null, null, false);
+    }
+
+    /**
+     * Unregisters a prefilter function
+     *
+     * @param string $function name of PHP function
+     */
+    function unregister_prefilter($function)
+    {
+        unset($this->_plugins['prefilter'][$function]);
+    }
+
+    /**
+     * Registers a postfilter function to apply
+     * to a compiled template after compilation
+     *
+     * @param string $function name of PHP function to register
+     */
+    function register_postfilter($function)
+    {
+    $_name = (is_array($function)) ? $function[1] : $function;
+        $this->_plugins['postfilter'][$_name]
+            = array($function, null, null, false);
+    }
+
+    /**
+     * Unregisters a postfilter function
+     *
+     * @param string $function name of PHP function
+     */
+    function unregister_postfilter($function)
+    {
+        unset($this->_plugins['postfilter'][$function]);
+    }
+
+    /**
+     * Registers an output filter function to apply
+     * to a template output
+     *
+     * @param string $function name of PHP function
+     */
+    function register_outputfilter($function)
+    {
+    $_name = (is_array($function)) ? $function[1] : $function;
+        $this->_plugins['outputfilter'][$_name]
+            = array($function, null, null, false);
+    }
+
+    /**
+     * Unregisters an outputfilter function
+     *
+     * @param string $function name of PHP function
+     */
+    function unregister_outputfilter($function)
+    {
+        unset($this->_plugins['outputfilter'][$function]);
+    }
+
+    /**
+     * load a filter of specified type and name
+     *
+     * @param string $type filter type
+     * @param string $name filter name
+     */
+    function load_filter($type, $name)
+    {
+        switch ($type) {
+            case 'output':
+                $_params = array('plugins' => array(array($type . 'filter', $name, null, null, false)));
+                require_once(SMARTY_CORE_DIR . 'core.load_plugins.php');
+                smarty_core_load_plugins($_params, $this);
+                break;
+
+            case 'pre':
+            case 'post':
+                if (!isset($this->_plugins[$type . 'filter'][$name]))
+                    $this->_plugins[$type . 'filter'][$name] = false;
+                break;
+        }
+    }
+
+    /**
+     * clear cached content for the given template and cache id
+     *
+     * @param string $tpl_file name of template file
+     * @param string $cache_id name of cache_id
+     * @param string $compile_id name of compile_id
+     * @param string $exp_time expiration time
+     * @return boolean
+     */
+    function clear_cache($tpl_file = null, $cache_id = null, $compile_id = null, $exp_time = null)
+    {
+
+        if (!isset($compile_id))
+            $compile_id = $this->compile_id;
+
+        if (!isset($tpl_file))
+            $compile_id = null;
+
+        $_auto_id = $this->_get_auto_id($cache_id, $compile_id);
+
+        if (!empty($this->cache_handler_func)) {
+            return call_user_func_array($this->cache_handler_func,
+                                  array('clear', &$this, &$dummy, $tpl_file, $cache_id, $compile_id, $exp_time));
+        } else {
+            $_params = array('auto_base' => $this->cache_dir,
+                            'auto_source' => $tpl_file,
+                            'auto_id' => $_auto_id,
+                            'exp_time' => $exp_time);
+            require_once(SMARTY_CORE_DIR . 'core.rm_auto.php');
+            return smarty_core_rm_auto($_params, $this);
+        }
+
+    }
+
+
+    /**
+     * clear the entire contents of cache (all templates)
+     *
+     * @param string $exp_time expire time
+     * @return boolean results of {@link smarty_core_rm_auto()}
+     */
+    function clear_all_cache($exp_time = null)
+    {
+        return $this->clear_cache(null, null, null, $exp_time);
+    }
+
+
+    /**
+     * test to see if valid cache exists for this template
+     *
+     * @param string $tpl_file name of template file
+     * @param string $cache_id
+     * @param string $compile_id
+     * @return string|false results of {@link _read_cache_file()}
+     */
+    function is_cached($tpl_file, $cache_id = null, $compile_id = null)
+    {
+        if (!$this->caching)
+            return false;
+
+        if (!isset($compile_id))
+            $compile_id = $this->compile_id;
+
+        $_params = array(
+            'tpl_file' => $tpl_file,
+            'cache_id' => $cache_id,
+            'compile_id' => $compile_id
+        );
+        require_once(SMARTY_CORE_DIR . 'core.read_cache_file.php');
+        return smarty_core_read_cache_file($_params, $this);
+    }
+
+
+    /**
+     * clear all the assigned template variables.
+     *
+     */
+    function clear_all_assign()
+    {
+        $this->_tpl_vars = array();
+    }
+
+    /**
+     * clears compiled version of specified template resource,
+     * or all compiled template files if one is not specified.
+     * This function is for advanced use only, not normally needed.
+     *
+     * @param string $tpl_file
+     * @param string $compile_id
+     * @param string $exp_time
+     * @return boolean results of {@link smarty_core_rm_auto()}
+     */
+    function clear_compiled_tpl($tpl_file = null, $compile_id = null, $exp_time = null)
+    {
+        if (!isset($compile_id)) {
+            $compile_id = $this->compile_id;
+        }
+        $_params = array('auto_base' => $this->compile_dir,
+                        'auto_source' => $tpl_file,
+                        'auto_id' => $compile_id,
+                        'exp_time' => $exp_time,
+                        'extensions' => array('.inc', '.php'));
+        require_once(SMARTY_CORE_DIR . 'core.rm_auto.php');
+        return smarty_core_rm_auto($_params, $this);
+    }
+
+    /**
+     * Checks whether requested template exists.
+     *
+     * @param string $tpl_file
+     * @return boolean
+     */
+    function template_exists($tpl_file)
+    {
+        $_params = array('resource_name' => $tpl_file, 'quiet'=>true, 'get_source'=>false);
+        return $this->_fetch_resource_info($_params);
+    }
+
+    /**
+     * Returns an array containing template variables
+     *
+     * @param string $name
+     * @param string $type
+     * @return array
+     */
+    function &get_template_vars($name=null)
+    {
+        if(!isset($name)) {
+            return $this->_tpl_vars;
+        }
+        if(isset($this->_tpl_vars[$name])) {
+            return $this->_tpl_vars[$name];
+        }
+    }
+
+    /**
+     * Returns an array containing config variables
+     *
+     * @param string $name
+     * @param string $type
+     * @return array
+     */
+    function &get_config_vars($name=null)
+    {
+        if(!isset($name) && is_array($this->_config[0])) {
+            return $this->_config[0]['vars'];
+        } else if(isset($this->_config[0]['vars'][$name])) {
+            return $this->_config[0]['vars'][$name];
+        }
+    }
+
+    /**
+     * trigger Smarty error
+     *
+     * @param string $error_msg
+     * @param integer $error_type
+     */
+    function trigger_error($error_msg, $error_type = E_USER_WARNING)
+    {
+        trigger_error("Smarty error: $error_msg", $error_type);
+    }
+
+
+    /**
+     * executes & displays the template results
+     *
+     * @param string $resource_name
+     * @param string $cache_id
+     * @param string $compile_id
+     */
+    function display($resource_name, $cache_id = null, $compile_id = null)
+    {
+        $this->fetch($resource_name, $cache_id, $compile_id, true);
+    }
+
+    /**
+     * executes & returns or displays the template results
+     *
+     * @param string $resource_name
+     * @param string $cache_id
+     * @param string $compile_id
+     * @param boolean $display
+     */
+    function fetch($resource_name, $cache_id = null, $compile_id = null, $display = false)
+    {
+        static $_cache_info = array();
+        
+        $_smarty_old_error_level = $this->debugging ? error_reporting() : error_reporting(isset($this->error_reporting)
+               ? $this->error_reporting : error_reporting() & ~E_NOTICE);
+
+        if (!$this->debugging && $this->debugging_ctrl == 'URL') {
+            $_query_string = $this->request_use_auto_globals ? $_SERVER['QUERY_STRING'] : $GLOBALS['HTTP_SERVER_VARS']['QUERY_STRING'];
+            if (@strstr($_query_string, $this->_smarty_debug_id)) {
+                if (@strstr($_query_string, $this->_smarty_debug_id . '=on')) {
+                    // enable debugging for this browser session
+                    @setcookie('SMARTY_DEBUG', true);
+                    $this->debugging = true;
+                } elseif (@strstr($_query_string, $this->_smarty_debug_id . '=off')) {
+                    // disable debugging for this browser session
+                    @setcookie('SMARTY_DEBUG', false);
+                    $this->debugging = false;
+                } else {
+                    // enable debugging for this page
+                    $this->debugging = true;
+                }
+            } else {
+                $this->debugging = (bool)($this->request_use_auto_globals ? @$_COOKIE['SMARTY_DEBUG'] : @$GLOBALS['HTTP_COOKIE_VARS']['SMARTY_DEBUG']);
+            }
+        }
+
+        if ($this->debugging) {
+            // capture time for debugging info
+            $_params = array();
+            require_once(SMARTY_CORE_DIR . 'core.get_microtime.php');
+            $_debug_start_time = smarty_core_get_microtime($_params, $this);
+            $this->_smarty_debug_info[] = array('type'      => 'template',
+                                                'filename'  => $resource_name,
+                                                'depth'     => 0);
+            $_included_tpls_idx = count($this->_smarty_debug_info) - 1;
+        }
+
+        if (!isset($compile_id)) {
+            $compile_id = $this->compile_id;
+        }
+
+        $this->_compile_id = $compile_id;
+        $this->_inclusion_depth = 0;
+
+        if ($this->caching) {
+            // save old cache_info, initialize cache_info
+            array_push($_cache_info, $this->_cache_info);
+            $this->_cache_info = array();
+            $_params = array(
+                'tpl_file' => $resource_name,
+                'cache_id' => $cache_id,
+                'compile_id' => $compile_id,
+                'results' => null
+            );
+            require_once(SMARTY_CORE_DIR . 'core.read_cache_file.php');
+            if (smarty_core_read_cache_file($_params, $this)) {
+                $_smarty_results = $_params['results'];
+                if (!empty($this->_cache_info['insert_tags'])) {
+                    $_params = array('plugins' => $this->_cache_info['insert_tags']);
+                    require_once(SMARTY_CORE_DIR . 'core.load_plugins.php');
+                    smarty_core_load_plugins($_params, $this);
+                    $_params = array('results' => $_smarty_results);
+                    require_once(SMARTY_CORE_DIR . 'core.process_cached_inserts.php');
+                    $_smarty_results = smarty_core_process_cached_inserts($_params, $this);
+                }
+                if (!empty($this->_cache_info['cache_serials'])) {
+                    $_params = array('results' => $_smarty_results);
+                    require_once(SMARTY_CORE_DIR . 'core.process_compiled_include.php');
+                    $_smarty_results = smarty_core_process_compiled_include($_params, $this);
+                }
+
+
+                if ($display) {
+                    if ($this->debugging)
+                    {
+                        // capture time for debugging info
+                        $_params = array();
+                        require_once(SMARTY_CORE_DIR . 'core.get_microtime.php');
+                        $this->_smarty_debug_info[$_included_tpls_idx]['exec_time'] = smarty_core_get_microtime($_params, $this) - $_debug_start_time;
+                        require_once(SMARTY_CORE_DIR . 'core.display_debug_console.php');
+                        $_smarty_results .= smarty_core_display_debug_console($_params, $this);
+                    }
+                    if ($this->cache_modified_check) {
+                        $_server_vars = ($this->request_use_auto_globals) ? $_SERVER : $GLOBALS['HTTP_SERVER_VARS'];
+                        $_last_modified_date = @substr($_server_vars['HTTP_IF_MODIFIED_SINCE'], 0, strpos($_server_vars['HTTP_IF_MODIFIED_SINCE'], 'GMT') + 3);
+                        $_gmt_mtime = gmdate('D, d M Y H:i:s', $this->_cache_info['timestamp']).' GMT';
+                        if (@count($this->_cache_info['insert_tags']) == 0
+                            && !$this->_cache_serials
+                            && $_gmt_mtime == $_last_modified_date) {
+                            if (php_sapi_name()=='cgi')
+                                header('Status: 304 Not Modified');
+                            else
+                                header('HTTP/1.1 304 Not Modified');
+
+                        } else {
+                            header('Last-Modified: '.$_gmt_mtime);
+                            echo $_smarty_results;
+                        }
+                    } else {
+                            echo $_smarty_results;
+                    }
+                    error_reporting($_smarty_old_error_level);
+                    // restore initial cache_info
+                    $this->_cache_info = array_pop($_cache_info);
+                    return true;
+                } else {
+                    error_reporting($_smarty_old_error_level);
+                    // restore initial cache_info
+                    $this->_cache_info = array_pop($_cache_info);
+                    return $_smarty_results;
+                }
+            } else {
+                $this->_cache_info['template'][$resource_name] = true;
+                if ($this->cache_modified_check && $display) {
+                    header('Last-Modified: '.gmdate('D, d M Y H:i:s', time()).' GMT');
+                }
+            }
+        }
+
+        // load filters that are marked as autoload
+        if (count($this->autoload_filters)) {
+            foreach ($this->autoload_filters as $_filter_type => $_filters) {
+                foreach ($_filters as $_filter) {
+                    $this->load_filter($_filter_type, $_filter);
+                }
+            }
+        }
+
+        $_smarty_compile_path = $this->_get_compile_path($resource_name);
+
+        // if we just need to display the results, don't perform output
+        // buffering - for speed
+        $_cache_including = $this->_cache_including;
+        $this->_cache_including = false;
+        if ($display && !$this->caching && count($this->_plugins['outputfilter']) == 0) {
+            if ($this->_is_compiled($resource_name, $_smarty_compile_path)
+                    || $this->_compile_resource($resource_name, $_smarty_compile_path))
+            {
+                include($_smarty_compile_path);
+            }
+        } else {
+            ob_start();
+            if ($this->_is_compiled($resource_name, $_smarty_compile_path)
+                    || $this->_compile_resource($resource_name, $_smarty_compile_path))
+            {
+                include($_smarty_compile_path);
+            }
+            $_smarty_results = ob_get_contents();
+            ob_end_clean();
+
+            foreach ((array)$this->_plugins['outputfilter'] as $_output_filter) {
+                $_smarty_results = call_user_func_array($_output_filter[0], array($_smarty_results, &$this));
+            }
+        }
+
+        if ($this->caching) {
+            $_params = array('tpl_file' => $resource_name,
+                        'cache_id' => $cache_id,
+                        'compile_id' => $compile_id,
+                        'results' => $_smarty_results);
+            require_once(SMARTY_CORE_DIR . 'core.write_cache_file.php');
+            smarty_core_write_cache_file($_params, $this);
+            require_once(SMARTY_CORE_DIR . 'core.process_cached_inserts.php');
+            $_smarty_results = smarty_core_process_cached_inserts($_params, $this);
+
+            if ($this->_cache_serials) {
+                // strip nocache-tags from output
+                $_smarty_results = preg_replace('!(\{/?nocache\:[0-9a-f]{32}#\d+\})!s'
+                                                ,''
+                                                ,$_smarty_results);
+            }
+            // restore initial cache_info
+            $this->_cache_info = array_pop($_cache_info);
+        }
+        $this->_cache_including = $_cache_including;
+
+        if ($display) {
+            if (isset($_smarty_results)) { echo $_smarty_results; }
+            if ($this->debugging) {
+                // capture time for debugging info
+                $_params = array();
+                require_once(SMARTY_CORE_DIR . 'core.get_microtime.php');
+                $this->_smarty_debug_info[$_included_tpls_idx]['exec_time'] = (smarty_core_get_microtime($_params, $this) - $_debug_start_time);
+                require_once(SMARTY_CORE_DIR . 'core.display_debug_console.php');
+                echo smarty_core_display_debug_console($_params, $this);
+            }
+            error_reporting($_smarty_old_error_level);
+            return;
+        } else {
+            error_reporting($_smarty_old_error_level);
+            if (isset($_smarty_results)) { return $_smarty_results; }
+        }
+    }
+
+    /**
+     * load configuration values
+     *
+     * @param string $file
+     * @param string $section
+     * @param string $scope
+     */
+    function config_load($file, $section = null, $scope = 'global')
+    {
+        require_once($this->_get_plugin_filepath('function', 'config_load'));
+        smarty_function_config_load(array('file' => $file, 'section' => $section, 'scope' => $scope), $this);
+    }
+
+    /**
+     * return a reference to a registered object
+     *
+     * @param string $name
+     * @return object
+     */
+    function &get_registered_object($name) {
+        if (!isset($this->_reg_objects[$name]))
+        $this->_trigger_fatal_error("'$name' is not a registered object");
+
+        if (!is_object($this->_reg_objects[$name][0]))
+        $this->_trigger_fatal_error("registered '$name' is not an object");
+
+        return $this->_reg_objects[$name][0];
+    }
+
+    /**
+     * clear configuration values
+     *
+     * @param string $var
+     */
+    function clear_config($var = null)
+    {
+        if(!isset($var)) {
+            // clear all values
+            $this->_config = array(array('vars'  => array(),
+                                         'files' => array()));
+        } else {
+            unset($this->_config[0]['vars'][$var]);
+        }
+    }
+
+    /**
+     * get filepath of requested plugin
+     *
+     * @param string $type
+     * @param string $name
+     * @return string|false
+     */
+    function _get_plugin_filepath($type, $name)
+    {
+        $_params = array('type' => $type, 'name' => $name);
+        require_once(SMARTY_CORE_DIR . 'core.assemble_plugin_filepath.php');
+        return smarty_core_assemble_plugin_filepath($_params, $this);
+    }
+
+   /**
+     * test if resource needs compiling
+     *
+     * @param string $resource_name
+     * @param string $compile_path
+     * @return boolean
+     */
+    function _is_compiled($resource_name, $compile_path)
+    {
+        if (!$this->force_compile && file_exists($compile_path)) {
+            if (!$this->compile_check) {
+                // no need to check compiled file
+                return true;
+            } else {
+                // get file source and timestamp
+                $_params = array('resource_name' => $resource_name, 'get_source'=>false);
+                if (!$this->_fetch_resource_info($_params)) {
+                    return false;
+                }
+                if ($_params['resource_timestamp'] <= filemtime($compile_path)) {
+                    // template not expired, no recompile
+                    return true;
+                } else {
+                    // compile template
+                    return false;
+                }
+            }
+        } else {
+            // compiled template does not exist, or forced compile
+            return false;
+        }
+    }
+
+   /**
+     * compile the template
+     *
+     * @param string $resource_name
+     * @param string $compile_path
+     * @return boolean
+     */
+    function _compile_resource($resource_name, $compile_path)
+    {
+
+        $_params = array('resource_name' => $resource_name);
+        if (!$this->_fetch_resource_info($_params)) {
+            return false;
+        }
+
+        $_source_content = $_params['source_content'];
+        $_cache_include    = substr($compile_path, 0, -4).'.inc';
+
+        if ($this->_compile_source($resource_name, $_source_content, $_compiled_content, $_cache_include)) {
+            // if a _cache_serial was set, we also have to write an include-file:
+            if ($this->_cache_include_info) {
+                require_once(SMARTY_CORE_DIR . 'core.write_compiled_include.php');
+                smarty_core_write_compiled_include(array_merge($this->_cache_include_info, array('compiled_content'=>$_compiled_content, 'resource_name'=>$resource_name)),  $this);
+            }
+
+            $_params = array('compile_path'=>$compile_path, 'compiled_content' => $_compiled_content);
+            require_once(SMARTY_CORE_DIR . 'core.write_compiled_resource.php');
+            smarty_core_write_compiled_resource($_params, $this);
+
+            return true;
+        } else {
+            return false;
+        }
+
+    }
+
+   /**
+     * compile the given source
+     *
+     * @param string $resource_name
+     * @param string $source_content
+     * @param string $compiled_content
+     * @return boolean
+     */
+    function _compile_source($resource_name, &$source_content, &$compiled_content, $cache_include_path=null)
+    {
+        if (file_exists(SMARTY_DIR . $this->compiler_file)) {
+            require_once(SMARTY_DIR . $this->compiler_file);
+        } else {
+            // use include_path
+            require_once($this->compiler_file);
+        }
+
+
+        $smarty_compiler = new $this->compiler_class;
+
+        $smarty_compiler->template_dir      = $this->template_dir;
+        $smarty_compiler->compile_dir       = $this->compile_dir;
+        $smarty_compiler->plugins_dir       = $this->plugins_dir;
+        $smarty_compiler->config_dir        = $this->config_dir;
+        $smarty_compiler->force_compile     = $this->force_compile;
+        $smarty_compiler->caching           = $this->caching;
+        $smarty_compiler->php_handling      = $this->php_handling;
+        $smarty_compiler->left_delimiter    = $this->left_delimiter;
+        $smarty_compiler->right_delimiter   = $this->right_delimiter;
+        $smarty_compiler->_version          = $this->_version;
+        $smarty_compiler->security          = $this->security;
+        $smarty_compiler->secure_dir        = $this->secure_dir;
+        $smarty_compiler->security_settings = $this->security_settings;
+        $smarty_compiler->trusted_dir       = $this->trusted_dir;
+        $smarty_compiler->use_sub_dirs      = $this->use_sub_dirs;
+        $smarty_compiler->_reg_objects      = &$this->_reg_objects;
+        $smarty_compiler->_plugins          = &$this->_plugins;
+        $smarty_compiler->_tpl_vars         = &$this->_tpl_vars;
+        $smarty_compiler->default_modifiers = $this->default_modifiers;
+        $smarty_compiler->compile_id        = $this->_compile_id;
+        $smarty_compiler->_config            = $this->_config;
+        $smarty_compiler->request_use_auto_globals  = $this->request_use_auto_globals;
+
+        if (isset($cache_include_path) && isset($this->_cache_serials[$cache_include_path])) {
+            $smarty_compiler->_cache_serial = $this->_cache_serials[$cache_include_path];
+        }
+        $smarty_compiler->_cache_include = $cache_include_path;
+
+
+        $_results = $smarty_compiler->_compile_file($resource_name, $source_content, $compiled_content);
+
+        if ($smarty_compiler->_cache_serial) {
+            $this->_cache_include_info = array(
+                'cache_serial'=>$smarty_compiler->_cache_serial
+                ,'plugins_code'=>$smarty_compiler->_plugins_code
+                ,'include_file_path' => $cache_include_path);
+
+        } else {
+            $this->_cache_include_info = null;
+
+        }
+
+        return $_results;
+    }
+
+    /**
+     * Get the compile path for this resource
+     *
+     * @param string $resource_name
+     * @return string results of {@link _get_auto_filename()}
+     */
+    function _get_compile_path($resource_name)
+    {
+        return $this->_get_auto_filename($this->compile_dir, $resource_name,
+                                         $this->_compile_id) . '.php';
+    }
+
+    /**
+     * fetch the template info. Gets timestamp, and source
+     * if get_source is true
+     *
+     * sets $source_content to the source of the template, and
+     * $resource_timestamp to its time stamp
+     * @param string $resource_name
+     * @param string $source_content
+     * @param integer $resource_timestamp
+     * @param boolean $get_source
+     * @param boolean $quiet
+     * @return boolean
+     */
+
+    function _fetch_resource_info(&$params)
+    {
+        if(!isset($params['get_source'])) { $params['get_source'] = true; }
+        if(!isset($params['quiet'])) { $params['quiet'] = false; }
+
+        $_return = false;
+        $_params = array('resource_name' => $params['resource_name']) ;
+        if (isset($params['resource_base_path']))
+            $_params['resource_base_path'] = $params['resource_base_path'];
+        else
+            $_params['resource_base_path'] = $this->template_dir;
+
+        if ($this->_parse_resource_name($_params)) {
+            $_resource_type = $_params['resource_type'];
+            $_resource_name = $_params['resource_name'];
+            switch ($_resource_type) {
+                case 'file':
+                    if ($params['get_source']) {
+                        $params['source_content'] = $this->_read_file($_resource_name);
+                    }
+                    $params['resource_timestamp'] = filemtime($_resource_name);
+                    $_return = is_file($_resource_name);
+                    break;
+
+                default:
+                    // call resource functions to fetch the template source and timestamp
+                    if ($params['get_source']) {
+                        $_source_return = isset($this->_plugins['resource'][$_resource_type]) &&
+                            call_user_func_array($this->_plugins['resource'][$_resource_type][0][0],
+                                                 array($_resource_name, &$params['source_content'], &$this));
+                    } else {
+                        $_source_return = true;
+                    }
+
+                    $_timestamp_return = isset($this->_plugins['resource'][$_resource_type]) &&
+                        call_user_func_array($this->_plugins['resource'][$_resource_type][0][1],
+                                             array($_resource_name, &$params['resource_timestamp'], &$this));
+
+                    $_return = $_source_return && $_timestamp_return;
+                    break;
+            }
+        }
+
+        if (!$_return) {
+            // see if we can get a template with the default template handler
+            if (!empty($this->default_template_handler_func)) {
+                if (!is_callable($this->default_template_handler_func)) {
+                    $this->trigger_error("default template handler function \"$this->default_template_handler_func\" doesn't exist.");
+                } else {
+                    $_return = call_user_func_array(
+                        $this->default_template_handler_func,
+                        array($_params['resource_type'], $_params['resource_name'], &$params['source_content'], &$params['resource_timestamp'], &$this));
+                }
+            }
+        }
+
+        if (!$_return) {
+            if (!$params['quiet']) {
+                $this->trigger_error('unable to read resource: "' . $params['resource_name'] . '"');
+            }
+        } else if ($_return && $this->security) {
+            require_once(SMARTY_CORE_DIR . 'core.is_secure.php');
+            if (!smarty_core_is_secure($_params, $this)) {
+                if (!$params['quiet'])
+                    $this->trigger_error('(secure mode) accessing "' . $params['resource_name'] . '" is not allowed');
+                $params['source_content'] = null;
+                $params['resource_timestamp'] = null;
+                return false;
+            }
+        }
+        return $_return;
+    }
+
+
+    /**
+     * parse out the type and name from the resource
+     *
+     * @param string $resource_base_path
+     * @param string $resource_name
+     * @param string $resource_type
+     * @param string $resource_name
+     * @return boolean
+     */
+
+    function _parse_resource_name(&$params)
+    {
+
+        // split tpl_path by the first colon
+        $_resource_name_parts = explode(':', $params['resource_name'], 2);
+
+        if (count($_resource_name_parts) == 1) {
+            // no resource type given
+            $params['resource_type'] = $this->default_resource_type;
+            $params['resource_name'] = $_resource_name_parts[0];
+        } else {
+            if(strlen($_resource_name_parts[0]) == 1) {
+                // 1 char is not resource type, but part of filepath
+                $params['resource_type'] = $this->default_resource_type;
+                $params['resource_name'] = $params['resource_name'];
+            } else {
+                $params['resource_type'] = $_resource_name_parts[0];
+                $params['resource_name'] = $_resource_name_parts[1];
+            }
+        }
+
+        if ($params['resource_type'] == 'file') {
+            if (!preg_match('/^([\/\\\\]|[a-zA-Z]:[\/\\\\])/', $params['resource_name'])) {
+                // relative pathname to $params['resource_base_path']
+                // use the first directory where the file is found
+                foreach ((array)$params['resource_base_path'] as $_curr_path) {
+                    $_fullpath = $_curr_path . DIRECTORY_SEPARATOR . $params['resource_name'];
+                    if (file_exists($_fullpath) && is_file($_fullpath)) {
+                        $params['resource_name'] = $_fullpath;
+                        return true;
+                    }
+                    // didn't find the file, try include_path
+                    $_params = array('file_path' => $_fullpath);
+                    require_once(SMARTY_CORE_DIR . 'core.get_include_path.php');
+                    if(smarty_core_get_include_path($_params, $this)) {
+                        $params['resource_name'] = $_params['new_file_path'];
+                        return true;
+                    }
+                }
+                return false;
+            } else {
+                /* absolute path */
+                return file_exists($params['resource_name']);
+            }
+        } elseif (empty($this->_plugins['resource'][$params['resource_type']])) {
+            $_params = array('type' => $params['resource_type']);
+            require_once(SMARTY_CORE_DIR . 'core.load_resource_plugin.php');
+            smarty_core_load_resource_plugin($_params, $this);
+        }
+
+        return true;
+    }
+
+
+    /**
+     * Handle modifiers
+     *
+     * @param string|null $modifier_name
+     * @param array|null $map_array
+     * @return string result of modifiers
+     */
+    function _run_mod_handler()
+    {
+        $_args = func_get_args();
+        list($_modifier_name, $_map_array) = array_splice($_args, 0, 2);
+        list($_func_name, $_tpl_file, $_tpl_line) =
+            $this->_plugins['modifier'][$_modifier_name];
+
+        $_var = $_args[0];
+        foreach ($_var as $_key => $_val) {
+            $_args[0] = $_val;
+            $_var[$_key] = call_user_func_array($_func_name, $_args);
+        }
+        return $_var;
+    }
+
+    /**
+     * Remove starting and ending quotes from the string
+     *
+     * @param string $string
+     * @return string
+     */
+    function _dequote($string)
+    {
+        if (($string{0} == "'" || $string{0} == '"') &&
+            $string{strlen($string)-1} == $string{0})
+            return substr($string, 1, -1);
+        else
+            return $string;
+    }
+
+
+    /**
+     * read in a file
+     *
+     * @param string $filename
+     * @return string
+     */
+    function _read_file($filename)
+    {
+        if ( file_exists($filename) && ($fd = @fopen($filename, 'rb')) ) {
+            $contents = ($size = filesize($filename)) ? fread($fd, $size) : '';
+            fclose($fd);
+            return $contents;
+        } else {
+            return false;
+        }
+    }
+
+    /**
+     * get a concrete filename for automagically created content
+     *
+     * @param string $auto_base
+     * @param string $auto_source
+     * @param string $auto_id
+     * @return string
+     * @staticvar string|null
+     * @staticvar string|null
+     */
+    function _get_auto_filename($auto_base, $auto_source = null, $auto_id = null)
+    {
+        $_compile_dir_sep =  $this->use_sub_dirs ? DIRECTORY_SEPARATOR : '^';
+        $_return = $auto_base . DIRECTORY_SEPARATOR;
+
+        if(isset($auto_id)) {
+            // make auto_id safe for directory names
+            $auto_id = str_replace('%7C',$_compile_dir_sep,(urlencode($auto_id)));
+            // split into separate directories
+            $_return .= $auto_id . $_compile_dir_sep;
+        }
+
+        if(isset($auto_source)) {
+            // make source name safe for filename
+            $_filename = urlencode(basename($auto_source));
+            $_crc32 = sprintf('%08X', crc32($auto_source));
+            // prepend %% to avoid name conflicts with
+            // with $params['auto_id'] names
+            $_crc32 = substr($_crc32, 0, 2) . $_compile_dir_sep .
+                      substr($_crc32, 0, 3) . $_compile_dir_sep . $_crc32;
+            $_return .= '%%' . $_crc32 . '%%' . $_filename;
+        }
+
+        return $_return;
+    }
+
+    /**
+     * unlink a file, possibly using expiration time
+     *
+     * @param string $resource
+     * @param integer $exp_time
+     */
+    function _unlink($resource, $exp_time = null)
+    {
+        if(isset($exp_time)) {
+            if(time() - @filemtime($resource) >= $exp_time) {
+                return @unlink($resource);
+            }
+        } else {
+            return @unlink($resource);
+        }
+    }
+
+    /**
+     * returns an auto_id for auto-file-functions
+     *
+     * @param string $cache_id
+     * @param string $compile_id
+     * @return string|null
+     */
+    function _get_auto_id($cache_id=null, $compile_id=null) {
+    if (isset($cache_id))
+        return (isset($compile_id)) ? $cache_id . '|' . $compile_id  : $cache_id;
+    elseif(isset($compile_id))
+        return $compile_id;
+    else
+        return null;
+    }
+
+    /**
+     * trigger Smarty plugin error
+     *
+     * @param string $error_msg
+     * @param string $tpl_file
+     * @param integer $tpl_line
+     * @param string $file
+     * @param integer $line
+     * @param integer $error_type
+     */
+    function _trigger_fatal_error($error_msg, $tpl_file = null, $tpl_line = null,
+            $file = null, $line = null, $error_type = E_USER_ERROR)
+    {
+        if(isset($file) && isset($line)) {
+            $info = ' ('.basename($file).", line $line)";
+        } else {
+            $info = '';
+        }
+        if (isset($tpl_line) && isset($tpl_file)) {
+            $this->trigger_error('[in ' . $tpl_file . ' line ' . $tpl_line . "]: $error_msg$info", $error_type);
+        } else {
+            $this->trigger_error($error_msg . $info, $error_type);
+        }
+    }
+
+
+    /**
+     * callback function for preg_replace, to call a non-cacheable block
+     * @return string
+     */
+    function _process_compiled_include_callback($match) {
+        $_func = '_smarty_tplfunc_'.$match[2].'_'.$match[3];
+        ob_start();
+        $_func($this);
+        $_ret = ob_get_contents();
+        ob_end_clean();
+        return $_ret;
+    }
+
+
+    /**
+     * called for included templates
+     *
+     * @param string $_smarty_include_tpl_file
+     * @param string $_smarty_include_vars
+     */
+
+    // $_smarty_include_tpl_file, $_smarty_include_vars
+
+    function _smarty_include($params)
+    {
+        if ($this->debugging) {
+            $_params = array();
+            require_once(SMARTY_CORE_DIR . 'core.get_microtime.php');
+            $debug_start_time = smarty_core_get_microtime($_params, $this);
+            $this->_smarty_debug_info[] = array('type'      => 'template',
+                                                  'filename'  => $params['smarty_include_tpl_file'],
+                                                  'depth'     => ++$this->_inclusion_depth);
+            $included_tpls_idx = count($this->_smarty_debug_info) - 1;
+        }
+
+        $this->_tpl_vars = array_merge($this->_tpl_vars, $params['smarty_include_vars']);
+
+        // config vars are treated as local, so push a copy of the
+        // current ones onto the front of the stack
+        array_unshift($this->_config, $this->_config[0]);
+
+        $_smarty_compile_path = $this->_get_compile_path($params['smarty_include_tpl_file']);
+
+
+        if ($this->_is_compiled($params['smarty_include_tpl_file'], $_smarty_compile_path)
+            || $this->_compile_resource($params['smarty_include_tpl_file'], $_smarty_compile_path))
+        {
+            include($_smarty_compile_path);
+        }
+
+        // pop the local vars off the front of the stack
+        array_shift($this->_config);
+
+        $this->_inclusion_depth--;
+
+        if ($this->debugging) {
+            // capture time for debugging info
+            $_params = array();
+            require_once(SMARTY_CORE_DIR . 'core.get_microtime.php');
+            $this->_smarty_debug_info[$included_tpls_idx]['exec_time'] = smarty_core_get_microtime($_params, $this) - $debug_start_time;
+        }
+
+        if ($this->caching) {
+            $this->_cache_info['template'][$params['smarty_include_tpl_file']] = true;
+        }
+    }
+
+
+    /**
+     * get or set an array of cached attributes for function that is
+     * not cacheable
+     * @return array
+     */
+    function &_smarty_cache_attrs($cache_serial, $count) {
+        $_cache_attrs =& $this->_cache_info['cache_attrs'][$cache_serial][$count];
+
+        if ($this->_cache_including) {
+            /* return next set of cache_attrs */
+            $_return = current($_cache_attrs);
+            next($_cache_attrs);
+            return $_return;
+
+        } else {
+            /* add a reference to a new set of cache_attrs */
+            $_cache_attrs[] = array();
+            return $_cache_attrs[count($_cache_attrs)-1];
+
+        }
+
+    }
+
+
+    /**
+     * wrapper for include() retaining $this
+     * @return mixed
+     */
+    function _include($filename, $once=false, $params=null)
+    {
+        if ($once) {
+            return include_once($filename);
+        } else {
+            return include($filename);
+        }
+    }
+
+
+    /**
+     * wrapper for eval() retaining $this
+     * @return mixed
+     */
+    function _eval($code, $params=null)
+    {
+        return eval($code);
+    }
+    /**#@-*/
+
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Smarty_Compiler.class.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Smarty_Compiler.class.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/Smarty_Compiler.class.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,2259 +1,2311 @@
-<?php
-
-if (!defined('SMARTY_DIR')) {
-	exit();
-}
-/**
- * Project:     Smarty: the PHP compiling template engine
- * File:        Smarty_Compiler.class.php
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 2.1 of the License, or (at your option) any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- * @link http://smarty.php.net/
- * @author Monte Ohrt <monte at ispi.net>
- * @author Andrei Zmievski <andrei at php.net>
- * @version 2.6.5-dev
- * @copyright 2001-2004 ispi of Lincoln, Inc.
- * @package Smarty
- */
-
-/* $Id$ */
-
-/**
- * Template compiling class
- * @package Smarty
- */
-class Smarty_Compiler extends Smarty {
-
-    // internal vars
-    /**#@+
-     * @access private
-     */
-    var $_folded_blocks         =   array();    // keeps folded template blocks
-    var $_current_file          =   null;       // the current template being compiled
-    var $_current_line_no       =   1;          // line number for error messages
-    var $_capture_stack         =   array();    // keeps track of nested capture buffers
-    var $_plugin_info           =   array();    // keeps track of plugins to load
-    var $_init_smarty_vars      =   false;
-    var $_permitted_tokens      =   array('true','false','yes','no','on','off','null');
-    var $_db_qstr_regexp        =   null;        // regexps are setup in the constructor
-    var $_si_qstr_regexp        =   null;
-    var $_qstr_regexp           =   null;
-    var $_func_regexp           =   null;
-    var $_var_bracket_regexp    =   null;
-    var $_dvar_guts_regexp      =   null;
-    var $_dvar_regexp           =   null;
-    var $_cvar_regexp           =   null;
-    var $_svar_regexp           =   null;
-    var $_avar_regexp           =   null;
-    var $_mod_regexp            =   null;
-    var $_var_regexp            =   null;
-    var $_parenth_param_regexp  =   null;
-    var $_func_call_regexp      =   null;
-    var $_obj_ext_regexp        =   null;
-    var $_obj_start_regexp      =   null;
-    var $_obj_params_regexp     =   null;
-    var $_obj_call_regexp       =   null;
-    var $_cacheable_state       =   0;
-    var $_cache_attrs_count     =   0;
-    var $_nocache_count         =   0;
-    var $_cache_serial          =   null;
-    var $_cache_include         =   null;
-
-    var $_strip_depth           =   0;
-    var $_additional_newline    =   "\n";
-
-    /**#@-*/
-    /**
-     * The class constructor.
-     */
-    function Smarty_Compiler()
-    {
-        // matches double quoted strings:
-        // "foobar"
-        // "foo\"bar"
-        $this->_db_qstr_regexp = '"[^"\\\\]*(?:\\\\.[^"\\\\]*)*"';
-
-        // matches single quoted strings:
-        // 'foobar'
-        // 'foo\'bar'
-        $this->_si_qstr_regexp = '\'[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*\'';
-
-        // matches single or double quoted strings
-        $this->_qstr_regexp = '(?:' . $this->_db_qstr_regexp . '|' . $this->_si_qstr_regexp . ')';
-
-        // matches bracket portion of vars
-        // [0]
-        // [foo]
-        // [$bar]
-        $this->_var_bracket_regexp = '\[\$?[\w\.]+\]';
-
-        // matches numerical constants
-        // 30
-        // -12
-        // 13.22
-        $this->_num_const_regexp = '\-?\d+(?:\.\d+)?';
-
-        // matches $ vars (not objects):
-        // $foo
-        // $foo.bar
-        // $foo.bar.foobar
-        // $foo[0]
-        // $foo[$bar]
-        // $foo[5][blah]
-        // $foo[5].bar[$foobar][4]
-        $this->_dvar_math_regexp = '(?:[\+\*\/\%]|(?:-(?!>)))';
-        $this->_dvar_math_var_regexp = '[\$\w\.\+\-\*\/\%\d\>\[\]]';
-        $this->_dvar_guts_regexp = '\w+(?:' . $this->_var_bracket_regexp
-                . ')*(?:\.\$?\w+(?:' . $this->_var_bracket_regexp . ')*)*(?:' . $this->_dvar_math_regexp . '(?:' . $this->_num_const_regexp . '|' . $this->_dvar_math_var_regexp . ')*)?';
-        $this->_dvar_regexp = '\$' . $this->_dvar_guts_regexp;
-
-        // matches config vars:
-        // #foo#
-        // #foobar123_foo#
-        $this->_cvar_regexp = '\#\w+\#';
-
-        // matches section vars:
-        // %foo.bar%
-        $this->_svar_regexp = '\%\w+\.\w+\%';
-
-        // matches all valid variables (no quotes, no modifiers)
-        $this->_avar_regexp = '(?:' . $this->_dvar_regexp . '|'
-           . $this->_cvar_regexp . '|' . $this->_svar_regexp . ')';
-
-        // matches valid variable syntax:
-        // $foo
-        // $foo
-        // #foo#
-        // #foo#
-        // "text"
-        // "text"
-        $this->_var_regexp = '(?:' . $this->_avar_regexp . '|' . $this->_num_const_regexp . '|' . $this->_qstr_regexp . ')';
-
-        // matches valid object call (one level of object nesting allowed in parameters):
-        // $foo->bar
-        // $foo->bar()
-        // $foo->bar("text")
-        // $foo->bar($foo, $bar, "text")
-        // $foo->bar($foo, "foo")
-        // $foo->bar->foo()
-        // $foo->bar->foo->bar()
-        // $foo->bar($foo->bar)
-        // $foo->bar($foo->bar())
-        // $foo->bar($foo->bar($blah,$foo,44,"foo",$foo[0].bar))
-        $this->_obj_ext_regexp = '\->(?:\$?' . $this->_dvar_guts_regexp . ')';
-        $this->_obj_restricted_param_regexp = '(?:'
-                . $this->_var_regexp . '(?:' . $this->_obj_ext_regexp . '(?:\((?:' . $this->_var_regexp
-                . '(?:\s*,\s*' . $this->_var_regexp . ')*)?\))?)*)';
-        $this->_obj_single_param_regexp = '(?:\w+|' . $this->_obj_restricted_param_regexp . '(?:\s*,\s*(?:(?:\w+|'
-                . $this->_var_regexp . $this->_obj_restricted_param_regexp . ')))*)';
-        $this->_obj_params_regexp = '\((?:' . $this->_obj_single_param_regexp
-                . '(?:\s*,\s*' . $this->_obj_single_param_regexp . ')*)?\)';
-        $this->_obj_start_regexp = '(?:' . $this->_dvar_regexp . '(?:' . $this->_obj_ext_regexp . ')+)';
-        $this->_obj_call_regexp = '(?:' . $this->_obj_start_regexp . '(?:' . $this->_obj_params_regexp . ')?(?:' . $this->_dvar_math_regexp . '(?:' . $this->_num_const_regexp . '|' . $this->_dvar_math_var_regexp . ')*)?)';
-        
-        // matches valid modifier syntax:
-        // |foo
-        // |@foo
-        // |foo:"bar"
-        // |foo:$bar
-        // |foo:"bar":$foobar
-        // |foo|bar
-        // |foo:$foo->bar
-        $this->_mod_regexp = '(?:\|@?\w+(?::(?>-?\w+|'
-           . $this->_obj_call_regexp . '|' . $this->_avar_regexp . '|' . $this->_qstr_regexp .'))*)';
-
-        // matches valid function name:
-        // foo123
-        // _foo_bar
-        $this->_func_regexp = '[a-zA-Z_]\w*';
-
-        // matches valid registered object:
-        // foo->bar
-        $this->_reg_obj_regexp = '[a-zA-Z_]\w*->[a-zA-Z_]\w*';
-
-        // matches valid parameter values:
-        // true
-        // $foo
-        // $foo|bar
-        // #foo#
-        // #foo#|bar
-        // "text"
-        // "text"|bar
-        // $foo->bar
-        $this->_param_regexp = '(?:\s*(?:' . $this->_obj_call_regexp . '|'
-           . $this->_var_regexp  . '|\w+)(?>' . $this->_mod_regexp . '*)\s*)';
-
-        // matches valid parenthesised function parameters:
-        //
-        // "text"
-        //    $foo, $bar, "text"
-        // $foo|bar, "foo"|bar, $foo->bar($foo)|bar
-        $this->_parenth_param_regexp = '(?:\((?:\w+|'
-                . $this->_param_regexp . '(?:\s*,\s*(?:(?:\w+|'
-                . $this->_param_regexp . ')))*)?\))';
-
-        // matches valid function call:
-        // foo()
-        // foo_bar($foo)
-        // _foo_bar($foo,"bar")
-        // foo123($foo,$foo->bar(),"foo")
-        $this->_func_call_regexp = '(?:' . $this->_func_regexp . '\s*(?:'
-           . $this->_parenth_param_regexp . '))';
-    }
-
-    /**
-     * compile a resource
-     *
-     * sets $compiled_content to the compiled source
-     * @param string $resource_name
-     * @param string $source_content
-     * @param string $compiled_content
-     * @return true
-     */
-    function _compile_file($resource_name, $source_content, &$compiled_content)
-    {
-
-        if ($this->security) {
-            // do not allow php syntax to be executed unless specified
-            if ($this->php_handling == SMARTY_PHP_ALLOW &&
-                !$this->security_settings['PHP_HANDLING']) {
-                $this->php_handling = SMARTY_PHP_PASSTHRU;
-            }
-        }
-
-        $this->_load_filters();
-
-        $this->_current_file = $resource_name;
-        $this->_current_line_no = 1;
-        $ldq = preg_quote($this->left_delimiter, '~');
-        $rdq = preg_quote($this->right_delimiter, '~');
-
-        // run template source through prefilter functions
-        if (count($this->_plugins['prefilter']) > 0) {
-            foreach ($this->_plugins['prefilter'] as $filter_name => $prefilter) {
-                if ($prefilter === false) continue;
-                if ($prefilter[3] || is_callable($prefilter[0])) {
-                    $source_content = call_user_func_array($prefilter[0],
-                                                            array($source_content, &$this));
-                    $this->_plugins['prefilter'][$filter_name][3] = true;
-                } else {
-                    $this->_trigger_fatal_error("[plugin] prefilter '$filter_name' is not implemented");
-                }
-            }
-        }
-
-        /* fetch all special blocks */
-        $search = "~{$ldq}\*(.*?)\*{$rdq}|{$ldq}\s*literal\s*{$rdq}(.*?){$ldq}\s*/literal\s*{$rdq}|{$ldq}\s*php\s*{$rdq}(.*?){$ldq}\s*/php\s*{$rdq}~s";
-
-        preg_match_all($search, $source_content, $match,  PREG_SET_ORDER);
-        $this->_folded_blocks = $match;
-        reset($this->_folded_blocks);
-
-        /* replace special blocks by "{php}" */
-        $source_content = preg_replace($search.'e', "'"
-                                       . $this->_quote_replace($this->left_delimiter) . 'php'
-                                       . "' . str_repeat(\"\n\", substr_count('\\0', \"\n\")) .'"
-                                       . $this->_quote_replace($this->right_delimiter)
-                                       . "'"
-                                       , $source_content);
-
-        /* Gather all template tags. */
-        preg_match_all("~{$ldq}\s*(.*?)\s*{$rdq}~s", $source_content, $_match);
-        $template_tags = $_match[1];
-        /* Split content by template tags to obtain non-template content. */
-        $text_blocks = preg_split("~{$ldq}.*?{$rdq}~s", $source_content);
-
-        /* loop through text blocks */
-        for ($curr_tb = 0, $for_max = count($text_blocks); $curr_tb < $for_max; $curr_tb++) {
-            /* match anything resembling php tags */
-            if (preg_match_all('~(<\?(?:\w+|=)?|\?>|language\s*=\s*[\"\']?php[\"\']?)~is', $text_blocks[$curr_tb], $sp_match)) {
-                /* replace tags with placeholders to prevent recursive replacements */
-                $sp_match[1] = array_unique($sp_match[1]);
-                usort($sp_match[1], '_smarty_sort_length');
-                for ($curr_sp = 0, $for_max2 = count($sp_match[1]); $curr_sp < $for_max2; $curr_sp++) {
-                    $text_blocks[$curr_tb] = str_replace($sp_match[1][$curr_sp],'%%%SMARTYSP'.$curr_sp.'%%%',$text_blocks[$curr_tb]);
-                }
-                /* process each one */
-                for ($curr_sp = 0, $for_max2 = count($sp_match[1]); $curr_sp < $for_max2; $curr_sp++) {
-                    if ($this->php_handling == SMARTY_PHP_PASSTHRU) {
-                        /* echo php contents */
-                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', '<?php echo \''.str_replace("'", "\'", $sp_match[1][$curr_sp]).'\'; ?>'."\n", $text_blocks[$curr_tb]);
-                    } else if ($this->php_handling == SMARTY_PHP_QUOTE) {
-                        /* quote php tags */
-                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', htmlspecialchars($sp_match[1][$curr_sp]), $text_blocks[$curr_tb]);
-                    } else if ($this->php_handling == SMARTY_PHP_REMOVE) {
-                        /* remove php tags */
-                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', '', $text_blocks[$curr_tb]);
-                    } else {
-                        /* SMARTY_PHP_ALLOW, but echo non php starting tags */
-                        $sp_match[1][$curr_sp] = preg_replace('~(<\?(?!php|=|$))~i', '<?php echo \'\\1\'?>'."\n", $sp_match[1][$curr_sp]);
-                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', $sp_match[1][$curr_sp], $text_blocks[$curr_tb]);
-                    }
-                }
-            }
-        }
-
-        /* Compile the template tags into PHP code. */
-        $compiled_tags = array();
-        for ($i = 0, $for_max = count($template_tags); $i < $for_max; $i++) {
-            $this->_current_line_no += substr_count($text_blocks[$i], "\n");
-            $compiled_tags[] = $this->_compile_tag($template_tags[$i]);
-            $this->_current_line_no += substr_count($template_tags[$i], "\n");
-        }
-        if (count($this->_tag_stack)>0) {
-            list($_open_tag, $_line_no) = end($this->_tag_stack);
-            $this->_syntax_error("unclosed tag \{$_open_tag} (opened line $_line_no).", E_USER_ERROR, __FILE__, __LINE__);
-            return;
-        }
-
-        $compiled_content = '';
-
-        /* Interleave the compiled contents and text blocks to get the final result. */
-        for ($i = 0, $for_max = count($compiled_tags); $i < $for_max; $i++) {
-            if ($compiled_tags[$i] == '') {
-                // tag result empty, remove first newline from following text block
-                $text_blocks[$i+1] = preg_replace('~^(\r\n|\r|\n)~', '', $text_blocks[$i+1]);
-            }
-            $compiled_content .= $text_blocks[$i].$compiled_tags[$i];
-        }
-        $compiled_content .= $text_blocks[$i];
-
-        /* Reformat data between 'strip' and '/strip' tags, removing spaces, tabs and newlines. */
-        if (preg_match_all("~{$ldq}strip{$rdq}.*?{$ldq}/strip{$rdq}~s", $compiled_content, $_match)) {
-            $strip_tags = $_match[0];
-            $strip_tags_modified = preg_replace("~{$ldq}/?strip{$rdq}|[\t ]+$|^[\t ]+~m", '', $strip_tags);
-            $strip_tags_modified = preg_replace('~[\r\n]+~m', '', $strip_tags_modified);
-            for ($i = 0, $for_max = count($strip_tags); $i < $for_max; $i++)
-                $compiled_content = preg_replace("~{$ldq}strip{$rdq}.*?{$ldq}/strip{$rdq}~s",
-                                                  $this->_quote_replace($strip_tags_modified[$i]),
-                                                  $compiled_content, 1);
-        }
-
-        // remove \n from the end of the file, if any
-        if (($_len=strlen($compiled_content)) && ($compiled_content{$_len - 1} == "\n" )) {
-            $compiled_content = substr($compiled_content, 0, -1);
-        }
-
-        if (!empty($this->_cache_serial)) {
-            $compiled_content = "<?php \$this->_cache_serials['".$this->_cache_include."'] = '".$this->_cache_serial."'; ?>" . $compiled_content;
-        }
-
-        // remove unnecessary close/open tags
-        $compiled_content = preg_replace('~\?>\n?<\?php~', '', $compiled_content);
-
-        // run compiled template through postfilter functions
-        if (count($this->_plugins['postfilter']) > 0) {
-            foreach ($this->_plugins['postfilter'] as $filter_name => $postfilter) {
-                if ($postfilter === false) continue;
-                if ($postfilter[3] || is_callable($postfilter[0])) {
-                    $compiled_content = call_user_func_array($postfilter[0],
-                                                              array($compiled_content, &$this));
-                    $this->_plugins['postfilter'][$filter_name][3] = true;
-                } else {
-                    $this->_trigger_fatal_error("Smarty plugin error: postfilter '$filter_name' is not implemented");
-                }
-            }
-        }
-
-        // put header at the top of the compiled template
-        $template_header = "<?php /* Smarty version ".$this->_version.", created on ".strftime("%Y-%m-%d %H:%M:%S")."\n";
-        $template_header .= "         compiled from ".strtr(urlencode($resource_name), array('%2F'=>'/', '%3A'=>':'))." */ ?>\n";
-
-        /* Emit code to load needed plugins. */
-        $this->_plugins_code = '';
-        if (count($this->_plugin_info)) {
-            $_plugins_params = "array('plugins' => array(";
-            foreach ($this->_plugin_info as $plugin_type => $plugins) {
-                foreach ($plugins as $plugin_name => $plugin_info) {
-                    $_plugins_params .= "array('$plugin_type', '$plugin_name', '$plugin_info[0]', $plugin_info[1], ";
-                    $_plugins_params .= $plugin_info[2] ? 'true),' : 'false),';
-                }
-            }
-            $_plugins_params .= '))';
-            $plugins_code = "<?php require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_plugins.php');\nsmarty_core_load_plugins($_plugins_params, \$this); ?>\n";
-            $template_header .= $plugins_code;
-            $this->_plugin_info = array();
-            $this->_plugins_code = $plugins_code;
-        }
-
-        if ($this->_init_smarty_vars) {
-            $template_header .= "<?php require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.assign_smarty_interface.php');\nsmarty_core_assign_smarty_interface(null, \$this); ?>\n";
-            $this->_init_smarty_vars = false;
-        }
-
-        $compiled_content = $template_header . $compiled_content;
-        return true;
-    }
-
-    /**
-     * Compile a template tag
-     *
-     * @param string $template_tag
-     * @return string
-     */
-    function _compile_tag($template_tag)
-    {
-        /* Matched comment. */
-        if ($template_tag{0} == '*' && $template_tag{strlen($template_tag) - 1} == '*')
-            return '';
-        
-        /* Split tag into two three parts: command, command modifiers and the arguments. */
-        if(! preg_match('~^(?:(' . $this->_num_const_regexp . '|' . $this->_obj_call_regexp . '|' . $this->_var_regexp
-                . '|\/?' . $this->_reg_obj_regexp . '|\/?' . $this->_func_regexp . ')(' . $this->_mod_regexp . '*))
-                      (?:\s+(.*))?$
-                    ~xs', $template_tag, $match)) {
-            $this->_syntax_error("unrecognized tag: $template_tag", E_USER_ERROR, __FILE__, __LINE__);
-        }
-        
-        $tag_command = $match[1];
-        $tag_modifier = isset($match[2]) ? $match[2] : null;
-        $tag_args = isset($match[3]) ? $match[3] : null;
-
-        if (preg_match('~^' . $this->_num_const_regexp . '|' . $this->_obj_call_regexp . '|' . $this->_var_regexp . '$~', $tag_command)) {
-            /* tag name is a variable or object */
-            $_return = $this->_parse_var_props($tag_command . $tag_modifier, $this->_parse_attrs($tag_args));
-            if(isset($_tag_attrs['assign'])) {
-                return "<?php \$this->assign('" . $this->_dequote($_tag_attrs['assign']) . "', $_return ); ?>\n";
-            } else {
-                return "<?php echo $_return; ?>" . $this->_additional_newline;
-            }
-        }
-
-        /* If the tag name is a registered object, we process it. */
-        if (preg_match('~^\/?' . $this->_reg_obj_regexp . '$~', $tag_command)) {
-            return $this->_compile_registered_object_tag($tag_command, $this->_parse_attrs($tag_args), $tag_modifier);
-        }
-
-        switch ($tag_command) {
-            case 'include':
-                return $this->_compile_include_tag($tag_args);
-
-            case 'include_php':
-                return $this->_compile_include_php_tag($tag_args);
-
-            case 'if':
-                $this->_push_tag('if');
-                return $this->_compile_if_tag($tag_args);
-
-            case 'else':
-                list($_open_tag) = end($this->_tag_stack);
-                if ($_open_tag != 'if' && $_open_tag != 'elseif')
-                    $this->_syntax_error('unexpected {else}', E_USER_ERROR, __FILE__, __LINE__);
-                else
-                    $this->_push_tag('else');
-                return '<?php else: ?>';
-
-            case 'elseif':
-                list($_open_tag) = end($this->_tag_stack);
-                if ($_open_tag != 'if' && $_open_tag != 'elseif')
-                    $this->_syntax_error('unexpected {elseif}', E_USER_ERROR, __FILE__, __LINE__);
-                if ($_open_tag == 'if')
-                    $this->_push_tag('elseif');
-                return $this->_compile_if_tag($tag_args, true);
-
-            case '/if':
-                $this->_pop_tag('if');
-                return '<?php endif; ?>';
-
-            case 'capture':
-                return $this->_compile_capture_tag(true, $tag_args);
-
-            case '/capture':
-                return $this->_compile_capture_tag(false);
-
-            case 'ldelim':
-                return $this->left_delimiter;
-
-            case 'rdelim':
-                return $this->right_delimiter;
-
-            case 'section':
-                $this->_push_tag('section');
-                return $this->_compile_section_start($tag_args);
-
-            case 'sectionelse':
-                $this->_push_tag('sectionelse');
-                return "<?php endfor; else: ?>";
-                break;
-
-            case '/section':
-                $_open_tag = $this->_pop_tag('section');
-                if ($_open_tag == 'sectionelse')
-                    return "<?php endif; ?>";
-                else
-                    return "<?php endfor; endif; ?>";
-
-            case 'foreach':
-                $this->_push_tag('foreach');
-                return $this->_compile_foreach_start($tag_args);
-                break;
-
-            case 'foreachelse':
-                $this->_push_tag('foreachelse');
-                return "<?php endforeach; unset(\$_from); else: ?>";
-
-            case '/foreach':
-                $_open_tag = $this->_pop_tag('foreach');
-                if ($_open_tag == 'foreachelse')
-                    return "<?php endif; ?>";
-                else
-                    return "<?php endforeach; unset(\$_from); endif; ?>";
-                break;
-
-            case 'strip':
-            case '/strip':
-                if ($tag_command{0}=='/') {
-                    $this->_pop_tag('strip');
-                    if (--$this->_strip_depth==0) { /* outermost closing {/strip} */
-                        $this->_additional_newline = "\n";
-                        return $this->left_delimiter.$tag_command.$this->right_delimiter;
-                    }
-                } else {
-                    $this->_push_tag('strip');
-                    if ($this->_strip_depth++==0) { /* outermost opening {strip} */
-                        $this->_additional_newline = "";
-                        return $this->left_delimiter.$tag_command.$this->right_delimiter;
-                    }
-                }
-                return '';
-
-            case 'php':
-                /* handle folded tags replaced by {php} */
-                list(, $block) = each($this->_folded_blocks);
-                $this->_current_line_no += substr_count($block[0], "\n");
-                /* the number of matched elements in the regexp in _compile_file()
-                   determins the type of folded tag that was found */
-                switch (count($block)) {
-                    case 2: /* comment */
-                        return '';
-
-                    case 3: /* literal */
-                        return "<?php echo '" . strtr($block[2], array("'"=>"\'", "\\"=>"\\\\")) . "'; ?>" . $this->_additional_newline;
-
-                    case 4: /* php */
-                        if ($this->security && !$this->security_settings['PHP_TAGS']) {
-                            $this->_syntax_error("(secure mode) php tags not permitted", E_USER_WARNING, __FILE__, __LINE__);
-                            return;
-                        }
-                        return '<?php ' . $block[3] .' ?>';
-                }
-                break;
-
-            case 'insert':
-                return $this->_compile_insert_tag($tag_args);
-
-            default:
-                if ($this->_compile_compiler_tag($tag_command, $tag_args, $output)) {
-                    return $output;
-                } else if ($this->_compile_block_tag($tag_command, $tag_args, $tag_modifier, $output)) {
-                    return $output;
-                } else if ($this->_compile_custom_tag($tag_command, $tag_args, $tag_modifier, $output)) {
-                    return $output;                    
-                } else {
-                    $this->_syntax_error("unrecognized tag '$tag_command'", E_USER_ERROR, __FILE__, __LINE__);
-                }
-
-        }
-    }
-
-
-    /**
-     * compile the custom compiler tag
-     *
-     * sets $output to the compiled custom compiler tag
-     * @param string $tag_command
-     * @param string $tag_args
-     * @param string $output
-     * @return boolean
-     */
-    function _compile_compiler_tag($tag_command, $tag_args, &$output)
-    {
-        $found = false;
-        $have_function = true;
-
-        /*
-         * First we check if the compiler function has already been registered
-         * or loaded from a plugin file.
-         */
-        if (isset($this->_plugins['compiler'][$tag_command])) {
-            $found = true;
-            $plugin_func = $this->_plugins['compiler'][$tag_command][0];
-            if (!is_callable($plugin_func)) {
-                $message = "compiler function '$tag_command' is not implemented";
-                $have_function = false;
-            }
-        }
-        /*
-         * Otherwise we need to load plugin file and look for the function
-         * inside it.
-         */
-        else if ($plugin_file = $this->_get_plugin_filepath('compiler', $tag_command)) {
-            $found = true;
-
-            include_once $plugin_file;
-
-            $plugin_func = 'smarty_compiler_' . $tag_command;
-            if (!is_callable($plugin_func)) {
-                $message = "plugin function $plugin_func() not found in $plugin_file\n";
-                $have_function = false;
-            } else {
-                $this->_plugins['compiler'][$tag_command] = array($plugin_func, null, null, null, true);
-            }
-        }
-
-        /*
-         * True return value means that we either found a plugin or a
-         * dynamically registered function. False means that we didn't and the
-         * compiler should now emit code to load custom function plugin for this
-         * tag.
-         */
-        if ($found) {
-            if ($have_function) {
-                $output = call_user_func_array($plugin_func, array($tag_args, &$this));
-                if($output != '') {
-                $output = '<?php ' . $this->_push_cacheable_state('compiler', $tag_command)
-                                   . $output
-                                   . $this->_pop_cacheable_state('compiler', $tag_command) . ' ?>';
-                }
-            } else {
-                $this->_syntax_error($message, E_USER_WARNING, __FILE__, __LINE__);
-            }
-            return true;
-        } else {
-            return false;
-        }
-    }
-
-
-    /**
-     * compile block function tag
-     *
-     * sets $output to compiled block function tag
-     * @param string $tag_command
-     * @param string $tag_args
-     * @param string $tag_modifier
-     * @param string $output
-     * @return boolean
-     */
-    function _compile_block_tag($tag_command, $tag_args, $tag_modifier, &$output)
-    {
-        if ($tag_command{0} == '/') {
-            $start_tag = false;
-            $tag_command = substr($tag_command, 1);
-        } else
-            $start_tag = true;
-
-        $found = false;
-        $have_function = true;
-
-        /*
-         * First we check if the block function has already been registered
-         * or loaded from a plugin file.
-         */
-        if (isset($this->_plugins['block'][$tag_command])) {
-            $found = true;
-            $plugin_func = $this->_plugins['block'][$tag_command][0];
-            if (!is_callable($plugin_func)) {
-                $message = "block function '$tag_command' is not implemented";
-                $have_function = false;
-            }
-        }
-        /*
-         * Otherwise we need to load plugin file and look for the function
-         * inside it.
-         */
-        else if ($plugin_file = $this->_get_plugin_filepath('block', $tag_command)) {
-            $found = true;
-
-            include_once $plugin_file;
-
-            $plugin_func = 'smarty_block_' . $tag_command;
-            if (!function_exists($plugin_func)) {
-                $message = "plugin function $plugin_func() not found in $plugin_file\n";
-                $have_function = false;
-            } else {
-                $this->_plugins['block'][$tag_command] = array($plugin_func, null, null, null, true);
-
-            }
-        }
-
-        if (!$found) {
-            return false;
-        } else if (!$have_function) {
-            $this->_syntax_error($message, E_USER_WARNING, __FILE__, __LINE__);
-            return true;
-        }
-
-        /*
-         * Even though we've located the plugin function, compilation
-         * happens only once, so the plugin will still need to be loaded
-         * at runtime for future requests.
-         */
-        $this->_add_plugin('block', $tag_command);
-
-        if ($start_tag)
-            $this->_push_tag($tag_command);
-        else
-            $this->_pop_tag($tag_command);
-
-        if ($start_tag) {
-            $output = '<?php ' . $this->_push_cacheable_state('block', $tag_command);
-            $attrs = $this->_parse_attrs($tag_args);
-            $arg_list = $this->_compile_arg_list('block', $tag_command, $attrs, $_cache_attrs='');
-            $output .= "$_cache_attrs\$this->_tag_stack[] = array('$tag_command', array(".implode(',', $arg_list).')); ';
-            $output .= $this->_compile_plugin_call('block', $tag_command).'($this->_tag_stack[count($this->_tag_stack)-1][1], null, $this, $_block_repeat=true);';
-            $output .= 'while ($_block_repeat) { ob_start(); ?>';
-        } else {
-            $output = '<?php $this->_block_content = ob_get_contents(); ob_end_clean(); ';
-            $_out_tag_text = $this->_compile_plugin_call('block', $tag_command).'($this->_tag_stack[count($this->_tag_stack)-1][1], $this->_block_content, $this, $_block_repeat=false)';
-            if ($tag_modifier != '') {
-                $this->_parse_modifiers($_out_tag_text, $tag_modifier);
-            }
-            $output .= 'echo '.$_out_tag_text.'; } ';
-            $output .= " array_pop(\$this->_tag_stack); " . $this->_pop_cacheable_state('block', $tag_command) . '?>';
-        }
-
-        return true;
-    }
-
-
-    /**
-     * compile custom function tag
-     *
-     * @param string $tag_command
-     * @param string $tag_args
-     * @param string $tag_modifier
-     * @return string
-     */
-    function _compile_custom_tag($tag_command, $tag_args, $tag_modifier, &$output)
-    {
-        $found = false;
-        $have_function = true;
-
-        /*
-         * First we check if the custom function has already been registered
-         * or loaded from a plugin file.
-         */
-        if (isset($this->_plugins['function'][$tag_command])) {
-            $found = true;
-            $plugin_func = $this->_plugins['function'][$tag_command][0];
-            if (!is_callable($plugin_func)) {
-                $message = "custom function '$tag_command' is not implemented";
-                $have_function = false;
-            }
-        }
-        /*
-         * Otherwise we need to load plugin file and look for the function
-         * inside it.
-         */
-        else if ($plugin_file = $this->_get_plugin_filepath('function', $tag_command)) {
-            $found = true;
-
-            include_once $plugin_file;
-
-            $plugin_func = 'smarty_function_' . $tag_command;
-            if (!function_exists($plugin_func)) {
-                $message = "plugin function $plugin_func() not found in $plugin_file\n";
-                $have_function = false;
-            } else {
-                $this->_plugins['function'][$tag_command] = array($plugin_func, null, null, null, true);
-
-            }
-        }
-
-        if (!$found) {
-            return false;
-        } else if (!$have_function) {
-            $this->_syntax_error($message, E_USER_WARNING, __FILE__, __LINE__);
-            return true;
-        }
-
-        /* declare plugin to be loaded on display of the template that
-           we compile right now */
-        $this->_add_plugin('function', $tag_command);
-
-        $_cacheable_state = $this->_push_cacheable_state('function', $tag_command);
-        $attrs = $this->_parse_attrs($tag_args);
-        $arg_list = $this->_compile_arg_list('function', $tag_command, $attrs, $_cache_attrs='');
-
-        $output = $this->_compile_plugin_call('function', $tag_command).'(array('.implode(',', $arg_list)."), \$this)";
-        if($tag_modifier != '') {
-            $this->_parse_modifiers($output, $tag_modifier);
-        }
-
-        if($output != '') {
-            $output =  '<?php ' . $_cacheable_state . $_cache_attrs . 'echo ' . $output . ';'
-                . $this->_pop_cacheable_state('function', $tag_command) . "?>" . $this->_additional_newline;
-        }
-
-        return true;
-    }
-
-    /**
-     * compile a registered object tag
-     *
-     * @param string $tag_command
-     * @param array $attrs
-     * @param string $tag_modifier
-     * @return string
-     */
-    function _compile_registered_object_tag($tag_command, $attrs, $tag_modifier)
-    {
-        if ($tag_command{0} == '/') {
-            $start_tag = false;
-            $tag_command = substr($tag_command, 1);
-        } else {
-            $start_tag = true;
-        }
-
-        list($object, $obj_comp) = explode('->', $tag_command);
-
-        $arg_list = array();
-        if(count($attrs)) {
-            $_assign_var = false;
-            foreach ($attrs as $arg_name => $arg_value) {
-                if($arg_name == 'assign') {
-                    $_assign_var = $arg_value;
-                    unset($attrs['assign']);
-                    continue;
-                }
-                if (is_bool($arg_value))
-                    $arg_value = $arg_value ? 'true' : 'false';
-                $arg_list[] = "'$arg_name' => $arg_value";
-            }
-        }
-
-        if($this->_reg_objects[$object][2]) {
-            // smarty object argument format
-            $args = "array(".implode(',', (array)$arg_list)."), \$this";
-        } else {
-            // traditional argument format
-            $args = implode(',', array_values($attrs));
-            if (empty($args)) {
-                $args = 'null';
-            }
-        }
-
-        $prefix = '';
-        $postfix = '';
-        $newline = '';
-        if(!is_object($this->_reg_objects[$object][0])) {
-            $this->_trigger_fatal_error("registered '$object' is not an object" , $this->_current_file, $this->_current_line_no, __FILE__, __LINE__);
-        } elseif(!empty($this->_reg_objects[$object][1]) && !in_array($obj_comp, $this->_reg_objects[$object][1])) {
-            $this->_trigger_fatal_error("'$obj_comp' is not a registered component of object '$object'", $this->_current_file, $this->_current_line_no, __FILE__, __LINE__);
-        } elseif(method_exists($this->_reg_objects[$object][0], $obj_comp)) {
-            // method
-            if(in_array($obj_comp, $this->_reg_objects[$object][3])) {
-                // block method
-                if ($start_tag) {
-                    $prefix = "\$this->_tag_stack[] = array('$obj_comp', $args); ";
-                    $prefix .= "\$this->_reg_objects['$object'][0]->$obj_comp(\$this->_tag_stack[count(\$this->_tag_stack)-1][1], null, \$this, \$_block_repeat=true); ";
-                    $prefix .= "while (\$_block_repeat) { ob_start();";
-                    $return = null;
-                    $postfix = '';
-            } else {
-                    $prefix = "\$this->_obj_block_content = ob_get_contents(); ob_end_clean(); ";
-                    $return = "\$this->_reg_objects['$object'][0]->$obj_comp(\$this->_tag_stack[count(\$this->_tag_stack)-1][1], \$this->_obj_block_content, \$this, \$_block_repeat=false)";
-                    $postfix = "} array_pop(\$this->_tag_stack);";
-                }
-            } else {
-                // non-block method
-                $return = "\$this->_reg_objects['$object'][0]->$obj_comp($args)";
-            }
-        } else {
-            // property
-            $return = "\$this->_reg_objects['$object'][0]->$obj_comp";
-        }
-
-        if($return != null) {
-            if($tag_modifier != '') {
-                $this->_parse_modifiers($return, $tag_modifier);
-            }
-
-            if(!empty($_assign_var)) {
-                $output = "\$this->assign('" . $this->_dequote($_assign_var) ."',  $return);";
-            } else {
-                $output = 'echo ' . $return . ';';
-                $newline = $this->_additional_newline;
-            }
-        } else {
-            $output = '';
-        }
-
-        return '<?php ' . $prefix . $output . $postfix . "?>" . $newline;
-    }
-
-    /**
-     * Compile {insert ...} tag
-     *
-     * @param string $tag_args
-     * @return string
-     */
-    function _compile_insert_tag($tag_args)
-    {
-        $attrs = $this->_parse_attrs($tag_args);
-        $name = $this->_dequote($attrs['name']);
-
-        if (empty($name)) {
-            $this->_syntax_error("missing insert name", E_USER_ERROR, __FILE__, __LINE__);
-        }
-
-        if (!empty($attrs['script'])) {
-            $delayed_loading = true;
-        } else {
-            $delayed_loading = false;
-        }
-
-        foreach ($attrs as $arg_name => $arg_value) {
-            if (is_bool($arg_value))
-                $arg_value = $arg_value ? 'true' : 'false';
-            $arg_list[] = "'$arg_name' => $arg_value";
-        }
-
-        $this->_add_plugin('insert', $name, $delayed_loading);
-
-        $_params = "array('args' => array(".implode(', ', (array)$arg_list)."))";
-
-        return "<?php require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.run_insert_handler.php');\necho smarty_core_run_insert_handler($_params, \$this); ?>" . $this->_additional_newline;
-    }
-
-    /**
-     * Compile {include ...} tag
-     *
-     * @param string $tag_args
-     * @return string
-     */
-    function _compile_include_tag($tag_args)
-    {
-        $attrs = $this->_parse_attrs($tag_args);
-        $arg_list = array();
-
-        if (empty($attrs['file'])) {
-            $this->_syntax_error("missing 'file' attribute in include tag", E_USER_ERROR, __FILE__, __LINE__);
-        }
-
-        foreach ($attrs as $arg_name => $arg_value) {
-            if ($arg_name == 'file') {
-                $include_file = $arg_value;
-                continue;
-            } else if ($arg_name == 'assign') {
-                $assign_var = $arg_value;
-                continue;
-            }
-            if (is_bool($arg_value))
-                $arg_value = $arg_value ? 'true' : 'false';
-            $arg_list[] = "'$arg_name' => $arg_value";
-        }
-
-        $output = '<?php ';
-
-        if (isset($assign_var)) {
-            $output .= "ob_start();\n";
-        }
-
-        $output .=
-            "\$_smarty_tpl_vars = \$this->_tpl_vars;\n";
-
-
-        $_params = "array('smarty_include_tpl_file' => " . $include_file . ", 'smarty_include_vars' => array(".implode(',', (array)$arg_list)."))";
-        $output .= "\$this->_smarty_include($_params);\n" .
-        "\$this->_tpl_vars = \$_smarty_tpl_vars;\n" .
-        "unset(\$_smarty_tpl_vars);\n";
-
-        if (isset($assign_var)) {
-            $output .= "\$this->assign(" . $assign_var . ", ob_get_contents()); ob_end_clean();\n";
-        }
-
-        $output .= ' ?>';
-
-        return $output;
-
-    }
-
-    /**
-     * Compile {include ...} tag
-     *
-     * @param string $tag_args
-     * @return string
-     */
-    function _compile_include_php_tag($tag_args)
-    {
-        $attrs = $this->_parse_attrs($tag_args);
-
-        if (empty($attrs['file'])) {
-            $this->_syntax_error("missing 'file' attribute in include_php tag", E_USER_ERROR, __FILE__, __LINE__);
-        }
-
-        $assign_var = (empty($attrs['assign'])) ? '' : $this->_dequote($attrs['assign']);
-        $once_var = (empty($attrs['once']) || $attrs['once']=='false') ? 'false' : 'true';
-
-        $arg_list = array();
-        foreach($attrs as $arg_name => $arg_value) {
-            if($arg_name != 'file' AND $arg_name != 'once' AND $arg_name != 'assign') {
-                if(is_bool($arg_value))
-                    $arg_value = $arg_value ? 'true' : 'false';
-                $arg_list[] = "'$arg_name' => $arg_value";
-            }
-        }
-
-        $_params = "array('smarty_file' => " . $attrs['file'] . ", 'smarty_assign' => '$assign_var', 'smarty_once' => $once_var, 'smarty_include_vars' => array(".implode(',', $arg_list)."))";
-
-        return "<?php require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.smarty_include_php.php');\nsmarty_core_smarty_include_php($_params, \$this); ?>" . $this->_additional_newline;
-    }
-
-
-    /**
-     * Compile {section ...} tag
-     *
-     * @param string $tag_args
-     * @return string
-     */
-    function _compile_section_start($tag_args)
-    {
-        $attrs = $this->_parse_attrs($tag_args);
-        $arg_list = array();
-
-        $output = '<?php ';
-        $section_name = $attrs['name'];
-        if (empty($section_name)) {
-            $this->_syntax_error("missing section name", E_USER_ERROR, __FILE__, __LINE__);
-        }
-
-        $output .= "unset(\$this->_sections[$section_name]);\n";
-        $section_props = "\$this->_sections[$section_name]";
-
-        foreach ($attrs as $attr_name => $attr_value) {
-            switch ($attr_name) {
-                case 'loop':
-                    $output .= "{$section_props}['loop'] = is_array(\$_loop=$attr_value) ? count(\$_loop) : max(0, (int)\$_loop); unset(\$_loop);\n";
-                    break;
-
-                case 'show':
-                    if (is_bool($attr_value))
-                        $show_attr_value = $attr_value ? 'true' : 'false';
-                    else
-                        $show_attr_value = "(bool)$attr_value";
-                    $output .= "{$section_props}['show'] = $show_attr_value;\n";
-                    break;
-
-                case 'name':
-                    $output .= "{$section_props}['$attr_name'] = $attr_value;\n";
-                    break;
-
-                case 'max':
-                case 'start':
-                    $output .= "{$section_props}['$attr_name'] = (int)$attr_value;\n";
-                    break;
-
-                case 'step':
-                    $output .= "{$section_props}['$attr_name'] = ((int)$attr_value) == 0 ? 1 : (int)$attr_value;\n";
-                    break;
-
-                default:
-                    $this->_syntax_error("unknown section attribute - '$attr_name'", E_USER_ERROR, __FILE__, __LINE__);
-                    break;
-            }
-        }
-
-        if (!isset($attrs['show']))
-            $output .= "{$section_props}['show'] = true;\n";
-
-        if (!isset($attrs['loop']))
-            $output .= "{$section_props}['loop'] = 1;\n";
-
-        if (!isset($attrs['max']))
-            $output .= "{$section_props}['max'] = {$section_props}['loop'];\n";
-        else
-            $output .= "if ({$section_props}['max'] < 0)\n" .
-                       "    {$section_props}['max'] = {$section_props}['loop'];\n";
-
-        if (!isset($attrs['step']))
-            $output .= "{$section_props}['step'] = 1;\n";
-
-        if (!isset($attrs['start']))
-            $output .= "{$section_props}['start'] = {$section_props}['step'] > 0 ? 0 : {$section_props}['loop']-1;\n";
-        else {
-            $output .= "if ({$section_props}['start'] < 0)\n" .
-                       "    {$section_props}['start'] = max({$section_props}['step'] > 0 ? 0 : -1, {$section_props}['loop'] + {$section_props}['start']);\n" .
-                       "else\n" .
-                       "    {$section_props}['start'] = min({$section_props}['start'], {$section_props}['step'] > 0 ? {$section_props}['loop'] : {$section_props}['loop']-1);\n";
-        }
-
-        $output .= "if ({$section_props}['show']) {\n";
-        if (!isset($attrs['start']) && !isset($attrs['step']) && !isset($attrs['max'])) {
-            $output .= "    {$section_props}['total'] = {$section_props}['loop'];\n";
-        } else {
-            $output .= "    {$section_props}['total'] = min(ceil(({$section_props}['step'] > 0 ? {$section_props}['loop'] - {$section_props}['start'] : {$section_props}['start']+1)/abs({$section_props}['step'])), {$section_props}['max']);\n";
-        }
-        $output .= "    if ({$section_props}['total'] == 0)\n" .
-                   "        {$section_props}['show'] = false;\n" .
-                   "} else\n" .
-                   "    {$section_props}['total'] = 0;\n";
-
-        $output .= "if ({$section_props}['show']):\n";
-        $output .= "
-            for ({$section_props}['index'] = {$section_props}['start'], {$section_props}['iteration'] = 1;
-                 {$section_props}['iteration'] <= {$section_props}['total'];
-                 {$section_props}['index'] += {$section_props}['step'], {$section_props}['iteration']++):\n";
-        $output .= "{$section_props}['rownum'] = {$section_props}['iteration'];\n";
-        $output .= "{$section_props}['index_prev'] = {$section_props}['index'] - {$section_props}['step'];\n";
-        $output .= "{$section_props}['index_next'] = {$section_props}['index'] + {$section_props}['step'];\n";
-        $output .= "{$section_props}['first']      = ({$section_props}['iteration'] == 1);\n";
-        $output .= "{$section_props}['last']       = ({$section_props}['iteration'] == {$section_props}['total']);\n";
-
-        $output .= "?>";
-
-        return $output;
-    }
-
-
-    /**
-     * Compile {foreach ...} tag.
-     *
-     * @param string $tag_args
-     * @return string
-     */
-    function _compile_foreach_start($tag_args)
-    {
-        $attrs = $this->_parse_attrs($tag_args);
-        $arg_list = array();
-
-        if (empty($attrs['from'])) {
-            return $this->_syntax_error("foreach: missing 'from' attribute", E_USER_ERROR, __FILE__, __LINE__);
-        }
-        $from = $attrs['from'];
-
-        if (empty($attrs['item'])) {
-            return $this->_syntax_error("foreach: missing 'item' attribute", E_USER_ERROR, __FILE__, __LINE__);
-        }
-        $item = $this->_dequote($attrs['item']);
-        if (!preg_match('~^\w+$~', $item)) {
-            return $this->_syntax_error("'foreach: item' must be a variable name (literal string)", E_USER_ERROR, __FILE__, __LINE__);
-        }
-
-        if (isset($attrs['key'])) {
-            $key  = $this->_dequote($attrs['key']);
-            if (!preg_match('~^\w+$~', $key)) {
-                return $this->_syntax_error("foreach: 'key' must to be a variable name (literal string)", E_USER_ERROR, __FILE__, __LINE__);
-            }
-            $key_part = "\$this->_tpl_vars['$key'] => ";
-        } else {
-            $key = null;
-            $key_part = '';
-        }
-
-        if (isset($attrs['name'])) {
-            $name = $attrs['name'];
-        } else {
-            $name = null;
-        }
-
-        $output = '<?php ';
-        if (isset($name)) {
-            $foreach_props = "\$this->_foreach[$name]";
-            $output .= "if (isset(\$this->_foreach[$name])) unset(\$this->_foreach[$name]);\n";
-            $output .= "{$foreach_props}['total'] = count(\$_from = (array)$from);\n";
-            $output .= "{$foreach_props}['show'] = {$foreach_props}['total'] > 0;\n";
-            $output .= "if ({$foreach_props}['show']):\n";
-            $output .= "{$foreach_props}['iteration'] = 0;\n";
-            $output .= "    foreach (\$_from as $key_part\$this->_tpl_vars['$item']):\n";
-            $output .= "        {$foreach_props}['iteration']++;\n";
-            $output .= "        {$foreach_props}['first'] = ({$foreach_props}['iteration'] == 1);\n";
-            $output .= "        {$foreach_props}['last']  = ({$foreach_props}['iteration'] == {$foreach_props}['total']);\n";
-        } else {
-            $output .= "if (count(\$_from = (array)$from)):\n";
-            $output .= "    foreach (\$_from as $key_part\$this->_tpl_vars['$item']):\n";
-        }
-        $output .= '?>';
-
-        return $output;
-    }
-
-
-    /**
-     * Compile {capture} .. {/capture} tags
-     *
-     * @param boolean $start true if this is the {capture} tag
-     * @param string $tag_args
-     * @return string
-     */
-
-    function _compile_capture_tag($start, $tag_args = '')
-    {
-        $attrs = $this->_parse_attrs($tag_args);
-
-        if ($start) {
-            if (isset($attrs['name']))
-                $buffer = $attrs['name'];
-            else
-                $buffer = "'default'";
-
-            if (isset($attrs['assign']))
-                $assign = $attrs['assign'];
-            else
-                $assign = null;
-            $output = "<?php ob_start(); ?>";
-            $this->_capture_stack[] = array($buffer, $assign);
-        } else {
-            list($buffer, $assign) = array_pop($this->_capture_stack);
-            $output = "<?php \$this->_smarty_vars['capture'][$buffer] = ob_get_contents(); ";
-            if (isset($assign)) {
-                $output .= " \$this->assign($assign, ob_get_contents());";
-            }
-            $output .= "ob_end_clean(); ?>";
-        }
-
-        return $output;
-    }
-
-    /**
-     * Compile {if ...} tag
-     *
-     * @param string $tag_args
-     * @param boolean $elseif if true, uses elseif instead of if
-     * @return string
-     */
-    function _compile_if_tag($tag_args, $elseif = false)
-    {
-
-        /* Tokenize args for 'if' tag. */
-        preg_match_all('~(?>
-                ' . $this->_obj_call_regexp . '(?:' . $this->_mod_regexp . '*)? | # valid object call
-                ' . $this->_var_regexp . '(?:' . $this->_mod_regexp . '*)?    | # var or quoted string
-                \-?0[xX][0-9a-fA-F]+|\-?\d+(?:\.\d+)?|\.\d+|!==|===|==|!=|<>|<<|>>|<=|>=|\&\&|\|\||\(|\)|,|\!|\^|=|\&|\~|<|>|\||\%|\+|\-|\/|\*|\@    | # valid non-word token
-                \b\w+\b                                                        | # valid word token
-                \S+                                                           # anything else
-                )~x', $tag_args, $match);
-
-        $tokens = $match[0];
-
-        // make sure we have balanced parenthesis
-        $token_count = array_count_values($tokens);
-        if(isset($token_count['(']) && $token_count['('] != $token_count[')']) {
-            $this->_syntax_error("unbalanced parenthesis in if statement", E_USER_ERROR, __FILE__, __LINE__);
-        }
-
-        $is_arg_stack = array();
-
-        for ($i = 0; $i < count($tokens); $i++) {
-
-            $token = &$tokens[$i];
-
-            switch (strtolower($token)) {
-                case '!':
-                case '%':
-                case '!==':
-                case '==':
-                case '===':
-                case '>':
-                case '<':
-                case '!=':
-                case '<>':
-                case '<<':
-                case '>>':
-                case '<=':
-                case '>=':
-                case '&&':
-                case '||':
-                case '|':
-                case '^':
-                case '&':
-                case '~':
-                case ')':
-                case ',':
-                case '+':
-                case '-':
-                case '*':
-                case '/':
-                case '@':
-                    break;
-
-                case 'eq':
-                    $token = '==';
-                    break;
-
-                case 'ne':
-                case 'neq':
-                    $token = '!=';
-                    break;
-
-                case 'lt':
-                    $token = '<';
-                    break;
-
-                case 'le':
-                case 'lte':
-                    $token = '<=';
-                    break;
-
-                case 'gt':
-                    $token = '>';
-                    break;
-
-                case 'ge':
-                case 'gte':
-                    $token = '>=';
-                    break;
-
-                case 'and':
-                    $token = '&&';
-                    break;
-
-                case 'or':
-                    $token = '||';
-                    break;
-
-                case 'not':
-                    $token = '!';
-                    break;
-
-                case 'mod':
-                    $token = '%';
-                    break;
-
-                case '(':
-                    array_push($is_arg_stack, $i);
-                    break;
-
-                case 'is':
-                    /* If last token was a ')', we operate on the parenthesized
-                       expression. The start of the expression is on the stack.
-                       Otherwise, we operate on the last encountered token. */
-                    if ($tokens[$i-1] == ')')
-                        $is_arg_start = array_pop($is_arg_stack);
-                    else
-                        $is_arg_start = $i-1;
-                    /* Construct the argument for 'is' expression, so it knows
-                       what to operate on. */
-                    $is_arg = implode(' ', array_slice($tokens, $is_arg_start, $i - $is_arg_start));
-
-                    /* Pass all tokens from next one until the end to the
-                       'is' expression parsing function. The function will
-                       return modified tokens, where the first one is the result
-                       of the 'is' expression and the rest are the tokens it
-                       didn't touch. */
-                    $new_tokens = $this->_parse_is_expr($is_arg, array_slice($tokens, $i+1));
-
-                    /* Replace the old tokens with the new ones. */
-                    array_splice($tokens, $is_arg_start, count($tokens), $new_tokens);
-
-                    /* Adjust argument start so that it won't change from the
-                       current position for the next iteration. */
-                    $i = $is_arg_start;
-                    break;
-
-                default:
-                    if(preg_match('~^' . $this->_func_regexp . '$~', $token) ) {
-                            // function call
-                            if($this->security &&
-                               !in_array($token, $this->security_settings['IF_FUNCS'])) {
-                                $this->_syntax_error("(secure mode) '$token' not allowed in if statement", E_USER_ERROR, __FILE__, __LINE__);
-                            }
-                    } elseif(preg_match('~^' . $this->_obj_call_regexp . '|' . $this->_var_regexp . '(?:' . $this->_mod_regexp . '*)$~', $token)) {
-                        // object or variable
-                        $token = $this->_parse_var_props($token);
-                    } elseif(is_numeric($token)) {
-                        // number, skip it
-                    } else {
-                        $this->_syntax_error("unidentified token '$token'", E_USER_ERROR, __FILE__, __LINE__);
-                    }
-                    break;
-            }
-        }
-
-        if ($elseif)
-            return '<?php elseif ('.implode(' ', $tokens).'): ?>';
-        else
-            return '<?php if ('.implode(' ', $tokens).'): ?>';
-    }
-
-
-    function _compile_arg_list($type, $name, $attrs, &$cache_code) {
-        $arg_list = array();
-
-        if (isset($type) && isset($name)
-            && isset($this->_plugins[$type])
-            && isset($this->_plugins[$type][$name])
-            && empty($this->_plugins[$type][$name][4])
-            && is_array($this->_plugins[$type][$name][5])
-            ) {
-            /* we have a list of parameters that should be cached */
-            $_cache_attrs = $this->_plugins[$type][$name][5];
-            $_count = $this->_cache_attrs_count++;
-            $cache_code = "\$_cache_attrs =& \$this->_smarty_cache_attrs('$this->_cache_serial','$_count');";
-
-        } else {
-            /* no parameters are cached */
-            $_cache_attrs = null;
-        }
-
-        foreach ($attrs as $arg_name => $arg_value) {
-            if (is_bool($arg_value))
-                $arg_value = $arg_value ? 'true' : 'false';
-            if (is_null($arg_value))
-                $arg_value = 'null';
-            if ($_cache_attrs && in_array($arg_name, $_cache_attrs)) {
-                $arg_list[] = "'$arg_name' => (\$this->_cache_including) ? \$_cache_attrs['$arg_name'] : (\$_cache_attrs['$arg_name']=$arg_value)";
-            } else {
-                $arg_list[] = "'$arg_name' => $arg_value";
-            }
-        }
-        return $arg_list;
-    }
-
-    /**
-     * Parse is expression
-     *
-     * @param string $is_arg
-     * @param array $tokens
-     * @return array
-     */
-    function _parse_is_expr($is_arg, $tokens)
-    {
-        $expr_end = 0;
-        $negate_expr = false;
-
-        if (($first_token = array_shift($tokens)) == 'not') {
-            $negate_expr = true;
-            $expr_type = array_shift($tokens);
-        } else
-            $expr_type = $first_token;
-
-        switch ($expr_type) {
-            case 'even':
-                if (isset($tokens[$expr_end]) && $tokens[$expr_end] == 'by') {
-                    $expr_end++;
-                    $expr_arg = $tokens[$expr_end++];
-                    $expr = "!(1 & ($is_arg / " . $this->_parse_var_props($expr_arg) . "))";
-                } else
-                    $expr = "!(1 & $is_arg)";
-                break;
-
-            case 'odd':
-                if (isset($tokens[$expr_end]) && $tokens[$expr_end] == 'by') {
-                    $expr_end++;
-                    $expr_arg = $tokens[$expr_end++];
-                    $expr = "(1 & ($is_arg / " . $this->_parse_var_props($expr_arg) . "))";
-                } else
-                    $expr = "(1 & $is_arg)";
-                break;
-
-            case 'div':
-                if (@$tokens[$expr_end] == 'by') {
-                    $expr_end++;
-                    $expr_arg = $tokens[$expr_end++];
-                    $expr = "!($is_arg % " . $this->_parse_var_props($expr_arg) . ")";
-                } else {
-                    $this->_syntax_error("expecting 'by' after 'div'", E_USER_ERROR, __FILE__, __LINE__);
-                }
-                break;
-
-            default:
-                $this->_syntax_error("unknown 'is' expression - '$expr_type'", E_USER_ERROR, __FILE__, __LINE__);
-                break;
-        }
-
-        if ($negate_expr) {
-            $expr = "!($expr)";
-        }
-
-        array_splice($tokens, 0, $expr_end, $expr);
-
-        return $tokens;
-    }
-
-
-    /**
-     * Parse attribute string
-     *
-     * @param string $tag_args
-     * @return array
-     */
-    function _parse_attrs($tag_args)
-    {
-
-        /* Tokenize tag attributes. */
-        preg_match_all('~(?:' . $this->_obj_call_regexp . '|' . $this->_qstr_regexp . ' | (?>[^"\'=\s]+)
-                         )+ |
-                         [=]
-                        ~x', $tag_args, $match);
-        $tokens       = $match[0];
-
-        $attrs = array();
-        /* Parse state:
-            0 - expecting attribute name
-            1 - expecting '='
-            2 - expecting attribute value (not '=') */
-        $state = 0;
-
-        foreach ($tokens as $token) {
-            switch ($state) {
-                case 0:
-                    /* If the token is a valid identifier, we set attribute name
-                       and go to state 1. */
-                    if (preg_match('~^\w+$~', $token)) {
-                        $attr_name = $token;
-                        $state = 1;
-                    } else
-                        $this->_syntax_error("invalid attribute name: '$token'", E_USER_ERROR, __FILE__, __LINE__);
-                    break;
-
-                case 1:
-                    /* If the token is '=', then we go to state 2. */
-                    if ($token == '=') {
-                        $state = 2;
-                    } else
-                        $this->_syntax_error("expecting '=' after attribute name '$last_token'", E_USER_ERROR, __FILE__, __LINE__);
-                    break;
-
-                case 2:
-                    /* If token is not '=', we set the attribute value and go to
-                       state 0. */
-                    if ($token != '=') {
-                        /* We booleanize the token if it's a non-quoted possible
-                           boolean value. */
-                        if (preg_match('~^(on|yes|true)$~', $token)) {
-                            $token = 'true';
-                        } else if (preg_match('~^(off|no|false)$~', $token)) {
-                            $token = 'false';
-                        } else if ($token == 'null') {
-                            $token = 'null';
-                        } else if (preg_match('~^-?([0-9]+|0[xX][0-9a-fA-F]+)$~', $token)) {
-                            /* treat integer literally */
-                        } else if (!preg_match('~^' . $this->_obj_call_regexp . '|' . $this->_var_regexp . '(?:' . $this->_mod_regexp . ')*$~', $token)) {
-                            /* treat as a string, double-quote it escaping quotes */
-                            $token = '"'.addslashes($token).'"';
-                        }
-
-                        $attrs[$attr_name] = $token;
-                        $state = 0;
-                    } else
-                        $this->_syntax_error("'=' cannot be an attribute value", E_USER_ERROR, __FILE__, __LINE__);
-                    break;
-            }
-            $last_token = $token;
-        }
-
-        if($state != 0) {
-            if($state == 1) {
-                $this->_syntax_error("expecting '=' after attribute name '$last_token'", E_USER_ERROR, __FILE__, __LINE__);
-            } else {
-                $this->_syntax_error("missing attribute value", E_USER_ERROR, __FILE__, __LINE__);
-            }
-        }
-
-        $this->_parse_vars_props($attrs);
-
-        return $attrs;
-    }
-
-    /**
-     * compile multiple variables and section properties tokens into
-     * PHP code
-     *
-     * @param array $tokens
-     */
-    function _parse_vars_props(&$tokens)
-    {
-        foreach($tokens as $key => $val) {
-            $tokens[$key] = $this->_parse_var_props($val);
-        }
-    }
-
-    /**
-     * compile single variable and section properties token into
-     * PHP code
-     *
-     * @param string $val
-     * @param string $tag_attrs
-     * @return string
-     */
-    function _parse_var_props($val)
-    {
-        $val = trim($val);
-
-        if(preg_match('~^(' . $this->_obj_call_regexp . '|' . $this->_dvar_regexp . ')(' . $this->_mod_regexp . '*)$~', $val, $match)) {
-            // $ variable or object
-            $return = $this->_parse_var($match[1]);
-            $modifiers = $match[2];
-            if (!empty($this->default_modifiers) && !preg_match('~(^|\|)smarty:nodefaults($|\|)~',$modifiers)) {
-                $_default_mod_string = implode('|',(array)$this->default_modifiers);
-                $modifiers = empty($modifiers) ? $_default_mod_string : $_default_mod_string . '|' . $modifiers;
-            }
-            $this->_parse_modifiers($return, $modifiers);
-            return $return;
-        } elseif (preg_match('~^' . $this->_db_qstr_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
-                // double quoted text
-                preg_match('~^(' . $this->_db_qstr_regexp . ')('. $this->_mod_regexp . '*)$~', $val, $match);
-                $return = $this->_expand_quoted_text($match[1]);
-                if($match[2] != '') {
-                    $this->_parse_modifiers($return, $match[2]);
-                }
-                return $return;
-            }
-        elseif(preg_match('~^' . $this->_num_const_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
-                // numerical constant
-                preg_match('~^(' . $this->_num_const_regexp . ')('. $this->_mod_regexp . '*)$~', $val, $match);
-                if($match[2] != '') {
-                    $this->_parse_modifiers($match[1], $match[2]);
-                    return $match[1];
-                }
-            }
-        elseif(preg_match('~^' . $this->_si_qstr_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
-                // single quoted text
-                preg_match('~^(' . $this->_si_qstr_regexp . ')('. $this->_mod_regexp . '*)$~', $val, $match);
-                if($match[2] != '') {
-                    $this->_parse_modifiers($match[1], $match[2]);
-                    return $match[1];
-                }
-            }
-        elseif(preg_match('~^' . $this->_cvar_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
-                // config var
-                return $this->_parse_conf_var($val);
-            }
-        elseif(preg_match('~^' . $this->_svar_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
-                // section var
-                return $this->_parse_section_prop($val);
-            }
-        elseif(!in_array($val, $this->_permitted_tokens) && !is_numeric($val)) {
-            // literal string
-            return $this->_expand_quoted_text('"' . $val .'"');
-        }
-        return $val;
-    }
-
-    /**
-     * expand quoted text with embedded variables
-     *
-     * @param string $var_expr
-     * @return string
-     */
-    function _expand_quoted_text($var_expr)
-    {
-        // if contains unescaped $, expand it
-        if(preg_match_all('~(?:\`(?<!\\\\)\$' . $this->_dvar_guts_regexp . '\`)|(?:(?<!\\\\)\$\w+(\[[a-zA-Z0-9]+\])*)~', $var_expr, $_match)) {
-            $_match = $_match[0];
-            rsort($_match);
-            reset($_match);
-            foreach($_match as $_var) {
-                $var_expr = str_replace ($_var, '".(' . $this->_parse_var(str_replace('`','',$_var)) . ')."', $var_expr);
-            }
-            $_return = preg_replace('~\.""|(?<!\\\\)""\.~', '', $var_expr);
-        } else {
-            $_return = $var_expr;
-        }
-        // replace double quoted literal string with single quotes
-        $_return = preg_replace('~^"([\s\w]+)"$~',"'\\1'",$_return);
-        return $_return;
-    }
-
-    /**
-     * parse variable expression into PHP code
-     *
-     * @param string $var_expr
-     * @param string $output
-     * @return string
-     */
-    function _parse_var($var_expr)
-    {
-        $_has_math = false;
-        $_math_vars = preg_split('~('.$this->_dvar_math_regexp.'|'.$this->_qstr_regexp.')~', $var_expr, -1, PREG_SPLIT_DELIM_CAPTURE);
-
-        if(count($_math_vars) > 1) {
-            $_first_var = "";
-            $_complete_var = "";
-            $_output = "";
-            // simple check if there is any math, to stop recursion (due to modifiers with "xx % yy" as parameter)
-            foreach($_math_vars as $_k => $_math_var) {
-                $_math_var = $_math_vars[$_k];
-
-                if(!empty($_math_var) || is_numeric($_math_var)) {
-                    // hit a math operator, so process the stuff which came before it
-                    if(preg_match('~^' . $this->_dvar_math_regexp . '$~', $_math_var)) {
-                        $_has_math = true;
-                        if(!empty($_complete_var) || is_numeric($_complete_var)) {
-                            $_output .= $this->_parse_var($_complete_var);
-                        }
-
-                        // just output the math operator to php
-                        $_output .= $_math_var;
-
-                        if(empty($_first_var))
-                            $_first_var = $_complete_var;
-
-                        $_complete_var = "";
-                    } else {
-                        $_complete_var .= $_math_var;
-                    }
-                }
-            }
-            if($_has_math) {
-                if(!empty($_complete_var) || is_numeric($_complete_var))
-                    $_output .= $this->_parse_var($_complete_var);
-
-                // get the modifiers working (only the last var from math + modifier is left)
-                $var_expr = $_complete_var;
-            }
-        }
-
-        // prevent cutting of first digit in the number (we _definitly_ got a number if the first char is a digit)
-        if(is_numeric($var_expr{0}))
-            $_var_ref = $var_expr;
-        else
-            $_var_ref = substr($var_expr, 1);
-        
-        if(!$_has_math) {
-            
-            // get [foo] and .foo and ->foo and (...) pieces
-            preg_match_all('~(?:^\w+)|' . $this->_obj_params_regexp . '|(?:' . $this->_var_bracket_regexp . ')|->\$?\w+|\.\$?\w+|\S+~', $_var_ref, $match);
-                        
-            $_indexes = $match[0];
-            $_var_name = array_shift($_indexes);
-
-            /* Handle $smarty.* variable references as a special case. */
-            if ($_var_name == 'smarty') {
-                /*
-                 * If the reference could be compiled, use the compiled output;
-                 * otherwise, fall back on the $smarty variable generated at
-                 * run-time.
-                 */
-                if (($smarty_ref = $this->_compile_smarty_ref($_indexes)) !== null) {
-                    $_output = $smarty_ref;
-                } else {
-                    $_var_name = substr(array_shift($_indexes), 1);
-                    $_output = "\$this->_smarty_vars['$_var_name']";
-                }
-            } elseif(is_numeric($_var_name) && is_numeric($var_expr{0})) {
-                // because . is the operator for accessing arrays thru inidizes we need to put it together again for floating point numbers
-                if(count($_indexes) > 0)
-                {
-                    $_var_name .= implode("", $_indexes);
-                    $_indexes = array();
-                }
-                $_output = $_var_name;
-            } else {
-                $_output = "\$this->_tpl_vars['$_var_name']";
-            }
-
-            foreach ($_indexes as $_index) {
-                if ($_index{0} == '[') {
-                    $_index = substr($_index, 1, -1);
-                    if (is_numeric($_index)) {
-                        $_output .= "[$_index]";
-                    } elseif ($_index{0} == '$') {
-                        if (strpos($_index, '.') !== false) {
-                            $_output .= '[' . $this->_parse_var($_index) . ']';
-                        } else {
-                            $_output .= "[\$this->_tpl_vars['" . substr($_index, 1) . "']]";
-                        }
-                    } else {
-                        $_var_parts = explode('.', $_index);
-                        $_var_section = $_var_parts[0];
-                        $_var_section_prop = isset($_var_parts[1]) ? $_var_parts[1] : 'index';
-                        $_output .= "[\$this->_sections['$_var_section']['$_var_section_prop']]";
-                    }
-                } else if ($_index{0} == '.') {
-                    if ($_index{1} == '$')
-                        $_output .= "[\$this->_tpl_vars['" . substr($_index, 2) . "']]";
-                    else
-                        $_output .= "['" . substr($_index, 1) . "']";
-                } else if (substr($_index,0,2) == '->') {
-                    if(substr($_index,2,2) == '__') {
-                        $this->_syntax_error('call to internal object members is not allowed', E_USER_ERROR, __FILE__, __LINE__);
-                    } elseif($this->security && substr($_index, 2, 1) == '_') {
-                        $this->_syntax_error('(secure) call to private object member is not allowed', E_USER_ERROR, __FILE__, __LINE__);
-                    } elseif ($_index{2} == '$') {
-                        if ($this->security) {
-                            $this->_syntax_error('(secure) call to dynamic object member is not allowed', E_USER_ERROR, __FILE__, __LINE__);
-                        } else {
-                            $_output .= '->{(($_var=$this->_tpl_vars[\''.substr($_index,3).'\']) && substr($_var,0,2)!=\'__\') ? $_var : $this->trigger_error("cannot access property \\"$_var\\"")}';
-                        }
-                    } else {
-                        $_output .= $_index;
-                    }
-                } elseif ($_index{0} == '(') {
-                    $_index = $this->_parse_parenth_args($_index);
-                    $_output .= $_index;
-                } else {
-                    $_output .= $_index;
-                }
-            }
-        }
-
-        return $_output;
-    }
-
-    /**
-     * parse arguments in function call parenthesis
-     *
-     * @param string $parenth_args
-     * @return string
-     */
-    function _parse_parenth_args($parenth_args)
-    {
-        preg_match_all('~' . $this->_param_regexp . '~',$parenth_args, $match);
-        $orig_vals = $match = $match[0];
-        $this->_parse_vars_props($match);
-        $replace = array();
-        for ($i = 0, $count = count($match); $i < $count; $i++) {
-            $replace[$orig_vals[$i]] = $match[$i];
-        }
-        return strtr($parenth_args, $replace);
-    }
-
-    /**
-     * parse configuration variable expression into PHP code
-     *
-     * @param string $conf_var_expr
-     */
-    function _parse_conf_var($conf_var_expr)
-    {
-        $parts = explode('|', $conf_var_expr, 2);
-        $var_ref = $parts[0];
-        $modifiers = isset($parts[1]) ? $parts[1] : '';
-
-        $var_name = substr($var_ref, 1, -1);
-
-        $output = "\$this->_config[0]['vars']['$var_name']";
-
-        $this->_parse_modifiers($output, $modifiers);
-
-        return $output;
-    }
-
-    /**
-     * parse section property expression into PHP code
-     *
-     * @param string $section_prop_expr
-     * @return string
-     */
-    function _parse_section_prop($section_prop_expr)
-    {
-        $parts = explode('|', $section_prop_expr, 2);
-        $var_ref = $parts[0];
-        $modifiers = isset($parts[1]) ? $parts[1] : '';
-
-        preg_match('!%(\w+)\.(\w+)%!', $var_ref, $match);
-        $section_name = $match[1];
-        $prop_name = $match[2];
-
-        $output = "\$this->_sections['$section_name']['$prop_name']";
-
-        $this->_parse_modifiers($output, $modifiers);
-
-        return $output;
-    }
-
-
-    /**
-     * parse modifier chain into PHP code
-     *
-     * sets $output to parsed modified chain
-     * @param string $output
-     * @param string $modifier_string
-     */
-    function _parse_modifiers(&$output, $modifier_string)
-    {
-        preg_match_all('~\|(@?\w+)((?>:(?:'. $this->_qstr_regexp . '|[^|]+))*)~', '|' . $modifier_string, $_match);
-        list(, $_modifiers, $modifier_arg_strings) = $_match;
-
-        for ($_i = 0, $_for_max = count($_modifiers); $_i < $_for_max; $_i++) {
-            $_modifier_name = $_modifiers[$_i];
-
-            if($_modifier_name == 'smarty') {
-                // skip smarty modifier
-                continue;
-            }
-
-            preg_match_all('~:(' . $this->_qstr_regexp . '|[^:]+)~', $modifier_arg_strings[$_i], $_match);
-            $_modifier_args = $_match[1];
-
-            if ($_modifier_name{0} == '@') {
-                $_map_array = false;
-                $_modifier_name = substr($_modifier_name, 1);
-            } else {
-                $_map_array = true;
-            }
-
-            if (empty($this->_plugins['modifier'][$_modifier_name])
-                && !$this->_get_plugin_filepath('modifier', $_modifier_name)
-                && function_exists($_modifier_name)) {
-                if ($this->security && !in_array($_modifier_name, $this->security_settings['MODIFIER_FUNCS'])) {
-                    $this->_trigger_fatal_error("[plugin] (secure mode) modifier '$_modifier_name' is not allowed" , $this->_current_file, $this->_current_line_no, __FILE__, __LINE__);
-                } else {
-                    $this->_plugins['modifier'][$_modifier_name] = array($_modifier_name,  null, null, false);
-                }
-            }
-            $this->_add_plugin('modifier', $_modifier_name);
-
-            $this->_parse_vars_props($_modifier_args);
-
-            if($_modifier_name == 'default') {
-                // supress notifications of default modifier vars and args
-                if($output{0} == '$') {
-                    $output = '@' . $output;
-                }
-                if(isset($_modifier_args[0]) && $_modifier_args[0]{0} == '$') {
-                    $_modifier_args[0] = '@' . $_modifier_args[0];
-                }
-            }
-            if (count($_modifier_args) > 0)
-                $_modifier_args = ', '.implode(', ', $_modifier_args);
-            else
-                $_modifier_args = '';
-
-            if ($_map_array) {
-                $output = "((is_array(\$_tmp=$output)) ? \$this->_run_mod_handler('$_modifier_name', true, \$_tmp$_modifier_args) : " . $this->_compile_plugin_call('modifier', $_modifier_name) . "(\$_tmp$_modifier_args))";
-
-            } else {
-
-                $output = $this->_compile_plugin_call('modifier', $_modifier_name)."($output$_modifier_args)";
-
-            }
-        }
-    }
-
-
-    /**
-     * add plugin
-     *
-     * @param string $type
-     * @param string $name
-     * @param boolean? $delayed_loading
-     */
-    function _add_plugin($type, $name, $delayed_loading = null)
-    {
-        if (!isset($this->_plugin_info[$type])) {
-            $this->_plugin_info[$type] = array();
-        }
-        if (!isset($this->_plugin_info[$type][$name])) {
-            $this->_plugin_info[$type][$name] = array($this->_current_file,
-                                                      $this->_current_line_no,
-                                                      $delayed_loading);
-        }
-    }
-
-
-    /**
-     * Compiles references of type $smarty.foo
-     *
-     * @param string $indexes
-     * @return string
-     */
-    function _compile_smarty_ref(&$indexes)
-    {
-        /* Extract the reference name. */
-        $_ref = substr($indexes[0], 1);
-        foreach($indexes as $_index_no=>$_index) {
-            if ($_index{0} != '.' && $_index_no<2 || !preg_match('~^(\.|\[|->)~', $_index)) {
-                $this->_syntax_error('$smarty' . implode('', array_slice($indexes, 0, 2)) . ' is an invalid reference', E_USER_ERROR, __FILE__, __LINE__);
-            }
-        }
-
-        switch ($_ref) {
-            case 'now':
-                $compiled_ref = 'time()';
-                $_max_index = 1;
-                break;
-
-            case 'foreach':
-            case 'section':
-                array_shift($indexes);
-                $_var = $this->_parse_var_props(substr($indexes[0], 1));
-                if ($_ref == 'foreach')
-                    $compiled_ref = "\$this->_foreach[$_var]";
-                else
-                    $compiled_ref = "\$this->_sections[$_var]";
-                break;
-
-            case 'get':
-                $compiled_ref = ($this->request_use_auto_globals) ? '$_GET' : "\$GLOBALS['HTTP_GET_VARS']";
-                break;
-
-            case 'post':
-                $compiled_ref = ($this->request_use_auto_globals) ? '$_POST' : "\$GLOBALS['HTTP_POST_VARS']";
-                break;
-
-            case 'cookies':
-                $compiled_ref = ($this->request_use_auto_globals) ? '$_COOKIE' : "\$GLOBALS['HTTP_COOKIE_VARS']";
-                break;
-
-            case 'env':
-                $compiled_ref = ($this->request_use_auto_globals) ? '$_ENV' : "\$GLOBALS['HTTP_ENV_VARS']";
-                break;
-
-            case 'server':
-                $compiled_ref = ($this->request_use_auto_globals) ? '$_SERVER' : "\$GLOBALS['HTTP_SERVER_VARS']";
-                break;
-
-            case 'session':
-                $compiled_ref = ($this->request_use_auto_globals) ? '$_SESSION' : "\$GLOBALS['HTTP_SESSION_VARS']";
-                break;
-
-            /*
-             * These cases are handled either at run-time or elsewhere in the
-             * compiler.
-             */
-            case 'request':
-                if ($this->request_use_auto_globals) {
-                    $compiled_ref = '$_REQUEST';
-                    break;
-                } else {
-                    $this->_init_smarty_vars = true;
-                }
-                return null;
-
-            case 'capture':
-                return null;
-
-            case 'template':
-                $compiled_ref = "'$this->_current_file'";
-                $_max_index = 1;
-                break;
-
-            case 'version':
-                $compiled_ref = "'$this->_version'";
-                $_max_index = 1;
-                break;
-
-            case 'const':
-                if ($this->security && !$this->security_settings['ALLOW_CONSTANTS']) {
-                    $this->_syntax_error("(secure mode) constants not permitted",
-                                         E_USER_WARNING, __FILE__, __LINE__);
-                    return;
-                }
-                array_shift($indexes);
-                $_val = $this->_parse_var_props(substr($indexes[0],1));
-                $compiled_ref = '@constant(' . $_val . ')';
-                $_max_index = 1;
-                break;
-
-            case 'config':
-                $compiled_ref = "\$this->_config[0]['vars']";
-                $_max_index = 3;
-                break;
-
-            case 'ldelim':
-                $compiled_ref = "'$this->left_delimiter'";
-                break;
-
-            case 'rdelim':
-                $compiled_ref = "'$this->right_delimiter'";
-                break;
-                
-            default:
-                $this->_syntax_error('$smarty.' . $_ref . ' is an unknown reference', E_USER_ERROR, __FILE__, __LINE__);
-                break;
-        }
-
-        if (isset($_max_index) && count($indexes) > $_max_index) {
-            $this->_syntax_error('$smarty' . implode('', $indexes) .' is an invalid reference', E_USER_ERROR, __FILE__, __LINE__);
-        }
-
-        array_shift($indexes);
-        return $compiled_ref;
-    }
-
-    /**
-     * compiles call to plugin of type $type with name $name
-     * returns a string containing the function-name or method call
-     * without the paramter-list that would have follow to make the
-     * call valid php-syntax
-     *
-     * @param string $type
-     * @param string $name
-     * @return string
-     */
-    function _compile_plugin_call($type, $name) {
-        if (isset($this->_plugins[$type][$name])) {
-            /* plugin loaded */
-            if (is_array($this->_plugins[$type][$name][0])) {
-                return ((is_object($this->_plugins[$type][$name][0][0])) ?
-                        "\$this->_plugins['$type']['$name'][0][0]->"    /* method callback */
-                        : (string)($this->_plugins[$type][$name][0][0]).'::'    /* class callback */
-                       ). $this->_plugins[$type][$name][0][1];
-
-            } else {
-                /* function callback */
-                return $this->_plugins[$type][$name][0];
-
-            }
-        } else {
-            /* plugin not loaded -> auto-loadable-plugin */
-            return 'smarty_'.$type.'_'.$name;
-
-        }
-    }
-
-    /**
-     * load pre- and post-filters
-     */
-    function _load_filters()
-    {
-        if (count($this->_plugins['prefilter']) > 0) {
-            foreach ($this->_plugins['prefilter'] as $filter_name => $prefilter) {
-                if ($prefilter === false) {
-                    unset($this->_plugins['prefilter'][$filter_name]);
-                    $_params = array('plugins' => array(array('prefilter', $filter_name, null, null, false)));
-                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_plugins.php');
-                    smarty_core_load_plugins($_params, $this);
-                }
-            }
-        }
-        if (count($this->_plugins['postfilter']) > 0) {
-            foreach ($this->_plugins['postfilter'] as $filter_name => $postfilter) {
-                if ($postfilter === false) {
-                    unset($this->_plugins['postfilter'][$filter_name]);
-                    $_params = array('plugins' => array(array('postfilter', $filter_name, null, null, false)));
-                    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.load_plugins.php');
-                    smarty_core_load_plugins($_params, $this);
-                }
-            }
-        }
-    }
-
-
-    /**
-     * Quote subpattern references
-     *
-     * @param string $string
-     * @return string
-     */
-    function _quote_replace($string)
-    {
-        return strtr($string, array('\\' => '\\\\', '$' => '\\$'));
-    }
-
-    /**
-     * display Smarty syntax error
-     *
-     * @param string $error_msg
-     * @param integer $error_type
-     * @param string $file
-     * @param integer $line
-     */
-    function _syntax_error($error_msg, $error_type = E_USER_ERROR, $file=null, $line=null)
-    {
-        $this->_trigger_fatal_error("syntax error: $error_msg", $this->_current_file, $this->_current_line_no, $file, $line, $error_type);
-    }
-
-
-    /**
-     * check if the compilation changes from cacheable to
-     * non-cacheable state with the beginning of the current
-     * plugin. return php-code to reflect the transition.
-     * @return string
-     */
-    function _push_cacheable_state($type, $name) {
-        $_cacheable = !isset($this->_plugins[$type][$name]) || $this->_plugins[$type][$name][4];
-        if ($_cacheable
-            || 0<$this->_cacheable_state++) return '';
-        if (!isset($this->_cache_serial)) $this->_cache_serial = md5(uniqid('Smarty'));
-        $_ret = 'if ($this->caching) { echo \'{nocache:'
-            . $this->_cache_serial . '#' . $this->_nocache_count
-            . '}\';}';
-        return $_ret;
-    }
-
-
-    /**
-     * check if the compilation changes from non-cacheable to
-     * cacheable state with the end of the current plugin return
-     * php-code to reflect the transition.
-     * @return string
-     */
-    function _pop_cacheable_state($type, $name) {
-        $_cacheable = !isset($this->_plugins[$type][$name]) || $this->_plugins[$type][$name][4];
-        if ($_cacheable
-            || --$this->_cacheable_state>0) return '';
-        return 'if ($this->caching) { echo \'{/nocache:'
-            . $this->_cache_serial . '#' . ($this->_nocache_count++)
-            . '}\';}';
-    }
-
-
-    /**
-     * push opening tag-name, file-name and line-number on the tag-stack
-     * @param string the opening tag's name
-     */
-    function _push_tag($open_tag)
-    {
-        array_push($this->_tag_stack, array($open_tag, $this->_current_line_no));
-    }
-
-    /**
-     * pop closing tag-name
-     * raise an error if this stack-top doesn't match with the closing tag
-     * @param string the closing tag's name
-     * @return string the opening tag's name
-     */
-    function _pop_tag($close_tag)
-    {
-        $message = '';
-        if (count($this->_tag_stack)>0) {
-            list($_open_tag, $_line_no) = array_pop($this->_tag_stack);
-            if ($close_tag == $_open_tag) {
-                return $_open_tag;
-            }
-            if ($close_tag == 'if' && ($_open_tag == 'else' || $_open_tag == 'elseif' )) {
-                return $this->_pop_tag($close_tag);
-            }
-            if ($close_tag == 'section' && $_open_tag == 'sectionelse') {
-                $this->_pop_tag($close_tag);
-                return $_open_tag;
-            }
-            if ($close_tag == 'foreach' && $_open_tag == 'foreachelse') {
-                $this->_pop_tag($close_tag);
-                return $_open_tag;
-            }
-            if ($_open_tag == 'else' || $_open_tag == 'elseif') {
-                $_open_tag = 'if';
-            } elseif ($_open_tag == 'sectionelse') {
-                $_open_tag = 'section';
-            } elseif ($_open_tag == 'foreachelse') {
-                $_open_tag = 'foreach';
-            }
-            $message = " expected {/$_open_tag} (opened line $_line_no).";
-        }
-        $this->_syntax_error("mismatched tag {/$close_tag}.$message",
-                             E_USER_ERROR, __FILE__, __LINE__);
-    }
-
-}
-
-/**
- * compare to values by their string length
- *
- * @access private
- * @param string $a
- * @param string $b
- * @return 0|-1|1
- */
-function _smarty_sort_length($a, $b)
-{
-    if($a == $b)
-        return 0;
-
-    if(strlen($a) == strlen($b))
-        return ($a > $b) ? -1 : 1;
-
-    return (strlen($a) > strlen($b)) ? -1 : 1;
-}
-
-
-/* vim: set et: */
-
-?>
+<?php
+
+/**
+ * Project:     Smarty: the PHP compiling template engine
+ * File:        Smarty_Compiler.class.php
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ * @link http://smarty.php.net/
+ * @author Monte Ohrt <monte at ohrt dot com>
+ * @author Andrei Zmievski <andrei at php.net>
+ * @version 2.6.10
+ * @copyright 2001-2005 New Digital Group, Inc.
+ * @package Smarty
+ */
+
+/* $Id$ */
+
+/**
+ * Template compiling class
+ * @package Smarty
+ */
+class Smarty_Compiler extends Smarty {
+
+    // internal vars
+    /**#@+
+     * @access private
+     */
+    var $_folded_blocks         =   array();    // keeps folded template blocks
+    var $_current_file          =   null;       // the current template being compiled
+    var $_current_line_no       =   1;          // line number for error messages
+    var $_capture_stack         =   array();    // keeps track of nested capture buffers
+    var $_plugin_info           =   array();    // keeps track of plugins to load
+    var $_init_smarty_vars      =   false;
+    var $_permitted_tokens      =   array('true','false','yes','no','on','off','null');
+    var $_db_qstr_regexp        =   null;        // regexps are setup in the constructor
+    var $_si_qstr_regexp        =   null;
+    var $_qstr_regexp           =   null;
+    var $_func_regexp           =   null;
+    var $_reg_obj_regexp        =   null;
+    var $_var_bracket_regexp    =   null;
+    var $_num_const_regexp      =   null;
+    var $_dvar_guts_regexp      =   null;
+    var $_dvar_regexp           =   null;
+    var $_cvar_regexp           =   null;
+    var $_svar_regexp           =   null;
+    var $_avar_regexp           =   null;
+    var $_mod_regexp            =   null;
+    var $_var_regexp            =   null;
+    var $_parenth_param_regexp  =   null;
+    var $_func_call_regexp      =   null;
+    var $_obj_ext_regexp        =   null;
+    var $_obj_start_regexp      =   null;
+    var $_obj_params_regexp     =   null;
+    var $_obj_call_regexp       =   null;
+    var $_cacheable_state       =   0;
+    var $_cache_attrs_count     =   0;
+    var $_nocache_count         =   0;
+    var $_cache_serial          =   null;
+    var $_cache_include         =   null;
+
+    var $_strip_depth           =   0;
+    var $_additional_newline    =   "\n";
+
+    /**#@-*/
+    /**
+     * The class constructor.
+     */
+    function Smarty_Compiler()
+    {
+        // matches double quoted strings:
+        // "foobar"
+        // "foo\"bar"
+        $this->_db_qstr_regexp = '"[^"\\\\]*(?:\\\\.[^"\\\\]*)*"';
+
+        // matches single quoted strings:
+        // 'foobar'
+        // 'foo\'bar'
+        $this->_si_qstr_regexp = '\'[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*\'';
+
+        // matches single or double quoted strings
+        $this->_qstr_regexp = '(?:' . $this->_db_qstr_regexp . '|' . $this->_si_qstr_regexp . ')';
+
+        // matches bracket portion of vars
+        // [0]
+        // [foo]
+        // [$bar]
+        $this->_var_bracket_regexp = '\[\$?[\w\.]+\]';
+
+        // matches numerical constants
+        // 30
+        // -12
+        // 13.22
+        $this->_num_const_regexp = '(?:\-?\d+(?:\.\d+)?)';
+
+        // matches $ vars (not objects):
+        // $foo
+        // $foo.bar
+        // $foo.bar.foobar
+        // $foo[0]
+        // $foo[$bar]
+        // $foo[5][blah]
+        // $foo[5].bar[$foobar][4]
+        $this->_dvar_math_regexp = '(?:[\+\*\/\%]|(?:-(?!>)))';
+        $this->_dvar_math_var_regexp = '[\$\w\.\+\-\*\/\%\d\>\[\]]';
+        $this->_dvar_guts_regexp = '\w+(?:' . $this->_var_bracket_regexp
+                . ')*(?:\.\$?\w+(?:' . $this->_var_bracket_regexp . ')*)*(?:' . $this->_dvar_math_regexp . '(?:' . $this->_num_const_regexp . '|' . $this->_dvar_math_var_regexp . ')*)?';
+        $this->_dvar_regexp = '\$' . $this->_dvar_guts_regexp;
+
+        // matches config vars:
+        // #foo#
+        // #foobar123_foo#
+        $this->_cvar_regexp = '\#\w+\#';
+
+        // matches section vars:
+        // %foo.bar%
+        $this->_svar_regexp = '\%\w+\.\w+\%';
+
+        // matches all valid variables (no quotes, no modifiers)
+        $this->_avar_regexp = '(?:' . $this->_dvar_regexp . '|'
+           . $this->_cvar_regexp . '|' . $this->_svar_regexp . ')';
+
+        // matches valid variable syntax:
+        // $foo
+        // $foo
+        // #foo#
+        // #foo#
+        // "text"
+        // "text"
+        $this->_var_regexp = '(?:' . $this->_avar_regexp . '|' . $this->_qstr_regexp . ')';
+
+        // matches valid object call (one level of object nesting allowed in parameters):
+        // $foo->bar
+        // $foo->bar()
+        // $foo->bar("text")
+        // $foo->bar($foo, $bar, "text")
+        // $foo->bar($foo, "foo")
+        // $foo->bar->foo()
+        // $foo->bar->foo->bar()
+        // $foo->bar($foo->bar)
+        // $foo->bar($foo->bar())
+        // $foo->bar($foo->bar($blah,$foo,44,"foo",$foo[0].bar))
+        $this->_obj_ext_regexp = '\->(?:\$?' . $this->_dvar_guts_regexp . ')';
+        $this->_obj_restricted_param_regexp = '(?:'
+                . '(?:' . $this->_var_regexp . '|' . $this->_num_const_regexp . ')(?:' . $this->_obj_ext_regexp . '(?:\((?:(?:' . $this->_var_regexp . '|' . $this->_num_const_regexp . ')'
+                . '(?:\s*,\s*(?:' . $this->_var_regexp . '|' . $this->_num_const_regexp . '))*)?\))?)*)';
+        $this->_obj_single_param_regexp = '(?:\w+|' . $this->_obj_restricted_param_regexp . '(?:\s*,\s*(?:(?:\w+|'
+                . $this->_var_regexp . $this->_obj_restricted_param_regexp . ')))*)';
+        $this->_obj_params_regexp = '\((?:' . $this->_obj_single_param_regexp
+                . '(?:\s*,\s*' . $this->_obj_single_param_regexp . ')*)?\)';
+        $this->_obj_start_regexp = '(?:' . $this->_dvar_regexp . '(?:' . $this->_obj_ext_regexp . ')+)';
+        $this->_obj_call_regexp = '(?:' . $this->_obj_start_regexp . '(?:' . $this->_obj_params_regexp . ')?(?:' . $this->_dvar_math_regexp . '(?:' . $this->_num_const_regexp . '|' . $this->_dvar_math_var_regexp . ')*)?)';
+        
+        // matches valid modifier syntax:
+        // |foo
+        // |@foo
+        // |foo:"bar"
+        // |foo:$bar
+        // |foo:"bar":$foobar
+        // |foo|bar
+        // |foo:$foo->bar
+        $this->_mod_regexp = '(?:\|@?\w+(?::(?:\w+|' . $this->_num_const_regexp . '|'
+           . $this->_obj_call_regexp . '|' . $this->_avar_regexp . '|' . $this->_qstr_regexp .'))*)';
+
+        // matches valid function name:
+        // foo123
+        // _foo_bar
+        $this->_func_regexp = '[a-zA-Z_]\w*';
+
+        // matches valid registered object:
+        // foo->bar
+        $this->_reg_obj_regexp = '[a-zA-Z_]\w*->[a-zA-Z_]\w*';
+
+        // matches valid parameter values:
+        // true
+        // $foo
+        // $foo|bar
+        // #foo#
+        // #foo#|bar
+        // "text"
+        // "text"|bar
+        // $foo->bar
+        $this->_param_regexp = '(?:\s*(?:' . $this->_obj_call_regexp . '|'
+           . $this->_var_regexp . '|' . $this->_num_const_regexp  . '|\w+)(?>' . $this->_mod_regexp . '*)\s*)';
+
+        // matches valid parenthesised function parameters:
+        //
+        // "text"
+        //    $foo, $bar, "text"
+        // $foo|bar, "foo"|bar, $foo->bar($foo)|bar
+        $this->_parenth_param_regexp = '(?:\((?:\w+|'
+                . $this->_param_regexp . '(?:\s*,\s*(?:(?:\w+|'
+                . $this->_param_regexp . ')))*)?\))';
+
+        // matches valid function call:
+        // foo()
+        // foo_bar($foo)
+        // _foo_bar($foo,"bar")
+        // foo123($foo,$foo->bar(),"foo")
+        $this->_func_call_regexp = '(?:' . $this->_func_regexp . '\s*(?:'
+           . $this->_parenth_param_regexp . '))';
+    }
+
+    /**
+     * compile a resource
+     *
+     * sets $compiled_content to the compiled source
+     * @param string $resource_name
+     * @param string $source_content
+     * @param string $compiled_content
+     * @return true
+     */
+    function _compile_file($resource_name, $source_content, &$compiled_content)
+    {
+
+        if ($this->security) {
+            // do not allow php syntax to be executed unless specified
+            if ($this->php_handling == SMARTY_PHP_ALLOW &&
+                !$this->security_settings['PHP_HANDLING']) {
+                $this->php_handling = SMARTY_PHP_PASSTHRU;
+            }
+        }
+
+        $this->_load_filters();
+
+        $this->_current_file = $resource_name;
+        $this->_current_line_no = 1;
+        $ldq = preg_quote($this->left_delimiter, '~');
+        $rdq = preg_quote($this->right_delimiter, '~');
+
+        // run template source through prefilter functions
+        if (count($this->_plugins['prefilter']) > 0) {
+            foreach ($this->_plugins['prefilter'] as $filter_name => $prefilter) {
+                if ($prefilter === false) continue;
+                if ($prefilter[3] || is_callable($prefilter[0])) {
+                    $source_content = call_user_func_array($prefilter[0],
+                                                            array($source_content, &$this));
+                    $this->_plugins['prefilter'][$filter_name][3] = true;
+                } else {
+                    $this->_trigger_fatal_error("[plugin] prefilter '$filter_name' is not implemented");
+                }
+            }
+        }
+
+        /* fetch all special blocks */
+        $search = "~{$ldq}\*(.*?)\*{$rdq}|{$ldq}\s*literal\s*{$rdq}(.*?){$ldq}\s*/literal\s*{$rdq}|{$ldq}\s*php\s*{$rdq}(.*?){$ldq}\s*/php\s*{$rdq}~s";
+
+        preg_match_all($search, $source_content, $match,  PREG_SET_ORDER);
+        $this->_folded_blocks = $match;
+        reset($this->_folded_blocks);
+
+        /* replace special blocks by "{php}" */
+        $source_content = preg_replace($search.'e', "'"
+                                       . $this->_quote_replace($this->left_delimiter) . 'php'
+                                       . "' . str_repeat(\"\n\", substr_count('\\0', \"\n\")) .'"
+                                       . $this->_quote_replace($this->right_delimiter)
+                                       . "'"
+                                       , $source_content);
+
+        /* Gather all template tags. */
+        preg_match_all("~{$ldq}\s*(.*?)\s*{$rdq}~s", $source_content, $_match);
+        $template_tags = $_match[1];
+        /* Split content by template tags to obtain non-template content. */
+        $text_blocks = preg_split("~{$ldq}.*?{$rdq}~s", $source_content);
+
+        /* loop through text blocks */
+        for ($curr_tb = 0, $for_max = count($text_blocks); $curr_tb < $for_max; $curr_tb++) {
+            /* match anything resembling php tags */
+            if (preg_match_all('~(<\?(?:\w+|=)?|\?>|language\s*=\s*[\"\']?php[\"\']?)~is', $text_blocks[$curr_tb], $sp_match)) {
+                /* replace tags with placeholders to prevent recursive replacements */
+                $sp_match[1] = array_unique($sp_match[1]);
+                usort($sp_match[1], '_smarty_sort_length');
+                for ($curr_sp = 0, $for_max2 = count($sp_match[1]); $curr_sp < $for_max2; $curr_sp++) {
+                    $text_blocks[$curr_tb] = str_replace($sp_match[1][$curr_sp],'%%%SMARTYSP'.$curr_sp.'%%%',$text_blocks[$curr_tb]);
+                }
+                /* process each one */
+                for ($curr_sp = 0, $for_max2 = count($sp_match[1]); $curr_sp < $for_max2; $curr_sp++) {
+                    if ($this->php_handling == SMARTY_PHP_PASSTHRU) {
+                        /* echo php contents */
+                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', '<?php echo \''.str_replace("'", "\'", $sp_match[1][$curr_sp]).'\'; ?>'."\n", $text_blocks[$curr_tb]);
+                    } else if ($this->php_handling == SMARTY_PHP_QUOTE) {
+                        /* quote php tags */
+                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', htmlspecialchars($sp_match[1][$curr_sp]), $text_blocks[$curr_tb]);
+                    } else if ($this->php_handling == SMARTY_PHP_REMOVE) {
+                        /* remove php tags */
+                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', '', $text_blocks[$curr_tb]);
+                    } else {
+                        /* SMARTY_PHP_ALLOW, but echo non php starting tags */
+                        $sp_match[1][$curr_sp] = preg_replace('~(<\?(?!php|=|$))~i', '<?php echo \'\\1\'?>'."\n", $sp_match[1][$curr_sp]);
+                        $text_blocks[$curr_tb] = str_replace('%%%SMARTYSP'.$curr_sp.'%%%', $sp_match[1][$curr_sp], $text_blocks[$curr_tb]);
+                    }
+                }
+            }
+        }
+
+        /* Compile the template tags into PHP code. */
+        $compiled_tags = array();
+        for ($i = 0, $for_max = count($template_tags); $i < $for_max; $i++) {
+            $this->_current_line_no += substr_count($text_blocks[$i], "\n");
+            $compiled_tags[] = $this->_compile_tag($template_tags[$i]);
+            $this->_current_line_no += substr_count($template_tags[$i], "\n");
+        }
+        if (count($this->_tag_stack)>0) {
+            list($_open_tag, $_line_no) = end($this->_tag_stack);
+            $this->_syntax_error("unclosed tag \{$_open_tag} (opened line $_line_no).", E_USER_ERROR, __FILE__, __LINE__);
+            return;
+        }
+
+        /* Reformat $text_blocks between 'strip' and '/strip' tags,
+           removing spaces, tabs and newlines. */
+        $strip = false;
+        for ($i = 0, $for_max = count($compiled_tags); $i < $for_max; $i++) {
+            if ($compiled_tags[$i] == '{strip}') {
+                $compiled_tags[$i] = '';
+                $strip = true;
+                /* remove leading whitespaces */
+                $text_blocks[$i + 1] = ltrim($text_blocks[$i + 1]);
+            }
+            if ($strip) {
+                /* strip all $text_blocks before the next '/strip' */
+                for ($j = $i + 1; $j < $for_max; $j++) {
+                    /* remove leading and trailing whitespaces of each line */
+                    $text_blocks[$j] = preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $text_blocks[$j]);
+                    if ($compiled_tags[$j] == '{/strip}') {                       
+                        /* remove trailing whitespaces from the last text_block */
+                        $text_blocks[$j] = rtrim($text_blocks[$j]);
+                    }
+                    $text_blocks[$j] = "<?php echo '" . strtr($text_blocks[$j], array("'"=>"\'", "\\"=>"\\\\")) . "'; ?>";
+                    if ($compiled_tags[$j] == '{/strip}') {
+                        $compiled_tags[$j] = "\n"; /* slurped by php, but necessary
+                                    if a newline is following the closing strip-tag */
+                        $strip = false;
+                        $i = $j;
+                        break;
+                    }
+                }
+            }
+        }
+        $compiled_content = '';
+
+        /* Interleave the compiled contents and text blocks to get the final result. */
+        for ($i = 0, $for_max = count($compiled_tags); $i < $for_max; $i++) {
+            if ($compiled_tags[$i] == '') {
+                // tag result empty, remove first newline from following text block
+                $text_blocks[$i+1] = preg_replace('~^(\r\n|\r|\n)~', '', $text_blocks[$i+1]);
+            }
+            $compiled_content .= $text_blocks[$i].$compiled_tags[$i];
+        }
+        $compiled_content .= $text_blocks[$i];
+
+        // remove \n from the end of the file, if any
+        if (($_len=strlen($compiled_content)) && ($compiled_content{$_len - 1} == "\n" )) {
+            $compiled_content = substr($compiled_content, 0, -1);
+        }
+
+        if (!empty($this->_cache_serial)) {
+            $compiled_content = "<?php \$this->_cache_serials['".$this->_cache_include."'] = '".$this->_cache_serial."'; ?>" . $compiled_content;
+        }
+
+        // remove unnecessary close/open tags
+        $compiled_content = preg_replace('~\?>\n?<\?php~', '', $compiled_content);
+
+        // run compiled template through postfilter functions
+        if (count($this->_plugins['postfilter']) > 0) {
+            foreach ($this->_plugins['postfilter'] as $filter_name => $postfilter) {
+                if ($postfilter === false) continue;
+                if ($postfilter[3] || is_callable($postfilter[0])) {
+                    $compiled_content = call_user_func_array($postfilter[0],
+                                                              array($compiled_content, &$this));
+                    $this->_plugins['postfilter'][$filter_name][3] = true;
+                } else {
+                    $this->_trigger_fatal_error("Smarty plugin error: postfilter '$filter_name' is not implemented");
+                }
+            }
+        }
+
+        // put header at the top of the compiled template
+        $template_header = "<?php /* Smarty version ".$this->_version.", created on ".strftime("%Y-%m-%d %H:%M:%S")."\n";
+        $template_header .= "         compiled from ".strtr(urlencode($resource_name), array('%2F'=>'/', '%3A'=>':'))." */ ?>\n";
+
+        /* Emit code to load needed plugins. */
+        $this->_plugins_code = '';
+        if (count($this->_plugin_info)) {
+            $_plugins_params = "array('plugins' => array(";
+            foreach ($this->_plugin_info as $plugin_type => $plugins) {
+                foreach ($plugins as $plugin_name => $plugin_info) {
+                    $_plugins_params .= "array('$plugin_type', '$plugin_name', '" . strtr($plugin_info[0], array("'" => "\\'", "\\" => "\\\\")) . "', $plugin_info[1], ";
+                    $_plugins_params .= $plugin_info[2] ? 'true),' : 'false),';
+                }
+            }
+            $_plugins_params .= '))';
+            $plugins_code = "<?php require_once(SMARTY_CORE_DIR . 'core.load_plugins.php');\nsmarty_core_load_plugins($_plugins_params, \$this); ?>\n";
+            $template_header .= $plugins_code;
+            $this->_plugin_info = array();
+            $this->_plugins_code = $plugins_code;
+        }
+
+        if ($this->_init_smarty_vars) {
+            $template_header .= "<?php require_once(SMARTY_CORE_DIR . 'core.assign_smarty_interface.php');\nsmarty_core_assign_smarty_interface(null, \$this); ?>\n";
+            $this->_init_smarty_vars = false;
+        }
+
+        $compiled_content = $template_header . $compiled_content;
+        return true;
+    }
+
+    /**
+     * Compile a template tag
+     *
+     * @param string $template_tag
+     * @return string
+     */
+    function _compile_tag($template_tag)
+    {
+        /* Matched comment. */
+        if ($template_tag{0} == '*' && $template_tag{strlen($template_tag) - 1} == '*')
+            return '';
+        
+        /* Split tag into two three parts: command, command modifiers and the arguments. */
+        if(! preg_match('~^(?:(' . $this->_num_const_regexp . '|' . $this->_obj_call_regexp . '|' . $this->_var_regexp
+                . '|\/?' . $this->_reg_obj_regexp . '|\/?' . $this->_func_regexp . ')(' . $this->_mod_regexp . '*))
+                      (?:\s+(.*))?$
+                    ~xs', $template_tag, $match)) {
+            $this->_syntax_error("unrecognized tag: $template_tag", E_USER_ERROR, __FILE__, __LINE__);
+        }
+        
+        $tag_command = $match[1];
+        $tag_modifier = isset($match[2]) ? $match[2] : null;
+        $tag_args = isset($match[3]) ? $match[3] : null;
+
+        if (preg_match('~^' . $this->_num_const_regexp . '|' . $this->_obj_call_regexp . '|' . $this->_var_regexp . '$~', $tag_command)) {
+            /* tag name is a variable or object */
+            $_return = $this->_parse_var_props($tag_command . $tag_modifier);
+            return "<?php echo $_return; ?>" . $this->_additional_newline;
+        }
+
+        /* If the tag name is a registered object, we process it. */
+        if (preg_match('~^\/?' . $this->_reg_obj_regexp . '$~', $tag_command)) {
+            return $this->_compile_registered_object_tag($tag_command, $this->_parse_attrs($tag_args), $tag_modifier);
+        }
+
+        switch ($tag_command) {
+            case 'include':
+                return $this->_compile_include_tag($tag_args);
+
+            case 'include_php':
+                return $this->_compile_include_php_tag($tag_args);
+
+            case 'if':
+                $this->_push_tag('if');
+                return $this->_compile_if_tag($tag_args);
+
+            case 'else':
+                list($_open_tag) = end($this->_tag_stack);
+                if ($_open_tag != 'if' && $_open_tag != 'elseif')
+                    $this->_syntax_error('unexpected {else}', E_USER_ERROR, __FILE__, __LINE__);
+                else
+                    $this->_push_tag('else');
+                return '<?php else: ?>';
+
+            case 'elseif':
+                list($_open_tag) = end($this->_tag_stack);
+                if ($_open_tag != 'if' && $_open_tag != 'elseif')
+                    $this->_syntax_error('unexpected {elseif}', E_USER_ERROR, __FILE__, __LINE__);
+                if ($_open_tag == 'if')
+                    $this->_push_tag('elseif');
+                return $this->_compile_if_tag($tag_args, true);
+
+            case '/if':
+                $this->_pop_tag('if');
+                return '<?php endif; ?>';
+
+            case 'capture':
+                return $this->_compile_capture_tag(true, $tag_args);
+
+            case '/capture':
+                return $this->_compile_capture_tag(false);
+
+            case 'ldelim':
+                return $this->left_delimiter;
+
+            case 'rdelim':
+                return $this->right_delimiter;
+
+            case 'section':
+                $this->_push_tag('section');
+                return $this->_compile_section_start($tag_args);
+
+            case 'sectionelse':
+                $this->_push_tag('sectionelse');
+                return "<?php endfor; else: ?>";
+                break;
+
+            case '/section':
+                $_open_tag = $this->_pop_tag('section');
+                if ($_open_tag == 'sectionelse')
+                    return "<?php endif; ?>";
+                else
+                    return "<?php endfor; endif; ?>";
+
+            case 'foreach':
+                $this->_push_tag('foreach');
+                return $this->_compile_foreach_start($tag_args);
+                break;
+
+            case 'foreachelse':
+                $this->_push_tag('foreachelse');
+                return "<?php endforeach; else: ?>";
+
+            case '/foreach':
+                $_open_tag = $this->_pop_tag('foreach');
+                if ($_open_tag == 'foreachelse')
+                    return "<?php endif; unset(\$_from); ?>";
+                else
+                    return "<?php endforeach; endif; unset(\$_from); ?>";
+                break;
+
+            case 'strip':
+            case '/strip':
+                if ($tag_command{0}=='/') {
+                    $this->_pop_tag('strip');
+                    if (--$this->_strip_depth==0) { /* outermost closing {/strip} */
+                        $this->_additional_newline = "\n";
+                        return '{' . $tag_command . '}';
+                    }
+                } else {
+                    $this->_push_tag('strip');
+                    if ($this->_strip_depth++==0) { /* outermost opening {strip} */
+                        $this->_additional_newline = "";
+                        return '{' . $tag_command . '}';
+                    }
+                }
+                return '';
+
+            case 'php':
+                /* handle folded tags replaced by {php} */
+                list(, $block) = each($this->_folded_blocks);
+                $this->_current_line_no += substr_count($block[0], "\n");
+                /* the number of matched elements in the regexp in _compile_file()
+                   determins the type of folded tag that was found */
+                switch (count($block)) {
+                    case 2: /* comment */
+                        return '';
+
+                    case 3: /* literal */
+                        return "<?php echo '" . strtr($block[2], array("'"=>"\'", "\\"=>"\\\\")) . "'; ?>" . $this->_additional_newline;
+
+                    case 4: /* php */
+                        if ($this->security && !$this->security_settings['PHP_TAGS']) {
+                            $this->_syntax_error("(secure mode) php tags not permitted", E_USER_WARNING, __FILE__, __LINE__);
+                            return;
+                        }
+                        return '<?php ' . $block[3] .' ?>';
+                }
+                break;
+
+            case 'insert':
+                return $this->_compile_insert_tag($tag_args);
+
+            default:
+                if ($this->_compile_compiler_tag($tag_command, $tag_args, $output)) {
+                    return $output;
+                } else if ($this->_compile_block_tag($tag_command, $tag_args, $tag_modifier, $output)) {
+                    return $output;
+                } else if ($this->_compile_custom_tag($tag_command, $tag_args, $tag_modifier, $output)) {
+                    return $output;                    
+                } else {
+                    $this->_syntax_error("unrecognized tag '$tag_command'", E_USER_ERROR, __FILE__, __LINE__);
+                }
+
+        }
+    }
+
+
+    /**
+     * compile the custom compiler tag
+     *
+     * sets $output to the compiled custom compiler tag
+     * @param string $tag_command
+     * @param string $tag_args
+     * @param string $output
+     * @return boolean
+     */
+    function _compile_compiler_tag($tag_command, $tag_args, &$output)
+    {
+        $found = false;
+        $have_function = true;
+
+        /*
+         * First we check if the compiler function has already been registered
+         * or loaded from a plugin file.
+         */
+        if (isset($this->_plugins['compiler'][$tag_command])) {
+            $found = true;
+            $plugin_func = $this->_plugins['compiler'][$tag_command][0];
+            if (!is_callable($plugin_func)) {
+                $message = "compiler function '$tag_command' is not implemented";
+                $have_function = false;
+            }
+        }
+        /*
+         * Otherwise we need to load plugin file and look for the function
+         * inside it.
+         */
+        else if ($plugin_file = $this->_get_plugin_filepath('compiler', $tag_command)) {
+            $found = true;
+
+            include_once $plugin_file;
+
+            $plugin_func = 'smarty_compiler_' . $tag_command;
+            if (!is_callable($plugin_func)) {
+                $message = "plugin function $plugin_func() not found in $plugin_file\n";
+                $have_function = false;
+            } else {
+                $this->_plugins['compiler'][$tag_command] = array($plugin_func, null, null, null, true);
+            }
+        }
+
+        /*
+         * True return value means that we either found a plugin or a
+         * dynamically registered function. False means that we didn't and the
+         * compiler should now emit code to load custom function plugin for this
+         * tag.
+         */
+        if ($found) {
+            if ($have_function) {
+                $output = call_user_func_array($plugin_func, array($tag_args, &$this));
+                if($output != '') {
+                $output = '<?php ' . $this->_push_cacheable_state('compiler', $tag_command)
+                                   . $output
+                                   . $this->_pop_cacheable_state('compiler', $tag_command) . ' ?>';
+                }
+            } else {
+                $this->_syntax_error($message, E_USER_WARNING, __FILE__, __LINE__);
+            }
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+
+    /**
+     * compile block function tag
+     *
+     * sets $output to compiled block function tag
+     * @param string $tag_command
+     * @param string $tag_args
+     * @param string $tag_modifier
+     * @param string $output
+     * @return boolean
+     */
+    function _compile_block_tag($tag_command, $tag_args, $tag_modifier, &$output)
+    {
+        if ($tag_command{0} == '/') {
+            $start_tag = false;
+            $tag_command = substr($tag_command, 1);
+        } else
+            $start_tag = true;
+
+        $found = false;
+        $have_function = true;
+
+        /*
+         * First we check if the block function has already been registered
+         * or loaded from a plugin file.
+         */
+        if (isset($this->_plugins['block'][$tag_command])) {
+            $found = true;
+            $plugin_func = $this->_plugins['block'][$tag_command][0];
+            if (!is_callable($plugin_func)) {
+                $message = "block function '$tag_command' is not implemented";
+                $have_function = false;
+            }
+        }
+        /*
+         * Otherwise we need to load plugin file and look for the function
+         * inside it.
+         */
+        else if ($plugin_file = $this->_get_plugin_filepath('block', $tag_command)) {
+            $found = true;
+
+            include_once $plugin_file;
+
+            $plugin_func = 'smarty_block_' . $tag_command;
+            if (!function_exists($plugin_func)) {
+                $message = "plugin function $plugin_func() not found in $plugin_file\n";
+                $have_function = false;
+            } else {
+                $this->_plugins['block'][$tag_command] = array($plugin_func, null, null, null, true);
+
+            }
+        }
+
+        if (!$found) {
+            return false;
+        } else if (!$have_function) {
+            $this->_syntax_error($message, E_USER_WARNING, __FILE__, __LINE__);
+            return true;
+        }
+
+        /*
+         * Even though we've located the plugin function, compilation
+         * happens only once, so the plugin will still need to be loaded
+         * at runtime for future requests.
+         */
+        $this->_add_plugin('block', $tag_command);
+
+        if ($start_tag)
+            $this->_push_tag($tag_command);
+        else
+            $this->_pop_tag($tag_command);
+
+        if ($start_tag) {
+            $output = '<?php ' . $this->_push_cacheable_state('block', $tag_command);
+            $attrs = $this->_parse_attrs($tag_args);
+            $arg_list = $this->_compile_arg_list('block', $tag_command, $attrs, $_cache_attrs='');
+            $output .= "$_cache_attrs\$this->_tag_stack[] = array('$tag_command', array(".implode(',', $arg_list).')); ';
+            $output .= $this->_compile_plugin_call('block', $tag_command).'($this->_tag_stack[count($this->_tag_stack)-1][1], null, $this, $_block_repeat=true);';
+            $output .= 'while ($_block_repeat) { ob_start(); ?>';
+        } else {
+            $output = '<?php $_block_content = ob_get_contents(); ob_end_clean(); ';
+            $_out_tag_text = $this->_compile_plugin_call('block', $tag_command).'($this->_tag_stack[count($this->_tag_stack)-1][1], $_block_content, $this, $_block_repeat=false)';
+            if ($tag_modifier != '') {
+                $this->_parse_modifiers($_out_tag_text, $tag_modifier);
+            }
+            $output .= 'echo '.$_out_tag_text.'; } ';
+            $output .= " array_pop(\$this->_tag_stack); " . $this->_pop_cacheable_state('block', $tag_command) . '?>';
+        }
+
+        return true;
+    }
+
+
+    /**
+     * compile custom function tag
+     *
+     * @param string $tag_command
+     * @param string $tag_args
+     * @param string $tag_modifier
+     * @return string
+     */
+    function _compile_custom_tag($tag_command, $tag_args, $tag_modifier, &$output)
+    {
+        $found = false;
+        $have_function = true;
+
+        /*
+         * First we check if the custom function has already been registered
+         * or loaded from a plugin file.
+         */
+        if (isset($this->_plugins['function'][$tag_command])) {
+            $found = true;
+            $plugin_func = $this->_plugins['function'][$tag_command][0];
+            if (!is_callable($plugin_func)) {
+                $message = "custom function '$tag_command' is not implemented";
+                $have_function = false;
+            }
+        }
+        /*
+         * Otherwise we need to load plugin file and look for the function
+         * inside it.
+         */
+        else if ($plugin_file = $this->_get_plugin_filepath('function', $tag_command)) {
+            $found = true;
+
+            include_once $plugin_file;
+
+            $plugin_func = 'smarty_function_' . $tag_command;
+            if (!function_exists($plugin_func)) {
+                $message = "plugin function $plugin_func() not found in $plugin_file\n";
+                $have_function = false;
+            } else {
+                $this->_plugins['function'][$tag_command] = array($plugin_func, null, null, null, true);
+
+            }
+        }
+
+        if (!$found) {
+            return false;
+        } else if (!$have_function) {
+            $this->_syntax_error($message, E_USER_WARNING, __FILE__, __LINE__);
+            return true;
+        }
+
+        /* declare plugin to be loaded on display of the template that
+           we compile right now */
+        $this->_add_plugin('function', $tag_command);
+
+        $_cacheable_state = $this->_push_cacheable_state('function', $tag_command);
+        $attrs = $this->_parse_attrs($tag_args);
+        $arg_list = $this->_compile_arg_list('function', $tag_command, $attrs, $_cache_attrs='');
+
+        $output = $this->_compile_plugin_call('function', $tag_command).'(array('.implode(',', $arg_list)."), \$this)";
+        if($tag_modifier != '') {
+            $this->_parse_modifiers($output, $tag_modifier);
+        }
+
+        if($output != '') {
+            $output =  '<?php ' . $_cacheable_state . $_cache_attrs . 'echo ' . $output . ';'
+                . $this->_pop_cacheable_state('function', $tag_command) . "?>" . $this->_additional_newline;
+        }
+
+        return true;
+    }
+
+    /**
+     * compile a registered object tag
+     *
+     * @param string $tag_command
+     * @param array $attrs
+     * @param string $tag_modifier
+     * @return string
+     */
+    function _compile_registered_object_tag($tag_command, $attrs, $tag_modifier)
+    {
+        if ($tag_command{0} == '/') {
+            $start_tag = false;
+            $tag_command = substr($tag_command, 1);
+        } else {
+            $start_tag = true;
+        }
+
+        list($object, $obj_comp) = explode('->', $tag_command);
+
+        $arg_list = array();
+        if(count($attrs)) {
+            $_assign_var = false;
+            foreach ($attrs as $arg_name => $arg_value) {
+                if($arg_name == 'assign') {
+                    $_assign_var = $arg_value;
+                    unset($attrs['assign']);
+                    continue;
+                }
+                if (is_bool($arg_value))
+                    $arg_value = $arg_value ? 'true' : 'false';
+                $arg_list[] = "'$arg_name' => $arg_value";
+            }
+        }
+
+        if($this->_reg_objects[$object][2]) {
+            // smarty object argument format
+            $args = "array(".implode(',', (array)$arg_list)."), \$this";
+        } else {
+            // traditional argument format
+            $args = implode(',', array_values($attrs));
+            if (empty($args)) {
+                $args = 'null';
+            }
+        }
+
+        $prefix = '';
+        $postfix = '';
+        $newline = '';
+        if(!is_object($this->_reg_objects[$object][0])) {
+            $this->_trigger_fatal_error("registered '$object' is not an object" , $this->_current_file, $this->_current_line_no, __FILE__, __LINE__);
+        } elseif(!empty($this->_reg_objects[$object][1]) && !in_array($obj_comp, $this->_reg_objects[$object][1])) {
+            $this->_trigger_fatal_error("'$obj_comp' is not a registered component of object '$object'", $this->_current_file, $this->_current_line_no, __FILE__, __LINE__);
+        } elseif(method_exists($this->_reg_objects[$object][0], $obj_comp)) {
+            // method
+            if(in_array($obj_comp, $this->_reg_objects[$object][3])) {
+                // block method
+                if ($start_tag) {
+                    $prefix = "\$this->_tag_stack[] = array('$obj_comp', $args); ";
+                    $prefix .= "\$this->_reg_objects['$object'][0]->$obj_comp(\$this->_tag_stack[count(\$this->_tag_stack)-1][1], null, \$this, \$_block_repeat=true); ";
+                    $prefix .= "while (\$_block_repeat) { ob_start();";
+                    $return = null;
+                    $postfix = '';
+            } else {
+                    $prefix = "\$_obj_block_content = ob_get_contents(); ob_end_clean(); ";
+                    $return = "\$this->_reg_objects['$object'][0]->$obj_comp(\$this->_tag_stack[count(\$this->_tag_stack)-1][1], \$_obj_block_content, \$this, \$_block_repeat=false)";
+                    $postfix = "} array_pop(\$this->_tag_stack);";
+                }
+            } else {
+                // non-block method
+                $return = "\$this->_reg_objects['$object'][0]->$obj_comp($args)";
+            }
+        } else {
+            // property
+            $return = "\$this->_reg_objects['$object'][0]->$obj_comp";
+        }
+
+        if($return != null) {
+            if($tag_modifier != '') {
+                $this->_parse_modifiers($return, $tag_modifier);
+            }
+
+            if(!empty($_assign_var)) {
+                $output = "\$this->assign('" . $this->_dequote($_assign_var) ."',  $return);";
+            } else {
+                $output = 'echo ' . $return . ';';
+                $newline = $this->_additional_newline;
+            }
+        } else {
+            $output = '';
+        }
+
+        return '<?php ' . $prefix . $output . $postfix . "?>" . $newline;
+    }
+
+    /**
+     * Compile {insert ...} tag
+     *
+     * @param string $tag_args
+     * @return string
+     */
+    function _compile_insert_tag($tag_args)
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+        $name = $this->_dequote($attrs['name']);
+
+        if (empty($name)) {
+            $this->_syntax_error("missing insert name", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        if (!empty($attrs['script'])) {
+            $delayed_loading = true;
+        } else {
+            $delayed_loading = false;
+        }
+
+        foreach ($attrs as $arg_name => $arg_value) {
+            if (is_bool($arg_value))
+                $arg_value = $arg_value ? 'true' : 'false';
+            $arg_list[] = "'$arg_name' => $arg_value";
+        }
+
+        $this->_add_plugin('insert', $name, $delayed_loading);
+
+        $_params = "array('args' => array(".implode(', ', (array)$arg_list)."))";
+
+        return "<?php require_once(SMARTY_CORE_DIR . 'core.run_insert_handler.php');\necho smarty_core_run_insert_handler($_params, \$this); ?>" . $this->_additional_newline;
+    }
+
+    /**
+     * Compile {include ...} tag
+     *
+     * @param string $tag_args
+     * @return string
+     */
+    function _compile_include_tag($tag_args)
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+        $arg_list = array();
+
+        if (empty($attrs['file'])) {
+            $this->_syntax_error("missing 'file' attribute in include tag", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        foreach ($attrs as $arg_name => $arg_value) {
+            if ($arg_name == 'file') {
+                $include_file = $arg_value;
+                continue;
+            } else if ($arg_name == 'assign') {
+                $assign_var = $arg_value;
+                continue;
+            }
+            if (is_bool($arg_value))
+                $arg_value = $arg_value ? 'true' : 'false';
+            $arg_list[] = "'$arg_name' => $arg_value";
+        }
+
+        $output = '<?php ';
+
+        if (isset($assign_var)) {
+            $output .= "ob_start();\n";
+        }
+
+        $output .=
+            "\$_smarty_tpl_vars = \$this->_tpl_vars;\n";
+
+
+        $_params = "array('smarty_include_tpl_file' => " . $include_file . ", 'smarty_include_vars' => array(".implode(',', (array)$arg_list)."))";
+        $output .= "\$this->_smarty_include($_params);\n" .
+        "\$this->_tpl_vars = \$_smarty_tpl_vars;\n" .
+        "unset(\$_smarty_tpl_vars);\n";
+
+        if (isset($assign_var)) {
+            $output .= "\$this->assign(" . $assign_var . ", ob_get_contents()); ob_end_clean();\n";
+        }
+
+        $output .= ' ?>';
+
+        return $output;
+
+    }
+
+    /**
+     * Compile {include ...} tag
+     *
+     * @param string $tag_args
+     * @return string
+     */
+    function _compile_include_php_tag($tag_args)
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+
+        if (empty($attrs['file'])) {
+            $this->_syntax_error("missing 'file' attribute in include_php tag", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        $assign_var = (empty($attrs['assign'])) ? '' : $this->_dequote($attrs['assign']);
+        $once_var = (empty($attrs['once']) || $attrs['once']=='false') ? 'false' : 'true';
+
+        $arg_list = array();
+        foreach($attrs as $arg_name => $arg_value) {
+            if($arg_name != 'file' AND $arg_name != 'once' AND $arg_name != 'assign') {
+                if(is_bool($arg_value))
+                    $arg_value = $arg_value ? 'true' : 'false';
+                $arg_list[] = "'$arg_name' => $arg_value";
+            }
+        }
+
+        $_params = "array('smarty_file' => " . $attrs['file'] . ", 'smarty_assign' => '$assign_var', 'smarty_once' => $once_var, 'smarty_include_vars' => array(".implode(',', $arg_list)."))";
+
+        return "<?php require_once(SMARTY_CORE_DIR . 'core.smarty_include_php.php');\nsmarty_core_smarty_include_php($_params, \$this); ?>" . $this->_additional_newline;
+    }
+
+
+    /**
+     * Compile {section ...} tag
+     *
+     * @param string $tag_args
+     * @return string
+     */
+    function _compile_section_start($tag_args)
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+        $arg_list = array();
+
+        $output = '<?php ';
+        $section_name = $attrs['name'];
+        if (empty($section_name)) {
+            $this->_syntax_error("missing section name", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        $output .= "unset(\$this->_sections[$section_name]);\n";
+        $section_props = "\$this->_sections[$section_name]";
+
+        foreach ($attrs as $attr_name => $attr_value) {
+            switch ($attr_name) {
+                case 'loop':
+                    $output .= "{$section_props}['loop'] = is_array(\$_loop=$attr_value) ? count(\$_loop) : max(0, (int)\$_loop); unset(\$_loop);\n";
+                    break;
+
+                case 'show':
+                    if (is_bool($attr_value))
+                        $show_attr_value = $attr_value ? 'true' : 'false';
+                    else
+                        $show_attr_value = "(bool)$attr_value";
+                    $output .= "{$section_props}['show'] = $show_attr_value;\n";
+                    break;
+
+                case 'name':
+                    $output .= "{$section_props}['$attr_name'] = $attr_value;\n";
+                    break;
+
+                case 'max':
+                case 'start':
+                    $output .= "{$section_props}['$attr_name'] = (int)$attr_value;\n";
+                    break;
+
+                case 'step':
+                    $output .= "{$section_props}['$attr_name'] = ((int)$attr_value) == 0 ? 1 : (int)$attr_value;\n";
+                    break;
+
+                default:
+                    $this->_syntax_error("unknown section attribute - '$attr_name'", E_USER_ERROR, __FILE__, __LINE__);
+                    break;
+            }
+        }
+
+        if (!isset($attrs['show']))
+            $output .= "{$section_props}['show'] = true;\n";
+
+        if (!isset($attrs['loop']))
+            $output .= "{$section_props}['loop'] = 1;\n";
+
+        if (!isset($attrs['max']))
+            $output .= "{$section_props}['max'] = {$section_props}['loop'];\n";
+        else
+            $output .= "if ({$section_props}['max'] < 0)\n" .
+                       "    {$section_props}['max'] = {$section_props}['loop'];\n";
+
+        if (!isset($attrs['step']))
+            $output .= "{$section_props}['step'] = 1;\n";
+
+        if (!isset($attrs['start']))
+            $output .= "{$section_props}['start'] = {$section_props}['step'] > 0 ? 0 : {$section_props}['loop']-1;\n";
+        else {
+            $output .= "if ({$section_props}['start'] < 0)\n" .
+                       "    {$section_props}['start'] = max({$section_props}['step'] > 0 ? 0 : -1, {$section_props}['loop'] + {$section_props}['start']);\n" .
+                       "else\n" .
+                       "    {$section_props}['start'] = min({$section_props}['start'], {$section_props}['step'] > 0 ? {$section_props}['loop'] : {$section_props}['loop']-1);\n";
+        }
+
+        $output .= "if ({$section_props}['show']) {\n";
+        if (!isset($attrs['start']) && !isset($attrs['step']) && !isset($attrs['max'])) {
+            $output .= "    {$section_props}['total'] = {$section_props}['loop'];\n";
+        } else {
+            $output .= "    {$section_props}['total'] = min(ceil(({$section_props}['step'] > 0 ? {$section_props}['loop'] - {$section_props}['start'] : {$section_props}['start']+1)/abs({$section_props}['step'])), {$section_props}['max']);\n";
+        }
+        $output .= "    if ({$section_props}['total'] == 0)\n" .
+                   "        {$section_props}['show'] = false;\n" .
+                   "} else\n" .
+                   "    {$section_props}['total'] = 0;\n";
+
+        $output .= "if ({$section_props}['show']):\n";
+        $output .= "
+            for ({$section_props}['index'] = {$section_props}['start'], {$section_props}['iteration'] = 1;
+                 {$section_props}['iteration'] <= {$section_props}['total'];
+                 {$section_props}['index'] += {$section_props}['step'], {$section_props}['iteration']++):\n";
+        $output .= "{$section_props}['rownum'] = {$section_props}['iteration'];\n";
+        $output .= "{$section_props}['index_prev'] = {$section_props}['index'] - {$section_props}['step'];\n";
+        $output .= "{$section_props}['index_next'] = {$section_props}['index'] + {$section_props}['step'];\n";
+        $output .= "{$section_props}['first']      = ({$section_props}['iteration'] == 1);\n";
+        $output .= "{$section_props}['last']       = ({$section_props}['iteration'] == {$section_props}['total']);\n";
+
+        $output .= "?>";
+
+        return $output;
+    }
+
+
+    /**
+     * Compile {foreach ...} tag.
+     *
+     * @param string $tag_args
+     * @return string
+     */
+    function _compile_foreach_start($tag_args)
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+        $arg_list = array();
+
+        if (empty($attrs['from'])) {
+            return $this->_syntax_error("foreach: missing 'from' attribute", E_USER_ERROR, __FILE__, __LINE__);
+        }
+        $from = $attrs['from'];
+
+        if (empty($attrs['item'])) {
+            return $this->_syntax_error("foreach: missing 'item' attribute", E_USER_ERROR, __FILE__, __LINE__);
+        }
+        $item = $this->_dequote($attrs['item']);
+        if (!preg_match('~^\w+$~', $item)) {
+            return $this->_syntax_error("'foreach: item' must be a variable name (literal string)", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        if (isset($attrs['key'])) {
+            $key  = $this->_dequote($attrs['key']);
+            if (!preg_match('~^\w+$~', $key)) {
+                return $this->_syntax_error("foreach: 'key' must to be a variable name (literal string)", E_USER_ERROR, __FILE__, __LINE__);
+            }
+            $key_part = "\$this->_tpl_vars['$key'] => ";
+        } else {
+            $key = null;
+            $key_part = '';
+        }
+
+        if (isset($attrs['name'])) {
+            $name = $attrs['name'];
+        } else {
+            $name = null;
+        }
+
+        $output = '<?php ';
+        $output .= "\$_from = $from; if (!is_array(\$_from) && !is_object(\$_from)) { settype(\$_from, 'array'); }";
+        if (isset($name)) {
+            $foreach_props = "\$this->_foreach[$name]";
+            $output .= "{$foreach_props} = array('total' => count(\$_from), 'iteration' => 0);\n";
+            $output .= "if ({$foreach_props}['total'] > 0):\n";
+            $output .= "    foreach (\$_from as $key_part\$this->_tpl_vars['$item']):\n";
+            $output .= "        {$foreach_props}['iteration']++;\n";
+        } else {
+            $output .= "if (count(\$_from)):\n";
+            $output .= "    foreach (\$_from as $key_part\$this->_tpl_vars['$item']):\n";
+        }
+        $output .= '?>';
+
+        return $output;
+    }
+
+
+    /**
+     * Compile {capture} .. {/capture} tags
+     *
+     * @param boolean $start true if this is the {capture} tag
+     * @param string $tag_args
+     * @return string
+     */
+
+    function _compile_capture_tag($start, $tag_args = '')
+    {
+        $attrs = $this->_parse_attrs($tag_args);
+
+        if ($start) {
+            if (isset($attrs['name']))
+                $buffer = $attrs['name'];
+            else
+                $buffer = "'default'";
+
+            if (isset($attrs['assign']))
+                $assign = $attrs['assign'];
+            else
+                $assign = null;
+            $output = "<?php ob_start(); ?>";
+            $this->_capture_stack[] = array($buffer, $assign);
+        } else {
+            list($buffer, $assign) = array_pop($this->_capture_stack);
+            $output = "<?php \$this->_smarty_vars['capture'][$buffer] = ob_get_contents(); ";
+            if (isset($assign)) {
+                $output .= " \$this->assign($assign, ob_get_contents());";
+            }
+            $output .= "ob_end_clean(); ?>";
+        }
+
+        return $output;
+    }
+
+    /**
+     * Compile {if ...} tag
+     *
+     * @param string $tag_args
+     * @param boolean $elseif if true, uses elseif instead of if
+     * @return string
+     */
+    function _compile_if_tag($tag_args, $elseif = false)
+    {
+
+        /* Tokenize args for 'if' tag. */
+        preg_match_all('~(?>
+                ' . $this->_obj_call_regexp . '(?:' . $this->_mod_regexp . '*)? | # valid object call
+                ' . $this->_var_regexp . '(?:' . $this->_mod_regexp . '*)?    | # var or quoted string
+                \-?0[xX][0-9a-fA-F]+|\-?\d+(?:\.\d+)?|\.\d+|!==|===|==|!=|<>|<<|>>|<=|>=|\&\&|\|\||\(|\)|,|\!|\^|=|\&|\~|<|>|\||\%|\+|\-|\/|\*|\@    | # valid non-word token
+                \b\w+\b                                                        | # valid word token
+                \S+                                                           # anything else
+                )~x', $tag_args, $match);
+
+        $tokens = $match[0];
+
+        if(empty($tokens)) {
+            $_error_msg .= $elseif ? "'elseif'" : "'if'";
+            $_error_msg .= ' statement requires arguments'; 
+            $this->_syntax_error($_error_msg, E_USER_ERROR, __FILE__, __LINE__);
+        }
+            
+                
+        // make sure we have balanced parenthesis
+        $token_count = array_count_values($tokens);
+        if(isset($token_count['(']) && $token_count['('] != $token_count[')']) {
+            $this->_syntax_error("unbalanced parenthesis in if statement", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        $is_arg_stack = array();
+
+        for ($i = 0; $i < count($tokens); $i++) {
+
+            $token = &$tokens[$i];
+
+            switch (strtolower($token)) {
+                case '!':
+                case '%':
+                case '!==':
+                case '==':
+                case '===':
+                case '>':
+                case '<':
+                case '!=':
+                case '<>':
+                case '<<':
+                case '>>':
+                case '<=':
+                case '>=':
+                case '&&':
+                case '||':
+                case '|':
+                case '^':
+                case '&':
+                case '~':
+                case ')':
+                case ',':
+                case '+':
+                case '-':
+                case '*':
+                case '/':
+                case '@':
+                    break;
+
+                case 'eq':
+                    $token = '==';
+                    break;
+
+                case 'ne':
+                case 'neq':
+                    $token = '!=';
+                    break;
+
+                case 'lt':
+                    $token = '<';
+                    break;
+
+                case 'le':
+                case 'lte':
+                    $token = '<=';
+                    break;
+
+                case 'gt':
+                    $token = '>';
+                    break;
+
+                case 'ge':
+                case 'gte':
+                    $token = '>=';
+                    break;
+
+                case 'and':
+                    $token = '&&';
+                    break;
+
+                case 'or':
+                    $token = '||';
+                    break;
+
+                case 'not':
+                    $token = '!';
+                    break;
+
+                case 'mod':
+                    $token = '%';
+                    break;
+
+                case '(':
+                    array_push($is_arg_stack, $i);
+                    break;
+
+                case 'is':
+                    /* If last token was a ')', we operate on the parenthesized
+                       expression. The start of the expression is on the stack.
+                       Otherwise, we operate on the last encountered token. */
+                    if ($tokens[$i-1] == ')')
+                        $is_arg_start = array_pop($is_arg_stack);
+                    else
+                        $is_arg_start = $i-1;
+                    /* Construct the argument for 'is' expression, so it knows
+                       what to operate on. */
+                    $is_arg = implode(' ', array_slice($tokens, $is_arg_start, $i - $is_arg_start));
+
+                    /* Pass all tokens from next one until the end to the
+                       'is' expression parsing function. The function will
+                       return modified tokens, where the first one is the result
+                       of the 'is' expression and the rest are the tokens it
+                       didn't touch. */
+                    $new_tokens = $this->_parse_is_expr($is_arg, array_slice($tokens, $i+1));
+
+                    /* Replace the old tokens with the new ones. */
+                    array_splice($tokens, $is_arg_start, count($tokens), $new_tokens);
+
+                    /* Adjust argument start so that it won't change from the
+                       current position for the next iteration. */
+                    $i = $is_arg_start;
+                    break;
+
+                default:
+                    if(preg_match('~^' . $this->_func_regexp . '$~', $token) ) {
+                            // function call
+                            if($this->security &&
+                               !in_array($token, $this->security_settings['IF_FUNCS'])) {
+                                $this->_syntax_error("(secure mode) '$token' not allowed in if statement", E_USER_ERROR, __FILE__, __LINE__);
+                            }
+                    } elseif(preg_match('~^' . $this->_var_regexp . '$~', $token) && isset($tokens[$i+1]) && $tokens[$i+1] == '(') {
+                        // variable function call
+                        $this->_syntax_error("variable function call '$token' not allowed in if statement", E_USER_ERROR, __FILE__, __LINE__);                      
+                    } elseif(preg_match('~^' . $this->_obj_call_regexp . '|' . $this->_var_regexp . '(?:' . $this->_mod_regexp . '*)$~', $token)) {
+                        // object or variable
+                        $token = $this->_parse_var_props($token);
+                    } elseif(is_numeric($token)) {
+                        // number, skip it
+                    } else {
+                        $this->_syntax_error("unidentified token '$token'", E_USER_ERROR, __FILE__, __LINE__);
+                    }
+                    break;
+            }
+        }
+
+        if ($elseif)
+            return '<?php elseif ('.implode(' ', $tokens).'): ?>';
+        else
+            return '<?php if ('.implode(' ', $tokens).'): ?>';
+    }
+
+
+    function _compile_arg_list($type, $name, $attrs, &$cache_code) {
+        $arg_list = array();
+
+        if (isset($type) && isset($name)
+            && isset($this->_plugins[$type])
+            && isset($this->_plugins[$type][$name])
+            && empty($this->_plugins[$type][$name][4])
+            && is_array($this->_plugins[$type][$name][5])
+            ) {
+            /* we have a list of parameters that should be cached */
+            $_cache_attrs = $this->_plugins[$type][$name][5];
+            $_count = $this->_cache_attrs_count++;
+            $cache_code = "\$_cache_attrs =& \$this->_smarty_cache_attrs('$this->_cache_serial','$_count');";
+
+        } else {
+            /* no parameters are cached */
+            $_cache_attrs = null;
+        }
+
+        foreach ($attrs as $arg_name => $arg_value) {
+            if (is_bool($arg_value))
+                $arg_value = $arg_value ? 'true' : 'false';
+            if (is_null($arg_value))
+                $arg_value = 'null';
+            if ($_cache_attrs && in_array($arg_name, $_cache_attrs)) {
+                $arg_list[] = "'$arg_name' => (\$this->_cache_including) ? \$_cache_attrs['$arg_name'] : (\$_cache_attrs['$arg_name']=$arg_value)";
+            } else {
+                $arg_list[] = "'$arg_name' => $arg_value";
+            }
+        }
+        return $arg_list;
+    }
+
+    /**
+     * Parse is expression
+     *
+     * @param string $is_arg
+     * @param array $tokens
+     * @return array
+     */
+    function _parse_is_expr($is_arg, $tokens)
+    {
+        $expr_end = 0;
+        $negate_expr = false;
+
+        if (($first_token = array_shift($tokens)) == 'not') {
+            $negate_expr = true;
+            $expr_type = array_shift($tokens);
+        } else
+            $expr_type = $first_token;
+
+        switch ($expr_type) {
+            case 'even':
+                if (isset($tokens[$expr_end]) && $tokens[$expr_end] == 'by') {
+                    $expr_end++;
+                    $expr_arg = $tokens[$expr_end++];
+                    $expr = "!(1 & ($is_arg / " . $this->_parse_var_props($expr_arg) . "))";
+                } else
+                    $expr = "!(1 & $is_arg)";
+                break;
+
+            case 'odd':
+                if (isset($tokens[$expr_end]) && $tokens[$expr_end] == 'by') {
+                    $expr_end++;
+                    $expr_arg = $tokens[$expr_end++];
+                    $expr = "(1 & ($is_arg / " . $this->_parse_var_props($expr_arg) . "))";
+                } else
+                    $expr = "(1 & $is_arg)";
+                break;
+
+            case 'div':
+                if (@$tokens[$expr_end] == 'by') {
+                    $expr_end++;
+                    $expr_arg = $tokens[$expr_end++];
+                    $expr = "!($is_arg % " . $this->_parse_var_props($expr_arg) . ")";
+                } else {
+                    $this->_syntax_error("expecting 'by' after 'div'", E_USER_ERROR, __FILE__, __LINE__);
+                }
+                break;
+
+            default:
+                $this->_syntax_error("unknown 'is' expression - '$expr_type'", E_USER_ERROR, __FILE__, __LINE__);
+                break;
+        }
+
+        if ($negate_expr) {
+            $expr = "!($expr)";
+        }
+
+        array_splice($tokens, 0, $expr_end, $expr);
+
+        return $tokens;
+    }
+
+
+    /**
+     * Parse attribute string
+     *
+     * @param string $tag_args
+     * @return array
+     */
+    function _parse_attrs($tag_args)
+    {
+
+        /* Tokenize tag attributes. */
+        preg_match_all('~(?:' . $this->_obj_call_regexp . '|' . $this->_qstr_regexp . ' | (?>[^"\'=\s]+)
+                         )+ |
+                         [=]
+                        ~x', $tag_args, $match);
+        $tokens       = $match[0];
+
+        $attrs = array();
+        /* Parse state:
+            0 - expecting attribute name
+            1 - expecting '='
+            2 - expecting attribute value (not '=') */
+        $state = 0;
+
+        foreach ($tokens as $token) {
+            switch ($state) {
+                case 0:
+                    /* If the token is a valid identifier, we set attribute name
+                       and go to state 1. */
+                    if (preg_match('~^\w+$~', $token)) {
+                        $attr_name = $token;
+                        $state = 1;
+                    } else
+                        $this->_syntax_error("invalid attribute name: '$token'", E_USER_ERROR, __FILE__, __LINE__);
+                    break;
+
+                case 1:
+                    /* If the token is '=', then we go to state 2. */
+                    if ($token == '=') {
+                        $state = 2;
+                    } else
+                        $this->_syntax_error("expecting '=' after attribute name '$last_token'", E_USER_ERROR, __FILE__, __LINE__);
+                    break;
+
+                case 2:
+                    /* If token is not '=', we set the attribute value and go to
+                       state 0. */
+                    if ($token != '=') {
+                        /* We booleanize the token if it's a non-quoted possible
+                           boolean value. */
+                        if (preg_match('~^(on|yes|true)$~', $token)) {
+                            $token = 'true';
+                        } else if (preg_match('~^(off|no|false)$~', $token)) {
+                            $token = 'false';
+                        } else if ($token == 'null') {
+                            $token = 'null';
+                        } else if (preg_match('~^' . $this->_num_const_regexp . '|0[xX][0-9a-fA-F]+$~', $token)) {
+                            /* treat integer literally */
+                        } else if (!preg_match('~^' . $this->_obj_call_regexp . '|' . $this->_var_regexp . '(?:' . $this->_mod_regexp . ')*$~', $token)) {
+                            /* treat as a string, double-quote it escaping quotes */
+                            $token = '"'.addslashes($token).'"';
+                        }
+
+                        $attrs[$attr_name] = $token;
+                        $state = 0;
+                    } else
+                        $this->_syntax_error("'=' cannot be an attribute value", E_USER_ERROR, __FILE__, __LINE__);
+                    break;
+            }
+            $last_token = $token;
+        }
+
+        if($state != 0) {
+            if($state == 1) {
+                $this->_syntax_error("expecting '=' after attribute name '$last_token'", E_USER_ERROR, __FILE__, __LINE__);
+            } else {
+                $this->_syntax_error("missing attribute value", E_USER_ERROR, __FILE__, __LINE__);
+            }
+        }
+
+        $this->_parse_vars_props($attrs);
+
+        return $attrs;
+    }
+
+    /**
+     * compile multiple variables and section properties tokens into
+     * PHP code
+     *
+     * @param array $tokens
+     */
+    function _parse_vars_props(&$tokens)
+    {
+        foreach($tokens as $key => $val) {
+            $tokens[$key] = $this->_parse_var_props($val);
+        }
+    }
+
+    /**
+     * compile single variable and section properties token into
+     * PHP code
+     *
+     * @param string $val
+     * @param string $tag_attrs
+     * @return string
+     */
+    function _parse_var_props($val)
+    {
+        $val = trim($val);
+
+        if(preg_match('~^(' . $this->_obj_call_regexp . '|' . $this->_dvar_regexp . ')(' . $this->_mod_regexp . '*)$~', $val, $match)) {
+            // $ variable or object
+            $return = $this->_parse_var($match[1]);
+            $modifiers = $match[2];
+            if (!empty($this->default_modifiers) && !preg_match('~(^|\|)smarty:nodefaults($|\|)~',$modifiers)) {
+                $_default_mod_string = implode('|',(array)$this->default_modifiers);
+                $modifiers = empty($modifiers) ? $_default_mod_string : $_default_mod_string . '|' . $modifiers;
+            }
+            $this->_parse_modifiers($return, $modifiers);
+            return $return;
+        } elseif (preg_match('~^' . $this->_db_qstr_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
+                // double quoted text
+                preg_match('~^(' . $this->_db_qstr_regexp . ')('. $this->_mod_regexp . '*)$~', $val, $match);
+                $return = $this->_expand_quoted_text($match[1]);
+                if($match[2] != '') {
+                    $this->_parse_modifiers($return, $match[2]);
+                }
+                return $return;
+            }
+        elseif(preg_match('~^' . $this->_num_const_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
+                // numerical constant
+                preg_match('~^(' . $this->_num_const_regexp . ')('. $this->_mod_regexp . '*)$~', $val, $match);
+                if($match[2] != '') {
+                    $this->_parse_modifiers($match[1], $match[2]);
+                    return $match[1];
+                }
+            }
+        elseif(preg_match('~^' . $this->_si_qstr_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
+                // single quoted text
+                preg_match('~^(' . $this->_si_qstr_regexp . ')('. $this->_mod_regexp . '*)$~', $val, $match);
+                if($match[2] != '') {
+                    $this->_parse_modifiers($match[1], $match[2]);
+                    return $match[1];
+                }
+            }
+        elseif(preg_match('~^' . $this->_cvar_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
+                // config var
+                return $this->_parse_conf_var($val);
+            }
+        elseif(preg_match('~^' . $this->_svar_regexp . '(?:' . $this->_mod_regexp . '*)$~', $val)) {
+                // section var
+                return $this->_parse_section_prop($val);
+            }
+        elseif(!in_array($val, $this->_permitted_tokens) && !is_numeric($val)) {
+            // literal string
+            return $this->_expand_quoted_text('"' . strtr($val, array('\\' => '\\\\', '"' => '\\"')) .'"');
+        }
+        return $val;
+    }
+
+    /**
+     * expand quoted text with embedded variables
+     *
+     * @param string $var_expr
+     * @return string
+     */
+    function _expand_quoted_text($var_expr)
+    {
+        // if contains unescaped $, expand it
+        if(preg_match_all('~(?:\`(?<!\\\\)\$' . $this->_dvar_guts_regexp . '(?:' . $this->_obj_ext_regexp . ')*\`)|(?:(?<!\\\\)\$\w+(\[[a-zA-Z0-9]+\])*)~', $var_expr, $_match)) {
+            $_match = $_match[0];
+            rsort($_match);
+            reset($_match);
+            foreach($_match as $_var) {
+                $var_expr = str_replace ($_var, '".(' . $this->_parse_var(str_replace('`','',$_var)) . ')."', $var_expr);
+            }
+            $_return = preg_replace('~\.""|(?<!\\\\)""\.~', '', $var_expr);
+        } else {
+            $_return = $var_expr;
+        }
+        // replace double quoted literal string with single quotes
+        $_return = preg_replace('~^"([\s\w]+)"$~',"'\\1'",$_return);
+        return $_return;
+    }
+
+    /**
+     * parse variable expression into PHP code
+     *
+     * @param string $var_expr
+     * @param string $output
+     * @return string
+     */
+    function _parse_var($var_expr)
+    {
+        $_has_math = false;
+        $_math_vars = preg_split('~('.$this->_dvar_math_regexp.'|'.$this->_qstr_regexp.')~', $var_expr, -1, PREG_SPLIT_DELIM_CAPTURE);
+
+        if(count($_math_vars) > 1) {
+            $_first_var = "";
+            $_complete_var = "";
+            $_output = "";
+            // simple check if there is any math, to stop recursion (due to modifiers with "xx % yy" as parameter)
+            foreach($_math_vars as $_k => $_math_var) {
+                $_math_var = $_math_vars[$_k];
+
+                if(!empty($_math_var) || is_numeric($_math_var)) {
+                    // hit a math operator, so process the stuff which came before it
+                    if(preg_match('~^' . $this->_dvar_math_regexp . '$~', $_math_var)) {
+                        $_has_math = true;
+                        if(!empty($_complete_var) || is_numeric($_complete_var)) {
+                            $_output .= $this->_parse_var($_complete_var);
+                        }
+
+                        // just output the math operator to php
+                        $_output .= $_math_var;
+
+                        if(empty($_first_var))
+                            $_first_var = $_complete_var;
+
+                        $_complete_var = "";
+                    } else {
+                        $_complete_var .= $_math_var;
+                    }
+                }
+            }
+            if($_has_math) {
+                if(!empty($_complete_var) || is_numeric($_complete_var))
+                    $_output .= $this->_parse_var($_complete_var);
+
+                // get the modifiers working (only the last var from math + modifier is left)
+                $var_expr = $_complete_var;
+            }
+        }
+
+        // prevent cutting of first digit in the number (we _definitly_ got a number if the first char is a digit)
+        if(is_numeric($var_expr{0}))
+            $_var_ref = $var_expr;
+        else
+            $_var_ref = substr($var_expr, 1);
+        
+        if(!$_has_math) {
+            
+            // get [foo] and .foo and ->foo and (...) pieces
+            preg_match_all('~(?:^\w+)|' . $this->_obj_params_regexp . '|(?:' . $this->_var_bracket_regexp . ')|->\$?\w+|\.\$?\w+|\S+~', $_var_ref, $match);
+                        
+            $_indexes = $match[0];
+            $_var_name = array_shift($_indexes);
+
+            /* Handle $smarty.* variable references as a special case. */
+            if ($_var_name == 'smarty') {
+                /*
+                 * If the reference could be compiled, use the compiled output;
+                 * otherwise, fall back on the $smarty variable generated at
+                 * run-time.
+                 */
+                if (($smarty_ref = $this->_compile_smarty_ref($_indexes)) !== null) {
+                    $_output = $smarty_ref;
+                } else {
+                    $_var_name = substr(array_shift($_indexes), 1);
+                    $_output = "\$this->_smarty_vars['$_var_name']";
+                }
+            } elseif(is_numeric($_var_name) && is_numeric($var_expr{0})) {
+                // because . is the operator for accessing arrays thru inidizes we need to put it together again for floating point numbers
+                if(count($_indexes) > 0)
+                {
+                    $_var_name .= implode("", $_indexes);
+                    $_indexes = array();
+                }
+                $_output = $_var_name;
+            } else {
+                $_output = "\$this->_tpl_vars['$_var_name']";
+            }
+
+            foreach ($_indexes as $_index) {
+                if ($_index{0} == '[') {
+                    $_index = substr($_index, 1, -1);
+                    if (is_numeric($_index)) {
+                        $_output .= "[$_index]";
+                    } elseif ($_index{0} == '$') {
+                        if (strpos($_index, '.') !== false) {
+                            $_output .= '[' . $this->_parse_var($_index) . ']';
+                        } else {
+                            $_output .= "[\$this->_tpl_vars['" . substr($_index, 1) . "']]";
+                        }
+                    } else {
+                        $_var_parts = explode('.', $_index);
+                        $_var_section = $_var_parts[0];
+                        $_var_section_prop = isset($_var_parts[1]) ? $_var_parts[1] : 'index';
+                        $_output .= "[\$this->_sections['$_var_section']['$_var_section_prop']]";
+                    }
+                } else if ($_index{0} == '.') {
+                    if ($_index{1} == '$')
+                        $_output .= "[\$this->_tpl_vars['" . substr($_index, 2) . "']]";
+                    else
+                        $_output .= "['" . substr($_index, 1) . "']";
+                } else if (substr($_index,0,2) == '->') {
+                    if(substr($_index,2,2) == '__') {
+                        $this->_syntax_error('call to internal object members is not allowed', E_USER_ERROR, __FILE__, __LINE__);
+                    } elseif($this->security && substr($_index, 2, 1) == '_') {
+                        $this->_syntax_error('(secure) call to private object member is not allowed', E_USER_ERROR, __FILE__, __LINE__);
+                    } elseif ($_index{2} == '$') {
+                        if ($this->security) {
+                            $this->_syntax_error('(secure) call to dynamic object member is not allowed', E_USER_ERROR, __FILE__, __LINE__);
+                        } else {
+                            $_output .= '->{(($_var=$this->_tpl_vars[\''.substr($_index,3).'\']) && substr($_var,0,2)!=\'__\') ? $_var : $this->trigger_error("cannot access property \\"$_var\\"")}';
+                        }
+                    } else {
+                        $_output .= $_index;
+                    }
+                } elseif ($_index{0} == '(') {
+                    $_index = $this->_parse_parenth_args($_index);
+                    $_output .= $_index;
+                } else {
+                    $_output .= $_index;
+                }
+            }
+        }
+
+        return $_output;
+    }
+
+    /**
+     * parse arguments in function call parenthesis
+     *
+     * @param string $parenth_args
+     * @return string
+     */
+    function _parse_parenth_args($parenth_args)
+    {
+        preg_match_all('~' . $this->_param_regexp . '~',$parenth_args, $match);
+        $orig_vals = $match = $match[0];
+        $this->_parse_vars_props($match);
+        $replace = array();
+        for ($i = 0, $count = count($match); $i < $count; $i++) {
+            $replace[$orig_vals[$i]] = $match[$i];
+        }
+        return strtr($parenth_args, $replace);
+    }
+
+    /**
+     * parse configuration variable expression into PHP code
+     *
+     * @param string $conf_var_expr
+     */
+    function _parse_conf_var($conf_var_expr)
+    {
+        $parts = explode('|', $conf_var_expr, 2);
+        $var_ref = $parts[0];
+        $modifiers = isset($parts[1]) ? $parts[1] : '';
+
+        $var_name = substr($var_ref, 1, -1);
+
+        $output = "\$this->_config[0]['vars']['$var_name']";
+
+        $this->_parse_modifiers($output, $modifiers);
+
+        return $output;
+    }
+
+    /**
+     * parse section property expression into PHP code
+     *
+     * @param string $section_prop_expr
+     * @return string
+     */
+    function _parse_section_prop($section_prop_expr)
+    {
+        $parts = explode('|', $section_prop_expr, 2);
+        $var_ref = $parts[0];
+        $modifiers = isset($parts[1]) ? $parts[1] : '';
+
+        preg_match('!%(\w+)\.(\w+)%!', $var_ref, $match);
+        $section_name = $match[1];
+        $prop_name = $match[2];
+
+        $output = "\$this->_sections['$section_name']['$prop_name']";
+
+        $this->_parse_modifiers($output, $modifiers);
+
+        return $output;
+    }
+
+
+    /**
+     * parse modifier chain into PHP code
+     *
+     * sets $output to parsed modified chain
+     * @param string $output
+     * @param string $modifier_string
+     */
+    function _parse_modifiers(&$output, $modifier_string)
+    {
+        preg_match_all('~\|(@?\w+)((?>:(?:'. $this->_qstr_regexp . '|[^|]+))*)~', '|' . $modifier_string, $_match);
+        list(, $_modifiers, $modifier_arg_strings) = $_match;
+
+        for ($_i = 0, $_for_max = count($_modifiers); $_i < $_for_max; $_i++) {
+            $_modifier_name = $_modifiers[$_i];
+
+            if($_modifier_name == 'smarty') {
+                // skip smarty modifier
+                continue;
+            }
+
+            preg_match_all('~:(' . $this->_qstr_regexp . '|[^:]+)~', $modifier_arg_strings[$_i], $_match);
+            $_modifier_args = $_match[1];
+
+            if ($_modifier_name{0} == '@') {
+                $_map_array = false;
+                $_modifier_name = substr($_modifier_name, 1);
+            } else {
+                $_map_array = true;
+            }
+
+            if (empty($this->_plugins['modifier'][$_modifier_name])
+                && !$this->_get_plugin_filepath('modifier', $_modifier_name)
+                && function_exists($_modifier_name)) {
+                if ($this->security && !in_array($_modifier_name, $this->security_settings['MODIFIER_FUNCS'])) {
+                    $this->_trigger_fatal_error("[plugin] (secure mode) modifier '$_modifier_name' is not allowed" , $this->_current_file, $this->_current_line_no, __FILE__, __LINE__);
+                } else {
+                    $this->_plugins['modifier'][$_modifier_name] = array($_modifier_name,  null, null, false);
+                }
+            }
+            $this->_add_plugin('modifier', $_modifier_name);
+
+            $this->_parse_vars_props($_modifier_args);
+
+            if($_modifier_name == 'default') {
+                // supress notifications of default modifier vars and args
+                if($output{0} == '$') {
+                    $output = '@' . $output;
+                }
+                if(isset($_modifier_args[0]) && $_modifier_args[0]{0} == '$') {
+                    $_modifier_args[0] = '@' . $_modifier_args[0];
+                }
+            }
+            if (count($_modifier_args) > 0)
+                $_modifier_args = ', '.implode(', ', $_modifier_args);
+            else
+                $_modifier_args = '';
+
+            if ($_map_array) {
+                $output = "((is_array(\$_tmp=$output)) ? \$this->_run_mod_handler('$_modifier_name', true, \$_tmp$_modifier_args) : " . $this->_compile_plugin_call('modifier', $_modifier_name) . "(\$_tmp$_modifier_args))";
+
+            } else {
+
+                $output = $this->_compile_plugin_call('modifier', $_modifier_name)."($output$_modifier_args)";
+
+            }
+        }
+    }
+
+
+    /**
+     * add plugin
+     *
+     * @param string $type
+     * @param string $name
+     * @param boolean? $delayed_loading
+     */
+    function _add_plugin($type, $name, $delayed_loading = null)
+    {
+        if (!isset($this->_plugin_info[$type])) {
+            $this->_plugin_info[$type] = array();
+        }
+        if (!isset($this->_plugin_info[$type][$name])) {
+            $this->_plugin_info[$type][$name] = array($this->_current_file,
+                                                      $this->_current_line_no,
+                                                      $delayed_loading);
+        }
+    }
+
+
+    /**
+     * Compiles references of type $smarty.foo
+     *
+     * @param string $indexes
+     * @return string
+     */
+    function _compile_smarty_ref(&$indexes)
+    {
+        /* Extract the reference name. */
+        $_ref = substr($indexes[0], 1);
+        foreach($indexes as $_index_no=>$_index) {
+            if ($_index{0} != '.' && $_index_no<2 || !preg_match('~^(\.|\[|->)~', $_index)) {
+                $this->_syntax_error('$smarty' . implode('', array_slice($indexes, 0, 2)) . ' is an invalid reference', E_USER_ERROR, __FILE__, __LINE__);
+            }
+        }
+
+        switch ($_ref) {
+            case 'now':
+                $compiled_ref = 'time()';
+                $_max_index = 1;
+                break;
+
+            case 'foreach':
+                array_shift($indexes);
+                $_var = $this->_parse_var_props(substr($indexes[0], 1));
+                $_propname = substr($indexes[1], 1);
+                $_max_index = 1;
+                switch ($_propname) {
+                    case 'index':
+                        array_shift($indexes);
+                        $compiled_ref = "(\$this->_foreach[$_var]['iteration']-1)";
+                        break;
+                        
+                    case 'first':
+                        array_shift($indexes);
+                        $compiled_ref = "(\$this->_foreach[$_var]['iteration'] <= 1)";
+                        break;
+
+                    case 'last':
+                        array_shift($indexes);
+                        $compiled_ref = "(\$this->_foreach[$_var]['iteration'] == \$this->_foreach[$_var]['total'])";
+                        break;
+                        
+                    case 'show':
+                        array_shift($indexes);
+                        $compiled_ref = "(\$this->_foreach[$_var]['total'] > 0)";
+                        break;
+                        
+                    default:
+                        unset($_max_index);
+                        $compiled_ref = "\$this->_foreach[$_var]";
+                }
+                break;
+
+            case 'section':
+                array_shift($indexes);
+                $_var = $this->_parse_var_props(substr($indexes[0], 1));
+                $compiled_ref = "\$this->_sections[$_var]";
+                break;
+
+            case 'get':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_GET' : "\$GLOBALS['HTTP_GET_VARS']";
+                break;
+
+            case 'post':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_POST' : "\$GLOBALS['HTTP_POST_VARS']";
+                break;
+
+            case 'cookies':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_COOKIE' : "\$GLOBALS['HTTP_COOKIE_VARS']";
+                break;
+
+            case 'env':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_ENV' : "\$GLOBALS['HTTP_ENV_VARS']";
+                break;
+
+            case 'server':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_SERVER' : "\$GLOBALS['HTTP_SERVER_VARS']";
+                break;
+
+            case 'session':
+                $compiled_ref = ($this->request_use_auto_globals) ? '$_SESSION' : "\$GLOBALS['HTTP_SESSION_VARS']";
+                break;
+
+            /*
+             * These cases are handled either at run-time or elsewhere in the
+             * compiler.
+             */
+            case 'request':
+                if ($this->request_use_auto_globals) {
+                    $compiled_ref = '$_REQUEST';
+                    break;
+                } else {
+                    $this->_init_smarty_vars = true;
+                }
+                return null;
+
+            case 'capture':
+                return null;
+
+            case 'template':
+                $compiled_ref = "'$this->_current_file'";
+                $_max_index = 1;
+                break;
+
+            case 'version':
+                $compiled_ref = "'$this->_version'";
+                $_max_index = 1;
+                break;
+
+            case 'const':
+                if ($this->security && !$this->security_settings['ALLOW_CONSTANTS']) {
+                    $this->_syntax_error("(secure mode) constants not permitted",
+                                         E_USER_WARNING, __FILE__, __LINE__);
+                    return;
+                }
+                array_shift($indexes);
+                if (preg_match('!^\.\w+$!', $indexes[0])) {
+                    $compiled_ref = '@' . substr($indexes[0], 1);
+                } else {
+                    $_val = $this->_parse_var_props(substr($indexes[0], 1));
+                    $compiled_ref = '@constant(' . $_val . ')';
+                }
+                $_max_index = 1;
+                break;
+
+            case 'config':
+                $compiled_ref = "\$this->_config[0]['vars']";
+                $_max_index = 3;
+                break;
+
+            case 'ldelim':
+                $compiled_ref = "'$this->left_delimiter'";
+                break;
+
+            case 'rdelim':
+                $compiled_ref = "'$this->right_delimiter'";
+                break;
+                
+            default:
+                $this->_syntax_error('$smarty.' . $_ref . ' is an unknown reference', E_USER_ERROR, __FILE__, __LINE__);
+                break;
+        }
+
+        if (isset($_max_index) && count($indexes) > $_max_index) {
+            $this->_syntax_error('$smarty' . implode('', $indexes) .' is an invalid reference', E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        array_shift($indexes);
+        return $compiled_ref;
+    }
+
+    /**
+     * compiles call to plugin of type $type with name $name
+     * returns a string containing the function-name or method call
+     * without the paramter-list that would have follow to make the
+     * call valid php-syntax
+     *
+     * @param string $type
+     * @param string $name
+     * @return string
+     */
+    function _compile_plugin_call($type, $name) {
+        if (isset($this->_plugins[$type][$name])) {
+            /* plugin loaded */
+            if (is_array($this->_plugins[$type][$name][0])) {
+                return ((is_object($this->_plugins[$type][$name][0][0])) ?
+                        "\$this->_plugins['$type']['$name'][0][0]->"    /* method callback */
+                        : (string)($this->_plugins[$type][$name][0][0]).'::'    /* class callback */
+                       ). $this->_plugins[$type][$name][0][1];
+
+            } else {
+                /* function callback */
+                return $this->_plugins[$type][$name][0];
+
+            }
+        } else {
+            /* plugin not loaded -> auto-loadable-plugin */
+            return 'smarty_'.$type.'_'.$name;
+
+        }
+    }
+
+    /**
+     * load pre- and post-filters
+     */
+    function _load_filters()
+    {
+        if (count($this->_plugins['prefilter']) > 0) {
+            foreach ($this->_plugins['prefilter'] as $filter_name => $prefilter) {
+                if ($prefilter === false) {
+                    unset($this->_plugins['prefilter'][$filter_name]);
+                    $_params = array('plugins' => array(array('prefilter', $filter_name, null, null, false)));
+                    require_once(SMARTY_CORE_DIR . 'core.load_plugins.php');
+                    smarty_core_load_plugins($_params, $this);
+                }
+            }
+        }
+        if (count($this->_plugins['postfilter']) > 0) {
+            foreach ($this->_plugins['postfilter'] as $filter_name => $postfilter) {
+                if ($postfilter === false) {
+                    unset($this->_plugins['postfilter'][$filter_name]);
+                    $_params = array('plugins' => array(array('postfilter', $filter_name, null, null, false)));
+                    require_once(SMARTY_CORE_DIR . 'core.load_plugins.php');
+                    smarty_core_load_plugins($_params, $this);
+                }
+            }
+        }
+    }
+
+
+    /**
+     * Quote subpattern references
+     *
+     * @param string $string
+     * @return string
+     */
+    function _quote_replace($string)
+    {
+        return strtr($string, array('\\' => '\\\\', '$' => '\\$'));
+    }
+
+    /**
+     * display Smarty syntax error
+     *
+     * @param string $error_msg
+     * @param integer $error_type
+     * @param string $file
+     * @param integer $line
+     */
+    function _syntax_error($error_msg, $error_type = E_USER_ERROR, $file=null, $line=null)
+    {
+        $this->_trigger_fatal_error("syntax error: $error_msg", $this->_current_file, $this->_current_line_no, $file, $line, $error_type);
+    }
+
+
+    /**
+     * check if the compilation changes from cacheable to
+     * non-cacheable state with the beginning of the current
+     * plugin. return php-code to reflect the transition.
+     * @return string
+     */
+    function _push_cacheable_state($type, $name) {
+        $_cacheable = !isset($this->_plugins[$type][$name]) || $this->_plugins[$type][$name][4];
+        if ($_cacheable
+            || 0<$this->_cacheable_state++) return '';
+        if (!isset($this->_cache_serial)) $this->_cache_serial = md5(uniqid('Smarty'));
+        $_ret = 'if ($this->caching && !$this->_cache_including) { echo \'{nocache:'
+            . $this->_cache_serial . '#' . $this->_nocache_count
+            . '}\';}';
+        return $_ret;
+    }
+
+
+    /**
+     * check if the compilation changes from non-cacheable to
+     * cacheable state with the end of the current plugin return
+     * php-code to reflect the transition.
+     * @return string
+     */
+    function _pop_cacheable_state($type, $name) {
+        $_cacheable = !isset($this->_plugins[$type][$name]) || $this->_plugins[$type][$name][4];
+        if ($_cacheable
+            || --$this->_cacheable_state>0) return '';
+        return 'if ($this->caching && !$this->_cache_including) { echo \'{/nocache:'
+            . $this->_cache_serial . '#' . ($this->_nocache_count++)
+            . '}\';}';
+    }
+
+
+    /**
+     * push opening tag-name, file-name and line-number on the tag-stack
+     * @param string the opening tag's name
+     */
+    function _push_tag($open_tag)
+    {
+        array_push($this->_tag_stack, array($open_tag, $this->_current_line_no));
+    }
+
+    /**
+     * pop closing tag-name
+     * raise an error if this stack-top doesn't match with the closing tag
+     * @param string the closing tag's name
+     * @return string the opening tag's name
+     */
+    function _pop_tag($close_tag)
+    {
+        $message = '';
+        if (count($this->_tag_stack)>0) {
+            list($_open_tag, $_line_no) = array_pop($this->_tag_stack);
+            if ($close_tag == $_open_tag) {
+                return $_open_tag;
+            }
+            if ($close_tag == 'if' && ($_open_tag == 'else' || $_open_tag == 'elseif' )) {
+                return $this->_pop_tag($close_tag);
+            }
+            if ($close_tag == 'section' && $_open_tag == 'sectionelse') {
+                $this->_pop_tag($close_tag);
+                return $_open_tag;
+            }
+            if ($close_tag == 'foreach' && $_open_tag == 'foreachelse') {
+                $this->_pop_tag($close_tag);
+                return $_open_tag;
+            }
+            if ($_open_tag == 'else' || $_open_tag == 'elseif') {
+                $_open_tag = 'if';
+            } elseif ($_open_tag == 'sectionelse') {
+                $_open_tag = 'section';
+            } elseif ($_open_tag == 'foreachelse') {
+                $_open_tag = 'foreach';
+            }
+            $message = " expected {/$_open_tag} (opened line $_line_no).";
+        }
+        $this->_syntax_error("mismatched tag {/$close_tag}.$message",
+                             E_USER_ERROR, __FILE__, __LINE__);
+    }
+
+}
+
+/**
+ * compare to values by their string length
+ *
+ * @access private
+ * @param string $a
+ * @param string $b
+ * @return 0|-1|1
+ */
+function _smarty_sort_length($a, $b)
+{
+    if($a == $b)
+        return 0;
+
+    if(strlen($a) == strlen($b))
+        return ($a > $b) ? -1 : 1;
+
+    return (strlen($a) > strlen($b)) ? -1 : 1;
+}
+
+
+/* vim: set et: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/debug.tpl
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/debug.tpl	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/debug.tpl	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,64 +1,64 @@
-{* Smarty *}
-
-{* debug.tpl, last updated version 2.0.1 *}
-
-{assign_debug_info}
-
-{if isset($_smarty_debug_output) and $_smarty_debug_output eq "html"}
-	<table border=0 width=100%>
-	<tr bgcolor=#cccccc><th colspan=2>Smarty Debug Console</th></tr>
-	<tr bgcolor=#cccccc><td colspan=2><b>included templates & config files (load time in seconds):</b></td></tr>
-	{section name=templates loop=$_debug_tpls}
-		<tr bgcolor={if %templates.index% is even}#eeeeee{else}#fafafa{/if}><td colspan=2><tt>{section name=indent loop=$_debug_tpls[templates].depth}&nbsp;&nbsp;&nbsp;{/section}<font color={if $_debug_tpls[templates].type eq "template"}brown{elseif $_debug_tpls[templates].type eq "insert"}black{else}green{/if}>{$_debug_tpls[templates].filename|escape:html}</font>{if isset($_debug_tpls[templates].exec_time)} <font size=-1><i>({$_debug_tpls[templates].exec_time|string_format:"%.5f"}){if %templates.index% eq 0} (total){/if}</i></font>{/if}</tt></td></tr>
-	{sectionelse}
-		<tr bgcolor=#eeeeee><td colspan=2><tt><i>no templates included</i></tt></td></tr>	
-	{/section}
-	<tr bgcolor=#cccccc><td colspan=2><b>assigned template variables:</b></td></tr>
-	{section name=vars loop=$_debug_keys}
-		<tr bgcolor={if %vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=blue>{ldelim}${$_debug_keys[vars]}{rdelim}</font></tt></td><td nowrap><tt><font color=green>{$_debug_vals[vars]|@debug_print_var}</font></tt></td></tr>
-	{sectionelse}
-		<tr bgcolor=#eeeeee><td colspan=2><tt><i>no template variables assigned</i></tt></td></tr>	
-	{/section}
-	<tr bgcolor=#cccccc><td colspan=2><b>assigned config file variables (outer template scope):</b></td></tr>
-	{section name=config_vars loop=$_debug_config_keys}
-		<tr bgcolor={if %config_vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=maroon>{ldelim}#{$_debug_config_keys[config_vars]}#{rdelim}</font></tt></td><td><tt><font color=green>{$_debug_config_vals[config_vars]|@debug_print_var}</font></tt></td></tr>
-	{sectionelse}
-		<tr bgcolor=#eeeeee><td colspan=2><tt><i>no config vars assigned</i></tt></td></tr>	
-	{/section}
-	</table>
-</BODY></HTML>
-{else}
-<SCRIPT language=javascript>
-	if( self.name == '' ) {ldelim}
-	   var title = 'Console';
-	{rdelim}
-	else {ldelim}
-	   var title = 'Console_' + self.name;
-	{rdelim}
-	_smarty_console = window.open("",title.value,"width=680,height=600,resizable,scrollbars=yes");
-	_smarty_console.document.write("<HTML><TITLE>Smarty Debug Console_"+self.name+"</TITLE><BODY bgcolor=#ffffff>");
-	_smarty_console.document.write("<table border=0 width=100%>");
-	_smarty_console.document.write("<tr bgcolor=#cccccc><th colspan=2>Smarty Debug Console</th></tr>");
-	_smarty_console.document.write("<tr bgcolor=#cccccc><td colspan=2><b>included templates & config files (load time in seconds):</b></td></tr>");
-	{section name=templates loop=$_debug_tpls}
-		_smarty_console.document.write("<tr bgcolor={if %templates.index% is even}#eeeeee{else}#fafafa{/if}><td colspan=2><tt>{section name=indent loop=$_debug_tpls[templates].depth}&nbsp;&nbsp;&nbsp;{/section}<font color={if $_debug_tpls[templates].type eq "template"}brown{elseif $_debug_tpls[templates].type eq "insert"}black{else}green{/if}>{$_debug_tpls[templates].filename|escape:html|escape:javascript}</font>{if isset($_debug_tpls[templates].exec_time)} <font size=-1><i>({$_debug_tpls[templates].exec_time|string_format:"%.5f"}){if %templates.index% eq 0} (total){/if}</i></font>{/if}</tt></td></tr>");
-	{sectionelse}
-		_smarty_console.document.write("<tr bgcolor=#eeeeee><td colspan=2><tt><i>no templates included</i></tt></td></tr>");	
-	{/section}
-	_smarty_console.document.write("<tr bgcolor=#cccccc><td colspan=2><b>assigned template variables:</b></td></tr>");
-	{section name=vars loop=$_debug_keys}
-		_smarty_console.document.write("<tr bgcolor={if %vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=blue>{ldelim}${$_debug_keys[vars]}{rdelim}</font></tt></td><td nowrap><tt><font color=green>{$_debug_vals[vars]|@debug_print_var|escape:javascript}</font></tt></td></tr>");
-	{sectionelse}
-		_smarty_console.document.write("<tr bgcolor=#eeeeee><td colspan=2><tt><i>no template variables assigned</i></tt></td></tr>");	
-	{/section}
-	_smarty_console.document.write("<tr bgcolor=#cccccc><td colspan=2><b>assigned config file variables (outer template scope):</b></td></tr>");
-	{section name=config_vars loop=$_debug_config_keys}
-		_smarty_console.document.write("<tr bgcolor={if %config_vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=maroon>{ldelim}#{$_debug_config_keys[config_vars]}#{rdelim}</font></tt></td><td><tt><font color=green>{$_debug_config_vals[config_vars]|@debug_print_var|escape:javascript}</font></tt></td></tr>");
-	{sectionelse}
-		_smarty_console.document.write("<tr bgcolor=#eeeeee><td colspan=2><tt><i>no config vars assigned</i></tt></td></tr>");	
-	{/section}
-	_smarty_console.document.write("</table>");
-	_smarty_console.document.write("</BODY></HTML>");
-	_smarty_console.document.close();
-</SCRIPT>
-{/if}
+{* Smarty *}
+
+{* debug.tpl, last updated version 2.0.1 *}
+
+{assign_debug_info}
+
+{if isset($_smarty_debug_output) and $_smarty_debug_output eq "html"}
+	<table border=0 width=100%>
+	<tr bgcolor=#cccccc><th colspan=2>Smarty Debug Console</th></tr>
+	<tr bgcolor=#cccccc><td colspan=2><b>included templates & config files (load time in seconds):</b></td></tr>
+	{section name=templates loop=$_debug_tpls}
+		<tr bgcolor={if %templates.index% is even}#eeeeee{else}#fafafa{/if}><td colspan=2><tt>{section name=indent loop=$_debug_tpls[templates].depth}&nbsp;&nbsp;&nbsp;{/section}<font color={if $_debug_tpls[templates].type eq "template"}brown{elseif $_debug_tpls[templates].type eq "insert"}black{else}green{/if}>{$_debug_tpls[templates].filename|escape:html}</font>{if isset($_debug_tpls[templates].exec_time)} <font size=-1><i>({$_debug_tpls[templates].exec_time|string_format:"%.5f"}){if %templates.index% eq 0} (total){/if}</i></font>{/if}</tt></td></tr>
+	{sectionelse}
+		<tr bgcolor=#eeeeee><td colspan=2><tt><i>no templates included</i></tt></td></tr>	
+	{/section}
+	<tr bgcolor=#cccccc><td colspan=2><b>assigned template variables:</b></td></tr>
+	{section name=vars loop=$_debug_keys}
+		<tr bgcolor={if %vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=blue>{ldelim}${$_debug_keys[vars]}{rdelim}</font></tt></td><td nowrap><tt><font color=green>{$_debug_vals[vars]|@debug_print_var}</font></tt></td></tr>
+	{sectionelse}
+		<tr bgcolor=#eeeeee><td colspan=2><tt><i>no template variables assigned</i></tt></td></tr>	
+	{/section}
+	<tr bgcolor=#cccccc><td colspan=2><b>assigned config file variables (outer template scope):</b></td></tr>
+	{section name=config_vars loop=$_debug_config_keys}
+		<tr bgcolor={if %config_vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=maroon>{ldelim}#{$_debug_config_keys[config_vars]}#{rdelim}</font></tt></td><td><tt><font color=green>{$_debug_config_vals[config_vars]|@debug_print_var}</font></tt></td></tr>
+	{sectionelse}
+		<tr bgcolor=#eeeeee><td colspan=2><tt><i>no config vars assigned</i></tt></td></tr>	
+	{/section}
+	</table>
+</BODY></HTML>
+{else}
+<SCRIPT language=javascript>
+	if( self.name == '' ) {ldelim}
+	   var title = 'Console';
+	{rdelim}
+	else {ldelim}
+	   var title = 'Console_' + self.name;
+	{rdelim}
+	_smarty_console = window.open("",title.value,"width=680,height=600,resizable,scrollbars=yes");
+	_smarty_console.document.write("<HTML><HEAD><TITLE>Smarty Debug Console_"+self.name+"</TITLE></HEAD><BODY bgcolor=#ffffff>");
+	_smarty_console.document.write("<table border=0 width=100%>");
+	_smarty_console.document.write("<tr bgcolor=#cccccc><th colspan=2>Smarty Debug Console</th></tr>");
+	_smarty_console.document.write("<tr bgcolor=#cccccc><td colspan=2><b>included templates & config files (load time in seconds):</b></td></tr>");
+	{section name=templates loop=$_debug_tpls}
+		_smarty_console.document.write("<tr bgcolor={if %templates.index% is even}#eeeeee{else}#fafafa{/if}><td colspan=2><tt>{section name=indent loop=$_debug_tpls[templates].depth}&nbsp;&nbsp;&nbsp;{/section}<font color={if $_debug_tpls[templates].type eq "template"}brown{elseif $_debug_tpls[templates].type eq "insert"}black{else}green{/if}>{$_debug_tpls[templates].filename|escape:html|escape:javascript}</font>{if isset($_debug_tpls[templates].exec_time)} <font size=-1><i>({$_debug_tpls[templates].exec_time|string_format:"%.5f"}){if %templates.index% eq 0} (total){/if}</i></font>{/if}</tt></td></tr>");
+	{sectionelse}
+		_smarty_console.document.write("<tr bgcolor=#eeeeee><td colspan=2><tt><i>no templates included</i></tt></td></tr>");	
+	{/section}
+	_smarty_console.document.write("<tr bgcolor=#cccccc><td colspan=2><b>assigned template variables:</b></td></tr>");
+	{section name=vars loop=$_debug_keys}
+		_smarty_console.document.write("<tr bgcolor={if %vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=blue>{ldelim}${$_debug_keys[vars]}{rdelim}</font></tt></td><td nowrap><tt><font color=green>{$_debug_vals[vars]|@debug_print_var|escape:javascript}</font></tt></td></tr>");
+	{sectionelse}
+		_smarty_console.document.write("<tr bgcolor=#eeeeee><td colspan=2><tt><i>no template variables assigned</i></tt></td></tr>");	
+	{/section}
+	_smarty_console.document.write("<tr bgcolor=#cccccc><td colspan=2><b>assigned config file variables (outer template scope):</b></td></tr>");
+	{section name=config_vars loop=$_debug_config_keys}
+		_smarty_console.document.write("<tr bgcolor={if %config_vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=maroon>{ldelim}#{$_debug_config_keys[config_vars]}#{rdelim}</font></tt></td><td><tt><font color=green>{$_debug_config_vals[config_vars]|@debug_print_var|escape:javascript}</font></tt></td></tr>");
+	{sectionelse}
+		_smarty_console.document.write("<tr bgcolor=#eeeeee><td colspan=2><tt><i>no config vars assigned</i></tt></td></tr>");	
+	{/section}
+	_smarty_console.document.write("</table>");
+	_smarty_console.document.write("</BODY></HTML>");
+	_smarty_console.document.close();
+</SCRIPT>
+{/if}

Copied: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/internals (from rev 14, XoopsCore/tags/121199-upd3rdparty-1/htdocs/class/smarty/internals)

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/block.textformat.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/block.textformat.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/block.textformat.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,102 +1,102 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-/**
- * Smarty {textformat}{/textformat} block plugin
- *
- * Type:     block function<br>
- * Name:     textformat<br>
- * Purpose:  format text a certain way with preset styles
- *           or custom wrap/indent settings<br>
- * @link http://smarty.php.net/manual/en/language.function.textformat.php {textformat}
- *       (Smarty online manual)
- * @param array
- * <pre>
- * Params:   style: string (email)
- *           indent: integer (0)
- *           wrap: integer (80)
- *           wrap_char string ("\n")
- *           indent_char: string (" ")
- *           wrap_boundary: boolean (true)
- * </pre>
- * @param string contents of the block
- * @param Smarty clever simulation of a method
- * @return string string $content re-formatted
- */
-function smarty_block_textformat($params, $content, &$smarty)
-{
-    if (is_null($content)) {
-        return;
-    }
-
-    $style = null;
-    $indent = 0;
-    $indent_first = 0;
-    $indent_char = ' ';
-    $wrap = 80;
-    $wrap_char = "\n";
-    $wrap_cut = false;
-    $assign = null;
-    
-    foreach ($params as $_key => $_val) {
-        switch ($_key) {
-            case 'style':
-            case 'indent_char':
-            case 'wrap_char':
-            case 'assign':
-                $$_key = (string)$_val;
-                break;
-
-            case 'indent':
-            case 'indent_first':
-            case 'wrap':
-                $$_key = (int)$_val;
-                break;
-
-            case 'wrap_cut':
-                $$_key = (bool)$_val;
-                break;
-
-            default:
-                $smarty->trigger_error("textformat: unknown attribute '$_key'");
-        }
-    }
-
-    if ($style == 'email') {
-        $wrap = 72;
-    }
-
-    // split into paragraphs
-    $_paragraphs = preg_split('![\r\n][\r\n]!',$content);
-    $_output = '';
-
-    for($_x = 0, $_y = count($_paragraphs); $_x < $_y; $_x++) {
-        if ($_paragraphs[$_x] == '') {
-            continue;
-        }
-        // convert mult. spaces & special chars to single space
-        $_paragraphs[$_x] = preg_replace(array('!\s+!','!(^\s+)|(\s+$)!'), array(' ',''), $_paragraphs[$_x]);
-        // indent first line
-        if($indent_first > 0) {
-            $_paragraphs[$_x] = str_repeat($indent_char, $indent_first) . $_paragraphs[$_x];
-        }
-        // wordwrap sentences
-        $_paragraphs[$_x] = wordwrap($_paragraphs[$_x], $wrap - $indent, $wrap_char, $wrap_cut);
-        // indent lines
-        if($indent > 0) {
-            $_paragraphs[$_x] = preg_replace('!^!m', str_repeat($indent_char, $indent), $_paragraphs[$_x]);
-        }
-    }
-    $_output = implode($wrap_char . $wrap_char, $_paragraphs);
-
-    return $assign ? $smarty->assign($assign, $_output) : $_output;
-
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {textformat}{/textformat} block plugin
+ *
+ * Type:     block function<br>
+ * Name:     textformat<br>
+ * Purpose:  format text a certain way with preset styles
+ *           or custom wrap/indent settings<br>
+ * @link http://smarty.php.net/manual/en/language.function.textformat.php {textformat}
+ *       (Smarty online manual)
+ * @param array
+ * <pre>
+ * Params:   style: string (email)
+ *           indent: integer (0)
+ *           wrap: integer (80)
+ *           wrap_char string ("\n")
+ *           indent_char: string (" ")
+ *           wrap_boundary: boolean (true)
+ * </pre>
+ * @param string contents of the block
+ * @param Smarty clever simulation of a method
+ * @return string string $content re-formatted
+ */
+function smarty_block_textformat($params, $content, &$smarty)
+{
+    if (is_null($content)) {
+        return;
+    }
+
+    $style = null;
+    $indent = 0;
+    $indent_first = 0;
+    $indent_char = ' ';
+    $wrap = 80;
+    $wrap_char = "\n";
+    $wrap_cut = false;
+    $assign = null;
+    
+    foreach ($params as $_key => $_val) {
+        switch ($_key) {
+            case 'style':
+            case 'indent_char':
+            case 'wrap_char':
+            case 'assign':
+                $$_key = (string)$_val;
+                break;
+
+            case 'indent':
+            case 'indent_first':
+            case 'wrap':
+                $$_key = (int)$_val;
+                break;
+
+            case 'wrap_cut':
+                $$_key = (bool)$_val;
+                break;
+
+            default:
+                $smarty->trigger_error("textformat: unknown attribute '$_key'");
+        }
+    }
+
+    if ($style == 'email') {
+        $wrap = 72;
+    }
+
+    // split into paragraphs
+    $_paragraphs = preg_split('![\r\n][\r\n]!',$content);
+    $_output = '';
+
+    for($_x = 0, $_y = count($_paragraphs); $_x < $_y; $_x++) {
+        if ($_paragraphs[$_x] == '') {
+            continue;
+        }
+        // convert mult. spaces & special chars to single space
+        $_paragraphs[$_x] = preg_replace(array('!\s+!','!(^\s+)|(\s+$)!'), array(' ',''), $_paragraphs[$_x]);
+        // indent first line
+        if($indent_first > 0) {
+            $_paragraphs[$_x] = str_repeat($indent_char, $indent_first) . $_paragraphs[$_x];
+        }
+        // wordwrap sentences
+        $_paragraphs[$_x] = wordwrap($_paragraphs[$_x], $wrap - $indent, $wrap_char, $wrap_cut);
+        // indent lines
+        if($indent > 0) {
+            $_paragraphs[$_x] = preg_replace('!^!m', str_repeat($indent_char, $indent), $_paragraphs[$_x]);
+        }
+    }
+    $_output = implode($wrap_char . $wrap_char, $_paragraphs);
+
+    return $assign ? $smarty->assign($assign, $_output) : $_output;
+
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/compiler.assign.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/compiler.assign.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/compiler.assign.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,38 +1,38 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-/**
- * Smarty {assign} compiler function plugin
- *
- * Type:     compiler function<br>
- * Name:     assign<br>
- * Purpose:  assign a value to a template variable
- * @link http://smarty.php.net/manual/en/language.custom.functions.php#LANGUAGE.FUNCTION.ASSIGN {assign}
- *       (Smarty online manual)
- * @param string containing var-attribute and value-attribute
- * @param Smarty_Compiler
- */
-function smarty_compiler_assign($tag_attrs, &$compiler)
-{
-    $_params = $compiler->_parse_attrs($tag_attrs);
-
-    if (!isset($_params['var'])) {
-        $compiler->_syntax_error("assign: missing 'var' parameter", E_USER_WARNING);
-        return;
-    }
-
-    if (!isset($_params['value'])) {
-        $compiler->_syntax_error("assign: missing 'value' parameter", E_USER_WARNING);
-        return;
-    }
-
-    return "\$this->assign({$_params['var']}, {$_params['value']});";
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {assign} compiler function plugin
+ *
+ * Type:     compiler function<br>
+ * Name:     assign<br>
+ * Purpose:  assign a value to a template variable
+ * @link http://smarty.php.net/manual/en/language.custom.functions.php#LANGUAGE.FUNCTION.ASSIGN {assign}
+ *       (Smarty online manual)
+ * @param string containing var-attribute and value-attribute
+ * @param Smarty_Compiler
+ */
+function smarty_compiler_assign($tag_attrs, &$compiler)
+{
+    $_params = $compiler->_parse_attrs($tag_attrs);
+
+    if (!isset($_params['var'])) {
+        $compiler->_syntax_error("assign: missing 'var' parameter", E_USER_WARNING);
+        return;
+    }
+
+    if (!isset($_params['value'])) {
+        $compiler->_syntax_error("assign: missing 'value' parameter", E_USER_WARNING);
+        return;
+    }
+
+    return "\$this->assign({$_params['var']}, {$_params['value']});";
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.assign_debug_info.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.assign_debug_info.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.assign_debug_info.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,39 +1,39 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-/**
- * Smarty {assign_debug_info} function plugin
- *
- * Type:     function<br>
- * Name:     assign_debug_info<br>
- * Purpose:  assign debug info to the template<br>
- * @param array unused in this plugin, this plugin uses {@link Smarty::$_config},
- *              {@link Smarty::$_tpl_vars} and {@link Smarty::$_smarty_debug_info}
- * @param Smarty
- */
-function smarty_function_assign_debug_info($params, &$smarty)
-{
-    $assigned_vars = $smarty->_tpl_vars;
-    ksort($assigned_vars);
-    if (@is_array($smarty->_config[0])) {
-        $config_vars = $smarty->_config[0];
-        ksort($config_vars);
-        $smarty->assign("_debug_config_keys", array_keys($config_vars));
-        $smarty->assign("_debug_config_vals", array_values($config_vars));
-    }
-    
-    $included_templates = $smarty->_smarty_debug_info;
-    
-    $smarty->assign("_debug_keys", array_keys($assigned_vars));
-    $smarty->assign("_debug_vals", array_values($assigned_vars));
-    
-    $smarty->assign("_debug_tpls", $included_templates);
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {assign_debug_info} function plugin
+ *
+ * Type:     function<br>
+ * Name:     assign_debug_info<br>
+ * Purpose:  assign debug info to the template<br>
+ * @param array unused in this plugin, this plugin uses {@link Smarty::$_config},
+ *              {@link Smarty::$_tpl_vars} and {@link Smarty::$_smarty_debug_info}
+ * @param Smarty
+ */
+function smarty_function_assign_debug_info($params, &$smarty)
+{
+    $assigned_vars = $smarty->_tpl_vars;
+    ksort($assigned_vars);
+    if (@is_array($smarty->_config[0])) {
+        $config_vars = $smarty->_config[0];
+        ksort($config_vars);
+        $smarty->assign("_debug_config_keys", array_keys($config_vars));
+        $smarty->assign("_debug_config_vals", array_values($config_vars));
+    }
+    
+    $included_templates = $smarty->_smarty_debug_info;
+    
+    $smarty->assign("_debug_keys", array_keys($assigned_vars));
+    $smarty->assign("_debug_vals", array_values($assigned_vars));
+    
+    $smarty->assign("_debug_tpls", $included_templates);
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.config_load.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.config_load.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.config_load.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,140 +1,140 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-/**
- * Smarty {config_load} function plugin
- *
- * Type:     function<br>
- * Name:     config_load<br>
- * Purpose:  load config file vars
- * @link http://smarty.php.net/manual/en/language.function.config.load.php {config_load}
- *       (Smarty online manual)
- * @param array Format:
- * <pre>
- * array('file' => required config file name,
- *       'section' => optional config file section to load
- *       'scope' => local/parent/global
- *       'global' => overrides scope, setting to parent if true)
- * </pre>
- * @param Smarty
- */
-function smarty_function_config_load($params, &$smarty)
-{
-        if ($smarty->debugging) {
-            $_params = array();
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
-            $_debug_start_time = smarty_core_get_microtime($_params, $smarty);
-        }
-
-        $_file = isset($params['file']) ? $smarty->_dequote($params['file']) : null;
-        $_section = isset($params['section']) ? $smarty->_dequote($params['section']) : null;
-        $_scope = isset($params['scope']) ? $smarty->_dequote($params['scope']) : 'global';
-        $_global = isset($params['global']) ? $smarty->_dequote($params['global']) : false;
-
-        if (!isset($_file) || strlen($_file) == 0) {
-            $smarty->trigger_error("missing 'file' attribute in config_load tag", E_USER_ERROR, __FILE__, __LINE__);
-        }
-
-        if (isset($_scope)) {
-            if ($_scope != 'local' &&
-                $_scope != 'parent' &&
-                $_scope != 'global') {
-                $smarty->trigger_error("invalid 'scope' attribute value", E_USER_ERROR, __FILE__, __LINE__);
-            }
-        } else {
-            if ($_global) {
-                $_scope = 'parent';
-            } else {
-                $_scope = 'local';
-            }
-        }
-
-        $_params = array('resource_name' => $_file,
-                         'resource_base_path' => $smarty->config_dir,
-                         'get_source' => false);
-        $smarty->_parse_resource_name($_params);
-        $_file_path = $_params['resource_type'] . ':' . $_params['resource_name'];
-        if (isset($_section))
-            $_compile_file = $smarty->_get_compile_path($_file_path.'|'.$_section);
-        else
-            $_compile_file = $smarty->_get_compile_path($_file_path);
-
-        if($smarty->force_compile || !file_exists($_compile_file)) {
-            $_compile = true;
-        } elseif ($smarty->compile_check) {
-            $_params = array('resource_name' => $_file,
-                             'resource_base_path' => $smarty->config_dir,
-                             'get_source' => false);
-            $_compile = $smarty->_fetch_resource_info($_params) &&
-                $_params['resource_timestamp'] > filemtime($_compile_file);
-        } else {
-            $_compile = false;
-        }
-
-        if($_compile) {
-            // compile config file
-            if(!is_object($smarty->_conf_obj)) {
-                require_once SMARTY_DIR . $smarty->config_class . '.class.php';
-                $smarty->_conf_obj = new $smarty->config_class();
-                $smarty->_conf_obj->overwrite = $smarty->config_overwrite;
-                $smarty->_conf_obj->booleanize = $smarty->config_booleanize;
-                $smarty->_conf_obj->read_hidden = $smarty->config_read_hidden;
-                $smarty->_conf_obj->fix_newlines = $smarty->config_fix_newlines;
-            }
-
-            $_params = array('resource_name' => $_file,
-                             'resource_base_path' => $smarty->config_dir,
-                             $_params['get_source'] = true);
-            if (!$smarty->_fetch_resource_info($_params)) {
-                return;
-            }
-            $smarty->_conf_obj->set_file_contents($_file, $_params['source_content']);
-            $_config_vars = array_merge($smarty->_conf_obj->get($_file),
-                    $smarty->_conf_obj->get($_file, $_section));
-            if(function_exists('var_export')) {
-                $_output = '<?php $_config_vars = ' . var_export($_config_vars, true) . '; ?>';
-            } else {
-                $_output = '<?php $_config_vars = unserialize(\'' . strtr(serialize($_config_vars),array('\''=>'\\\'', '\\'=>'\\\\')) . '\'); ?>';
-            }
-            $_params = (array('compile_path' => $_compile_file, 'compiled_content' => $_output, 'resource_timestamp' => $_params['resource_timestamp']));
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.write_compiled_resource.php');
-            smarty_core_write_compiled_resource($_params, $smarty);
-        } else {
-            include($_compile_file);
-        }
-
-        if ($smarty->caching) {
-            $smarty->_cache_info['config'][$_file] = true;
-        }
-
-        $smarty->_config[0]['vars'] = @array_merge($smarty->_config[0]['vars'], $_config_vars);
-        $smarty->_config[0]['files'][$_file] = true;
-
-        if ($_scope == 'parent') {
-                $smarty->_config[1]['vars'] = @array_merge($smarty->_config[1]['vars'], $_config_vars);
-                $smarty->_config[1]['files'][$_file] = true;
-        } else if ($_scope == 'global') {
-            for ($i = 1, $for_max = count($smarty->_config); $i < $for_max; $i++) {
-                $smarty->_config[$i]['vars'] = @array_merge($smarty->_config[$i]['vars'], $_config_vars);
-                $smarty->_config[$i]['files'][$_file] = true;
-            }
-        }
-
-        if ($smarty->debugging) {
-            $_params = array();
-            require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.get_microtime.php');
-            $smarty->_smarty_debug_info[] = array('type'      => 'config',
-                                                'filename'  => $_file.' ['.$_section.'] '.$_scope,
-                                                'depth'     => $smarty->_inclusion_depth,
-                                                'exec_time' => smarty_core_get_microtime($_params, $smarty) - $_debug_start_time);
-        }
-
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {config_load} function plugin
+ *
+ * Type:     function<br>
+ * Name:     config_load<br>
+ * Purpose:  load config file vars
+ * @link http://smarty.php.net/manual/en/language.function.config.load.php {config_load}
+ *       (Smarty online manual)
+ * @param array Format:
+ * <pre>
+ * array('file' => required config file name,
+ *       'section' => optional config file section to load
+ *       'scope' => local/parent/global
+ *       'global' => overrides scope, setting to parent if true)
+ * </pre>
+ * @param Smarty
+ */
+function smarty_function_config_load($params, &$smarty)
+{
+        if ($smarty->debugging) {
+            $_params = array();
+            require_once(SMARTY_CORE_DIR . 'core.get_microtime.php');
+            $_debug_start_time = smarty_core_get_microtime($_params, $smarty);
+        }
+
+        $_file = isset($params['file']) ? $smarty->_dequote($params['file']) : null;
+        $_section = isset($params['section']) ? $smarty->_dequote($params['section']) : null;
+        $_scope = isset($params['scope']) ? $smarty->_dequote($params['scope']) : 'global';
+        $_global = isset($params['global']) ? $smarty->_dequote($params['global']) : false;
+
+        if (!isset($_file) || strlen($_file) == 0) {
+            $smarty->trigger_error("missing 'file' attribute in config_load tag", E_USER_ERROR, __FILE__, __LINE__);
+        }
+
+        if (isset($_scope)) {
+            if ($_scope != 'local' &&
+                $_scope != 'parent' &&
+                $_scope != 'global') {
+                $smarty->trigger_error("invalid 'scope' attribute value", E_USER_ERROR, __FILE__, __LINE__);
+            }
+        } else {
+            if ($_global) {
+                $_scope = 'parent';
+            } else {
+                $_scope = 'local';
+            }
+        }
+
+        $_params = array('resource_name' => $_file,
+                         'resource_base_path' => $smarty->config_dir,
+                         'get_source' => false);
+        $smarty->_parse_resource_name($_params);
+        $_file_path = $_params['resource_type'] . ':' . $_params['resource_name'];
+        if (isset($_section))
+            $_compile_file = $smarty->_get_compile_path($_file_path.'|'.$_section);
+        else
+            $_compile_file = $smarty->_get_compile_path($_file_path);
+
+        if($smarty->force_compile || !file_exists($_compile_file)) {
+            $_compile = true;
+        } elseif ($smarty->compile_check) {
+            $_params = array('resource_name' => $_file,
+                             'resource_base_path' => $smarty->config_dir,
+                             'get_source' => false);
+            $_compile = $smarty->_fetch_resource_info($_params) &&
+                $_params['resource_timestamp'] > filemtime($_compile_file);
+        } else {
+            $_compile = false;
+        }
+
+        if($_compile) {
+            // compile config file
+            if(!is_object($smarty->_conf_obj)) {
+                require_once SMARTY_DIR . $smarty->config_class . '.class.php';
+                $smarty->_conf_obj = new $smarty->config_class();
+                $smarty->_conf_obj->overwrite = $smarty->config_overwrite;
+                $smarty->_conf_obj->booleanize = $smarty->config_booleanize;
+                $smarty->_conf_obj->read_hidden = $smarty->config_read_hidden;
+                $smarty->_conf_obj->fix_newlines = $smarty->config_fix_newlines;
+            }
+
+            $_params = array('resource_name' => $_file,
+                             'resource_base_path' => $smarty->config_dir,
+                             $_params['get_source'] = true);
+            if (!$smarty->_fetch_resource_info($_params)) {
+                return;
+            }
+            $smarty->_conf_obj->set_file_contents($_file, $_params['source_content']);
+            $_config_vars = array_merge($smarty->_conf_obj->get($_file),
+                    $smarty->_conf_obj->get($_file, $_section));
+            if(function_exists('var_export')) {
+                $_output = '<?php $_config_vars = ' . var_export($_config_vars, true) . '; ?>';
+            } else {
+                $_output = '<?php $_config_vars = unserialize(\'' . strtr(serialize($_config_vars),array('\''=>'\\\'', '\\'=>'\\\\')) . '\'); ?>';
+            }
+            $_params = (array('compile_path' => $_compile_file, 'compiled_content' => $_output, 'resource_timestamp' => $_params['resource_timestamp']));
+            require_once(SMARTY_CORE_DIR . 'core.write_compiled_resource.php');
+            smarty_core_write_compiled_resource($_params, $smarty);
+        } else {
+            include($_compile_file);
+        }
+
+        if ($smarty->caching) {
+            $smarty->_cache_info['config'][$_file] = true;
+        }
+
+        $smarty->_config[0]['vars'] = @array_merge($smarty->_config[0]['vars'], $_config_vars);
+        $smarty->_config[0]['files'][$_file] = true;
+
+        if ($_scope == 'parent') {
+                $smarty->_config[1]['vars'] = @array_merge($smarty->_config[1]['vars'], $_config_vars);
+                $smarty->_config[1]['files'][$_file] = true;
+        } else if ($_scope == 'global') {
+            for ($i = 1, $for_max = count($smarty->_config); $i < $for_max; $i++) {
+                $smarty->_config[$i]['vars'] = @array_merge($smarty->_config[$i]['vars'], $_config_vars);
+                $smarty->_config[$i]['files'][$_file] = true;
+            }
+        }
+
+        if ($smarty->debugging) {
+            $_params = array();
+            require_once(SMARTY_CORE_DIR . 'core.get_microtime.php');
+            $smarty->_smarty_debug_info[] = array('type'      => 'config',
+                                                'filename'  => $_file.' ['.$_section.'] '.$_scope,
+                                                'depth'     => $smarty->_inclusion_depth,
+                                                'exec_time' => smarty_core_get_microtime($_params, $smarty) - $_debug_start_time);
+        }
+
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.counter.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.counter.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.counter.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,79 +1,79 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {counter} function plugin
- *
- * Type:     function<br>
- * Name:     counter<br>
- * Purpose:  print out a counter value
- * @link http://smarty.php.net/manual/en/language.function.counter.php {counter}
- *       (Smarty online manual)
- * @param array parameters
- * @param Smarty
- * @return string|null
- */
-function smarty_function_counter($params, &$smarty)
-{
-    static $counters = array();
-
-    $name = (isset($params['name'])) ? $params['name'] : 'default';
-    if (!isset($counters[$name])) {
-        $counters[$name] = array(
-            'start'=>1,
-            'skip'=>1,
-            'direction'=>'up',
-            'count'=>1
-            );
-    }
-    $counter =& $counters[$name];
-
-    if (isset($params['start'])) {
-        $counter['start'] = $counter['count'] = (int)$params['start'];
-    }
-
-    if (!empty($params['assign'])) {
-        $counter['assign'] = $params['assign'];
-    }
-
-    if (isset($counter['assign'])) {
-        $smarty->assign($counter['assign'], $counter['count']);
-    }
-    
-    if (isset($params['print'])) {
-        $print = (bool)$params['print'];
-    } else {
-        $print = empty($counter['assign']);
-    }
-
-    if ($print) {
-        $retval = $counter['count'];
-    } else {
-        $retval = null;
-    }
-
-    if (isset($params['skip'])) {
-        $counter['skip'] = $params['skip'];
-    }
-    
-    if (isset($params['direction'])) {
-        $counter['direction'] = $params['direction'];
-    }
-
-    if ($counter['direction'] == "down")
-        $counter['count'] -= $counter['skip'];
-    else
-        $counter['count'] += $counter['skip'];
-    
-    return $retval;
-    
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {counter} function plugin
+ *
+ * Type:     function<br>
+ * Name:     counter<br>
+ * Purpose:  print out a counter value
+ * @link http://smarty.php.net/manual/en/language.function.counter.php {counter}
+ *       (Smarty online manual)
+ * @param array parameters
+ * @param Smarty
+ * @return string|null
+ */
+function smarty_function_counter($params, &$smarty)
+{
+    static $counters = array();
+
+    $name = (isset($params['name'])) ? $params['name'] : 'default';
+    if (!isset($counters[$name])) {
+        $counters[$name] = array(
+            'start'=>1,
+            'skip'=>1,
+            'direction'=>'up',
+            'count'=>1
+            );
+    }
+    $counter =& $counters[$name];
+
+    if (isset($params['start'])) {
+        $counter['start'] = $counter['count'] = (int)$params['start'];
+    }
+
+    if (!empty($params['assign'])) {
+        $counter['assign'] = $params['assign'];
+    }
+
+    if (isset($counter['assign'])) {
+        $smarty->assign($counter['assign'], $counter['count']);
+    }
+    
+    if (isset($params['print'])) {
+        $print = (bool)$params['print'];
+    } else {
+        $print = empty($counter['assign']);
+    }
+
+    if ($print) {
+        $retval = $counter['count'];
+    } else {
+        $retval = null;
+    }
+
+    if (isset($params['skip'])) {
+        $counter['skip'] = $params['skip'];
+    }
+    
+    if (isset($params['direction'])) {
+        $counter['direction'] = $params['direction'];
+    }
+
+    if ($counter['direction'] == "down")
+        $counter['count'] -= $counter['skip'];
+    else
+        $counter['count'] += $counter['skip'];
+    
+    return $retval;
+    
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.cycle.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.cycle.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.cycle.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,102 +1,102 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-/**
- * Smarty {cycle} function plugin
- *
- * Type:     function<br>
- * Name:     cycle<br>
- * Date:     May 3, 2002<br>
- * Purpose:  cycle through given values<br>
- * Input:
- *         - name = name of cycle (optional)
- *         - values = comma separated list of values to cycle,
- *                    or an array of values to cycle
- *                    (this can be left out for subsequent calls)
- *         - reset = boolean - resets given var to true
- *         - print = boolean - print var or not. default is true
- *         - advance = boolean - whether or not to advance the cycle
- *         - delimiter = the value delimiter, default is ","
- *         - assign = boolean, assigns to template var instead of
- *                    printed.
- *
- * Examples:<br>
- * <pre>
- * {cycle values="#eeeeee,#d0d0d0d"}
- * {cycle name=row values="one,two,three" reset=true}
- * {cycle name=row}
- * </pre>
- * @link http://smarty.php.net/manual/en/language.function.cycle.php {cycle}
- *       (Smarty online manual)
- * @author Monte Ohrt <monte at ispi.net>
- * @author credit to Mark Priatel <mpriatel at rogers.com>
- * @author credit to Gerard <gerard at interfold.com>
- * @author credit to Jason Sweat <jsweat_php at yahoo.com>
- * @version  1.3
- * @param array
- * @param Smarty
- * @return string|null
- */
-function smarty_function_cycle($params, &$smarty)
-{
-    static $cycle_vars;
-    
-    $name = (empty($params['name'])) ? 'default' : $params['name'];
-    $print = (isset($params['print'])) ? (bool)$params['print'] : true;
-    $advance = (isset($params['advance'])) ? (bool)$params['advance'] : true;
-    $reset = (isset($params['reset'])) ? (bool)$params['reset'] : false;
-            
-    if (!in_array('values', array_keys($params))) {
-        if(!isset($cycle_vars[$name]['values'])) {
-            $smarty->trigger_error("cycle: missing 'values' parameter");
-            return;
-        }
-    } else {
-        if(isset($cycle_vars[$name]['values'])
-            && $cycle_vars[$name]['values'] != $params['values'] ) {
-            $cycle_vars[$name]['index'] = 0;
-        }
-        $cycle_vars[$name]['values'] = $params['values'];
-    }
-
-    $cycle_vars[$name]['delimiter'] = (isset($params['delimiter'])) ? $params['delimiter'] : ',';
-    
-    if(is_array($cycle_vars[$name]['values'])) {
-        $cycle_array = $cycle_vars[$name]['values'];
-    } else {
-        $cycle_array = explode($cycle_vars[$name]['delimiter'],$cycle_vars[$name]['values']);
-    }
-    
-    if(!isset($cycle_vars[$name]['index']) || $reset ) {
-        $cycle_vars[$name]['index'] = 0;
-    }
-    
-    if (isset($params['assign'])) {
-        $print = false;
-        $smarty->assign($params['assign'], $cycle_array[$cycle_vars[$name]['index']]);
-    }
-        
-    if($print) {
-        $retval = $cycle_array[$cycle_vars[$name]['index']];
-    } else {
-        $retval = null;
-    }
-
-    if($advance) {
-        if ( $cycle_vars[$name]['index'] >= count($cycle_array) -1 ) {
-            $cycle_vars[$name]['index'] = 0;
-        } else {
-            $cycle_vars[$name]['index']++;
-        }
-    }
-    
-    return $retval;
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {cycle} function plugin
+ *
+ * Type:     function<br>
+ * Name:     cycle<br>
+ * Date:     May 3, 2002<br>
+ * Purpose:  cycle through given values<br>
+ * Input:
+ *         - name = name of cycle (optional)
+ *         - values = comma separated list of values to cycle,
+ *                    or an array of values to cycle
+ *                    (this can be left out for subsequent calls)
+ *         - reset = boolean - resets given var to true
+ *         - print = boolean - print var or not. default is true
+ *         - advance = boolean - whether or not to advance the cycle
+ *         - delimiter = the value delimiter, default is ","
+ *         - assign = boolean, assigns to template var instead of
+ *                    printed.
+ *
+ * Examples:<br>
+ * <pre>
+ * {cycle values="#eeeeee,#d0d0d0d"}
+ * {cycle name=row values="one,two,three" reset=true}
+ * {cycle name=row}
+ * </pre>
+ * @link http://smarty.php.net/manual/en/language.function.cycle.php {cycle}
+ *       (Smarty online manual)
+ * @author Monte Ohrt <monte at ohrt dot com>
+ * @author credit to Mark Priatel <mpriatel at rogers.com>
+ * @author credit to Gerard <gerard at interfold.com>
+ * @author credit to Jason Sweat <jsweat_php at yahoo.com>
+ * @version  1.3
+ * @param array
+ * @param Smarty
+ * @return string|null
+ */
+function smarty_function_cycle($params, &$smarty)
+{
+    static $cycle_vars;
+    
+    $name = (empty($params['name'])) ? 'default' : $params['name'];
+    $print = (isset($params['print'])) ? (bool)$params['print'] : true;
+    $advance = (isset($params['advance'])) ? (bool)$params['advance'] : true;
+    $reset = (isset($params['reset'])) ? (bool)$params['reset'] : false;
+            
+    if (!in_array('values', array_keys($params))) {
+        if(!isset($cycle_vars[$name]['values'])) {
+            $smarty->trigger_error("cycle: missing 'values' parameter");
+            return;
+        }
+    } else {
+        if(isset($cycle_vars[$name]['values'])
+            && $cycle_vars[$name]['values'] != $params['values'] ) {
+            $cycle_vars[$name]['index'] = 0;
+        }
+        $cycle_vars[$name]['values'] = $params['values'];
+    }
+
+    $cycle_vars[$name]['delimiter'] = (isset($params['delimiter'])) ? $params['delimiter'] : ',';
+    
+    if(is_array($cycle_vars[$name]['values'])) {
+        $cycle_array = $cycle_vars[$name]['values'];
+    } else {
+        $cycle_array = explode($cycle_vars[$name]['delimiter'],$cycle_vars[$name]['values']);
+    }
+    
+    if(!isset($cycle_vars[$name]['index']) || $reset ) {
+        $cycle_vars[$name]['index'] = 0;
+    }
+    
+    if (isset($params['assign'])) {
+        $print = false;
+        $smarty->assign($params['assign'], $cycle_array[$cycle_vars[$name]['index']]);
+    }
+        
+    if($print) {
+        $retval = $cycle_array[$cycle_vars[$name]['index']];
+    } else {
+        $retval = null;
+    }
+
+    if($advance) {
+        if ( $cycle_vars[$name]['index'] >= count($cycle_array) -1 ) {
+            $cycle_vars[$name]['index'] = 0;
+        } else {
+            $cycle_vars[$name]['index']++;
+        }
+    }
+    
+    return $retval;
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.debug.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.debug.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.debug.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,35 +1,35 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {debug} function plugin
- *
- * Type:     function<br>
- * Name:     debug<br>
- * Date:     July 1, 2002<br>
- * Purpose:  popup debug window
- * @link http://smarty.php.net/manual/en/language.function.debug.php {debug}
- *       (Smarty online manual)
- * @author   Monte Ohrt <monte at ispi.net>
- * @version  1.0
- * @param array
- * @param Smarty
- * @return string output from {@link Smarty::_generate_debug_output()}
- */
-function smarty_function_debug($params, &$smarty)
-{
-    if (isset($params['output'])) {
-        $smarty->assign('_smarty_debug_output', $params['output']);
-    }
-    require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.display_debug_console.php');
-    return smarty_core_display_debug_console(null, $smarty);
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {debug} function plugin
+ *
+ * Type:     function<br>
+ * Name:     debug<br>
+ * Date:     July 1, 2002<br>
+ * Purpose:  popup debug window
+ * @link http://smarty.php.net/manual/en/language.function.debug.php {debug}
+ *       (Smarty online manual)
+ * @author   Monte Ohrt <monte at ohrt dot com>
+ * @version  1.0
+ * @param array
+ * @param Smarty
+ * @return string output from {@link Smarty::_generate_debug_output()}
+ */
+function smarty_function_debug($params, &$smarty)
+{
+    if (isset($params['output'])) {
+        $smarty->assign('_smarty_debug_output', $params['output']);
+    }
+    require_once(SMARTY_CORE_DIR . 'core.display_debug_console.php');
+    return smarty_core_display_debug_console(null, $smarty);
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.eval.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.eval.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.eval.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,48 +1,48 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {eval} function plugin
- *
- * Type:     function<br>
- * Name:     eval<br>
- * Purpose:  evaluate a template variable as a template<br>
- * @link http://smarty.php.net/manual/en/language.function.eval.php {eval}
- *       (Smarty online manual)
- * @param array
- * @param Smarty
- */
-function smarty_function_eval($params, &$smarty)
-{
-
-    if (!isset($params['var'])) {
-        $smarty->trigger_error("eval: missing 'var' parameter");
-        return;
-    }
-
-    if($params['var'] == '') {
-        return;
-    }
-
-    $smarty->_compile_source('evaluated template', $params['var'], $_var_compiled);
-
-    ob_start();
-    $smarty->_eval('?>' . $_var_compiled);
-    $_contents = ob_get_contents();
-    ob_end_clean();
-
-    if (!empty($params['assign'])) {
-        $smarty->assign($params['assign'], $_contents);
-    } else {
-        return $_contents;
-    }
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {eval} function plugin
+ *
+ * Type:     function<br>
+ * Name:     eval<br>
+ * Purpose:  evaluate a template variable as a template<br>
+ * @link http://smarty.php.net/manual/en/language.function.eval.php {eval}
+ *       (Smarty online manual)
+ * @param array
+ * @param Smarty
+ */
+function smarty_function_eval($params, &$smarty)
+{
+
+    if (!isset($params['var'])) {
+        $smarty->trigger_error("eval: missing 'var' parameter");
+        return;
+    }
+
+    if($params['var'] == '') {
+        return;
+    }
+
+    $smarty->_compile_source('evaluated template', $params['var'], $_var_compiled);
+
+    ob_start();
+    $smarty->_eval('?>' . $_var_compiled);
+    $_contents = ob_get_contents();
+    ob_end_clean();
+
+    if (!empty($params['assign'])) {
+        $smarty->assign($params['assign'], $_contents);
+    } else {
+        return $_contents;
+    }
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.fetch.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.fetch.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.fetch.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,220 +1,220 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {fetch} plugin
- *
- * Type:     function<br>
- * Name:     fetch<br>
- * Purpose:  fetch file, web or ftp data and display results
- * @link http://smarty.php.net/manual/en/language.function.fetch.php {fetch}
- *       (Smarty online manual)
- * @param array
- * @param Smarty
- * @return string|null if the assign parameter is passed, Smarty assigns the
- *                     result to a template variable
- */
-function smarty_function_fetch($params, &$smarty)
-{
-    if (empty($params['file'])) {
-        $smarty->_trigger_fatal_error("[plugin] parameter 'file' cannot be empty");
-        return;
-    }
-
-    $content = '';
-    if ($smarty->security && !preg_match('!^(http|ftp)://!i', $params['file'])) {
-        $_params = array('resource_type' => 'file', 'resource_name' => $params['file']);
-        require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.is_secure.php');
-        if(!smarty_core_is_secure($_params, $smarty)) {
-            $smarty->_trigger_fatal_error('[plugin] (secure mode) fetch \'' . $params['file'] . '\' is not allowed');
-            return;
-        }
-        
-        // fetch the file
-        if($fp = @fopen($params['file'],'r')) {
-            while(!feof($fp)) {
-                $content .= fgets ($fp,4096);
-            }
-            fclose($fp);
-        } else {
-            $smarty->_trigger_fatal_error('[plugin] fetch cannot read file \'' . $params['file'] . '\'');
-            return;
-        }
-    } else {
-        // not a local file
-        if(preg_match('!^http://!i',$params['file'])) {
-            // http fetch
-            if($uri_parts = parse_url($params['file'])) {
-                // set defaults
-                $host = $server_name = $uri_parts['host'];
-                $timeout = 30;
-                $accept = "image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*";
-                $agent = "Smarty Template Engine ".$smarty->_version;
-                $referer = "";
-                $uri = !empty($uri_parts['path']) ? $uri_parts['path'] : '/';
-                $uri .= !empty($uri_parts['query']) ? '?' . $uri_parts['query'] : '';
-                $_is_proxy = false;
-                if(empty($uri_parts['port'])) {
-                    $port = 80;
-                } else {
-                    $port = $uri_parts['port'];
-                }
-                if(!empty($uri_parts['user'])) {
-                    $user = $uri_parts['user'];
-                }
-                if(!empty($uri_parts['pass'])) {
-                    $pass = $uri_parts['pass'];
-                }
-                // loop through parameters, setup headers
-                foreach($params as $param_key => $param_value) {
-                    switch($param_key) {
-                        case "file":
-                        case "assign":
-                        case "assign_headers":
-                            break;
-                        case "user":
-                            if(!empty($param_value)) {
-                                $user = $param_value;
-                            }
-                            break;
-                        case "pass":
-                            if(!empty($param_value)) {
-                                $pass = $param_value;
-                            }
-                            break;
-                        case "accept":
-                            if(!empty($param_value)) {
-                                $accept = $param_value;
-                            }
-                            break;
-                        case "header":
-                            if(!empty($param_value)) {
-                                if(!preg_match('![\w\d-]+: .+!',$param_value)) {
-                                    $smarty->_trigger_fatal_error("[plugin] invalid header format '".$param_value."'");
-                                    return;
-                                } else {
-                                    $extra_headers[] = $param_value;
-                                }
-                            }
-                            break;
-                        case "proxy_host":
-                            if(!empty($param_value)) {
-                                $proxy_host = $param_value;
-                            }
-                            break;
-                        case "proxy_port":
-                            if(!preg_match('!\D!', $param_value)) {
-                                $proxy_port = (int) $param_value;
-                            } else {
-                                $smarty->_trigger_fatal_error("[plugin] invalid value for attribute '".$param_key."'");
-                                return;
-                            }
-                            break;
-                        case "agent":
-                            if(!empty($param_value)) {
-                                $agent = $param_value;
-                            }
-                            break;
-                        case "referer":
-                            if(!empty($param_value)) {
-                                $referer = $param_value;
-                            }
-                            break;
-                        case "timeout":
-                            if(!preg_match('!\D!', $param_value)) {
-                                $timeout = (int) $param_value;
-                            } else {
-                                $smarty->_trigger_fatal_error("[plugin] invalid value for attribute '".$param_key."'");
-                                return;
-                            }
-                            break;
-                        default:
-                            $smarty->_trigger_fatal_error("[plugin] unrecognized attribute '".$param_key."'");
-                            return;
-                    }
-                }
-                if(!empty($proxy_host) && !empty($proxy_port)) {
-                    $_is_proxy = true;
-                    $fp = fsockopen($proxy_host,$proxy_port,$errno,$errstr,$timeout);
-                } else {
-                    $fp = fsockopen($server_name,$port,$errno,$errstr,$timeout);
-                }
-
-                if(!$fp) {
-                    $smarty->_trigger_fatal_error("[plugin] unable to fetch: $errstr ($errno)");
-                    return;
-                } else {
-                    if($_is_proxy) {
-                        fputs($fp, 'GET ' . $params['file'] . " HTTP/1.0\r\n");
-                    } else {
-                        fputs($fp, "GET $uri HTTP/1.0\r\n");
-                    }
-                    if(!empty($host)) {
-                        fputs($fp, "Host: $host\r\n");
-                    }
-                    if(!empty($accept)) {
-                        fputs($fp, "Accept: $accept\r\n");
-                    }
-                    if(!empty($agent)) {
-                        fputs($fp, "User-Agent: $agent\r\n");
-                    }
-                    if(!empty($referer)) {
-                        fputs($fp, "Referer: $referer\r\n");
-                    }
-                    if(isset($extra_headers) && is_array($extra_headers)) {
-                        foreach($extra_headers as $curr_header) {
-                            fputs($fp, $curr_header."\r\n");
-                        }
-                    }
-                    if(!empty($user) && !empty($pass)) {
-                        fputs($fp, "Authorization: BASIC ".base64_encode("$user:$pass")."\r\n");
-                    }
-
-                    fputs($fp, "\r\n");
-                    while(!feof($fp)) {
-                        $content .= fgets($fp,4096);
-                    }
-                    fclose($fp);
-                    $csplit = split("\r\n\r\n",$content,2);
-
-                    $content = $csplit[1];
-
-                    if(!empty($params['assign_headers'])) {
-                        $smarty->assign($params['assign_headers'],split("\r\n",$csplit[0]));
-                    }
-                }
-            } else {
-                $smarty->_trigger_fatal_error("[plugin] unable to parse URL, check syntax");
-                return;
-            }
-        } else {
-            // ftp fetch
-            if($fp = @fopen($params['file'],'r')) {
-                while(!feof($fp)) {
-                    $content .= fgets ($fp,4096);
-                }
-                fclose($fp);
-            } else {
-                $smarty->_trigger_fatal_error('[plugin] fetch cannot read file \'' . $params['file'] .'\'');
-                return;
-            }
-        }
-
-    }
-
-
-    if (!empty($params['assign'])) {
-        $smarty->assign($params['assign'],$content);
-    } else {
-        return $content;
-    }
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {fetch} plugin
+ *
+ * Type:     function<br>
+ * Name:     fetch<br>
+ * Purpose:  fetch file, web or ftp data and display results
+ * @link http://smarty.php.net/manual/en/language.function.fetch.php {fetch}
+ *       (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string|null if the assign parameter is passed, Smarty assigns the
+ *                     result to a template variable
+ */
+function smarty_function_fetch($params, &$smarty)
+{
+    if (empty($params['file'])) {
+        $smarty->_trigger_fatal_error("[plugin] parameter 'file' cannot be empty");
+        return;
+    }
+
+    $content = '';
+    if ($smarty->security && !preg_match('!^(http|ftp)://!i', $params['file'])) {
+        $_params = array('resource_type' => 'file', 'resource_name' => $params['file']);
+        require_once(SMARTY_CORE_DIR . 'core.is_secure.php');
+        if(!smarty_core_is_secure($_params, $smarty)) {
+            $smarty->_trigger_fatal_error('[plugin] (secure mode) fetch \'' . $params['file'] . '\' is not allowed');
+            return;
+        }
+        
+        // fetch the file
+        if($fp = @fopen($params['file'],'r')) {
+            while(!feof($fp)) {
+                $content .= fgets ($fp,4096);
+            }
+            fclose($fp);
+        } else {
+            $smarty->_trigger_fatal_error('[plugin] fetch cannot read file \'' . $params['file'] . '\'');
+            return;
+        }
+    } else {
+        // not a local file
+        if(preg_match('!^http://!i',$params['file'])) {
+            // http fetch
+            if($uri_parts = parse_url($params['file'])) {
+                // set defaults
+                $host = $server_name = $uri_parts['host'];
+                $timeout = 30;
+                $accept = "image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*";
+                $agent = "Smarty Template Engine ".$smarty->_version;
+                $referer = "";
+                $uri = !empty($uri_parts['path']) ? $uri_parts['path'] : '/';
+                $uri .= !empty($uri_parts['query']) ? '?' . $uri_parts['query'] : '';
+                $_is_proxy = false;
+                if(empty($uri_parts['port'])) {
+                    $port = 80;
+                } else {
+                    $port = $uri_parts['port'];
+                }
+                if(!empty($uri_parts['user'])) {
+                    $user = $uri_parts['user'];
+                }
+                if(!empty($uri_parts['pass'])) {
+                    $pass = $uri_parts['pass'];
+                }
+                // loop through parameters, setup headers
+                foreach($params as $param_key => $param_value) {
+                    switch($param_key) {
+                        case "file":
+                        case "assign":
+                        case "assign_headers":
+                            break;
+                        case "user":
+                            if(!empty($param_value)) {
+                                $user = $param_value;
+                            }
+                            break;
+                        case "pass":
+                            if(!empty($param_value)) {
+                                $pass = $param_value;
+                            }
+                            break;
+                        case "accept":
+                            if(!empty($param_value)) {
+                                $accept = $param_value;
+                            }
+                            break;
+                        case "header":
+                            if(!empty($param_value)) {
+                                if(!preg_match('![\w\d-]+: .+!',$param_value)) {
+                                    $smarty->_trigger_fatal_error("[plugin] invalid header format '".$param_value."'");
+                                    return;
+                                } else {
+                                    $extra_headers[] = $param_value;
+                                }
+                            }
+                            break;
+                        case "proxy_host":
+                            if(!empty($param_value)) {
+                                $proxy_host = $param_value;
+                            }
+                            break;
+                        case "proxy_port":
+                            if(!preg_match('!\D!', $param_value)) {
+                                $proxy_port = (int) $param_value;
+                            } else {
+                                $smarty->_trigger_fatal_error("[plugin] invalid value for attribute '".$param_key."'");
+                                return;
+                            }
+                            break;
+                        case "agent":
+                            if(!empty($param_value)) {
+                                $agent = $param_value;
+                            }
+                            break;
+                        case "referer":
+                            if(!empty($param_value)) {
+                                $referer = $param_value;
+                            }
+                            break;
+                        case "timeout":
+                            if(!preg_match('!\D!', $param_value)) {
+                                $timeout = (int) $param_value;
+                            } else {
+                                $smarty->_trigger_fatal_error("[plugin] invalid value for attribute '".$param_key."'");
+                                return;
+                            }
+                            break;
+                        default:
+                            $smarty->_trigger_fatal_error("[plugin] unrecognized attribute '".$param_key."'");
+                            return;
+                    }
+                }
+                if(!empty($proxy_host) && !empty($proxy_port)) {
+                    $_is_proxy = true;
+                    $fp = fsockopen($proxy_host,$proxy_port,$errno,$errstr,$timeout);
+                } else {
+                    $fp = fsockopen($server_name,$port,$errno,$errstr,$timeout);
+                }
+
+                if(!$fp) {
+                    $smarty->_trigger_fatal_error("[plugin] unable to fetch: $errstr ($errno)");
+                    return;
+                } else {
+                    if($_is_proxy) {
+                        fputs($fp, 'GET ' . $params['file'] . " HTTP/1.0\r\n");
+                    } else {
+                        fputs($fp, "GET $uri HTTP/1.0\r\n");
+                    }
+                    if(!empty($host)) {
+                        fputs($fp, "Host: $host\r\n");
+                    }
+                    if(!empty($accept)) {
+                        fputs($fp, "Accept: $accept\r\n");
+                    }
+                    if(!empty($agent)) {
+                        fputs($fp, "User-Agent: $agent\r\n");
+                    }
+                    if(!empty($referer)) {
+                        fputs($fp, "Referer: $referer\r\n");
+                    }
+                    if(isset($extra_headers) && is_array($extra_headers)) {
+                        foreach($extra_headers as $curr_header) {
+                            fputs($fp, $curr_header."\r\n");
+                        }
+                    }
+                    if(!empty($user) && !empty($pass)) {
+                        fputs($fp, "Authorization: BASIC ".base64_encode("$user:$pass")."\r\n");
+                    }
+
+                    fputs($fp, "\r\n");
+                    while(!feof($fp)) {
+                        $content .= fgets($fp,4096);
+                    }
+                    fclose($fp);
+                    $csplit = split("\r\n\r\n",$content,2);
+
+                    $content = $csplit[1];
+
+                    if(!empty($params['assign_headers'])) {
+                        $smarty->assign($params['assign_headers'],split("\r\n",$csplit[0]));
+                    }
+                }
+            } else {
+                $smarty->_trigger_fatal_error("[plugin] unable to parse URL, check syntax");
+                return;
+            }
+        } else {
+            // ftp fetch
+            if($fp = @fopen($params['file'],'r')) {
+                while(!feof($fp)) {
+                    $content .= fgets ($fp,4096);
+                }
+                fclose($fp);
+            } else {
+                $smarty->_trigger_fatal_error('[plugin] fetch cannot read file \'' . $params['file'] .'\'');
+                return;
+            }
+        }
+
+    }
+
+
+    if (!empty($params['assign'])) {
+        $smarty->assign($params['assign'],$content);
+    } else {
+        return $content;
+    }
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_checkboxes.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_checkboxes.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_checkboxes.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,143 +1,143 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {html_checkboxes} function plugin
- *
- * File:       function.html_checkboxes.php<br>
- * Type:       function<br>
- * Name:       html_checkboxes<br>
- * Date:       24.Feb.2003<br>
- * Purpose:    Prints out a list of checkbox input types<br>
- * Input:<br>
- *           - name       (optional) - string default "checkbox"
- *           - values     (required) - array
- *           - options    (optional) - associative array
- *           - checked    (optional) - array default not set
- *           - separator  (optional) - ie <br> or &nbsp;
- *           - output     (optional) - the output next to each checkbox
- *           - assign     (optional) - assign the output as an array to this variable
- * Examples:
- * <pre>
- * {html_checkboxes values=$ids output=$names}
- * {html_checkboxes values=$ids name='box' separator='<br>' output=$names}
- * {html_checkboxes values=$ids checked=$checked separator='<br>' output=$names}
- * </pre>
- * @link http://smarty.php.net/manual/en/language.function.html.checkboxes.php {html_checkboxes}
- *      (Smarty online manual)
- * @author     Christopher Kvarme <christopher.kvarme at flashjab.com>
- * @author credits to Monte Ohrt <monte at ispi.net>
- * @version    1.0
- * @param array
- * @param Smarty
- * @return string
- * @uses smarty_function_escape_special_chars()
- */
-function smarty_function_html_checkboxes($params, &$smarty)
-{
-    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
-
-    $name = 'checkbox';
-    $values = null;
-    $options = null;
-    $selected = null;
-    $separator = '';
-    $labels = true;
-    $output = null;
-
-    $extra = '';
-
-    foreach($params as $_key => $_val) {
-        switch($_key) {
-            case 'name':
-            case 'separator':
-                $$_key = $_val;
-                break;
-
-            case 'labels':
-                $$_key = (bool)$_val;
-                break;
-
-            case 'options':
-                $$_key = (array)$_val;
-                break;
-
-            case 'values':
-            case 'output':
-                $$_key = array_values((array)$_val);
-                break;
-
-            case 'checked':
-            case 'selected':
-                $selected = array_map('strval', array_values((array)$_val));
-                break;
-
-            case 'checkboxes':
-                $smarty->trigger_error('html_checkboxes: the use of the "checkboxes" attribute is deprecated, use "options" instead', E_USER_WARNING);
-                $options = (array)$_val;
-                break;
-
-            case 'assign':
-                break;
-
-            default:
-                if(!is_array($_val)) {
-                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
-                } else {
-                    $smarty->trigger_error("html_checkboxes: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
-                }
-                break;
-        }
-    }
-
-    if (!isset($options) && !isset($values))
-        return ''; /* raise error here? */
-
-    settype($selected, 'array');
-    $_html_result = array();
-
-    if (is_array($options)) {
-
-        foreach ($options as $_key=>$_val)
-            $_html_result[] = smarty_function_html_checkboxes_output($name, $_key, $_val, $selected, $extra, $separator, $labels);
-
-
-    } else {
-        foreach ($values as $_i=>$_key) {
-            $_val = isset($output[$_i]) ? $output[$_i] : '';
-            $_html_result[] = smarty_function_html_checkboxes_output($name, $_key, $_val, $selected, $extra, $separator, $labels);
-        }
-
-    }
-
-    if(!empty($params['assign'])) {
-        $smarty->assign($params['assign'], $_html_result);
-    } else {
-        return implode("\n",$_html_result);
-    }
-
-}
-
-function smarty_function_html_checkboxes_output($name, $value, $output, $selected, $extra, $separator, $labels) {
-    $_output = '';
-    if ($labels) $_output .= '<label>';
-    $_output .= '<input type="checkbox" name="'
-        . smarty_function_escape_special_chars($name) . '[]" value="'
-        . smarty_function_escape_special_chars($value) . '"';
-
-    if (in_array((string)$value, $selected)) {
-        $_output .= ' checked="checked"';
-    }
-    $_output .= $extra . ' />' . $output;
-    if ($labels) $_output .= '</label>';
-    $_output .=  $separator;
-
-    return $_output;
-}
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_checkboxes} function plugin
+ *
+ * File:       function.html_checkboxes.php<br>
+ * Type:       function<br>
+ * Name:       html_checkboxes<br>
+ * Date:       24.Feb.2003<br>
+ * Purpose:    Prints out a list of checkbox input types<br>
+ * Input:<br>
+ *           - name       (optional) - string default "checkbox"
+ *           - values     (required) - array
+ *           - options    (optional) - associative array
+ *           - checked    (optional) - array default not set
+ *           - separator  (optional) - ie <br> or &nbsp;
+ *           - output     (optional) - the output next to each checkbox
+ *           - assign     (optional) - assign the output as an array to this variable
+ * Examples:
+ * <pre>
+ * {html_checkboxes values=$ids output=$names}
+ * {html_checkboxes values=$ids name='box' separator='<br>' output=$names}
+ * {html_checkboxes values=$ids checked=$checked separator='<br>' output=$names}
+ * </pre>
+ * @link http://smarty.php.net/manual/en/language.function.html.checkboxes.php {html_checkboxes}
+ *      (Smarty online manual)
+ * @author     Christopher Kvarme <christopher.kvarme at flashjab.com>
+ * @author credits to Monte Ohrt <monte at ohrt dot com>
+ * @version    1.0
+ * @param array
+ * @param Smarty
+ * @return string
+ * @uses smarty_function_escape_special_chars()
+ */
+function smarty_function_html_checkboxes($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
+
+    $name = 'checkbox';
+    $values = null;
+    $options = null;
+    $selected = null;
+    $separator = '';
+    $labels = true;
+    $output = null;
+
+    $extra = '';
+
+    foreach($params as $_key => $_val) {
+        switch($_key) {
+            case 'name':
+            case 'separator':
+                $$_key = $_val;
+                break;
+
+            case 'labels':
+                $$_key = (bool)$_val;
+                break;
+
+            case 'options':
+                $$_key = (array)$_val;
+                break;
+
+            case 'values':
+            case 'output':
+                $$_key = array_values((array)$_val);
+                break;
+
+            case 'checked':
+            case 'selected':
+                $selected = array_map('strval', array_values((array)$_val));
+                break;
+
+            case 'checkboxes':
+                $smarty->trigger_error('html_checkboxes: the use of the "checkboxes" attribute is deprecated, use "options" instead', E_USER_WARNING);
+                $options = (array)$_val;
+                break;
+
+            case 'assign':
+                break;
+
+            default:
+                if(!is_array($_val)) {
+                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
+                } else {
+                    $smarty->trigger_error("html_checkboxes: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
+                }
+                break;
+        }
+    }
+
+    if (!isset($options) && !isset($values))
+        return ''; /* raise error here? */
+
+    settype($selected, 'array');
+    $_html_result = array();
+
+    if (isset($options)) {
+
+        foreach ($options as $_key=>$_val)
+            $_html_result[] = smarty_function_html_checkboxes_output($name, $_key, $_val, $selected, $extra, $separator, $labels);
+
+
+    } else {
+        foreach ($values as $_i=>$_key) {
+            $_val = isset($output[$_i]) ? $output[$_i] : '';
+            $_html_result[] = smarty_function_html_checkboxes_output($name, $_key, $_val, $selected, $extra, $separator, $labels);
+        }
+
+    }
+
+    if(!empty($params['assign'])) {
+        $smarty->assign($params['assign'], $_html_result);
+    } else {
+        return implode("\n",$_html_result);
+    }
+
+}
+
+function smarty_function_html_checkboxes_output($name, $value, $output, $selected, $extra, $separator, $labels) {
+    $_output = '';
+    if ($labels) $_output .= '<label>';
+    $_output .= '<input type="checkbox" name="'
+        . smarty_function_escape_special_chars($name) . '[]" value="'
+        . smarty_function_escape_special_chars($value) . '"';
+
+    if (in_array((string)$value, $selected)) {
+        $_output .= ' checked="checked"';
+    }
+    $_output .= $extra . ' />' . $output;
+    if ($labels) $_output .= '</label>';
+    $_output .=  $separator;
+
+    return $_output;
+}
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_image.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_image.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_image.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,142 +1,139 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {html_image} function plugin
- *
- * Type:     function<br>
- * Name:     html_image<br>
- * Date:     Feb 24, 2003<br>
- * Purpose:  format HTML tags for the image<br>
- * Input:<br>
- *         - file = file (and path) of image (required)
- *         - border = border width (optional, default 0)
- *         - height = image height (optional, default actual height)
- *         - image =image width (optional, default actual width)
- *         - basedir = base directory for absolute paths, default
- *                     is environment variable DOCUMENT_ROOT
- *
- * Examples: {html_image file="images/masthead.gif"}
- * Output:   <img src="images/masthead.gif" border=0 width=400 height=23>
- * @link http://smarty.php.net/manual/en/language.function.html.image.php {html_image}
- *      (Smarty online manual)
- * @author   Monte Ohrt <monte at ispi.net>
- * @author credits to Duda <duda at big.hu> - wrote first image function
- *           in repository, helped with lots of functionality
- * @version  1.0
- * @param array
- * @param Smarty
- * @return string
- * @uses smarty_function_escape_special_chars()
- */
-function smarty_function_html_image($params, &$smarty)
-{
-    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
-    
-    $alt = '';
-    $file = '';
-    $border = 0;
-    $height = '';
-    $width = '';
-    $extra = '';
-    $prefix = '';
-    $suffix = '';
-    $server_vars = ($smarty->request_use_auto_globals) ? $_SERVER : $GLOBALS['HTTP_SERVER_VARS'];
-    $basedir = isset($server_vars['DOCUMENT_ROOT']) ? $server_vars['DOCUMENT_ROOT'] : '';
-    foreach($params as $_key => $_val) {
-        switch($_key) {
-            case 'file':
-            case 'border':
-            case 'height':
-            case 'width':
-            case 'dpi':
-            case 'basedir':
-                $$_key = $_val;
-                break;
-
-            case 'alt':
-                if(!is_array($_val)) {
-                    $$_key = smarty_function_escape_special_chars($_val);
-                } else {
-                    $smarty->trigger_error("html_image: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
-                }
-                break;
-
-            case 'link':
-            case 'href':
-                $prefix = '<a href="' . $_val . '">';
-                $suffix = '</a>';
-                break;
-
-            default:
-                if(!is_array($_val)) {
-                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
-                } else {
-                    $smarty->trigger_error("html_image: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
-                }
-                break;
-        }
-    }
-
-    if (empty($file)) {
-        $smarty->trigger_error("html_image: missing 'file' parameter", E_USER_NOTICE);
-        return;
-    }
-
-    if (substr($file,0,1) == '/') {
-        $_image_path = $basedir . $file;
-    } else {
-        $_image_path = $file;
-    }
-
-    if(!isset($params['width']) || !isset($params['height'])) {
-        if ($smarty->security &&
-            ($_params = array('resource_type' => 'file', 'resource_name' => $_image_path)) &&
-            (require_once(SMARTY_DIR . 'core' . DIRECTORY_SEPARATOR . 'core.is_secure.php')) &&
-            (!smarty_core_is_secure($_params, $smarty)) ) {
-            $smarty->trigger_error("html_image: (secure) '$_image_path' not in secure directory", E_USER_NOTICE);
-
-        } elseif (!$_image_data = @getimagesize($_image_path)) {
-            if(!file_exists($_image_path)) {
-                $smarty->trigger_error("html_image: unable to find '$_image_path'", E_USER_NOTICE);
-                return;
-            } else if(!is_readable($_image_path)) {
-                $smarty->trigger_error("html_image: unable to read '$_image_path'", E_USER_NOTICE);
-                return;
-            } else {
-                $smarty->trigger_error("html_image: '$_image_path' is not a valid image file", E_USER_NOTICE);
-                return;
-            }
-        }
-
-        if(!isset($params['width'])) {
-            $width = $_image_data[0];
-        }
-        if(!isset($params['height'])) {
-            $height = $_image_data[1];
-        }
-
-    }
-
-    if(isset($params['dpi'])) {
-        if(strstr($server_vars['HTTP_USER_AGENT'], 'Mac')) {
-            $dpi_default = 72;
-        } else {
-            $dpi_default = 96;
-        }
-        $_resize = $dpi_default/$params['dpi'];
-        $width = round($width * $_resize);
-        $height = round($height * $_resize);
-    }
-
-    return $prefix . '<img src="'.$file.'" alt="'.$alt.'" border="'.$border.'" width="'.$width.'" height="'.$height.'"'.$extra.' />' . $suffix;
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_image} function plugin
+ *
+ * Type:     function<br>
+ * Name:     html_image<br>
+ * Date:     Feb 24, 2003<br>
+ * Purpose:  format HTML tags for the image<br>
+ * Input:<br>
+ *         - file = file (and path) of image (required)
+ *         - height = image height (optional, default actual height)
+ *         - width = image width (optional, default actual width)
+ *         - basedir = base directory for absolute paths, default
+ *                     is environment variable DOCUMENT_ROOT
+ *
+ * Examples: {html_image file="images/masthead.gif"}
+ * Output:   <img src="images/masthead.gif" width=400 height=23>
+ * @link http://smarty.php.net/manual/en/language.function.html.image.php {html_image}
+ *      (Smarty online manual)
+ * @author   Monte Ohrt <monte at ohrt dot com>
+ * @author credits to Duda <duda at big.hu> - wrote first image function
+ *           in repository, helped with lots of functionality
+ * @version  1.0
+ * @param array
+ * @param Smarty
+ * @return string
+ * @uses smarty_function_escape_special_chars()
+ */
+function smarty_function_html_image($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
+    
+    $alt = '';
+    $file = '';
+    $height = '';
+    $width = '';
+    $extra = '';
+    $prefix = '';
+    $suffix = '';
+    $server_vars = ($smarty->request_use_auto_globals) ? $_SERVER : $GLOBALS['HTTP_SERVER_VARS'];
+    $basedir = isset($server_vars['DOCUMENT_ROOT']) ? $server_vars['DOCUMENT_ROOT'] : '';
+    foreach($params as $_key => $_val) {
+        switch($_key) {
+            case 'file':
+            case 'height':
+            case 'width':
+            case 'dpi':
+            case 'basedir':
+                $$_key = $_val;
+                break;
+
+            case 'alt':
+                if(!is_array($_val)) {
+                    $$_key = smarty_function_escape_special_chars($_val);
+                } else {
+                    $smarty->trigger_error("html_image: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
+                }
+                break;
+
+            case 'link':
+            case 'href':
+                $prefix = '<a href="' . $_val . '">';
+                $suffix = '</a>';
+                break;
+
+            default:
+                if(!is_array($_val)) {
+                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
+                } else {
+                    $smarty->trigger_error("html_image: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
+                }
+                break;
+        }
+    }
+
+    if (empty($file)) {
+        $smarty->trigger_error("html_image: missing 'file' parameter", E_USER_NOTICE);
+        return;
+    }
+
+    if (substr($file,0,1) == '/') {
+        $_image_path = $basedir . $file;
+    } else {
+        $_image_path = $file;
+    }
+
+    if(!isset($params['width']) || !isset($params['height'])) {
+        if ($smarty->security &&
+            ($_params = array('resource_type' => 'file', 'resource_name' => $_image_path)) &&
+            (require_once(SMARTY_CORE_DIR . 'core.is_secure.php')) &&
+            (!smarty_core_is_secure($_params, $smarty)) ) {
+            $smarty->trigger_error("html_image: (secure) '$_image_path' not in secure directory", E_USER_NOTICE);
+
+        } elseif (!$_image_data = @getimagesize($_image_path)) {
+            if(!file_exists($_image_path)) {
+                $smarty->trigger_error("html_image: unable to find '$_image_path'", E_USER_NOTICE);
+                return;
+            } else if(!is_readable($_image_path)) {
+                $smarty->trigger_error("html_image: unable to read '$_image_path'", E_USER_NOTICE);
+                return;
+            } else {
+                $smarty->trigger_error("html_image: '$_image_path' is not a valid image file", E_USER_NOTICE);
+                return;
+            }
+        }
+
+        if(!isset($params['width'])) {
+            $width = $_image_data[0];
+        }
+        if(!isset($params['height'])) {
+            $height = $_image_data[1];
+        }
+
+    }
+
+    if(isset($params['dpi'])) {
+        if(strstr($server_vars['HTTP_USER_AGENT'], 'Mac')) {
+            $dpi_default = 72;
+        } else {
+            $dpi_default = 96;
+        }
+        $_resize = $dpi_default/$params['dpi'];
+        $width = round($width * $_resize);
+        $height = round($height * $_resize);
+    }
+
+    return $prefix . '<img src="'.$file.'" alt="'.$alt.'" width="'.$width.'" height="'.$height.'"'.$extra.' />' . $suffix;
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_options.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_options.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_options.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,121 +1,121 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {html_options} function plugin
- *
- * Type:     function<br>
- * Name:     html_options<br>
- * Input:<br>
- *           - name       (optional) - string default "select"
- *           - values     (required if no options supplied) - array
- *           - options    (required if no values supplied) - associative array
- *           - selected   (optional) - string default not set
- *           - output     (required if not options supplied) - array
- * Purpose:  Prints the list of <option> tags generated from
- *           the passed parameters
- * @link http://smarty.php.net/manual/en/language.function.html.options.php {html_image}
- *      (Smarty online manual)
- * @param array
- * @param Smarty
- * @return string
- * @uses smarty_function_escape_special_chars()
- */
-function smarty_function_html_options($params, &$smarty)
-{
-    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
-    
-    $name = null;
-    $values = null;
-    $options = null;
-    $selected = array();
-    $output = null;
-    
-    $extra = '';
-    
-    foreach($params as $_key => $_val) {
-        switch($_key) {
-            case 'name':
-                $$_key = (string)$_val;
-                break;
-            
-            case 'options':
-                $$_key = (array)$_val;
-                break;
-                
-            case 'values':
-            case 'output':
-                $$_key = array_values((array)$_val);
-                break;
-
-            case 'selected':
-                $$_key = array_map('strval', array_values((array)$_val));
-                break;
-                
-            default:
-                if(!is_array($_val)) {
-                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
-                } else {
-                    $smarty->trigger_error("html_options: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
-                }
-                break;
-        }
-    }
-
-    if (!isset($options) && !isset($values))
-        return ''; /* raise error here? */
-
-    $_html_result = '';
-
-    if (is_array($options)) {
-        
-        foreach ($options as $_key=>$_val)
-            $_html_result .= smarty_function_html_options_optoutput($_key, $_val, $selected);
-
-    } else {
-        
-        foreach ((array)$values as $_i=>$_key) {
-            $_val = isset($output[$_i]) ? $output[$_i] : '';
-            $_html_result .= smarty_function_html_options_optoutput($_key, $_val, $selected);
-        }
-
-    }
-
-    if(!empty($name)) {
-        $_html_result = '<select name="' . $name . '"' . $extra . '>' . "\n" . $_html_result . '</select>' . "\n";
-    }
-
-    return $_html_result;
-
-}
-
-function smarty_function_html_options_optoutput($key, $value, $selected) {
-    if(!is_array($value)) {
-        $_html_result = '<option label="' . smarty_function_escape_special_chars($value) . '" value="' .
-            smarty_function_escape_special_chars($key) . '"';
-        if (in_array((string)$key, $selected))
-            $_html_result .= ' selected="selected"';
-        $_html_result .= '>' . smarty_function_escape_special_chars($value) . '</option>' . "\n";
-    } else {
-        $_html_result = smarty_function_html_options_optgroup($key, $value, $selected);
-    }
-    return $_html_result;
-}
-
-function smarty_function_html_options_optgroup($key, $values, $selected) {
-    $optgroup_html = '<optgroup label="' . smarty_function_escape_special_chars($key) . '">' . "\n";
-    foreach ($values as $key => $value) {
-        $optgroup_html .= smarty_function_html_options_optoutput($key, $value, $selected);
-    }
-    $optgroup_html .= "</optgroup>\n";
-    return $optgroup_html;
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_options} function plugin
+ *
+ * Type:     function<br>
+ * Name:     html_options<br>
+ * Input:<br>
+ *           - name       (optional) - string default "select"
+ *           - values     (required if no options supplied) - array
+ *           - options    (required if no values supplied) - associative array
+ *           - selected   (optional) - string default not set
+ *           - output     (required if not options supplied) - array
+ * Purpose:  Prints the list of <option> tags generated from
+ *           the passed parameters
+ * @link http://smarty.php.net/manual/en/language.function.html.options.php {html_image}
+ *      (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ * @uses smarty_function_escape_special_chars()
+ */
+function smarty_function_html_options($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
+    
+    $name = null;
+    $values = null;
+    $options = null;
+    $selected = array();
+    $output = null;
+    
+    $extra = '';
+    
+    foreach($params as $_key => $_val) {
+        switch($_key) {
+            case 'name':
+                $$_key = (string)$_val;
+                break;
+            
+            case 'options':
+                $$_key = (array)$_val;
+                break;
+                
+            case 'values':
+            case 'output':
+                $$_key = array_values((array)$_val);
+                break;
+
+            case 'selected':
+                $$_key = array_map('strval', array_values((array)$_val));
+                break;
+                
+            default:
+                if(!is_array($_val)) {
+                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
+                } else {
+                    $smarty->trigger_error("html_options: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
+                }
+                break;
+        }
+    }
+
+    if (!isset($options) && !isset($values))
+        return ''; /* raise error here? */
+
+    $_html_result = '';
+
+    if (isset($options)) {
+        
+        foreach ($options as $_key=>$_val)
+            $_html_result .= smarty_function_html_options_optoutput($_key, $_val, $selected);
+
+    } else {
+        
+        foreach ($values as $_i=>$_key) {
+            $_val = isset($output[$_i]) ? $output[$_i] : '';
+            $_html_result .= smarty_function_html_options_optoutput($_key, $_val, $selected);
+        }
+
+    }
+
+    if(!empty($name)) {
+        $_html_result = '<select name="' . $name . '"' . $extra . '>' . "\n" . $_html_result . '</select>' . "\n";
+    }
+
+    return $_html_result;
+
+}
+
+function smarty_function_html_options_optoutput($key, $value, $selected) {
+    if(!is_array($value)) {
+        $_html_result = '<option label="' . smarty_function_escape_special_chars($value) . '" value="' .
+            smarty_function_escape_special_chars($key) . '"';
+        if (in_array((string)$key, $selected))
+            $_html_result .= ' selected="selected"';
+        $_html_result .= '>' . smarty_function_escape_special_chars($value) . '</option>' . "\n";
+    } else {
+        $_html_result = smarty_function_html_options_optgroup($key, $value, $selected);
+    }
+    return $_html_result;
+}
+
+function smarty_function_html_options_optgroup($key, $values, $selected) {
+    $optgroup_html = '<optgroup label="' . smarty_function_escape_special_chars($key) . '">' . "\n";
+    foreach ($values as $key => $value) {
+        $optgroup_html .= smarty_function_html_options_optoutput($key, $value, $selected);
+    }
+    $optgroup_html .= "</optgroup>\n";
+    return $optgroup_html;
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_radios.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_radios.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_radios.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,145 +1,156 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {html_radios} function plugin
- *
- * File:       function.html_radios.php<br>
- * Type:       function<br>
- * Name:       html_radios<br>
- * Date:       24.Feb.2003<br>
- * Purpose:    Prints out a list of radio input types<br>
- * Input:<br>
- *           - name       (optional) - string default "radio"
- *           - values     (required) - array
- *           - options    (optional) - associative array
- *           - checked    (optional) - array default not set
- *           - separator  (optional) - ie <br> or &nbsp;
- *           - output     (optional) - the output next to each radio button
- *           - assign     (optional) - assign the output as an array to this variable
- * Examples:
- * <pre>
- * {html_radios values=$ids output=$names}
- * {html_radios values=$ids name='box' separator='<br>' output=$names}
- * {html_radios values=$ids checked=$checked separator='<br>' output=$names}
- * </pre>
- * @link http://smarty.php.net/manual/en/language.function.html.radios.php {html_radios}
- *      (Smarty online manual)
- * @author     Christopher Kvarme <christopher.kvarme at flashjab.com>
- * @author credits to Monte Ohrt <monte at ispi.net>
- * @version    1.0
- * @param array
- * @param Smarty
- * @return string
- * @uses smarty_function_escape_special_chars()
- */
-function smarty_function_html_radios($params, &$smarty)
-{
-    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
-   
-    $name = 'radio';
-    $values = null;
-    $options = null;
-    $selected = null;
-    $separator = '';
-    $labels = true;
-    $output = null;
-    $extra = '';
-
-    foreach($params as $_key => $_val) {
-        switch($_key) {
-            case 'name':
-            case 'separator':
-                $$_key = (string)$_val;
-                break;
-
-            case 'checked':
-            case 'selected':
-                if(is_array($_val)) {
-                    $smarty->trigger_error('html_radios: the "' . $_key . '" attribute cannot be an array', E_USER_WARNING);
-                } else {
-                    $selected = (string)$_val;
-                }
-                break;
-
-            case 'labels':
-                $$_key = (bool)$_val;
-                break;
-
-            case 'options':
-                $$_key = (array)$_val;
-                break;
-
-            case 'values':
-            case 'output':
-                $$_key = array_values((array)$_val);
-                break;
-
-            case 'radios':
-                $smarty->trigger_error('html_radios: the use of the "radios" attribute is deprecated, use "options" instead', E_USER_WARNING);
-                $options = (array)$_val;
-                break;
-
-            case 'assign':
-                break;
-
-            default:
-                if(!is_array($_val)) {
-                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
-                } else {
-                    $smarty->trigger_error("html_radios: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
-                }
-                break;
-        }
-    }
-
-    if (!isset($options) && !isset($values))
-        return ''; /* raise error here? */
-
-    $_html_result = array();
-
-    if (isset($options) && is_array($options)) {
-
-        foreach ((array)$options as $_key=>$_val)
-            $_html_result[] = smarty_function_html_radios_output($name, $_key, $_val, $selected, $extra, $separator, $labels);
-
-    } else {
-
-        foreach ((array)$values as $_i=>$_key) {
-            $_val = isset($output[$_i]) ? $output[$_i] : '';
-            $_html_result[] = smarty_function_html_radios_output($name, $_key, $_val, $selected, $extra, $separator, $labels);
-        }
-
-    }
-
-    if(!empty($params['assign'])) {
-        $smarty->assign($params['assign'], $_html_result);
-    } else {
-        return implode("\n",$_html_result);
-    }
-
-}
-
-function smarty_function_html_radios_output($name, $value, $output, $selected, $extra, $separator, $labels) {
-    $_output = '';
-    if ($labels) $_output .= '<label>';
-    $_output .= '<input type="radio" name="'
-        . smarty_function_escape_special_chars($name) . '" value="'
-        . smarty_function_escape_special_chars($value) . '"';
-
-    if ($value==$selected) {
-        $_output .= ' checked="checked"';
-    }
-    $_output .= $extra . ' />' . $output;
-    if ($labels) $_output .= '</label>';
-    $_output .=  $separator;
-
-    return $_output;
-}
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_radios} function plugin
+ *
+ * File:       function.html_radios.php<br>
+ * Type:       function<br>
+ * Name:       html_radios<br>
+ * Date:       24.Feb.2003<br>
+ * Purpose:    Prints out a list of radio input types<br>
+ * Input:<br>
+ *           - name       (optional) - string default "radio"
+ *           - values     (required) - array
+ *           - options    (optional) - associative array
+ *           - checked    (optional) - array default not set
+ *           - separator  (optional) - ie <br> or &nbsp;
+ *           - output     (optional) - the output next to each radio button
+ *           - assign     (optional) - assign the output as an array to this variable
+ * Examples:
+ * <pre>
+ * {html_radios values=$ids output=$names}
+ * {html_radios values=$ids name='box' separator='<br>' output=$names}
+ * {html_radios values=$ids checked=$checked separator='<br>' output=$names}
+ * </pre>
+ * @link http://smarty.php.net/manual/en/language.function.html.radios.php {html_radios}
+ *      (Smarty online manual)
+ * @author     Christopher Kvarme <christopher.kvarme at flashjab.com>
+ * @author credits to Monte Ohrt <monte at ohrt dot com>
+ * @version    1.0
+ * @param array
+ * @param Smarty
+ * @return string
+ * @uses smarty_function_escape_special_chars()
+ */
+function smarty_function_html_radios($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
+   
+    $name = 'radio';
+    $values = null;
+    $options = null;
+    $selected = null;
+    $separator = '';
+    $labels = true;
+    $label_ids = false;
+    $output = null;
+    $extra = '';
+
+    foreach($params as $_key => $_val) {
+        switch($_key) {
+            case 'name':
+            case 'separator':
+                $$_key = (string)$_val;
+                break;
+
+            case 'checked':
+            case 'selected':
+                if(is_array($_val)) {
+                    $smarty->trigger_error('html_radios: the "' . $_key . '" attribute cannot be an array', E_USER_WARNING);
+                } else {
+                    $selected = (string)$_val;
+                }
+                break;
+
+            case 'labels':
+            case 'label_ids':
+                $$_key = (bool)$_val;
+                break;
+
+            case 'options':
+                $$_key = (array)$_val;
+                break;
+
+            case 'values':
+            case 'output':
+                $$_key = array_values((array)$_val);
+                break;
+
+            case 'radios':
+                $smarty->trigger_error('html_radios: the use of the "radios" attribute is deprecated, use "options" instead', E_USER_WARNING);
+                $options = (array)$_val;
+                break;
+
+            case 'assign':
+                break;
+
+            default:
+                if(!is_array($_val)) {
+                    $extra .= ' '.$_key.'="'.smarty_function_escape_special_chars($_val).'"';
+                } else {
+                    $smarty->trigger_error("html_radios: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
+                }
+                break;
+        }
+    }
+
+    if (!isset($options) && !isset($values))
+        return ''; /* raise error here? */
+
+    $_html_result = array();
+
+    if (isset($options)) {
+
+        foreach ($options as $_key=>$_val)
+            $_html_result[] = smarty_function_html_radios_output($name, $_key, $_val, $selected, $extra, $separator, $labels, $label_ids);
+
+    } else {
+
+        foreach ($values as $_i=>$_key) {
+            $_val = isset($output[$_i]) ? $output[$_i] : '';
+            $_html_result[] = smarty_function_html_radios_output($name, $_key, $_val, $selected, $extra, $separator, $labels, $label_ids);
+        }
+
+    }
+
+    if(!empty($params['assign'])) {
+        $smarty->assign($params['assign'], $_html_result);
+    } else {
+        return implode("\n",$_html_result);
+    }
+
+}
+
+function smarty_function_html_radios_output($name, $value, $output, $selected, $extra, $separator, $labels, $label_ids) {
+    $_output = '';
+    if ($labels) {
+      if($label_ids) {
+          $_id = smarty_function_escape_special_chars(preg_replace('![^\w\-\.]!', '_', $name . '_' . $value));
+          $_output .= '<label for="' . $_id . '">';
+      } else {
+          $_output .= '<label>';           
+      }
+   }
+   $_output .= '<input type="radio" name="'
+        . smarty_function_escape_special_chars($name) . '" value="'
+        . smarty_function_escape_special_chars($value) . '"';
+
+   if ($labels && $label_ids) $_output .= ' id="' . $_id . '"';
+
+    if ((string)$value==$selected) {
+        $_output .= ' checked="checked"';
+    }
+    $_output .= $extra . ' />' . $output;
+    if ($labels) $_output .= '</label>';
+    $_output .=  $separator;
+
+    return $_output;
+}
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_select_date.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_select_date.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_select_date.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,312 +1,322 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-/**
- * Smarty {html_select_date} plugin
- *
- * Type:     function<br>
- * Name:     html_select_date<br>
- * Purpose:  Prints the dropdowns for date selection.
- *
- * ChangeLog:<br>
- *           - 1.0 initial release
- *           - 1.1 added support for +/- N syntax for begin
- *                and end year values. (Monte)
- *           - 1.2 added support for yyyy-mm-dd syntax for
- *                time value. (Jan Rosier)
- *           - 1.3 added support for choosing format for
- *                month values (Gary Loescher)
- *           - 1.3.1 added support for choosing format for
- *                day values (Marcus Bointon)
- *           - 1.3.2 suppport negative timestamps, force year
- *             dropdown to include given date unless explicitly set (Monte)
- * @link http://smarty.php.net/manual/en/language.function.html.select.date.php {html_select_date}
- *      (Smarty online manual)
- * @version 1.3.2
- * @author   Andrei Zmievski
- * @param array
- * @param Smarty
- * @return string
- */
-function smarty_function_html_select_date($params, &$smarty)
-{
-    require_once $smarty->_get_plugin_filepath('shared','make_timestamp');
-    require_once $smarty->_get_plugin_filepath('function','html_options');
-    /* Default values. */
-    $prefix          = "Date_";
-    $start_year      = strftime("%Y");
-    $end_year        = $start_year;
-    $display_days    = true;
-    $display_months  = true;
-    $display_years   = true;
-    $month_format    = "%B";
-    /* Write months as numbers by default  GL */
-    $month_value_format = "%m";
-    $day_format      = "%02d";
-    /* Write day values using this format MB */
-    $day_value_format = "%d";
-    $year_as_text    = false;
-    /* Display years in reverse order? Ie. 2000,1999,.... */
-    $reverse_years   = false;
-    /* Should the select boxes be part of an array when returned from PHP?
-       e.g. setting it to "birthday", would create "birthday[Day]",
-       "birthday[Month]" & "birthday[Year]". Can be combined with prefix */
-    $field_array     = null;
-    /* <select size>'s of the different <select> tags.
-       If not set, uses default dropdown. */
-    $day_size        = null;
-    $month_size      = null;
-    $year_size       = null;
-    /* Unparsed attributes common to *ALL* the <select>/<input> tags.
-       An example might be in the template: all_extra ='class ="foo"'. */
-    $all_extra       = null;
-    /* Separate attributes for the tags. */
-    $day_extra       = null;
-    $month_extra     = null;
-    $year_extra      = null;
-    /* Order in which to display the fields.
-       "D" -> day, "M" -> month, "Y" -> year. */
-    $field_order     = 'MDY';
-    /* String printed between the different fields. */
-    $field_separator = "\n";
-    $time = time();
-    $all_empty       = null;
-    $day_empty       = null;
-    $month_empty     = null;
-    $year_empty      = null;
-
-    foreach ($params as $_key=>$_value) {
-        switch ($_key) {
-            case 'prefix':
-            case 'time':
-            case 'start_year':
-            case 'end_year':
-            case 'month_format':
-            case 'day_format':
-            case 'day_value_format':
-            case 'field_array':
-            case 'day_size':
-            case 'month_size':
-            case 'year_size':
-            case 'all_extra':
-            case 'day_extra':
-            case 'month_extra':
-            case 'year_extra':
-            case 'field_order':
-            case 'field_separator':
-            case 'month_value_format':
-            case 'month_empty':
-            case 'day_empty':
-            case 'year_empty':
-                $$_key = (string)$_value;
-                break;
-
-            case 'all_empty':
-                $$_key = (string)$_value;
-                $day_empty = $month_empty = $year_empty = $all_empty;
-                break;
-
-            case 'display_days':
-            case 'display_months':
-            case 'display_years':
-            case 'year_as_text':
-            case 'reverse_years':
-                $$_key = (bool)$_value;
-                break;
-
-            default:
-                $smarty->trigger_error("[html_select_date] unknown parameter $_key", E_USER_WARNING);
-
-        }
-    }
-
-    if(preg_match('!^-\d+$!',$time)) {
-        // negative timestamp, use date()
-        $time = date('Y-m-d',$time);
-    }
-    // If $time is not in format yyyy-mm-dd
-    if (!preg_match('/^\d{0,4}-\d{0,2}-\d{0,2}$/', $time)) {
-        // use smarty_make_timestamp to get an unix timestamp and
-        // strftime to make yyyy-mm-dd
-        $time = strftime('%Y-%m-%d', smarty_make_timestamp($time));
-    }
-    // Now split this in pieces, which later can be used to set the select
-    $time = explode("-", $time);
-    
-    // make syntax "+N" or "-N" work with start_year and end_year
-    if (preg_match('!^(\+|\-)\s*(\d+)$!', $end_year, $match)) {
-        if ($match[1] == '+') {
-            $end_year = strftime('%Y') + $match[2];
-        } else {
-            $end_year = strftime('%Y') - $match[2];
-        }
-    }
-    if (preg_match('!^(\+|\-)\s*(\d+)$!', $start_year, $match)) {
-        if ($match[1] == '+') {
-            $start_year = strftime('%Y') + $match[2];
-        } else {
-            $start_year = strftime('%Y') - $match[2];
-        }
-    }
-    if($start_year > $time[0] && !isset($params['start_year'])) {
-        // force start year to include given date if not explicitly set
-        $start_year = $time[0];
-    }
-    if($end_year < $time[0] && !isset($params['end_year'])) {
-        // force end year to include given date if not explicitly set
-        $end_year = $time[0];
-    }
-
-    $field_order = strtoupper($field_order);
-
-    $html_result = $month_result = $day_result = $year_result = "";
-
-    if ($display_months) {
-        $month_names = array();
-        $month_values = array();
-        if(isset($month_empty)) {
-            $month_names[''] = $month_empty;
-            $month_values[''] = '';
-        }
-        for ($i = 1; $i <= 12; $i++) {
-            $month_names[$i] = strftime($month_format, mktime(0, 0, 0, $i, 1, 2000));
-            $month_values[$i] = strftime($month_value_format, mktime(0, 0, 0, $i, 1, 2000));
-        }
-
-        $month_result .= '<select name=';
-        if (null !== $field_array){
-            $month_result .= '"' . $field_array . '[' . $prefix . 'Month]"';
-        } else {
-            $month_result .= '"' . $prefix . 'Month"';
-        }
-        if (null !== $month_size){
-            $month_result .= ' size="' . $month_size . '"';
-        }
-        if (null !== $month_extra){
-            $month_result .= ' ' . $month_extra;
-        }
-        if (null !== $all_extra){
-            $month_result .= ' ' . $all_extra;
-        }
-        $month_result .= '>'."\n";
-
-        $month_result .= smarty_function_html_options(array('output'     => $month_names,
-                                                            'values'     => $month_values,
-                                                            'selected'   => $a=$time[1] ? strftime($month_value_format, mktime(0, 0, 0, (int)$time[1], 1, 2000)) : '',
-                                                            'print_result' => false),
-                                                      $smarty);
-        $month_result .= '</select>';
-    }
-
-    if ($display_days) {
-        $days = array();
-        if (isset($day_empty)) {
-            $days[''] = $day_empty;
-            $day_values[''] = '';
-        }
-        for ($i = 1; $i <= 31; $i++) {
-            $days[] = sprintf($day_format, $i);
-            $day_values[] = sprintf($day_value_format, $i);
-        }
-
-        $day_result .= '<select name=';
-        if (null !== $field_array){
-            $day_result .= '"' . $field_array . '[' . $prefix . 'Day]"';
-        } else {
-            $day_result .= '"' . $prefix . 'Day"';
-        }
-        if (null !== $day_size){
-            $day_result .= ' size="' . $day_size . '"';
-        }
-        if (null !== $all_extra){
-            $day_result .= ' ' . $all_extra;
-        }
-        if (null !== $day_extra){
-            $day_result .= ' ' . $day_extra;
-        }
-        $day_result .= '>'."\n";
-        $day_result .= smarty_function_html_options(array('output'     => $days,
-                                                          'values'     => $day_values,
-                                                          'selected'   => $time[2],
-                                                          'print_result' => false),
-                                                    $smarty);
-        $day_result .= '</select>';
-    }
-
-    if ($display_years) {
-        if (null !== $field_array){
-            $year_name = $field_array . '[' . $prefix . 'Year]';
-        } else {
-            $year_name = $prefix . 'Year';
-        }
-        if ($year_as_text) {
-            $year_result .= '<input type="text" name="' . $year_name . '" value="' . $time[0] . '" size="4" maxlength="4"';
-            if (null !== $all_extra){
-                $year_result .= ' ' . $all_extra;
-            }
-            if (null !== $year_extra){
-                $year_result .= ' ' . $year_extra;
-            }
-            $year_result .= '>';
-        } else {
-            $years = range((int)$start_year, (int)$end_year);
-            if ($reverse_years) {
-                rsort($years, SORT_NUMERIC);
-            }
-            $yearvals = $years;
-            if(isset($year_empty)) {
-                array_unshift($years, $year_empty);
-                array_unshift($yearvals, '');
-            }
-            $year_result .= '<select name="' . $year_name . '"';
-            if (null !== $year_size){
-                $year_result .= ' size="' . $year_size . '"';
-            }
-            if (null !== $all_extra){
-                $year_result .= ' ' . $all_extra;
-            }
-            if (null !== $year_extra){
-                $year_result .= ' ' . $year_extra;
-            }
-            $year_result .= '>'."\n";
-            $year_result .= smarty_function_html_options(array('output' => $years,
-                                                               'values' => $yearvals,
-                                                               'selected'   => $time[0],
-                                                               'print_result' => false),
-                                                         $smarty);
-            $year_result .= '</select>';
-        }
-    }
-
-    // Loop thru the field_order field
-    for ($i = 0; $i <= 2; $i++){
-        $c = substr($field_order, $i, 1);
-        switch ($c){
-            case 'D':
-                $html_result .= $day_result;
-                break;
-
-            case 'M':
-                $html_result .= $month_result;
-                break;
-
-            case 'Y':
-                $html_result .= $year_result;
-                break;
-        }
-        // Add the field seperator
-        if($i != 2) {
-            $html_result .= $field_separator;
-        }
-    }
-
-    return $html_result;
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty {html_select_date} plugin
+ *
+ * Type:     function<br>
+ * Name:     html_select_date<br>
+ * Purpose:  Prints the dropdowns for date selection.
+ *
+ * ChangeLog:<br>
+ *           - 1.0 initial release
+ *           - 1.1 added support for +/- N syntax for begin
+ *                and end year values. (Monte)
+ *           - 1.2 added support for yyyy-mm-dd syntax for
+ *                time value. (Jan Rosier)
+ *           - 1.3 added support for choosing format for
+ *                month values (Gary Loescher)
+ *           - 1.3.1 added support for choosing format for
+ *                day values (Marcus Bointon)
+ *           - 1.3.2 suppport negative timestamps, force year
+ *             dropdown to include given date unless explicitly set (Monte)
+ * @link http://smarty.php.net/manual/en/language.function.html.select.date.php {html_select_date}
+ *      (Smarty online manual)
+ * @version 1.3.2
+ * @author   Andrei Zmievski
+ * @param array
+ * @param Smarty
+ * @return string
+ */
+function smarty_function_html_select_date($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','escape_special_chars');
+    require_once $smarty->_get_plugin_filepath('shared','make_timestamp');
+    require_once $smarty->_get_plugin_filepath('function','html_options');
+    /* Default values. */
+    $prefix          = "Date_";
+    $start_year      = strftime("%Y");
+    $end_year        = $start_year;
+    $display_days    = true;
+    $display_months  = true;
+    $display_years   = true;
+    $month_format    = "%B";
+    /* Write months as numbers by default  GL */
+    $month_value_format = "%m";
+    $day_format      = "%02d";
+    /* Write day values using this format MB */
+    $day_value_format = "%d";
+    $year_as_text    = false;
+    /* Display years in reverse order? Ie. 2000,1999,.... */
+    $reverse_years   = false;
+    /* Should the select boxes be part of an array when returned from PHP?
+       e.g. setting it to "birthday", would create "birthday[Day]",
+       "birthday[Month]" & "birthday[Year]". Can be combined with prefix */
+    $field_array     = null;
+    /* <select size>'s of the different <select> tags.
+       If not set, uses default dropdown. */
+    $day_size        = null;
+    $month_size      = null;
+    $year_size       = null;
+    /* Unparsed attributes common to *ALL* the <select>/<input> tags.
+       An example might be in the template: all_extra ='class ="foo"'. */
+    $all_extra       = null;
+    /* Separate attributes for the tags. */
+    $day_extra       = null;
+    $month_extra     = null;
+    $year_extra      = null;
+    /* Order in which to display the fields.
+       "D" -> day, "M" -> month, "Y" -> year. */
+    $field_order     = 'MDY';
+    /* String printed between the different fields. */
+    $field_separator = "\n";
+    $time = time();
+    $all_empty       = null;
+    $day_empty       = null;
+    $month_empty     = null;
+    $year_empty      = null;
+    $extra_attrs     = '';
+
+    foreach ($params as $_key=>$_value) {
+        switch ($_key) {
+            case 'prefix':
+            case 'time':
+            case 'start_year':
+            case 'end_year':
+            case 'month_format':
+            case 'day_format':
+            case 'day_value_format':
+            case 'field_array':
+            case 'day_size':
+            case 'month_size':
+            case 'year_size':
+            case 'all_extra':
+            case 'day_extra':
+            case 'month_extra':
+            case 'year_extra':
+            case 'field_order':
+            case 'field_separator':
+            case 'month_value_format':
+            case 'month_empty':
+            case 'day_empty':
+            case 'year_empty':
+                $$_key = (string)$_value;
+                break;
+
+            case 'all_empty':
+                $$_key = (string)$_value;
+                $day_empty = $month_empty = $year_empty = $all_empty;
+                break;
+
+            case 'display_days':
+            case 'display_months':
+            case 'display_years':
+            case 'year_as_text':
+            case 'reverse_years':
+                $$_key = (bool)$_value;
+                break;
+
+            default:
+                if(!is_array($_value)) {
+                    $extra_attrs .= ' '.$_key.'="'.smarty_function_escape_special_chars($_value).'"';
+                } else {
+                    $smarty->trigger_error("html_select_date: extra attribute '$_key' cannot be an array", E_USER_NOTICE);
+                }
+                break;
+        }
+    }
+
+    if(preg_match('!^-\d+$!',$time)) {
+        // negative timestamp, use date()
+        $time = date('Y-m-d',$time);
+    }
+    // If $time is not in format yyyy-mm-dd
+    if (!preg_match('/^\d{0,4}-\d{0,2}-\d{0,2}$/', $time)) {
+        // use smarty_make_timestamp to get an unix timestamp and
+        // strftime to make yyyy-mm-dd
+        $time = strftime('%Y-%m-%d', smarty_make_timestamp($time));
+    }
+    // Now split this in pieces, which later can be used to set the select
+    $time = explode("-", $time);
+    
+    // make syntax "+N" or "-N" work with start_year and end_year
+    if (preg_match('!^(\+|\-)\s*(\d+)$!', $end_year, $match)) {
+        if ($match[1] == '+') {
+            $end_year = strftime('%Y') + $match[2];
+        } else {
+            $end_year = strftime('%Y') - $match[2];
+        }
+    }
+    if (preg_match('!^(\+|\-)\s*(\d+)$!', $start_year, $match)) {
+        if ($match[1] == '+') {
+            $start_year = strftime('%Y') + $match[2];
+        } else {
+            $start_year = strftime('%Y') - $match[2];
+        }
+    }
+    if (strlen($time[0]) > 0) { 
+        if ($start_year > $time[0] && !isset($params['start_year'])) {
+            // force start year to include given date if not explicitly set
+            $start_year = $time[0];
+        }
+        if($end_year < $time[0] && !isset($params['end_year'])) {
+            // force end year to include given date if not explicitly set
+            $end_year = $time[0];
+        }
+    }
+
+    $field_order = strtoupper($field_order);
+
+    $html_result = $month_result = $day_result = $year_result = "";
+
+    if ($display_months) {
+        $month_names = array();
+        $month_values = array();
+        if(isset($month_empty)) {
+            $month_names[''] = $month_empty;
+            $month_values[''] = '';
+        }
+        for ($i = 1; $i <= 12; $i++) {
+            $month_names[$i] = strftime($month_format, mktime(0, 0, 0, $i, 1, 2000));
+            $month_values[$i] = strftime($month_value_format, mktime(0, 0, 0, $i, 1, 2000));
+        }
+
+        $month_result .= '<select name=';
+        if (null !== $field_array){
+            $month_result .= '"' . $field_array . '[' . $prefix . 'Month]"';
+        } else {
+            $month_result .= '"' . $prefix . 'Month"';
+        }
+        if (null !== $month_size){
+            $month_result .= ' size="' . $month_size . '"';
+        }
+        if (null !== $month_extra){
+            $month_result .= ' ' . $month_extra;
+        }
+        if (null !== $all_extra){
+            $month_result .= ' ' . $all_extra;
+        }
+        $month_result .= $extra_attrs . '>'."\n";
+
+        $month_result .= smarty_function_html_options(array('output'     => $month_names,
+                                                            'values'     => $month_values,
+                                                            'selected'   => (int)$time[1] ? strftime($month_value_format, mktime(0, 0, 0, (int)$time[1], 1, 2000)) : '',
+                                                            'print_result' => false),
+                                                      $smarty);
+        $month_result .= '</select>';
+    }
+
+    if ($display_days) {
+        $days = array();
+        if (isset($day_empty)) {
+            $days[''] = $day_empty;
+            $day_values[''] = '';
+        }
+        for ($i = 1; $i <= 31; $i++) {
+            $days[] = sprintf($day_format, $i);
+            $day_values[] = sprintf($day_value_format, $i);
+        }
+
+        $day_result .= '<select name=';
+        if (null !== $field_array){
+            $day_result .= '"' . $field_array . '[' . $prefix . 'Day]"';
+        } else {
+            $day_result .= '"' . $prefix . 'Day"';
+        }
+        if (null !== $day_size){
+            $day_result .= ' size="' . $day_size . '"';
+        }
+        if (null !== $all_extra){
+            $day_result .= ' ' . $all_extra;
+        }
+        if (null !== $day_extra){
+            $day_result .= ' ' . $day_extra;
+        }
+        $day_result .= $extra_attrs . '>'."\n";
+        $day_result .= smarty_function_html_options(array('output'     => $days,
+                                                          'values'     => $day_values,
+                                                          'selected'   => $time[2],
+                                                          'print_result' => false),
+                                                    $smarty);
+        $day_result .= '</select>';
+    }
+
+    if ($display_years) {
+        if (null !== $field_array){
+            $year_name = $field_array . '[' . $prefix . 'Year]';
+        } else {
+            $year_name = $prefix . 'Year';
+        }
+        if ($year_as_text) {
+            $year_result .= '<input type="text" name="' . $year_name . '" value="' . $time[0] . '" size="4" maxlength="4"';
+            if (null !== $all_extra){
+                $year_result .= ' ' . $all_extra;
+            }
+            if (null !== $year_extra){
+                $year_result .= ' ' . $year_extra;
+            }
+            $year_result .= ' />';
+        } else {
+            $years = range((int)$start_year, (int)$end_year);
+            if ($reverse_years) {
+                rsort($years, SORT_NUMERIC);
+            } else {
+                sort($years, SORT_NUMERIC);
+            }
+            $yearvals = $years;
+            if(isset($year_empty)) {
+                array_unshift($years, $year_empty);
+                array_unshift($yearvals, '');
+            }
+            $year_result .= '<select name="' . $year_name . '"';
+            if (null !== $year_size){
+                $year_result .= ' size="' . $year_size . '"';
+            }
+            if (null !== $all_extra){
+                $year_result .= ' ' . $all_extra;
+            }
+            if (null !== $year_extra){
+                $year_result .= ' ' . $year_extra;
+            }
+            $year_result .= $extra_attrs . '>'."\n";
+            $year_result .= smarty_function_html_options(array('output' => $years,
+                                                               'values' => $yearvals,
+                                                               'selected'   => $time[0],
+                                                               'print_result' => false),
+                                                         $smarty);
+            $year_result .= '</select>';
+        }
+    }
+
+    // Loop thru the field_order field
+    for ($i = 0; $i <= 2; $i++){
+        $c = substr($field_order, $i, 1);
+        switch ($c){
+            case 'D':
+                $html_result .= $day_result;
+                break;
+
+            case 'M':
+                $html_result .= $month_result;
+                break;
+
+            case 'Y':
+                $html_result .= $year_result;
+                break;
+        }
+        // Add the field seperator
+        if($i != 2) {
+            $html_result .= $field_separator;
+        }
+    }
+
+    return $html_result;
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_select_time.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_select_time.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_select_time.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,192 +1,192 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {html_select_time} function plugin
- *
- * Type:     function<br>
- * Name:     html_select_time<br>
- * Purpose:  Prints the dropdowns for time selection
- * @link http://smarty.php.net/manual/en/language.function.html.select.time.php {html_select_time}
- *          (Smarty online manual)
- * @param array
- * @param Smarty
- * @return string
- * @uses smarty_make_timestamp()
- */
-function smarty_function_html_select_time($params, &$smarty)
-{
-    require_once $smarty->_get_plugin_filepath('shared','make_timestamp');
-    require_once $smarty->_get_plugin_filepath('function','html_options');
-    /* Default values. */
-    $prefix             = "Time_";
-    $time               = time();
-    $display_hours      = true;
-    $display_minutes    = true;
-    $display_seconds    = true;
-    $display_meridian   = true;
-    $use_24_hours       = true;
-    $minute_interval    = 1;
-    $second_interval    = 1;
-    /* Should the select boxes be part of an array when returned from PHP?
-       e.g. setting it to "birthday", would create "birthday[Hour]",
-       "birthday[Minute]", "birthday[Seconds]" & "birthday[Meridian]".
-       Can be combined with prefix. */
-    $field_array        = null;
-    $all_extra          = null;
-    $hour_extra         = null;
-    $minute_extra       = null;
-    $second_extra       = null;
-    $meridian_extra     = null;
-
-    foreach ($params as $_key=>$_value) {
-        switch ($_key) {
-            case 'prefix':
-            case 'time':
-            case 'field_array':
-            case 'all_extra':
-            case 'hour_extra':
-            case 'minute_extra':
-            case 'second_extra':
-            case 'meridian_extra':
-                $$_key = (string)$_value;
-                break;
-
-            case 'display_hours':
-            case 'display_minutes':
-            case 'display_seconds':
-            case 'display_meridian':
-            case 'use_24_hours':
-                $$_key = (bool)$_value;
-                break;
-
-            case 'minute_interval':
-            case 'second_interval':
-                $$_key = (int)$_value;
-                break;
-
-            default:
-                $smarty->trigger_error("[html_select_time] unknown parameter $_key", E_USER_WARNING);
-        }
-    }
-
-    $time = smarty_make_timestamp($time);
-
-    $html_result = '';
-
-    if ($display_hours) {
-        $hours       = $use_24_hours ? range(0, 23) : range(1, 12);
-        $hour_fmt = $use_24_hours ? '%H' : '%I';
-        for ($i = 0, $for_max = count($hours); $i < $for_max; $i++)
-            $hours[$i] = sprintf('%02d', $hours[$i]);
-        $html_result .= '<select name=';
-        if (null !== $field_array) {
-            $html_result .= '"' . $field_array . '[' . $prefix . 'Hour]"';
-        } else {
-            $html_result .= '"' . $prefix . 'Hour"';
-        }
-        if (null !== $hour_extra){
-            $html_result .= ' ' . $hour_extra;
-        }
-        if (null !== $all_extra){
-            $html_result .= ' ' . $all_extra;
-        }
-        $html_result .= '>'."\n";
-        $html_result .= smarty_function_html_options(array('output'          => $hours,
-                                                           'values'          => $hours,
-                                                           'selected'      => strftime($hour_fmt, $time),
-                                                           'print_result' => false),
-                                                     $smarty);
-        $html_result .= "</select>\n";
-    }
-
-    if ($display_minutes) {
-        $all_minutes = range(0, 59);
-        for ($i = 0, $for_max = count($all_minutes); $i < $for_max; $i+= $minute_interval)
-            $minutes[] = sprintf('%02d', $all_minutes[$i]);
-        $selected = intval(floor(strftime('%M', $time) / $minute_interval) * $minute_interval);
-        $html_result .= '<select name=';
-        if (null !== $field_array) {
-            $html_result .= '"' . $field_array . '[' . $prefix . 'Minute]"';
-        } else {
-            $html_result .= '"' . $prefix . 'Minute"';
-        }
-        if (null !== $minute_extra){
-            $html_result .= ' ' . $minute_extra;
-        }
-        if (null !== $all_extra){
-            $html_result .= ' ' . $all_extra;
-        }
-        $html_result .= '>'."\n";
-        
-        $html_result .= smarty_function_html_options(array('output'          => $minutes,
-                                                           'values'          => $minutes,
-                                                           'selected'      => $selected,
-                                                           'print_result' => false),
-                                                     $smarty);
-        $html_result .= "</select>\n";
-    }
-
-    if ($display_seconds) {
-        $all_seconds = range(0, 59);
-        for ($i = 0, $for_max = count($all_seconds); $i < $for_max; $i+= $second_interval)
-            $seconds[] = sprintf('%02d', $all_seconds[$i]);
-        $selected = intval(floor(strftime('%S', $time) / $second_interval) * $second_interval);
-        $html_result .= '<select name=';
-        if (null !== $field_array) {
-            $html_result .= '"' . $field_array . '[' . $prefix . 'Second]"';
-        } else {
-            $html_result .= '"' . $prefix . 'Second"';
-        }
-        
-        if (null !== $second_extra){
-            $html_result .= ' ' . $second_extra;
-        }
-        if (null !== $all_extra){
-            $html_result .= ' ' . $all_extra;
-        }
-        $html_result .= '>'."\n";
-        
-        $html_result .= smarty_function_html_options(array('output'          => $seconds,
-                                                           'values'          => $seconds,
-                                                           'selected'      => $selected,
-                                                           'print_result' => false),
-                                                     $smarty);
-        $html_result .= "</select>\n";
-    }
-
-    if ($display_meridian && !$use_24_hours) {
-        $html_result .= '<select name=';
-        if (null !== $field_array) {
-            $html_result .= '"' . $field_array . '[' . $prefix . 'Meridian]"';
-        } else {
-            $html_result .= '"' . $prefix . 'Meridian"';
-        }
-        
-        if (null !== $meridian_extra){
-            $html_result .= ' ' . $meridian_extra;
-        }
-        if (null !== $all_extra){
-            $html_result .= ' ' . $all_extra;
-        }
-        $html_result .= '>'."\n";
-        
-        $html_result .= smarty_function_html_options(array('output'          => array('AM', 'PM'),
-                                                           'values'          => array('am', 'pm'),
-                                                           'selected'      => strtolower(strftime('%p', $time)),
-                                                           'print_result' => false),
-                                                     $smarty);
-        $html_result .= "</select>\n";
-    }
-
-    return $html_result;
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_select_time} function plugin
+ *
+ * Type:     function<br>
+ * Name:     html_select_time<br>
+ * Purpose:  Prints the dropdowns for time selection
+ * @link http://smarty.php.net/manual/en/language.function.html.select.time.php {html_select_time}
+ *          (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ * @uses smarty_make_timestamp()
+ */
+function smarty_function_html_select_time($params, &$smarty)
+{
+    require_once $smarty->_get_plugin_filepath('shared','make_timestamp');
+    require_once $smarty->_get_plugin_filepath('function','html_options');
+    /* Default values. */
+    $prefix             = "Time_";
+    $time               = time();
+    $display_hours      = true;
+    $display_minutes    = true;
+    $display_seconds    = true;
+    $display_meridian   = true;
+    $use_24_hours       = true;
+    $minute_interval    = 1;
+    $second_interval    = 1;
+    /* Should the select boxes be part of an array when returned from PHP?
+       e.g. setting it to "birthday", would create "birthday[Hour]",
+       "birthday[Minute]", "birthday[Seconds]" & "birthday[Meridian]".
+       Can be combined with prefix. */
+    $field_array        = null;
+    $all_extra          = null;
+    $hour_extra         = null;
+    $minute_extra       = null;
+    $second_extra       = null;
+    $meridian_extra     = null;
+
+    foreach ($params as $_key=>$_value) {
+        switch ($_key) {
+            case 'prefix':
+            case 'time':
+            case 'field_array':
+            case 'all_extra':
+            case 'hour_extra':
+            case 'minute_extra':
+            case 'second_extra':
+            case 'meridian_extra':
+                $$_key = (string)$_value;
+                break;
+
+            case 'display_hours':
+            case 'display_minutes':
+            case 'display_seconds':
+            case 'display_meridian':
+            case 'use_24_hours':
+                $$_key = (bool)$_value;
+                break;
+
+            case 'minute_interval':
+            case 'second_interval':
+                $$_key = (int)$_value;
+                break;
+
+            default:
+                $smarty->trigger_error("[html_select_time] unknown parameter $_key", E_USER_WARNING);
+        }
+    }
+
+    $time = smarty_make_timestamp($time);
+
+    $html_result = '';
+
+    if ($display_hours) {
+        $hours       = $use_24_hours ? range(0, 23) : range(1, 12);
+        $hour_fmt = $use_24_hours ? '%H' : '%I';
+        for ($i = 0, $for_max = count($hours); $i < $for_max; $i++)
+            $hours[$i] = sprintf('%02d', $hours[$i]);
+        $html_result .= '<select name=';
+        if (null !== $field_array) {
+            $html_result .= '"' . $field_array . '[' . $prefix . 'Hour]"';
+        } else {
+            $html_result .= '"' . $prefix . 'Hour"';
+        }
+        if (null !== $hour_extra){
+            $html_result .= ' ' . $hour_extra;
+        }
+        if (null !== $all_extra){
+            $html_result .= ' ' . $all_extra;
+        }
+        $html_result .= '>'."\n";
+        $html_result .= smarty_function_html_options(array('output'          => $hours,
+                                                           'values'          => $hours,
+                                                           'selected'      => strftime($hour_fmt, $time),
+                                                           'print_result' => false),
+                                                     $smarty);
+        $html_result .= "</select>\n";
+    }
+
+    if ($display_minutes) {
+        $all_minutes = range(0, 59);
+        for ($i = 0, $for_max = count($all_minutes); $i < $for_max; $i+= $minute_interval)
+            $minutes[] = sprintf('%02d', $all_minutes[$i]);
+        $selected = intval(floor(strftime('%M', $time) / $minute_interval) * $minute_interval);
+        $html_result .= '<select name=';
+        if (null !== $field_array) {
+            $html_result .= '"' . $field_array . '[' . $prefix . 'Minute]"';
+        } else {
+            $html_result .= '"' . $prefix . 'Minute"';
+        }
+        if (null !== $minute_extra){
+            $html_result .= ' ' . $minute_extra;
+        }
+        if (null !== $all_extra){
+            $html_result .= ' ' . $all_extra;
+        }
+        $html_result .= '>'."\n";
+        
+        $html_result .= smarty_function_html_options(array('output'          => $minutes,
+                                                           'values'          => $minutes,
+                                                           'selected'      => $selected,
+                                                           'print_result' => false),
+                                                     $smarty);
+        $html_result .= "</select>\n";
+    }
+
+    if ($display_seconds) {
+        $all_seconds = range(0, 59);
+        for ($i = 0, $for_max = count($all_seconds); $i < $for_max; $i+= $second_interval)
+            $seconds[] = sprintf('%02d', $all_seconds[$i]);
+        $selected = intval(floor(strftime('%S', $time) / $second_interval) * $second_interval);
+        $html_result .= '<select name=';
+        if (null !== $field_array) {
+            $html_result .= '"' . $field_array . '[' . $prefix . 'Second]"';
+        } else {
+            $html_result .= '"' . $prefix . 'Second"';
+        }
+        
+        if (null !== $second_extra){
+            $html_result .= ' ' . $second_extra;
+        }
+        if (null !== $all_extra){
+            $html_result .= ' ' . $all_extra;
+        }
+        $html_result .= '>'."\n";
+        
+        $html_result .= smarty_function_html_options(array('output'          => $seconds,
+                                                           'values'          => $seconds,
+                                                           'selected'      => $selected,
+                                                           'print_result' => false),
+                                                     $smarty);
+        $html_result .= "</select>\n";
+    }
+
+    if ($display_meridian && !$use_24_hours) {
+        $html_result .= '<select name=';
+        if (null !== $field_array) {
+            $html_result .= '"' . $field_array . '[' . $prefix . 'Meridian]"';
+        } else {
+            $html_result .= '"' . $prefix . 'Meridian"';
+        }
+        
+        if (null !== $meridian_extra){
+            $html_result .= ' ' . $meridian_extra;
+        }
+        if (null !== $all_extra){
+            $html_result .= ' ' . $all_extra;
+        }
+        $html_result .= '>'."\n";
+        
+        $html_result .= smarty_function_html_options(array('output'          => array('AM', 'PM'),
+                                                           'values'          => array('am', 'pm'),
+                                                           'selected'      => strtolower(strftime('%p', $time)),
+                                                           'print_result' => false),
+                                                     $smarty);
+        $html_result .= "</select>\n";
+    }
+
+    return $html_result;
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_table.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_table.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.html_table.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,136 +1,137 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {html_table} function plugin
- *
- * Type:     function<br>
- * Name:     html_table<br>
- * Date:     Feb 17, 2003<br>
- * Purpose:  make an html table from an array of data<br>
- * Input:<br>
- *         - loop = array to loop through
- *         - cols = number of columns
- *         - rows = number of rows
- *         - table_attr = table attributes
- *         - tr_attr = table row attributes (arrays are cycled)
- *         - td_attr = table cell attributes (arrays are cycled)
- *         - trailpad = value to pad trailing cells with
- *         - vdir = vertical direction (default: "down", means top-to-bottom)
- *         - hdir = horizontal direction (default: "right", means left-to-right)
- *         - inner = inner loop (default "cols": print $loop line by line,
- *                   $loop will be printed column by column otherwise)
- *
- *
- * Examples:
- * <pre>
- * {table loop=$data}
- * {table loop=$data cols=4 tr_attr='"bgcolor=red"'}
- * {table loop=$data cols=4 tr_attr=$colors}
- * </pre>
- * @author   Monte Ohrt <monte at ispi.net>
- * @version  1.0
- * @link http://smarty.php.net/manual/en/language.function.html.table.php {html_table}
- *          (Smarty online manual)
- * @param array
- * @param Smarty
- * @return string
- */
-function smarty_function_html_table($params, &$smarty)
-{
-    $table_attr = 'border="1"';
-    $tr_attr = '';
-    $td_attr = '';
-    $cols = 3;
-    $rows = 3;
-    $trailpad = '&nbsp;';
-    $vdir = 'down';
-    $hdir = 'right';
-    $inner = 'cols';
-
-    if (!isset($params['loop'])) {
-        $smarty->trigger_error("html_table: missing 'loop' parameter");
-        return;
-    }
-
-    foreach ($params as $_key=>$_value) {
-        switch ($_key) {
-            case 'loop':
-                $$_key = (array)$_value;
-                break;
-
-            case 'cols':
-            case 'rows':
-                $$_key = (int)$_value;
-                break;
-
-            case 'table_attr':
-            case 'trailpad':
-            case 'hdir':
-            case 'vdir':
-                $$_key = (string)$_value;
-                break;
-
-            case 'tr_attr':
-            case 'td_attr':
-                $$_key = $_value;
-                break;
-        }
-    }
-
-    $loop_count = count($loop);
-    if (empty($params['rows'])) {
-        /* no rows specified */
-        $rows = ceil($loop_count/$cols);
-    } elseif (empty($params['cols'])) {
-        if (!empty($params['rows'])) {
-            /* no cols specified, but rows */
-            $cols = ceil($loop_count/$rows);
-        }
-    }
-
-    $output = "<table $table_attr>\n";
-
-    for ($r=0; $r<$rows; $r++) {
-        $output .= "<tr" . smarty_function_html_table_cycle('tr', $tr_attr, $r) . ">\n";
-        $rx =  ($vdir == 'down') ? $r*$cols : ($rows-1-$r)*$cols;
-
-        for ($c=0; $c<$cols; $c++) {
-            $x =  ($hdir == 'right') ? $rx+$c : $rx+$cols-1-$c;
-            if ($inner!='cols') {
-                /* shuffle x to loop over rows*/
-                $x = floor($x/$cols) + ($x%$cols)*$rows;
-            }
-
-            if ($x<$loop_count) {
-                $output .= "<td" . smarty_function_html_table_cycle('td', $td_attr, $c) . ">" . $loop[$x] . "</td>\n";
-            } else {
-                $output .= "<td" . smarty_function_html_table_cycle('td', $td_attr, $c) . ">$trailpad</td>\n";
-            }
-        }
-        $output .= "</tr>\n";
-    }
-    $output .= "</table>\n";
-    
-    return $output;
-}
-
-function smarty_function_html_table_cycle($name, $var, $no) {
-    if(!is_array($var)) {
-        $ret = $var;
-    } else {
-        $ret = $var[$no % count($var)];
-    }
-    
-    return ($ret) ? ' '.$ret : '';
-}
-
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {html_table} function plugin
+ *
+ * Type:     function<br>
+ * Name:     html_table<br>
+ * Date:     Feb 17, 2003<br>
+ * Purpose:  make an html table from an array of data<br>
+ * Input:<br>
+ *         - loop = array to loop through
+ *         - cols = number of columns
+ *         - rows = number of rows
+ *         - table_attr = table attributes
+ *         - tr_attr = table row attributes (arrays are cycled)
+ *         - td_attr = table cell attributes (arrays are cycled)
+ *         - trailpad = value to pad trailing cells with
+ *         - vdir = vertical direction (default: "down", means top-to-bottom)
+ *         - hdir = horizontal direction (default: "right", means left-to-right)
+ *         - inner = inner loop (default "cols": print $loop line by line,
+ *                   $loop will be printed column by column otherwise)
+ *
+ *
+ * Examples:
+ * <pre>
+ * {table loop=$data}
+ * {table loop=$data cols=4 tr_attr='"bgcolor=red"'}
+ * {table loop=$data cols=4 tr_attr=$colors}
+ * </pre>
+ * @author   Monte Ohrt <monte at ohrt dot com>
+ * @version  1.0
+ * @link http://smarty.php.net/manual/en/language.function.html.table.php {html_table}
+ *          (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ */
+function smarty_function_html_table($params, &$smarty)
+{
+    $table_attr = 'border="1"';
+    $tr_attr = '';
+    $td_attr = '';
+    $cols = 3;
+    $rows = 3;
+    $trailpad = '&nbsp;';
+    $vdir = 'down';
+    $hdir = 'right';
+    $inner = 'cols';
+
+    if (!isset($params['loop'])) {
+        $smarty->trigger_error("html_table: missing 'loop' parameter");
+        return;
+    }
+
+    foreach ($params as $_key=>$_value) {
+        switch ($_key) {
+            case 'loop':
+                $$_key = (array)$_value;
+                break;
+
+            case 'cols':
+            case 'rows':
+                $$_key = (int)$_value;
+                break;
+
+            case 'table_attr':
+            case 'trailpad':
+            case 'hdir':
+            case 'vdir':
+            case 'inner':
+                $$_key = (string)$_value;
+                break;
+
+            case 'tr_attr':
+            case 'td_attr':
+                $$_key = $_value;
+                break;
+        }
+    }
+
+    $loop_count = count($loop);
+    if (empty($params['rows'])) {
+        /* no rows specified */
+        $rows = ceil($loop_count/$cols);
+    } elseif (empty($params['cols'])) {
+        if (!empty($params['rows'])) {
+            /* no cols specified, but rows */
+            $cols = ceil($loop_count/$rows);
+        }
+    }
+
+    $output = "<table $table_attr>\n";
+
+    for ($r=0; $r<$rows; $r++) {
+        $output .= "<tr" . smarty_function_html_table_cycle('tr', $tr_attr, $r) . ">\n";
+        $rx =  ($vdir == 'down') ? $r*$cols : ($rows-1-$r)*$cols;
+
+        for ($c=0; $c<$cols; $c++) {
+            $x =  ($hdir == 'right') ? $rx+$c : $rx+$cols-1-$c;
+            if ($inner!='cols') {
+                /* shuffle x to loop over rows*/
+                $x = floor($x/$cols) + ($x%$cols)*$rows;
+            }
+
+            if ($x<$loop_count) {
+                $output .= "<td" . smarty_function_html_table_cycle('td', $td_attr, $c) . ">" . $loop[$x] . "</td>\n";
+            } else {
+                $output .= "<td" . smarty_function_html_table_cycle('td', $td_attr, $c) . ">$trailpad</td>\n";
+            }
+        }
+        $output .= "</tr>\n";
+    }
+    $output .= "</table>\n";
+    
+    return $output;
+}
+
+function smarty_function_html_table_cycle($name, $var, $no) {
+    if(!is_array($var)) {
+        $ret = $var;
+    } else {
+        $ret = $var[$no % count($var)];
+    }
+    
+    return ($ret) ? ' '.$ret : '';
+}
+
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.mailto.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.mailto.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.mailto.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,143 +1,163 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {mailto} function plugin
- *
- * Type:     function<br>
- * Name:     mailto<br>
- * Date:     May 21, 2002
- * Purpose:  automate mailto address link creation, and optionally
- *           encode them.<br>
- * Input:<br>
- *         - address = e-mail address
- *         - text = (optional) text to display, default is address
- *         - encode = (optional) can be one of:
- *                * none : no encoding (default)
- *                * javascript : encode with javascript
- *                * hex : encode with hexidecimal (no javascript)
- *         - cc = (optional) address(es) to carbon copy
- *         - bcc = (optional) address(es) to blind carbon copy
- *         - subject = (optional) e-mail subject
- *         - newsgroups = (optional) newsgroup(s) to post to
- *         - followupto = (optional) address(es) to follow up to
- *         - extra = (optional) extra tags for the href link
- *
- * Examples:
- * <pre>
- * {mailto address="me at domain.com"}
- * {mailto address="me at domain.com" encode="javascript"}
- * {mailto address="me at domain.com" encode="hex"}
- * {mailto address="me at domain.com" subject="Hello to you!"}
- * {mailto address="me at domain.com" cc="you at domain.com,they at domain.com"}
- * {mailto address="me at domain.com" extra='class="mailto"'}
- * </pre>
- * @link http://smarty.php.net/manual/en/language.function.mailto.php {mailto}
- *          (Smarty online manual)
- * @version  1.2
- * @author   Monte Ohrt <monte at ispi.net>
- * @author   credits to Jason Sweat (added cc, bcc and subject functionality)
- * @param    array
- * @param    Smarty
- * @return   string
- */
-function smarty_function_mailto($params, &$smarty)
-{
-    $extra = '';
-
-    if (empty($params['address'])) {
-        $smarty->trigger_error("mailto: missing 'address' parameter");
-        return;
-    } else {
-        $address = $params['address'];
-    }
-
-    $text = $address;
-
-    // netscape and mozilla do not decode %40 (@) in BCC field (bug?)
-    // so, don't encode it.
-    $mail_parms = array();
-    foreach ($params as $var=>$value) {
-        switch ($var) {
-            case 'cc':
-            case 'bcc':
-            case 'followupto':
-                if (!empty($value))
-                    $mail_parms[] = $var.'='.str_replace('%40','@',rawurlencode($value));
-                break;
-                
-            case 'subject':
-            case 'newsgroups':
-                $mail_parms[] = $var.'='.rawurlencode($value);
-                break;
-
-            case 'extra':
-            case 'text':
-                $$var = $value;
-
-            default:
-        }
-    }
-
-    $mail_parm_vals = '';
-    for ($i=0; $i<count($mail_parms); $i++) {
-        $mail_parm_vals .= (0==$i) ? '?' : '&';
-        $mail_parm_vals .= $mail_parms[$i];
-    }
-    $address .= $mail_parm_vals;
-
-    $encode = (empty($params['encode'])) ? 'none' : $params['encode'];
-    if (!in_array($encode,array('javascript','hex','none')) ) {
-        $smarty->trigger_error("mailto: 'encode' parameter must be none, javascript or hex");
-        return;
-    }
-
-    if ($encode == 'javascript' ) {
-        $string = 'document.write(\'<a href="mailto:'.$address.'" '.$extra.'>'.$text.'</a>\');';
-
-        $js_encode = '';
-        for ($x=0; $x < strlen($string); $x++) {
-            $js_encode .= '%' . bin2hex($string[$x]);
-        }
-
-        return '<script type="text/javascript">eval(unescape(\''.$js_encode.'\'))</script>';
-
-    } elseif ($encode == 'hex') {
-
-        preg_match('!^(.*)(\?.*)$!',$address,$match);
-        if(!empty($match[2])) {
-            $smarty->trigger_error("mailto: hex encoding does not work with extra attributes. Try javascript.");
-            return;
-        }
-        $address_encode = '';
-        for ($x=0; $x < strlen($address); $x++) {
-            if(preg_match('!\w!',$address[$x])) {
-                $address_encode .= '%' . bin2hex($address[$x]);
-            } else {
-                $address_encode .= $address[$x];
-            }
-        }
-        $text_encode = '';
-        for ($x=0; $x < strlen($text); $x++) {
-            $text_encode .= '&#x' . bin2hex($text[$x]).';';
-        }
-
-        $mailto = "&#109;&#97;&#105;&#108;&#116;&#111;&#58;";
-        return '<a href="'.$mailto.$address_encode.'" '.$extra.'>'.$text_encode.'</a>';
-
-    } else {
-        // no encoding
-        return '<a href="mailto:'.$address.'" '.$extra.'>'.$text.'</a>';
-
-    }
-
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {mailto} function plugin
+ *
+ * Type:     function<br>
+ * Name:     mailto<br>
+ * Date:     May 21, 2002
+ * Purpose:  automate mailto address link creation, and optionally
+ *           encode them.<br>
+ * Input:<br>
+ *         - address = e-mail address
+ *         - text = (optional) text to display, default is address
+ *         - encode = (optional) can be one of:
+ *                * none : no encoding (default)
+ *                * javascript : encode with javascript
+ *                * javascript_charcode : encode with javascript charcode
+ *                * hex : encode with hexidecimal (no javascript)
+ *         - cc = (optional) address(es) to carbon copy
+ *         - bcc = (optional) address(es) to blind carbon copy
+ *         - subject = (optional) e-mail subject
+ *         - newsgroups = (optional) newsgroup(s) to post to
+ *         - followupto = (optional) address(es) to follow up to
+ *         - extra = (optional) extra tags for the href link
+ *
+ * Examples:
+ * <pre>
+ * {mailto address="me at domain.com"}
+ * {mailto address="me at domain.com" encode="javascript"}
+ * {mailto address="me at domain.com" encode="hex"}
+ * {mailto address="me at domain.com" subject="Hello to you!"}
+ * {mailto address="me at domain.com" cc="you at domain.com,they at domain.com"}
+ * {mailto address="me at domain.com" extra='class="mailto"'}
+ * </pre>
+ * @link http://smarty.php.net/manual/en/language.function.mailto.php {mailto}
+ *          (Smarty online manual)
+ * @version  1.2
+ * @author   Monte Ohrt <monte at ohrt dot com>
+ * @author   credits to Jason Sweat (added cc, bcc and subject functionality)
+ * @param    array
+ * @param    Smarty
+ * @return   string
+ */
+function smarty_function_mailto($params, &$smarty)
+{
+    $extra = '';
+
+    if (empty($params['address'])) {
+        $smarty->trigger_error("mailto: missing 'address' parameter");
+        return;
+    } else {
+        $address = $params['address'];
+    }
+
+    $text = $address;
+
+    // netscape and mozilla do not decode %40 (@) in BCC field (bug?)
+    // so, don't encode it.
+    $mail_parms = array();
+    foreach ($params as $var=>$value) {
+        switch ($var) {
+            case 'cc':
+            case 'bcc':
+            case 'followupto':
+                if (!empty($value))
+                    $mail_parms[] = $var.'='.str_replace('%40','@',rawurlencode($value));
+                break;
+                
+            case 'subject':
+            case 'newsgroups':
+                $mail_parms[] = $var.'='.rawurlencode($value);
+                break;
+
+            case 'extra':
+            case 'text':
+                $$var = $value;
+
+            default:
+        }
+    }
+
+    $mail_parm_vals = '';
+    for ($i=0; $i<count($mail_parms); $i++) {
+        $mail_parm_vals .= (0==$i) ? '?' : '&';
+        $mail_parm_vals .= $mail_parms[$i];
+    }
+    $address .= $mail_parm_vals;
+
+    $encode = (empty($params['encode'])) ? 'none' : $params['encode'];
+    if (!in_array($encode,array('javascript','javascript_charcode','hex','none')) ) {
+        $smarty->trigger_error("mailto: 'encode' parameter must be none, javascript or hex");
+        return;
+    }
+
+    if ($encode == 'javascript' ) {
+        $string = 'document.write(\'<a href="mailto:'.$address.'" '.$extra.'>'.$text.'</a>\');';
+
+        $js_encode = '';
+        for ($x=0; $x < strlen($string); $x++) {
+            $js_encode .= '%' . bin2hex($string[$x]);
+        }
+
+        return '<script type="text/javascript">eval(unescape(\''.$js_encode.'\'))</script>';
+
+    } elseif ($encode == 'javascript_charcode' ) {
+        $string = '<a href="mailto:'.$address.'" '.$extra.'>'.$text.'</a>';
+
+        for($x = 0, $y = strlen($string); $x < $y; $x++ ) {
+            $ord[] = ord($string[$x]);   
+        }
+
+        $_ret = "<script type=\"text/javascript\" language=\"javascript\">\n";
+        $_ret .= "<!--\n";
+        $_ret .= "{document.write(String.fromCharCode(";
+        $_ret .= implode(',',$ord);
+        $_ret .= "))";
+        $_ret .= "}\n";
+        $_ret .= "//-->\n";
+        $_ret .= "</script>\n";
+        
+        return $_ret;
+        
+        
+    } elseif ($encode == 'hex') {
+
+        preg_match('!^(.*)(\?.*)$!',$address,$match);
+        if(!empty($match[2])) {
+            $smarty->trigger_error("mailto: hex encoding does not work with extra attributes. Try javascript.");
+            return;
+        }
+        $address_encode = '';
+        for ($x=0; $x < strlen($address); $x++) {
+            if(preg_match('!\w!',$address[$x])) {
+                $address_encode .= '%' . bin2hex($address[$x]);
+            } else {
+                $address_encode .= $address[$x];
+            }
+        }
+        $text_encode = '';
+        for ($x=0; $x < strlen($text); $x++) {
+            $text_encode .= '&#x' . bin2hex($text[$x]).';';
+        }
+
+        $mailto = "&#109;&#97;&#105;&#108;&#116;&#111;&#58;";
+        return '<a href="'.$mailto.$address_encode.'" '.$extra.'>'.$text_encode.'</a>';
+
+    } else {
+        // no encoding
+        return '<a href="mailto:'.$address.'" '.$extra.'>'.$text.'</a>';
+
+    }
+
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.math.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.math.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.math.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,82 +1,83 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {math} function plugin
- *
- * Type:     function<br>
- * Name:     math<br>
- * Purpose:  handle math computations in template<br>
- * @link http://smarty.php.net/manual/en/language.function.math.php {math}
- *          (Smarty online manual)
- * @param array
- * @param Smarty
- * @return string
- */
-function smarty_function_math($params, &$smarty)
-{
-    // be sure equation parameter is present
-    if (empty($params['equation'])) {
-        $smarty->trigger_error("math: missing equation parameter");
-        return;
-    }
-
-    $equation = $params['equation'];
-
-    // make sure parenthesis are balanced
-    if (substr_count($equation,"(") != substr_count($equation,")")) {
-        $smarty->trigger_error("math: unbalanced parenthesis");
-        return;
-    }
-
-    // match all vars in equation, make sure all are passed
-    preg_match_all("!\!(0x)([a-zA-Z][a-zA-Z0-9_]*)!",$equation, $match);
-    $allowed_funcs = array('int','abs','ceil','cos','exp','floor','log','log10',
-                           'max','min','pi','pow','rand','round','sin','sqrt','srand','tan');
-    foreach($match[2] as $curr_var) {
-        if (!in_array($curr_var,array_keys($params)) && !in_array($curr_var, $allowed_funcs)) {
-            $smarty->trigger_error("math: parameter $curr_var not passed as argument");
-            return;
-        }
-    }
-
-    foreach($params as $key => $val) {
-        if ($key != "equation" && $key != "format" && $key != "assign") {
-            // make sure value is not empty
-            if (strlen($val)==0) {
-                $smarty->trigger_error("math: parameter $key is empty");
-                return;
-            }
-            if (!is_numeric($val)) {
-                $smarty->trigger_error("math: parameter $key: is not numeric");
-                return;
-            }
-            $equation = preg_replace("/\b$key\b/",$val, $equation);
-        }
-    }
-
-    eval("\$smarty_math_result = ".$equation.";");
-
-    if (empty($params['format'])) {
-        if (empty($params['assign'])) {
-            return $smarty_math_result;
-        } else {
-            $smarty->assign($params['assign'],$smarty_math_result);
-        }
-    } else {
-        if (empty($params['assign'])){
-            printf($params['format'],$smarty_math_result);
-        } else {
-            $smarty->assign($params['assign'],sprintf($params['format'],$smarty_math_result));
-        }
-    }
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {math} function plugin
+ *
+ * Type:     function<br>
+ * Name:     math<br>
+ * Purpose:  handle math computations in template<br>
+ * @link http://smarty.php.net/manual/en/language.function.math.php {math}
+ *          (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ */
+function smarty_function_math($params, &$smarty)
+{
+    // be sure equation parameter is present
+    if (empty($params['equation'])) {
+        $smarty->trigger_error("math: missing equation parameter");
+        return;
+    }
+
+    $equation = $params['equation'];
+
+    // make sure parenthesis are balanced
+    if (substr_count($equation,"(") != substr_count($equation,")")) {
+        $smarty->trigger_error("math: unbalanced parenthesis");
+        return;
+    }
+
+    // match all vars in equation, make sure all are passed
+    preg_match_all("!(?:0x[a-fA-F0-9]+)|([a-zA-Z][a-zA-Z0-9_]+)!",$equation, $match);
+    $allowed_funcs = array('int','abs','ceil','cos','exp','floor','log','log10',
+                           'max','min','pi','pow','rand','round','sin','sqrt','srand','tan');
+    
+    foreach($match[1] as $curr_var) {
+        if ($curr_var && !in_array($curr_var, array_keys($params)) && !in_array($curr_var, $allowed_funcs)) {
+            $smarty->trigger_error("math: function call $curr_var not allowed");
+            return;
+        }
+    }
+
+    foreach($params as $key => $val) {
+        if ($key != "equation" && $key != "format" && $key != "assign") {
+            // make sure value is not empty
+            if (strlen($val)==0) {
+                $smarty->trigger_error("math: parameter $key is empty");
+                return;
+            }
+            if (!is_numeric($val)) {
+                $smarty->trigger_error("math: parameter $key: is not numeric");
+                return;
+            }
+            $equation = preg_replace("/\b$key\b/",$val, $equation);
+        }
+    }
+
+    eval("\$smarty_math_result = ".$equation.";");
+
+    if (empty($params['format'])) {
+        if (empty($params['assign'])) {
+            return $smarty_math_result;
+        } else {
+            $smarty->assign($params['assign'],$smarty_math_result);
+        }
+    } else {
+        if (empty($params['assign'])){
+            printf($params['format'],$smarty_math_result);
+        } else {
+            $smarty->assign($params['assign'],sprintf($params['format'],$smarty_math_result));
+        }
+    }
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.popup.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.popup.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.popup.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,110 +1,117 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {popup} function plugin
- *
- * Type:     function<br>
- * Name:     popup<br>
- * Purpose:  make text pop up in windows via overlib
- * @link http://smarty.php.net/manual/en/language.function.popup.php {popup}
- *          (Smarty online manual)
- * @param array
- * @param Smarty
- * @return string
- */
-function smarty_function_popup($params, &$smarty)
-{
-    $append = '';
-    foreach ($params as $_key=>$_value) {
-        switch ($_key) {
-            case 'text':
-            case 'trigger':
-                $$_key = (string)$_value;
-                break;
-
-            case 'caption':
-            case 'closetext':
-            case 'status':
-                $append .= ',' . strtoupper($_key) . ",'" . str_replace("'","\'",$_value) . "'";
-                break;
-
-            case 'fgcolor':
-            case 'bgcolor':
-            case 'textcolor':
-            case 'capcolor':
-            case 'closecolor':
-            case 'textfont':
-            case 'captionfont':
-            case 'closefont':
-            case 'fgbackground':
-            case 'bgbackground':
-            case 'inarray':
-            case 'caparray':
-            case 'capicon':
-            case 'background':
-            case 'frame':
-            case 'function':
-                $append .= ',' . strtoupper($_key) . ",'$_value'";
-                break;
-
-            case 'textsize':
-            case 'captionsize':
-            case 'closesize':
-            case 'width':
-            case 'height':
-            case 'border':
-            case 'offsetx':
-            case 'offsety':
-            case 'snapx':
-            case 'snapy':
-            case 'fixx':
-            case 'fixy':
-            case 'padx':
-            case 'pady':
-            case 'timeout':
-            case 'delay':
-                $append .= ',' . strtoupper($_key) . ",$_value";
-                break;
-
-            case 'sticky':
-            case 'left':
-            case 'right':
-            case 'center':
-            case 'above':
-            case 'below':
-            case 'noclose':
-            case 'autostatus':
-            case 'autostatuscap':
-            case 'fullhtml':
-            case 'hauto':
-            case 'vauto':
-                if ($_value) $append .= ',' . strtoupper($_key);
-                break;
-
-            default:
-                $smarty->trigger_error("[popup] unknown parameter $_key", E_USER_WARNING);
-        }
-    }
-
-    if (empty($text) && !isset($inarray) && empty($function)) {
-        $smarty->trigger_error("overlib: attribute 'text' or 'inarray' or 'function' required");
-        return false;
-    }
-
-    if (empty($trigger)) { $trigger = "onmouseover"; }
-
-    $retval = $trigger . '="return overlib(\''.preg_replace(array("!'!","![\r\n]!"),array("\'",'\r'),$text).'\'';
-    $retval .= $append . ');" onmouseout="nd();"';
-
-    return $retval;
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {popup} function plugin
+ *
+ * Type:     function<br>
+ * Name:     popup<br>
+ * Purpose:  make text pop up in windows via overlib
+ * @link http://smarty.php.net/manual/en/language.function.popup.php {popup}
+ *          (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ */
+function smarty_function_popup($params, &$smarty)
+{
+    $append = '';
+    foreach ($params as $_key=>$_value) {
+        switch ($_key) {
+            case 'text':
+            case 'trigger':
+            case 'function':
+            case 'inarray':
+                $$_key = (string)$_value;
+                if ($_key == 'function' || $_key == 'inarray')
+                    $append .= ',' . strtoupper($_key) . ",'$_value'";
+                break;
+
+            case 'caption':
+            case 'closetext':
+            case 'status':
+                $append .= ',' . strtoupper($_key) . ",'" . str_replace("'","\'",$_value) . "'";
+                break;
+
+            case 'fgcolor':
+            case 'bgcolor':
+            case 'textcolor':
+            case 'capcolor':
+            case 'closecolor':
+            case 'textfont':
+            case 'captionfont':
+            case 'closefont':
+            case 'fgbackground':
+            case 'bgbackground':
+            case 'caparray':
+            case 'capicon':
+            case 'background':
+            case 'frame':
+                $append .= ',' . strtoupper($_key) . ",'$_value'";
+                break;
+
+            case 'textsize':
+            case 'captionsize':
+            case 'closesize':
+            case 'width':
+            case 'height':
+            case 'border':
+            case 'offsetx':
+            case 'offsety':
+            case 'snapx':
+            case 'snapy':
+            case 'fixx':
+            case 'fixy':
+            case 'padx':
+            case 'pady':
+            case 'timeout':
+            case 'delay':
+                $append .= ',' . strtoupper($_key) . ",$_value";
+                break;
+
+            case 'sticky':
+            case 'left':
+            case 'right':
+            case 'center':
+            case 'above':
+            case 'below':
+            case 'noclose':
+            case 'autostatus':
+            case 'autostatuscap':
+            case 'fullhtml':
+            case 'hauto':
+            case 'vauto':
+            case 'mouseoff':
+            case 'followmouse':
+                if ($_value) $append .= ',' . strtoupper($_key);
+                break;
+
+            default:
+                $smarty->trigger_error("[popup] unknown parameter $_key", E_USER_WARNING);
+        }
+    }
+
+    if (empty($text) && !isset($inarray) && empty($function)) {
+        $smarty->trigger_error("overlib: attribute 'text' or 'inarray' or 'function' required");
+        return false;
+    }
+
+    if (empty($trigger)) { $trigger = "onmouseover"; }
+
+    $retval = $trigger . '="return overlib(\''.preg_replace(array("!'!","![\r\n]!"),array("\'",'\r'),$text).'\'';
+    $retval .= $append . ');"';
+    if ($trigger == 'onmouseover')
+       $retval .= ' onmouseout="nd();"';
+
+
+    return $retval;
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.popup_init.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.popup_init.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/function.popup_init.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,39 +1,39 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty {popup_init} function plugin
- *
- * Type:     function<br>
- * Name:     popup_init<br>
- * Purpose:  initialize overlib
- * @link http://smarty.php.net/manual/en/language.function.popup.init.php {popup_init}
- *          (Smarty online manual)
- * @param array
- * @param Smarty
- * @return string
- */
-function smarty_function_popup_init($params, &$smarty)
-{
-    $zindex = 1000;
-    
-    if (!empty($params['zindex'])) {
-        $zindex = $params['zindex'];
-    }
-    
-    if (!empty($params['src'])) {
-        return '<div id="overDiv" style="position:absolute; visibility:hidden; z-index:'.$zindex.';"></div>' . "\n"
-         . '<script type="text/javascript" language="JavaScript" src="'.$params['src'].'"></script>' . "\n";
-    } else {
-        $smarty->trigger_error("popup_init: missing src parameter");
-    }
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty {popup_init} function plugin
+ *
+ * Type:     function<br>
+ * Name:     popup_init<br>
+ * Purpose:  initialize overlib
+ * @link http://smarty.php.net/manual/en/language.function.popup.init.php {popup_init}
+ *          (Smarty online manual)
+ * @param array
+ * @param Smarty
+ * @return string
+ */
+function smarty_function_popup_init($params, &$smarty)
+{
+    $zindex = 1000;
+    
+    if (!empty($params['zindex'])) {
+        $zindex = $params['zindex'];
+    }
+    
+    if (!empty($params['src'])) {
+        return '<div id="overDiv" style="position:absolute; visibility:hidden; z-index:'.$zindex.';"></div>' . "\n"
+         . '<script type="text/javascript" language="JavaScript" src="'.$params['src'].'"></script>' . "\n";
+    } else {
+        $smarty->trigger_error("popup_init: missing src parameter");
+    }
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.capitalize.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.capitalize.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.capitalize.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,42 +1,42 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty capitalize modifier plugin
- *
- * Type:     modifier<br>
- * Name:     capitalize<br>
- * Purpose:  capitalize words in the string
- * @link http://smarty.php.net/manual/en/language.modifiers.php#LANGUAGE.MODIFIER.CAPITALIZE
- *      capitalize (Smarty online manual)
- * @param string
- * @return string
- */
-function smarty_modifier_capitalize($string, $uc_digits = false)
-{
-    smarty_modifier_capitalize_ucfirst(null, $uc_digits);
-    return preg_replace_callback('!\b\w+\b!', 'smarty_modifier_capitalize_ucfirst', $string);
-}
-
-function smarty_modifier_capitalize_ucfirst($string, $uc_digits = null)
-{
-    static $_uc_digits = false;
-    
-    if(isset($uc_digits)) {
-        $_uc_digits = $uc_digits;
-        return;
-    }
-    
-    if(!preg_match('!\d!',$string[0]) || $_uc_digits)
-        return ucfirst($string[0]);
-    else
-        return $string[0];
-}
-
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty capitalize modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     capitalize<br>
+ * Purpose:  capitalize words in the string
+ * @link http://smarty.php.net/manual/en/language.modifiers.php#LANGUAGE.MODIFIER.CAPITALIZE
+ *      capitalize (Smarty online manual)
+ * @param string
+ * @return string
+ */
+function smarty_modifier_capitalize($string, $uc_digits = false)
+{
+    smarty_modifier_capitalize_ucfirst(null, $uc_digits);
+    return preg_replace_callback('!\b\w+\b!', 'smarty_modifier_capitalize_ucfirst', $string);
+}
+
+function smarty_modifier_capitalize_ucfirst($string, $uc_digits = null)
+{
+    static $_uc_digits = false;
+    
+    if(isset($uc_digits)) {
+        $_uc_digits = $uc_digits;
+        return;
+    }
+    
+    if(!preg_match('!\d!',$string[0]) || $_uc_digits)
+        return ucfirst($string[0]);
+    else
+        return $string[0];
+}
+
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.cat.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.cat.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.cat.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,33 +1,33 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty cat modifier plugin
- *
- * Type:     modifier<br>
- * Name:     cat<br>
- * Date:     Feb 24, 2003
- * Purpose:  catenate a value to a variable
- * Input:    string to catenate
- * Example:  {$var|cat:"foo"}
- * @link http://smarty.php.net/manual/en/language.modifier.cat.php cat
- *          (Smarty online manual)
- * @author   Monte Ohrt <monte at ispi.net>
- * @version 1.0
- * @param string
- * @param string
- * @return string
- */
-function smarty_modifier_cat($string, $cat)
-{
-    return $string . $cat;
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty cat modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     cat<br>
+ * Date:     Feb 24, 2003
+ * Purpose:  catenate a value to a variable
+ * Input:    string to catenate
+ * Example:  {$var|cat:"foo"}
+ * @link http://smarty.php.net/manual/en/language.modifier.cat.php cat
+ *          (Smarty online manual)
+ * @author   Monte Ohrt <monte at ohrt dot com>
+ * @version 1.0
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_cat($string, $cat)
+{
+    return $string . $cat;
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_characters.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_characters.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_characters.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,31 +1,31 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty count_characters modifier plugin
- *
- * Type:     modifier<br>
- * Name:     count_characteres<br>
- * Purpose:  count the number of characters in a text
- * @link http://smarty.php.net/manual/en/language.modifier.count.characters.php
- *          count_characters (Smarty online manual)
- * @param string
- * @param boolean include whitespace in the character count
- * @return integer
- */
-function smarty_modifier_count_characters($string, $include_spaces = false)
-{
-    if ($include_spaces)
-       return(strlen($string));
-
-    return preg_match_all("/[^\s]/",$string, $match);
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty count_characters modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     count_characteres<br>
+ * Purpose:  count the number of characters in a text
+ * @link http://smarty.php.net/manual/en/language.modifier.count.characters.php
+ *          count_characters (Smarty online manual)
+ * @param string
+ * @param boolean include whitespace in the character count
+ * @return integer
+ */
+function smarty_modifier_count_characters($string, $include_spaces = false)
+{
+    if ($include_spaces)
+       return(strlen($string));
+
+    return preg_match_all("/[^\s]/",$string, $match);
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_paragraphs.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_paragraphs.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_paragraphs.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,28 +1,28 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty count_paragraphs modifier plugin
- *
- * Type:     modifier<br>
- * Name:     count_paragraphs<br>
- * Purpose:  count the number of paragraphs in a text
- * @link http://smarty.php.net/manual/en/language.modifier.count.paragraphs.php
- *          count_paragraphs (Smarty online manual)
- * @param string
- * @return integer
- */
-function smarty_modifier_count_paragraphs($string)
-{
-    // count \r or \n characters
-    return count(preg_split('/[\r\n]+/', $string));
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty count_paragraphs modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     count_paragraphs<br>
+ * Purpose:  count the number of paragraphs in a text
+ * @link http://smarty.php.net/manual/en/language.modifier.count.paragraphs.php
+ *          count_paragraphs (Smarty online manual)
+ * @param string
+ * @return integer
+ */
+function smarty_modifier_count_paragraphs($string)
+{
+    // count \r or \n characters
+    return count(preg_split('/[\r\n]+/', $string));
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_sentences.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_sentences.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_sentences.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,28 +1,28 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty count_sentences modifier plugin
- *
- * Type:     modifier<br>
- * Name:     count_sentences
- * Purpose:  count the number of sentences in a text
- * @link http://smarty.php.net/manual/en/language.modifier.count.paragraphs.php
- *          count_sentences (Smarty online manual)
- * @param string
- * @return integer
- */
-function smarty_modifier_count_sentences($string)
-{
-    // find periods with a word before but not after.
-    return preg_match_all('/[^\s]\.(?!\w)/', $string, $match);
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty count_sentences modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     count_sentences
+ * Purpose:  count the number of sentences in a text
+ * @link http://smarty.php.net/manual/en/language.modifier.count.paragraphs.php
+ *          count_sentences (Smarty online manual)
+ * @param string
+ * @return integer
+ */
+function smarty_modifier_count_sentences($string)
+{
+    // find periods with a word before but not after.
+    return preg_match_all('/[^\s]\.(?!\w)/', $string, $match);
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_words.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_words.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.count_words.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,32 +1,32 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty count_words modifier plugin
- *
- * Type:     modifier<br>
- * Name:     count_words<br>
- * Purpose:  count the number of words in a text
- * @link http://smarty.php.net/manual/en/language.modifier.count.words.php
- *          count_words (Smarty online manual)
- * @param string
- * @return integer
- */
-function smarty_modifier_count_words($string)
-{
-    // split text by ' ',\r,\n,\f,\t
-    $split_array = preg_split('/\s+/',$string);
-    // count matches that contain alphanumerics
-    $word_count = preg_grep('/[a-zA-Z0-9\\x80-\\xff]/', $split_array);
-
-    return count($word_count);
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty count_words modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     count_words<br>
+ * Purpose:  count the number of words in a text
+ * @link http://smarty.php.net/manual/en/language.modifier.count.words.php
+ *          count_words (Smarty online manual)
+ * @param string
+ * @return integer
+ */
+function smarty_modifier_count_words($string)
+{
+    // split text by ' ',\r,\n,\f,\t
+    $split_array = preg_split('/\s+/',$string);
+    // count matches that contain alphanumerics
+    $word_count = preg_grep('/[a-zA-Z0-9\\x80-\\xff]/', $split_array);
+
+    return count($word_count);
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.date_format.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.date_format.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.date_format.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,48 +1,48 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-/**
- * Include the {@link shared.make_timestamp.php} plugin
- */
-require_once $smarty->_get_plugin_filepath('shared','make_timestamp');
-/**
- * Smarty date_format modifier plugin
- *
- * Type:     modifier<br>
- * Name:     date_format<br>
- * Purpose:  format datestamps via strftime<br>
- * Input:<br>
- *         - string: input date string
- *         - format: strftime format for output
- *         - default_date: default date if $string is empty
- * @link http://smarty.php.net/manual/en/language.modifier.date.format.php
- *          date_format (Smarty online manual)
- * @param string
- * @param string
- * @param string
- * @return string|void
- * @uses smarty_make_timestamp()
- */
-function smarty_modifier_date_format($string, $format="%b %e, %Y", $default_date=null)
-{
-    if (substr(PHP_OS,0,3) == 'WIN') {
-           $_win_from = array ('%e',  '%T',       '%D');
-           $_win_to   = array ('%#d', '%H:%M:%S', '%m/%d/%y');
-           $format = str_replace($_win_from, $_win_to, $format);
-    }
-    if($string != '') {
-        return strftime($format, smarty_make_timestamp($string));
-    } elseif (isset($default_date) && $default_date != '') {
-        return strftime($format, smarty_make_timestamp($default_date));
-    } else {
-        return;
-    }
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Include the {@link shared.make_timestamp.php} plugin
+ */
+require_once $smarty->_get_plugin_filepath('shared','make_timestamp');
+/**
+ * Smarty date_format modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     date_format<br>
+ * Purpose:  format datestamps via strftime<br>
+ * Input:<br>
+ *         - string: input date string
+ *         - format: strftime format for output
+ *         - default_date: default date if $string is empty
+ * @link http://smarty.php.net/manual/en/language.modifier.date.format.php
+ *          date_format (Smarty online manual)
+ * @param string
+ * @param string
+ * @param string
+ * @return string|void
+ * @uses smarty_make_timestamp()
+ */
+function smarty_modifier_date_format($string, $format="%b %e, %Y", $default_date=null)
+{
+    if (substr(PHP_OS,0,3) == 'WIN') {
+           $_win_from = array ('%e',  '%T',       '%D');
+           $_win_to   = array ('%#d', '%H:%M:%S', '%m/%d/%y');
+           $format = str_replace($_win_from, $_win_to, $format);
+    }
+    if($string != '') {
+        return strftime($format, smarty_make_timestamp($string));
+    } elseif (isset($default_date) && $default_date != '') {
+        return strftime($format, smarty_make_timestamp($default_date));
+    } else {
+        return;
+    }
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.debug_print_var.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.debug_print_var.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.debug_print_var.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,56 +1,56 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty debug_print_var modifier plugin
- *
- * Type:     modifier<br>
- * Name:     debug_print_var<br>
- * Purpose:  formats variable contents for display in the console
- * @link http://smarty.php.net/manual/en/language.modifier.debug.print.var.php
- *          debug_print_var (Smarty online manual)
- * @param array|object
- * @param integer
- * @param integer
- * @return string
- */
-function smarty_modifier_debug_print_var($var, $depth = 0, $length = 40)
-{
-    $_replace = array("\n"=>'<i>&#92;n</i>', "\r"=>'<i>&#92;r</i>', "\t"=>'<i>&#92;t</i>');
-    if (is_array($var)) {
-        $results = "<b>Array (".count($var).")</b>";
-        foreach ($var as $curr_key => $curr_val) {
-            $return = smarty_modifier_debug_print_var($curr_val, $depth+1, $length);
-            $results .= "<br>".str_repeat('&nbsp;', $depth*2)."<b>".strtr($curr_key, $_replace)."</b> =&gt; $return";
-        }
-    } else if (is_object($var)) {
-        $object_vars = get_object_vars($var);
-        $results = "<b>".get_class($var)." Object (".count($object_vars).")</b>";
-        foreach ($object_vars as $curr_key => $curr_val) {
-            $return = smarty_modifier_debug_print_var($curr_val, $depth+1, $length);
-            $results .= "<br>".str_repeat('&nbsp;', $depth*2)."<b>$curr_key</b> =&gt; $return";
-        }
-    } else if (is_resource($var)) {
-        $results = '<i>'.(string)$var.'</i>';
-    } else if (empty($var) && $var != "0") {
-        $results = '<i>empty</i>';
-    } else {
-        if (strlen($var) > $length ) {
-            $results = substr($var, 0, $length-3).'...';
-        } else {
-            $results = $var;
-        }
-        $results = htmlspecialchars($results);
-        $results = strtr($results, $_replace);
-    }
-    return $results;
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty debug_print_var modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     debug_print_var<br>
+ * Purpose:  formats variable contents for display in the console
+ * @link http://smarty.php.net/manual/en/language.modifier.debug.print.var.php
+ *          debug_print_var (Smarty online manual)
+ * @param array|object
+ * @param integer
+ * @param integer
+ * @return string
+ */
+function smarty_modifier_debug_print_var($var, $depth = 0, $length = 40)
+{
+    $_replace = array("\n"=>'<i>&#92;n</i>', "\r"=>'<i>&#92;r</i>', "\t"=>'<i>&#92;t</i>');
+    if (is_array($var)) {
+        $results = "<b>Array (".count($var).")</b>";
+        foreach ($var as $curr_key => $curr_val) {
+            $return = smarty_modifier_debug_print_var($curr_val, $depth+1, $length);
+            $results .= "<br>".str_repeat('&nbsp;', $depth*2)."<b>".strtr($curr_key, $_replace)."</b> =&gt; $return";
+        }
+    } else if (is_object($var)) {
+        $object_vars = get_object_vars($var);
+        $results = "<b>".get_class($var)." Object (".count($object_vars).")</b>";
+        foreach ($object_vars as $curr_key => $curr_val) {
+            $return = smarty_modifier_debug_print_var($curr_val, $depth+1, $length);
+            $results .= "<br>".str_repeat('&nbsp;', $depth*2)."<b>$curr_key</b> =&gt; $return";
+        }
+    } else if (is_resource($var)) {
+        $results = '<i>'.(string)$var.'</i>';
+    } else if (empty($var) && $var != "0") {
+        $results = '<i>empty</i>';
+    } else {
+        if (strlen($var) > $length ) {
+            $results = substr($var, 0, $length-3).'...';
+        } else {
+            $results = $var;
+        }
+        $results = htmlspecialchars($results);
+        $results = strtr($results, $_replace);
+    }
+    return $results;
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.default.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.default.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.default.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,31 +1,31 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty default modifier plugin
- *
- * Type:     modifier<br>
- * Name:     default<br>
- * Purpose:  designate default value for empty variables
- * @link http://smarty.php.net/manual/en/language.modifier.default.php
- *          default (Smarty online manual)
- * @param string
- * @param string
- * @return string
- */
-function smarty_modifier_default($string, $default = '')
-{
-    if (!isset($string) || $string === '')
-        return $default;
-    else
-        return $string;
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty default modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     default<br>
+ * Purpose:  designate default value for empty variables
+ * @link http://smarty.php.net/manual/en/language.modifier.default.php
+ *          default (Smarty online manual)
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_default($string, $default = '')
+{
+    if (!isset($string) || $string === '')
+        return $default;
+    else
+        return $string;
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.escape.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.escape.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.escape.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,89 +1,89 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty escape modifier plugin
- *
- * Type:     modifier<br>
- * Name:     escape<br>
- * Purpose:  Escape the string according to escapement type
- * @link http://smarty.php.net/manual/en/language.modifier.escape.php
- *          escape (Smarty online manual)
- * @param string
- * @param html|htmlall|url|quotes|hex|hexentity|javascript
- * @return string
- */
-function smarty_modifier_escape($string, $esc_type = 'html')
-{
-    switch ($esc_type) {
-        case 'html':
-            return htmlspecialchars($string, ENT_QUOTES);
-
-        case 'htmlall':
-            return htmlentities($string, ENT_QUOTES);
-
-        case 'url':
-            return urlencode($string);
-
-        case 'quotes':
-            // escape unescaped single quotes
-            return preg_replace("%(?<!\\\\)'%", "\\'", $string);
-
-        case 'hex':
-            // escape every character into hex
-            $return = '';
-            for ($x=0; $x < strlen($string); $x++) {
-                $return .= '%' . bin2hex($string[$x]);
-            }
-            return $return;
-            
-        case 'hexentity':
-            $return = '';
-            for ($x=0; $x < strlen($string); $x++) {
-                $return .= '&#x' . bin2hex($string[$x]) . ';';
-            }
-            return $return;
-
-        case 'decentity':
-            $return = '';
-            for ($x=0; $x < strlen($string); $x++) {
-                $return .= '&#' . ord($string[$x]) . ';';
-            }
-            return $return;
-
-        case 'javascript':
-            // escape quotes and backslashes, newlines, etc.
-            return strtr($string, array('\\'=>'\\\\',"'"=>"\\'",'"'=>'\\"',"\r"=>'\\r',"\n"=>'\\n','</'=>'<\/'));
-            
-        case 'mail':
-            // safe way to display e-mail address on a web page
-            return str_replace(array('@', '.'),array(' [AT] ', ' [DOT] '), $string);
-            
-        case 'nonstd':
-           // escape non-standard chars, such as ms document quotes
-           $_res = '';
-           for($_i = 0, $_len = strlen($string); $_i < $_len; $_i++) {
-               $_ord = ord($string{$_i});
-               // non-standard char, escape it
-               if($_ord >= 126){
-                   $_res .= '&#' . $_ord . ';';
-               }
-               else {
-                   $_res .= $string{$_i};
-               }
-           }
-           return $_res;
-
-        default:
-            return $string;
-    }
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty escape modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     escape<br>
+ * Purpose:  Escape the string according to escapement type
+ * @link http://smarty.php.net/manual/en/language.modifier.escape.php
+ *          escape (Smarty online manual)
+ * @param string
+ * @param html|htmlall|url|quotes|hex|hexentity|javascript
+ * @return string
+ */
+function smarty_modifier_escape($string, $esc_type = 'html')
+{
+    switch ($esc_type) {
+        case 'html':
+            return htmlspecialchars($string, ENT_QUOTES);
+
+        case 'htmlall':
+            return htmlentities($string, ENT_QUOTES);
+
+        case 'url':
+            return rawurlencode($string);
+
+        case 'quotes':
+            // escape unescaped single quotes
+            return preg_replace("%(?<!\\\\)'%", "\\'", $string);
+
+        case 'hex':
+            // escape every character into hex
+            $return = '';
+            for ($x=0; $x < strlen($string); $x++) {
+                $return .= '%' . bin2hex($string[$x]);
+            }
+            return $return;
+            
+        case 'hexentity':
+            $return = '';
+            for ($x=0; $x < strlen($string); $x++) {
+                $return .= '&#x' . bin2hex($string[$x]) . ';';
+            }
+            return $return;
+
+        case 'decentity':
+            $return = '';
+            for ($x=0; $x < strlen($string); $x++) {
+                $return .= '&#' . ord($string[$x]) . ';';
+            }
+            return $return;
+
+        case 'javascript':
+            // escape quotes and backslashes, newlines, etc.
+            return strtr($string, array('\\'=>'\\\\',"'"=>"\\'",'"'=>'\\"',"\r"=>'\\r',"\n"=>'\\n','</'=>'<\/'));
+            
+        case 'mail':
+            // safe way to display e-mail address on a web page
+            return str_replace(array('@', '.'),array(' [AT] ', ' [DOT] '), $string);
+            
+        case 'nonstd':
+           // escape non-standard chars, such as ms document quotes
+           $_res = '';
+           for($_i = 0, $_len = strlen($string); $_i < $_len; $_i++) {
+               $_ord = ord($string{$_i});
+               // non-standard char, escape it
+               if($_ord >= 126){
+                   $_res .= '&#' . $_ord . ';';
+               }
+               else {
+                   $_res .= $string{$_i};
+               }
+           }
+           return $_res;
+
+        default:
+            return $string;
+    }
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.indent.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.indent.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.indent.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,27 +1,27 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty indent modifier plugin
- *
- * Type:     modifier<br>
- * Name:     indent<br>
- * Purpose:  indent lines of text
- * @link http://smarty.php.net/manual/en/language.modifier.indent.php
- *          indent (Smarty online manual)
- * @param string
- * @param integer
- * @param string
- * @return string
- */
-function smarty_modifier_indent($string,$chars=4,$char=" ")
-{
-    return preg_replace('!^!m',str_repeat($char,$chars),$string);
-}
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty indent modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     indent<br>
+ * Purpose:  indent lines of text
+ * @link http://smarty.php.net/manual/en/language.modifier.indent.php
+ *          indent (Smarty online manual)
+ * @param string
+ * @param integer
+ * @param string
+ * @return string
+ */
+function smarty_modifier_indent($string,$chars=4,$char=" ")
+{
+    return preg_replace('!^!m',str_repeat($char,$chars),$string);
+}
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.lower.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.lower.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.lower.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,25 +1,25 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty lower modifier plugin
- *
- * Type:     modifier<br>
- * Name:     lower<br>
- * Purpose:  convert string to lowercase
- * @link http://smarty.php.net/manual/en/language.modifier.lower.php
- *          lower (Smarty online manual)
- * @param string
- * @return string
- */
-function smarty_modifier_lower($string)
-{
-    return strtolower($string);
-}
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty lower modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     lower<br>
+ * Purpose:  convert string to lowercase
+ * @link http://smarty.php.net/manual/en/language.modifier.lower.php
+ *          lower (Smarty online manual)
+ * @param string
+ * @return string
+ */
+function smarty_modifier_lower($string)
+{
+    return strtolower($string);
+}
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.nl2br.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.nl2br.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.nl2br.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,35 +1,35 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty plugin
- *
- * Type:     modifier<br>
- * Name:     nl2br<br>
- * Date:     Feb 26, 2003
- * Purpose:  convert \r\n, \r or \n to <<br>>
- * Input:<br>
- *         - contents = contents to replace
- *         - preceed_test = if true, includes preceeding break tags
- *           in replacement
- * Example:  {$text|nl2br}
- * @link http://smarty.php.net/manual/en/language.modifier.nl2br.php
- *          nl2br (Smarty online manual)
- * @version  1.0
- * @author   Monte Ohrt <monte at ispi.net>
- * @param string
- * @return string
- */
-function smarty_modifier_nl2br($string)
-{
-    return nl2br($string);
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty plugin
+ *
+ * Type:     modifier<br>
+ * Name:     nl2br<br>
+ * Date:     Feb 26, 2003
+ * Purpose:  convert \r\n, \r or \n to <<br>>
+ * Input:<br>
+ *         - contents = contents to replace
+ *         - preceed_test = if true, includes preceeding break tags
+ *           in replacement
+ * Example:  {$text|nl2br}
+ * @link http://smarty.php.net/manual/en/language.modifier.nl2br.php
+ *          nl2br (Smarty online manual)
+ * @version  1.0
+ * @author   Monte Ohrt <monte at ohrt dot com>
+ * @param string
+ * @return string
+ */
+function smarty_modifier_nl2br($string)
+{
+    return nl2br($string);
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.regex_replace.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.regex_replace.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.regex_replace.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,29 +1,33 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty regex_replace modifier plugin
- *
- * Type:     modifier<br>
- * Name:     regex_replace<br>
- * Purpose:  regular epxression search/replace
- * @link http://smarty.php.net/manual/en/language.modifier.regex.replace.php
- *          regex_replace (Smarty online manual)
- * @param string
- * @param string|array
- * @param string|array
- * @return string
- */
-function smarty_modifier_regex_replace($string, $search, $replace)
-{
-    return preg_replace($search, $replace, $string);
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty regex_replace modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     regex_replace<br>
+ * Purpose:  regular epxression search/replace
+ * @link http://smarty.php.net/manual/en/language.modifier.regex.replace.php
+ *          regex_replace (Smarty online manual)
+ * @param string
+ * @param string|array
+ * @param string|array
+ * @return string
+ */
+function smarty_modifier_regex_replace($string, $search, $replace)
+{
+    if (preg_match('!\W(\w+)$!s', $search, $match) && (strpos($match[1], 'e') !== false)) {
+        /* remove eval-modifier from $search */
+        $search = substr($search, 0, -strlen($match[1])) . str_replace('e', '', $match[1]);
+    }
+    return preg_replace($search, $replace, $string);
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.replace.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.replace.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.replace.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,29 +1,29 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty replace modifier plugin
- *
- * Type:     modifier<br>
- * Name:     replace<br>
- * Purpose:  simple search/replace
- * @link http://smarty.php.net/manual/en/language.modifier.replace.php
- *          replace (Smarty online manual)
- * @param string
- * @param string
- * @param string
- * @return string
- */
-function smarty_modifier_replace($string, $search, $replace)
-{
-    return str_replace($search, $replace, $string);
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty replace modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     replace<br>
+ * Purpose:  simple search/replace
+ * @link http://smarty.php.net/manual/en/language.modifier.replace.php
+ *          replace (Smarty online manual)
+ * @param string
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_replace($string, $search, $replace)
+{
+    return str_replace($search, $replace, $string);
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.spacify.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.spacify.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.spacify.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,29 +1,29 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty spacify modifier plugin
- *
- * Type:     modifier<br>
- * Name:     spacify<br>
- * Purpose:  add spaces between characters in a string
- * @link http://smarty.php.net/manual/en/language.modifier.spacify.php
- *          spacify (Smarty online manual)
- * @param string
- * @param string
- * @return string
- */
-function smarty_modifier_spacify($string, $spacify_char = ' ')
-{
-    return implode($spacify_char,
-                   preg_split('//', $string, -1, PREG_SPLIT_NO_EMPTY));
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty spacify modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     spacify<br>
+ * Purpose:  add spaces between characters in a string
+ * @link http://smarty.php.net/manual/en/language.modifier.spacify.php
+ *          spacify (Smarty online manual)
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_spacify($string, $spacify_char = ' ')
+{
+    return implode($spacify_char,
+                   preg_split('//', $string, -1, PREG_SPLIT_NO_EMPTY));
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.string_format.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.string_format.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.string_format.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,28 +1,28 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty string_format modifier plugin
- *
- * Type:     modifier<br>
- * Name:     string_format<br>
- * Purpose:  format strings via sprintf
- * @link http://smarty.php.net/manual/en/language.modifier.string.format.php
- *          string_format (Smarty online manual)
- * @param string
- * @param string
- * @return string
- */
-function smarty_modifier_string_format($string, $format)
-{
-    return sprintf($format, $string);
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty string_format modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     string_format<br>
+ * Purpose:  format strings via sprintf
+ * @link http://smarty.php.net/manual/en/language.modifier.string.format.php
+ *          string_format (Smarty online manual)
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_string_format($string, $format)
+{
+    return sprintf($format, $string);
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.strip.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.strip.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.strip.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,33 +1,33 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty strip modifier plugin
- *
- * Type:     modifier<br>
- * Name:     strip<br>
- * Purpose:  Replace all repeated spaces, newlines, tabs
- *           with a single space or supplied replacement string.<br>
- * Example:  {$var|strip} {$var|strip:"&nbsp;"}
- * Date:     September 25th, 2002
- * @link http://smarty.php.net/manual/en/language.modifier.strip.php
- *          strip (Smarty online manual)
- * @author   Monte Ohrt <monte at ispi.net>
- * @version  1.0
- * @param string
- * @param string
- * @return string
- */
-function smarty_modifier_strip($text, $replace = ' ')
-{
-    return preg_replace('!\s+!', $replace, $text);
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty strip modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     strip<br>
+ * Purpose:  Replace all repeated spaces, newlines, tabs
+ *           with a single space or supplied replacement string.<br>
+ * Example:  {$var|strip} {$var|strip:"&nbsp;"}
+ * Date:     September 25th, 2002
+ * @link http://smarty.php.net/manual/en/language.modifier.strip.php
+ *          strip (Smarty online manual)
+ * @author   Monte Ohrt <monte at ohrt dot com>
+ * @version  1.0
+ * @param string
+ * @param string
+ * @return string
+ */
+function smarty_modifier_strip($text, $replace = ' ')
+{
+    return preg_replace('!\s+!', $replace, $text);
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.strip_tags.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.strip_tags.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.strip_tags.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,31 +1,31 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty strip_tags modifier plugin
- *
- * Type:     modifier<br>
- * Name:     strip_tags<br>
- * Purpose:  strip html tags from text
- * @link http://smarty.php.net/manual/en/language.modifier.strip.tags.php
- *          strip_tags (Smarty online manual)
- * @param string
- * @param boolean
- * @return string
- */
-function smarty_modifier_strip_tags($string, $replace_with_space = true)
-{
-    if ($replace_with_space)
-        return preg_replace('!<[^>]*?>!', ' ', $string);
-    else
-        return strip_tags($string);
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty strip_tags modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     strip_tags<br>
+ * Purpose:  strip html tags from text
+ * @link http://smarty.php.net/manual/en/language.modifier.strip.tags.php
+ *          strip_tags (Smarty online manual)
+ * @param string
+ * @param boolean
+ * @return string
+ */
+function smarty_modifier_strip_tags($string, $replace_with_space = true)
+{
+    if ($replace_with_space)
+        return preg_replace('!<[^>]*?>!', ' ', $string);
+    else
+        return strip_tags($string);
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.truncate.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.truncate.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.truncate.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,43 +1,49 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty truncate modifier plugin
- *
- * Type:     modifier<br>
- * Name:     truncate<br>
- * Purpose:  Truncate a string to a certain length if necessary,
- *           optionally splitting in the middle of a word, and
- *           appending the $etc string.
- * @link http://smarty.php.net/manual/en/language.modifier.truncate.php
- *          truncate (Smarty online manual)
- * @param string
- * @param integer
- * @param string
- * @param boolean
- * @return string
- */
-function smarty_modifier_truncate($string, $length = 80, $etc = '...',
-                                  $break_words = false)
-{
-    if ($length == 0)
-        return '';
-
-    if (strlen($string) > $length) {
-        $length -= strlen($etc);
-        if (!$break_words)
-            $string = preg_replace('/\s+?(\S+)?$/', '', substr($string, 0, $length+1));
-      
-        return substr($string, 0, $length).$etc;
-    } else
-        return $string;
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty truncate modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     truncate<br>
+ * Purpose:  Truncate a string to a certain length if necessary,
+ *           optionally splitting in the middle of a word, and
+ *           appending the $etc string or inserting $etc into the middle.
+ * @link http://smarty.php.net/manual/en/language.modifier.truncate.php
+ *          truncate (Smarty online manual)
+ * @param string
+ * @param integer
+ * @param string
+ * @param boolean
+ * @param boolean
+ * @return string
+ */
+function smarty_modifier_truncate($string, $length = 80, $etc = '...',
+                                  $break_words = false, $middle = false)
+{
+    if ($length == 0)
+        return '';
+
+    if (strlen($string) > $length) {
+        $length -= strlen($etc);
+        if (!$break_words && !$middle) {
+            $string = preg_replace('/\s+?(\S+)?$/', '', substr($string, 0, $length+1));
+        }
+        if(!$middle) {
+            return substr($string, 0, $length).$etc;
+        } else {
+            return substr($string, 0, $length/2) . $etc . substr($string, -$length/2);
+        }
+    } else {
+        return $string;
+    }
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.upper.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.upper.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.upper.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,25 +1,25 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty upper modifier plugin
- *
- * Type:     modifier<br>
- * Name:     upper<br>
- * Purpose:  convert string to uppercase
- * @link http://smarty.php.net/manual/en/language.modifier.upper.php
- *          upper (Smarty online manual)
- * @param string
- * @return string
- */
-function smarty_modifier_upper($string)
-{
-    return strtoupper($string);
-}
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty upper modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     upper<br>
+ * Purpose:  convert string to uppercase
+ * @link http://smarty.php.net/manual/en/language.modifier.upper.php
+ *          upper (Smarty online manual)
+ * @param string
+ * @return string
+ */
+function smarty_modifier_upper($string)
+{
+    return strtoupper($string);
+}
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.wordwrap.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.wordwrap.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/modifier.wordwrap.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,28 +1,28 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Smarty wordwrap modifier plugin
- *
- * Type:     modifier<br>
- * Name:     wordwrap<br>
- * Purpose:  wrap a string of text at a given length
- * @link http://smarty.php.net/manual/en/language.modifier.wordwrap.php
- *          wordwrap (Smarty online manual)
- * @param string
- * @param integer
- * @param string
- * @param boolean
- * @return string
- */
-function smarty_modifier_wordwrap($string,$length=80,$break="\n",$cut=false)
-{
-    return wordwrap($string,$length,$break,$cut);
-}
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Smarty wordwrap modifier plugin
+ *
+ * Type:     modifier<br>
+ * Name:     wordwrap<br>
+ * Purpose:  wrap a string of text at a given length
+ * @link http://smarty.php.net/manual/en/language.modifier.wordwrap.php
+ *          wordwrap (Smarty online manual)
+ * @param string
+ * @param integer
+ * @param string
+ * @param boolean
+ * @return string
+ */
+function smarty_modifier_wordwrap($string,$length=80,$break="\n",$cut=false)
+{
+    return wordwrap($string,$length,$break,$cut);
+}
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/outputfilter.trimwhitespace.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/outputfilter.trimwhitespace.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/outputfilter.trimwhitespace.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,75 +1,75 @@
-<?php
-/**
- * Smarty plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-/**
- * Smarty trimwhitespace outputfilter plugin
- *
- * File:     outputfilter.trimwhitespace.php<br>
- * Type:     outputfilter<br>
- * Name:     trimwhitespace<br>
- * Date:     Jan 25, 2003<br>
- * Purpose:  trim leading white space and blank lines from
- *           template source after it gets interpreted, cleaning
- *           up code and saving bandwidth. Does not affect
- *           <<PRE>></PRE> and <SCRIPT></SCRIPT> blocks.<br>
- * Install:  Drop into the plugin directory, call
- *           <code>$smarty->load_filter('output','trimwhitespace');</code>
- *           from application.
- * @author   Monte Ohrt <monte at ispi.net>
- * @author Contributions from Lars Noschinski <lars at usenet.noschinski.de>
- * @version  1.3
- * @param string
- * @param Smarty
- */
-function smarty_outputfilter_trimwhitespace($source, &$smarty)
-{
-    // Pull out the script blocks
-    preg_match_all("!<script[^>]+>.*?</script>!is", $source, $match);
-    $_script_blocks = $match[0];
-    $source = preg_replace("!<script[^>]+>.*?</script>!is",
-                           '@@@SMARTY:TRIM:SCRIPT@@@', $source);
-
-    // Pull out the pre blocks
-    preg_match_all("!<pre>.*?</pre>!is", $source, $match);
-    $_pre_blocks = $match[0];
-    $source = preg_replace("!<pre>.*?</pre>!is",
-                           '@@@SMARTY:TRIM:PRE@@@', $source);
-
-    // Pull out the textarea blocks
-    preg_match_all("!<textarea[^>]+>.*?</textarea>!is", $source, $match);
-    $_textarea_blocks = $match[0];
-    $source = preg_replace("!<textarea[^>]+>.*?</textarea>!is",
-                           '@@@SMARTY:TRIM:TEXTAREA@@@', $source);
-
-    // remove all leading spaces, tabs and carriage returns NOT
-    // preceeded by a php close tag.
-    $source = trim(preg_replace('/((?<!\?>)\n)[\s]+/m', '\1', $source));
-
-    // replace script blocks
-    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:SCRIPT@@@",$_script_blocks, $source);
-
-    // replace pre blocks
-    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:PRE@@@",$_pre_blocks, $source);
-
-    // replace textarea blocks
-    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:TEXTAREA@@@",$_textarea_blocks, $source);
-
-    return $source;
-}
-
-function smarty_outputfilter_trimwhitespace_replace($search_str, $replace, &$subject) {
-    $_len = strlen($search_str);
-    $_pos = 0;
-    for ($_i=0, $_count=count($replace); $_i<$_count; $_i++)
-        if (($_pos=strpos($subject, $search_str, $_pos))!==false)
-            $subject = substr_replace($subject, $replace[$_i], $_pos, $_len);
-        else
-            break;
-
-}
-
-?>
+<?php
+/**
+ * Smarty plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+/**
+ * Smarty trimwhitespace outputfilter plugin
+ *
+ * File:     outputfilter.trimwhitespace.php<br>
+ * Type:     outputfilter<br>
+ * Name:     trimwhitespace<br>
+ * Date:     Jan 25, 2003<br>
+ * Purpose:  trim leading white space and blank lines from
+ *           template source after it gets interpreted, cleaning
+ *           up code and saving bandwidth. Does not affect
+ *           <<PRE>></PRE> and <SCRIPT></SCRIPT> blocks.<br>
+ * Install:  Drop into the plugin directory, call
+ *           <code>$smarty->load_filter('output','trimwhitespace');</code>
+ *           from application.
+ * @author   Monte Ohrt <monte at ohrt dot com>
+ * @author Contributions from Lars Noschinski <lars at usenet.noschinski.de>
+ * @version  1.3
+ * @param string
+ * @param Smarty
+ */
+function smarty_outputfilter_trimwhitespace($source, &$smarty)
+{
+    // Pull out the script blocks
+    preg_match_all("!<script[^>]+>.*?</script>!is", $source, $match);
+    $_script_blocks = $match[0];
+    $source = preg_replace("!<script[^>]+>.*?</script>!is",
+                           '@@@SMARTY:TRIM:SCRIPT@@@', $source);
+
+    // Pull out the pre blocks
+    preg_match_all("!<pre>.*?</pre>!is", $source, $match);
+    $_pre_blocks = $match[0];
+    $source = preg_replace("!<pre>.*?</pre>!is",
+                           '@@@SMARTY:TRIM:PRE@@@', $source);
+
+    // Pull out the textarea blocks
+    preg_match_all("!<textarea[^>]+>.*?</textarea>!is", $source, $match);
+    $_textarea_blocks = $match[0];
+    $source = preg_replace("!<textarea[^>]+>.*?</textarea>!is",
+                           '@@@SMARTY:TRIM:TEXTAREA@@@', $source);
+
+    // remove all leading spaces, tabs and carriage returns NOT
+    // preceeded by a php close tag.
+    $source = trim(preg_replace('/((?<!\?>)\n)[\s]+/m', '\1', $source));
+
+    // replace script blocks
+    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:SCRIPT@@@",$_script_blocks, $source);
+
+    // replace pre blocks
+    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:PRE@@@",$_pre_blocks, $source);
+
+    // replace textarea blocks
+    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:TEXTAREA@@@",$_textarea_blocks, $source);
+
+    return $source;
+}
+
+function smarty_outputfilter_trimwhitespace_replace($search_str, $replace, &$subject) {
+    $_len = strlen($search_str);
+    $_pos = 0;
+    for ($_i=0, $_count=count($replace); $_i<$_count; $_i++)
+        if (($_pos=strpos($subject, $search_str, $_pos))!==false)
+            $subject = substr_replace($subject, $replace[$_i], $_pos, $_len);
+        else
+            break;
+
+}
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/shared.escape_special_chars.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/shared.escape_special_chars.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/shared.escape_special_chars.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,30 +1,30 @@
-<?php
-/**
- * Smarty shared plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * escape_special_chars common function
- *
- * Function: smarty_function_escape_special_chars<br>
- * Purpose:  used by other smarty functions to escape
- *           special chars except for already escaped ones
- * @param string
- * @return string
- */
-function smarty_function_escape_special_chars($string)
-{
-    if(!is_array($string)) {
-        $string = preg_replace('!&(#?\w+);!', '%%%SMARTY_START%%%\\1%%%SMARTY_END%%%', $string);
-        $string = htmlspecialchars($string);
-        $string = str_replace(array('%%%SMARTY_START%%%','%%%SMARTY_END%%%'), array('&',';'), $string);
-    }
-    return $string;
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty shared plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * escape_special_chars common function
+ *
+ * Function: smarty_function_escape_special_chars<br>
+ * Purpose:  used by other smarty functions to escape
+ *           special chars except for already escaped ones
+ * @param string
+ * @return string
+ */
+function smarty_function_escape_special_chars($string)
+{
+    if(!is_array($string)) {
+        $string = preg_replace('!&(#?\w+);!', '%%%SMARTY_START%%%\\1%%%SMARTY_END%%%', $string);
+        $string = htmlspecialchars($string);
+        $string = str_replace(array('%%%SMARTY_START%%%','%%%SMARTY_END%%%'), array('&',';'), $string);
+    }
+    return $string;
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/shared.make_timestamp.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/shared.make_timestamp.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/smarty/plugins/shared.make_timestamp.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,43 +1,45 @@
-<?php
-/**
- * Smarty shared plugin
- * @package Smarty
- * @subpackage plugins
- */
-
-
-/**
- * Function: smarty_make_timestamp<br>
- * Purpose:  used by other smarty functions to make a timestamp
- *           from a string.
- * @param string
- * @return string
- */
-function smarty_make_timestamp($string)
-{
-    if(empty($string)) {
-        $string = "now";
-    }
-    $time = strtotime($string);
-    if (is_numeric($time) && $time != -1)
-        return $time;
-
-    // is mysql timestamp format of YYYYMMDDHHMMSS?
-    if (preg_match('/^\d{14}$/', $string)) {
-        $time = mktime(substr($string,8,2),substr($string,10,2),substr($string,12,2),
-               substr($string,4,2),substr($string,6,2),substr($string,0,4));
-
-        return $time;
-    }
-
-    // couldn't recognize it, try to return a time
-    $time = (int) $string;
-    if ($time > 0)
-        return $time;
-    else
-        return time();
-}
-
-/* vim: set expandtab: */
-
-?>
+<?php
+/**
+ * Smarty shared plugin
+ * @package Smarty
+ * @subpackage plugins
+ */
+
+
+/**
+ * Function: smarty_make_timestamp<br>
+ * Purpose:  used by other smarty functions to make a timestamp
+ *           from a string.
+ * @param string
+ * @return string
+ */
+function smarty_make_timestamp($string)
+{
+    if(empty($string)) {
+        // use "now":
+        $time = time();
+
+    } elseif (preg_match('/^\d{14}$/', $string)) {
+        // it is mysql timestamp format of YYYYMMDDHHMMSS?            
+        $time = mktime(substr($string, 8, 2),substr($string, 10, 2),substr($string, 12, 2),
+                       substr($string, 4, 2),substr($string, 6, 2),substr($string, 0, 4));
+        
+    } elseif (is_numeric($string)) {
+        // it is a numeric string, we handle it as timestamp
+        $time = (int)$string;
+        
+    } else {
+        // strtotime should handle it
+        $time = strtotime($string);
+        if ($time == -1 || $time === false) {
+            // strtotime() was not able to parse $string, use "now":
+            $time = time();
+        }
+    }
+    return $time;
+
+}
+
+/* vim: set expandtab: */
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/snoopy.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/snoopy.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/snoopy.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,1218 +1,1257 @@
-<?php
-
-/*************************************************
-
-Snoopy - the PHP net client
-Author: Monte Ohrt <monte at ispi.net>
-Copyright (c): 1999-2000 ispi, all rights reserved
-Version: 1.01
-
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 2.1 of the License, or (at your option) any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-You may contact the author of Snoopy by e-mail at:
-monte at ispi.net
-
-Or, write to:
-Monte Ohrt
-CTO, ispi
-237 S. 70th suite 220
-Lincoln, NE 68510
-
-The latest version of Snoopy can be obtained from:
-http://snoopy.sourceforge.com
-
-*************************************************/
-
-class Snoopy
-{
-	/**** Public variables ****/
-	
-	/* user definable vars */
-
-	var $host			=	"www.php.net";		// host name we are connecting to
-	var $port			=	80;					// port we are connecting to
-	var $proxy_host		=	"";					// proxy host to use
-	var $proxy_port		=	"";					// proxy port to use
-	var $agent			=	"Snoopy v1.01";		// agent we masquerade as
-	var	$referer		=	"";					// referer info to pass
-	var $cookies		=	array();			// array of cookies to pass
-												// $cookies["username"]="joe";
-	var	$rawheaders		=	array();			// array of raw headers to send
-												// $rawheaders["Content-type"]="text/html";
-
-	var $maxredirs		=	5;					// http redirection depth maximum. 0 = disallow
-	var $lastredirectaddr	=	"";				// contains address of last redirected address
-	var	$offsiteok		=	true;				// allows redirection off-site
-	var $maxframes		=	0;					// frame content depth maximum. 0 = disallow
-	var $expandlinks	=	true;				// expand links to fully qualified URLs.
-												// this only applies to fetchlinks()
-												// or submitlinks()
-	var $passcookies	=	true;				// pass set cookies back through redirects
-												// NOTE: this currently does not respect
-												// dates, domains or paths.
-	
-	var	$user			=	"";					// user for http authentication
-	var	$pass			=	"";					// password for http authentication
-	
-	// http accept types
-	var $accept			=	"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*";
-	
-	var $results		=	"";					// where the content is put
-		
-	var $error			=	"";					// error messages sent here
-	var	$response_code	=	"";					// response code returned from server
-	var	$headers		=	array();			// headers returned from server sent here
-	var	$maxlength		=	500000;				// max return data length (body)
-	var $read_timeout	=	0;					// timeout on read operations, in seconds
-												// supported only since PHP 4 Beta 4
-												// set to 0 to disallow timeouts
-	var $timed_out		=	false;				// if a read operation timed out
-	var	$status			=	0;					// http request status
-	
-	var	$curl_path		=	"/usr/local/bin/curl";
-												// Snoopy will use cURL for fetching
-												// SSL content if a full system path to
-												// the cURL binary is supplied here.
-												// set to false if you do not have
-												// cURL installed. See http://curl.haxx.se
-												// for details on installing cURL.
-												// Snoopy does *not* use the cURL
-												// library functions built into php,
-												// as these functions are not stable
-												// as of this Snoopy release.
-	
-	/**** Private variables ****/	
-	
-	var	$_maxlinelen	=	4096;				// max line length (headers)
-	
-	var $_httpmethod	=	"GET";				// default http request method
-	var $_httpversion	=	"HTTP/1.0";			// default http request version
-	var $_submit_method	=	"POST";				// default submit method
-	var $_submit_type	=	"application/x-www-form-urlencoded";	// default submit type
-	var $_mime_boundary	=   "";					// MIME boundary for multipart/form-data submit type
-	var $_redirectaddr	=	false;				// will be set if page fetched is a redirect
-	var $_redirectdepth	=	0;					// increments on an http redirect
-	var $_frameurls		= 	array();			// frame src urls
-	var $_framedepth	=	0;					// increments on frame depth
-	
-	var $_isproxy		=	false;				// set if using a proxy server
-	var $_fp_timeout	=	30;					// timeout for socket connection
-
-/*======================================================================*\
-	Function:	fetch
-	Purpose:	fetch the contents of a web page
-				(and possibly other protocols in the
-				future like ftp, nntp, gopher, etc.)
-	Input:		$URI	the location of the page to fetch
-	Output:		$this->results	the output text from the fetch
-\*======================================================================*/
-
-	function fetch($URI)
-	{
-	
-		//preg_match("|^([^:]+)://([^:/]+)(:[\d]+)*(.*)|",$URI,$URI_PARTS);
-		$URI_PARTS = parse_url($URI);
-		if (!empty($URI_PARTS["user"]))
-			$this->user = $URI_PARTS["user"];
-		if (!empty($URI_PARTS["pass"]))
-			$this->pass = $URI_PARTS["pass"];
-				
-		switch($URI_PARTS["scheme"])
-		{
-			case "http":
-				$this->host = $URI_PARTS["host"];
-				if(!empty($URI_PARTS["port"]))
-					$this->port = $URI_PARTS["port"];
-				if($this->_connect($fp))
-				{
-					if($this->_isproxy)
-					{
-						// using proxy, send entire URI
-						$this->_httprequest($URI,$fp,$URI,$this->_httpmethod);
-					}
-					else
-					{
-						$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
-						// no proxy, send only the path
-						$this->_httprequest($path, $fp, $URI, $this->_httpmethod);
-					}
-					
-					$this->_disconnect($fp);
-
-					if($this->_redirectaddr)
-					{
-						/* url was redirected, check if we've hit the max depth */
-						if($this->maxredirs > $this->_redirectdepth)
-						{
-							// only follow redirect if it's on this site, or offsiteok is true
-							if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
-							{
-								/* follow the redirect */
-								$this->_redirectdepth++;
-								$this->lastredirectaddr=$this->_redirectaddr;
-								$this->fetch($this->_redirectaddr);
-							}
-						}
-					}
-
-					if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
-					{
-						$frameurls = $this->_frameurls;
-						$this->_frameurls = array();
-						
-						while(list(,$frameurl) = each($frameurls))
-						{
-							if($this->_framedepth < $this->maxframes)
-							{
-								$this->fetch($frameurl);
-								$this->_framedepth++;
-							}
-							else
-								break;
-						}
-					}					
-				}
-				else
-				{
-					return false;
-				}
-				return true;					
-				break;
-			case "https":
-				if(!$this->curl_path || (!is_executable($this->curl_path)))
-					return false;
-				$this->host = $URI_PARTS["host"];
-				if(!empty($URI_PARTS["port"]))
-					$this->port = $URI_PARTS["port"];
-				if($this->_isproxy)
-				{
-					// using proxy, send entire URI
-					$this->_httpsrequest($URI,$URI,$this->_httpmethod);
-				}
-				else
-				{
-					$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
-					// no proxy, send only the path
-					$this->_httpsrequest($path, $URI, $this->_httpmethod);
-				}
-
-				if($this->_redirectaddr)
-				{
-					/* url was redirected, check if we've hit the max depth */
-					if($this->maxredirs > $this->_redirectdepth)
-					{
-						// only follow redirect if it's on this site, or offsiteok is true
-						if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
-						{
-							/* follow the redirect */
-							$this->_redirectdepth++;
-							$this->lastredirectaddr=$this->_redirectaddr;
-							$this->fetch($this->_redirectaddr);
-						}
-					}
-				}
-
-				if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
-				{
-					$frameurls = $this->_frameurls;
-					$this->_frameurls = array();
-
-					while(list(,$frameurl) = each($frameurls))
-					{
-						if($this->_framedepth < $this->maxframes)
-						{
-							$this->fetch($frameurl);
-							$this->_framedepth++;
-						}
-						else
-							break;
-					}
-				}					
-				return true;					
-				break;
-			default:
-				// not a valid protocol
-				$this->error	=	'Invalid protocol "'.$URI_PARTS["scheme"].'"\n';
-				return false;
-				break;
-		}		
-		return true;
-	}
-
-/*======================================================================*\
-	Function:	submit
-	Purpose:	submit an http form
-	Input:		$URI	the location to post the data
-				$formvars	the formvars to use.
-					format: $formvars["var"] = "val";
-	Output:		$this->results	the text output from the post
-\*======================================================================*/
-
-	function submit($URI, $formvars="", $formfiles="")
-	{
-		unset($postdata);
-		
-		$postdata = $this->_prepare_post_body($formvars, $formfiles);
-			
-		$URI_PARTS = parse_url($URI);
-		if (!empty($URI_PARTS["user"]))
-			$this->user = $URI_PARTS["user"];
-		if (!empty($URI_PARTS["pass"]))
-			$this->pass = $URI_PARTS["pass"];
-				
-		switch($URI_PARTS["scheme"])
-		{
-			case "http":
-				$this->host = $URI_PARTS["host"];
-				if(!empty($URI_PARTS["port"]))
-					$this->port = $URI_PARTS["port"];
-				if($this->_connect($fp))
-				{
-					if($this->_isproxy)
-					{
-						// using proxy, send entire URI
-						$this->_httprequest($URI,$fp,$URI,$this->_submit_method,$this->_submit_type,$postdata);
-					}
-					else
-					{
-						$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
-						// no proxy, send only the path
-						$this->_httprequest($path, $fp, $URI, $this->_submit_method, $this->_submit_type, $postdata);
-					}
-					
-					$this->_disconnect($fp);
-
-					if($this->_redirectaddr)
-					{
-						/* url was redirected, check if we've hit the max depth */
-						if($this->maxredirs > $this->_redirectdepth)
-						{						
-							if(!preg_match("|^".$URI_PARTS["scheme"]."://|", $this->_redirectaddr))
-								$this->_redirectaddr = $this->_expandlinks($this->_redirectaddr,$URI_PARTS["scheme"]."://".$URI_PARTS["host"]);						
-							
-							// only follow redirect if it's on this site, or offsiteok is true
-							if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
-							{
-								/* follow the redirect */
-								$this->_redirectdepth++;
-								$this->lastredirectaddr=$this->_redirectaddr;
-								$this->submit($this->_redirectaddr,$formvars, $formfiles);
-							}
-						}
-					}
-
-					if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
-					{
-						$frameurls = $this->_frameurls;
-						$this->_frameurls = array();
-						
-						while(list(,$frameurl) = each($frameurls))
-						{														
-							if($this->_framedepth < $this->maxframes)
-							{
-								$this->fetch($frameurl);
-								$this->_framedepth++;
-							}
-							else
-								break;
-						}
-					}					
-					
-				}
-				else
-				{
-					return false;
-				}
-				return true;					
-				break;
-			case "https":
-				if(!$this->curl_path || (!is_executable($this->curl_path)))
-					return false;
-				$this->host = $URI_PARTS["host"];
-				if(!empty($URI_PARTS["port"]))
-					$this->port = $URI_PARTS["port"];
-				if($this->_isproxy)
-				{
-					// using proxy, send entire URI
-					$this->_httpsrequest($URI, $URI, $this->_submit_method, $this->_submit_type, $postdata);
-				}
-				else
-				{
-					$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
-					// no proxy, send only the path
-					$this->_httpsrequest($path, $URI, $this->_submit_method, $this->_submit_type, $postdata);
-				}
-
-				if($this->_redirectaddr)
-				{
-					/* url was redirected, check if we've hit the max depth */
-					if($this->maxredirs > $this->_redirectdepth)
-					{						
-						if(!preg_match("|^".$URI_PARTS["scheme"]."://|", $this->_redirectaddr))
-							$this->_redirectaddr = $this->_expandlinks($this->_redirectaddr,$URI_PARTS["scheme"]."://".$URI_PARTS["host"]);						
-
-						// only follow redirect if it's on this site, or offsiteok is true
-						if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
-						{
-							/* follow the redirect */
-							$this->_redirectdepth++;
-							$this->lastredirectaddr=$this->_redirectaddr;
-							$this->submit($this->_redirectaddr,$formvars, $formfiles);
-						}
-					}
-				}
-
-				if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
-				{
-					$frameurls = $this->_frameurls;
-					$this->_frameurls = array();
-
-					while(list(,$frameurl) = each($frameurls))
-					{														
-						if($this->_framedepth < $this->maxframes)
-						{
-							$this->fetch($frameurl);
-							$this->_framedepth++;
-						}
-						else
-							break;
-					}
-				}					
-				return true;					
-				break;
-				
-			default:
-				// not a valid protocol
-				$this->error	=	'Invalid protocol "'.$URI_PARTS["scheme"].'"\n';
-				return false;
-				break;
-		}		
-		return true;
-	}
-
-/*======================================================================*\
-	Function:	fetchlinks
-	Purpose:	fetch the links from a web page
-	Input:		$URI	where you are fetching from
-	Output:		$this->results	an array of the URLs
-\*======================================================================*/
-
-	function fetchlinks($URI)
-	{
-		if ($this->fetch($URI))
-		{			
-
-			if(is_array($this->results))
-			{
-				for($x=0;$x<count($this->results);$x++)
-					$this->results[$x] = $this->_striplinks($this->results[$x]);
-			}
-			else
-				$this->results = $this->_striplinks($this->results);
-
-			if($this->expandlinks)
-				$this->results = $this->_expandlinks($this->results, $URI);
-			return true;
-		}
-		else
-			return false;
-	}
-
-/*======================================================================*\
-	Function:	fetchform
-	Purpose:	fetch the form elements from a web page
-	Input:		$URI	where you are fetching from
-	Output:		$this->results	the resulting html form
-\*======================================================================*/
-
-	function fetchform($URI)
-	{
-		
-		if ($this->fetch($URI))
-		{			
-
-			if(is_array($this->results))
-			{
-				for($x=0;$x<count($this->results);$x++)
-					$this->results[$x] = $this->_stripform($this->results[$x]);
-			}
-			else
-				$this->results = $this->_stripform($this->results);
-			
-			return true;
-		}
-		else
-			return false;
-	}
-	
-	
-/*======================================================================*\
-	Function:	fetchtext
-	Purpose:	fetch the text from a web page, stripping the links
-	Input:		$URI	where you are fetching from
-	Output:		$this->results	the text from the web page
-\*======================================================================*/
-
-	function fetchtext($URI)
-	{
-		if($this->fetch($URI))
-		{			
-			if(is_array($this->results))
-			{
-				for($x=0;$x<count($this->results);$x++)
-					$this->results[$x] = $this->_striptext($this->results[$x]);
-			}
-			else
-				$this->results = $this->_striptext($this->results);
-			return true;
-		}
-		else
-			return false;
-	}
-
-/*======================================================================*\
-	Function:	submitlinks
-	Purpose:	grab links from a form submission
-	Input:		$URI	where you are submitting from
-	Output:		$this->results	an array of the links from the post
-\*======================================================================*/
-
-	function submitlinks($URI, $formvars="", $formfiles="")
-	{
-		if($this->submit($URI,$formvars, $formfiles))
-		{			
-			if(is_array($this->results))
-			{
-				for($x=0;$x<count($this->results);$x++)
-				{
-					$this->results[$x] = $this->_striplinks($this->results[$x]);
-					if($this->expandlinks)
-						$this->results[$x] = $this->_expandlinks($this->results[$x],$URI);
-				}
-			}
-			else
-			{
-				$this->results = $this->_striplinks($this->results);
-				if($this->expandlinks)
-					$this->results = $this->_expandlinks($this->results,$URI);
-			}
-			return true;
-		}
-		else
-			return false;
-	}
-
-/*======================================================================*\
-	Function:	submittext
-	Purpose:	grab text from a form submission
-	Input:		$URI	where you are submitting from
-	Output:		$this->results	the text from the web page
-\*======================================================================*/
-
-	function submittext($URI, $formvars = "", $formfiles = "")
-	{
-		if($this->submit($URI,$formvars, $formfiles))
-		{			
-			if(is_array($this->results))
-			{
-				for($x=0;$x<count($this->results);$x++)
-				{
-					$this->results[$x] = $this->_striptext($this->results[$x]);
-					if($this->expandlinks)
-						$this->results[$x] = $this->_expandlinks($this->results[$x],$URI);
-				}
-			}
-			else
-			{
-				$this->results = $this->_striptext($this->results);
-				if($this->expandlinks)
-					$this->results = $this->_expandlinks($this->results,$URI);
-			}
-			return true;
-		}
-		else
-			return false;
-	}
-
-	
-
-/*======================================================================*\
-	Function:	set_submit_multipart
-	Purpose:	Set the form submission content type to
-				multipart/form-data
-\*======================================================================*/
-	function set_submit_multipart()
-	{
-		$this->_submit_type = "multipart/form-data";
-	}
-
-	
-/*======================================================================*\
-	Function:	set_submit_normal
-	Purpose:	Set the form submission content type to
-				application/x-www-form-urlencoded
-\*======================================================================*/
-	function set_submit_normal()
-	{
-		$this->_submit_type = "application/x-www-form-urlencoded";
-	}
-
-
-// XOOPS2 Hack begin
-// Added on March 4, 2003 by onokazu at xoops.org
-/*======================================================================*\
-	Function:	set_submit_xml
-	Purpose:	Set the submission content type to
-				text/xml
-\*======================================================================*/
-	function set_submit_xml()
-	{
-		$this->_submit_type = "text/xml";
-	}
-// XOOPS2 Hack end
-
-
-/*======================================================================*\
-	Private functions
-\*======================================================================*/
-	
-	
-/*======================================================================*\
-	Function:	_striplinks
-	Purpose:	strip the hyperlinks from an html document
-	Input:		$document	document to strip.
-	Output:		$match		an array of the links
-\*======================================================================*/
-
-	function _striplinks($document)
-	{	
-		preg_match_all("'<\s*a\s.*?href\s*=\s*			# find <a href=
-						([\"\'])?					# find single or double quote
-						(?(1) (.*?)\\1 | ([^\s\>]+))		# if quote found, match up to next matching
-													# quote, otherwise match up to next space
-						'isx",$document,$links);
-						
-
-		// catenate the non-empty matches from the conditional subpattern
-
-		while(list($key,$val) = each($links[2]))
-		{
-			if(!empty($val))
-				$match[] = $val;
-		}				
-		
-		while(list($key,$val) = each($links[3]))
-		{
-			if(!empty($val))
-				$match[] = $val;
-		}		
-		
-		// return the links
-		return $match;
-	}
-
-/*======================================================================*\
-	Function:	_stripform
-	Purpose:	strip the form elements from an html document
-	Input:		$document	document to strip.
-	Output:		$match		an array of the links
-\*======================================================================*/
-
-	function _stripform($document)
-	{	
-		preg_match_all("'<\/?(FORM|INPUT|SELECT|TEXTAREA|(OPTION))[^<>]*>(?(2)(.*(?=<\/?(option|select)[^<>]*>[\r\n]*)|(?=[\r\n]*))|(?=[\r\n]*))'Usi",$document,$elements);
-		
-		// catenate the matches
-		$match = implode("\r\n",$elements[0]);
-				
-		// return the links
-		return $match;
-	}
-
-	
-	
-/*======================================================================*\
-	Function:	_striptext
-	Purpose:	strip the text from an html document
-	Input:		$document	document to strip.
-	Output:		$text		the resulting text
-\*======================================================================*/
-
-	function _striptext($document)
-	{
-		
-		// I didn't use preg eval (//e) since that is only available in PHP 4.0.
-		// so, list your entities one by one here. I included some of the
-		// more common ones.
-								
-		$search = array("'<script[^>]*?>.*?</script>'si",	// strip out javascript
-						"'<[\/\!]*?[^<>]*?>'si",			// strip out html tags
-						"'([\r\n])[\s]+'",					// strip out white space
-						"'&(quot|#34|#034|#x22);'i",		// replace html entities
-						"'&(amp|#38|#038|#x26);'i",			// added hexadecimal values
-						"'&(lt|#60|#060|#x3c);'i",
-						"'&(gt|#62|#062|#x3e);'i",
-						"'&(nbsp|#160|#xa0);'i",
-						"'&(iexcl|#161);'i",
-						"'&(cent|#162);'i",
-						"'&(pound|#163);'i",
-						"'&(copy|#169);'i",
-						"'&(reg|#174);'i",
-						"'&(deg|#176);'i",
-						"'&(#39|#039|#x27);'",
-						"'&(euro|#8364);'i",				// europe
-						"'&a(uml|UML);'",					// german
-						"'&o(uml|UML);'",
-						"'&u(uml|UML);'",
-						"'&A(uml|UML);'",
-						"'&O(uml|UML);'",
-						"'&U(uml|UML);'",
-						"'&szlig;'i",
-						);
-		$replace = array(	"",
-							"",
-							"\\1",
-							"\"",
-							"&",
-							"<",
-							">",
-							" ",
-							chr(161),
-							chr(162),
-							chr(163),
-							chr(169),
-							chr(174),
-							chr(176),
-							chr(39),
-							chr(128),
-							chr(228),
-							chr(246),
-							chr(252),
-							chr(196),
-							chr(214),
-							chr(220),
-							chr(223),
-						);
-					
-		$text = preg_replace($search,$replace,$document);
-								
-		return $text;
-	}
-
-/*======================================================================*\
-	Function:	_expandlinks
-	Purpose:	expand each link into a fully qualified URL
-	Input:		$links			the links to qualify
-				$URI			the full URI to get the base from
-	Output:		$expandedLinks	the expanded links
-\*======================================================================*/
-
-	function _expandlinks($links,$URI)
-	{
-		
-		preg_match("/^[^\?]+/",$URI,$match);
-
-		$match = preg_replace("|/[^\/\.]+\.[^\/\.]+$|","",$match[0]);
-				
-		$search = array( 	"|^http://".preg_quote($this->host)."|i",
-							"|^(?!http://)(\/)?(?!mailto:)|i",
-							"|/\./|",
-							"|/[^\/]+/\.\./|"
-						);
-						
-		$replace = array(	"",
-							$match."/",
-							"/",
-							"/"
-						);			
-				
-		$expandedLinks = preg_replace($search,$replace,$links);
-
-		return $expandedLinks;
-	}
-
-/*======================================================================*\
-	Function:	_httprequest
-	Purpose:	go get the http data from the server
-	Input:		$url		the url to fetch
-				$fp			the current open file pointer
-				$URI		the full URI
-				$body		body contents to send if any (POST)
-	Output:		
-\*======================================================================*/
-	
-	function _httprequest($url,$fp,$URI,$http_method,$content_type="",$body="")
-	{
-		$cookie_headers = '';
-		if($this->passcookies && $this->_redirectaddr)
-			$this->setcookies();
-			
-		$URI_PARTS = parse_url($URI);
-		if(empty($url))
-			$url = "/";
-		$headers = $http_method." ".$url." ".$this->_httpversion."\r\n";		
-		if(!empty($this->agent))
-			$headers .= "User-Agent: ".$this->agent."\r\n";
-		if(!empty($this->host) && !isset($this->rawheaders['Host']))
-			$headers .= "Host: ".$this->host."\r\n";
-		if(!empty($this->accept))
-			$headers .= "Accept: ".$this->accept."\r\n";
-		if(!empty($this->referer))
-			$headers .= "Referer: ".$this->referer."\r\n";
-		if(!empty($this->cookies))
-		{			
-			if(!is_array($this->cookies))
-				$this->cookies = (array)$this->cookies;
-	
-			reset($this->cookies);
-			if ( count($this->cookies) > 0 ) {
-				$cookie_headers .= 'Cookie: ';
-				foreach ( $this->cookies as $cookieKey => $cookieVal ) {
-				$cookie_headers .= $cookieKey."=".urlencode($cookieVal)."; ";
-				}
-				$headers .= substr($cookie_headers,0,-2) . "\r\n";
-			} 
-		}
-		if(!empty($this->rawheaders))
-		{
-			if(!is_array($this->rawheaders))
-				$this->rawheaders = (array)$this->rawheaders;
-			while(list($headerKey,$headerVal) = each($this->rawheaders))
-				$headers .= $headerKey.": ".$headerVal."\r\n";
-		}
-		if(!empty($content_type)) {
-			$headers .= "Content-type: $content_type";
-			if ($content_type == "multipart/form-data")
-				$headers .= "; boundary=".$this->_mime_boundary;
-			$headers .= "\r\n";
-		}
-		if(!empty($body))	
-			$headers .= "Content-length: ".strlen($body)."\r\n";
-		if(!empty($this->user) || !empty($this->pass))	
-			$headers .= "Authorization: Basic ".base64_encode($this->user.":".$this->pass)."\r\n";
-
-		$headers .= "\r\n";
-		
-		// set the read timeout if needed
-		if ($this->read_timeout > 0)
-			socket_set_timeout($fp, $this->read_timeout);
-		$this->timed_out = false;
-		
-		fwrite($fp,$headers.$body,strlen($headers.$body));
-		
-		$this->_redirectaddr = false;
-		unset($this->headers);
-						
-		while($currentHeader = fgets($fp,$this->_maxlinelen))
-		{
-			if ($this->read_timeout > 0 && $this->_check_timeout($fp))
-			{
-				$this->status=-100;
-				return false;
-			}
-				
-			if($currentHeader == "\r\n")
-				break;
-						
-			// if a header begins with Location: or URI:, set the redirect
-			if(preg_match("/^(Location:|URI:)/i",$currentHeader))
-			{
-				// get URL portion of the redirect
-				preg_match("/^(Location:|URI:)[ ]+(.*)/",chop($currentHeader),$matches);
-				// look for :// in the Location header to see if hostname is included
-				if(!preg_match("|\:\/\/|",$matches[2]))
-				{
-					// no host in the path, so prepend
-					$this->_redirectaddr = $URI_PARTS["scheme"]."://".$this->host.":".$this->port;
-					// eliminate double slash
-					if(!preg_match("|^/|",$matches[2]))
-							$this->_redirectaddr .= "/".$matches[2];
-					else
-							$this->_redirectaddr .= $matches[2];
-				}
-				else
-					$this->_redirectaddr = $matches[2];
-			}
-		
-			if(preg_match("|^HTTP/|",$currentHeader))
-			{
-                if(preg_match("|^HTTP/[^\s]*\s(.*?)\s|",$currentHeader, $status))
-				{
-					$this->status= $status[1];
-                }				
-				$this->response_code = $currentHeader;
-			}
-				
-			$this->headers[] = $currentHeader;
-		}
-
-		$results = '';
-		do {
-    		$_data = fread($fp, $this->maxlength);
-    		if (strlen($_data) == 0) {
-        		break;
-    		}
-    		$results .= $_data;
-		} while(true);
-
-		if ($this->read_timeout > 0 && $this->_check_timeout($fp))
-		{
-			$this->status=-100;
-			return false;
-		}
-		
-		// check if there is a a redirect meta tag
-		
-		if(preg_match("'<meta[\s]*http-equiv[^>]*?content[\s]*=[\s]*[\"\']?\d+;[\s]+URL[\s]*=[\s]*([^\"\']*?)[\"\']?>'i",$results,$match))
-		{
-			$this->_redirectaddr = $this->_expandlinks($match[1],$URI);	
-		}
-
-		// have we hit our frame depth and is there frame src to fetch?
-		if(($this->_framedepth < $this->maxframes) && preg_match_all("'<frame\s+.*src[\s]*=[\'\"]?([^\'\"\>]+)'i",$results,$match))
-		{
-			$this->results[] = $results;
-			for($x=0; $x<count($match[1]); $x++)
-				$this->_frameurls[] = $this->_expandlinks($match[1][$x],$URI_PARTS["scheme"]."://".$this->host);
-		}
-		// have we already fetched framed content?
-		elseif(is_array($this->results))
-			$this->results[] = $results;
-		// no framed content
-		else
-			$this->results = $results;
-		
-		return true;
-	}
-
-/*======================================================================*\
-	Function:	_httpsrequest
-	Purpose:	go get the https data from the server using curl
-	Input:		$url		the url to fetch
-				$URI		the full URI
-				$body		body contents to send if any (POST)
-	Output:		
-\*======================================================================*/
-	
-	function _httpsrequest($url,$URI,$http_method,$content_type="",$body="")
-	{
-		if($this->passcookies && $this->_redirectaddr)
-			$this->setcookies();
-
-		$headers = array();		
-					
-		$URI_PARTS = parse_url($URI);
-		if(empty($url))
-			$url = "/";
-		// GET ... header not needed for curl
-		//$headers[] = $http_method." ".$url." ".$this->_httpversion;		
-		if(!empty($this->agent))
-			$headers[] = "User-Agent: ".$this->agent;
-		if(!empty($this->host))
-			$headers[] = "Host: ".$this->host;
-		if(!empty($this->accept))
-			$headers[] = "Accept: ".$this->accept;
-		if(!empty($this->referer))
-			$headers[] = "Referer: ".$this->referer;
-		if(!empty($this->cookies))
-		{			
-			if(!is_array($this->cookies))
-				$this->cookies = (array)$this->cookies;
-	
-			reset($this->cookies);
-			if ( count($this->cookies) > 0 ) {
-				$cookie_str = 'Cookie: ';
-				foreach ( $this->cookies as $cookieKey => $cookieVal ) {
-				$cookie_str .= $cookieKey."=".urlencode($cookieVal)."; ";
-				}
-				$headers[] = substr($cookie_str,0,-2);
-			}
-		}
-		if(!empty($this->rawheaders))
-		{
-			if(!is_array($this->rawheaders))
-				$this->rawheaders = (array)$this->rawheaders;
-			while(list($headerKey,$headerVal) = each($this->rawheaders))
-				$headers[] = $headerKey.": ".$headerVal;
-		}
-		if(!empty($content_type)) {
-			if ($content_type == "multipart/form-data")
-				$headers[] = "Content-type: $content_type; boundary=".$this->_mime_boundary;
-			else
-				$headers[] = "Content-type: $content_type";
-		}
-		if(!empty($body))	
-			$headers[] = "Content-length: ".strlen($body);
-		if(!empty($this->user) || !empty($this->pass))	
-			$headers[] = "Authorization: BASIC ".base64_encode($this->user.":".$this->pass);
-			
-		for($curr_header = 0; $curr_header < count($headers); $curr_header++)
-			$cmdline_params .= " -H \"".$headers[$curr_header]."\"";
-		
-		if(!empty($body))
-			$cmdline_params .= " -d \"$body\"";
-		
-		if($this->read_timeout > 0)
-			$cmdline_params .= " -m ".$this->read_timeout;
-		
-		$headerfile = uniqid(time());
-
-		exec($this->curl_path." -D \"/tmp/$headerfile\"".$cmdline_params." ".$URI,$results,$return);
-		
-		if($return)
-		{
-			$this->error = "Error: cURL could not retrieve the document, error $return.";
-			return false;
-		}
-			
-			
-		$results = implode("\r\n",$results);
-		
-		$result_headers = file("/tmp/$headerfile");
-						
-		$this->_redirectaddr = false;
-		unset($this->headers);
-						
-		for($currentHeader = 0; $currentHeader < count($result_headers); $currentHeader++)
-		{
-			
-			// if a header begins with Location: or URI:, set the redirect
-			if(preg_match("/^(Location: |URI: )/i",$result_headers[$currentHeader]))
-			{
-				// get URL portion of the redirect
-				preg_match("/^(Location: |URI:)\s+(.*)/",chop($result_headers[$currentHeader]),$matches);
-				// look for :// in the Location header to see if hostname is included
-				if(!preg_match("|\:\/\/|",$matches[2]))
-				{
-					// no host in the path, so prepend
-					$this->_redirectaddr = $URI_PARTS["scheme"]."://".$this->host.":".$this->port;
-					// eliminate double slash
-					if(!preg_match("|^/|",$matches[2]))
-							$this->_redirectaddr .= "/".$matches[2];
-					else
-							$this->_redirectaddr .= $matches[2];
-				}
-				else
-					$this->_redirectaddr = $matches[2];
-			}
-		
-			if(preg_match("|^HTTP/|",$result_headers[$currentHeader]))
-				$this->response_code = $result_headers[$currentHeader];
-
-			$this->headers[] = $result_headers[$currentHeader];
-		}
-
-		// check if there is a a redirect meta tag
-		
-		if(preg_match("'<meta[\s]*http-equiv[^>]*?content[\s]*=[\s]*[\"\']?\d+;[\s]+URL[\s]*=[\s]*([^\"\']*?)[\"\']?>'i",$results,$match))
-		{
-			$this->_redirectaddr = $this->_expandlinks($match[1],$URI);	
-		}
-
-		// have we hit our frame depth and is there frame src to fetch?
-		if(($this->_framedepth < $this->maxframes) && preg_match_all("'<frame\s+.*src[\s]*=[\'\"]?([^\'\"\>]+)'i",$results,$match))
-		{
-			$this->results[] = $results;
-			for($x=0; $x<count($match[1]); $x++)
-				$this->_frameurls[] = $this->_expandlinks($match[1][$x],$URI_PARTS["scheme"]."://".$this->host);
-		}
-		// have we already fetched framed content?
-		elseif(is_array($this->results))
-			$this->results[] = $results;
-		// no framed content
-		else
-			$this->results = $results;
-
-		unlink("/tmp/$headerfile");
-		
-		return true;
-	}
-
-/*======================================================================*\
-	Function:	setcookies()
-	Purpose:	set cookies for a redirection
-\*======================================================================*/
-	
-	function setcookies()
-	{
-		for($x=0; $x<count($this->headers); $x++)
-		{
-		if(preg_match('/^set-cookie:[\s]+([^=]+)=([^;]+)/i', $this->headers[$x],$match))
-			$this->cookies[$match[1]] = $match[2];
-		}
-	}
-
-	
-/*======================================================================*\
-	Function:	_check_timeout
-	Purpose:	checks whether timeout has occurred
-	Input:		$fp	file pointer
-\*======================================================================*/
-
-	function _check_timeout($fp)
-	{
-		if ($this->read_timeout > 0) {
-			$fp_status = socket_get_status($fp);
-			if ($fp_status["timed_out"]) {
-				$this->timed_out = true;
-				return true;
-			}
-		}
-		return false;
-	}
-
-/*======================================================================*\
-	Function:	_connect
-	Purpose:	make a socket connection
-	Input:		$fp	file pointer
-\*======================================================================*/
-	
-	function _connect(&$fp)
-	{
-		if(!empty($this->proxy_host) && !empty($this->proxy_port))
-			{
-				$this->_isproxy = true;
-				$host = $this->proxy_host;
-				$port = $this->proxy_port;
-			}
-		else
-		{
-			$host = $this->host;
-			$port = $this->port;
-		}
-	
-		$this->status = 0;
-		
-		if($fp = fsockopen(
-					$host,
-					$port,
-					$errno,
-					$errstr,
-					$this->_fp_timeout
-					))
-		{
-			// socket connection succeeded
-
-			return true;
-		}
-		else
-		{
-			// socket connection failed
-			$this->status = $errno;
-			switch($errno)
-			{
-				case -3:
-					$this->error="socket creation failed (-3)";
-				case -4:
-					$this->error="dns lookup failure (-4)";
-				case -5:
-					$this->error="connection refused or timed out (-5)";
-				default:
-					$this->error="connection failed (".$errno.")";
-			}
-			return false;
-		}
-	}
-/*======================================================================*\
-	Function:	_disconnect
-	Purpose:	disconnect a socket connection
-	Input:		$fp	file pointer
-\*======================================================================*/
-	
-	function _disconnect($fp)
-	{
-		return(fclose($fp));
-	}
-
-	
-/*======================================================================*\
-	Function:	_prepare_post_body
-	Purpose:	Prepare post body according to encoding type
-	Input:		$formvars  - form variables
-				$formfiles - form upload files
-	Output:		post body
-\*======================================================================*/
-	
-	function _prepare_post_body($formvars, $formfiles)
-	{
-		settype($formvars, "array");
-		settype($formfiles, "array");
-
-		if (count($formvars) == 0 && count($formfiles) == 0)
-			return;
-		
-		switch ($this->_submit_type) {
-			case "application/x-www-form-urlencoded":
-				reset($formvars);
-				while(list($key,$val) = each($formvars)) {
-					if (is_array($val) || is_object($val)) {
-						while (list($cur_key, $cur_val) = each($val)) {
-							$postdata .= urlencode($key)."[]=".urlencode($cur_val)."&";
-						}
-					} else
-						$postdata .= urlencode($key)."=".urlencode($val)."&";
-				}
-				break;
-
-			case "multipart/form-data":
-				$this->_mime_boundary = "Snoopy".md5(uniqid(microtime()));
-				
-				reset($formvars);
-				while(list($key,$val) = each($formvars)) {
-					if (is_array($val) || is_object($val)) {
-						while (list($cur_key, $cur_val) = each($val)) {
-							$postdata .= "--".$this->_mime_boundary."\r\n";
-							$postdata .= "Content-Disposition: form-data; name=\"$key\[\]\"\r\n\r\n";
-							$postdata .= "$cur_val\r\n";
-						}
-					} else {
-						$postdata .= "--".$this->_mime_boundary."\r\n";
-						$postdata .= "Content-Disposition: form-data; name=\"$key\"\r\n\r\n";
-						$postdata .= "$val\r\n";
-					}
-				}
-				
-				reset($formfiles);
-				while (list($field_name, $file_names) = each($formfiles)) {
-					settype($file_names, "array");
-					while (list(, $file_name) = each($file_names)) {
-						if (!is_readable($file_name)) continue;
-
-						$fp = fopen($file_name, "r");
-						$file_content = fread($fp, filesize($file_name));
-						fclose($fp);
-						$base_name = basename($file_name);
-
-						$postdata .= "--".$this->_mime_boundary."\r\n";
-						$postdata .= "Content-Disposition: form-data; name=\"$field_name\"; filename=\"$base_name\"\r\n\r\n";
-						$postdata .= "$file_content\r\n";
-					}
-				}
-				$postdata .= "--".$this->_mime_boundary."--\r\n";
-				break;
-			// XOOPS2 Hack begin
-			// Added on March 4, 2003 by onokazu at xoops.org
-			case "text/xml":
-			default:
-				$postdata = $formvars[0];
-				break;
-			// XOOPS2 Hack end
-		}
-
-		return $postdata;
-	}
-}
-
-?>
+<?php
+
+/*************************************************
+
+Snoopy - the PHP net client
+Author: Monte Ohrt <monte at ispi.net>
+Copyright (c): 1999-2000 ispi, all rights reserved
+Version: 1.01
+
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+You may contact the author of Snoopy by e-mail at:
+monte at ispi.net
+
+Or, write to:
+Monte Ohrt
+CTO, ispi
+237 S. 70th suite 220
+Lincoln, NE 68510
+
+The latest version of Snoopy can be obtained from:
+http://snoopy.sourceforge.net/
+
+*************************************************/
+
+class Snoopy
+{
+	/**** Public variables ****/
+	
+	/* user definable vars */
+
+	var $host			=	"www.php.net";		// host name we are connecting to
+	var $port			=	80;					// port we are connecting to
+	var $proxy_host		=	"";					// proxy host to use
+	var $proxy_port		=	"";					// proxy port to use
+	var $proxy_user		=	"";					// proxy user to use
+	var $proxy_pass		=	"";					// proxy password to use
+	
+	var $agent			=	"Snoopy v1.2.3";	// agent we masquerade as
+	var	$referer		=	"";					// referer info to pass
+	var $cookies		=	array();			// array of cookies to pass
+												// $cookies["username"]="joe";
+	var	$rawheaders		=	array();			// array of raw headers to send
+												// $rawheaders["Content-type"]="text/html";
+
+	var $maxredirs		=	5;					// http redirection depth maximum. 0 = disallow
+	var $lastredirectaddr	=	"";				// contains address of last redirected address
+	var	$offsiteok		=	true;				// allows redirection off-site
+	var $maxframes		=	0;					// frame content depth maximum. 0 = disallow
+	var $expandlinks	=	true;				// expand links to fully qualified URLs.
+												// this only applies to fetchlinks()
+												// submitlinks(), and submittext()
+	var $passcookies	=	true;				// pass set cookies back through redirects
+												// NOTE: this currently does not respect
+												// dates, domains or paths.
+	
+	var	$user			=	"";					// user for http authentication
+	var	$pass			=	"";					// password for http authentication
+	
+	// http accept types
+	var $accept			=	"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*";
+	
+	var $results		=	"";					// where the content is put
+		
+	var $error			=	"";					// error messages sent here
+	var	$response_code	=	"";					// response code returned from server
+	var	$headers		=	array();			// headers returned from server sent here
+	var	$maxlength		=	500000;				// max return data length (body)
+	var $read_timeout	=	0;					// timeout on read operations, in seconds
+												// supported only since PHP 4 Beta 4
+												// set to 0 to disallow timeouts
+	var $timed_out		=	false;				// if a read operation timed out
+	var	$status			=	0;					// http request status
+
+	var $temp_dir		=	"/tmp";				// temporary directory that the webserver
+												// has permission to write to.
+												// under Windows, this should be C:\temp
+
+	var	$curl_path		=	"/usr/local/bin/curl";
+												// Snoopy will use cURL for fetching
+												// SSL content if a full system path to
+												// the cURL binary is supplied here.
+												// set to false if you do not have
+												// cURL installed. See http://curl.haxx.se
+												// for details on installing cURL.
+												// Snoopy does *not* use the cURL
+												// library functions built into php,
+												// as these functions are not stable
+												// as of this Snoopy release.
+	
+	/**** Private variables ****/	
+	
+	var	$_maxlinelen	=	4096;				// max line length (headers)
+	
+	var $_httpmethod	=	"GET";				// default http request method
+	var $_httpversion	=	"HTTP/1.0";			// default http request version
+	var $_submit_method	=	"POST";				// default submit method
+	var $_submit_type	=	"application/x-www-form-urlencoded";	// default submit type
+	var $_mime_boundary	=   "";					// MIME boundary for multipart/form-data submit type
+	var $_redirectaddr	=	false;				// will be set if page fetched is a redirect
+	var $_redirectdepth	=	0;					// increments on an http redirect
+	var $_frameurls		= 	array();			// frame src urls
+	var $_framedepth	=	0;					// increments on frame depth
+	
+	var $_isproxy		=	false;				// set if using a proxy server
+	var $_fp_timeout	=	30;					// timeout for socket connection
+
+/*======================================================================*\
+	Function:	fetch
+	Purpose:	fetch the contents of a web page
+				(and possibly other protocols in the
+				future like ftp, nntp, gopher, etc.)
+	Input:		$URI	the location of the page to fetch
+	Output:		$this->results	the output text from the fetch
+\*======================================================================*/
+
+	function fetch($URI)
+	{
+	
+		//preg_match("|^([^:]+)://([^:/]+)(:[\d]+)*(.*)|",$URI,$URI_PARTS);
+		$URI_PARTS = parse_url($URI);
+		if (!empty($URI_PARTS["user"]))
+			$this->user = $URI_PARTS["user"];
+		if (!empty($URI_PARTS["pass"]))
+			$this->pass = $URI_PARTS["pass"];
+		if (empty($URI_PARTS["query"]))
+			$URI_PARTS["query"] = '';
+		if (empty($URI_PARTS["path"]))
+			$URI_PARTS["path"] = '';
+				
+		switch(strtolower($URI_PARTS["scheme"]))
+		{
+			case "http":
+				$this->host = $URI_PARTS["host"];
+				if(!empty($URI_PARTS["port"]))
+					$this->port = $URI_PARTS["port"];
+				if($this->_connect($fp))
+				{
+					if($this->_isproxy)
+					{
+						// using proxy, send entire URI
+						$this->_httprequest($URI,$fp,$URI,$this->_httpmethod);
+					}
+					else
+					{
+						$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
+						// no proxy, send only the path
+						$this->_httprequest($path, $fp, $URI, $this->_httpmethod);
+					}
+					
+					$this->_disconnect($fp);
+
+					if($this->_redirectaddr)
+					{
+						/* url was redirected, check if we've hit the max depth */
+						if($this->maxredirs > $this->_redirectdepth)
+						{
+							// only follow redirect if it's on this site, or offsiteok is true
+							if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
+							{
+								/* follow the redirect */
+								$this->_redirectdepth++;
+								$this->lastredirectaddr=$this->_redirectaddr;
+								$this->fetch($this->_redirectaddr);
+							}
+						}
+					}
+
+					if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
+					{
+						$frameurls = $this->_frameurls;
+						$this->_frameurls = array();
+						
+						while(list(,$frameurl) = each($frameurls))
+						{
+							if($this->_framedepth < $this->maxframes)
+							{
+								$this->fetch($frameurl);
+								$this->_framedepth++;
+							}
+							else
+								break;
+						}
+					}					
+				}
+				else
+				{
+					return false;
+				}
+				return true;					
+				break;
+			case "https":
+				if(!$this->curl_path)
+					return false;
+				if(function_exists("is_executable"))
+				    if (!is_executable($this->curl_path))
+				        return false;
+				$this->host = $URI_PARTS["host"];
+				if(!empty($URI_PARTS["port"]))
+					$this->port = $URI_PARTS["port"];
+				if($this->_isproxy)
+				{
+					// using proxy, send entire URI
+					$this->_httpsrequest($URI,$URI,$this->_httpmethod);
+				}
+				else
+				{
+					$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
+					// no proxy, send only the path
+					$this->_httpsrequest($path, $URI, $this->_httpmethod);
+				}
+
+				if($this->_redirectaddr)
+				{
+					/* url was redirected, check if we've hit the max depth */
+					if($this->maxredirs > $this->_redirectdepth)
+					{
+						// only follow redirect if it's on this site, or offsiteok is true
+						if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
+						{
+							/* follow the redirect */
+							$this->_redirectdepth++;
+							$this->lastredirectaddr=$this->_redirectaddr;
+							$this->fetch($this->_redirectaddr);
+						}
+					}
+				}
+
+				if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
+				{
+					$frameurls = $this->_frameurls;
+					$this->_frameurls = array();
+
+					while(list(,$frameurl) = each($frameurls))
+					{
+						if($this->_framedepth < $this->maxframes)
+						{
+							$this->fetch($frameurl);
+							$this->_framedepth++;
+						}
+						else
+							break;
+					}
+				}					
+				return true;					
+				break;
+			default:
+				// not a valid protocol
+				$this->error	=	'Invalid protocol "'.$URI_PARTS["scheme"].'"\n';
+				return false;
+				break;
+		}		
+		return true;
+	}
+
+/*======================================================================*\
+	Function:	submit
+	Purpose:	submit an http form
+	Input:		$URI	the location to post the data
+				$formvars	the formvars to use.
+					format: $formvars["var"] = "val";
+				$formfiles  an array of files to submit
+					format: $formfiles["var"] = "/dir/filename.ext";
+	Output:		$this->results	the text output from the post
+\*======================================================================*/
+
+	function submit($URI, $formvars="", $formfiles="")
+	{
+		unset($postdata);
+		
+		$postdata = $this->_prepare_post_body($formvars, $formfiles);
+			
+		$URI_PARTS = parse_url($URI);
+		if (!empty($URI_PARTS["user"]))
+			$this->user = $URI_PARTS["user"];
+		if (!empty($URI_PARTS["pass"]))
+			$this->pass = $URI_PARTS["pass"];
+		if (empty($URI_PARTS["query"]))
+			$URI_PARTS["query"] = '';
+		if (empty($URI_PARTS["path"]))
+			$URI_PARTS["path"] = '';
+
+		switch(strtolower($URI_PARTS["scheme"]))
+		{
+			case "http":
+				$this->host = $URI_PARTS["host"];
+				if(!empty($URI_PARTS["port"]))
+					$this->port = $URI_PARTS["port"];
+				if($this->_connect($fp))
+				{
+					if($this->_isproxy)
+					{
+						// using proxy, send entire URI
+						$this->_httprequest($URI,$fp,$URI,$this->_submit_method,$this->_submit_type,$postdata);
+					}
+					else
+					{
+						$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
+						// no proxy, send only the path
+						$this->_httprequest($path, $fp, $URI, $this->_submit_method, $this->_submit_type, $postdata);
+					}
+					
+					$this->_disconnect($fp);
+
+					if($this->_redirectaddr)
+					{
+						/* url was redirected, check if we've hit the max depth */
+						if($this->maxredirs > $this->_redirectdepth)
+						{						
+							if(!preg_match("|^".$URI_PARTS["scheme"]."://|", $this->_redirectaddr))
+								$this->_redirectaddr = $this->_expandlinks($this->_redirectaddr,$URI_PARTS["scheme"]."://".$URI_PARTS["host"]);						
+							
+							// only follow redirect if it's on this site, or offsiteok is true
+							if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
+							{
+								/* follow the redirect */
+								$this->_redirectdepth++;
+								$this->lastredirectaddr=$this->_redirectaddr;
+								if( strpos( $this->_redirectaddr, "?" ) > 0 )
+									$this->fetch($this->_redirectaddr); // the redirect has changed the request method from post to get
+								else
+									$this->submit($this->_redirectaddr,$formvars, $formfiles);
+							}
+						}
+					}
+
+					if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
+					{
+						$frameurls = $this->_frameurls;
+						$this->_frameurls = array();
+						
+						while(list(,$frameurl) = each($frameurls))
+						{														
+							if($this->_framedepth < $this->maxframes)
+							{
+								$this->fetch($frameurl);
+								$this->_framedepth++;
+							}
+							else
+								break;
+						}
+					}					
+					
+				}
+				else
+				{
+					return false;
+				}
+				return true;					
+				break;
+			case "https":
+				if(!$this->curl_path)
+					return false;
+				if(function_exists("is_executable"))
+				    if (!is_executable($this->curl_path))
+				        return false;
+				$this->host = $URI_PARTS["host"];
+				if(!empty($URI_PARTS["port"]))
+					$this->port = $URI_PARTS["port"];
+				if($this->_isproxy)
+				{
+					// using proxy, send entire URI
+					$this->_httpsrequest($URI, $URI, $this->_submit_method, $this->_submit_type, $postdata);
+				}
+				else
+				{
+					$path = $URI_PARTS["path"].($URI_PARTS["query"] ? "?".$URI_PARTS["query"] : "");
+					// no proxy, send only the path
+					$this->_httpsrequest($path, $URI, $this->_submit_method, $this->_submit_type, $postdata);
+				}
+
+				if($this->_redirectaddr)
+				{
+					/* url was redirected, check if we've hit the max depth */
+					if($this->maxredirs > $this->_redirectdepth)
+					{						
+						if(!preg_match("|^".$URI_PARTS["scheme"]."://|", $this->_redirectaddr))
+							$this->_redirectaddr = $this->_expandlinks($this->_redirectaddr,$URI_PARTS["scheme"]."://".$URI_PARTS["host"]);						
+
+						// only follow redirect if it's on this site, or offsiteok is true
+						if(preg_match("|^http://".preg_quote($this->host)."|i",$this->_redirectaddr) || $this->offsiteok)
+						{
+							/* follow the redirect */
+							$this->_redirectdepth++;
+							$this->lastredirectaddr=$this->_redirectaddr;
+							if( strpos( $this->_redirectaddr, "?" ) > 0 )
+								$this->fetch($this->_redirectaddr); // the redirect has changed the request method from post to get
+							else
+								$this->submit($this->_redirectaddr,$formvars, $formfiles);
+						}
+					}
+				}
+
+				if($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)
+				{
+					$frameurls = $this->_frameurls;
+					$this->_frameurls = array();
+
+					while(list(,$frameurl) = each($frameurls))
+					{														
+						if($this->_framedepth < $this->maxframes)
+						{
+							$this->fetch($frameurl);
+							$this->_framedepth++;
+						}
+						else
+							break;
+					}
+				}					
+				return true;					
+				break;
+				
+			default:
+				// not a valid protocol
+				$this->error	=	'Invalid protocol "'.$URI_PARTS["scheme"].'"\n';
+				return false;
+				break;
+		}		
+		return true;
+	}
+
+/*======================================================================*\
+	Function:	fetchlinks
+	Purpose:	fetch the links from a web page
+	Input:		$URI	where you are fetching from
+	Output:		$this->results	an array of the URLs
+\*======================================================================*/
+
+	function fetchlinks($URI)
+	{
+		if ($this->fetch($URI))
+		{			
+			if($this->lastredirectaddr)
+				$URI = $this->lastredirectaddr;
+			if(is_array($this->results))
+			{
+				for($x=0;$x<count($this->results);$x++)
+					$this->results[$x] = $this->_striplinks($this->results[$x]);
+			}
+			else
+				$this->results = $this->_striplinks($this->results);
+
+			if($this->expandlinks)
+				$this->results = $this->_expandlinks($this->results, $URI);
+			return true;
+		}
+		else
+			return false;
+	}
+
+/*======================================================================*\
+	Function:	fetchform
+	Purpose:	fetch the form elements from a web page
+	Input:		$URI	where you are fetching from
+	Output:		$this->results	the resulting html form
+\*======================================================================*/
+
+	function fetchform($URI)
+	{
+		
+		if ($this->fetch($URI))
+		{			
+
+			if(is_array($this->results))
+			{
+				for($x=0;$x<count($this->results);$x++)
+					$this->results[$x] = $this->_stripform($this->results[$x]);
+			}
+			else
+				$this->results = $this->_stripform($this->results);
+			
+			return true;
+		}
+		else
+			return false;
+	}
+	
+	
+/*======================================================================*\
+	Function:	fetchtext
+	Purpose:	fetch the text from a web page, stripping the links
+	Input:		$URI	where you are fetching from
+	Output:		$this->results	the text from the web page
+\*======================================================================*/
+
+	function fetchtext($URI)
+	{
+		if($this->fetch($URI))
+		{			
+			if(is_array($this->results))
+			{
+				for($x=0;$x<count($this->results);$x++)
+					$this->results[$x] = $this->_striptext($this->results[$x]);
+			}
+			else
+				$this->results = $this->_striptext($this->results);
+			return true;
+		}
+		else
+			return false;
+	}
+
+/*======================================================================*\
+	Function:	submitlinks
+	Purpose:	grab links from a form submission
+	Input:		$URI	where you are submitting from
+	Output:		$this->results	an array of the links from the post
+\*======================================================================*/
+
+	function submitlinks($URI, $formvars="", $formfiles="")
+	{
+		if($this->submit($URI,$formvars, $formfiles))
+		{			
+			if($this->lastredirectaddr)
+				$URI = $this->lastredirectaddr;
+			if(is_array($this->results))
+			{
+				for($x=0;$x<count($this->results);$x++)
+				{
+					$this->results[$x] = $this->_striplinks($this->results[$x]);
+					if($this->expandlinks)
+						$this->results[$x] = $this->_expandlinks($this->results[$x],$URI);
+				}
+			}
+			else
+			{
+				$this->results = $this->_striplinks($this->results);
+				if($this->expandlinks)
+					$this->results = $this->_expandlinks($this->results,$URI);
+			}
+			return true;
+		}
+		else
+			return false;
+	}
+
+/*======================================================================*\
+	Function:	submittext
+	Purpose:	grab text from a form submission
+	Input:		$URI	where you are submitting from
+	Output:		$this->results	the text from the web page
+\*======================================================================*/
+
+	function submittext($URI, $formvars = "", $formfiles = "")
+	{
+		if($this->submit($URI,$formvars, $formfiles))
+		{			
+			if($this->lastredirectaddr)
+				$URI = $this->lastredirectaddr;
+			if(is_array($this->results))
+			{
+				for($x=0;$x<count($this->results);$x++)
+				{
+					$this->results[$x] = $this->_striptext($this->results[$x]);
+					if($this->expandlinks)
+						$this->results[$x] = $this->_expandlinks($this->results[$x],$URI);
+				}
+			}
+			else
+			{
+				$this->results = $this->_striptext($this->results);
+				if($this->expandlinks)
+					$this->results = $this->_expandlinks($this->results,$URI);
+			}
+			return true;
+		}
+		else
+			return false;
+	}
+
+	
+
+/*======================================================================*\
+	Function:	set_submit_multipart
+	Purpose:	Set the form submission content type to
+				multipart/form-data
+\*======================================================================*/
+	function set_submit_multipart()
+	{
+		$this->_submit_type = "multipart/form-data";
+	}
+
+	
+/*======================================================================*\
+	Function:	set_submit_normal
+	Purpose:	Set the form submission content type to
+				application/x-www-form-urlencoded
+\*======================================================================*/
+	function set_submit_normal()
+	{
+		$this->_submit_type = "application/x-www-form-urlencoded";
+	}
+
+	
+	
+
+/*======================================================================*\
+	Private functions
+\*======================================================================*/
+	
+	
+/*======================================================================*\
+	Function:	_striplinks
+	Purpose:	strip the hyperlinks from an html document
+	Input:		$document	document to strip.
+	Output:		$match		an array of the links
+\*======================================================================*/
+
+	function _striplinks($document)
+	{	
+		preg_match_all("'<\s*a\s.*?href\s*=\s*			# find <a href=
+						([\"\'])?					# find single or double quote
+						(?(1) (.*?)\\1 | ([^\s\>]+))		# if quote found, match up to next matching
+													# quote, otherwise match up to next space
+						'isx",$document,$links);
+						
+
+		// catenate the non-empty matches from the conditional subpattern
+
+		while(list($key,$val) = each($links[2]))
+		{
+			if(!empty($val))
+				$match[] = $val;
+		}				
+		
+		while(list($key,$val) = each($links[3]))
+		{
+			if(!empty($val))
+				$match[] = $val;
+		}		
+		
+		// return the links
+		return $match;
+	}
+
+/*======================================================================*\
+	Function:	_stripform
+	Purpose:	strip the form elements from an html document
+	Input:		$document	document to strip.
+	Output:		$match		an array of the links
+\*======================================================================*/
+
+	function _stripform($document)
+	{	
+		preg_match_all("'<\/?(FORM|INPUT|SELECT|TEXTAREA|(OPTION))[^<>]*>(?(2)(.*(?=<\/?(option|select)[^<>]*>[\r\n]*)|(?=[\r\n]*))|(?=[\r\n]*))'Usi",$document,$elements);
+		
+		// catenate the matches
+		$match = implode("\r\n",$elements[0]);
+				
+		// return the links
+		return $match;
+	}
+
+	
+	
+/*======================================================================*\
+	Function:	_striptext
+	Purpose:	strip the text from an html document
+	Input:		$document	document to strip.
+	Output:		$text		the resulting text
+\*======================================================================*/
+
+	function _striptext($document)
+	{
+		
+		// I didn't use preg eval (//e) since that is only available in PHP 4.0.
+		// so, list your entities one by one here. I included some of the
+		// more common ones.
+								
+		$search = array("'<script[^>]*?>.*?</script>'si",	// strip out javascript
+						"'<[\/\!]*?[^<>]*?>'si",			// strip out html tags
+						"'([\r\n])[\s]+'",					// strip out white space
+						"'&(quot|#34|#034|#x22);'i",		// replace html entities
+						"'&(amp|#38|#038|#x26);'i",			// added hexadecimal values
+						"'&(lt|#60|#060|#x3c);'i",
+						"'&(gt|#62|#062|#x3e);'i",
+						"'&(nbsp|#160|#xa0);'i",
+						"'&(iexcl|#161);'i",
+						"'&(cent|#162);'i",
+						"'&(pound|#163);'i",
+						"'&(copy|#169);'i",
+						"'&(reg|#174);'i",
+						"'&(deg|#176);'i",
+						"'&(#39|#039|#x27);'",
+						"'&(euro|#8364);'i",				// europe
+						"'&a(uml|UML);'",					// german
+						"'&o(uml|UML);'",
+						"'&u(uml|UML);'",
+						"'&A(uml|UML);'",
+						"'&O(uml|UML);'",
+						"'&U(uml|UML);'",
+						"'&szlig;'i",
+						);
+		$replace = array(	"",
+							"",
+							"\\1",
+							"\"",
+							"&",
+							"<",
+							">",
+							" ",
+							chr(161),
+							chr(162),
+							chr(163),
+							chr(169),
+							chr(174),
+							chr(176),
+							chr(39),
+							chr(128),
+							"?",
+							"?",
+							"?",
+							"?",
+							"?",
+							"?",
+							"?",
+						);
+					
+		$text = preg_replace($search,$replace,$document);
+								
+		return $text;
+	}
+
+/*======================================================================*\
+	Function:	_expandlinks
+	Purpose:	expand each link into a fully qualified URL
+	Input:		$links			the links to qualify
+				$URI			the full URI to get the base from
+	Output:		$expandedLinks	the expanded links
+\*======================================================================*/
+
+	function _expandlinks($links,$URI)
+	{
+		
+		preg_match("/^[^\?]+/",$URI,$match);
+
+		$match = preg_replace("|/[^\/\.]+\.[^\/\.]+$|","",$match[0]);
+		$match = preg_replace("|/$|","",$match);
+		$match_part = parse_url($match);
+		$match_root =
+		$match_part["scheme"]."://".$match_part["host"];
+				
+		$search = array( 	"|^http://".preg_quote($this->host)."|i",
+							"|^(\/)|i",
+							"|^(?!http://)(?!mailto:)|i",
+							"|/\./|",
+							"|/[^\/]+/\.\./|"
+						);
+						
+		$replace = array(	"",
+							$match_root."/",
+							$match."/",
+							"/",
+							"/"
+						);			
+				
+		$expandedLinks = preg_replace($search,$replace,$links);
+
+		return $expandedLinks;
+	}
+
+/*======================================================================*\
+	Function:	_httprequest
+	Purpose:	go get the http data from the server
+	Input:		$url		the url to fetch
+				$fp			the current open file pointer
+				$URI		the full URI
+				$body		body contents to send if any (POST)
+	Output:		
+\*======================================================================*/
+	
+	function _httprequest($url,$fp,$URI,$http_method,$content_type="",$body="")
+	{
+		$cookie_headers = '';
+		if($this->passcookies && $this->_redirectaddr)
+			$this->setcookies();
+			
+		$URI_PARTS = parse_url($URI);
+		if(empty($url))
+			$url = "/";
+		$headers = $http_method." ".$url." ".$this->_httpversion."\r\n";		
+		if(!empty($this->agent))
+			$headers .= "User-Agent: ".$this->agent."\r\n";
+		if(!empty($this->host) && !isset($this->rawheaders['Host'])) {
+			$headers .= "Host: ".$this->host;
+			if(!empty($this->port))
+				$headers .= ":".$this->port;
+			$headers .= "\r\n";
+		}
+		if(!empty($this->accept))
+			$headers .= "Accept: ".$this->accept."\r\n";
+		if(!empty($this->referer))
+			$headers .= "Referer: ".$this->referer."\r\n";
+		if(!empty($this->cookies))
+		{			
+			if(!is_array($this->cookies))
+				$this->cookies = (array)$this->cookies;
+	
+			reset($this->cookies);
+			if ( count($this->cookies) > 0 ) {
+				$cookie_headers .= 'Cookie: ';
+				foreach ( $this->cookies as $cookieKey => $cookieVal ) {
+				$cookie_headers .= $cookieKey."=".urlencode($cookieVal)."; ";
+				}
+				$headers .= substr($cookie_headers,0,-2) . "\r\n";
+			} 
+		}
+		if(!empty($this->rawheaders))
+		{
+			if(!is_array($this->rawheaders))
+				$this->rawheaders = (array)$this->rawheaders;
+			while(list($headerKey,$headerVal) = each($this->rawheaders))
+				$headers .= $headerKey.": ".$headerVal."\r\n";
+		}
+		if(!empty($content_type)) {
+			$headers .= "Content-type: $content_type";
+			if ($content_type == "multipart/form-data")
+				$headers .= "; boundary=".$this->_mime_boundary;
+			$headers .= "\r\n";
+		}
+		if(!empty($body))	
+			$headers .= "Content-length: ".strlen($body)."\r\n";
+		if(!empty($this->user) || !empty($this->pass))	
+			$headers .= "Authorization: Basic ".base64_encode($this->user.":".$this->pass)."\r\n";
+		
+		//add proxy auth headers
+		if(!empty($this->proxy_user))	
+			$headers .= 'Proxy-Authorization: ' . 'Basic ' . base64_encode($this->proxy_user . ':' . $this->proxy_pass)."\r\n";
+
+
+		$headers .= "\r\n";
+		
+		// set the read timeout if needed
+		if ($this->read_timeout > 0)
+			socket_set_timeout($fp, $this->read_timeout);
+		$this->timed_out = false;
+		
+		fwrite($fp,$headers.$body,strlen($headers.$body));
+		
+		$this->_redirectaddr = false;
+		unset($this->headers);
+						
+		while($currentHeader = fgets($fp,$this->_maxlinelen))
+		{
+			if ($this->read_timeout > 0 && $this->_check_timeout($fp))
+			{
+				$this->status=-100;
+				return false;
+			}
+				
+			if($currentHeader == "\r\n")
+				break;
+						
+			// if a header begins with Location: or URI:, set the redirect
+			if(preg_match("/^(Location:|URI:)/i",$currentHeader))
+			{
+				// get URL portion of the redirect
+				preg_match("/^(Location:|URI:)[ ]+(.*)/i",chop($currentHeader),$matches);
+				// look for :// in the Location header to see if hostname is included
+				if(!preg_match("|\:\/\/|",$matches[2]))
+				{
+					// no host in the path, so prepend
+					$this->_redirectaddr = $URI_PARTS["scheme"]."://".$this->host.":".$this->port;
+					// eliminate double slash
+					if(!preg_match("|^/|",$matches[2]))
+							$this->_redirectaddr .= "/".$matches[2];
+					else
+							$this->_redirectaddr .= $matches[2];
+				}
+				else
+					$this->_redirectaddr = $matches[2];
+			}
+		
+			if(preg_match("|^HTTP/|",$currentHeader))
+			{
+                if(preg_match("|^HTTP/[^\s]*\s(.*?)\s|",$currentHeader, $status))
+				{
+					$this->status= $status[1];
+                }				
+				$this->response_code = $currentHeader;
+			}
+				
+			$this->headers[] = $currentHeader;
+		}
+
+		$results = '';
+		do {
+    		$_data = fread($fp, $this->maxlength);
+    		if (strlen($_data) == 0) {
+        		break;
+    		}
+    		$results .= $_data;
+		} while(true);
+
+		if ($this->read_timeout > 0 && $this->_check_timeout($fp))
+		{
+			$this->status=-100;
+			return false;
+		}
+		
+		// check if there is a a redirect meta tag
+		
+		if(preg_match("'<meta[\s]*http-equiv[^>]*?content[\s]*=[\s]*[\"\']?\d+;[\s]*URL[\s]*=[\s]*([^\"\']*?)[\"\']?>'i",$results,$match))
+
+		{
+			$this->_redirectaddr = $this->_expandlinks($match[1],$URI);	
+		}
+
+		// have we hit our frame depth and is there frame src to fetch?
+		if(($this->_framedepth < $this->maxframes) && preg_match_all("'<frame\s+.*src[\s]*=[\'\"]?([^\'\"\>]+)'i",$results,$match))
+		{
+			$this->results[] = $results;
+			for($x=0; $x<count($match[1]); $x++)
+				$this->_frameurls[] = $this->_expandlinks($match[1][$x],$URI_PARTS["scheme"]."://".$this->host);
+		}
+		// have we already fetched framed content?
+		elseif(is_array($this->results))
+			$this->results[] = $results;
+		// no framed content
+		else
+			$this->results = $results;
+		
+		return true;
+	}
+
+/*======================================================================*\
+	Function:	_httpsrequest
+	Purpose:	go get the https data from the server using curl
+	Input:		$url		the url to fetch
+				$URI		the full URI
+				$body		body contents to send if any (POST)
+	Output:		
+\*======================================================================*/
+	
+	function _httpsrequest($url,$URI,$http_method,$content_type="",$body="")
+	{
+		if($this->passcookies && $this->_redirectaddr)
+			$this->setcookies();
+
+		$headers = array();		
+					
+		$URI_PARTS = parse_url($URI);
+		if(empty($url))
+			$url = "/";
+		// GET ... header not needed for curl
+		//$headers[] = $http_method." ".$url." ".$this->_httpversion;		
+		if(!empty($this->agent))
+			$headers[] = "User-Agent: ".$this->agent;
+		if(!empty($this->host))
+			if(!empty($this->port))
+				$headers[] = "Host: ".$this->host.":".$this->port;
+			else
+				$headers[] = "Host: ".$this->host;
+		if(!empty($this->accept))
+			$headers[] = "Accept: ".$this->accept;
+		if(!empty($this->referer))
+			$headers[] = "Referer: ".$this->referer;
+		if(!empty($this->cookies))
+		{			
+			if(!is_array($this->cookies))
+				$this->cookies = (array)$this->cookies;
+	
+			reset($this->cookies);
+			if ( count($this->cookies) > 0 ) {
+				$cookie_str = 'Cookie: ';
+				foreach ( $this->cookies as $cookieKey => $cookieVal ) {
+				$cookie_str .= $cookieKey."=".urlencode($cookieVal)."; ";
+				}
+				$headers[] = substr($cookie_str,0,-2);
+			}
+		}
+		if(!empty($this->rawheaders))
+		{
+			if(!is_array($this->rawheaders))
+				$this->rawheaders = (array)$this->rawheaders;
+			while(list($headerKey,$headerVal) = each($this->rawheaders))
+				$headers[] = $headerKey.": ".$headerVal;
+		}
+		if(!empty($content_type)) {
+			if ($content_type == "multipart/form-data")
+				$headers[] = "Content-type: $content_type; boundary=".$this->_mime_boundary;
+			else
+				$headers[] = "Content-type: $content_type";
+		}
+		if(!empty($body))	
+			$headers[] = "Content-length: ".strlen($body);
+		if(!empty($this->user) || !empty($this->pass))	
+			$headers[] = "Authorization: BASIC ".base64_encode($this->user.":".$this->pass);
+			
+		for($curr_header = 0; $curr_header < count($headers); $curr_header++) {
+			$safer_header = strtr( $headers[$curr_header], "\"", " " );
+			$cmdline_params .= " -H \"".$safer_header."\"";
+		}
+		
+		if(!empty($body))
+			$cmdline_params .= " -d \"$body\"";
+		
+		if($this->read_timeout > 0)
+			$cmdline_params .= " -m ".$this->read_timeout;
+		
+		$headerfile = tempnam($temp_dir, "sno");
+
+		$safer_URI = strtr( $URI, "\"", " " ); // strip quotes from the URI to avoid shell access
+		exec($this->curl_path." -D \"$headerfile\"".$cmdline_params." \"".$safer_URI."\"",$results,$return);
+		
+		if($return)
+		{
+			$this->error = "Error: cURL could not retrieve the document, error $return.";
+			return false;
+		}
+			
+			
+		$results = implode("\r\n",$results);
+		
+		$result_headers = file("$headerfile");
+						
+		$this->_redirectaddr = false;
+		unset($this->headers);
+						
+		for($currentHeader = 0; $currentHeader < count($result_headers); $currentHeader++)
+		{
+			
+			// if a header begins with Location: or URI:, set the redirect
+			if(preg_match("/^(Location: |URI: )/i",$result_headers[$currentHeader]))
+			{
+				// get URL portion of the redirect
+				preg_match("/^(Location: |URI:)\s+(.*)/",chop($result_headers[$currentHeader]),$matches);
+				// look for :// in the Location header to see if hostname is included
+				if(!preg_match("|\:\/\/|",$matches[2]))
+				{
+					// no host in the path, so prepend
+					$this->_redirectaddr = $URI_PARTS["scheme"]."://".$this->host.":".$this->port;
+					// eliminate double slash
+					if(!preg_match("|^/|",$matches[2]))
+							$this->_redirectaddr .= "/".$matches[2];
+					else
+							$this->_redirectaddr .= $matches[2];
+				}
+				else
+					$this->_redirectaddr = $matches[2];
+			}
+		
+			if(preg_match("|^HTTP/|",$result_headers[$currentHeader]))
+				$this->response_code = $result_headers[$currentHeader];
+
+			$this->headers[] = $result_headers[$currentHeader];
+		}
+
+		// check if there is a a redirect meta tag
+		
+		if(preg_match("'<meta[\s]*http-equiv[^>]*?content[\s]*=[\s]*[\"\']?\d+;[\s]*URL[\s]*=[\s]*([^\"\']*?)[\"\']?>'i",$results,$match))
+		{
+			$this->_redirectaddr = $this->_expandlinks($match[1],$URI);	
+		}
+
+		// have we hit our frame depth and is there frame src to fetch?
+		if(($this->_framedepth < $this->maxframes) && preg_match_all("'<frame\s+.*src[\s]*=[\'\"]?([^\'\"\>]+)'i",$results,$match))
+		{
+			$this->results[] = $results;
+			for($x=0; $x<count($match[1]); $x++)
+				$this->_frameurls[] = $this->_expandlinks($match[1][$x],$URI_PARTS["scheme"]."://".$this->host);
+		}
+		// have we already fetched framed content?
+		elseif(is_array($this->results))
+			$this->results[] = $results;
+		// no framed content
+		else
+			$this->results = $results;
+
+		unlink("$headerfile");
+		
+		return true;
+	}
+
+/*======================================================================*\
+	Function:	setcookies()
+	Purpose:	set cookies for a redirection
+\*======================================================================*/
+	
+	function setcookies()
+	{
+		for($x=0; $x<count($this->headers); $x++)
+		{
+		if(preg_match('/^set-cookie:[\s]+([^=]+)=([^;]+)/i', $this->headers[$x],$match))
+			$this->cookies[$match[1]] = urldecode($match[2]);
+		}
+	}
+
+	
+/*======================================================================*\
+	Function:	_check_timeout
+	Purpose:	checks whether timeout has occurred
+	Input:		$fp	file pointer
+\*======================================================================*/
+
+	function _check_timeout($fp)
+	{
+		if ($this->read_timeout > 0) {
+			$fp_status = socket_get_status($fp);
+			if ($fp_status["timed_out"]) {
+				$this->timed_out = true;
+				return true;
+			}
+		}
+		return false;
+	}
+
+/*======================================================================*\
+	Function:	_connect
+	Purpose:	make a socket connection
+	Input:		$fp	file pointer
+\*======================================================================*/
+	
+	function _connect(&$fp)
+	{
+		if(!empty($this->proxy_host) && !empty($this->proxy_port))
+			{
+				$this->_isproxy = true;
+				
+				$host = $this->proxy_host;
+				$port = $this->proxy_port;
+			}
+		else
+		{
+			$host = $this->host;
+			$port = $this->port;
+		}
+	
+		$this->status = 0;
+		
+		if($fp = fsockopen(
+					$host,
+					$port,
+					$errno,
+					$errstr,
+					$this->_fp_timeout
+					))
+		{
+			// socket connection succeeded
+
+			return true;
+		}
+		else
+		{
+			// socket connection failed
+			$this->status = $errno;
+			switch($errno)
+			{
+				case -3:
+					$this->error="socket creation failed (-3)";
+				case -4:
+					$this->error="dns lookup failure (-4)";
+				case -5:
+					$this->error="connection refused or timed out (-5)";
+				default:
+					$this->error="connection failed (".$errno.")";
+			}
+			return false;
+		}
+	}
+/*======================================================================*\
+	Function:	_disconnect
+	Purpose:	disconnect a socket connection
+	Input:		$fp	file pointer
+\*======================================================================*/
+	
+	function _disconnect($fp)
+	{
+		return(fclose($fp));
+	}
+
+	
+/*======================================================================*\
+	Function:	_prepare_post_body
+	Purpose:	Prepare post body according to encoding type
+	Input:		$formvars  - form variables
+				$formfiles - form upload files
+	Output:		post body
+\*======================================================================*/
+	
+	function _prepare_post_body($formvars, $formfiles)
+	{
+		settype($formvars, "array");
+		settype($formfiles, "array");
+		$postdata = '';
+
+		if (count($formvars) == 0 && count($formfiles) == 0)
+			return;
+		
+		switch ($this->_submit_type) {
+			case "application/x-www-form-urlencoded":
+				reset($formvars);
+				while(list($key,$val) = each($formvars)) {
+					if (is_array($val) || is_object($val)) {
+						while (list($cur_key, $cur_val) = each($val)) {
+							$postdata .= urlencode($key)."[]=".urlencode($cur_val)."&";
+						}
+					} else
+						$postdata .= urlencode($key)."=".urlencode($val)."&";
+				}
+				break;
+
+			case "multipart/form-data":
+				$this->_mime_boundary = "Snoopy".md5(uniqid(microtime()));
+				
+				reset($formvars);
+				while(list($key,$val) = each($formvars)) {
+					if (is_array($val) || is_object($val)) {
+						while (list($cur_key, $cur_val) = each($val)) {
+							$postdata .= "--".$this->_mime_boundary."\r\n";
+							$postdata .= "Content-Disposition: form-data; name=\"$key\[\]\"\r\n\r\n";
+							$postdata .= "$cur_val\r\n";
+						}
+					} else {
+						$postdata .= "--".$this->_mime_boundary."\r\n";
+						$postdata .= "Content-Disposition: form-data; name=\"$key\"\r\n\r\n";
+						$postdata .= "$val\r\n";
+					}
+				}
+				
+				reset($formfiles);
+				while (list($field_name, $file_names) = each($formfiles)) {
+					settype($file_names, "array");
+					while (list(, $file_name) = each($file_names)) {
+						if (!is_readable($file_name)) continue;
+
+						$fp = fopen($file_name, "r");
+						$file_content = fread($fp, filesize($file_name));
+						fclose($fp);
+						$base_name = basename($file_name);
+
+						$postdata .= "--".$this->_mime_boundary."\r\n";
+						$postdata .= "Content-Disposition: form-data; name=\"$field_name\"; filename=\"$base_name\"\r\n\r\n";
+						$postdata .= "$file_content\r\n";
+					}
+				}
+				$postdata .= "--".$this->_mime_boundary."--\r\n";
+				break;
+		}
+
+		return $postdata;
+	}
+}
+
+?>

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/include/version.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/include/version.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/include/version.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -1,4 +1,4 @@
 <?php
 // $Id$
-define("XOOPS_VERSION","XOOPS 2.0.13.2");
+define( "XOOPS_VERSION", "XOOPS 2.3.0-dev" );
 ?>
\ No newline at end of file

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php	2005-11-20 04:21:59 UTC (rev 14)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php	2005-11-20 04:41:49 UTC (rev 15)
@@ -28,6 +28,11 @@
 if ( !defined("XOOPS_MAINFILE_INCLUDED") ) {
 	define("XOOPS_MAINFILE_INCLUDED",1);
 
+	// Physical path to your XOOPS directory
+	// Physical path to your main XOOPS directory WITHOUT trailing slash
+	// Example: define('XOOPS_ROOT_PATH', '/path/to/xoops/directory');
+	define('XOOPS_ROOT_PATH', '');
+
 	// XOOPS Physical Path
 	// Physical path to your main XOOPS directory WITHOUT trailing slash
 	// Example: define('XOOPS_ROOT_PATH', '/path/to/xoops/directory');



From skalpa at berlios.de  Mon Nov 21 09:27:21 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Mon, 21 Nov 2005 09:27:21 +0100
Subject: [Xoops4-svn] r16 - in XoopsCore/branches/2.3.x/2.3-main: . XOOPS XOOPS-data XOOPS-data/Application Support XOOPS-data/Caches htdocs htdocs/include upgrade
Message-ID: <200511210827.jAL8RLQs010570@sheep.berlios.de>

Author: skalpa
Date: 2005-11-21 09:27:16 +0100 (Mon, 21 Nov 2005)
New Revision: 16

Added:
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/net_php_Smarty/
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Caches/
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Caches/net_php_Smarty/
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/
   XoopsCore/branches/2.3.x/2.3-main/upgrade/
   XoopsCore/branches/2.3.x/2.3-main/upgrade/2.0.x-to-2.3.0/
Modified:
   XoopsCore/branches/2.3.x/2.3-main/htdocs/include/common.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php
Log:
Committing preliminary changes for this branch.
Added to mainfile.dist.php:
XOOPS_PATH (Library folder)
XOOPS_VAR_PATH (Writable data folder)
You need to manually change those 2 new constants after installation, and make ALL the folders inside XOOPS_VAR_PATH writable.

common.php has also been updated so compiled templates are written in XOOPS-data/Application Support/net_php_Smarty/

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/include/common.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/include/common.php	2005-11-20 04:41:49 UTC (rev 15)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/include/common.php	2005-11-21 08:27:16 UTC (rev 16)
@@ -54,11 +54,14 @@
     define("XOOPS_MATCH_END",1);
     define("XOOPS_MATCH_EQUAL",2);
     define("XOOPS_MATCH_CONTAIN",3);
-    define("SMARTY_DIR", XOOPS_ROOT_PATH."/class/smarty/");
-    define("XOOPS_CACHE_PATH", XOOPS_ROOT_PATH."/cache");
+
     define("XOOPS_UPLOAD_PATH", XOOPS_ROOT_PATH."/uploads");
     define("XOOPS_THEME_PATH", XOOPS_ROOT_PATH."/themes");
-    define("XOOPS_COMPILE_PATH", XOOPS_ROOT_PATH."/templates_c");
+
+    define( "SMARTY_DIR", XOOPS_ROOT_PATH . "/class/smarty/" );
+    define( "XOOPS_CACHE_PATH", XOOPS_VAR_PATH . "/Caches" );
+    define( "XOOPS_COMPILE_PATH", XOOPS_VAR_PATH . "/Application Support/net_php_Smarty" );
+
     define("XOOPS_THEME_URL", XOOPS_URL."/themes");
     define("XOOPS_UPLOAD_URL", XOOPS_URL."/uploads");
     set_magic_quotes_runtime(0);

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php	2005-11-20 04:41:49 UTC (rev 15)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php	2005-11-21 08:27:16 UTC (rev 16)
@@ -28,14 +28,13 @@
 if ( !defined("XOOPS_MAINFILE_INCLUDED") ) {
 	define("XOOPS_MAINFILE_INCLUDED",1);
 
-	// Physical path to your XOOPS directory
-	// Physical path to your main XOOPS directory WITHOUT trailing slash
-	// Example: define('XOOPS_ROOT_PATH', '/path/to/xoops/directory');
-	define('XOOPS_ROOT_PATH', '');
+	// Physical path to the XOOPS library directory WITHOUT trailing slash
+	define('XOOPS_PATH', '');
 
-	// XOOPS Physical Path
-	// Physical path to your main XOOPS directory WITHOUT trailing slash
-	// Example: define('XOOPS_ROOT_PATH', '/path/to/xoops/directory');
+	// Physical path to the XOOPS datafiles (writable) directory WITHOUT trailing slash
+	define('XOOPS_VAR_PATH', '');
+
+	// Physical path to the XOOPS documents (served) directory WITHOUT trailing slash
 	define('XOOPS_ROOT_PATH', '');
 
 	// XOOPS Virtual Path (URL)
@@ -43,27 +42,6 @@
 	// Example: define('XOOPS_URL', 'http://url_to_xoops_directory');
 	define('XOOPS_URL', 'http://');
 
-	define('XOOPS_CHECK_PATH', 0);
-	// Protect against external scripts execution if safe mode is not enabled
-	if ( XOOPS_CHECK_PATH && !@ini_get('safe_mode') ) {
-		if ( function_exists('debug_backtrace') ) {
-			$xoopsScriptPath = debug_backtrace();
-			if ( !count($xoopsScriptPath) ) {
-			 	die("XOOPS path check: this file cannot be requested directly");
-			}
-			$xoopsScriptPath = $xoopsScriptPath[0]['file'];
-		} else {
-			$xoopsScriptPath = isset($_SERVER['PATH_TRANSLATED']) ? $_SERVER['PATH_TRANSLATED'] :  $_SERVER['SCRIPT_FILENAME'];
-		}
-		if ( DIRECTORY_SEPARATOR != '/' ) {
-			// IIS6 may double the \ chars
-			$xoopsScriptPath = str_replace( strpos( $xoopsScriptPath, '\\\\', 2 ) ? '\\\\' : DIRECTORY_SEPARATOR, '/', $xoopsScriptPath);
-		}
-		if ( strcasecmp( substr($xoopsScriptPath, 0, strlen(XOOPS_ROOT_PATH)), str_replace( DIRECTORY_SEPARATOR, '/', XOOPS_ROOT_PATH)) ) {
-		 	exit("XOOPS path check: Script is not inside XOOPS_ROOT_PATH and cannot run.");
-		}
-	}
-
 	// Database
 	// Choose the database to be used
 	define('XOOPS_DB_TYPE', 'mysql');



From skalpa at berlios.de  Mon Nov 21 10:19:41 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Mon, 21 Nov 2005 10:19:41 +0100
Subject: [Xoops4-svn] r17 - XoopsCore/branches/tasks
Message-ID: <200511210919.jAL9JfMj019086@sheep.berlios.de>

Author: skalpa
Date: 2005-11-21 10:19:28 +0100 (Mon, 21 Nov 2005)
New Revision: 17

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/
Log:
New work branch for the theme/tplsets integration task.

http://sourceforge.net/pm/task.php?func=detailtask&project_task_id=121476&group_id=41586&group_project_id=45410

Copied: XoopsCore/branches/tasks/121476-tplset-remove (from rev 16, XoopsCore/branches/2.3.x/2.3-main)



From skalpa at berlios.de  Thu Nov 24 12:21:55 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Thu, 24 Nov 2005 12:21:55 +0100
Subject: [Xoops4-svn] r18 - XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support
Message-ID: <200511241121.jAOBLtRe006768@sheep.berlios.de>

Author: skalpa
Date: 2005-11-24 12:21:55 +0100 (Thu, 24 Nov 2005)
New Revision: 18

Added:
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/xoops_template_Smarty/
Removed:
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/net_php_Smarty/
Log:
Sending the 1st draft of the Exxos / Kernel layers to the main branch so it can be used right after for individual tasks.

The actual Exxos layer is registry-based: it uses a "components registry" to know where the classes are located in the filesystem. This way of doing has a few little inconvenients, but I think they are acceptable.
IMO this does work well enough to be used, so now real "features" can be done... I'll be keeping the more "revolutionnary" patterns that only harcore coders can really appreciate for a next version.

Special note about this commit: old-style error handling has been disabled... something will come back later (but it's a work branch, so no problem).

Copied: XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/xoops_template_Smarty (from rev 16, XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/net_php_Smarty)



From skalpa at berlios.de  Thu Nov 24 12:23:03 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Thu, 24 Nov 2005 12:23:03 +0100
Subject: [Xoops4-svn] r19 - XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Caches
Message-ID: <200511241123.jAOBN36E006925@sheep.berlios.de>

Author: skalpa
Date: 2005-11-24 12:23:02 +0100 (Thu, 24 Nov 2005)
New Revision: 19

Added:
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Caches/xoops_template_Smarty/
Removed:
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Caches/net_php_Smarty/
Log:
Sending the 1st draft of the Exxos / Kernel layers to the main branch so it can be used right after for individual tasks.

The actual Exxos layer is registry-based: it uses a "components registry" to know where the classes are located in the file system. This way of doing has a few little inconvenients, but I think they are acceptable.
IMO this does work well enough to be used, so now real "features" can be done... I'll be keeping the more "revolutionary" patterns that only hardcore coders can really appreciate for a next version.

Special note about this commit: old-style error handling has been disabled... something will come back later (but it's a work branch, so no problem).

Copied: XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Caches/xoops_template_Smarty (from rev 16, XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Caches/net_php_Smarty)



From skalpa at berlios.de  Thu Nov 24 12:23:43 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Thu, 24 Nov 2005 12:23:43 +0100
Subject: [Xoops4-svn] r20 - in XoopsCore/branches/2.3.x/2.3-main: XOOPS/Boot XOOPS/Frameworks XOOPS/Frameworks/XoopsCore XOOPS/Frameworks/XoopsCore/Foundation XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/scripts htdocs htdocs/include
Message-ID: <200511241123.jAOBNhlA006995@sheep.berlios.de>

Author: skalpa
Date: 2005-11-24 12:23:41 +0100 (Thu, 24 Nov 2005)
New Revision: 20

Added:
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/exxos.php
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/hosts.php
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/kernel.php
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/rc.php
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/xoops2.php
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/scripts/
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/scripts/rebuild_registry.php
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/user.php
   XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/xo-info.php
Modified:
   XoopsCore/branches/2.3.x/2.3-main/htdocs/include/common.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php
Log:
Sending the 1st draft of the Exxos / Kernel layers to the main branch so it can be used right after for individual tasks.

The actual Exxos layer is registry-based: it uses a "components registry" to know where the classes are located in the file system. This way of doing has a few little inconvenients, but I think they are acceptable.
IMO this does work well enough to be used, so now real "features" can be done... I'll be keeping the more "revolutionary" patterns that only hardcore coders can really appreciate for a next version.

Special note about this commit: old-style error handling has been disabled... something will come back later (but it's a work branch, so no problem).

Added: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/exxos.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/exxos.php	2005-11-24 11:23:02 UTC (rev 19)
+++ XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/exxos.php	2005-11-24 11:23:41 UTC (rev 20)
@@ -0,0 +1,185 @@
+<?php
+/**
+* XOS class declaration
+*
+* See the enclosed file LICENSE for licensing information.
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+*
+* @copyright    The XOOPS project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @author		Skalpa Keo <skalpa at xoops.org>
+* @package		exxos
+* @subpackage	exxos_XOS
+* @since        2.3.0
+* @version		$Id$
+* @internal     This one should stay as small and efficient as possible: flexibility must be encapsulated into evolution
+*/
+
+class XOS {
+	/**
+	* Currently loaded components registry
+	*/
+	var $registry =		array();
+	/**
+	* Available components factories
+	*/
+	var $factories =	array();
+	/**
+	* The currently running services (singletons)
+	*/
+	var $services =		array();
+	/**
+	 * Path handler used to convert registry paths to physical ones (if necessary)
+	 *
+	 * @var object
+	 */
+	var $pathHandler =	false;
+	/**
+	 * Internal look-up table used to determine which components definition have already been imported
+	 *
+	 * @var		array
+	 * @access	private
+	 */
+	var $imported =		array();
+	
+	/**
+	 * Import a specific component definition
+	 */
+	function import( $bundleId ) {
+		$me =& $GLOBALS['exxos'];
+
+		if ( !isset( $me->registry[$bundleId] ) ) {
+			return false;
+		}
+		if ( isset( $me->imported[$bundleId] ) ) {
+			return $me->imported[$bundleId];
+		}
+		if ( isset( $me->registry[$bundleId]['xoClassPath'] ) ) {
+			$path = $me->registry[$bundleId]['xoBundleRoot'] . $me->registry[$bundleId]['xoClassPath'];
+			if ( $me->pathHandler ) {
+				$path = $me->pathHandler->path( $path );
+			}
+			if ( include_once( $path ) ) {
+				return $me->imported[$bundleId] = true;
+			}
+			return $me->imported[$bundleId] = false;
+		}
+	}
+
+	/**
+	 * Get a class variable value
+	 */
+	function classVar( $id, $prop ) {
+		$me =& $GLOBALS['exxos'];
+		
+		if ( !isset( $me->registry[$id] ) ) {
+			return null;
+		}
+		if ( isset( $me->registry[$id][$prop] ) ) {
+			return $me->registry[$id][$prop];
+		}
+		XOS::import( $id );
+		$vars = get_class_vars( $id );
+		return $vars[$prop];
+	}
+	
+	/**
+	 * Create an object instance
+	 * 
+	 * This function will delegate object instanciation to a local factory if one has been
+	 * specified. It is also able to handle singletons: when a singleton is requested
+	 * it will check if it has not been already created and return a reference to the already
+	 * existing instance if it has.
+	 */
+	function &create( $id, $options = null, $args = null ) {
+		$me =& $GLOBALS['exxos'];
+		$inst = false;
+		if ( is_array( $id ) ) {
+			@list( $id, $options, $initArgs ) = $id;
+		}
+		if ( isset( $me->services[$id] ) ) {
+			return $me->services[$id];
+		}
+		XOS::import($id);
+		if ( isset( $me->registry[$id] ) ) {
+			if ( !isset($me->factories[$id]) && isset($me->registry[$id]['xoFactory']) ) {
+				$me->factories[$id] =& XOS::create( $me->registry[$id]['xoFactory'] );
+				unset($me->registry[$id]['xoFactory']);
+			}
+			if ( @is_object( $me->factories[$id] ) ) {
+				if ( method_exists( $me->factories[$id], 'createInstanceOf' ) ) {
+					$inst =& $me->factories[$id]->createInstanceOf( $id, $options );
+				} else {
+					$inst =& $me->factories[$id]->createInstance( $options );
+				}
+			} else {
+				$inst =& XOS::createInstanceOf( $id, $options, $args );
+			}
+			if ( is_object( $inst ) && @$inst->xoSingleton ) {
+				$me->services[ $id ] =& $inst;
+				if (!@empty( $options[ 'xoServiceName' ] ) ) {
+					$me->services[ $options[ 'xoServiceName' ] ] =& $inst;
+				}
+			}
+		}
+		return $inst;
+	}
+
+	/**
+	 * Create an instance of the specified class
+	 * 
+	 * This method is internally called by 'create' to create classes instances.
+	 * It can also be used by local factories.
+	 */
+	function &createInstanceOf( $class, $options = null, $args = null ) {
+		$inst = false;
+		if ( !class_exists($class) ) {
+			trigger_error( "Unknown class $class", E_USER_WARNING );
+			return $inst;
+		}
+		$inst =& new $class();
+		if ( is_object( $inst ) ) {
+			// Set specified properties values
+			XOS::apply( $inst, $options );
+			XOS::apply( $inst, $GLOBALS['exxos']->registry[$class] );
+			// Initialize the component instance
+			if ( method_exists( $inst, 'xoInit' ) ) {
+				if ( !$inst->xoInit( $options ) ) {
+					return false;
+				}
+			}
+			return $inst;
+		}
+		return false;
+	}
+
+	/**
+	* Set several properties of an object
+	*/
+	function apply( &$inst, $props = null ) {
+		if ( is_object( $inst ) ) {
+			if ( isset( $props ) && is_object( $props ) ) {
+				$props = get_object_vars($props);
+			}
+			if ( !empty($props) ) {
+				foreach ( $props as $p => $v ) {
+					if ( is_callable( array( &$inst, $method = 'set' . ucfirst($p) ) ) ) {
+						$inst->$method( $v );
+					} else {
+						$inst->$p = $v;
+					}
+				}
+			}
+		}
+	}
+	
+}
+
+if ( !@is_object( $GLOBALS['exxos'] ) ) {
+	$GLOBALS['exxos'] =& new XOS();
+}
+
+
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/exxos.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/hosts.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/hosts.php	2005-11-24 11:23:02 UTC (rev 19)
+++ XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/hosts.php	2005-11-24 11:23:41 UTC (rev 20)
@@ -0,0 +1,53 @@
+<?php
+/**
+ * XOOPS hosts definition file
+ *
+ * See the enclosed file LICENSE for licensing information.
+ * If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+ *
+ * NB: This file is upside down right now ;-)
+ * 
+ * In the future this is where sites will be defined, and the XOOPS_XXX constants will be created
+ * from its content when BC is required.
+ * Also, as some might be able to see: we're making this "ready" for multi-hosting, but it's not
+ * really supported yet (don't worry: you'll be told about that ;-))
+ * 
+ * @copyright    The Xoops project http://www.xoops.org/
+ * @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+ * @since        2.3.0
+ * @version		$Id$
+ */
+
+return array(
+	// ID of the default site
+	''					=> 'default.site',
+	// Hosts definitions
+	'default.site'		=> array(
+		// URIs under which this host can be accessed (1st one is default, others are aliases)
+		'hostLocation'		=> array(
+			substr( XOOPS_URL, strpos( XOOPS_URL, '://' ) + 3 ),
+		),
+		// Host locations when using secure (HTTPS) access
+		// If secure access if not supported, set secureName to an empty array
+		// otherwise, this array should have the same number of elements as 'hostLocation'
+		'secureLocation'	=> array(
+			substr( XOOPS_URL, strpos( XOOPS_URL, '://' ) + 3 ),
+		),
+		// Paths/URL to use to access the XOOPS folders
+		// For each path, the 1st element is the physical path, the 2nd one is the URI
+		// URIs without a leading slash are considered relative to the current XOOPS host location
+		// URIs with a leading slash are considered semi-relative (you must setup approp rewriting rules in your server conf)
+		'paths'			=> array(
+			'XOOPS'			=> array( XOOPS_PATH,						'library' ),
+			'modules'		=> array( XOOPS_ROOT_PATH . '/modules',		'modules' ),
+			'themes'		=> array( XOOPS_ROOT_PATH . '/themes',		'themes' ),
+			'var'			=> array( XOOPS_VAR_PATH,					null ),
+			'www'			=> array( XOOPS_ROOT_PATH,					'' ),
+		),
+		// Kernel boot parameters
+		'bootFile'		=> 'rc.php',
+		'xoRunMode'		=> XO_MODE_DEV,
+	),
+);
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/hosts.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/kernel.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/kernel.php	2005-11-24 11:23:02 UTC (rev 19)
+++ XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/kernel.php	2005-11-24 11:23:41 UTC (rev 20)
@@ -0,0 +1,326 @@
+<?php
+/**
+* xoops_kernel_Xoops2 class definition
+*
+* See the enclosed file LICENSE for licensing information.
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+*
+* @copyright    The XOOPS project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @package		xoops_kernel
+* @subpackage	xoops_kernel_Xoops2
+* @since        2.3.0
+* @author		Skalpa Keo <skalpa at xoops.org>
+* @version		$Id$
+*/
+
+/**
+* Xoops2 kernel class
+*
+* - It handles the boot sequence (read the specified bootfile, run startup items, and instanciate the current module)
+* - It contains functionnally limited implementations for both the error handler and the logger services, to ensure
+*   those are available at all time, so even early errors generated before booting can be handled)
+*
+* @package		xoops_kernel
+* @subpackage	xoops_kernel_Xoops2
+*/
+class xoops_kernel_Xoops2 {
+	var $xoBundleIdentifier		= 'xoops_kernel_Xoops2';
+	var $xoRunMode				= XO_MODE_PROD;
+	var $xoShortVersionString	= 'XOOPS 2.3.0-dev';
+
+	var $xoBundleRoot = 'XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm';
+	
+	/**
+	 * Current host identifier
+	 *
+	 * @var string
+	 */
+	var $hostId					= '';
+	/**
+	 * Host base URI when using regular access (HTTP)
+	 *
+	 * @var string
+	 */
+	var $hostLocation			= '';
+	/**
+	 * Host base URI when using secure access (HTTPS)
+	 *
+	 * @var string
+	 */
+	var $secureLocation			= '';
+	/**
+	 * If the current request uses secure access or not
+	 *
+	 * @var bool
+	 */
+	var $isSecure				= false;
+	/**
+	 * Locations of the XOOPS folders
+	 *
+	 * @var array
+	 */
+	var $paths					= '';
+	/**
+	 * Name of the boot file to execute
+	 *
+	 * @var string
+	 */
+	var $bootFile				= 'rc.php';
+	/**
+	 * Folder containing the startup items
+	 *
+	 * @var string
+	 */
+	var $startupItemsPath		= 'XOOPS/StartupItems';
+	/**
+	 * References to the currently running services
+	 *
+	 * @var array
+	 */
+	var $services				= null;
+	var $captures				= array(
+		'http'		=> 'xoops_http_HAL',
+		'session'	=> 'xoops_http_SessionService',
+	);
+
+	/** 
+	 * Indicates whether the boot sequence has been performed or not
+	 * 
+	 * @var boolean
+	 * @access private
+	 */
+	var $hasBooted				= false;
+	/**
+	 * Has the shutdown sequence been performed or not
+	 * 
+	 * @var boolean
+	 * @access private
+	 */
+	var $hasShutdown			= false;
+
+	var $isVirtual				= false;
+
+	var $previousErrorHandler	= false;
+
+	var $isHandlingErrors		= false;
+	var $_oldReporting			= 0;
+	var $errorReporting			= 0;
+	
+	function xoops_kernel_Xoops2( $hostId, $hostVars ) {
+	 	$GLOBALS['xoops']	=& $this;
+	 	$GLOBALS['exxos']->pathHandler =& $this;
+
+	 	$this->hostId = $hostId;
+	 	XOS::apply( $this, $hostVars );
+	 	
+		if ( $this->xoRunMode & XO_MODE_DEV_MASK ) {
+			$this->errorReporting |= E_ALL;
+		}
+		//error_reporting(E_ALL);
+		$this->activateErrorHandler( true );
+
+		$this->loadRegistry();
+	 	$this->services =& $GLOBALS['exxos']->services;
+
+
+	 	$captures = @include $this->path( 'var/Application Support/xoops_kernel_Xoops2/services.php' );
+	 	if ( is_array($captures) ) {
+	 		$this->captures = array_merge( $this->captures, $captures );
+	 	}
+
+		$this->bootFile = str_replace( array( '/', '\\' ), '', $this->bootFile );		// Might be useless check, but this one won't hurt
+		
+		//$this->services['logger'] = $this->services['errorhandler'] = $this;
+
+	}
+
+	/**
+	 * Load the components registry from persistent storage
+	 * 
+	 * @access private
+	 */
+	function loadRegistry() {
+		$reg = @include $this->path( 'var/Application Support/xoops_kernel_Xoops2/registry.php' );
+		if ( !is_array($reg) || ( $this->xoRunMode & XO_MODE_DEV_MASK ) ) {
+			$reg = include $this->path( "$this->xoBundleRoot/scripts/rebuild_registry.php" );
+		}
+		$GLOBALS['exxos']->registry = $reg;
+	}
+	
+	/**
+	 * Create an instance of the specified service by name
+	 * 
+	 * @param string $name		Name under which the service will be available
+	 * @param string $bundleId	ID of the class to instanciate
+	 * @param array  $options	Parameters to send to the service during instanciation
+	 */
+	function &loadService( $name, $bundleId = '', $options = array() ) {
+		if ( isset( $this->captures[$name] ) ) {
+			$bundleId = $this->captures[$name];
+		} elseif ( empty( $bundleId ) ) {
+			$bundleId = $name;
+		}
+		if ( !isset( $this->services[$name] ) ) {
+			$this->services[$name] =& XOS::create( $bundleId, $options );
+		}
+		return $this->services[$name];
+	}
+	
+	/**
+	 * Enable/disable the errorhandler.
+	 *
+	 * When set to active, the error handler set the php error reporting level to E_ALL and uses its own
+	 * $errorReporting property to mask the errors to report (so the @ operator still works :-)
+	 * 
+	 * @param bool	$enable		Whether to enable or disable the error handler
+	 */
+	function activateErrorHandler( $enable = true ) {
+		if ( $enable && !$this->isHandlingErrors ) {
+			set_error_handler( array( &$this, 'handleError' ) );
+			$this->_oldReporting = error_reporting( E_ALL );
+			return $this->isHandlingErrors = true;
+		} elseif ( !$enable && $this->isHandlingErrors ) {
+		 	restore_error_handler();
+			error_reporting( $this->_oldReporting );
+			return $this->isHandlingErrors = false;
+		}
+		return $this->isHandlingErrors;
+	}
+	
+	function handleError( $num, $str, $file = '', $line = 0, $context = false ) {
+		static $names = array(
+			E_ERROR => 'Error', E_USER_ERROR => 'Error', E_WARNING => 'Warning', E_USER_WARNING => 'Warning',
+			E_NOTICE => 'Notice', E_USER_NOTICE => 'Notice',
+		);
+		if ( $num & $this->errorReporting & error_reporting() ) {
+			foreach ( $this->paths as $root => $v ) {
+				$str  = str_replace( $v[0] . '/', "/$root/", $str );
+			}
+			$name = isset( $names[$num] ) ? $names[$num] : 'Undefined error';
+			$msg = "$name: $str";
+			if ( $file && $line ) {
+				$file = str_replace( DIRECTORY_SEPARATOR, '/', $file );
+				foreach ( $this->paths as $root => $v ) {
+					$file = str_replace( $v[0] . '/', "/$root/", $file );
+				}
+				$msg .= " in $file on line $line";
+			}
+			echo "$msg<br />\r\n";
+		}
+	}
+	
+	/**
+	* Convert a XOOPS path to a physical one
+	*/
+	function path( $url, $virtual = false ) {
+		// If the URL begins with protocol:// then remove it
+		if ( $pos = strpos( $url, '://' ) ) {
+			$url = substr( $url, $pos + 3 );
+		}
+		$parts = explode( '#', $url );
+		if ( count( $parts ) == 1 ) {
+			if ( $parts[0]{0} == '/' ) {
+				$parts[0] = substr( $parts[0], 1 );
+			}
+			$parts = explode( '/', $parts[0], 2 );
+			if ( !$virtual ) {
+				return !isset( $this->paths[$parts[0]] ) ? '' : ( $this->paths[$parts[0]][0] . '/' . $parts[1] );
+			} else {
+				return !isset( $this->paths[$parts[0]][2] ) ? '' : ( $this->paths[$parts[0]][0][2] . '/' . $parts[1] );
+			}
+		} else {
+			$root = XOS::classVar( $parts[0], 'xoBundleRoot' );
+			return $this->path( $root . '/' . $parts[1] );
+		}
+	}
+	/**
+	* Convert a XOOPS path to an URL
+	*/
+	function url( $url ) {
+		return $this->path( $url, true );
+	}
+
+	
+	/**
+	 * Perform the boot sequence
+	 *
+	 * @access public
+	 * @return bool
+	 */
+	function boot() {
+		//$this->setupModule();
+		if ( !$this->hasBooted ) {
+			//register_shutdown_function( array( &$this, 'shutdown' ) );
+			if ( !empty($this->bootFile) ) {
+				require_once $this->path( "/XOOPS/Boot/$this->bootFile" );
+			}
+			$this->hasBooted = true;
+			if ( $this->launchStartupItems() ) {
+				return true;
+			} 
+		}
+		return true;
+	}
+
+	/**
+	 * Perform the shutdown sequence
+	 *
+	 * @access public
+	 * @return bool
+	 */
+	function shutdown() {
+		if ( !$this->hasShutdown ) {
+			$this->hasShutdown = true;
+		}
+	}
+
+	/**
+	 * Launch the kernel startup items
+	 *
+	 * <p>Startup items are scripts than will be executed during every request.<br />
+	 * Upon completion of its normal startup sequence, the XOOPS kernel will launch every startup item
+	 * located in the StartupItems folder (by default <em>XOOPS/StartupItems</em>).</p>
+	 * <p>
+	 * To make a startup item:<br />
+	 * Create a folder in the startup items folder, then add a .php script named exactly like it inside.
+	 * </p>
+	 * <p>A startup item script can cancel the boot sequence by returning <em>false</em>.</p>
+	 * 
+	 * @access private
+	 */
+	function launchStartupItems() {
+		if ( empty( $this->startupItemsPath ) ) return true;
+		
+		$path = $this->path( $this->startupItemsPath );
+		if ( @$dh = opendir( $path ) ) {
+			while ( $file = readdir( $dh ) ) {
+				if ( $file{0} == '.' || $file == 'CVS' )	continue;
+				if ( is_dir( "$path/$file" ) ) {
+					if ( -1 == @include "$path/$file/$file.php") {
+						return false;
+					}
+				}
+			}
+			closedir( $dh );
+		}
+		return true;
+	}
+
+	function launchModule() {
+		return true;
+		if ( !$this->loadService( 'module', 'xoops_kernel_Module' ) ) {
+			return false;
+		}
+		if ( !$this->services['module']->checkAccess() ) {
+			//$this->services['http']->setResponse( 403, null, null, true );
+			return false;
+		}
+		return $this->services['module']->xoBundleIdentifier;
+	}
+
+	
+} // class xoops_kernel_Xoops2
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/kernel.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/rc.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/rc.php	2005-11-24 11:23:02 UTC (rev 19)
+++ XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/rc.php	2005-11-24 11:23:41 UTC (rev 20)
@@ -0,0 +1,27 @@
+<?php
+/**
+* XOOPS default startup-sequence file
+*
+* See the enclosed file LICENSE for licensing information.
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+*
+* @copyright    The XOOPS project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @package		xoops
+* @since        2.3.0
+* @author		Skalpa Keo <skalpa at xoops.org>
+* @version		$Id$
+*/
+
+/**
+ * This file cannot be requested directly
+ */
+if ( !defined( 'XO_MODE_DEV' ) ) exit();
+
+
+
+
+
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/rc.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/xoops2.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/xoops2.php	2005-11-24 11:23:02 UTC (rev 19)
+++ XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/xoops2.php	2005-11-24 11:23:41 UTC (rev 20)
@@ -0,0 +1,88 @@
+<?php
+/**
+* XOOPS kernel initialization script
+*
+* See the enclosed file LICENSE for licensing information.
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+*
+* @copyright    The XOOPS project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @since        2.3.0
+* @version		$Id$
+* @author		Skalpa Keo <skalpa at xoops.org>
+*/
+
+if ( !defined( 'XO_MODE_DEV' ) ) {
+
+	define( 'XO_MODE_DEBUG_MASK', 1 );
+	define( 'XO_MODE_DEV_MASK', 2 );
+
+	define( 'XO_MODE_PROD', 0 );
+	define( 'XO_MODE_DEBUG', XO_MODE_DEBUG_MASK );
+	define( 'XO_MODE_DEV', XO_MODE_DEBUG_MASK | XO_MODE_DEV_MASK );
+
+	/**
+	* Initialize the XOOPS kernel
+	*
+	* This function launches the XOOPS kernel, including required files and instanciating
+	* the kernel class.
+	*/
+	function xoops2_create_kernel() {
+		error_reporting( E_ALL );
+		if ( is_object( $GLOBALS['xoops'] ) ) {
+			return false;
+		}
+		$path = ( DIRECTORY_SEPARATOR == '/' ) ? dirname( __FILE__ ) : str_replace( DIRECTORY_SEPARATOR, '/', dirname(__FILE__) );
+		// Include required files
+		require_once "$path/exxos.php";
+		require_once "$path/kernel.php";
+		$hostsInfo = require_once "$path/hosts.php";
+		
+		// Find which host/alias is the current one, according to the request
+		$hostId = $hostsInfo[''];
+		$aliasNum = 0;
+		if ( php_sapi_name() != 'cli' ) {
+			$reqSecure	= ( @$_SERVER['HTTPS'] == 'on' ) ? true : false;
+			$reqPort	= empty( $_SERVER['SERVER_PORT'] ) ? ( $reqSecure ? 443 : 80 ) : $_SERVER['SERVER_PORT'];
+		
+			$location = @empty( $_SERVER['HTTP_HOST'] ) ? $_SERVER['SERVER_NAME'] : $_SERVER['HTTP_HOST'];
+			if ( ( $reqPort != 443 && $reqSecure ) || ( $reqPort != 80 && !$reqSecure ) ) {
+				$location .= ':' . $reqPort;
+			}
+			$location .= empty( $_SERVER['REQUEST_URI'] ) ? $_SERVER['PHP_SELF'] : $_SERVER['REQUEST_URI'];
+			foreach ( $hostsInfo as $id => $vars ) {
+				if ( !empty( $id ) ) {
+					foreach ( $vars[ $reqSecure ? 'secureLocation' : 'hostLocation' ] as $num => $alias ) {
+						if ( isset($alias) && !strncmp( $location, $alias, strlen( $alias ) ) ) {
+							$hostId = $id;
+							$aliasNum = $num;
+							break 2;
+						}
+					}
+				}
+			}
+		}
+		$vars = $hostsInfo[ $hostId ];
+		$vars['hostLocation']	= $vars['hostLocation'][$aliasNum];
+		$vars['secureLocation'] = $vars['secureLocation'][$aliasNum];
+		$vars['isSecure'] = $reqSecure;
+		// Instanciate the kernel
+		new xoops_kernel_Xoops2( $hostId, $vars );
+		return true;
+	}
+
+}
+
+
+
+/**
+* Initialize and boot the XOOPS kernel upon inclusion of this file
+*/
+global $xoops;
+
+if ( !isset( $GLOBALS['xoops'] ) ) {
+	xoops2_create_kernel();
+}
+return ( php_sapi_name() !== 'cli' ? $GLOBALS['xoops']->boot() : true );
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/xoops2.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/scripts/rebuild_registry.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/scripts/rebuild_registry.php	2005-11-24 11:23:02 UTC (rev 19)
+++ XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/scripts/rebuild_registry.php	2005-11-24 11:23:41 UTC (rev 20)
@@ -0,0 +1,83 @@
+<?php
+/**
+* XOOPS kernel registry building script
+*
+* See the enclosed file LICENSE for licensing information.
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+*
+* This script scans the XOOPS core components folders (lib and modules) and build a lookup table
+* (the components registry) that will be used by Exxos to know what components are available in
+* the system.
+* The use of such a system has some drawbacks (like higher memory comsumption), but as it comes
+* with performance gains in other parts of 2.3.0, it can be considered acceptable.
+* Also, THIS WILL BE REMOVED in a later version, once Exxos implements real evolution patterns.
+* 
+* @copyright    The XOOPS project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @author		Skalpa Keo <skalpa at xoops.org>
+* @package		xoops_kernel
+* @since        2.3.0
+* @version		$Id$
+*/
+/**
+ * This file cannot be requested directly
+ */
+if ( !defined( 'XO_MODE_DEV' ) ) exit();
+
+
+function xoScanComponentsFolder( $registry, $path, $recurse = false ) {
+	global $xoops;
+
+	$realpath = $xoops->path( $path );
+	if ( $dh = opendir( $realpath ) ) {
+		while ( $file = readdir( $dh ) ) {
+			if ( $file{0} != '.' && is_dir( "$realpath/$file" ) ) {
+				$local = @include "$realpath/$file/xo-info.php";
+				if ( is_array($local) && isset( $local["xoBundleIdentifier"] ) ) {
+					$registry = xoRegisterComponent( $registry, $local, "$path/$file" );
+				} elseif ( $recurse ) {
+					$registry = xoScanComponentsFolder( $registry, "$path/$file", true );
+				}
+			}
+		}
+		closedir($dh);
+	}
+	return $registry;
+}
+
+function xoRegisterComponent( $registry, $bundleInfo, $bundleRoot ) {
+	global $xoops;
+
+	$services = array();
+	if ( isset( $bundleInfo['xoServices'] ) ) {
+		foreach ( $bundleInfo['xoServices'] as $localId => $localInfo ) {
+			if ( @$subRoot = $localInfo['xoBundleRoot'] ) {
+				$localInfo = @include $xoops->path( $bundleRoot . $subRoot );
+				$localInfo = xoRegisterComponent( array(), $localInfo, $bundleRoot . $subRoot );
+			} else {
+				$localInfo['xoBundleRoot'] = $bundleRoot;
+			}
+			if ( is_array( $localInfo ) ) {
+				$services[$localId] = $localInfo;
+			}
+		}
+		unset( $bundleInfo['xoServices'] );
+	}
+	$bundleId = $bundleInfo['xoBundleIdentifier'];
+	unset( $bundleInfo['xoBundleIdentifier'] );
+	$bundleInfo['xoBundleRoot'] = $bundleRoot;
+
+	$services[$bundleId] = $bundleInfo;
+	return array_merge( $registry, $services );
+}
+
+$registry = array();
+$registry = xoScanComponentsFolder( $registry, '/XOOPS/Frameworks', true );
+
+if ( $fp = fopen( $this->path( '/var/Application Support/xoops_kernel_Xoops2/registry.php' ), 'wt' ) ) {
+	fwrite( $fp, "<?php\nreturn " . var_export( $registry, true ) . ";\n?>" );
+	fclose( $fp );
+}
+return $registry;
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/scripts/rebuild_registry.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/user.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/user.php	2005-11-24 11:23:02 UTC (rev 19)
+++ XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/user.php	2005-11-24 11:23:41 UTC (rev 20)
@@ -0,0 +1,36 @@
+<?php
+
+
+define( 'XO_LEVEL_DISABLED', -1 );
+define( 'XO_LEVEL_ANONYMOUS', 0 );
+define( 'XO_LEVEL_INACTIVE', 1 );
+define( 'XO_LEVEL_REGISTERED', 2 );
+define( 'XO_LEVEL_ADMIN', 256 );
+
+
+class xoops_kernel_User {
+	
+	var $level = XO_LEVEL_ANONYMOUS;
+	var $groups = array( XO_GROUP_ANONYMOUS );
+	
+	var $name = 'anonymous';
+	var $password = '';
+	
+	
+	
+}
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/user.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/xo-info.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/xo-info.php	2005-11-24 11:23:02 UTC (rev 19)
+++ XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/xo-info.php	2005-11-24 11:23:41 UTC (rev 20)
@@ -0,0 +1,35 @@
+<?php
+/**
+* xoops_kernel framework bundle information file
+*
+* See the enclosed file LICENSE for licensing information.
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+*
+* @copyright    The XOOPS project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @author		Skalpa Keo <skalpa at xoops.org>
+* @since        2.3.0
+* @package		xoops_kernel
+* @version		$Id$
+*/
+
+return array(
+	'xoBundleDisplayName' => 'XOOPS kernel framework',
+	'xoBundleIdentifier' => 'xoops_kernel',
+	
+	'xoServices' => array(
+		'xoops_kernel_Module' => array(
+			'xoClassPath' => '/module.php',
+			'xoFactory' => 'xoops_kernel_ModuleFactory',
+		),
+		'xoops_kernel_ModuleFactory' => array(
+			'xoClassPath' => '/module.php',
+			'singleton' => true,
+		),
+		'xoops_kernel_User' => array(
+			'xoClassPath' => '/user.php',
+		),
+	),
+);
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm/xo-info.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/include/common.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/include/common.php	2005-11-24 11:23:02 UTC (rev 19)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/include/common.php	2005-11-24 11:23:41 UTC (rev 20)
@@ -36,10 +36,10 @@
     $xoopsSecurity->checkSuperglobals();
     
     // ############## Activate error handler ##############
-    include_once XOOPS_ROOT_PATH . '/class/errorhandler.php';
-    $xoopsErrorHandler =& XoopsErrorHandler::getInstance();
+    //include_once XOOPS_ROOT_PATH . '/class/errorhandler.php';
+    //$xoopsErrorHandler =& XoopsErrorHandler::getInstance();
     // Turn on error handler by default (until config value obtained from DB)
-    $xoopsErrorHandler->activate(true);
+    //$xoopsErrorHandler->activate(true);
 
     define("XOOPS_SIDEBLOCK_LEFT",0);
     define("XOOPS_SIDEBLOCK_RIGHT",1);
@@ -59,8 +59,8 @@
     define("XOOPS_THEME_PATH", XOOPS_ROOT_PATH."/themes");
 
     define( "SMARTY_DIR", XOOPS_ROOT_PATH . "/class/smarty/" );
-    define( "XOOPS_CACHE_PATH", XOOPS_VAR_PATH . "/Caches" );
-    define( "XOOPS_COMPILE_PATH", XOOPS_VAR_PATH . "/Application Support/net_php_Smarty" );
+    define( "XOOPS_CACHE_PATH", XOOPS_VAR_PATH . "/Caches/xoops_template_Smarty" );
+    define( "XOOPS_COMPILE_PATH", XOOPS_VAR_PATH . "/Application Support/xoops_template_Smarty" );
 
     define("XOOPS_THEME_URL", XOOPS_URL."/themes");
     define("XOOPS_UPLOAD_URL", XOOPS_URL."/uploads");
@@ -96,7 +96,8 @@
     $xoopsConfig =& $config_handler->getConfigsByCat(XOOPS_CONF);
 
     // #################### Error reporting settings ##################
-    error_reporting(0);
+/*
+	error_reporting(0);
 
     if ($xoopsConfig['debug_mode'] == 1) {
         error_reporting(E_ALL);
@@ -104,7 +105,7 @@
         // Turn off error handler
         $xoopsErrorHandler->activate(false);
     }
-
+*/
     $xoopsSecurity->checkBadips();
 
     // ################# Include version info file ##############

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php	2005-11-24 11:23:02 UTC (rev 19)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/mainfile.dist.php	2005-11-24 11:23:41 UTC (rev 20)
@@ -74,6 +74,9 @@
 	define("XOOPS_GROUP_USERS", "2");
 	define("XOOPS_GROUP_ANONYMOUS", "3");
 
+	require_once( XOOPS_PATH . '/Boot/xoops2.php' );
+	global $xoops;
+
 	if (!isset($xoopsOption['nocommon']) && XOOPS_ROOT_PATH != '') {
 		include XOOPS_ROOT_PATH."/include/common.php";
 	}



From skalpa at berlios.de  Thu Nov 24 23:52:02 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Thu, 24 Nov 2005 23:52:02 +0100
Subject: [Xoops4-svn] r21 - XoopsCore/branches/tasks
Message-ID: <200511242252.jAOMq2tW019322@sheep.berlios.de>

Author: skalpa
Date: 2005-11-24 23:52:01 +0100 (Thu, 24 Nov 2005)
New Revision: 21

Added:
   XoopsCore/branches/tasks/121627-refs/
Log:
made a copy

Copied: XoopsCore/branches/tasks/121627-refs (from rev 20, XoopsCore/branches/2.3.x/2.3-main)



From skalpa at berlios.de  Fri Nov 25 00:01:37 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 00:01:37 +0100
Subject: [Xoops4-svn] r22 - XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support
Message-ID: <200511242301.jAON1bMV020129@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 00:01:37 +0100 (Fri, 25 Nov 2005)
New Revision: 22

Added:
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/xoops_kernel_Xoops2/
Log:
Forgot to add this folder during the last commit



From skalpa at berlios.de  Fri Nov 25 00:05:10 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 00:05:10 +0100
Subject: [Xoops4-svn] r23 - XoopsCore/branches/tasks/121627-refs/XOOPS-data/Application Support
Message-ID: <200511242305.jAON5A2x020401@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 00:05:10 +0100 (Fri, 25 Nov 2005)
New Revision: 23

Added:
   XoopsCore/branches/tasks/121627-refs/XOOPS-data/Application Support/xoops_kernel_Xoops2/
Log:
Adding the kernel data missing folder to the branch am currently working on too



From skalpa at berlios.de  Fri Nov 25 03:28:14 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 03:28:14 +0100
Subject: [Xoops4-svn] r24 - in XoopsCore/branches/tasks/121627-refs/htdocs: class class/database class/xml/rss class/xoopsform include kernel
Message-ID: <200511250228.jAP2SEoW003544@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 03:28:06 +0100 (Fri, 25 Nov 2005)
New Revision: 24

Modified:
   XoopsCore/branches/tasks/121627-refs/htdocs/class/database/database.php
   XoopsCore/branches/tasks/121627-refs/htdocs/class/database/mysqldatabase.php
   XoopsCore/branches/tasks/121627-refs/htdocs/class/module.textsanitizer.php
   XoopsCore/branches/tasks/121627-refs/htdocs/class/tree.php
   XoopsCore/branches/tasks/121627-refs/htdocs/class/xml/rss/xmlrss2parser.php
   XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopsblock.php
   XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopscomments.php
   XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopsform/form.php
   XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopslists.php
   XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopstopic.php
   XoopsCore/branches/tasks/121627-refs/htdocs/include/functions.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/avatar.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/block.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/comment.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/config.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configcategory.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configitem.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configoption.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/group.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/groupperm.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/image.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imagecategory.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imageset.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imagesetimg.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/member.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/module.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/notification.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/object.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/online.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/privmessage.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/tplfile.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/tplset.php
   XoopsCore/branches/tasks/121627-refs/htdocs/kernel/user.php
Log:
Think I caught most of them... (actually, quite more than I did for 2.2.3).
Will send this back to the main 2.3 branch so it can be tested more seriously while working.

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/class/database/database.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/class/database/database.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/class/database/database.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -123,9 +123,9 @@
 class Database
 {
 
-	function &getInstance()
-	{
-		return XoopsDatabaseFactory::getDatabaseConnection();
+	function &getInstance() {
+		$inst =& XoopsDatabaseFactory::getDatabaseConnection();
+		return $inst;
 	}
 }
 

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/class/database/mysqldatabase.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/class/database/mysqldatabase.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/class/database/mysqldatabase.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -228,7 +228,7 @@
      * @return resource query result or FALSE if successful
      * or TRUE if successful and no result
      */
-    function &queryF($sql, $limit=0, $start=0)
+    function queryF($sql, $limit=0, $start=0)
 	{
 		if ( !empty($limit) ) {
 			if (empty($start)) {
@@ -258,7 +258,7 @@
      * 
      * @abstract
 	 */
-	function &query($sql, $limit=0, $start=0)
+	function query($sql, $limit=0, $start=0)
 	{
 
     }
@@ -346,7 +346,7 @@
      * @return resource query result or FALSE if successful
      * or TRUE if successful and no result
      */
-	function &query($sql, $limit=0, $start=0)
+	function query($sql, $limit=0, $start=0)
 	{
 		return $this->queryF($sql, $limit, $start);
 	}
@@ -378,7 +378,7 @@
      * @param int $start offset of first record to return
      * @return resource query result or FALSE if unsuccessful
      */
-	function &query($sql, $limit=0, $start=0)
+	function query($sql, $limit=0, $start=0)
 	{
 	    $sql = ltrim($sql);
 		if (strtolower(substr($sql, 0, 6)) == 'select') {

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/class/module.textsanitizer.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/class/module.textsanitizer.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/class/module.textsanitizer.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -103,20 +103,20 @@
      *
      * @return	string
      */
-    function &smiley($message)
+    function smiley($message)
 	{
 		$db =& Database::getInstance();
 		if (count($this->smileys) == 0) {
 			if ($getsmiles = $db->query("SELECT * FROM ".$db->prefix("smiles"))){
 				while ($smiles = $db->fetchArray($getsmiles)) {
-					$message =& str_replace($smiles['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smiles['smile_url']).'" alt="" />', $message);
+					$message = str_replace($smiles['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smiles['smile_url']).'" alt="" />', $message);
 					array_push($this->smileys, $smiles);
 				}
 			}
 		} 
 		elseif (is_array($this->smileys)) {
 			foreach ($this->smileys as $smile) {
-				$message =& str_replace($smile['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smile['smile_url']).'" alt="" />', $message);
+				$message = str_replace($smile['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smile['smile_url']).'" alt="" />', $message);
 			}
 		}
 		return $message;
@@ -128,7 +128,7 @@
 	 * @param   string  $text
 	 * @return  string
 	 **/
-	function &makeClickable(&$text)
+	function makeClickable(&$text)
 	{
 		$patterns = array("/(^|[^]_a-z0-9-=\"'\/])([a-z]+?):\/\/([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/])www\.([a-z0-9\-]+)\.([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/])ftp\.([a-z0-9\-]+)\.([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/:\.])([a-z0-9\-_\.]+?)@([^, \r\n\"\(\)'<>\[\]]+)/i");
 		$replacements = array("\\1<a href=\"\\2://\\3\" target=\"_blank\">\\2://\\3</a>", "\\1<a href=\"http://www.\\2.\\3\" target=\"_blank\">www.\\2.\\3</a>", "\\1<a href=\"ftp://ftp.\\2.\\3\" target=\"_blank\">ftp.\\2.\\3</a>", "\\1<a href=\"mailto:\\2@\\3\">\\2@\\3</a>");
@@ -203,7 +203,8 @@
 		$replacements[] = "(tammairanslip)";
 		$patterns[] = "/a{$c}b{$c}o{$c}u{$c}t{$c}:/si";
 		$replacements[] = "about :";
-		return preg_replace($patterns, $replacements, $text);
+		$text = preg_replace($patterns, $replacements, $text);
+		return $text;
 	}
 
 	/**
@@ -213,7 +214,7 @@
      *
      * @return	string
 	 */
-	function &nl2Br($text)
+	function nl2Br($text)
 	{
 		return preg_replace("/(\015\012)|(\015)|(\012)/","<br />",$text);
 	}
@@ -224,10 +225,10 @@
 	 * @param   string  $text
 	 * @return  string
 	 **/
-	function &addSlashes($text)
+	function addSlashes($text)
 	{
 		if (!get_magic_quotes_gpc()) {
-			$text =& addslashes($text);
+			$text = addslashes($text);
 		}
 		return $text;
 	}
@@ -238,10 +239,10 @@
     *
     * @return	string
 	*/
-	function &stripSlashesGPC($text)
+	function stripSlashesGPC($text)
 	{
 		if (get_magic_quotes_gpc()) {
-			$text =& stripslashes($text);
+			$text = stripslashes($text);
 		}
 		return $text;
 	}
@@ -253,7 +254,7 @@
     *
     * @return	string
 	*/
-	function &htmlSpecialChars($text)
+	function htmlSpecialChars($text)
 	{
 		//return preg_replace("/&amp;/i", '&', htmlspecialchars($text, ENT_QUOTES));
 		return preg_replace(array("/&amp;/i", "/&nbsp;/i"), array('&', '&amp;nbsp;'), htmlspecialchars($text, ENT_QUOTES));
@@ -265,7 +266,7 @@
 	 * @param   string  $text
 	 * @return  string
 	 **/
-	function &undoHtmlSpecialChars(&$text)
+	function undoHtmlSpecialChars( $text )
 	{
 		return preg_replace(array("/&gt;/i", "/&lt;/i", "/&quot;/i", "/&#039;/i"), array(">", "<", "\"", "'"), $text);
 	}
@@ -285,28 +286,28 @@
 	{
 		if ($html != 1) {
 			// html not allowed
-			$text =& $this->htmlSpecialChars($text);
+			$text = $this->htmlSpecialChars($text);
 		}
-		$text =& $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
-		$text =& $this->makeClickable($text);
+		$text = $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
+		$text = $this->makeClickable($text);
 		if ($smiley != 0) {
 			// process smiley
-			$text =& $this->smiley($text);
+			$text = $this->smiley($text);
 		}
 		if ($xcode != 0) {
 			// decode xcode
 			if ($image != 0) {
 				// image allowed
-				$text =& $this->xoopsCodeDecode($text);
-            		} else {
-                		// image not allowed
-                		$text =& $this->xoopsCodeDecode($text, 0);
+				$text = $this->xoopsCodeDecode($text);
+			} else {
+				// image not allowed
+				$text = $this->xoopsCodeDecode($text, 0);
 			}
 		}
 		if ($br != 0) {
-			$text =& $this->nl2Br($text);
+			$text = $this->nl2Br($text);
 		}
-		$text =& $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
+		$text = $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
 		return $text;
 	}
 
@@ -323,31 +324,31 @@
 	 **/
 	function &previewTarea(&$text, $html = 0, $smiley = 1, $xcode = 1, $image = 1, $br = 1)
 	{
-		$text =& $this->stripSlashesGPC($text);
+		$text = $this->stripSlashesGPC($text);
 		if ($html != 1) {
 			// html not allowed
-			$text =& $this->htmlSpecialChars($text);
+			$text = $this->htmlSpecialChars($text);
 		}
-		$text =& $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
-		$text =& $this->makeClickable($text);
+		$text = $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
+		$text = $this->makeClickable($text);
 		if ($smiley != 0) {
 			// process smiley
-			$text =& $this->smiley($text);
+			$text = $this->smiley($text);
 		}
 		if ($xcode != 0) {
 			// decode xcode
 			if ($image != 0) {
 				// image allowed
-				$text =& $this->xoopsCodeDecode($text);
+				$text = $this->xoopsCodeDecode($text);
 			} else {
 				// image not allowed
-				$text =& $this->xoopsCodeDecode($text, 0);
+				$text = $this->xoopsCodeDecode($text, 0);
 			}
 		}
 		if ($br != 0) {
-			$text =& $this->nl2Br($text);
+			$text = $this->nl2Br($text);
 		}
-		$text =& $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
+		$text = $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
 		return $text;
 	}
 
@@ -525,7 +526,8 @@
 
 	function &makeTareaData4Preview(&$text, $html=1, $smiley=1, $xcode=1)
 	{
-		return $this->previewTarea($text, $html, $smiley, $xcode);
+		$text = $this->previewTarea($text, $html, $smiley, $xcode);
+		return $text;
 	}
 
 	function makeTareaData4PreviewInForm($text)
@@ -540,30 +542,30 @@
 		return $this->htmlSpecialChars($text);
 	}
 
-	function &oopsStripSlashesGPC($text)
+	function oopsStripSlashesGPC($text)
 	{
 		return $this->stripSlashesGPC($text);
 	}
 
-	function &oopsStripSlashesRT($text)
+	function oopsStripSlashesRT($text)
 	{
 		if (get_magic_quotes_runtime()) {
-			$text =& stripslashes($text);
+			$text = stripslashes($text);
 		}
 		return $text;
 	}
 
-	function &oopsAddSlashes($text)
+	function oopsAddSlashes($text)
 	{
 		return $this->addSlashes($text);
 	}
 
-	function &oopsHtmlSpecialChars($text)
+	function oopsHtmlSpecialChars($text)
 	{
 		return $this->htmlSpecialChars($text);
 	}
 
-	function &oopsNl2Br($text)
+	function oopsNl2Br($text)
 	{
 		return $this->nl2br($text);
 	}

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/class/tree.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/class/tree.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/class/tree.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -115,7 +115,7 @@
 	 * @param   string  $key    ID of the parent object
 	 * @return  array   Array of children of the parent
 	 **/
-	function &getFirstChild($key)
+	function getFirstChild($key)
 	{
 		$ret = array();
 		if (isset($this->_tree[$key]['child'])) {
@@ -133,7 +133,7 @@
 	 * @param   array   $ret    (Empty when called from client) Array of children from previous recursions.
 	 * @return  array   Array of child nodes.
 	 **/
-	function &getAllChild($key, $ret = array())
+	function getAllChild($key, $ret = array())
 	{
 		if (isset($this->_tree[$key]['child'])) {
 			foreach ($this->_tree[$key]['child'] as $childkey) {
@@ -156,7 +156,7 @@
 	 * @param   int $uplevel (empty when called from outside) level of recursion
 	 * @return  array   Array of parent nodes. 
 	 **/
-	function &getAllParent($key, $ret = array(), $uplevel = 1)
+	function getAllParent($key, $ret = array(), $uplevel = 1)
 	{
 		if (isset($this->_tree[$key]['parent']) && isset($this->_tree[$this->_tree[$key]['parent']]['obj'])) {
 			$ret[$uplevel] =& $this->_tree[$this->_tree[$key]['parent']]['obj'];
@@ -212,7 +212,7 @@
 	 * @param   integer $key             ID of the object to display as the root of select options
 	 * @return  string  HTML select box
 	 **/
-	function &makeSelBox($name, $fieldName, $prefix='-', $selected='', $addEmptyOption = false, $key=0)
+	function makeSelBox($name, $fieldName, $prefix='-', $selected='', $addEmptyOption = false, $key=0)
     {
         $ret = '<select name='.$name.'>';
         if (false != $addEmptyOption) {

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/class/xml/rss/xmlrss2parser.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/class/xml/rss/xmlrss2parser.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/class/xml/rss/xmlrss2parser.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -101,7 +101,8 @@
             if (isset($this->_imageData[$name])) {
                 return $this->_imageData[$name];
             }
-            return false;
+            $return = false;
+            return $return;
         }
         return $this->_imageData;
     }
@@ -591,7 +592,8 @@
 
     function handleEndElement(&$parser)
     {
-        $parser->setItems($parser->getTempArr());
+    	$items =& $parser->getTempArr();
+        $parser->setItems( $items );
     }
 }
 

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopsblock.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopsblock.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopsblock.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -130,7 +130,7 @@
     * @param $c_type    type of block content
     * @returns string
     */
-    function &getContent($format = 'S', $c_type = 'T')
+    function getContent($format = 'S', $c_type = 'T')
     {
         switch ( $format ) {
         case 'S':
@@ -164,7 +164,7 @@
         }
     }
 
-    function &buildBlock()
+    function buildBlock()
     {
         global $xoopsConfig, $xoopsOption;
         $block = array();
@@ -213,7 +213,7 @@
     * If position is 1, content in DB is positioned
     * after the original content
     */
-    function &buildContent($position,$content="",$contentdb="")
+    function buildContent($position,$content="",$contentdb="")
     {
         if ( $position == 0 ) {
             $ret = $contentdb.$content;
@@ -223,7 +223,7 @@
         return $ret;
     }
 
-    function &buildTitle($originaltitle, $newtitle="")
+    function buildTitle($originaltitle, $newtitle="")
     {
         if ($newtitle != "") {
             $ret = $newtitle;
@@ -288,7 +288,7 @@
     * @param $orderby   order of the blocks
     * @returns array of block objects
     */
-    function &getAllBlocksByGroup($groupid, $asobject=true, $side=null, $visible=null, $orderby="b.weight,b.bid", $isactive=1)
+    function getAllBlocksByGroup($groupid, $asobject=true, $side=null, $visible=null, $orderby="b.weight,b.bid", $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();
@@ -342,7 +342,7 @@
         return $ret;
     }
 
-    function &getAllBlocks($rettype="object", $side=null, $visible=null, $orderby="side,weight,bid", $isactive=1)
+    function getAllBlocks($rettype="object", $side=null, $visible=null, $orderby="side,weight,bid", $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();
@@ -391,7 +391,7 @@
         return $ret;
     }
 
-    function &getByModule($moduleid, $asobject=true)
+    function getByModule($moduleid, $asobject=true)
     {
         $db =& Database::getInstance();
         if ( $asobject == true ) {
@@ -411,7 +411,7 @@
         return $ret;
     }
 
-    function &getAllByGroupModule($groupid, $module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
+    function getAllByGroupModule($groupid, $module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();
@@ -460,7 +460,7 @@
         return $ret;
     }
 
-    function &getNonGroupedBlocks($module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
+    function getNonGroupedBlocks($module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopscomments.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopscomments.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopscomments.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -136,7 +136,7 @@
 		return ($size + 1);
 	}
 
-	function &getCommentTree()
+	function getCommentTree()
 	{
 		$mytree = new XoopsTree($this->ctable, "comment_id", "pid");
 		$ret = array();

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopsform/form.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopsform/form.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopsform/form.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -228,14 +228,15 @@
      * @return object  reference to a {@link XoopsFormElement}, false if not found
 	 */
 	function &getElementByName($name){
-		$elements =& $this->getElements(true);
+		$elements = $this->getElements(true);
 		$count = count($elements);
 		for ($i = 0; $i < $count; $i++) {
 			if ($name == $elements[$i]->getName()) {
 				return $elements[$i];
 			}
 		}
-		return false;
+		$elt = false;
+		return $elt;
 	}
 
 	/**
@@ -276,7 +277,7 @@
 	 * @param	string 	$name	the "name" attribute of a form element
 	 * @return	string 	the "value" attribute assigned to a form element, null if not set
 	 */
-	function &getElementValue($name){
+	function getElementValue($name){
 		$ele =& $this->getElementByName($name);
 		if (is_object($ele) && method_exists($ele, 'getValue')) {
 			return $ele->getValue($value);
@@ -289,7 +290,7 @@
 	 * 
 	 * @return	array 	array of name/value pairs assigned to form elements
 	 */
-	function &getElementValues(){
+	function getElementValues(){
 		// will not use getElementByName() for performance..
 		$elements =& $this->getElements(true);
 		$count = count($elements);
@@ -321,6 +322,8 @@
 		if (isset($this->_extra)) {
 			return $this->_extra;
 		}
+		$extra = null;
+		return $extra;
 	}
 
 	/**

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopslists.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopslists.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopslists.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -34,7 +34,7 @@
 	define("XOOPS_LISTS_INCLUDED",1);
 	class XoopsLists
 	{
-		function &getTimeZoneList()
+		function getTimeZoneList()
 		{
 			include_once XOOPS_ROOT_PATH.'/language/'.$GLOBALS['xoopsConfig']['language'].'/timezone.php';
 			$time_zone_list = array ("-12" => _TZ_GMTM12, "-11" => _TZ_GMTM11, "-10" => _TZ_GMTM10, "-9" => _TZ_GMTM9, "-8" => _TZ_GMTM8, "-7" => _TZ_GMTM7, "-6" => _TZ_GMTM6, "-5" => _TZ_GMTM5, "-4" => _TZ_GMTM4, "-3.5" => _TZ_GMTM35, "-3" => _TZ_GMTM3, "-2" => _TZ_GMTM2, "-1" => _TZ_GMTM1, "0" => _TZ_GMT0, "1" => _TZ_GMTP1, "2" => _TZ_GMTP2, "3" => _TZ_GMTP3, "3.5" => _TZ_GMTP35, "4" => _TZ_GMTP4, "4.5" => _TZ_GMTP45, "5" => _TZ_GMTP5, "5.5" => _TZ_GMTP55, "6" => _TZ_GMTP6, "7" => _TZ_GMTP7, "8" => _TZ_GMTP8, "9" => _TZ_GMTP9, "9.5" => _TZ_GMTP95, "10" => _TZ_GMTP10, "11" => _TZ_GMTP11, "12" => _TZ_GMTP12);
@@ -44,7 +44,7 @@
 		/*
 		 * gets list of themes folder from themes directory
 		 */
-		function &getThemesList()
+		function getThemesList()
 		{
 			return XoopsLists::getDirListAsArray(XOOPS_THEME_PATH.'/');
 		}
@@ -52,7 +52,7 @@
 		/*
 		 * gets a list of module folders from the modules directory
 		 */
-		function &getModulesList()
+		function getModulesList()
 		{
 			return XoopsLists::getDirListAsArray(XOOPS_ROOT_PATH."/modules/");
 		}
@@ -60,7 +60,7 @@
 		/*
 		 * gets list of name of directories inside a directory
 		 */
-		function &getDirListAsArray($dirname)
+		function getDirListAsArray($dirname)
 		{
 			$dirlist = array();
 			if (is_dir($dirname) && $handle = opendir($dirname)) {
@@ -81,7 +81,7 @@
 		/*
 		 *  gets list of all files in a directory
 		 */
-		function &getFileListAsArray($dirname, $prefix="")
+		function getFileListAsArray($dirname, $prefix="")
 		{
 			$filelist = array();
 			if (substr($dirname, -1) == '/') {
@@ -104,7 +104,7 @@
 		/*
 		 *  gets list of image file names in a directory
 		 */
-		function &getImgListAsArray($dirname, $prefix="")
+		function getImgListAsArray($dirname, $prefix="")
 		{
 			$filelist = array();
 			if ($handle = opendir($dirname)) {
@@ -124,7 +124,7 @@
 		/*
 		 *  gets list of html file names in a certain directory
 		*/
-		function &getHtmlListAsArray($dirname, $prefix="")
+		function getHtmlListAsArray($dirname, $prefix="")
 		{
 			$filelist = array();
 			if ($handle = opendir($dirname)) {
@@ -149,7 +149,7 @@
 		 *  gets list of avatar file names in a certain directory
 		 *  if directory is not specified, default directory will be searched
 		 */
-		function &getAvatarsList($avatar_dir="")
+		function getAvatarsList($avatar_dir="")
 		{
 			$avatars = array();
 			if ( $avatar_dir != "" ) {
@@ -163,7 +163,7 @@
 		/*
 		 *  gets list of all avatar image files inside default avatars directory
 		 */
-		function &getAllAvatarsList()
+		function getAllAvatarsList()
 		{
 			$avatars = array();
 			$dirlist = array();
@@ -182,7 +182,7 @@
 		*  gets list of subject icon image file names in a certain directory
 		*  if directory is not specified, default directory will be searched
 		*/
-		function &getSubjectsList($sub_dir="")
+		function getSubjectsList($sub_dir="")
 		{
 			$subjects = array();
 			if($sub_dir != ""){
@@ -196,14 +196,14 @@
 		/*
 		 * gets list of language folders inside default language directory
 		 */
-		function &getLangList()
+		function getLangList()
 		{
 			$lang_list = array();
 			$lang_list =& XoopsLists::getDirListAsArray(XOOPS_ROOT_PATH."/language/");
 			return $lang_list;
 		}
 
-		function &getCountryList()
+		function getCountryList()
 		{
 			$country_list = array (
 				""   => "-",
@@ -456,7 +456,7 @@
     		return $country_list;
 		}
 
-		function &getHtmlList()
+		function getHtmlList()
 		{
 			$html_list = array (
 				"a" => "&lt;a&gt;",
@@ -516,7 +516,7 @@
     		return $html_list;
 		}
 
-		function &getUserRankList()
+		function getUserRankList()
 		{
 			$db =& Database::getInstance();
 			$myts =& MyTextSanitizer::getInstance();

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopstopic.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopstopic.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/class/xoopstopic.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -315,7 +315,7 @@
 		return $ret;
 	}
 
-	function &getTopicsList()
+	function getTopicsList()
 	{
 		$result = $this->db->query('SELECT topic_id, topic_pid, topic_title FROM '.$this->table);
 		$ret = array();

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/include/functions.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/include/functions.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/include/functions.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -462,14 +462,18 @@
 function &getMailer()
 {
     global $xoopsConfig;
+    $inst = false;
     include_once XOOPS_ROOT_PATH."/class/xoopsmailer.php";
     if ( file_exists(XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/xoopsmailerlocal.php") ) {
         include_once XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/xoopsmailerlocal.php";
         if ( class_exists("XoopsMailerLocal") ) {
-            return new XoopsMailerLocal();
+            $inst =& new XoopsMailerLocal();
         }
     }
-    return new XoopsMailer();
+    if ( !$inst ) {
+    	$inst =& new XoopsMailer();
+    }
+    return $inst;
 }
 
 function &xoops_gethandler($name, $optional = false )
@@ -482,13 +486,17 @@
         }
         $class = 'Xoops'.ucfirst($name).'Handler';
         if (class_exists($class)) {
-            $handlers[$name] = new $class($GLOBALS['xoopsDB']);
+            $handlers[$name] =& new $class($GLOBALS['xoopsDB']);
         }
     }
     if (!isset($handlers[$name]) && !$optional ) {
         trigger_error('Class <b>'.$class.'</b> does not exist<br />Handler Name: '.$name, E_USER_ERROR);
     }
-    return isset($handlers[$name]) ? $handlers[$name] : false;
+    if ( isset($handlers[$name]) ) {
+    	return $handlers[$name];
+    }
+    $inst = false;
+    return $inst;
 }
 
 function &xoops_getmodulehandler($name = null, $module_dir = null, $optional = false)
@@ -512,13 +520,18 @@
         }
         $class = ucfirst(strtolower($module_dir)).ucfirst($name).'Handler';
         if (class_exists($class)) {
-            $handlers[$module_dir][$name] = new $class($GLOBALS['xoopsDB']);
+            $handlers[$module_dir][$name] =& new $class($GLOBALS['xoopsDB']);
         }
     }
     if (!isset($handlers[$module_dir][$name]) && !$optional) {
         trigger_error('Handler does not exist<br />Module: '.$module_dir.'<br />Name: '.$name, E_USER_ERROR);
     }
-    return isset($handlers[$module_dir][$name]) ? $handlers[$module_dir][$name] : false;
+    if ( isset($handlers[$module_dir][$name]) ) {
+    	return $handlers[$module_dir][$name];
+    }
+    $inst = false;
+    return $inst;
+
 }
 
 function xoops_getrank($rank_id =0, $posts = 0)
@@ -655,7 +668,7 @@
     return $gperm_handler->deleteByModule($module_id, $perm_name, $item_id);
 }
 
-function &xoops_utf8_encode(&$text)
+function xoops_utf8_encode(&$text)
 {
     if (XOOPS_USE_MULTIBYTES == 1) {
         if (function_exists('mb_convert_encoding')) {
@@ -666,7 +679,7 @@
     return utf8_encode($text);
 }
 
-function &xoops_convert_encoding(&$text)
+function xoops_convert_encoding(&$text)
 {
     return xoops_utf8_encode($text);
 }

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/avatar.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/avatar.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/avatar.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -85,7 +85,8 @@
 
     function &get($id)
     {
-        $id = intval($id);
+        $avatar = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('avatar').' WHERE avatar_id='.$id;
             if (!$result = $this->db->query($sql)) {
@@ -98,7 +99,7 @@
                 return $avatar;
             }
         }
-        return false;
+        return $avatar;
     }
 
     function insert(&$avatar)
@@ -203,7 +204,7 @@
         return true;
     }
 
-    function &getUser(&$avatar){
+    function getUser(&$avatar){
         $ret = array();
         if (strtolower(get_class($avatar)) != 'xoopsavatar') {
             return $ret;
@@ -218,7 +219,7 @@
         return $ret;
     }
 
-    function &getList($avatar_type = null, $avatar_display = null)
+    function getList($avatar_type = null, $avatar_display = null)
     {
         $criteria = new CriteriaCompo();
         if (isset($avatar_type)) {

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/block.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/block.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/block.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -104,7 +104,7 @@
 	 * <li>T : use text sanitizater (smilies disabled)</ul>
 	 * @return string content for output
      **/
-    function &getContent($format = 'S', $c_type = 'T')
+    function getContent($format = 'S', $c_type = 'T')
     {
         switch ( $format ) {
         case 'S':
@@ -207,20 +207,19 @@
      **/
     function &get($id)
     {
-        $id = intval($id);
+        $block = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('newblocks').' WHERE bid='.$id;
-            if (!$result = $this->db->query($sql)) {
-                return false;
+            if ( $result = $this->db->query($sql) ) {
+	            $numrows = $this->db->getRowsNum($result);
+	            if ($numrows == 1) {
+	                $block = new XoopsBlock();
+	                $block->assignVars($this->db->fetchArray($result));
+	            }
             }
-            $numrows = $this->db->getRowsNum($result);
-            if ($numrows == 1) {
-                $block = new XoopsBlock();
-                $block->assignVars($this->db->fetchArray($result));
-                return $block;
-            }
         }
-        return false;
+        return $block;
     }
 
     /**
@@ -286,7 +285,7 @@
 	 * @param bool $id_as_key should the blocks' bid be the key for the returned array?
 	 * @return array {@link XoopsBlock}s matching the conditions
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -319,7 +318,7 @@
 	 * @param string $criteria conditions to match
 	 * @return array array of blocks matching the conditions 
      **/
-    function &getList($criteria = null)
+    function getList($criteria = null)
     {
         $blocks =& $this->getObjects($criteria, true);
         $ret = array();

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/comment.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/comment.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/comment.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -133,20 +133,20 @@
      **/
     function &get($id)
     {
-        $id = intval($id);
+        $comment = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('xoopscomments').' WHERE com_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $comment;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $comment = new XoopsComment();
                 $comment->assignVars($this->db->fetchArray($result));
-                return $comment;
             }
         }
-        return false;
+        return $comment;
     }
 
     /**
@@ -213,7 +213,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -288,9 +288,9 @@
      * 
      * @return  array   Array of raw database records
      **/
-    function &getList($criteria = null)
+    function getList($criteria = null)
     {
-        $comments =& $this->getObjects($criteria, true);
+        $comments = $this->getObjects($criteria, true);
         $ret = array();
         foreach (array_keys($comments) as $i) {
             $ret[$i] = $comments[$i]->getVar('com_title');
@@ -310,7 +310,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getByItemId($module_id, $item_id, $order = null, $status = null, $limit = null, $start = 0)
+    function getByItemId($module_id, $item_id, $order = null, $status = null, $limit = null, $start = 0)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));
@@ -336,7 +336,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getCountByItemId($module_id, $item_id, $status = null)
+    function getCountByItemId($module_id, $item_id, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));
@@ -357,7 +357,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getTopComments($module_id, $item_id, $order, $status = null)
+    function getTopComments($module_id, $item_id, $order, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));
@@ -378,7 +378,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getThread($comment_rootid, $comment_id, $status = null)
+    function getThread($comment_rootid, $comment_id, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_rootid', intval($comment_rootid)));
         $criteria->add(new Criteria('com_id', intval($comment_id), '>='));

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/config.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/config.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/config.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -103,7 +103,8 @@
      */
     function &createConfig()
     {
-        return $this->_cHandler->create();
+    	$instance =& $this->_cHandler->create();
+        return $instance;
     }
 
     /**
@@ -183,7 +184,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigItem} objects
      */
-    function &getConfigs($criteria = null, $id_as_key = false, $with_options = false)
+    function getConfigs($criteria = null, $id_as_key = false, $with_options = false)
     {
         return $this->_cHandler->getObjects($criteria, $id_as_key);
     }
@@ -206,7 +207,7 @@
      * 
      * @return	array   array of {@link XoopsConfig}s 
      */
-    function &getConfigsByCat($category, $module = 0)
+    function getConfigsByCat($category, $module = 0)
     {
         static $_cachedConfigs;
 		if (!empty($_cachedConfigs[$module][$category])) {
@@ -233,8 +234,9 @@
      * 
      * @return	object  {@link XoopsConfigOption} 
      */
-    function &createConfigOption(){
-        return $this->_oHandler->create();
+    function &createConfigOption() {
+    	$inst =& $this->_oHandler->create();
+        return $inst;
     }
 
     /**
@@ -244,9 +246,9 @@
      * 
      * @return	object  {@link XoopsConfigOption} 
      */
-    function &getConfigOption($id)
-    {
-        return $this->_oHandler->get($id);
+    function &getConfigOption($id) {
+    	$inst =& $this->_oHandler->get($id);
+        return $inst;
     }
 
     /**
@@ -257,7 +259,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigOption}s
      */
-    function &getConfigOptions($criteria = null, $id_as_key = false)
+    function getConfigOptions($criteria = null, $id_as_key = false)
     {
         return $this->_oHandler->getObjects($criteria, $id_as_key);
     }
@@ -282,7 +284,7 @@
      * 
      * @return	array   Associative array of name=>value pairs.
      */
-    function &getConfigList($conf_modid, $conf_catid = 0)
+    function getConfigList($conf_modid, $conf_catid = 0)
     {
 		if (!empty($this->_cachedConfigs[$conf_modid][$conf_catid])) {
 			return $this->_cachedConfigs[$conf_modid][$conf_catid];

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configcategory.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configcategory.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configcategory.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -105,22 +105,21 @@
      * 
      * @return	object  {@link XoopsConfigCategory}, FALSE on fail
      */
-    function &get($id)
-    {
-        $id = intval($id);
+    function &get($id) {
+        $confcat = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('configcategory').' WHERE confcat_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $confcat;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $confcat = new XoopsConfigCategory();
                 $confcat->assignVars($this->db->fetchArray($result), false);
-                return $confcat;
             }
         }
-        return false;
+        return $confcat;
     }
 
     /**
@@ -187,7 +186,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigCategory}s
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configitem.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configitem.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configitem.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -90,7 +90,7 @@
      * 
      * @return	string
      */
-    function &getConfValueForOutput()
+    function getConfValueForOutput()
     {
         switch ($this->getVar('conf_valuetype')) {
         case 'int':
@@ -201,21 +201,21 @@
      */
     function &get($id)
     {
-        $id = intval($id);
+        $config = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('config').' WHERE conf_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $config;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $myrow = $this->db->fetchArray($result);
                 $config = new XoopsConfigItem();
                 $config->assignVars($myrow);
-                return $config;
             }
         }
-        return false;
+        return $config;
     }
 
     /**
@@ -279,7 +279,7 @@
      * @param	bool    $id_as_key  return the config's id as key?
      * @return	array   Array of {@link XoopsConfigItem} objects
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -313,7 +313,7 @@
      * @param	object  $criteria   {@link CriteriaElement} 
      * @return	int     Count of configs matching $criteria
      */
-    function &getCount($criteria = null)
+    function getCount($criteria = null)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configoption.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configoption.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/configoption.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -104,20 +104,20 @@
      */
     function &get($id)
     {
-        $id = intval($id);
+        $confoption = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('configoption').' WHERE confop_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $confoption;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $confoption = new XoopsConfigOption();
                 $confoption->assignVars($this->db->fetchArray($result));
-                return $confoption;
             }
         }
-        return false;
+        return $confoption;
     }
 
     /**
@@ -182,7 +182,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigOption}s 
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/group.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/group.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/group.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -93,19 +93,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $group = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('groups').' WHERE groupid='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $group;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $group = new XoopsGroup();
                 $group->assignVars($this->db->fetchArray($result));
-                return $group;
             }
         }
-        return false;
+        return $group;
     }
 
     /**
@@ -169,7 +169,7 @@
      * @param bool $id_as_key should the groups' IDs be used as keys for the associative array?
      * @return mixed Array of groups
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -254,19 +254,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $mship = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('groups_users_link').' WHERE linkid='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $mship;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $mship = new XoopsMembership();
                 $mship->assignVars($this->db->fetchArray($result));
-                return $mship;
             }
         }
-        return false;
+        return $mship;
     }
 
     /**
@@ -330,7 +330,7 @@
      * @param bool $id_as_key should the ID be used as the array's key?
      * @return array array of references
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -403,7 +403,7 @@
      * objects? FALSE returns associative array.
      * @return array array of groups the user belongs to
      */
-    function &getGroupsByUser($uid)
+    function getGroupsByUser($uid)
     {
         $ret = array();
         $sql = 'SELECT groupid FROM '.$this->db->prefix('groups_users_link').' WHERE uid='.intval($uid);

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/groupperm.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/groupperm.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/groupperm.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -108,19 +108,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $perm = false;
+    	if (intval($id) > 0) {
             $sql = sprintf("SELECT * FROM %s WHERE gperm_id = %u", $this->db->prefix('group_permission'), $id);
             if ( !$result = $this->db->query($sql) ) {
-                return false;
+                return $perm;
             }
             $numrows = $this->db->getRowsNum($result);
             if ( $numrows == 1 ) {
                 $perm = new XoopsGroupPerm();
                 $perm->assignVars($this->db->fetchArray($result));
-                return $perm;
             }
         }
-        return false;
+        return $perm;
     }
 
     /**
@@ -187,7 +187,7 @@
      * 
      * @return	array   Array of {@link XoopsGroupPerm}s 
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/image.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/image.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/image.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -98,20 +98,20 @@
      **/
     function &get($id, $getbinary=true)
     {
-        $id = intval($id);
+        $image = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT i.*, b.image_body FROM '.$this->db->prefix('image').' i LEFT JOIN '.$this->db->prefix('imagebody').' b ON b.image_id=i.image_id WHERE i.image_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $image;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $image = new XoopsImage();
                 $image->assignVars($this->db->fetchArray($result));
-                return $image;
             }
         }
-        return false;
+        return $image;
     }
 
     /**
@@ -197,7 +197,7 @@
      * @param   boolean $getbinary  
      * @return  array   Array of {@link XoopsImage} objects
      **/
-    function &getObjects($criteria = null, $id_as_key = false, $getbinary = false)
+    function getObjects($criteria = null, $id_as_key = false, $getbinary = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -256,7 +256,7 @@
      * @param   bool    $image_display
      * @return  array   Array of {@link XoopsImage} objects
      **/
-    function &getList($imgcat_id, $image_display = null)
+    function getList($imgcat_id, $image_display = null)
     {
         $criteria = new CriteriaCompo(new Criteria('imgcat_id', intval($imgcat_id)));
         if (isset($image_display)) {

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imagecategory.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imagecategory.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imagecategory.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -85,19 +85,19 @@
 
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $imgcat = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('imagecategory').' WHERE imgcat_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $imgcat;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $imgcat = new XoopsImagecategory();
                 $imgcat->assignVars($this->db->fetchArray($result));
-                return $imgcat;
             }
         }
-        return false;
+        return $imgcat;
     }
 
     function insert(&$imgcat)
@@ -142,7 +142,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -186,7 +186,7 @@
         return $count;
     }
 
-    function &getList($groups = array(), $perm = 'imgcat_read', $display = null, $storetype = null)
+    function getList($groups = array(), $perm = 'imgcat_read', $display = null, $storetype = null)
     {
         $criteria = new CriteriaCompo();
         if (is_array($groups) && !empty($groups)) {

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imageset.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imageset.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imageset.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -68,19 +68,19 @@
 
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $imgset = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('imgset').' WHERE imgset_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $imgset;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $imgset = new XoopsImageset();
                 $imgset->assignVars($this->db->fetchArray($result));
-                return $imgset;
             }
         }
-        return false;
+        return $imgset;
     }
 
     function insert(&$imgset)
@@ -127,7 +127,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -187,7 +187,7 @@
         return true;
     }
 
-    function &getList($refid = null, $tplset = null)
+    function getList($refid = null, $tplset = null)
     {
         $criteria = new CriteriaCompo();
         if (isset($refid)) {

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imagesetimg.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imagesetimg.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/imagesetimg.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -68,20 +68,20 @@
 
     function &get($id)
     {
-        $id = intval($id);
+        $imgsetimg = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('imgsetimg').' WHERE imgsetimg_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $imgsetimg;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $imgsetimg = new XoopsImagesetimg();
                 $imgsetimg->assignVars($this->db->fetchArray($result));
-                return $imgsetimg;
             }
         }
-        return false;
+        return $imgsetimg;
     }
 
     function insert(&$imgsetimg)
@@ -126,7 +126,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -174,7 +174,7 @@
  * @return type documentation
  * @author Kazumi Ono <onokazu at xoops.org>
  **/
-    function &getByImageset($imgset_id, $id_as_key = false)
+    function getByImageset($imgset_id, $id_as_key = false)
     {
         return $this->getObjects(new Criteria('imgsetimg_imgset', intval($imgset_id)), $id_as_key);
     }

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/member.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/member.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/member.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -88,7 +88,8 @@
      */
     function &createGroup()
     {
-        return $this->_gHandler->create();
+        $inst =& $this->_gHandler->create();
+    	return $inst;
     }
 
     /**
@@ -98,7 +99,8 @@
      */
     function &createUser()
     {
-        return $this->_uHandler->create();
+        $inst =& $this->_uHandler->create();
+    	return $inst;
     }
 
     /**
@@ -206,7 +208,7 @@
      * @param object $criteria {@link CriteriaElement} object
      * @return array associative array of group-IDs and names
      */
-    function &getGroupList($criteria = null)
+    function getGroupList($criteria = null)
     {
         $groups =& $this->_gHandler->getObjects($criteria, true);
         $ret = array();
@@ -327,7 +329,8 @@
         $criteria->add(new Criteria('pass', md5($pwd)));
         $user =& $this->_uHandler->getObjects($criteria, false);
         if (!$user || count($user) != 1) {
-            return false;
+        	$user = false;
+            return $user;
         }
         return $user[0];
     }
@@ -345,7 +348,8 @@
         $criteria->add(new Criteria('pass', $md5pwd));
         $user =& $this->_uHandler->getObjects($criteria, false);
         if (!$user || count($user) != 1) {
-            return false;
+        	$user = false;
+            return $user;
         }
         return $user[0];
     }

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/module.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/module.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/module.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -120,7 +120,8 @@
             if ( isset($this->modinfo[$name]) ) {
                 return $this->modinfo[$name];
             }
-            return false;
+            $return = false;
+            return $return;
         }
         return $this->modinfo;
     }
@@ -144,7 +145,7 @@
      * 
      * @return	string
      */
-    function &subLink()
+    function subLink()
     {
         $ret = array();
         if ( $this->getInfo('sub') && is_array($this->getInfo('sub')) ) {
@@ -214,7 +215,7 @@
      * @param   integer $userid
      * @return  mixed   Search result.
      **/
-    function &search($term = '', $andor = 'AND', $limit = 0, $offset = 0, $userid = 0)
+    function search($term = '', $andor = 'AND', $limit = 0, $offset = 0, $userid = 0)
     {
         if ($this->getVar('hassearch') != 1) {
             return false;
@@ -254,7 +255,8 @@
     function &getByDirName($dirname)
     {
         $modhandler =& xoops_gethandler('module');
-        return $modhandler->getByDirname($dirname);
+        $inst =& $modhandler->getByDirname($dirname);
+        return $inst;
     }
     /**#@-*/
 }
@@ -316,13 +318,14 @@
         static $_cachedModule_dirname;
         static $_cachedModule_mid;
         $id = intval($id);
+		$module = false;
         if ($id > 0) {
 			if (!empty($_cachedModule_mid[$id])) {
 				return $_cachedModule_mid[$id];
 			} else {
   	        	$sql = 'SELECT * FROM '.$this->db->prefix('modules').' WHERE mid = '.$id;
   	        	if (!$result = $this->db->query($sql)) {
-  	            	return false;
+  	            	return $module;
   	        	}
   	        	$numrows = $this->db->getRowsNum($result);
   	        	if ($numrows == 1) {
@@ -335,7 +338,7 @@
   	        	}
         	}
 		}
-        return false;
+        return $module;
     }
 
     /**
@@ -352,9 +355,10 @@
 		if (!empty($_cachedModule_dirname[$dirname])) {
 			return $_cachedModule_dirname[$dirname];
 		} else {
+			$module = false;
         	$sql = "SELECT * FROM ".$this->db->prefix('modules')." WHERE dirname = '".trim($dirname)."'";
         	if (!$result = $this->db->query($sql)) {
-            	return false;
+            	return $module;
         	}
         	$numrows = $this->db->getRowsNum($result);
         	if ($numrows == 1) {
@@ -363,9 +367,8 @@
             	$module->assignVars($myrow);
 				$_cachedModule_dirname[$dirname] =& $module;
 				$_cachedModule_mid[$module->getVar('mid')] =& $module;
-            	return $module;
         	}
-        	return false;
+        	return $module;
 		}
     }
 
@@ -477,7 +480,7 @@
      * @param   boolean $id_as_key  Use the ID as key into the array
      * @return  array
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -533,7 +536,7 @@
      *      if false, array keys will be module id
      * @return  array
      **/
-    function &getList($criteria = null, $dirname_as_key = false)
+    function getList($criteria = null, $dirname_as_key = false)
     {
         $ret = array();
         $modules =& $this->getObjects($criteria, true);

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/notification.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/notification.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/notification.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -197,20 +197,20 @@
      **/
     function &get($id)
     {
-        $id = intval($id);
+        $notification = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('xoopsnotifications').' WHERE not_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $notification;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $notification = new XoopsNotification();
                 $notification->assignVars($this->db->fetchArray($result));
-                return $notification;
             }
         }
-        return false;
+        return $notification;
     }
 
 
@@ -278,7 +278,7 @@
      *
      * @return  array   Array of {@link XoopsNotification} objects
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -387,7 +387,8 @@
 		if (count($objects) == 1) {
 			return $objects[0];
 		}
-		return false;
+		$inst = false;
+		return $inst;
 	}
 
 	/**
@@ -482,7 +483,7 @@
      *
      * @return array  Array of {@link XoopsNotification} objects
      **/
-    function &getByUser ($user_id)
+    function getByUser ($user_id)
     {
         $criteria = new Criteria ('not_uid', $user_id);
         return $this->getObjects($criteria, true);
@@ -493,7 +494,7 @@
      * Get a list of notification events for the current item/mod/user
      *
      **/
-	function &getSubscribedEvents ($category, $item_id, $module_id, $user_id)
+	function getSubscribedEvents ($category, $item_id, $module_id, $user_id)
     {
         $criteria = new CriteriaCompo();
         $criteria->add (new Criteria('not_modid', $module_id));
@@ -520,7 +521,7 @@
      *
      * @return  array   Array of {@link XoopsNotification} objects
      **/
-    function &getByItemId($module_id, $item_id, $order = null, $status = null)
+    function getByItemId($module_id, $item_id, $order = null, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/object.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/object.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/object.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -274,7 +274,7 @@
     * @param string $format format to use for the output
     * @return mixed formatted value of the variable
     */
-    function &getVar($key, $format = 's')
+    function getVar($key, $format = 's')
     {
         $ret = $this->vars[$key]['value'];
         switch ($this->vars[$key]['data_type']) {
@@ -528,7 +528,7 @@
     function &xoopsClone()
     {
         $class = get_class($this);
-        $clone = new $class();
+        $clone =& new $class();
         foreach ($this->vars as $k => $v) {
             $clone->assignVar($k, $v['value']);
         }

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/online.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/online.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/online.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -133,7 +133,7 @@
      * @param	object  $criteria   {@link CriteriaElement} 
      * @return	array   Array of associative arrays of online information
      */
-    function &getAll($criteria = null)
+    function getAll($criteria = null)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/privmessage.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/privmessage.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/privmessage.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -98,20 +98,20 @@
  **/
     function &get($id)
     {
-        $id = intval($id);
+        $pm = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('priv_msgs').' WHERE msg_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $pm;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $pm = new XoopsPrivmessage();
                 $pm->assignVars($this->db->fetchArray($result));
-                return $pm;
             }
         }
-        return false;
+        return $pm;
     }
 
 /**
@@ -171,7 +171,7 @@
  * @param 	bool 	$id_as_key 	use ID as key into the array?
  * @return 	array	Array of {@link XoopsPrivmessage} objects
  **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/tplfile.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/tplfile.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/tplfile.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -49,7 +49,7 @@
 		$this->initVar('tpl_source', XOBJ_DTYPE_SOURCE, null, false);
 	}
 
-	function &getSource()
+	function getSource()
 	{
 		return $this->getVar('tpl_source');
 	}
@@ -83,7 +83,8 @@
 
     function &get($id, $getsource = false)
     {
-        $id = intval($id);
+        $tplfile = false;
+    	$id = intval($id);
         if ($id > 0) {
             if (!$getsource) {
                 $sql = 'SELECT * FROM '.$this->db->prefix('tplfile').' WHERE tpl_id='.$id;
@@ -91,16 +92,15 @@
                 $sql = 'SELECT f.*, s.tpl_source FROM '.$this->db->prefix('tplfile').' f LEFT JOIN '.$this->db->prefix('tplsource').' s  ON s.tpl_id=f.tpl_id WHERE f.tpl_id='.$id;
             }
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $tplfile;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $tplfile = new XoopsTplfile();
                 $tplfile->assignVars($this->db->fetchArray($result));
-                return $tplfile;
             }
         }
-        return false;
+        return $tplfile;
     }
 
     function loadSource(&$tplfile)
@@ -211,7 +211,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $getsource = false, $id_as_key = false)
+    function getObjects($criteria = null, $getsource = false, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -271,7 +271,7 @@
         return $ret;
     }
 
-    function &find($tplset = null, $type = null, $refid = null, $module = null, $file = null, $getsource = false)
+    function find($tplset = null, $type = null, $refid = null, $module = null, $file = null, $getsource = false)
     {
         $criteria = new CriteriaCompo();
         if (isset($tplset)) {

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/tplset.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/tplset.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/tplset.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -68,38 +68,38 @@
 
     function &get($id)
     {
-        $id = intval($id);
+        $tplset = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('tplset').' WHERE tplset_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $tplset;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $tplset = new XoopsTplset();
                 $tplset->assignVars($this->db->fetchArray($result));
-                return $tplset;
             }
         }
-        return false;
+        return $tplset;
     }
 
     function &getByName($tplset_name)
     {
-        $tplset_name = trim($tplset_name);
+        $tplset = false;
+    	$tplset_name = trim($tplset_name);
         if ($tplset_name != '') {
             $sql = 'SELECT * FROM '.$this->db->prefix('tplset').' WHERE tplset_name='.$this->db->quoteString($tplset_name);
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $tplset;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $tplset = new XoopsTplset();
                 $tplset->assignVars($this->db->fetchArray($result));
-                return $tplset;
             }
         }
-        return false;
+        return $tplset;
     }
 
     function insert(&$tplset)
@@ -146,7 +146,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -187,7 +187,7 @@
         return $count;
     }
 
-    function &getList($criteria = null)
+    function getList($criteria = null)
 	{
         $ret = array();
 		$tplsets =& $this->getObjects($criteria, true);

Modified: XoopsCore/branches/tasks/121627-refs/htdocs/kernel/user.php
===================================================================
--- XoopsCore/branches/tasks/121627-refs/htdocs/kernel/user.php	2005-11-24 23:05:10 UTC (rev 23)
+++ XoopsCore/branches/tasks/121627-refs/htdocs/kernel/user.php	2005-11-25 02:28:06 UTC (rev 24)
@@ -195,7 +195,8 @@
 	 */
 	function &groups()
     {
-        return $this->getGroups();
+        $groups =& $this->getGroups();
+    	return $groups;
     }
     /**
      * Is the user admin ?
@@ -482,19 +483,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $user = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('users').' WHERE uid='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $user;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $user = new XoopsUser();
                 $user->assignVars($this->db->fetchArray($result));
-                return $user;
             }
         }
-        return false;
+        return $user;
     }
 
     /**
@@ -572,7 +573,7 @@
      * @param bool $id_as_key use the UID as key for the array?
      * @return array array of {@link XoopsUser} objects
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;



From skalpa at berlios.de  Fri Nov 25 08:22:38 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 08:22:38 +0100
Subject: [Xoops4-svn] r27 - XoopsCore/branches/tasks/121476-tplset-remove/XOOPS-data/Application Support
Message-ID: <200511250722.jAP7McMM008354@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 08:22:08 +0100 (Fri, 25 Nov 2005)
New Revision: 27

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS-data/Application Support/xoops_kernel_Xoops2/
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS-data/Application Support/xoops_template_Smarty/
Removed:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS-data/Application Support/net_php_Smarty/
Log:
Updating the tplsets work branch with the latest changes done to the main 2.3 branch (the kernel draft and refs fixes)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS-data/Application Support/xoops_kernel_Xoops2 (from rev 25, XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/xoops_kernel_Xoops2)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS-data/Application Support/xoops_template_Smarty (from rev 25, XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/xoops_template_Smarty)



From skalpa at berlios.de  Fri Nov 25 08:23:36 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 08:23:36 +0100
Subject: [Xoops4-svn] r28 - XoopsCore/branches/tasks/121476-tplset-remove/XOOPS-data/Caches
Message-ID: <200511250723.jAP7Nava008701@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 08:23:30 +0100 (Fri, 25 Nov 2005)
New Revision: 28

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS-data/Caches/xoops_template_Smarty/
Removed:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS-data/Caches/net_php_Smarty/
Log:
Updating the tplsets work branch with the latest changes done to the main 2.3 branch (the kernel draft and refs fixes)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS-data/Caches/xoops_template_Smarty (from rev 25, XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Caches/xoops_template_Smarty)



From skalpa at berlios.de  Fri Nov 25 08:00:04 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 08:00:04 +0100
Subject: [Xoops4-svn] r25 - in XoopsCore/branches/2.3.x/2.3-main: XOOPS-data/Application Support htdocs/class htdocs/class/database htdocs/class/xml/rss htdocs/class/xoopsform htdocs/include htdocs/kernel
Message-ID: <200511250700.jAP7041l031201@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 07:58:43 +0100 (Fri, 25 Nov 2005)
New Revision: 25

Added:
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/xoops_kernel_Xoops2/
Removed:
   XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/xoops_kernel_Xoops2/
Modified:
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/database/database.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/database/mysqldatabase.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/module.textsanitizer.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/tree.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xml/rss/xmlrss2parser.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopsblock.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopscomments.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopsform/form.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopslists.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopstopic.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/include/functions.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/avatar.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/block.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/comment.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/config.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configcategory.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configitem.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configoption.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/group.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/groupperm.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/image.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imagecategory.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imageset.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imagesetimg.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/member.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/module.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/notification.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/object.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/online.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/privmessage.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/tplfile.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/tplset.php
   XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/user.php
Log:
Merged the 121627 task changes (references fixes for 4.4/5.1) to the main 2.3 branch

Copied: XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/xoops_kernel_Xoops2 (from rev 24, XoopsCore/branches/2.3.x/2.3-main/XOOPS-data/Application Support/xoops_kernel_Xoops2)

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/database/database.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/database/database.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/database/database.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -123,9 +123,9 @@
 class Database
 {
 
-	function &getInstance()
-	{
-		return XoopsDatabaseFactory::getDatabaseConnection();
+	function &getInstance() {
+		$inst =& XoopsDatabaseFactory::getDatabaseConnection();
+		return $inst;
 	}
 }
 

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/database/mysqldatabase.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/database/mysqldatabase.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/database/mysqldatabase.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -228,7 +228,7 @@
      * @return resource query result or FALSE if successful
      * or TRUE if successful and no result
      */
-    function &queryF($sql, $limit=0, $start=0)
+    function queryF($sql, $limit=0, $start=0)
 	{
 		if ( !empty($limit) ) {
 			if (empty($start)) {
@@ -258,7 +258,7 @@
      * 
      * @abstract
 	 */
-	function &query($sql, $limit=0, $start=0)
+	function query($sql, $limit=0, $start=0)
 	{
 
     }
@@ -346,7 +346,7 @@
      * @return resource query result or FALSE if successful
      * or TRUE if successful and no result
      */
-	function &query($sql, $limit=0, $start=0)
+	function query($sql, $limit=0, $start=0)
 	{
 		return $this->queryF($sql, $limit, $start);
 	}
@@ -378,7 +378,7 @@
      * @param int $start offset of first record to return
      * @return resource query result or FALSE if unsuccessful
      */
-	function &query($sql, $limit=0, $start=0)
+	function query($sql, $limit=0, $start=0)
 	{
 	    $sql = ltrim($sql);
 		if (strtolower(substr($sql, 0, 6)) == 'select') {

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/module.textsanitizer.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/module.textsanitizer.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/module.textsanitizer.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -103,20 +103,20 @@
      *
      * @return	string
      */
-    function &smiley($message)
+    function smiley($message)
 	{
 		$db =& Database::getInstance();
 		if (count($this->smileys) == 0) {
 			if ($getsmiles = $db->query("SELECT * FROM ".$db->prefix("smiles"))){
 				while ($smiles = $db->fetchArray($getsmiles)) {
-					$message =& str_replace($smiles['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smiles['smile_url']).'" alt="" />', $message);
+					$message = str_replace($smiles['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smiles['smile_url']).'" alt="" />', $message);
 					array_push($this->smileys, $smiles);
 				}
 			}
 		} 
 		elseif (is_array($this->smileys)) {
 			foreach ($this->smileys as $smile) {
-				$message =& str_replace($smile['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smile['smile_url']).'" alt="" />', $message);
+				$message = str_replace($smile['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smile['smile_url']).'" alt="" />', $message);
 			}
 		}
 		return $message;
@@ -128,7 +128,7 @@
 	 * @param   string  $text
 	 * @return  string
 	 **/
-	function &makeClickable(&$text)
+	function makeClickable(&$text)
 	{
 		$patterns = array("/(^|[^]_a-z0-9-=\"'\/])([a-z]+?):\/\/([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/])www\.([a-z0-9\-]+)\.([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/])ftp\.([a-z0-9\-]+)\.([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/:\.])([a-z0-9\-_\.]+?)@([^, \r\n\"\(\)'<>\[\]]+)/i");
 		$replacements = array("\\1<a href=\"\\2://\\3\" target=\"_blank\">\\2://\\3</a>", "\\1<a href=\"http://www.\\2.\\3\" target=\"_blank\">www.\\2.\\3</a>", "\\1<a href=\"ftp://ftp.\\2.\\3\" target=\"_blank\">ftp.\\2.\\3</a>", "\\1<a href=\"mailto:\\2@\\3\">\\2@\\3</a>");
@@ -203,7 +203,8 @@
 		$replacements[] = "(tammairanslip)";
 		$patterns[] = "/a{$c}b{$c}o{$c}u{$c}t{$c}:/si";
 		$replacements[] = "about :";
-		return preg_replace($patterns, $replacements, $text);
+		$text = preg_replace($patterns, $replacements, $text);
+		return $text;
 	}
 
 	/**
@@ -213,7 +214,7 @@
      *
      * @return	string
 	 */
-	function &nl2Br($text)
+	function nl2Br($text)
 	{
 		return preg_replace("/(\015\012)|(\015)|(\012)/","<br />",$text);
 	}
@@ -224,10 +225,10 @@
 	 * @param   string  $text
 	 * @return  string
 	 **/
-	function &addSlashes($text)
+	function addSlashes($text)
 	{
 		if (!get_magic_quotes_gpc()) {
-			$text =& addslashes($text);
+			$text = addslashes($text);
 		}
 		return $text;
 	}
@@ -238,10 +239,10 @@
     *
     * @return	string
 	*/
-	function &stripSlashesGPC($text)
+	function stripSlashesGPC($text)
 	{
 		if (get_magic_quotes_gpc()) {
-			$text =& stripslashes($text);
+			$text = stripslashes($text);
 		}
 		return $text;
 	}
@@ -253,7 +254,7 @@
     *
     * @return	string
 	*/
-	function &htmlSpecialChars($text)
+	function htmlSpecialChars($text)
 	{
 		//return preg_replace("/&amp;/i", '&', htmlspecialchars($text, ENT_QUOTES));
 		return preg_replace(array("/&amp;/i", "/&nbsp;/i"), array('&', '&amp;nbsp;'), htmlspecialchars($text, ENT_QUOTES));
@@ -265,7 +266,7 @@
 	 * @param   string  $text
 	 * @return  string
 	 **/
-	function &undoHtmlSpecialChars(&$text)
+	function undoHtmlSpecialChars( $text )
 	{
 		return preg_replace(array("/&gt;/i", "/&lt;/i", "/&quot;/i", "/&#039;/i"), array(">", "<", "\"", "'"), $text);
 	}
@@ -285,28 +286,28 @@
 	{
 		if ($html != 1) {
 			// html not allowed
-			$text =& $this->htmlSpecialChars($text);
+			$text = $this->htmlSpecialChars($text);
 		}
-		$text =& $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
-		$text =& $this->makeClickable($text);
+		$text = $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
+		$text = $this->makeClickable($text);
 		if ($smiley != 0) {
 			// process smiley
-			$text =& $this->smiley($text);
+			$text = $this->smiley($text);
 		}
 		if ($xcode != 0) {
 			// decode xcode
 			if ($image != 0) {
 				// image allowed
-				$text =& $this->xoopsCodeDecode($text);
-            		} else {
-                		// image not allowed
-                		$text =& $this->xoopsCodeDecode($text, 0);
+				$text = $this->xoopsCodeDecode($text);
+			} else {
+				// image not allowed
+				$text = $this->xoopsCodeDecode($text, 0);
 			}
 		}
 		if ($br != 0) {
-			$text =& $this->nl2Br($text);
+			$text = $this->nl2Br($text);
 		}
-		$text =& $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
+		$text = $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
 		return $text;
 	}
 
@@ -323,31 +324,31 @@
 	 **/
 	function &previewTarea(&$text, $html = 0, $smiley = 1, $xcode = 1, $image = 1, $br = 1)
 	{
-		$text =& $this->stripSlashesGPC($text);
+		$text = $this->stripSlashesGPC($text);
 		if ($html != 1) {
 			// html not allowed
-			$text =& $this->htmlSpecialChars($text);
+			$text = $this->htmlSpecialChars($text);
 		}
-		$text =& $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
-		$text =& $this->makeClickable($text);
+		$text = $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
+		$text = $this->makeClickable($text);
 		if ($smiley != 0) {
 			// process smiley
-			$text =& $this->smiley($text);
+			$text = $this->smiley($text);
 		}
 		if ($xcode != 0) {
 			// decode xcode
 			if ($image != 0) {
 				// image allowed
-				$text =& $this->xoopsCodeDecode($text);
+				$text = $this->xoopsCodeDecode($text);
 			} else {
 				// image not allowed
-				$text =& $this->xoopsCodeDecode($text, 0);
+				$text = $this->xoopsCodeDecode($text, 0);
 			}
 		}
 		if ($br != 0) {
-			$text =& $this->nl2Br($text);
+			$text = $this->nl2Br($text);
 		}
-		$text =& $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
+		$text = $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
 		return $text;
 	}
 
@@ -525,7 +526,8 @@
 
 	function &makeTareaData4Preview(&$text, $html=1, $smiley=1, $xcode=1)
 	{
-		return $this->previewTarea($text, $html, $smiley, $xcode);
+		$text = $this->previewTarea($text, $html, $smiley, $xcode);
+		return $text;
 	}
 
 	function makeTareaData4PreviewInForm($text)
@@ -540,30 +542,30 @@
 		return $this->htmlSpecialChars($text);
 	}
 
-	function &oopsStripSlashesGPC($text)
+	function oopsStripSlashesGPC($text)
 	{
 		return $this->stripSlashesGPC($text);
 	}
 
-	function &oopsStripSlashesRT($text)
+	function oopsStripSlashesRT($text)
 	{
 		if (get_magic_quotes_runtime()) {
-			$text =& stripslashes($text);
+			$text = stripslashes($text);
 		}
 		return $text;
 	}
 
-	function &oopsAddSlashes($text)
+	function oopsAddSlashes($text)
 	{
 		return $this->addSlashes($text);
 	}
 
-	function &oopsHtmlSpecialChars($text)
+	function oopsHtmlSpecialChars($text)
 	{
 		return $this->htmlSpecialChars($text);
 	}
 
-	function &oopsNl2Br($text)
+	function oopsNl2Br($text)
 	{
 		return $this->nl2br($text);
 	}

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/tree.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/tree.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/tree.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -115,7 +115,7 @@
 	 * @param   string  $key    ID of the parent object
 	 * @return  array   Array of children of the parent
 	 **/
-	function &getFirstChild($key)
+	function getFirstChild($key)
 	{
 		$ret = array();
 		if (isset($this->_tree[$key]['child'])) {
@@ -133,7 +133,7 @@
 	 * @param   array   $ret    (Empty when called from client) Array of children from previous recursions.
 	 * @return  array   Array of child nodes.
 	 **/
-	function &getAllChild($key, $ret = array())
+	function getAllChild($key, $ret = array())
 	{
 		if (isset($this->_tree[$key]['child'])) {
 			foreach ($this->_tree[$key]['child'] as $childkey) {
@@ -156,7 +156,7 @@
 	 * @param   int $uplevel (empty when called from outside) level of recursion
 	 * @return  array   Array of parent nodes. 
 	 **/
-	function &getAllParent($key, $ret = array(), $uplevel = 1)
+	function getAllParent($key, $ret = array(), $uplevel = 1)
 	{
 		if (isset($this->_tree[$key]['parent']) && isset($this->_tree[$this->_tree[$key]['parent']]['obj'])) {
 			$ret[$uplevel] =& $this->_tree[$this->_tree[$key]['parent']]['obj'];
@@ -212,7 +212,7 @@
 	 * @param   integer $key             ID of the object to display as the root of select options
 	 * @return  string  HTML select box
 	 **/
-	function &makeSelBox($name, $fieldName, $prefix='-', $selected='', $addEmptyOption = false, $key=0)
+	function makeSelBox($name, $fieldName, $prefix='-', $selected='', $addEmptyOption = false, $key=0)
     {
         $ret = '<select name='.$name.'>';
         if (false != $addEmptyOption) {

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xml/rss/xmlrss2parser.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xml/rss/xmlrss2parser.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xml/rss/xmlrss2parser.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -101,7 +101,8 @@
             if (isset($this->_imageData[$name])) {
                 return $this->_imageData[$name];
             }
-            return false;
+            $return = false;
+            return $return;
         }
         return $this->_imageData;
     }
@@ -591,7 +592,8 @@
 
     function handleEndElement(&$parser)
     {
-        $parser->setItems($parser->getTempArr());
+    	$items =& $parser->getTempArr();
+        $parser->setItems( $items );
     }
 }
 

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopsblock.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopsblock.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopsblock.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -130,7 +130,7 @@
     * @param $c_type    type of block content
     * @returns string
     */
-    function &getContent($format = 'S', $c_type = 'T')
+    function getContent($format = 'S', $c_type = 'T')
     {
         switch ( $format ) {
         case 'S':
@@ -164,7 +164,7 @@
         }
     }
 
-    function &buildBlock()
+    function buildBlock()
     {
         global $xoopsConfig, $xoopsOption;
         $block = array();
@@ -213,7 +213,7 @@
     * If position is 1, content in DB is positioned
     * after the original content
     */
-    function &buildContent($position,$content="",$contentdb="")
+    function buildContent($position,$content="",$contentdb="")
     {
         if ( $position == 0 ) {
             $ret = $contentdb.$content;
@@ -223,7 +223,7 @@
         return $ret;
     }
 
-    function &buildTitle($originaltitle, $newtitle="")
+    function buildTitle($originaltitle, $newtitle="")
     {
         if ($newtitle != "") {
             $ret = $newtitle;
@@ -288,7 +288,7 @@
     * @param $orderby   order of the blocks
     * @returns array of block objects
     */
-    function &getAllBlocksByGroup($groupid, $asobject=true, $side=null, $visible=null, $orderby="b.weight,b.bid", $isactive=1)
+    function getAllBlocksByGroup($groupid, $asobject=true, $side=null, $visible=null, $orderby="b.weight,b.bid", $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();
@@ -342,7 +342,7 @@
         return $ret;
     }
 
-    function &getAllBlocks($rettype="object", $side=null, $visible=null, $orderby="side,weight,bid", $isactive=1)
+    function getAllBlocks($rettype="object", $side=null, $visible=null, $orderby="side,weight,bid", $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();
@@ -391,7 +391,7 @@
         return $ret;
     }
 
-    function &getByModule($moduleid, $asobject=true)
+    function getByModule($moduleid, $asobject=true)
     {
         $db =& Database::getInstance();
         if ( $asobject == true ) {
@@ -411,7 +411,7 @@
         return $ret;
     }
 
-    function &getAllByGroupModule($groupid, $module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
+    function getAllByGroupModule($groupid, $module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();
@@ -460,7 +460,7 @@
         return $ret;
     }
 
-    function &getNonGroupedBlocks($module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
+    function getNonGroupedBlocks($module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopscomments.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopscomments.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopscomments.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -136,7 +136,7 @@
 		return ($size + 1);
 	}
 
-	function &getCommentTree()
+	function getCommentTree()
 	{
 		$mytree = new XoopsTree($this->ctable, "comment_id", "pid");
 		$ret = array();

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopsform/form.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopsform/form.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopsform/form.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -228,14 +228,15 @@
      * @return object  reference to a {@link XoopsFormElement}, false if not found
 	 */
 	function &getElementByName($name){
-		$elements =& $this->getElements(true);
+		$elements = $this->getElements(true);
 		$count = count($elements);
 		for ($i = 0; $i < $count; $i++) {
 			if ($name == $elements[$i]->getName()) {
 				return $elements[$i];
 			}
 		}
-		return false;
+		$elt = false;
+		return $elt;
 	}
 
 	/**
@@ -276,7 +277,7 @@
 	 * @param	string 	$name	the "name" attribute of a form element
 	 * @return	string 	the "value" attribute assigned to a form element, null if not set
 	 */
-	function &getElementValue($name){
+	function getElementValue($name){
 		$ele =& $this->getElementByName($name);
 		if (is_object($ele) && method_exists($ele, 'getValue')) {
 			return $ele->getValue($value);
@@ -289,7 +290,7 @@
 	 * 
 	 * @return	array 	array of name/value pairs assigned to form elements
 	 */
-	function &getElementValues(){
+	function getElementValues(){
 		// will not use getElementByName() for performance..
 		$elements =& $this->getElements(true);
 		$count = count($elements);
@@ -321,6 +322,8 @@
 		if (isset($this->_extra)) {
 			return $this->_extra;
 		}
+		$extra = null;
+		return $extra;
 	}
 
 	/**

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopslists.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopslists.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopslists.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -34,7 +34,7 @@
 	define("XOOPS_LISTS_INCLUDED",1);
 	class XoopsLists
 	{
-		function &getTimeZoneList()
+		function getTimeZoneList()
 		{
 			include_once XOOPS_ROOT_PATH.'/language/'.$GLOBALS['xoopsConfig']['language'].'/timezone.php';
 			$time_zone_list = array ("-12" => _TZ_GMTM12, "-11" => _TZ_GMTM11, "-10" => _TZ_GMTM10, "-9" => _TZ_GMTM9, "-8" => _TZ_GMTM8, "-7" => _TZ_GMTM7, "-6" => _TZ_GMTM6, "-5" => _TZ_GMTM5, "-4" => _TZ_GMTM4, "-3.5" => _TZ_GMTM35, "-3" => _TZ_GMTM3, "-2" => _TZ_GMTM2, "-1" => _TZ_GMTM1, "0" => _TZ_GMT0, "1" => _TZ_GMTP1, "2" => _TZ_GMTP2, "3" => _TZ_GMTP3, "3.5" => _TZ_GMTP35, "4" => _TZ_GMTP4, "4.5" => _TZ_GMTP45, "5" => _TZ_GMTP5, "5.5" => _TZ_GMTP55, "6" => _TZ_GMTP6, "7" => _TZ_GMTP7, "8" => _TZ_GMTP8, "9" => _TZ_GMTP9, "9.5" => _TZ_GMTP95, "10" => _TZ_GMTP10, "11" => _TZ_GMTP11, "12" => _TZ_GMTP12);
@@ -44,7 +44,7 @@
 		/*
 		 * gets list of themes folder from themes directory
 		 */
-		function &getThemesList()
+		function getThemesList()
 		{
 			return XoopsLists::getDirListAsArray(XOOPS_THEME_PATH.'/');
 		}
@@ -52,7 +52,7 @@
 		/*
 		 * gets a list of module folders from the modules directory
 		 */
-		function &getModulesList()
+		function getModulesList()
 		{
 			return XoopsLists::getDirListAsArray(XOOPS_ROOT_PATH."/modules/");
 		}
@@ -60,7 +60,7 @@
 		/*
 		 * gets list of name of directories inside a directory
 		 */
-		function &getDirListAsArray($dirname)
+		function getDirListAsArray($dirname)
 		{
 			$dirlist = array();
 			if (is_dir($dirname) && $handle = opendir($dirname)) {
@@ -81,7 +81,7 @@
 		/*
 		 *  gets list of all files in a directory
 		 */
-		function &getFileListAsArray($dirname, $prefix="")
+		function getFileListAsArray($dirname, $prefix="")
 		{
 			$filelist = array();
 			if (substr($dirname, -1) == '/') {
@@ -104,7 +104,7 @@
 		/*
 		 *  gets list of image file names in a directory
 		 */
-		function &getImgListAsArray($dirname, $prefix="")
+		function getImgListAsArray($dirname, $prefix="")
 		{
 			$filelist = array();
 			if ($handle = opendir($dirname)) {
@@ -124,7 +124,7 @@
 		/*
 		 *  gets list of html file names in a certain directory
 		*/
-		function &getHtmlListAsArray($dirname, $prefix="")
+		function getHtmlListAsArray($dirname, $prefix="")
 		{
 			$filelist = array();
 			if ($handle = opendir($dirname)) {
@@ -149,7 +149,7 @@
 		 *  gets list of avatar file names in a certain directory
 		 *  if directory is not specified, default directory will be searched
 		 */
-		function &getAvatarsList($avatar_dir="")
+		function getAvatarsList($avatar_dir="")
 		{
 			$avatars = array();
 			if ( $avatar_dir != "" ) {
@@ -163,7 +163,7 @@
 		/*
 		 *  gets list of all avatar image files inside default avatars directory
 		 */
-		function &getAllAvatarsList()
+		function getAllAvatarsList()
 		{
 			$avatars = array();
 			$dirlist = array();
@@ -182,7 +182,7 @@
 		*  gets list of subject icon image file names in a certain directory
 		*  if directory is not specified, default directory will be searched
 		*/
-		function &getSubjectsList($sub_dir="")
+		function getSubjectsList($sub_dir="")
 		{
 			$subjects = array();
 			if($sub_dir != ""){
@@ -196,14 +196,14 @@
 		/*
 		 * gets list of language folders inside default language directory
 		 */
-		function &getLangList()
+		function getLangList()
 		{
 			$lang_list = array();
 			$lang_list =& XoopsLists::getDirListAsArray(XOOPS_ROOT_PATH."/language/");
 			return $lang_list;
 		}
 
-		function &getCountryList()
+		function getCountryList()
 		{
 			$country_list = array (
 				""   => "-",
@@ -456,7 +456,7 @@
     		return $country_list;
 		}
 
-		function &getHtmlList()
+		function getHtmlList()
 		{
 			$html_list = array (
 				"a" => "&lt;a&gt;",
@@ -516,7 +516,7 @@
     		return $html_list;
 		}
 
-		function &getUserRankList()
+		function getUserRankList()
 		{
 			$db =& Database::getInstance();
 			$myts =& MyTextSanitizer::getInstance();

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopstopic.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopstopic.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/class/xoopstopic.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -315,7 +315,7 @@
 		return $ret;
 	}
 
-	function &getTopicsList()
+	function getTopicsList()
 	{
 		$result = $this->db->query('SELECT topic_id, topic_pid, topic_title FROM '.$this->table);
 		$ret = array();

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/include/functions.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/include/functions.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/include/functions.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -462,14 +462,18 @@
 function &getMailer()
 {
     global $xoopsConfig;
+    $inst = false;
     include_once XOOPS_ROOT_PATH."/class/xoopsmailer.php";
     if ( file_exists(XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/xoopsmailerlocal.php") ) {
         include_once XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/xoopsmailerlocal.php";
         if ( class_exists("XoopsMailerLocal") ) {
-            return new XoopsMailerLocal();
+            $inst =& new XoopsMailerLocal();
         }
     }
-    return new XoopsMailer();
+    if ( !$inst ) {
+    	$inst =& new XoopsMailer();
+    }
+    return $inst;
 }
 
 function &xoops_gethandler($name, $optional = false )
@@ -482,13 +486,17 @@
         }
         $class = 'Xoops'.ucfirst($name).'Handler';
         if (class_exists($class)) {
-            $handlers[$name] = new $class($GLOBALS['xoopsDB']);
+            $handlers[$name] =& new $class($GLOBALS['xoopsDB']);
         }
     }
     if (!isset($handlers[$name]) && !$optional ) {
         trigger_error('Class <b>'.$class.'</b> does not exist<br />Handler Name: '.$name, E_USER_ERROR);
     }
-    return isset($handlers[$name]) ? $handlers[$name] : false;
+    if ( isset($handlers[$name]) ) {
+    	return $handlers[$name];
+    }
+    $inst = false;
+    return $inst;
 }
 
 function &xoops_getmodulehandler($name = null, $module_dir = null, $optional = false)
@@ -512,13 +520,18 @@
         }
         $class = ucfirst(strtolower($module_dir)).ucfirst($name).'Handler';
         if (class_exists($class)) {
-            $handlers[$module_dir][$name] = new $class($GLOBALS['xoopsDB']);
+            $handlers[$module_dir][$name] =& new $class($GLOBALS['xoopsDB']);
         }
     }
     if (!isset($handlers[$module_dir][$name]) && !$optional) {
         trigger_error('Handler does not exist<br />Module: '.$module_dir.'<br />Name: '.$name, E_USER_ERROR);
     }
-    return isset($handlers[$module_dir][$name]) ? $handlers[$module_dir][$name] : false;
+    if ( isset($handlers[$module_dir][$name]) ) {
+    	return $handlers[$module_dir][$name];
+    }
+    $inst = false;
+    return $inst;
+
 }
 
 function xoops_getrank($rank_id =0, $posts = 0)
@@ -655,7 +668,7 @@
     return $gperm_handler->deleteByModule($module_id, $perm_name, $item_id);
 }
 
-function &xoops_utf8_encode(&$text)
+function xoops_utf8_encode(&$text)
 {
     if (XOOPS_USE_MULTIBYTES == 1) {
         if (function_exists('mb_convert_encoding')) {
@@ -666,7 +679,7 @@
     return utf8_encode($text);
 }
 
-function &xoops_convert_encoding(&$text)
+function xoops_convert_encoding(&$text)
 {
     return xoops_utf8_encode($text);
 }

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/avatar.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/avatar.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/avatar.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -85,7 +85,8 @@
 
     function &get($id)
     {
-        $id = intval($id);
+        $avatar = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('avatar').' WHERE avatar_id='.$id;
             if (!$result = $this->db->query($sql)) {
@@ -98,7 +99,7 @@
                 return $avatar;
             }
         }
-        return false;
+        return $avatar;
     }
 
     function insert(&$avatar)
@@ -203,7 +204,7 @@
         return true;
     }
 
-    function &getUser(&$avatar){
+    function getUser(&$avatar){
         $ret = array();
         if (strtolower(get_class($avatar)) != 'xoopsavatar') {
             return $ret;
@@ -218,7 +219,7 @@
         return $ret;
     }
 
-    function &getList($avatar_type = null, $avatar_display = null)
+    function getList($avatar_type = null, $avatar_display = null)
     {
         $criteria = new CriteriaCompo();
         if (isset($avatar_type)) {

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/block.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/block.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/block.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -104,7 +104,7 @@
 	 * <li>T : use text sanitizater (smilies disabled)</ul>
 	 * @return string content for output
      **/
-    function &getContent($format = 'S', $c_type = 'T')
+    function getContent($format = 'S', $c_type = 'T')
     {
         switch ( $format ) {
         case 'S':
@@ -207,20 +207,19 @@
      **/
     function &get($id)
     {
-        $id = intval($id);
+        $block = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('newblocks').' WHERE bid='.$id;
-            if (!$result = $this->db->query($sql)) {
-                return false;
+            if ( $result = $this->db->query($sql) ) {
+	            $numrows = $this->db->getRowsNum($result);
+	            if ($numrows == 1) {
+	                $block = new XoopsBlock();
+	                $block->assignVars($this->db->fetchArray($result));
+	            }
             }
-            $numrows = $this->db->getRowsNum($result);
-            if ($numrows == 1) {
-                $block = new XoopsBlock();
-                $block->assignVars($this->db->fetchArray($result));
-                return $block;
-            }
         }
-        return false;
+        return $block;
     }
 
     /**
@@ -286,7 +285,7 @@
 	 * @param bool $id_as_key should the blocks' bid be the key for the returned array?
 	 * @return array {@link XoopsBlock}s matching the conditions
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -319,7 +318,7 @@
 	 * @param string $criteria conditions to match
 	 * @return array array of blocks matching the conditions 
      **/
-    function &getList($criteria = null)
+    function getList($criteria = null)
     {
         $blocks =& $this->getObjects($criteria, true);
         $ret = array();

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/comment.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/comment.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/comment.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -133,20 +133,20 @@
      **/
     function &get($id)
     {
-        $id = intval($id);
+        $comment = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('xoopscomments').' WHERE com_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $comment;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $comment = new XoopsComment();
                 $comment->assignVars($this->db->fetchArray($result));
-                return $comment;
             }
         }
-        return false;
+        return $comment;
     }
 
     /**
@@ -213,7 +213,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -288,9 +288,9 @@
      * 
      * @return  array   Array of raw database records
      **/
-    function &getList($criteria = null)
+    function getList($criteria = null)
     {
-        $comments =& $this->getObjects($criteria, true);
+        $comments = $this->getObjects($criteria, true);
         $ret = array();
         foreach (array_keys($comments) as $i) {
             $ret[$i] = $comments[$i]->getVar('com_title');
@@ -310,7 +310,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getByItemId($module_id, $item_id, $order = null, $status = null, $limit = null, $start = 0)
+    function getByItemId($module_id, $item_id, $order = null, $status = null, $limit = null, $start = 0)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));
@@ -336,7 +336,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getCountByItemId($module_id, $item_id, $status = null)
+    function getCountByItemId($module_id, $item_id, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));
@@ -357,7 +357,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getTopComments($module_id, $item_id, $order, $status = null)
+    function getTopComments($module_id, $item_id, $order, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));
@@ -378,7 +378,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getThread($comment_rootid, $comment_id, $status = null)
+    function getThread($comment_rootid, $comment_id, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_rootid', intval($comment_rootid)));
         $criteria->add(new Criteria('com_id', intval($comment_id), '>='));

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/config.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/config.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/config.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -103,7 +103,8 @@
      */
     function &createConfig()
     {
-        return $this->_cHandler->create();
+    	$instance =& $this->_cHandler->create();
+        return $instance;
     }
 
     /**
@@ -183,7 +184,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigItem} objects
      */
-    function &getConfigs($criteria = null, $id_as_key = false, $with_options = false)
+    function getConfigs($criteria = null, $id_as_key = false, $with_options = false)
     {
         return $this->_cHandler->getObjects($criteria, $id_as_key);
     }
@@ -206,7 +207,7 @@
      * 
      * @return	array   array of {@link XoopsConfig}s 
      */
-    function &getConfigsByCat($category, $module = 0)
+    function getConfigsByCat($category, $module = 0)
     {
         static $_cachedConfigs;
 		if (!empty($_cachedConfigs[$module][$category])) {
@@ -233,8 +234,9 @@
      * 
      * @return	object  {@link XoopsConfigOption} 
      */
-    function &createConfigOption(){
-        return $this->_oHandler->create();
+    function &createConfigOption() {
+    	$inst =& $this->_oHandler->create();
+        return $inst;
     }
 
     /**
@@ -244,9 +246,9 @@
      * 
      * @return	object  {@link XoopsConfigOption} 
      */
-    function &getConfigOption($id)
-    {
-        return $this->_oHandler->get($id);
+    function &getConfigOption($id) {
+    	$inst =& $this->_oHandler->get($id);
+        return $inst;
     }
 
     /**
@@ -257,7 +259,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigOption}s
      */
-    function &getConfigOptions($criteria = null, $id_as_key = false)
+    function getConfigOptions($criteria = null, $id_as_key = false)
     {
         return $this->_oHandler->getObjects($criteria, $id_as_key);
     }
@@ -282,7 +284,7 @@
      * 
      * @return	array   Associative array of name=>value pairs.
      */
-    function &getConfigList($conf_modid, $conf_catid = 0)
+    function getConfigList($conf_modid, $conf_catid = 0)
     {
 		if (!empty($this->_cachedConfigs[$conf_modid][$conf_catid])) {
 			return $this->_cachedConfigs[$conf_modid][$conf_catid];

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configcategory.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configcategory.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configcategory.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -105,22 +105,21 @@
      * 
      * @return	object  {@link XoopsConfigCategory}, FALSE on fail
      */
-    function &get($id)
-    {
-        $id = intval($id);
+    function &get($id) {
+        $confcat = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('configcategory').' WHERE confcat_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $confcat;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $confcat = new XoopsConfigCategory();
                 $confcat->assignVars($this->db->fetchArray($result), false);
-                return $confcat;
             }
         }
-        return false;
+        return $confcat;
     }
 
     /**
@@ -187,7 +186,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigCategory}s
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configitem.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configitem.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configitem.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -90,7 +90,7 @@
      * 
      * @return	string
      */
-    function &getConfValueForOutput()
+    function getConfValueForOutput()
     {
         switch ($this->getVar('conf_valuetype')) {
         case 'int':
@@ -201,21 +201,21 @@
      */
     function &get($id)
     {
-        $id = intval($id);
+        $config = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('config').' WHERE conf_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $config;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $myrow = $this->db->fetchArray($result);
                 $config = new XoopsConfigItem();
                 $config->assignVars($myrow);
-                return $config;
             }
         }
-        return false;
+        return $config;
     }
 
     /**
@@ -279,7 +279,7 @@
      * @param	bool    $id_as_key  return the config's id as key?
      * @return	array   Array of {@link XoopsConfigItem} objects
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -313,7 +313,7 @@
      * @param	object  $criteria   {@link CriteriaElement} 
      * @return	int     Count of configs matching $criteria
      */
-    function &getCount($criteria = null)
+    function getCount($criteria = null)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configoption.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configoption.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/configoption.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -104,20 +104,20 @@
      */
     function &get($id)
     {
-        $id = intval($id);
+        $confoption = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('configoption').' WHERE confop_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $confoption;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $confoption = new XoopsConfigOption();
                 $confoption->assignVars($this->db->fetchArray($result));
-                return $confoption;
             }
         }
-        return false;
+        return $confoption;
     }
 
     /**
@@ -182,7 +182,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigOption}s 
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/group.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/group.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/group.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -93,19 +93,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $group = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('groups').' WHERE groupid='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $group;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $group = new XoopsGroup();
                 $group->assignVars($this->db->fetchArray($result));
-                return $group;
             }
         }
-        return false;
+        return $group;
     }
 
     /**
@@ -169,7 +169,7 @@
      * @param bool $id_as_key should the groups' IDs be used as keys for the associative array?
      * @return mixed Array of groups
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -254,19 +254,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $mship = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('groups_users_link').' WHERE linkid='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $mship;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $mship = new XoopsMembership();
                 $mship->assignVars($this->db->fetchArray($result));
-                return $mship;
             }
         }
-        return false;
+        return $mship;
     }
 
     /**
@@ -330,7 +330,7 @@
      * @param bool $id_as_key should the ID be used as the array's key?
      * @return array array of references
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -403,7 +403,7 @@
      * objects? FALSE returns associative array.
      * @return array array of groups the user belongs to
      */
-    function &getGroupsByUser($uid)
+    function getGroupsByUser($uid)
     {
         $ret = array();
         $sql = 'SELECT groupid FROM '.$this->db->prefix('groups_users_link').' WHERE uid='.intval($uid);

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/groupperm.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/groupperm.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/groupperm.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -108,19 +108,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $perm = false;
+    	if (intval($id) > 0) {
             $sql = sprintf("SELECT * FROM %s WHERE gperm_id = %u", $this->db->prefix('group_permission'), $id);
             if ( !$result = $this->db->query($sql) ) {
-                return false;
+                return $perm;
             }
             $numrows = $this->db->getRowsNum($result);
             if ( $numrows == 1 ) {
                 $perm = new XoopsGroupPerm();
                 $perm->assignVars($this->db->fetchArray($result));
-                return $perm;
             }
         }
-        return false;
+        return $perm;
     }
 
     /**
@@ -187,7 +187,7 @@
      * 
      * @return	array   Array of {@link XoopsGroupPerm}s 
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/image.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/image.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/image.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -98,20 +98,20 @@
      **/
     function &get($id, $getbinary=true)
     {
-        $id = intval($id);
+        $image = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT i.*, b.image_body FROM '.$this->db->prefix('image').' i LEFT JOIN '.$this->db->prefix('imagebody').' b ON b.image_id=i.image_id WHERE i.image_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $image;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $image = new XoopsImage();
                 $image->assignVars($this->db->fetchArray($result));
-                return $image;
             }
         }
-        return false;
+        return $image;
     }
 
     /**
@@ -197,7 +197,7 @@
      * @param   boolean $getbinary  
      * @return  array   Array of {@link XoopsImage} objects
      **/
-    function &getObjects($criteria = null, $id_as_key = false, $getbinary = false)
+    function getObjects($criteria = null, $id_as_key = false, $getbinary = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -256,7 +256,7 @@
      * @param   bool    $image_display
      * @return  array   Array of {@link XoopsImage} objects
      **/
-    function &getList($imgcat_id, $image_display = null)
+    function getList($imgcat_id, $image_display = null)
     {
         $criteria = new CriteriaCompo(new Criteria('imgcat_id', intval($imgcat_id)));
         if (isset($image_display)) {

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imagecategory.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imagecategory.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imagecategory.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -85,19 +85,19 @@
 
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $imgcat = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('imagecategory').' WHERE imgcat_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $imgcat;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $imgcat = new XoopsImagecategory();
                 $imgcat->assignVars($this->db->fetchArray($result));
-                return $imgcat;
             }
         }
-        return false;
+        return $imgcat;
     }
 
     function insert(&$imgcat)
@@ -142,7 +142,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -186,7 +186,7 @@
         return $count;
     }
 
-    function &getList($groups = array(), $perm = 'imgcat_read', $display = null, $storetype = null)
+    function getList($groups = array(), $perm = 'imgcat_read', $display = null, $storetype = null)
     {
         $criteria = new CriteriaCompo();
         if (is_array($groups) && !empty($groups)) {

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imageset.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imageset.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imageset.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -68,19 +68,19 @@
 
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $imgset = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('imgset').' WHERE imgset_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $imgset;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $imgset = new XoopsImageset();
                 $imgset->assignVars($this->db->fetchArray($result));
-                return $imgset;
             }
         }
-        return false;
+        return $imgset;
     }
 
     function insert(&$imgset)
@@ -127,7 +127,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -187,7 +187,7 @@
         return true;
     }
 
-    function &getList($refid = null, $tplset = null)
+    function getList($refid = null, $tplset = null)
     {
         $criteria = new CriteriaCompo();
         if (isset($refid)) {

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imagesetimg.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imagesetimg.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/imagesetimg.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -68,20 +68,20 @@
 
     function &get($id)
     {
-        $id = intval($id);
+        $imgsetimg = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('imgsetimg').' WHERE imgsetimg_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $imgsetimg;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $imgsetimg = new XoopsImagesetimg();
                 $imgsetimg->assignVars($this->db->fetchArray($result));
-                return $imgsetimg;
             }
         }
-        return false;
+        return $imgsetimg;
     }
 
     function insert(&$imgsetimg)
@@ -126,7 +126,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -174,7 +174,7 @@
  * @return type documentation
  * @author Kazumi Ono <onokazu at xoops.org>
  **/
-    function &getByImageset($imgset_id, $id_as_key = false)
+    function getByImageset($imgset_id, $id_as_key = false)
     {
         return $this->getObjects(new Criteria('imgsetimg_imgset', intval($imgset_id)), $id_as_key);
     }

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/member.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/member.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/member.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -88,7 +88,8 @@
      */
     function &createGroup()
     {
-        return $this->_gHandler->create();
+        $inst =& $this->_gHandler->create();
+    	return $inst;
     }
 
     /**
@@ -98,7 +99,8 @@
      */
     function &createUser()
     {
-        return $this->_uHandler->create();
+        $inst =& $this->_uHandler->create();
+    	return $inst;
     }
 
     /**
@@ -206,7 +208,7 @@
      * @param object $criteria {@link CriteriaElement} object
      * @return array associative array of group-IDs and names
      */
-    function &getGroupList($criteria = null)
+    function getGroupList($criteria = null)
     {
         $groups =& $this->_gHandler->getObjects($criteria, true);
         $ret = array();
@@ -327,7 +329,8 @@
         $criteria->add(new Criteria('pass', md5($pwd)));
         $user =& $this->_uHandler->getObjects($criteria, false);
         if (!$user || count($user) != 1) {
-            return false;
+        	$user = false;
+            return $user;
         }
         return $user[0];
     }
@@ -345,7 +348,8 @@
         $criteria->add(new Criteria('pass', $md5pwd));
         $user =& $this->_uHandler->getObjects($criteria, false);
         if (!$user || count($user) != 1) {
-            return false;
+        	$user = false;
+            return $user;
         }
         return $user[0];
     }

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/module.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/module.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/module.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -120,7 +120,8 @@
             if ( isset($this->modinfo[$name]) ) {
                 return $this->modinfo[$name];
             }
-            return false;
+            $return = false;
+            return $return;
         }
         return $this->modinfo;
     }
@@ -144,7 +145,7 @@
      * 
      * @return	string
      */
-    function &subLink()
+    function subLink()
     {
         $ret = array();
         if ( $this->getInfo('sub') && is_array($this->getInfo('sub')) ) {
@@ -214,7 +215,7 @@
      * @param   integer $userid
      * @return  mixed   Search result.
      **/
-    function &search($term = '', $andor = 'AND', $limit = 0, $offset = 0, $userid = 0)
+    function search($term = '', $andor = 'AND', $limit = 0, $offset = 0, $userid = 0)
     {
         if ($this->getVar('hassearch') != 1) {
             return false;
@@ -254,7 +255,8 @@
     function &getByDirName($dirname)
     {
         $modhandler =& xoops_gethandler('module');
-        return $modhandler->getByDirname($dirname);
+        $inst =& $modhandler->getByDirname($dirname);
+        return $inst;
     }
     /**#@-*/
 }
@@ -316,13 +318,14 @@
         static $_cachedModule_dirname;
         static $_cachedModule_mid;
         $id = intval($id);
+		$module = false;
         if ($id > 0) {
 			if (!empty($_cachedModule_mid[$id])) {
 				return $_cachedModule_mid[$id];
 			} else {
   	        	$sql = 'SELECT * FROM '.$this->db->prefix('modules').' WHERE mid = '.$id;
   	        	if (!$result = $this->db->query($sql)) {
-  	            	return false;
+  	            	return $module;
   	        	}
   	        	$numrows = $this->db->getRowsNum($result);
   	        	if ($numrows == 1) {
@@ -335,7 +338,7 @@
   	        	}
         	}
 		}
-        return false;
+        return $module;
     }
 
     /**
@@ -352,9 +355,10 @@
 		if (!empty($_cachedModule_dirname[$dirname])) {
 			return $_cachedModule_dirname[$dirname];
 		} else {
+			$module = false;
         	$sql = "SELECT * FROM ".$this->db->prefix('modules')." WHERE dirname = '".trim($dirname)."'";
         	if (!$result = $this->db->query($sql)) {
-            	return false;
+            	return $module;
         	}
         	$numrows = $this->db->getRowsNum($result);
         	if ($numrows == 1) {
@@ -363,9 +367,8 @@
             	$module->assignVars($myrow);
 				$_cachedModule_dirname[$dirname] =& $module;
 				$_cachedModule_mid[$module->getVar('mid')] =& $module;
-            	return $module;
         	}
-        	return false;
+        	return $module;
 		}
     }
 
@@ -477,7 +480,7 @@
      * @param   boolean $id_as_key  Use the ID as key into the array
      * @return  array
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -533,7 +536,7 @@
      *      if false, array keys will be module id
      * @return  array
      **/
-    function &getList($criteria = null, $dirname_as_key = false)
+    function getList($criteria = null, $dirname_as_key = false)
     {
         $ret = array();
         $modules =& $this->getObjects($criteria, true);

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/notification.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/notification.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/notification.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -197,20 +197,20 @@
      **/
     function &get($id)
     {
-        $id = intval($id);
+        $notification = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('xoopsnotifications').' WHERE not_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $notification;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $notification = new XoopsNotification();
                 $notification->assignVars($this->db->fetchArray($result));
-                return $notification;
             }
         }
-        return false;
+        return $notification;
     }
 
 
@@ -278,7 +278,7 @@
      *
      * @return  array   Array of {@link XoopsNotification} objects
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -387,7 +387,8 @@
 		if (count($objects) == 1) {
 			return $objects[0];
 		}
-		return false;
+		$inst = false;
+		return $inst;
 	}
 
 	/**
@@ -482,7 +483,7 @@
      *
      * @return array  Array of {@link XoopsNotification} objects
      **/
-    function &getByUser ($user_id)
+    function getByUser ($user_id)
     {
         $criteria = new Criteria ('not_uid', $user_id);
         return $this->getObjects($criteria, true);
@@ -493,7 +494,7 @@
      * Get a list of notification events for the current item/mod/user
      *
      **/
-	function &getSubscribedEvents ($category, $item_id, $module_id, $user_id)
+	function getSubscribedEvents ($category, $item_id, $module_id, $user_id)
     {
         $criteria = new CriteriaCompo();
         $criteria->add (new Criteria('not_modid', $module_id));
@@ -520,7 +521,7 @@
      *
      * @return  array   Array of {@link XoopsNotification} objects
      **/
-    function &getByItemId($module_id, $item_id, $order = null, $status = null)
+    function getByItemId($module_id, $item_id, $order = null, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/object.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/object.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/object.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -274,7 +274,7 @@
     * @param string $format format to use for the output
     * @return mixed formatted value of the variable
     */
-    function &getVar($key, $format = 's')
+    function getVar($key, $format = 's')
     {
         $ret = $this->vars[$key]['value'];
         switch ($this->vars[$key]['data_type']) {
@@ -528,7 +528,7 @@
     function &xoopsClone()
     {
         $class = get_class($this);
-        $clone = new $class();
+        $clone =& new $class();
         foreach ($this->vars as $k => $v) {
             $clone->assignVar($k, $v['value']);
         }

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/online.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/online.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/online.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -133,7 +133,7 @@
      * @param	object  $criteria   {@link CriteriaElement} 
      * @return	array   Array of associative arrays of online information
      */
-    function &getAll($criteria = null)
+    function getAll($criteria = null)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/privmessage.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/privmessage.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/privmessage.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -98,20 +98,20 @@
  **/
     function &get($id)
     {
-        $id = intval($id);
+        $pm = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('priv_msgs').' WHERE msg_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $pm;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $pm = new XoopsPrivmessage();
                 $pm->assignVars($this->db->fetchArray($result));
-                return $pm;
             }
         }
-        return false;
+        return $pm;
     }
 
 /**
@@ -171,7 +171,7 @@
  * @param 	bool 	$id_as_key 	use ID as key into the array?
  * @return 	array	Array of {@link XoopsPrivmessage} objects
  **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/tplfile.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/tplfile.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/tplfile.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -49,7 +49,7 @@
 		$this->initVar('tpl_source', XOBJ_DTYPE_SOURCE, null, false);
 	}
 
-	function &getSource()
+	function getSource()
 	{
 		return $this->getVar('tpl_source');
 	}
@@ -83,7 +83,8 @@
 
     function &get($id, $getsource = false)
     {
-        $id = intval($id);
+        $tplfile = false;
+    	$id = intval($id);
         if ($id > 0) {
             if (!$getsource) {
                 $sql = 'SELECT * FROM '.$this->db->prefix('tplfile').' WHERE tpl_id='.$id;
@@ -91,16 +92,15 @@
                 $sql = 'SELECT f.*, s.tpl_source FROM '.$this->db->prefix('tplfile').' f LEFT JOIN '.$this->db->prefix('tplsource').' s  ON s.tpl_id=f.tpl_id WHERE f.tpl_id='.$id;
             }
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $tplfile;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $tplfile = new XoopsTplfile();
                 $tplfile->assignVars($this->db->fetchArray($result));
-                return $tplfile;
             }
         }
-        return false;
+        return $tplfile;
     }
 
     function loadSource(&$tplfile)
@@ -211,7 +211,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $getsource = false, $id_as_key = false)
+    function getObjects($criteria = null, $getsource = false, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -271,7 +271,7 @@
         return $ret;
     }
 
-    function &find($tplset = null, $type = null, $refid = null, $module = null, $file = null, $getsource = false)
+    function find($tplset = null, $type = null, $refid = null, $module = null, $file = null, $getsource = false)
     {
         $criteria = new CriteriaCompo();
         if (isset($tplset)) {

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/tplset.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/tplset.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/tplset.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -68,38 +68,38 @@
 
     function &get($id)
     {
-        $id = intval($id);
+        $tplset = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('tplset').' WHERE tplset_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $tplset;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $tplset = new XoopsTplset();
                 $tplset->assignVars($this->db->fetchArray($result));
-                return $tplset;
             }
         }
-        return false;
+        return $tplset;
     }
 
     function &getByName($tplset_name)
     {
-        $tplset_name = trim($tplset_name);
+        $tplset = false;
+    	$tplset_name = trim($tplset_name);
         if ($tplset_name != '') {
             $sql = 'SELECT * FROM '.$this->db->prefix('tplset').' WHERE tplset_name='.$this->db->quoteString($tplset_name);
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $tplset;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $tplset = new XoopsTplset();
                 $tplset->assignVars($this->db->fetchArray($result));
-                return $tplset;
             }
         }
-        return false;
+        return $tplset;
     }
 
     function insert(&$tplset)
@@ -146,7 +146,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -187,7 +187,7 @@
         return $count;
     }
 
-    function &getList($criteria = null)
+    function getList($criteria = null)
 	{
         $ret = array();
 		$tplsets =& $this->getObjects($criteria, true);

Modified: XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/user.php
===================================================================
--- XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/user.php	2005-11-25 02:28:06 UTC (rev 24)
+++ XoopsCore/branches/2.3.x/2.3-main/htdocs/kernel/user.php	2005-11-25 06:58:43 UTC (rev 25)
@@ -195,7 +195,8 @@
 	 */
 	function &groups()
     {
-        return $this->getGroups();
+        $groups =& $this->getGroups();
+    	return $groups;
     }
     /**
      * Is the user admin ?
@@ -482,19 +483,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $user = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('users').' WHERE uid='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $user;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $user = new XoopsUser();
                 $user->assignVars($this->db->fetchArray($result));
-                return $user;
             }
         }
-        return false;
+        return $user;
     }
 
     /**
@@ -572,7 +573,7 @@
      * @param bool $id_as_key use the UID as key for the array?
      * @return array array of {@link XoopsUser} objects
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;



From skalpa at berlios.de  Fri Nov 25 08:20:30 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 08:20:30 +0100
Subject: [Xoops4-svn] r26 - in XoopsCore/branches/tasks/121476-tplset-remove: XOOPS/Boot XOOPS/Frameworks htdocs htdocs/class htdocs/class/database htdocs/class/xml/rss htdocs/class/xoopsform htdocs/include htdocs/kernel
Message-ID: <200511250720.jAP7KULq007884@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 08:20:20 +0100 (Fri, 25 Nov 2005)
New Revision: 26

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/exxos.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/hosts.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/kernel.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/rc.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/xoops2.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/
Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/database/database.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/database/mysqldatabase.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/module.textsanitizer.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/tree.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xml/rss/xmlrss2parser.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopsblock.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopscomments.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopsform/form.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopslists.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopstopic.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/functions.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/avatar.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/block.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/comment.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/config.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configcategory.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configitem.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configoption.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/group.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/groupperm.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/image.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imagecategory.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imageset.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imagesetimg.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/member.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/module.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/notification.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/object.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/online.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/privmessage.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/tplfile.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/tplset.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/user.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/mainfile.dist.php
Log:
Updating the tplsets work branch with the latest changes done to the main 2.3 branch (the kernel draft and refs fixes)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/exxos.php (from rev 25, XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/exxos.php)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/hosts.php (from rev 25, XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/hosts.php)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/kernel.php (from rev 25, XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/kernel.php)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/rc.php (from rev 25, XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/rc.php)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/xoops2.php (from rev 25, XoopsCore/branches/2.3.x/2.3-main/XOOPS/Boot/xoops2.php)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore (from rev 25, XoopsCore/branches/2.3.x/2.3-main/XOOPS/Frameworks/XoopsCore)

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/database/database.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/database/database.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/database/database.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -123,9 +123,9 @@
 class Database
 {
 
-	function &getInstance()
-	{
-		return XoopsDatabaseFactory::getDatabaseConnection();
+	function &getInstance() {
+		$inst =& XoopsDatabaseFactory::getDatabaseConnection();
+		return $inst;
 	}
 }
 

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/database/mysqldatabase.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/database/mysqldatabase.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/database/mysqldatabase.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -228,7 +228,7 @@
      * @return resource query result or FALSE if successful
      * or TRUE if successful and no result
      */
-    function &queryF($sql, $limit=0, $start=0)
+    function queryF($sql, $limit=0, $start=0)
 	{
 		if ( !empty($limit) ) {
 			if (empty($start)) {
@@ -258,7 +258,7 @@
      * 
      * @abstract
 	 */
-	function &query($sql, $limit=0, $start=0)
+	function query($sql, $limit=0, $start=0)
 	{
 
     }
@@ -346,7 +346,7 @@
      * @return resource query result or FALSE if successful
      * or TRUE if successful and no result
      */
-	function &query($sql, $limit=0, $start=0)
+	function query($sql, $limit=0, $start=0)
 	{
 		return $this->queryF($sql, $limit, $start);
 	}
@@ -378,7 +378,7 @@
      * @param int $start offset of first record to return
      * @return resource query result or FALSE if unsuccessful
      */
-	function &query($sql, $limit=0, $start=0)
+	function query($sql, $limit=0, $start=0)
 	{
 	    $sql = ltrim($sql);
 		if (strtolower(substr($sql, 0, 6)) == 'select') {

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/module.textsanitizer.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/module.textsanitizer.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/module.textsanitizer.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -103,20 +103,20 @@
      *
      * @return	string
      */
-    function &smiley($message)
+    function smiley($message)
 	{
 		$db =& Database::getInstance();
 		if (count($this->smileys) == 0) {
 			if ($getsmiles = $db->query("SELECT * FROM ".$db->prefix("smiles"))){
 				while ($smiles = $db->fetchArray($getsmiles)) {
-					$message =& str_replace($smiles['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smiles['smile_url']).'" alt="" />', $message);
+					$message = str_replace($smiles['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smiles['smile_url']).'" alt="" />', $message);
 					array_push($this->smileys, $smiles);
 				}
 			}
 		} 
 		elseif (is_array($this->smileys)) {
 			foreach ($this->smileys as $smile) {
-				$message =& str_replace($smile['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smile['smile_url']).'" alt="" />', $message);
+				$message = str_replace($smile['code'], '<img src="'.XOOPS_UPLOAD_URL.'/'.htmlspecialchars($smile['smile_url']).'" alt="" />', $message);
 			}
 		}
 		return $message;
@@ -128,7 +128,7 @@
 	 * @param   string  $text
 	 * @return  string
 	 **/
-	function &makeClickable(&$text)
+	function makeClickable(&$text)
 	{
 		$patterns = array("/(^|[^]_a-z0-9-=\"'\/])([a-z]+?):\/\/([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/])www\.([a-z0-9\-]+)\.([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/])ftp\.([a-z0-9\-]+)\.([^, \r\n\"\(\)'<>]+)/i", "/(^|[^]_a-z0-9-=\"'\/:\.])([a-z0-9\-_\.]+?)@([^, \r\n\"\(\)'<>\[\]]+)/i");
 		$replacements = array("\\1<a href=\"\\2://\\3\" target=\"_blank\">\\2://\\3</a>", "\\1<a href=\"http://www.\\2.\\3\" target=\"_blank\">www.\\2.\\3</a>", "\\1<a href=\"ftp://ftp.\\2.\\3\" target=\"_blank\">ftp.\\2.\\3</a>", "\\1<a href=\"mailto:\\2@\\3\">\\2@\\3</a>");
@@ -203,7 +203,8 @@
 		$replacements[] = "(tammairanslip)";
 		$patterns[] = "/a{$c}b{$c}o{$c}u{$c}t{$c}:/si";
 		$replacements[] = "about :";
-		return preg_replace($patterns, $replacements, $text);
+		$text = preg_replace($patterns, $replacements, $text);
+		return $text;
 	}
 
 	/**
@@ -213,7 +214,7 @@
      *
      * @return	string
 	 */
-	function &nl2Br($text)
+	function nl2Br($text)
 	{
 		return preg_replace("/(\015\012)|(\015)|(\012)/","<br />",$text);
 	}
@@ -224,10 +225,10 @@
 	 * @param   string  $text
 	 * @return  string
 	 **/
-	function &addSlashes($text)
+	function addSlashes($text)
 	{
 		if (!get_magic_quotes_gpc()) {
-			$text =& addslashes($text);
+			$text = addslashes($text);
 		}
 		return $text;
 	}
@@ -238,10 +239,10 @@
     *
     * @return	string
 	*/
-	function &stripSlashesGPC($text)
+	function stripSlashesGPC($text)
 	{
 		if (get_magic_quotes_gpc()) {
-			$text =& stripslashes($text);
+			$text = stripslashes($text);
 		}
 		return $text;
 	}
@@ -253,7 +254,7 @@
     *
     * @return	string
 	*/
-	function &htmlSpecialChars($text)
+	function htmlSpecialChars($text)
 	{
 		//return preg_replace("/&amp;/i", '&', htmlspecialchars($text, ENT_QUOTES));
 		return preg_replace(array("/&amp;/i", "/&nbsp;/i"), array('&', '&amp;nbsp;'), htmlspecialchars($text, ENT_QUOTES));
@@ -265,7 +266,7 @@
 	 * @param   string  $text
 	 * @return  string
 	 **/
-	function &undoHtmlSpecialChars(&$text)
+	function undoHtmlSpecialChars( $text )
 	{
 		return preg_replace(array("/&gt;/i", "/&lt;/i", "/&quot;/i", "/&#039;/i"), array(">", "<", "\"", "'"), $text);
 	}
@@ -285,28 +286,28 @@
 	{
 		if ($html != 1) {
 			// html not allowed
-			$text =& $this->htmlSpecialChars($text);
+			$text = $this->htmlSpecialChars($text);
 		}
-		$text =& $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
-		$text =& $this->makeClickable($text);
+		$text = $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
+		$text = $this->makeClickable($text);
 		if ($smiley != 0) {
 			// process smiley
-			$text =& $this->smiley($text);
+			$text = $this->smiley($text);
 		}
 		if ($xcode != 0) {
 			// decode xcode
 			if ($image != 0) {
 				// image allowed
-				$text =& $this->xoopsCodeDecode($text);
-            		} else {
-                		// image not allowed
-                		$text =& $this->xoopsCodeDecode($text, 0);
+				$text = $this->xoopsCodeDecode($text);
+			} else {
+				// image not allowed
+				$text = $this->xoopsCodeDecode($text, 0);
 			}
 		}
 		if ($br != 0) {
-			$text =& $this->nl2Br($text);
+			$text = $this->nl2Br($text);
 		}
-		$text =& $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
+		$text = $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
 		return $text;
 	}
 
@@ -323,31 +324,31 @@
 	 **/
 	function &previewTarea(&$text, $html = 0, $smiley = 1, $xcode = 1, $image = 1, $br = 1)
 	{
-		$text =& $this->stripSlashesGPC($text);
+		$text = $this->stripSlashesGPC($text);
 		if ($html != 1) {
 			// html not allowed
-			$text =& $this->htmlSpecialChars($text);
+			$text = $this->htmlSpecialChars($text);
 		}
-		$text =& $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
-		$text =& $this->makeClickable($text);
+		$text = $this->codePreConv($text, $xcode); // Ryuji_edit(2003-11-18)
+		$text = $this->makeClickable($text);
 		if ($smiley != 0) {
 			// process smiley
-			$text =& $this->smiley($text);
+			$text = $this->smiley($text);
 		}
 		if ($xcode != 0) {
 			// decode xcode
 			if ($image != 0) {
 				// image allowed
-				$text =& $this->xoopsCodeDecode($text);
+				$text = $this->xoopsCodeDecode($text);
 			} else {
 				// image not allowed
-				$text =& $this->xoopsCodeDecode($text, 0);
+				$text = $this->xoopsCodeDecode($text, 0);
 			}
 		}
 		if ($br != 0) {
-			$text =& $this->nl2Br($text);
+			$text = $this->nl2Br($text);
 		}
-		$text =& $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
+		$text = $this->codeConv($text, $xcode, $image);	// Ryuji_edit(2003-11-18)
 		return $text;
 	}
 
@@ -525,7 +526,8 @@
 
 	function &makeTareaData4Preview(&$text, $html=1, $smiley=1, $xcode=1)
 	{
-		return $this->previewTarea($text, $html, $smiley, $xcode);
+		$text = $this->previewTarea($text, $html, $smiley, $xcode);
+		return $text;
 	}
 
 	function makeTareaData4PreviewInForm($text)
@@ -540,30 +542,30 @@
 		return $this->htmlSpecialChars($text);
 	}
 
-	function &oopsStripSlashesGPC($text)
+	function oopsStripSlashesGPC($text)
 	{
 		return $this->stripSlashesGPC($text);
 	}
 
-	function &oopsStripSlashesRT($text)
+	function oopsStripSlashesRT($text)
 	{
 		if (get_magic_quotes_runtime()) {
-			$text =& stripslashes($text);
+			$text = stripslashes($text);
 		}
 		return $text;
 	}
 
-	function &oopsAddSlashes($text)
+	function oopsAddSlashes($text)
 	{
 		return $this->addSlashes($text);
 	}
 
-	function &oopsHtmlSpecialChars($text)
+	function oopsHtmlSpecialChars($text)
 	{
 		return $this->htmlSpecialChars($text);
 	}
 
-	function &oopsNl2Br($text)
+	function oopsNl2Br($text)
 	{
 		return $this->nl2br($text);
 	}

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/tree.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/tree.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/tree.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -115,7 +115,7 @@
 	 * @param   string  $key    ID of the parent object
 	 * @return  array   Array of children of the parent
 	 **/
-	function &getFirstChild($key)
+	function getFirstChild($key)
 	{
 		$ret = array();
 		if (isset($this->_tree[$key]['child'])) {
@@ -133,7 +133,7 @@
 	 * @param   array   $ret    (Empty when called from client) Array of children from previous recursions.
 	 * @return  array   Array of child nodes.
 	 **/
-	function &getAllChild($key, $ret = array())
+	function getAllChild($key, $ret = array())
 	{
 		if (isset($this->_tree[$key]['child'])) {
 			foreach ($this->_tree[$key]['child'] as $childkey) {
@@ -156,7 +156,7 @@
 	 * @param   int $uplevel (empty when called from outside) level of recursion
 	 * @return  array   Array of parent nodes. 
 	 **/
-	function &getAllParent($key, $ret = array(), $uplevel = 1)
+	function getAllParent($key, $ret = array(), $uplevel = 1)
 	{
 		if (isset($this->_tree[$key]['parent']) && isset($this->_tree[$this->_tree[$key]['parent']]['obj'])) {
 			$ret[$uplevel] =& $this->_tree[$this->_tree[$key]['parent']]['obj'];
@@ -212,7 +212,7 @@
 	 * @param   integer $key             ID of the object to display as the root of select options
 	 * @return  string  HTML select box
 	 **/
-	function &makeSelBox($name, $fieldName, $prefix='-', $selected='', $addEmptyOption = false, $key=0)
+	function makeSelBox($name, $fieldName, $prefix='-', $selected='', $addEmptyOption = false, $key=0)
     {
         $ret = '<select name='.$name.'>';
         if (false != $addEmptyOption) {

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xml/rss/xmlrss2parser.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xml/rss/xmlrss2parser.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xml/rss/xmlrss2parser.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -101,7 +101,8 @@
             if (isset($this->_imageData[$name])) {
                 return $this->_imageData[$name];
             }
-            return false;
+            $return = false;
+            return $return;
         }
         return $this->_imageData;
     }
@@ -591,7 +592,8 @@
 
     function handleEndElement(&$parser)
     {
-        $parser->setItems($parser->getTempArr());
+    	$items =& $parser->getTempArr();
+        $parser->setItems( $items );
     }
 }
 

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopsblock.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopsblock.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopsblock.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -130,7 +130,7 @@
     * @param $c_type    type of block content
     * @returns string
     */
-    function &getContent($format = 'S', $c_type = 'T')
+    function getContent($format = 'S', $c_type = 'T')
     {
         switch ( $format ) {
         case 'S':
@@ -164,7 +164,7 @@
         }
     }
 
-    function &buildBlock()
+    function buildBlock()
     {
         global $xoopsConfig, $xoopsOption;
         $block = array();
@@ -213,7 +213,7 @@
     * If position is 1, content in DB is positioned
     * after the original content
     */
-    function &buildContent($position,$content="",$contentdb="")
+    function buildContent($position,$content="",$contentdb="")
     {
         if ( $position == 0 ) {
             $ret = $contentdb.$content;
@@ -223,7 +223,7 @@
         return $ret;
     }
 
-    function &buildTitle($originaltitle, $newtitle="")
+    function buildTitle($originaltitle, $newtitle="")
     {
         if ($newtitle != "") {
             $ret = $newtitle;
@@ -288,7 +288,7 @@
     * @param $orderby   order of the blocks
     * @returns array of block objects
     */
-    function &getAllBlocksByGroup($groupid, $asobject=true, $side=null, $visible=null, $orderby="b.weight,b.bid", $isactive=1)
+    function getAllBlocksByGroup($groupid, $asobject=true, $side=null, $visible=null, $orderby="b.weight,b.bid", $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();
@@ -342,7 +342,7 @@
         return $ret;
     }
 
-    function &getAllBlocks($rettype="object", $side=null, $visible=null, $orderby="side,weight,bid", $isactive=1)
+    function getAllBlocks($rettype="object", $side=null, $visible=null, $orderby="side,weight,bid", $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();
@@ -391,7 +391,7 @@
         return $ret;
     }
 
-    function &getByModule($moduleid, $asobject=true)
+    function getByModule($moduleid, $asobject=true)
     {
         $db =& Database::getInstance();
         if ( $asobject == true ) {
@@ -411,7 +411,7 @@
         return $ret;
     }
 
-    function &getAllByGroupModule($groupid, $module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
+    function getAllByGroupModule($groupid, $module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();
@@ -460,7 +460,7 @@
         return $ret;
     }
 
-    function &getNonGroupedBlocks($module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
+    function getNonGroupedBlocks($module_id=0, $toponlyblock=false, $visible=null, $orderby='b.weight,b.bid', $isactive=1)
     {
         $db =& Database::getInstance();
         $ret = array();

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopscomments.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopscomments.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopscomments.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -136,7 +136,7 @@
 		return ($size + 1);
 	}
 
-	function &getCommentTree()
+	function getCommentTree()
 	{
 		$mytree = new XoopsTree($this->ctable, "comment_id", "pid");
 		$ret = array();

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopsform/form.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopsform/form.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopsform/form.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -228,14 +228,15 @@
      * @return object  reference to a {@link XoopsFormElement}, false if not found
 	 */
 	function &getElementByName($name){
-		$elements =& $this->getElements(true);
+		$elements = $this->getElements(true);
 		$count = count($elements);
 		for ($i = 0; $i < $count; $i++) {
 			if ($name == $elements[$i]->getName()) {
 				return $elements[$i];
 			}
 		}
-		return false;
+		$elt = false;
+		return $elt;
 	}
 
 	/**
@@ -276,7 +277,7 @@
 	 * @param	string 	$name	the "name" attribute of a form element
 	 * @return	string 	the "value" attribute assigned to a form element, null if not set
 	 */
-	function &getElementValue($name){
+	function getElementValue($name){
 		$ele =& $this->getElementByName($name);
 		if (is_object($ele) && method_exists($ele, 'getValue')) {
 			return $ele->getValue($value);
@@ -289,7 +290,7 @@
 	 * 
 	 * @return	array 	array of name/value pairs assigned to form elements
 	 */
-	function &getElementValues(){
+	function getElementValues(){
 		// will not use getElementByName() for performance..
 		$elements =& $this->getElements(true);
 		$count = count($elements);
@@ -321,6 +322,8 @@
 		if (isset($this->_extra)) {
 			return $this->_extra;
 		}
+		$extra = null;
+		return $extra;
 	}
 
 	/**

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopslists.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopslists.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopslists.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -34,7 +34,7 @@
 	define("XOOPS_LISTS_INCLUDED",1);
 	class XoopsLists
 	{
-		function &getTimeZoneList()
+		function getTimeZoneList()
 		{
 			include_once XOOPS_ROOT_PATH.'/language/'.$GLOBALS['xoopsConfig']['language'].'/timezone.php';
 			$time_zone_list = array ("-12" => _TZ_GMTM12, "-11" => _TZ_GMTM11, "-10" => _TZ_GMTM10, "-9" => _TZ_GMTM9, "-8" => _TZ_GMTM8, "-7" => _TZ_GMTM7, "-6" => _TZ_GMTM6, "-5" => _TZ_GMTM5, "-4" => _TZ_GMTM4, "-3.5" => _TZ_GMTM35, "-3" => _TZ_GMTM3, "-2" => _TZ_GMTM2, "-1" => _TZ_GMTM1, "0" => _TZ_GMT0, "1" => _TZ_GMTP1, "2" => _TZ_GMTP2, "3" => _TZ_GMTP3, "3.5" => _TZ_GMTP35, "4" => _TZ_GMTP4, "4.5" => _TZ_GMTP45, "5" => _TZ_GMTP5, "5.5" => _TZ_GMTP55, "6" => _TZ_GMTP6, "7" => _TZ_GMTP7, "8" => _TZ_GMTP8, "9" => _TZ_GMTP9, "9.5" => _TZ_GMTP95, "10" => _TZ_GMTP10, "11" => _TZ_GMTP11, "12" => _TZ_GMTP12);
@@ -44,7 +44,7 @@
 		/*
 		 * gets list of themes folder from themes directory
 		 */
-		function &getThemesList()
+		function getThemesList()
 		{
 			return XoopsLists::getDirListAsArray(XOOPS_THEME_PATH.'/');
 		}
@@ -52,7 +52,7 @@
 		/*
 		 * gets a list of module folders from the modules directory
 		 */
-		function &getModulesList()
+		function getModulesList()
 		{
 			return XoopsLists::getDirListAsArray(XOOPS_ROOT_PATH."/modules/");
 		}
@@ -60,7 +60,7 @@
 		/*
 		 * gets list of name of directories inside a directory
 		 */
-		function &getDirListAsArray($dirname)
+		function getDirListAsArray($dirname)
 		{
 			$dirlist = array();
 			if (is_dir($dirname) && $handle = opendir($dirname)) {
@@ -81,7 +81,7 @@
 		/*
 		 *  gets list of all files in a directory
 		 */
-		function &getFileListAsArray($dirname, $prefix="")
+		function getFileListAsArray($dirname, $prefix="")
 		{
 			$filelist = array();
 			if (substr($dirname, -1) == '/') {
@@ -104,7 +104,7 @@
 		/*
 		 *  gets list of image file names in a directory
 		 */
-		function &getImgListAsArray($dirname, $prefix="")
+		function getImgListAsArray($dirname, $prefix="")
 		{
 			$filelist = array();
 			if ($handle = opendir($dirname)) {
@@ -124,7 +124,7 @@
 		/*
 		 *  gets list of html file names in a certain directory
 		*/
-		function &getHtmlListAsArray($dirname, $prefix="")
+		function getHtmlListAsArray($dirname, $prefix="")
 		{
 			$filelist = array();
 			if ($handle = opendir($dirname)) {
@@ -149,7 +149,7 @@
 		 *  gets list of avatar file names in a certain directory
 		 *  if directory is not specified, default directory will be searched
 		 */
-		function &getAvatarsList($avatar_dir="")
+		function getAvatarsList($avatar_dir="")
 		{
 			$avatars = array();
 			if ( $avatar_dir != "" ) {
@@ -163,7 +163,7 @@
 		/*
 		 *  gets list of all avatar image files inside default avatars directory
 		 */
-		function &getAllAvatarsList()
+		function getAllAvatarsList()
 		{
 			$avatars = array();
 			$dirlist = array();
@@ -182,7 +182,7 @@
 		*  gets list of subject icon image file names in a certain directory
 		*  if directory is not specified, default directory will be searched
 		*/
-		function &getSubjectsList($sub_dir="")
+		function getSubjectsList($sub_dir="")
 		{
 			$subjects = array();
 			if($sub_dir != ""){
@@ -196,14 +196,14 @@
 		/*
 		 * gets list of language folders inside default language directory
 		 */
-		function &getLangList()
+		function getLangList()
 		{
 			$lang_list = array();
 			$lang_list =& XoopsLists::getDirListAsArray(XOOPS_ROOT_PATH."/language/");
 			return $lang_list;
 		}
 
-		function &getCountryList()
+		function getCountryList()
 		{
 			$country_list = array (
 				""   => "-",
@@ -456,7 +456,7 @@
     		return $country_list;
 		}
 
-		function &getHtmlList()
+		function getHtmlList()
 		{
 			$html_list = array (
 				"a" => "&lt;a&gt;",
@@ -516,7 +516,7 @@
     		return $html_list;
 		}
 
-		function &getUserRankList()
+		function getUserRankList()
 		{
 			$db =& Database::getInstance();
 			$myts =& MyTextSanitizer::getInstance();

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopstopic.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopstopic.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/xoopstopic.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -315,7 +315,7 @@
 		return $ret;
 	}
 
-	function &getTopicsList()
+	function getTopicsList()
 	{
 		$result = $this->db->query('SELECT topic_id, topic_pid, topic_title FROM '.$this->table);
 		$ret = array();

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -36,10 +36,10 @@
     $xoopsSecurity->checkSuperglobals();
     
     // ############## Activate error handler ##############
-    include_once XOOPS_ROOT_PATH . '/class/errorhandler.php';
-    $xoopsErrorHandler =& XoopsErrorHandler::getInstance();
+    //include_once XOOPS_ROOT_PATH . '/class/errorhandler.php';
+    //$xoopsErrorHandler =& XoopsErrorHandler::getInstance();
     // Turn on error handler by default (until config value obtained from DB)
-    $xoopsErrorHandler->activate(true);
+    //$xoopsErrorHandler->activate(true);
 
     define("XOOPS_SIDEBLOCK_LEFT",0);
     define("XOOPS_SIDEBLOCK_RIGHT",1);
@@ -59,8 +59,8 @@
     define("XOOPS_THEME_PATH", XOOPS_ROOT_PATH."/themes");
 
     define( "SMARTY_DIR", XOOPS_ROOT_PATH . "/class/smarty/" );
-    define( "XOOPS_CACHE_PATH", XOOPS_VAR_PATH . "/Caches" );
-    define( "XOOPS_COMPILE_PATH", XOOPS_VAR_PATH . "/Application Support/net_php_Smarty" );
+    define( "XOOPS_CACHE_PATH", XOOPS_VAR_PATH . "/Caches/xoops_template_Smarty" );
+    define( "XOOPS_COMPILE_PATH", XOOPS_VAR_PATH . "/Application Support/xoops_template_Smarty" );
 
     define("XOOPS_THEME_URL", XOOPS_URL."/themes");
     define("XOOPS_UPLOAD_URL", XOOPS_URL."/uploads");
@@ -96,7 +96,8 @@
     $xoopsConfig =& $config_handler->getConfigsByCat(XOOPS_CONF);
 
     // #################### Error reporting settings ##################
-    error_reporting(0);
+/*
+	error_reporting(0);
 
     if ($xoopsConfig['debug_mode'] == 1) {
         error_reporting(E_ALL);
@@ -104,7 +105,7 @@
         // Turn off error handler
         $xoopsErrorHandler->activate(false);
     }
-
+*/
     $xoopsSecurity->checkBadips();
 
     // ################# Include version info file ##############

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/functions.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/functions.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/functions.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -462,14 +462,18 @@
 function &getMailer()
 {
     global $xoopsConfig;
+    $inst = false;
     include_once XOOPS_ROOT_PATH."/class/xoopsmailer.php";
     if ( file_exists(XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/xoopsmailerlocal.php") ) {
         include_once XOOPS_ROOT_PATH."/language/".$xoopsConfig['language']."/xoopsmailerlocal.php";
         if ( class_exists("XoopsMailerLocal") ) {
-            return new XoopsMailerLocal();
+            $inst =& new XoopsMailerLocal();
         }
     }
-    return new XoopsMailer();
+    if ( !$inst ) {
+    	$inst =& new XoopsMailer();
+    }
+    return $inst;
 }
 
 function &xoops_gethandler($name, $optional = false )
@@ -482,13 +486,17 @@
         }
         $class = 'Xoops'.ucfirst($name).'Handler';
         if (class_exists($class)) {
-            $handlers[$name] = new $class($GLOBALS['xoopsDB']);
+            $handlers[$name] =& new $class($GLOBALS['xoopsDB']);
         }
     }
     if (!isset($handlers[$name]) && !$optional ) {
         trigger_error('Class <b>'.$class.'</b> does not exist<br />Handler Name: '.$name, E_USER_ERROR);
     }
-    return isset($handlers[$name]) ? $handlers[$name] : false;
+    if ( isset($handlers[$name]) ) {
+    	return $handlers[$name];
+    }
+    $inst = false;
+    return $inst;
 }
 
 function &xoops_getmodulehandler($name = null, $module_dir = null, $optional = false)
@@ -512,13 +520,18 @@
         }
         $class = ucfirst(strtolower($module_dir)).ucfirst($name).'Handler';
         if (class_exists($class)) {
-            $handlers[$module_dir][$name] = new $class($GLOBALS['xoopsDB']);
+            $handlers[$module_dir][$name] =& new $class($GLOBALS['xoopsDB']);
         }
     }
     if (!isset($handlers[$module_dir][$name]) && !$optional) {
         trigger_error('Handler does not exist<br />Module: '.$module_dir.'<br />Name: '.$name, E_USER_ERROR);
     }
-    return isset($handlers[$module_dir][$name]) ? $handlers[$module_dir][$name] : false;
+    if ( isset($handlers[$module_dir][$name]) ) {
+    	return $handlers[$module_dir][$name];
+    }
+    $inst = false;
+    return $inst;
+
 }
 
 function xoops_getrank($rank_id =0, $posts = 0)
@@ -655,7 +668,7 @@
     return $gperm_handler->deleteByModule($module_id, $perm_name, $item_id);
 }
 
-function &xoops_utf8_encode(&$text)
+function xoops_utf8_encode(&$text)
 {
     if (XOOPS_USE_MULTIBYTES == 1) {
         if (function_exists('mb_convert_encoding')) {
@@ -666,7 +679,7 @@
     return utf8_encode($text);
 }
 
-function &xoops_convert_encoding(&$text)
+function xoops_convert_encoding(&$text)
 {
     return xoops_utf8_encode($text);
 }

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/avatar.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/avatar.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/avatar.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -85,7 +85,8 @@
 
     function &get($id)
     {
-        $id = intval($id);
+        $avatar = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('avatar').' WHERE avatar_id='.$id;
             if (!$result = $this->db->query($sql)) {
@@ -98,7 +99,7 @@
                 return $avatar;
             }
         }
-        return false;
+        return $avatar;
     }
 
     function insert(&$avatar)
@@ -203,7 +204,7 @@
         return true;
     }
 
-    function &getUser(&$avatar){
+    function getUser(&$avatar){
         $ret = array();
         if (strtolower(get_class($avatar)) != 'xoopsavatar') {
             return $ret;
@@ -218,7 +219,7 @@
         return $ret;
     }
 
-    function &getList($avatar_type = null, $avatar_display = null)
+    function getList($avatar_type = null, $avatar_display = null)
     {
         $criteria = new CriteriaCompo();
         if (isset($avatar_type)) {

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/block.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/block.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/block.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -104,7 +104,7 @@
 	 * <li>T : use text sanitizater (smilies disabled)</ul>
 	 * @return string content for output
      **/
-    function &getContent($format = 'S', $c_type = 'T')
+    function getContent($format = 'S', $c_type = 'T')
     {
         switch ( $format ) {
         case 'S':
@@ -207,20 +207,19 @@
      **/
     function &get($id)
     {
-        $id = intval($id);
+        $block = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('newblocks').' WHERE bid='.$id;
-            if (!$result = $this->db->query($sql)) {
-                return false;
+            if ( $result = $this->db->query($sql) ) {
+	            $numrows = $this->db->getRowsNum($result);
+	            if ($numrows == 1) {
+	                $block = new XoopsBlock();
+	                $block->assignVars($this->db->fetchArray($result));
+	            }
             }
-            $numrows = $this->db->getRowsNum($result);
-            if ($numrows == 1) {
-                $block = new XoopsBlock();
-                $block->assignVars($this->db->fetchArray($result));
-                return $block;
-            }
         }
-        return false;
+        return $block;
     }
 
     /**
@@ -286,7 +285,7 @@
 	 * @param bool $id_as_key should the blocks' bid be the key for the returned array?
 	 * @return array {@link XoopsBlock}s matching the conditions
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -319,7 +318,7 @@
 	 * @param string $criteria conditions to match
 	 * @return array array of blocks matching the conditions 
      **/
-    function &getList($criteria = null)
+    function getList($criteria = null)
     {
         $blocks =& $this->getObjects($criteria, true);
         $ret = array();

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/comment.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/comment.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/comment.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -133,20 +133,20 @@
      **/
     function &get($id)
     {
-        $id = intval($id);
+        $comment = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('xoopscomments').' WHERE com_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $comment;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $comment = new XoopsComment();
                 $comment->assignVars($this->db->fetchArray($result));
-                return $comment;
             }
         }
-        return false;
+        return $comment;
     }
 
     /**
@@ -213,7 +213,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -288,9 +288,9 @@
      * 
      * @return  array   Array of raw database records
      **/
-    function &getList($criteria = null)
+    function getList($criteria = null)
     {
-        $comments =& $this->getObjects($criteria, true);
+        $comments = $this->getObjects($criteria, true);
         $ret = array();
         foreach (array_keys($comments) as $i) {
             $ret[$i] = $comments[$i]->getVar('com_title');
@@ -310,7 +310,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getByItemId($module_id, $item_id, $order = null, $status = null, $limit = null, $start = 0)
+    function getByItemId($module_id, $item_id, $order = null, $status = null, $limit = null, $start = 0)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));
@@ -336,7 +336,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getCountByItemId($module_id, $item_id, $status = null)
+    function getCountByItemId($module_id, $item_id, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));
@@ -357,7 +357,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getTopComments($module_id, $item_id, $order, $status = null)
+    function getTopComments($module_id, $item_id, $order, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));
@@ -378,7 +378,7 @@
      * 
      * @return  array   Array of {@link XoopsComment} objects
      **/
-    function &getThread($comment_rootid, $comment_id, $status = null)
+    function getThread($comment_rootid, $comment_id, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_rootid', intval($comment_rootid)));
         $criteria->add(new Criteria('com_id', intval($comment_id), '>='));

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/config.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/config.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/config.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -103,7 +103,8 @@
      */
     function &createConfig()
     {
-        return $this->_cHandler->create();
+    	$instance =& $this->_cHandler->create();
+        return $instance;
     }
 
     /**
@@ -183,7 +184,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigItem} objects
      */
-    function &getConfigs($criteria = null, $id_as_key = false, $with_options = false)
+    function getConfigs($criteria = null, $id_as_key = false, $with_options = false)
     {
         return $this->_cHandler->getObjects($criteria, $id_as_key);
     }
@@ -206,7 +207,7 @@
      * 
      * @return	array   array of {@link XoopsConfig}s 
      */
-    function &getConfigsByCat($category, $module = 0)
+    function getConfigsByCat($category, $module = 0)
     {
         static $_cachedConfigs;
 		if (!empty($_cachedConfigs[$module][$category])) {
@@ -233,8 +234,9 @@
      * 
      * @return	object  {@link XoopsConfigOption} 
      */
-    function &createConfigOption(){
-        return $this->_oHandler->create();
+    function &createConfigOption() {
+    	$inst =& $this->_oHandler->create();
+        return $inst;
     }
 
     /**
@@ -244,9 +246,9 @@
      * 
      * @return	object  {@link XoopsConfigOption} 
      */
-    function &getConfigOption($id)
-    {
-        return $this->_oHandler->get($id);
+    function &getConfigOption($id) {
+    	$inst =& $this->_oHandler->get($id);
+        return $inst;
     }
 
     /**
@@ -257,7 +259,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigOption}s
      */
-    function &getConfigOptions($criteria = null, $id_as_key = false)
+    function getConfigOptions($criteria = null, $id_as_key = false)
     {
         return $this->_oHandler->getObjects($criteria, $id_as_key);
     }
@@ -282,7 +284,7 @@
      * 
      * @return	array   Associative array of name=>value pairs.
      */
-    function &getConfigList($conf_modid, $conf_catid = 0)
+    function getConfigList($conf_modid, $conf_catid = 0)
     {
 		if (!empty($this->_cachedConfigs[$conf_modid][$conf_catid])) {
 			return $this->_cachedConfigs[$conf_modid][$conf_catid];

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configcategory.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configcategory.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configcategory.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -105,22 +105,21 @@
      * 
      * @return	object  {@link XoopsConfigCategory}, FALSE on fail
      */
-    function &get($id)
-    {
-        $id = intval($id);
+    function &get($id) {
+        $confcat = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('configcategory').' WHERE confcat_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $confcat;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $confcat = new XoopsConfigCategory();
                 $confcat->assignVars($this->db->fetchArray($result), false);
-                return $confcat;
             }
         }
-        return false;
+        return $confcat;
     }
 
     /**
@@ -187,7 +186,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigCategory}s
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configitem.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configitem.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configitem.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -90,7 +90,7 @@
      * 
      * @return	string
      */
-    function &getConfValueForOutput()
+    function getConfValueForOutput()
     {
         switch ($this->getVar('conf_valuetype')) {
         case 'int':
@@ -201,21 +201,21 @@
      */
     function &get($id)
     {
-        $id = intval($id);
+        $config = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('config').' WHERE conf_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $config;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $myrow = $this->db->fetchArray($result);
                 $config = new XoopsConfigItem();
                 $config->assignVars($myrow);
-                return $config;
             }
         }
-        return false;
+        return $config;
     }
 
     /**
@@ -279,7 +279,7 @@
      * @param	bool    $id_as_key  return the config's id as key?
      * @return	array   Array of {@link XoopsConfigItem} objects
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -313,7 +313,7 @@
      * @param	object  $criteria   {@link CriteriaElement} 
      * @return	int     Count of configs matching $criteria
      */
-    function &getCount($criteria = null)
+    function getCount($criteria = null)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configoption.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configoption.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/configoption.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -104,20 +104,20 @@
      */
     function &get($id)
     {
-        $id = intval($id);
+        $confoption = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('configoption').' WHERE confop_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $confoption;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $confoption = new XoopsConfigOption();
                 $confoption->assignVars($this->db->fetchArray($result));
-                return $confoption;
             }
         }
-        return false;
+        return $confoption;
     }
 
     /**
@@ -182,7 +182,7 @@
      * 
      * @return	array   Array of {@link XoopsConfigOption}s 
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/group.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/group.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/group.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -93,19 +93,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $group = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('groups').' WHERE groupid='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $group;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $group = new XoopsGroup();
                 $group->assignVars($this->db->fetchArray($result));
-                return $group;
             }
         }
-        return false;
+        return $group;
     }
 
     /**
@@ -169,7 +169,7 @@
      * @param bool $id_as_key should the groups' IDs be used as keys for the associative array?
      * @return mixed Array of groups
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -254,19 +254,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $mship = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('groups_users_link').' WHERE linkid='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $mship;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $mship = new XoopsMembership();
                 $mship->assignVars($this->db->fetchArray($result));
-                return $mship;
             }
         }
-        return false;
+        return $mship;
     }
 
     /**
@@ -330,7 +330,7 @@
      * @param bool $id_as_key should the ID be used as the array's key?
      * @return array array of references
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -403,7 +403,7 @@
      * objects? FALSE returns associative array.
      * @return array array of groups the user belongs to
      */
-    function &getGroupsByUser($uid)
+    function getGroupsByUser($uid)
     {
         $ret = array();
         $sql = 'SELECT groupid FROM '.$this->db->prefix('groups_users_link').' WHERE uid='.intval($uid);

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/groupperm.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/groupperm.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/groupperm.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -108,19 +108,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $perm = false;
+    	if (intval($id) > 0) {
             $sql = sprintf("SELECT * FROM %s WHERE gperm_id = %u", $this->db->prefix('group_permission'), $id);
             if ( !$result = $this->db->query($sql) ) {
-                return false;
+                return $perm;
             }
             $numrows = $this->db->getRowsNum($result);
             if ( $numrows == 1 ) {
                 $perm = new XoopsGroupPerm();
                 $perm->assignVars($this->db->fetchArray($result));
-                return $perm;
             }
         }
-        return false;
+        return $perm;
     }
 
     /**
@@ -187,7 +187,7 @@
      * 
      * @return	array   Array of {@link XoopsGroupPerm}s 
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/image.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/image.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/image.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -98,20 +98,20 @@
      **/
     function &get($id, $getbinary=true)
     {
-        $id = intval($id);
+        $image = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT i.*, b.image_body FROM '.$this->db->prefix('image').' i LEFT JOIN '.$this->db->prefix('imagebody').' b ON b.image_id=i.image_id WHERE i.image_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $image;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $image = new XoopsImage();
                 $image->assignVars($this->db->fetchArray($result));
-                return $image;
             }
         }
-        return false;
+        return $image;
     }
 
     /**
@@ -197,7 +197,7 @@
      * @param   boolean $getbinary  
      * @return  array   Array of {@link XoopsImage} objects
      **/
-    function &getObjects($criteria = null, $id_as_key = false, $getbinary = false)
+    function getObjects($criteria = null, $id_as_key = false, $getbinary = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -256,7 +256,7 @@
      * @param   bool    $image_display
      * @return  array   Array of {@link XoopsImage} objects
      **/
-    function &getList($imgcat_id, $image_display = null)
+    function getList($imgcat_id, $image_display = null)
     {
         $criteria = new CriteriaCompo(new Criteria('imgcat_id', intval($imgcat_id)));
         if (isset($image_display)) {

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imagecategory.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imagecategory.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imagecategory.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -85,19 +85,19 @@
 
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $imgcat = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('imagecategory').' WHERE imgcat_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $imgcat;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $imgcat = new XoopsImagecategory();
                 $imgcat->assignVars($this->db->fetchArray($result));
-                return $imgcat;
             }
         }
-        return false;
+        return $imgcat;
     }
 
     function insert(&$imgcat)
@@ -142,7 +142,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -186,7 +186,7 @@
         return $count;
     }
 
-    function &getList($groups = array(), $perm = 'imgcat_read', $display = null, $storetype = null)
+    function getList($groups = array(), $perm = 'imgcat_read', $display = null, $storetype = null)
     {
         $criteria = new CriteriaCompo();
         if (is_array($groups) && !empty($groups)) {

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imageset.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imageset.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imageset.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -68,19 +68,19 @@
 
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $imgset = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('imgset').' WHERE imgset_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $imgset;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $imgset = new XoopsImageset();
                 $imgset->assignVars($this->db->fetchArray($result));
-                return $imgset;
             }
         }
-        return false;
+        return $imgset;
     }
 
     function insert(&$imgset)
@@ -127,7 +127,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -187,7 +187,7 @@
         return true;
     }
 
-    function &getList($refid = null, $tplset = null)
+    function getList($refid = null, $tplset = null)
     {
         $criteria = new CriteriaCompo();
         if (isset($refid)) {

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imagesetimg.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imagesetimg.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/imagesetimg.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -68,20 +68,20 @@
 
     function &get($id)
     {
-        $id = intval($id);
+        $imgsetimg = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('imgsetimg').' WHERE imgsetimg_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $imgsetimg;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $imgsetimg = new XoopsImagesetimg();
                 $imgsetimg->assignVars($this->db->fetchArray($result));
-                return $imgsetimg;
             }
         }
-        return false;
+        return $imgsetimg;
     }
 
     function insert(&$imgsetimg)
@@ -126,7 +126,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -174,7 +174,7 @@
  * @return type documentation
  * @author Kazumi Ono <onokazu at xoops.org>
  **/
-    function &getByImageset($imgset_id, $id_as_key = false)
+    function getByImageset($imgset_id, $id_as_key = false)
     {
         return $this->getObjects(new Criteria('imgsetimg_imgset', intval($imgset_id)), $id_as_key);
     }

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/member.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/member.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/member.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -88,7 +88,8 @@
      */
     function &createGroup()
     {
-        return $this->_gHandler->create();
+        $inst =& $this->_gHandler->create();
+    	return $inst;
     }
 
     /**
@@ -98,7 +99,8 @@
      */
     function &createUser()
     {
-        return $this->_uHandler->create();
+        $inst =& $this->_uHandler->create();
+    	return $inst;
     }
 
     /**
@@ -206,7 +208,7 @@
      * @param object $criteria {@link CriteriaElement} object
      * @return array associative array of group-IDs and names
      */
-    function &getGroupList($criteria = null)
+    function getGroupList($criteria = null)
     {
         $groups =& $this->_gHandler->getObjects($criteria, true);
         $ret = array();
@@ -327,7 +329,8 @@
         $criteria->add(new Criteria('pass', md5($pwd)));
         $user =& $this->_uHandler->getObjects($criteria, false);
         if (!$user || count($user) != 1) {
-            return false;
+        	$user = false;
+            return $user;
         }
         return $user[0];
     }
@@ -345,7 +348,8 @@
         $criteria->add(new Criteria('pass', $md5pwd));
         $user =& $this->_uHandler->getObjects($criteria, false);
         if (!$user || count($user) != 1) {
-            return false;
+        	$user = false;
+            return $user;
         }
         return $user[0];
     }

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/module.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/module.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/module.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -120,7 +120,8 @@
             if ( isset($this->modinfo[$name]) ) {
                 return $this->modinfo[$name];
             }
-            return false;
+            $return = false;
+            return $return;
         }
         return $this->modinfo;
     }
@@ -144,7 +145,7 @@
      * 
      * @return	string
      */
-    function &subLink()
+    function subLink()
     {
         $ret = array();
         if ( $this->getInfo('sub') && is_array($this->getInfo('sub')) ) {
@@ -214,7 +215,7 @@
      * @param   integer $userid
      * @return  mixed   Search result.
      **/
-    function &search($term = '', $andor = 'AND', $limit = 0, $offset = 0, $userid = 0)
+    function search($term = '', $andor = 'AND', $limit = 0, $offset = 0, $userid = 0)
     {
         if ($this->getVar('hassearch') != 1) {
             return false;
@@ -254,7 +255,8 @@
     function &getByDirName($dirname)
     {
         $modhandler =& xoops_gethandler('module');
-        return $modhandler->getByDirname($dirname);
+        $inst =& $modhandler->getByDirname($dirname);
+        return $inst;
     }
     /**#@-*/
 }
@@ -316,13 +318,14 @@
         static $_cachedModule_dirname;
         static $_cachedModule_mid;
         $id = intval($id);
+		$module = false;
         if ($id > 0) {
 			if (!empty($_cachedModule_mid[$id])) {
 				return $_cachedModule_mid[$id];
 			} else {
   	        	$sql = 'SELECT * FROM '.$this->db->prefix('modules').' WHERE mid = '.$id;
   	        	if (!$result = $this->db->query($sql)) {
-  	            	return false;
+  	            	return $module;
   	        	}
   	        	$numrows = $this->db->getRowsNum($result);
   	        	if ($numrows == 1) {
@@ -335,7 +338,7 @@
   	        	}
         	}
 		}
-        return false;
+        return $module;
     }
 
     /**
@@ -352,9 +355,10 @@
 		if (!empty($_cachedModule_dirname[$dirname])) {
 			return $_cachedModule_dirname[$dirname];
 		} else {
+			$module = false;
         	$sql = "SELECT * FROM ".$this->db->prefix('modules')." WHERE dirname = '".trim($dirname)."'";
         	if (!$result = $this->db->query($sql)) {
-            	return false;
+            	return $module;
         	}
         	$numrows = $this->db->getRowsNum($result);
         	if ($numrows == 1) {
@@ -363,9 +367,8 @@
             	$module->assignVars($myrow);
 				$_cachedModule_dirname[$dirname] =& $module;
 				$_cachedModule_mid[$module->getVar('mid')] =& $module;
-            	return $module;
         	}
-        	return false;
+        	return $module;
 		}
     }
 
@@ -477,7 +480,7 @@
      * @param   boolean $id_as_key  Use the ID as key into the array
      * @return  array
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -533,7 +536,7 @@
      *      if false, array keys will be module id
      * @return  array
      **/
-    function &getList($criteria = null, $dirname_as_key = false)
+    function getList($criteria = null, $dirname_as_key = false)
     {
         $ret = array();
         $modules =& $this->getObjects($criteria, true);

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/notification.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/notification.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/notification.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -197,20 +197,20 @@
      **/
     function &get($id)
     {
-        $id = intval($id);
+        $notification = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('xoopsnotifications').' WHERE not_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $notification;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $notification = new XoopsNotification();
                 $notification->assignVars($this->db->fetchArray($result));
-                return $notification;
             }
         }
-        return false;
+        return $notification;
     }
 
 
@@ -278,7 +278,7 @@
      *
      * @return  array   Array of {@link XoopsNotification} objects
      **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -387,7 +387,8 @@
 		if (count($objects) == 1) {
 			return $objects[0];
 		}
-		return false;
+		$inst = false;
+		return $inst;
 	}
 
 	/**
@@ -482,7 +483,7 @@
      *
      * @return array  Array of {@link XoopsNotification} objects
      **/
-    function &getByUser ($user_id)
+    function getByUser ($user_id)
     {
         $criteria = new Criteria ('not_uid', $user_id);
         return $this->getObjects($criteria, true);
@@ -493,7 +494,7 @@
      * Get a list of notification events for the current item/mod/user
      *
      **/
-	function &getSubscribedEvents ($category, $item_id, $module_id, $user_id)
+	function getSubscribedEvents ($category, $item_id, $module_id, $user_id)
     {
         $criteria = new CriteriaCompo();
         $criteria->add (new Criteria('not_modid', $module_id));
@@ -520,7 +521,7 @@
      *
      * @return  array   Array of {@link XoopsNotification} objects
      **/
-    function &getByItemId($module_id, $item_id, $order = null, $status = null)
+    function getByItemId($module_id, $item_id, $order = null, $status = null)
     {
         $criteria = new CriteriaCompo(new Criteria('com_modid', intval($module_id)));
         $criteria->add(new Criteria('com_itemid', intval($item_id)));

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/object.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/object.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/object.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -274,7 +274,7 @@
     * @param string $format format to use for the output
     * @return mixed formatted value of the variable
     */
-    function &getVar($key, $format = 's')
+    function getVar($key, $format = 's')
     {
         $ret = $this->vars[$key]['value'];
         switch ($this->vars[$key]['data_type']) {
@@ -528,7 +528,7 @@
     function &xoopsClone()
     {
         $class = get_class($this);
-        $clone = new $class();
+        $clone =& new $class();
         foreach ($this->vars as $k => $v) {
             $clone->assignVar($k, $v['value']);
         }

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/online.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/online.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/online.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -133,7 +133,7 @@
      * @param	object  $criteria   {@link CriteriaElement} 
      * @return	array   Array of associative arrays of online information
      */
-    function &getAll($criteria = null)
+    function getAll($criteria = null)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/privmessage.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/privmessage.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/privmessage.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -98,20 +98,20 @@
  **/
     function &get($id)
     {
-        $id = intval($id);
+        $pm = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('priv_msgs').' WHERE msg_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $pm;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $pm = new XoopsPrivmessage();
                 $pm->assignVars($this->db->fetchArray($result));
-                return $pm;
             }
         }
-        return false;
+        return $pm;
     }
 
 /**
@@ -171,7 +171,7 @@
  * @param 	bool 	$id_as_key 	use ID as key into the array?
  * @return 	array	Array of {@link XoopsPrivmessage} objects
  **/
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/tplfile.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/tplfile.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/tplfile.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -49,7 +49,7 @@
 		$this->initVar('tpl_source', XOBJ_DTYPE_SOURCE, null, false);
 	}
 
-	function &getSource()
+	function getSource()
 	{
 		return $this->getVar('tpl_source');
 	}
@@ -83,7 +83,8 @@
 
     function &get($id, $getsource = false)
     {
-        $id = intval($id);
+        $tplfile = false;
+    	$id = intval($id);
         if ($id > 0) {
             if (!$getsource) {
                 $sql = 'SELECT * FROM '.$this->db->prefix('tplfile').' WHERE tpl_id='.$id;
@@ -91,16 +92,15 @@
                 $sql = 'SELECT f.*, s.tpl_source FROM '.$this->db->prefix('tplfile').' f LEFT JOIN '.$this->db->prefix('tplsource').' s  ON s.tpl_id=f.tpl_id WHERE f.tpl_id='.$id;
             }
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $tplfile;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $tplfile = new XoopsTplfile();
                 $tplfile->assignVars($this->db->fetchArray($result));
-                return $tplfile;
             }
         }
-        return false;
+        return $tplfile;
     }
 
     function loadSource(&$tplfile)
@@ -211,7 +211,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $getsource = false, $id_as_key = false)
+    function getObjects($criteria = null, $getsource = false, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -271,7 +271,7 @@
         return $ret;
     }
 
-    function &find($tplset = null, $type = null, $refid = null, $module = null, $file = null, $getsource = false)
+    function find($tplset = null, $type = null, $refid = null, $module = null, $file = null, $getsource = false)
     {
         $criteria = new CriteriaCompo();
         if (isset($tplset)) {

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/tplset.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/tplset.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/tplset.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -68,38 +68,38 @@
 
     function &get($id)
     {
-        $id = intval($id);
+        $tplset = false;
+    	$id = intval($id);
         if ($id > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('tplset').' WHERE tplset_id='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $tplset;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $tplset = new XoopsTplset();
                 $tplset->assignVars($this->db->fetchArray($result));
-                return $tplset;
             }
         }
-        return false;
+        return $tplset;
     }
 
     function &getByName($tplset_name)
     {
-        $tplset_name = trim($tplset_name);
+        $tplset = false;
+    	$tplset_name = trim($tplset_name);
         if ($tplset_name != '') {
             $sql = 'SELECT * FROM '.$this->db->prefix('tplset').' WHERE tplset_name='.$this->db->quoteString($tplset_name);
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $tplset;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $tplset = new XoopsTplset();
                 $tplset->assignVars($this->db->fetchArray($result));
-                return $tplset;
             }
         }
-        return false;
+        return $tplset;
     }
 
     function insert(&$tplset)
@@ -146,7 +146,7 @@
         return true;
     }
 
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;
@@ -187,7 +187,7 @@
         return $count;
     }
 
-    function &getList($criteria = null)
+    function getList($criteria = null)
 	{
         $ret = array();
 		$tplsets =& $this->getObjects($criteria, true);

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/user.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/user.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/kernel/user.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -195,7 +195,8 @@
 	 */
 	function &groups()
     {
-        return $this->getGroups();
+        $groups =& $this->getGroups();
+    	return $groups;
     }
     /**
      * Is the user admin ?
@@ -482,19 +483,19 @@
      */
     function &get($id)
     {
-        if (intval($id) > 0) {
+        $user = false;
+    	if (intval($id) > 0) {
             $sql = 'SELECT * FROM '.$this->db->prefix('users').' WHERE uid='.$id;
             if (!$result = $this->db->query($sql)) {
-                return false;
+                return $user;
             }
             $numrows = $this->db->getRowsNum($result);
             if ($numrows == 1) {
                 $user = new XoopsUser();
                 $user->assignVars($this->db->fetchArray($result));
-                return $user;
             }
         }
-        return false;
+        return $user;
     }
 
     /**
@@ -572,7 +573,7 @@
      * @param bool $id_as_key use the UID as key for the array?
      * @return array array of {@link XoopsUser} objects
      */
-    function &getObjects($criteria = null, $id_as_key = false)
+    function getObjects($criteria = null, $id_as_key = false)
     {
         $ret = array();
         $limit = $start = 0;

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/mainfile.dist.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/mainfile.dist.php	2005-11-25 06:58:43 UTC (rev 25)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/mainfile.dist.php	2005-11-25 07:20:20 UTC (rev 26)
@@ -74,6 +74,9 @@
 	define("XOOPS_GROUP_USERS", "2");
 	define("XOOPS_GROUP_ANONYMOUS", "3");
 
+	require_once( XOOPS_PATH . '/Boot/xoops2.php' );
+	global $xoops;
+
 	if (!isset($xoopsOption['nocommon']) && XOOPS_ROOT_PATH != '') {
 		include XOOPS_ROOT_PATH."/include/common.php";
 	}



From skalpa at berlios.de  Fri Nov 25 10:03:12 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 10:03:12 +0100
Subject: [Xoops4-svn] r29 - in XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore: . Pyro Pyro/Smarty.xoobj
Message-ID: <200511250903.jAP93Ccu020817@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 10:02:34 +0100 (Fri, 25 Nov 2005)
New Revision: 29

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/
Log:
Getting ready for the beginning of the fun part



From skalpa at berlios.de  Fri Nov 25 10:07:35 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 10:07:35 +0100
Subject: [Xoops4-svn] r30 - XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class
Message-ID: <200511250907.jAP97ZNE025328@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 10:07:31 +0100 (Fri, 25 Nov 2005)
New Revision: 30

Removed:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/smarty/
Log:
Moved Smarty from /www/class to the new xoops_template_Smarty bundle folder



From skalpa at berlios.de  Fri Nov 25 10:08:21 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 10:08:21 +0100
Subject: [Xoops4-svn] r31 - XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj
Message-ID: <200511250908.jAP98LE2025941@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 10:08:11 +0100 (Fri, 25 Nov 2005)
New Revision: 31

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/
Log:
Moved Smarty from /www/class to the new xoops_template_Smarty bundle folder

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty (from rev 20, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/smarty)



From skalpa at berlios.de  Fri Nov 25 11:15:38 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 11:15:38 +0100
Subject: [Xoops4-svn] r32 - in XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj: plugins smarty/plugins
Message-ID: <200511251015.jAPAFcUA025284@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 11:15:36 +0100 (Fri, 25 Nov 2005)
New Revision: 32

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/function.xoops_link.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.db.php
Removed:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/plugins/function.xoops_link.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/plugins/resource.db.php
Log:
Moved XOOPS specific Smarty plug-ins to their own folder.

Now, the "smarty" folder of the xoops_template_Smarty component contains EXACTLY a vanilla Smarty distribution.

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/function.xoops_link.php (from rev 31, XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/plugins/function.xoops_link.php)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.db.php (from rev 31, XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/plugins/resource.db.php)

Deleted: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/plugins/function.xoops_link.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/plugins/function.xoops_link.php	2005-11-25 09:08:11 UTC (rev 31)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/plugins/function.xoops_link.php	2005-11-25 10:15:36 UTC (rev 32)
@@ -1,102 +0,0 @@
-<?php
-// $Id$
-//  ------------------------------------------------------------------------ //
-//                XOOPS - PHP Content Management System                      //
-//                    Copyright (c) 2000 XOOPS.org                           //
-//                       <http://www.xoops.org/>                             //
-//  ------------------------------------------------------------------------ //
-//  This program is free software; you can redistribute it and/or modify     //
-//  it under the terms of the GNU General Public License as published by     //
-//  the Free Software Foundation; either version 2 of the License, or        //
-//  (at your option) any later version.                                      //
-//                                                                           //
-//  You may not change or alter any portion of this comment or credits       //
-//  of supporting developers from this source code or any supporting         //
-//  source code which is considered copyrighted (c) material of the          //
-//  original comment or credit authors.                                      //
-//                                                                           //
-//  This program is distributed in the hope that it will be useful,          //
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
-//  GNU General Public License for more details.                             //
-//                                                                           //
-//  You should have received a copy of the GNU General Public License        //
-//  along with this program; if not, write to the Free Software              //
-//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
-//  ------------------------------------------------------------------------ //
-
-/*
- * Smarty plugin
- * -------------------------------------------------------------
- * Type:     function
- * Name:     xoops_link
- * Version:  1.0
- * Author:	 Skalpa Keo <skalpa at xoops.org>
- * Purpose:  format URL for linking to specific Xoops page
- * Input:    module	= module to link to (optional, default to current module)
- *           page	= page to link to (optional, default to current page)
- *           params	= query string parameters (optional, default to empty)
- *					ex: urlparm1=,urlparm2,urlparm3=val3, etc.....
- *						urlparm3 value will be set to val3
- *						urlparm2 value will keep current one (no = sign)
- *						urlparm1 value will be set to empty ( = sign, but nothing after)
- *
- *			I.e: The template called by 'index.php?cid=5' calls this function with
- *				{xoops_link page="viewcat.php" urlvars="cid,orderby=titleA"}>
- *			Then the generated URL will be:
- *				XOOPS_URL/modules/MODULENAME/viewcat.php?cid=5&orderby=titleA
- * -------------------------------------------------------------
- */
-
-function smarty_function_xoops_link($params, $smarty) {
-	$urlstr='';
-	if (isset($params['urlvars'])) {
-		$szvars=explode( '&', $params['urlvars'] );
-		$vars=array();
-		// Split the string making an array from the ('name','value') pairs
-		foreach ($szvars as $szvar) {
-			$pos=strpos($szvar,'=');
-			if ( $pos != false ) {			// If a value is specified, use it
-				$vars[] = array( 'name' => substr($szvar,0,$pos), 'value' => substr($szvar,$pos+1) );
-			} else {						// Otherwise use current one (if any)
-				if ( isset($_POST[$szvar]) ) {
-					$vars[] = array( 'name' => $szvar, 'value' => $_POST[$szvar] );
-				} elseif ( isset($_GET[$szvar]) ) {
-					$vars[] = array( 'name' => $szvar, 'value' => $_GET[$szvar] );
-				}
-			}
-		}
-		// Now reconstruct query string from specified variables
-		foreach ($vars as $var) {
-			$urlstr = "$urlstr&{$var['name']}={$var['value']}";
-		}
-		if ( strlen($urlstr) > 0 ) {
-			$urlstr = '?' . substr( $urlstr, 1 );
-		}
-	}
-
-	// Get default module/page from current ones if necessary
-	$module='';
-	$page='';
-	if ( !isset($params['module']) ) {
-		if ( isset($GLOBALS['xoopsModule']) && is_object($GLOBALS['xoopsModule']) ) {
-			$module = $GLOBALS['xoopsModule']->getVar('dirname');
-		}
-	} else {
-		$module = $params['module'];
-	}
-	if ( !isset($params['page']) ) {
-		$cur = $_SERVER['PHP_SELF'];
-		$page = substr( $cur, strrpos( $cur, '/' ) + 1 );
-	} else {
-		$page = $params['page'];
-	}
-	// Now, return entire link URL :-)
-	if ( empty($module) ) {
-		echo XOOPS_URL . "/$page" . $urlstr;
-	} else {
-		echo XOOPS_URL . "/modules/$module/$page" . $urlstr;
-	}
-}
-
-?>
\ No newline at end of file

Deleted: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/plugins/resource.db.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/plugins/resource.db.php	2005-11-25 09:08:11 UTC (rev 31)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/plugins/resource.db.php	2005-11-25 10:15:36 UTC (rev 32)
@@ -1,123 +0,0 @@
-<?php
-/*
- * Smarty plugin
- * ------------------------------------------------------------- 
- * File:     resource.db.php
- * Type:     resource
- * Name:     db
- * Purpose:  Fetches templates from a database
- * -------------------------------------------------------------
- */
-function smarty_resource_db_source($tpl_name, &$tpl_source, &$smarty)
-{
-    $tplfile_handler =& xoops_gethandler('tplfile');
-	$tplobj =& $tplfile_handler->find($GLOBALS['xoopsConfig']['template_set'], null, null, null, $tpl_name, true);
-	if (count($tplobj) > 0) {
-		if (false != $smarty->xoops_canUpdateFromFile()) {
-			$conf_theme = isset($GLOBALS['xoopsConfig']['theme_set']) ? $GLOBALS['xoopsConfig']['theme_set'] : 'default';
-			if ($conf_theme != 'default') {
-				switch ($tplobj[0]->getVar('tpl_type')) {
-					case 'module':
-						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/'.$tpl_name;
-						break;
-					case 'block':
-						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/blocks/'.$tpl_name;
-						break;
-					default:
-						$filepath = "";
-						break;
-				}
-			} else {
-				switch ($tplobj[0]->getVar('tpl_type')) {
-					case 'module':
-						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/'.$tpl_name;
-						break;
-					case 'block':
-						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/blocks/'.$tpl_name;
-						break;
-					default:
-						$filepath = "";
-						break;
-				}
-			}
-			if ($filepath != "" && file_exists($filepath)) {
-				$file_modified = filemtime($filepath);
-				if ($file_modified > $tplobj[0]->getVar('tpl_lastmodified')) {
-					if (false != $fp = fopen($filepath, 'r')) {
-						$filesource = fread($fp, filesize($filepath));
-    					fclose($fp);
-						$tplobj[0]->setVar('tpl_source', $filesource, true);
-						$tplobj[0]->setVar('tpl_lastmodified', time());
-						$tplobj[0]->setVar('tpl_lastimported', time());
-    					$tplfile_handler->forceUpdate($tplobj[0]);
-						$tpl_source = $filesource;
-        				return true;
-					}
-				}
-			}
-		}
-        $tpl_source = $tplobj[0]->getVar('tpl_source');
-        return true;
-    } else {
-		return false;
-	}
-}
-
-function smarty_resource_db_timestamp($tpl_name, &$tpl_timestamp, &$smarty)
-{
-    $tplfile_handler =& xoops_gethandler('tplfile');
-    $tplobj =& $tplfile_handler->find($GLOBALS['xoopsConfig']['template_set'], null, null, null, $tpl_name, false);
-	if (count($tplobj) > 0) {
-		if (false != $smarty->xoops_canUpdateFromFile()) {
-			$conf_theme = isset($GLOBALS['xoopsConfig']['theme_set']) ? $GLOBALS['xoopsConfig']['theme_set'] : 'default';
-			if ($conf_theme != 'default') {
-				switch ($tplobj[0]->getVar('tpl_type')) {
-					case 'module':
-						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/'.$tpl_name;
-						break;
-					case 'block':
-						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/blocks/'.$tpl_name;
-						break;
-					default:
-						$filepath = "";
-						break;
-				}
-			} else {
-				switch ($tplobj[0]->getVar('tpl_type')) {
-					case 'module':
-						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/'.$tpl_name;
-						break;
-					case 'block':
-						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/blocks/'.$tpl_name;
-						break;
-					default:
-						$filepath = "";
-						break;
-				}
-			}
-			if ($filepath != "" && file_exists($filepath)) {
-				$file_modified = filemtime($filepath);
-				if ($file_modified > $tplobj[0]->getVar('tpl_lastmodified')) {
-					$tpl_timestamp = $file_modified;
-					return true;
-				}
-			}
-		}
-        $tpl_timestamp = $tplobj[0]->getVar('tpl_lastmodified');
-        return true;
-    } else {
-		return false;
-	}
-}
-
-function smarty_resource_db_secure($tpl_name, &$smarty)
-{
-    // assume all templates are secure
-    return true;
-}
-
-function smarty_resource_db_trusted($tpl_name, &$smarty)
-{
-    // not used for templates
-}
-?>
\ No newline at end of file



From skalpa at berlios.de  Fri Nov 25 11:28:56 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 11:28:56 +0100
Subject: [Xoops4-svn] r33 - in XoopsCore/branches/tasks/121476-tplset-remove/htdocs: class include
Message-ID: <200511251028.jAPASuUc027096@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 11:28:52 +0100 (Fri, 25 Nov 2005)
New Revision: 33

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/template.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php
Log:
Updated the old code/class to use the new component.

NB: From now on the default delimiters for templates are ([ and ])
This will allow templates to be edited with WYSIWYG editors more easily (with the old-style delimiters, tpl instructions put inside HTML attributes were being escaped and created too much mess).
To ensure old templates still work, files ending with ".html" are processed by a small compiler prefilter that replaces old delimiters with new ones.

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/template.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/template.php	2005-11-25 10:15:36 UTC (rev 32)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/class/template.php	2005-11-25 10:28:52 UTC (rev 33)
@@ -1,208 +1,86 @@
 <?php
-// $Id$
-//  ------------------------------------------------------------------------ //
-//                XOOPS - PHP Content Management System                      //
-//                    Copyright (c) 2000 XOOPS.org                           //
-//                       <http://www.xoops.org/>                             //
-//  ------------------------------------------------------------------------ //
-//  This program is free software; you can redistribute it and/or modify     //
-//  it under the terms of the GNU General Public License as published by     //
-//  the Free Software Foundation; either version 2 of the License, or        //
-//  (at your option) any later version.                                      //
-//                                                                           //
-//  You may not change or alter any portion of this comment or credits       //
-//  of supporting developers from this source code or any supporting         //
-//  source code which is considered copyrighted (c) material of the          //
-//  original comment or credit authors.                                      //
-//                                                                           //
-//  This program is distributed in the hope that it will be useful,          //
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of           //
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            //
-//  GNU General Public License for more details.                             //
-//                                                                           //
-//  You should have received a copy of the GNU General Public License        //
-//  along with this program; if not, write to the Free Software              //
-//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
-//  ------------------------------------------------------------------------ //
-// Author: Kazumi Ono (AKA onokazu)                                          //
-// URL: http://www.myweb.ne.jp/, http://www.xoops.org/, http://jp.xoops.org/ //
-// Project: The XOOPS Project                                                //
-// ------------------------------------------------------------------------- //
-
-if (!defined('SMARTY_DIR')) {
-	exit();
-}
 /**
- * Base class: Smarty template engine
+ * XoopsTpl class definition (XOOPS 2.0 compatibility layer)
+ *
+ * @copyright   The XOOPS project http://www.xoops.org/
+ * @license     http://www.fsf.org/copyleft/gpl.html GNU public license
+ * @since       2.0
+ * @package		mod_xoops20
+ * @version		$Id$
+ * @author      Kazumi Ono (AKA onokazu)
  */
-require_once SMARTY_DIR.'Smarty.class.php';
+/**
+ * This file cannot be requested directly
+ */
+if ( !defined( 'XOOPS_PATH' ) )	die();
 
+
+XOS::import( 'xoops_template_Smarty' );
+
 /**
  * Template engine
  *
- * @package		kernel
- * @subpackage	core
- *
+ * DO NOT USE ANY OF THIS CLASS METHODS !!!! (Access the corresponding public property)
+ * 
  * @author		Kazumi Ono 	<onokazu at xoops.org>
  * @copyright	(c) 2000-2003 The Xoops Project - www.xoops.org
+ * @deprecated
  */
-class XoopsTpl extends Smarty
-{
+class XoopsTpl extends xoops_template_Smarty {
 
-	/**
-	 * Allow update of template files from the themes/ directory?
-     * This should be set to false on an active site to increase performance
-	 */
-	var $_canUpdateFromFile = false;
-
-	/**
-	 * Constructor
-	 **/
-	function XoopsTpl()
-	{
+	function XoopsTpl() {
 		global $xoopsConfig;
-		$this->Smarty();
-		$this->compile_id = null;
-		if ($xoopsConfig['theme_fromfile'] == 1) {
-			$this->_canUpdateFromFile = true;
-			$this->compile_check = true;
-		} else {
-			$this->_canUpdateFromFile = false;
-			$this->compile_check = false;
-		}
-		$this->left_delimiter =  '<{';
-		$this->right_delimiter =  '}>';
-		$this->template_dir = XOOPS_THEME_PATH;
-		$this->cache_dir = XOOPS_CACHE_PATH;
-		$this->compile_dir = XOOPS_COMPILE_PATH;
-		$this->plugins_dir = array(XOOPS_ROOT_PATH.'/class/smarty/plugins');
-		$this->default_template_handler_func = 'xoops_template_create';
-		
-		// Added by goghs on 11-26 to deal with safe mode
-		//if (ini_get('safe_mode') == "1") {
-			$this->use_sub_dirs = false;
-		//} else {
-		//	$this->use_sub_dirs = true;
-		//}
-		// END
 
-		$this->assign(array('xoops_url' => XOOPS_URL, 'xoops_rootpath' => XOOPS_ROOT_PATH, 'xoops_langcode' => _LANGCODE, 'xoops_charset' => _CHARSET, 'xoops_version' => XOOPS_VERSION, 'xoops_upload_url' => XOOPS_UPLOAD_URL));
+		$this->xoops_template_Smarty();
+		$this->assign( array(
+			'xoops_url' => XOOPS_URL,
+			'xoops_rootpath' => XOOPS_ROOT_PATH,
+			'xoops_langcode' => _LANGCODE,
+			'xoops_charset' => _CHARSET,
+			'xoops_version' => XOOPS_VERSION,
+			'xoops_upload_url' => XOOPS_UPLOAD_URL
+		) );
+
 	}
 
-	/**
-	 * Set the directory for templates
-     * 
-     * @param   string  $dirname    Directory path without a trailing slash
-	 **/
-	function xoops_setTemplateDir($dirname)
-	{
+	function xoops_setTemplateDir($dirname) {
 		$this->template_dir = $dirname;
 	}
-
-	/**
-	 * Get the active template directory
-	 * 
-	 * @return  string
-	 **/
-	function xoops_getTemplateDir()
-	{
+	function xoops_getTemplateDir() {
 		return $this->template_dir;
 	}
-
-	/**
-	 * Set debugging mode
-	 * 
-	 * @param   boolean     $flag
-	 **/
-	function xoops_setDebugging($flag=false)
-	{
+	function xoops_setDebugging($flag=false) {
 		$this->debugging = is_bool($flag) ? $flag : false;
 	}
-
-	/**
-	 * Set caching
-	 * 
-	 * @param   integer     $num
-	 **/
-	function xoops_setCaching($num=0)
-	{
+	function xoops_setCaching( $num = 0 ) {
 		$this->caching = (int)$num;
 	}
-
-	/**
-	 * Set cache lifetime
-	 * 
-	 * @param   integer     $num    Cache lifetime
-	 **/
-	function xoops_setCacheTime($num=0)
-	{
-		$num = (int)$num;
-		if ($num <= 0) {
+	function xoops_setCacheTime( $num = 0 ) {
+		if ( ( $num = (int)$num ) <= 0) {
 			$this->caching = 0;
 		} else {
 			$this->cache_lifetime = $num;
 		}
 	}
-
-	/**
-	 * Set directory for compiled template files
-	 * 
-	 * @param   string  $dirname    Full directory path without a trailing slash
-	 **/
-	function xoops_setCompileDir($dirname)
-	{
+	function xoops_setCompileDir($dirname) {
 		$this->compile_dir = $dirname;
 	}
-
-	/**
-	 * Set the directory for cached template files
-	 * 
-	 * @param   string  $dirname    Full directory path without a trailing slash
-	 **/
-	function xoops_setCacheDir($dirname)
-	{
+	function xoops_setCacheDir($dirname) {
 		$this->cache_dir = $dirname;
 	}
-
-	/**
-	 * Render output from template data
-	 * 
-	 * @param   string  $data
-	 * @return  string  Rendered output  
-	 **/
-	function xoops_fetchFromData(&$data)
-	{
-		$dummyfile = XOOPS_CACHE_PATH.'/dummy_'.time();
-		$fp = fopen($dummyfile, 'w');
-		fwrite($fp, $data);
-		fclose($fp);
-		$fetched = $this->fetch('file:'.$dummyfile);
-		unlink($dummyfile);
-		$this->clear_compiled_tpl('file:'.$dummyfile);
-		return $fetched;
-	}
-
-	/**
-	 * 
-	 **/
-	function xoops_canUpdateFromFile()
-	{
+	function xoops_canUpdateFromFile() {
 		return $this->_canUpdateFromFile;
 	}
+	function xoops_fetchFromData( $data ) {
+		return $this->fetchFromData( $data );
+	}
+
 }
 
 /**
- * Smarty default template handler function
- * 
- * @param $resource_type
- * @param $resource_name
- * @param $template_source
- * @param $template_timestamp
- * @param $smarty_obj
- * @return  bool
+ * Useless... just kept for compatibility, just in case
  **/
-function xoops_template_create ($resource_type, $resource_name, &$template_source, &$template_timestamp, &$smarty_obj)
-{
+function xoops_template_create ($resource_type, $resource_name, &$template_source, &$template_timestamp, &$smarty_obj) {
 	if ( $resource_type == 'db' ) {
 		$file_handler =& xoops_gethandler('tplfile');
 		$tpl =& $file_handler->find('default', null, null, null, $resource_name, true);

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php	2005-11-25 10:15:36 UTC (rev 32)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php	2005-11-25 10:28:52 UTC (rev 33)
@@ -58,10 +58,16 @@
     define("XOOPS_UPLOAD_PATH", XOOPS_ROOT_PATH."/uploads");
     define("XOOPS_THEME_PATH", XOOPS_ROOT_PATH."/themes");
 
-    define( "SMARTY_DIR", XOOPS_ROOT_PATH . "/class/smarty/" );
-    define( "XOOPS_CACHE_PATH", XOOPS_VAR_PATH . "/Caches/xoops_template_Smarty" );
+	// ----- BEGIN: Already refactored stuff just kept for compat purposes -----
+  
+    //define( "SMARTY_DIR", XOOPS_PATH . "/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/" );
+    define( "XOOPS_CACHE_PATH", XOOPS_VAR_PATH . "/Caches" );
     define( "XOOPS_COMPILE_PATH", XOOPS_VAR_PATH . "/Application Support/xoops_template_Smarty" );
 
+	// ----- END: Already refactored stuff just kept for compat purposes -----
+
+    
+    
     define("XOOPS_THEME_URL", XOOPS_URL."/themes");
     define("XOOPS_UPLOAD_URL", XOOPS_URL."/uploads");
     set_magic_quotes_runtime(0);



From skalpa at berlios.de  Fri Nov 25 11:37:03 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 11:37:03 +0100
Subject: [Xoops4-svn] r34 - XoopsCore/branches/tasks/121476-tplset-remove/htdocs
Message-ID: <200511251037.jAPAb3nH027888@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 11:37:03 +0100 (Fri, 25 Nov 2005)
New Revision: 34

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php
Log:
Removed XOOPS 1.3 compatibility code from header.php

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php	2005-11-25 10:28:52 UTC (rev 33)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php	2005-11-25 10:37:03 UTC (rev 34)
@@ -28,37 +28,7 @@
     die("XOOPS root path not defined");
 }
 include_once XOOPS_ROOT_PATH.'/class/xoopsblock.php';
-if ($xoopsConfig['theme_set'] != 'default' && file_exists(XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/theme.php')) {
-    // the old way..
-    $xoopsOption['theme_use_smarty'] = 0;
-    if (file_exists(XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/language/lang-'.$xoopsConfig['language'].'.php')) {
-        include XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/language/lang-'.$xoopsConfig['language'].'.php';
-    } elseif (file_exists(XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/language/lang-english.php')) {
-        include XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/language/lang-english.php';
-    }
-    $config_handler =& xoops_gethandler('config');
-    $xoopsConfigMetaFooter =& $config_handler->getConfigsByCat(XOOPS_CONF_METAFOOTER);
-    xoops_header(false);
-    include XOOPS_THEME_PATH.'/'.$xoopsConfig['theme_set'].'/theme.php';
-    $xoopsOption['show_rblock'] = (!empty($xoopsOption['show_rblock'])) ? $xoopsOption['show_rblock'] : 0;
-    // include Smarty template engine and initialize it
-    require_once XOOPS_ROOT_PATH.'/class/template.php';
-    $xoopsTpl = new XoopsTpl();
-    if ($xoopsConfig['debug_mode'] == 3) {
-        $xoopsTpl->xoops_setDebugging(true);
-    }
-    if ($xoopsUser != '') {
-        $xoopsTpl->assign(array('xoops_isuser' => true, 'xoops_userid' => $xoopsUser->getVar('uid'), 'xoops_uname' => $xoopsUser->getVar('uname'), 'xoops_isadmin' => $xoopsUserIsAdmin));
-    }
-    $xoopsTpl->assign('xoops_requesturi', htmlspecialchars($GLOBALS['xoopsRequestUri'], ENT_QUOTES));
-    include XOOPS_ROOT_PATH.'/include/old_functions.php';
 
-    if ($xoopsOption['show_cblock'] || (isset($xoopsModule) && preg_match("/index\.php$/i", xoops_getenv('PHP_SELF')) && $xoopsConfig['startpage'] == $xoopsModule->getVar('dirname'))) {
-        $xoopsOption['show_rblock'] = $xoopsOption['show_cblock'] = 1;
-    }
-    themeheader($xoopsOption['show_rblock']);
-    if ($xoopsOption['show_cblock']) make_cblock();  //create center block
-} else {
     $xoopsOption['theme_use_smarty'] = 1;
     // include Smarty template engine and initialize it
     require_once XOOPS_ROOT_PATH.'/class/template.php';
@@ -236,5 +206,5 @@
         $xoopsTheme['thename'] = $xoopsConfig['theme_set'];
         ob_start();
     }
-}
-?>
+
+?>
\ No newline at end of file



From skalpa at berlios.de  Fri Nov 25 13:36:33 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 13:36:33 +0100
Subject: [Xoops4-svn] r35 - XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins
Message-ID: <200511251236.jAPCaX2o000439@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 13:36:30 +0100 (Fri, 25 Nov 2005)
New Revision: 35

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.db.php
Log:
Updated the old db: Smarty resource handler so it doesn't generate queries anymore

Modified: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.db.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.db.php	2005-11-25 10:37:03 UTC (rev 34)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.db.php	2005-11-25 12:36:30 UTC (rev 35)
@@ -1,123 +1,100 @@
 <?php
-/*
+/**
  * Smarty plugin
+ * 
+ * Kept for XOOPS 2.0 backward compatibility only !!!
+ * 
+ * Use the new xotpl: handler to access XOOPS templates
  * ------------------------------------------------------------- 
  * File:     resource.db.php
  * Type:     resource
  * Name:     db
  * Purpose:  Fetches templates from a database
  * -------------------------------------------------------------
+ * @package xoops20
+ * @deprecated
  */
-function smarty_resource_db_source($tpl_name, &$tpl_source, &$smarty)
-{
-    $tplfile_handler =& xoops_gethandler('tplfile');
-	$tplobj =& $tplfile_handler->find($GLOBALS['xoopsConfig']['template_set'], null, null, null, $tpl_name, true);
-	if (count($tplobj) > 0) {
-		if (false != $smarty->xoops_canUpdateFromFile()) {
-			$conf_theme = isset($GLOBALS['xoopsConfig']['theme_set']) ? $GLOBALS['xoopsConfig']['theme_set'] : 'default';
-			if ($conf_theme != 'default') {
-				switch ($tplobj[0]->getVar('tpl_type')) {
-					case 'module':
-						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/'.$tpl_name;
-						break;
-					case 'block':
-						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/blocks/'.$tpl_name;
-						break;
-					default:
-						$filepath = "";
-						break;
-				}
-			} else {
-				switch ($tplobj[0]->getVar('tpl_type')) {
-					case 'module':
-						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/'.$tpl_name;
-						break;
-					case 'block':
-						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/blocks/'.$tpl_name;
-						break;
-					default:
-						$filepath = "";
-						break;
-				}
-			}
-			if ($filepath != "" && file_exists($filepath)) {
-				$file_modified = filemtime($filepath);
-				if ($file_modified > $tplobj[0]->getVar('tpl_lastmodified')) {
-					if (false != $fp = fopen($filepath, 'r')) {
-						$filesource = fread($fp, filesize($filepath));
-    					fclose($fp);
-						$tplobj[0]->setVar('tpl_source', $filesource, true);
-						$tplobj[0]->setVar('tpl_lastmodified', time());
-						$tplobj[0]->setVar('tpl_lastimported', time());
-    					$tplfile_handler->forceUpdate($tplobj[0]);
-						$tpl_source = $filesource;
-        				return true;
-					}
-				}
-			}
+
+function smarty_resource_db_source($tpl_name, &$tpl_source, &$smarty) {
+
+	if ( $tplPath = smarty_resource_db_lookup( $tpl_name ) ) {
+		if ( $tpl_source = file_get_contents( $tplPath ) ) {
+			return true;
 		}
-        $tpl_source = $tplobj[0]->getVar('tpl_source');
-        return true;
-    } else {
-		return false;
 	}
+	return false;
 }
 
-function smarty_resource_db_timestamp($tpl_name, &$tpl_timestamp, &$smarty)
-{
-    $tplfile_handler =& xoops_gethandler('tplfile');
-    $tplobj =& $tplfile_handler->find($GLOBALS['xoopsConfig']['template_set'], null, null, null, $tpl_name, false);
-	if (count($tplobj) > 0) {
-		if (false != $smarty->xoops_canUpdateFromFile()) {
-			$conf_theme = isset($GLOBALS['xoopsConfig']['theme_set']) ? $GLOBALS['xoopsConfig']['theme_set'] : 'default';
-			if ($conf_theme != 'default') {
-				switch ($tplobj[0]->getVar('tpl_type')) {
-					case 'module':
-						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/'.$tpl_name;
-						break;
-					case 'block':
-						$filepath = XOOPS_THEME_PATH.'/'.$conf_theme.'/templates/'.$tplobj[0]->getVar('tpl_module').'/blocks/'.$tpl_name;
-						break;
-					default:
-						$filepath = "";
-						break;
-				}
-			} else {
-				switch ($tplobj[0]->getVar('tpl_type')) {
-					case 'module':
-						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/'.$tpl_name;
-						break;
-					case 'block':
-						$filepath = XOOPS_ROOT_PATH.'/modules/'.$tplobj[0]->getVar('tpl_module').'/templates/blocks/'.$tpl_name;
-						break;
-					default:
-						$filepath = "";
-						break;
-				}
-			}
-			if ($filepath != "" && file_exists($filepath)) {
-				$file_modified = filemtime($filepath);
-				if ($file_modified > $tplobj[0]->getVar('tpl_lastmodified')) {
-					$tpl_timestamp = $file_modified;
-					return true;
-				}
-			}
+function smarty_resource_db_timestamp($tpl_name, &$tpl_timestamp, &$smarty) {
+
+	if ( $tplPath = smarty_resource_db_lookup( $tpl_name ) ) {
+		if ( $tpl_timestamp = filemtime( $tplPath ) ) {
+			return true;
 		}
-        $tpl_timestamp = $tplobj[0]->getVar('tpl_lastmodified');
-        return true;
-    } else {
-		return false;
 	}
+	return false;
 }
 
-function smarty_resource_db_secure($tpl_name, &$smarty)
-{
+function smarty_resource_db_secure($tpl_name, &$smarty) {
     // assume all templates are secure
     return true;
 }
 
-function smarty_resource_db_trusted($tpl_name, &$smarty)
-{
+function smarty_resource_db_trusted($tpl_name, &$smarty) {
     // not used for templates
 }
+
+/**
+ * Get a template path from its old-style name
+ *
+ * @param string	$tplName	XOOPS 2.0 name of the template to search
+ * @param bool		$refresh	Set this to true to force regeneration of the cache
+ * @return string	Full path to the template (or false if not found)
+ */
+function smarty_resource_db_lookup( $tplName, $refresh = false ) {
+	static $list = null;
+	global $xoops;
+
+	if ( !isset($list) ) {
+		$list = @include $xoops->path( 'var/Caches/xoops_template_Smarty/dbhandler-list.php' );
+	}
+	if ( !is_array($list) || $refresh ) {
+		// List not found: regenerate it
+		$handler =& xoops_gethandler( 'module' );
+		$modules = $handler->getList( null, true );
+		$templates = array();
+	
+		foreach ( array_keys( $modules ) as $modname ) {
+			$modversion = array();
+			if ( @include $xoops->path( "modules/$modname/xoops_version.php" ) ) {
+				if ( isset($modversion['templates']) ) {
+					foreach ( $modversion['templates'] as $tpl ) {
+						$templates[ $tpl['file'] ] = "modules/$modname/templates/" . $tpl['file'];
+					}
+				}
+				if ( isset($modversion['blocks']) ) {
+					foreach ( $modversion['blocks'] as $block ) {
+						if ( isset( $block['template'] ) ) {
+							$templates[ $block['template'] ] = "modules/$modname/templates/blocks/" . $block['template'];
+						}
+					}
+				}
+			}
+		}
+		if ( $fp = fopen( $xoops->path( 'var/Caches/xoops_template_Smarty/dbhandler-list.php' ), 'wt' ) ) {
+			fwrite( $fp, "<?php\nreturn " . var_export( $templates, true ) . ";\n?>" );
+			fclose( $fp );
+			$list = $templates;		// Only save the static if saving was successful
+		} else {
+			trigger_error( "Cannot create db: resource handler templates list", E_USER_WARNING );
+		}
+	}
+	if ( isset( $list[$tplName] ) ) {
+		return $xoops->path( $list[$tplName] );
+	}
+	return false;
+}
+
+
+
 ?>
\ No newline at end of file



From skalpa at berlios.de  Fri Nov 25 15:18:54 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 15:18:54 +0100
Subject: [Xoops4-svn] r36 - XoopsCore/branches/tasks/121476-tplset-remove/htdocs
Message-ID: <200511251418.jAPEIsr3024407@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 15:18:52 +0100 (Fri, 25 Nov 2005)
New Revision: 36

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/footer.php
Log:
Removed XOOPS 1.3 compatibility code from footer.php

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/footer.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/footer.php	2005-11-25 12:36:30 UTC (rev 35)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/footer.php	2005-11-25 14:18:52 UTC (rev 36)
@@ -30,19 +30,7 @@
 if ( !defined("XOOPS_FOOTER_INCLUDED") ) {
 	define("XOOPS_FOOTER_INCLUDED",1);
 	$xoopsLogger->stopTime();
-	if ($xoopsOption['theme_use_smarty'] == 0) {
-		// the old way
-		$footer = $xoopsConfigMetaFooter['footer'].'<br /><div style="text-align:center">Powered by XOOPS &copy; 2002 <a href="http://www.xoops.org/" target="_blank">The XOOPS Project</a></div>';
-		if (isset($xoopsOption['template_main'])) {
-			$xoopsTpl->xoops_setCaching(0);
-			$xoopsTpl->display('db:'.$xoopsOption['template_main']);
-		}
-		if (!isset($xoopsOption['show_rblock'])) {
-			$xoopsOption['show_rblock'] = 0;
-		}
-		themefooter($xoopsOption['show_rblock'], $footer);
-		xoops_footer();
-	} else {
+
 		// RMV-NOTIFY
 		include_once XOOPS_ROOT_PATH . '/include/notification_select.php';
 		if (isset($xoopsOption['template_main'])) {
@@ -87,5 +75,5 @@
 		//-->
 		</script>';
 	}
-}
+
 ?>



From skalpa at berlios.de  Fri Nov 25 17:26:34 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Fri, 25 Nov 2005 17:26:34 +0100
Subject: [Xoops4-svn] r37 - in XoopsCore/branches/tasks/121476-tplset-remove: XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj htdocs
Message-ID: <200511251626.jAPGQYJ4001359@sheep.berlios.de>

Author: skalpa
Date: 2005-11-25 17:26:34 +0100 (Fri, 25 Nov 2005)
New Revision: 37

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/render-2.0.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/xo-info.php
Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/footer.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php
Log:
Added the first version of the new theme engine.

BC is working: the engine can display 2.3+ themes and 2.0 themes without problems.
See the xoops_pyro_Theme component inline comments, and the new default theme for better understanding (I'll add this new theme a little later).

NB: Caching has been broken (the old crappy code was just too messy to be moved correctly). I'll fix that.

Added: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/render-2.0.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/render-2.0.php	2005-11-25 14:18:52 UTC (rev 36)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/render-2.0.php	2005-11-25 16:26:34 UTC (rev 37)
@@ -0,0 +1,16 @@
+<?php
+
+	$this->canvasTemplate	= './theme.html';
+	$this->pageTemplate		= '';
+	
+	// XOOPS 2.0 themes need the content to be rendered and assigned to the var 'xoops_contents'
+	ob_start();
+	$this->renderZone( 'content' );
+	$this->content .= ob_get_contents();
+	ob_end_clean();
+	
+	$this->template->assign( 'xoops_contents', $this->content );
+
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/render-2.0.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php	2005-11-25 14:18:52 UTC (rev 36)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php	2005-11-25 16:26:34 UTC (rev 37)
@@ -0,0 +1,231 @@
+<?php
+/**
+* xoops_pyro_Theme component class file
+*
+* @copyright	The Xoops project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @package      xoops_pyro
+* @subpackage   xoops_pyro_Theme
+* @author       Skalpa Keo <skalpa at xoops.org>
+* @since        2.3.0
+* @version		$Id$
+*/
+
+/**
+* xoops_pyro_ThemeFactory
+*
+* @author 		Skalpa Keo
+* @package		xoops_pyro
+* @subpackage	xoops_pyro_ThemeFactory
+* @since        2.3.0
+*/
+class xoops_pyro_ThemeFactory {
+	/**
+	 * Currently enabled themes (if empty, all the themes in themes/ are allowed)
+	 * 
+	 * @var array
+	 */
+	var $allowedThemes = array();
+	/**
+	 * Default theme to instanciate if none specified
+	 * 
+	 * @var string
+	 */
+	var $defaultTheme = 'default-web';
+
+	/**
+	 * Instanciate the specified theme
+	 */
+	function &createInstance( $options = array(), $initArgs = array() ) {
+		if ( @empty( $options['folderName'] ) ) {
+			$options['folderName'] = $this->defaultTheme;
+		} elseif ( !empty( $this->allowedThemes ) && !in_array( $options['folderName'], $this->allowedThemes ) ) {
+			$options['folderName'] = $this->defaultTheme;
+		}
+		$inst =& XOS::createInstanceOf( "xoops_pyro_Theme", $options, $initArgs );
+		return $inst;
+	}
+
+	/**
+	 * List the available themes
+	 *
+	 * @param	boolean $allowed Whether to return the allowed themes, or all of them
+	 *  @return	array
+	 */
+	function enumerate( $allowed = true ) {
+		global $xoops;
+		$themes = array();
+		if ( $dh = opendir( $xoops2->path('/themes/') ) ) {
+			while ( $file = readdir($dh) ) {
+				if ( $file{0} != '.' && $file != 'CVS' ) {
+					$themes[] = $file;
+				}
+			}
+			closedir( $dh );
+		}
+		if ( !empty($this->allowedThemes) && $allowed ) {
+			return array_intersect( $themes, $this->allowedThemes );
+		}
+		return $themes;
+	}
+
+}
+
+class xoops_pyro_Theme {
+   /**
+    * The name of this theme
+    * @var string
+    */
+	var $folderName = '';
+   /**
+    * Physical path of this theme folder
+    * @var string
+    */
+	var $path = '';
+	var $url = '';
+   /**
+   * Whether or not the theme engine should include output generated by php
+   * @var string
+   */
+	var $bufferOutput = true;
+	/**
+	* Default content-type of pages generated by this theme
+	* @var string
+	*/
+	var $contentType = 'text/html';
+	/**
+	* Page-level template to use (relative to templates/page/)
+	* @var string
+	*/
+	var $canvasTemplate = '';
+	/**
+	* Page-level template to use (relative to templates/page/)
+	* @var string
+	*/
+	var $pageTemplate = '';
+	/**
+	* The file to fetch from the theme
+	* @var string
+	*/
+	var $contentTemplate = '';
+	/**
+	* Text content to display right after the contentTemplate output
+	* @var string
+	*/
+	var $content = '';
+	/**
+	* The API version supported by this theme (used to achieve BC)
+	* @var string
+	*/
+	var $themeAPI = '2.3';
+	
+	var $renderCount = 0;
+	/**
+	 * Pointer to the theme template engine
+	 *
+	 * @var object
+	 */
+	var $template = false;
+   /**#@-*/
+
+	function xoInit( $options = array() ) {
+		global $xoops;
+
+		$this->path	= $xoops->path( '/themes/' . $this->folderName );
+
+		$this->template =& XOS::create( 'xoops_template_Smarty' );
+		$this->template->currentTheme =& $this;
+		$this->template->compile_id = $this->folderName;
+
+		if ( $info = @include "$this->path/xo-info.php" ) {
+			XOS::apply( $this, $info );
+		} else {
+			$this->themeAPI = '2.0';
+		}
+		if ( $this->bufferOutput ) {
+			ob_start();
+		}
+		return true;
+	}
+
+	/**
+	 * Render the page
+	 *
+	 * The theme engine builds pages from 3 templates: canvas, page and content.
+	 * 
+	 * The canvas template is the outermost one. It is the one containing the html container
+	 * elements (html,head,body), the header, footer and the left and right columns.
+	 * 
+	 * Standard themes should be delivered with the following canvas templates:
+	 * - canvas-default.xotpl: The "normal" template, used by most pages on a site
+	 * - canvas-dialog.xotpl: A lightweight canvas, without left and right columns, used by popups
+	 * - canvas-email.xotpl: The canvas used by e-mails
+	 * 
+	 * The page template is the container for center blocks and the content. Themes don't have to
+	 * include several page templates, but applications may have their own page template that is
+	 * used instead of the default one (i.e: the XOOPS Management module).
+	 * 
+	 * A module can call this method directly and specify what templates the theme engine must use.
+	 * If render() hasn't been called before, the theme defaults will be used for the canvas and
+	 * page template (and xoopsOption['template_main'] for the content).
+	 * 
+	 * @param string $canvasTpl		The canvas template, if different from the theme default
+	 * @param string $pageTpl		The page template, if different from the theme default
+	 * @param string $contentTpl	The content template
+	 * @param array	 $vars			Template variables to send to the template engine
+	 */
+	function render( $canvasTpl = null, $pageTpl = null, $contentTpl = null, $vars = array() ) {
+		global $xoops;
+
+		if ( !$this->renderCount && $this->bufferOutput ) {
+			$this->content .= ob_get_contents();
+			ob_end_clean();
+		}
+		if ( $this->themeAPI != '2.3' ) {
+			include $xoops->path( $this->xoBundleRoot . '/render-' . $this->themeAPI . '.php' );
+		}
+		if ( !empty($canvasTpl) ) {
+			$this->canvasTemplate = $canvasTpl;
+		}
+		if ( !empty($pageTpl) ) {
+			$this->pageTemplate = $pageTpl;
+		}
+		if ( !empty($contentTpl) ) {
+			$this->contentTemplate = $contentTpl;
+		}
+		$vars['xoops']		=& $xoops;
+		$vars['xoTheme']	=& $this;
+		$this->template->assign( $vars );
+		$this->renderZone( 'canvas' );
+		$this->renderCount++;
+		
+	}
+	
+	/**
+	 * Render the specified page part
+	 * 
+	 * @param string $zone
+	 */	
+	function renderZone( $zone ) {
+		$zones = array( 'canvas' => 0, 'page' => 1, 'content' => 2 );
+		if ( isset( $zones[$zone] ) ) {
+			$tpl = $zone . 'Template';
+			$tpl = $this->$tpl;
+			if ( !empty( $tpl ) ) {
+				if ( $tpl{0} == '.' ) {
+					$tpl = $this->path . substr( $tpl, 1 );
+				}
+				$this->template->display( $tpl );
+				if ( !empty($this->content) && $zone == 'content' ) {
+					echo $this->content;
+				}
+			} elseif ( $zone != 'content' ) {
+				$this->renderZone( $zones[$zone] + 1 );
+			}
+		}	
+	}
+
+}
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/xo-info.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/xo-info.php	2005-11-25 14:18:52 UTC (rev 36)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/xo-info.php	2005-11-25 16:26:34 UTC (rev 37)
@@ -0,0 +1,27 @@
+<?php
+/**
+* xoops_pyro_Theme bundle information file
+*
+* See the enclosed file LICENSE for licensing information.
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+*
+* @copyright    The XOOPS project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @since        2.3.0
+* @version		$Id$
+* @author		Skalpa Keo <skalpa at xoops.org>
+*/
+
+return array(
+	'xoBundleDisplayName' => 'XOOPS Theme component',
+	'xoBundleIdentifier' => 'xoops_pyro_Theme',
+	'xoClassPath' => '/theme.php',
+	'xoFactory' => 'xoops_pyro_ThemeFactory',
+	'xoServices' => array(
+		'xoops_pyro_ThemeFactory' => array(
+			'xoClassPath' => '/theme.php',
+		),
+	),
+);
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/xo-info.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/footer.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/footer.php	2005-11-25 14:18:52 UTC (rev 36)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/footer.php	2005-11-25 16:26:34 UTC (rev 37)
@@ -24,40 +24,37 @@
 //  along with this program; if not, write to the Free Software              //
 //  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA //
 //  ------------------------------------------------------------------------ //
-if (!defined("XOOPS_ROOT_PATH")) {
-    die("XOOPS root path not defined");
-}
-if ( !defined("XOOPS_FOOTER_INCLUDED") ) {
-	define("XOOPS_FOOTER_INCLUDED",1);
+/**
+ * This file cannot be requested directly
+ */
+if ( !defined( 'XOOPS_ROOT_PATH') )			die();
+
+if ( defined( 'XOOPS_FOOTER_INCLUDED' ) )	return;
+
+
+	define( 'XOOPS_FOOTER_INCLUDED', 1 );
 	$xoopsLogger->stopTime();
 
-		// RMV-NOTIFY
-		include_once XOOPS_ROOT_PATH . '/include/notification_select.php';
-		if (isset($xoopsOption['template_main'])) {
-			if (isset($xoopsCachedTemplateId)) {
-				$xoopsTpl->assign('xoops_contents', $xoopsTpl->fetch('db:'.$xoopsOption['template_main'], $xoopsCachedTemplateId));
-			} else {
-				$xoopsTpl->assign('xoops_contents', $xoopsTpl->fetch('db:'.$xoopsOption['template_main']));
-			}
-		} else {
-			if (isset($xoopsCachedTemplate)) {
-				$xoopsTpl->assign('dummy_content', ob_get_contents());
-				$xoopsTpl->assign('xoops_contents', $xoopsTpl->fetch($xoopsCachedTemplate, $xoopsCachedTemplateId));
-			} else {
-				$xoopsTpl->assign('xoops_contents', ob_get_contents());
-			}
-			ob_end_clean();
+	// RMV-NOTIFY
+	include_once XOOPS_ROOT_PATH . '/include/notification_select.php';
+	
+	if (!headers_sent()) {
+		header('Content-Type:text/html; charset='._CHARSET);
+		header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');
+		//header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+		header('Cache-Control: private, no-cache');
+		header('Pragma: no-cache');
+	}
+	
+	global $xoops;
+	if ( !$xoops->services['theme']->renderCount ) {
+		if ( isset( $xoopsOption['template_main'] ) ) {
+			$xoops->services['theme']->contentTemplate = 'db:' . $xoopsOption['template_main'];
 		}
-		if (!headers_sent()) {
-			header('Content-Type:text/html; charset='._CHARSET);
-			header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');
-			//header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
-			header('Cache-Control: private, no-cache');
-			header('Pragma: no-cache');
-		}
-		$xoopsTpl->xoops_setCaching(0);
-		$xoopsTpl->display($xoopsConfig['theme_set'].'/theme.html');
+		$xoops->services['theme']->template->assign( $xoopsTpl->_tpl_vars );
+		$xoops->services['theme']->render();
 	}
+		
 	if ($xoopsConfig['debug_mode'] == 2 && $xoopsUserIsAdmin) {
 		echo '<script type="text/javascript">
 		<!--//
@@ -76,4 +73,5 @@
 		</script>';
 	}
 
+
 ?>

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php	2005-11-25 14:18:52 UTC (rev 36)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php	2005-11-25 16:26:34 UTC (rev 37)
@@ -27,8 +27,16 @@
 if (!defined("XOOPS_ROOT_PATH")) {
     die("XOOPS root path not defined");
 }
-include_once XOOPS_ROOT_PATH.'/class/xoopsblock.php';
 
+	global $xoops;
+	$xoops->loadService( 'theme', 'xoops_pyro_Theme', array( 'folderName' => $xoopsConfig['theme_set'] ) );
+	
+	//var_export( $xoops->services['theme'] );
+
+
+
+	include_once XOOPS_ROOT_PATH.'/class/xoopsblock.php';
+
     $xoopsOption['theme_use_smarty'] = 1;
     // include Smarty template engine and initialize it
     require_once XOOPS_ROOT_PATH.'/class/template.php';



From skalpa at berlios.de  Sun Nov 27 10:01:03 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 27 Nov 2005 10:01:03 +0100
Subject: [Xoops4-svn] r38 - XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty
Message-ID: <200511270901.jAR913QJ003450@sheep.berlios.de>

Author: skalpa
Date: 2005-11-27 10:00:31 +0100 (Sun, 27 Nov 2005)
New Revision: 38

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/Smarty.class.php
Log:
Made a little Smarty hack to ensure compiler functions can also have access to the smarty class instance, and not only the compiler instances as now.
I don't like having a hacked Smarty here, so I'll send that to the Smarty author to ask him if he can't enable this by default.

Modified: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/Smarty.class.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/Smarty.class.php	2005-11-25 16:26:34 UTC (rev 37)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty/Smarty.class.php	2005-11-27 09:00:31 UTC (rev 38)
@@ -1474,6 +1474,9 @@
         $smarty_compiler->compile_id        = $this->_compile_id;
         $smarty_compiler->_config            = $this->_config;
         $smarty_compiler->request_use_auto_globals  = $this->request_use_auto_globals;
+		// --- XOOPS HACK: Ensure compiler plug-ins have access to this Smarty instance too
+		$smarty_compiler->template_engine =& $this;
+		// --- XOOPS HACK
 
         if (isset($cache_include_path) && isset($this->_cache_serials[$cache_include_path])) {
             $smarty_compiler->_cache_serial = $this->_cache_serials[$cache_include_path];



From skalpa at berlios.de  Sun Nov 27 10:21:09 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 27 Nov 2005 10:21:09 +0100
Subject: [Xoops4-svn] r39 - XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include
Message-ID: <200511270921.jAR9L9RB024986@sheep.berlios.de>

Author: skalpa
Date: 2005-11-27 10:20:57 +0100 (Sun, 27 Nov 2005)
New Revision: 39

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php
Log:
Fixed URL rewriting compatibility (again... anti-lol)

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php	2005-11-27 09:00:31 UTC (rev 38)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/common.php	2005-11-27 09:20:57 UTC (rev 39)
@@ -230,8 +230,8 @@
         unset($allowed, $group);
     }
 
-    if (file_exists('./xoops_version.php')) {
-        $url_arr = explode('/',strstr($xoopsRequestUri,'/modules/'));
+    if ( file_exists('./xoops_version.php') ) {
+        $url_arr = explode( '/', strstr( $_SERVER['SCRIPT_NAME'], '/modules/' ) );
         $module_handler =& xoops_gethandler('module');
         $xoopsModule =& $module_handler->getByDirname($url_arr[2]);
         unset($url_arr);



From skalpa at berlios.de  Sun Nov 27 10:25:36 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 27 Nov 2005 10:25:36 +0100
Subject: [Xoops4-svn] r40 - XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include
Message-ID: <200511270925.jAR9Pa9P029514@sheep.berlios.de>

Author: skalpa
Date: 2005-11-27 10:25:34 +0100 (Sun, 27 Nov 2005)
New Revision: 40

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/functions.php
Log:
Added the xoops_load_lang_file() function from 2.2.3

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/functions.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/functions.php	2005-11-27 09:20:57 UTC (rev 39)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/functions.php	2005-11-27 09:25:34 UTC (rev 40)
@@ -138,6 +138,18 @@
 }
 
 /**
+* Load the specified localized strings file
+*/
+function xoops_load_lang_file( $filename, $module = '', $default = 'english' ) {
+	$lang = $GLOBALS['xoopsConfig']['language'];
+	$path = XOOPS_ROOT_PATH . ( empty($module) ? '/' : "/modules/$module/" ) . 'language';
+	if ( !( $ret = include_once( "$path/$lang/$filename.php" ) ) ) {
+		$ret = include_once( "$path/$default/$filename.php" );
+	}
+	return $ret;
+}
+
+/**
 * Deprecated, use {@link XoopsSecurity} class instead
 **/
 function xoops_refcheck($docheck=1)



From skalpa at berlios.de  Sun Nov 27 10:29:11 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 27 Nov 2005 10:29:11 +0100
Subject: [Xoops4-svn] r41 - XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot
Message-ID: <200511270929.jAR9TBRB030543@sheep.berlios.de>

Author: skalpa
Date: 2005-11-27 10:29:09 +0100 (Sun, 27 Nov 2005)
New Revision: 41

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/kernel.php
Log:
Fixed the xoops_kernel_Xoops2::path() method URL generation logic

Modified: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/kernel.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/kernel.php	2005-11-27 09:25:34 UTC (rev 40)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Boot/kernel.php	2005-11-27 09:29:09 UTC (rev 41)
@@ -27,7 +27,7 @@
 class xoops_kernel_Xoops2 {
 	var $xoBundleIdentifier		= 'xoops_kernel_Xoops2';
 	var $xoRunMode				= XO_MODE_PROD;
-	var $xoShortVersionString	= 'XOOPS 2.3.0-dev';
+	var $xoShortVersionString	= 'XOOPS 2.3.0-dev (Mistrust)';
 
 	var $xoBundleRoot = 'XOOPS/Frameworks/XoopsCore/Foundation/Kernel.xofrm';
 	
@@ -98,6 +98,12 @@
 	 * @access private
 	 */
 	var $hasShutdown			= false;
+	/**
+	 * Semi-relative URI to this XOOPS files
+	 *
+	 * @var string
+	 */
+	var $baseLocation			= '';
 
 	var $isVirtual				= false;
 
@@ -131,6 +137,12 @@
 
 		$this->bootFile = str_replace( array( '/', '\\' ), '', $this->bootFile );		// Might be useless check, but this one won't hurt
 		
+		$this->baseLocation = $this->isSecure ? $this->secureLocation : $this->hostLocation;
+		if ( false !== ( $pos = strpos( $this->baseLocation, '/' ) ) ) {
+			$this->baseLocation = substr( $this->baseLocation, $pos );
+		} else {
+			$this->baseLocation = '';
+		}
 		//$this->services['logger'] = $this->services['errorhandler'] = $this;
 
 	}
@@ -227,7 +239,13 @@
 			if ( !$virtual ) {
 				return !isset( $this->paths[$parts[0]] ) ? '' : ( $this->paths[$parts[0]][0] . '/' . $parts[1] );
 			} else {
-				return !isset( $this->paths[$parts[0]][2] ) ? '' : ( $this->paths[$parts[0]][0][2] . '/' . $parts[1] );
+				if ( !isset( $this->paths[$parts[0]][1] ) ) {
+					return false;
+				}
+				if ( empty( $this->paths[$parts[0]][1] ) ) {
+					return $this->baseLocation . '/' . $parts[1];
+				}
+				return $this->baseLocation . '/' . $this->paths[$parts[0]][1] . '/' . $parts[1];
 			}
 		} else {
 			$root = XOS::classVar( $parts[0], 'xoBundleRoot' );



From skalpa at berlios.de  Sun Nov 27 10:36:37 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 27 Nov 2005 10:36:37 +0100
Subject: [Xoops4-svn] r42 - XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj
Message-ID: <200511270936.jAR9abSJ031635@sheep.berlios.de>

Author: skalpa
Date: 2005-11-27 10:36:32 +0100 (Sun, 27 Nov 2005)
New Revision: 42

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php
Log:
Added methods for setting page metas

Modified: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php	2005-11-27 09:29:09 UTC (rev 41)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php	2005-11-27 09:36:32 UTC (rev 42)
@@ -118,6 +118,17 @@
 	* @var string
 	*/
 	var $themeAPI = '2.3';
+	/**
+	* Name of this theme parent (if any)
+	* @var string
+	*/
+	var $parentTheme = '';
+	/**
+	* Array containing all this theme ancestors (parent,grand-parent,etc...)
+	* @var array
+	* @access protected
+	*/
+	var $parentInfos = array();
 	
 	var $renderCount = 0;
 	/**
@@ -159,7 +170,7 @@
 	 * Standard themes should be delivered with the following canvas templates:
 	 * - canvas-default.xotpl: The "normal" template, used by most pages on a site
 	 * - canvas-dialog.xotpl: A lightweight canvas, without left and right columns, used by popups
-	 * - canvas-email.xotpl: The canvas used by e-mails
+	 * - canvas-email.xotpl: The canvas used by e-mails sent by the site
 	 * 
 	 * The page template is the container for center blocks and the content. Themes don't have to
 	 * include several page templates, but applications may have their own page template that is
@@ -224,7 +235,97 @@
 			}
 		}	
 	}
+	function renderAttributes( $coll ) {
+		$str = '';
+		foreach ( $coll as $name => $val ) {
+			if ( $name != '_' ) {
+				$str .= ' ' . $name . '="' . htmlspecialchars( $val, ENT_QUOTES ) . '"';
+			}
+		}
+		return $str;
+	}
+	
+	
+	function resourcePath( $path ) {
+		global $xoops;
+		$isWeb = true;
+		if ( $path{0} == '/' ) {
+			$path = substr( $path, 1 );
+			$isWeb = false;
+		}
+		if ( file_exists( "$this->path/$path" ) ) {
+			return "themes/$this->folderName/$path";
+		}
+		return $isWeb ? "www/$path" : $path;
+	}
 
+	
+	
+	
+	
+	
+    /**
+    * Add Javascript file or JS code to the document head
+    *
+    * @param string $src path to .js file
+    * @param array $attributes name => value paired array of attributes such as title
+    * @param string $content JavaScript code
+    *
+    * @return void
+    **/
+    function addScript( $src = '', $attributes = array(), $content = '' ) {
+    	global $xoops;
+		if ( !empty( $src ) ) {
+			$attributes['src'] = $xoops->url( $this->resourcePath( $src ) );
+		}
+		if ( !empty( $content ) ) {
+			$attributes['_'] = $content;
+		}
+		if ( !isset( $attributes['type'] ) ) {
+			$attributes['type'] = 'text/javascript';
+		}
+		$this->setMeta( 'script', $src, $attributes );
+    }
+
+    /**
+    * Add StyleSheet or CSS code to the document head
+    *
+    * @param string $src path to .css file
+    * @param array $attributes name => value paired array of attributes such as title
+    * @param string $content CSS code
+    *
+    * @return void
+    **/
+    function addStylesheet( $src = '', $attributes = array(), $content = '' ) {
+		if ( !empty( $src ) ) {
+			$attributes['href'] = $xoops->url( $this->resourcePath( $src ) );
+		}
+		if ( !empty( $content ) ) {
+			$attributes['_'] = $content;
+		}
+    	$this->setMeta( 'stylesheet', $src, $attributes );
+    }
+	/**
+	 * Change output page meta-information
+	 *
+	 * 
+	 */
+    function setMeta( $type = 'meta', $name = '', $content = '' ) {
+		if ( !isset( $this->metas[$type] ) ) {
+			$this->metas[$type] = array();
+		}
+    	if ( isset($name) ) {
+			$this->metas[$type][$name] = $content;
+		} else {
+			$this->metas[$type][] = 	$content;
+		}
+		return $content;
+    }
+	
+
+	
+	
+
 }
 
 



From skalpa at berlios.de  Sun Nov 27 10:54:26 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 27 Nov 2005 10:54:26 +0100
Subject: [Xoops4-svn] r43 - XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj
Message-ID: <200511270954.jAR9sQ0q000619@sheep.berlios.de>

Author: skalpa
Date: 2005-11-27 10:54:25 +0100 (Sun, 27 Nov 2005)
New Revision: 43

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php
Log:
Added a new meta-related method to add <link> metas

Modified: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php	2005-11-27 09:36:32 UTC (rev 42)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php	2005-11-27 09:54:25 UTC (rev 43)
@@ -258,12 +258,7 @@
 		}
 		return $isWeb ? "www/$path" : $path;
 	}
-
 	
-	
-	
-	
-	
     /**
     * Add Javascript file or JS code to the document head
     *
@@ -306,20 +301,33 @@
     	$this->setMeta( 'stylesheet', $src, $attributes );
     }
 	/**
-	 * Change output page meta-information
-	 *
+	 * Add a <link> to the header
 	 * 
+	 * @param string	$rel		Relationship from the current doc to the anchored one
+	 * @param string	$href		URI of the anchored document
+	 * @param array		$attributes	Additional attributes to add to the <link> element
 	 */
-    function setMeta( $type = 'meta', $name = '', $content = '' ) {
+	function addLink( $rel, $href = '', $attributes = array() ) {
+		global $xoops;
+		if ( !empty( $href ) ) {
+			$attributes['href'] = $href;
+		}
+		$this->setMeta( 'link', $rel, $attributes );
+	}
+    
+	/**
+	 * Change output page meta-information
+	 */
+    function setMeta( $type = 'meta', $name = '', $value = '' ) {
 		if ( !isset( $this->metas[$type] ) ) {
 			$this->metas[$type] = array();
 		}
     	if ( isset($name) ) {
-			$this->metas[$type][$name] = $content;
+			$this->metas[$type][$name] = $value;
 		} else {
-			$this->metas[$type][] = 	$content;
+			$this->metas[$type][] = 	$value;
 		}
-		return $content;
+		return $value;
     }
 	
 



From skalpa at berlios.de  Sun Nov 27 10:58:12 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 27 Nov 2005 10:58:12 +0100
Subject: [Xoops4-svn] r44 - in XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj: . templates
Message-ID: <200511270958.jAR9wCa5001412@sheep.berlios.de>

Author: skalpa
Date: 2005-11-27 10:58:09 +0100 (Sun, 27 Nov 2005)
New Revision: 44

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/templates/
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/templates/metas.xotpl
Log:
Added a new template that can be included by themes and takes care of rendering all the page metas

Added: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/templates/metas.xotpl
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/templates/metas.xotpl	2005-11-27 09:54:25 UTC (rev 43)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/templates/metas.xotpl	2005-11-27 09:58:09 UTC (rev 44)
@@ -0,0 +1,28 @@
+
+
+([foreach from=$xoTheme->metas.meta key=name item=content])
+	<meta name="([$name])" content="([$content])" />
+([/foreach])
+
+([foreach from=$xoTheme->metas.script item=attributes])
+	<script([$xoTheme->renderAttributes($attributes)])>([if !empty( $attributes._ ) ])
+	//<[!CDATA[
+	([$attributes._])
+	//]]>([/if])</script>
+([/foreach])
+
+([foreach from=$xoTheme->metas.stylesheet item=attributes])
+([if empty( $attributes._ )])
+	<link([$xoTheme->renderAttributes($attributes)]) />
+([else])
+	<style([$xoTheme->renderAttributes($attributes)])>
+	/* <[!CDATA[ */
+	([$attributes._])
+	/* //]]> */
+	</style>
+([/if])
+([/foreach])
+	
+([foreach from=$xoTheme->metas.link key=rel item=attributes])
+	<link rel="([$rel])"([$xoTheme->renderAttributes($attributes)]) />
+([/foreach])



From skalpa at berlios.de  Sun Nov 27 11:13:09 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 27 Nov 2005 11:13:09 +0100
Subject: [Xoops4-svn] r45 - in XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore: . Logos Logos/PageBuilder.xoobj
Message-ID: <200511271013.jARAD925003958@sheep.berlios.de>

Author: skalpa
Date: 2005-11-27 11:13:07 +0100 (Sun, 27 Nov 2005)
New Revision: 45

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/builder.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/xo-info.php
Log:
Moved blocks aggregation code from header.php to a custom class (if you wonder about the folder name: Logos will be the name of the portal module ;)).
Notable changes:
- Blocks use the new xotpl: resource handler, and can now be customized by themes
- The block array assigned to the theme template contains additional vars:
module: Name of this block owner module
weight: Weight given to the block in the admin
name: Identifier for the block type
lastmod: Last modification date

The 'name' var will change later: right now there is no way to get an identifier for the block type (the 'name' specified in xoops_version.php is translatable :-( and will change with the language)

Added: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/builder.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/builder.php	2005-11-27 09:58:09 UTC (rev 44)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/builder.php	2005-11-27 10:13:07 UTC (rev 45)
@@ -0,0 +1,110 @@
+<?php
+/**
+ * xoops_logos_PageBuilder component class file
+ *
+ * @copyright	The XOOPS project http://www.xoops.org/
+ * @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+ * @package      xoops_logos
+ * @subpackage   xoops_logos_PageBuilder
+ * @version		$Id$
+ * @author       Skalpa Keo <skalpa at xoops.org>
+ * @since        2.3.0
+ */
+/**
+ * This file cannot be requested directly
+ */
+if ( !defined( 'XOOPS_PATH' ) )	exit();
+
+include_once XOOPS_ROOT_PATH . '/class/xoopsblock.php';
+
+/**
+ * xoops_logos_PageBuilder main class
+ *
+ * @package     xoops_logos
+ * @subpackage  xoops_logos_PageBuilder
+ * @author 		Skalpa Keo
+ * @since       2.3.0
+ */
+class xoops_logos_PageBuilder {
+	
+	var $blocks = array();	
+
+	function retrieveBlocks() {
+		global $xoopsUser, $xoopsModule, $xoopsConfig;
+		
+		if ( @is_object( $xoopsModule ) ) {
+			list( $mid, $dirname ) = array( $xoopsModule->getVar('mid'), $xoopsModule->getVar('dirname') );
+		} else {
+			list( $mid, $dirname ) = array( 0, 'system' );
+		}
+		$startMod = ( $xoopsConfig['startpage'] == '--' ) ? 'system' : $xoopsConfig['startpage'];
+		$isStart = ( substr( $_SERVER['SCRIPT_NAME'], -9 ) == 'index.php' && $startMod == $dirname );
+		
+		$groups = @is_object( $xoopsUser ) ? $xoopsUser->getGroups() : array( XOOPS_GROUP_ANONYMOUS );
+		
+		$oldzones = array(
+        	XOOPS_SIDEBLOCK_LEFT		=> 'canvas_left',
+        	XOOPS_SIDEBLOCK_RIGHT		=> 'canvas_right',
+        	XOOPS_CENTERBLOCK_CENTER	=> 'page_top',
+        	XOOPS_CENTERBLOCK_LEFT		=> 'page_topleft',
+        	XOOPS_CENTERBLOCK_RIGHT		=> 'page_topright',
+		);
+
+		$xoopsblock = new XoopsBlock();
+    	$block_arr = array();
+	    $block_arr =& $xoopsblock->getAllByGroupModule( $groups, $mid, $isStart, XOOPS_BLOCK_VISIBLE);
+	    foreach ( $block_arr as $block ) {
+	    	$side = $oldzones[ $block->getVar('side') ];
+	    	if ( $var = $this->buildBlock( $block ) ) {
+	    		$this->blocks[$side][] = $var;
+	    	}
+	    }
+	}
+	
+	function buildBlock( $xobject ) {
+		// The lame type workaround will change
+		$block = array(
+			'module'	=> $xobject->getVar( 'dirname' ),
+			'title'		=> $xobject->getVar( 'title' ),
+			'name'		=> strtolower( preg_replace( '/[^0-9a-zA-Z_]/', '', str_replace( ' ', '_', $xobject->getVar( 'name' ) ) ) ),
+			'weight'	=> $xobject->getVar( 'weight' ),
+			'lastmod'	=> $xobject->getVar( 'last_modified' ),
+		);
+
+		global $xoopsTpl, $xoopsLogger;
+		
+		$bcachetime = intval( $xobject->getVar('bcachetime') );
+        if (empty($bcachetime)) {
+            $xoopsTpl->caching = 0;
+        } else {
+            $xoopsTpl->caching = 2;
+            $xoopsTpl->cache_lifetime = $bcachetime;
+        }
+		if ( '' != ( $tplName = $xobject->getVar('template') ) ) {
+			$tplName = "xotpl:modules/{$block['module']}/templates/blocks/$tplName";
+		} else {
+			$tplName = "xotpl:modules/system/templates/blocks/system_block_dummy.html";
+		}
+		$cacheid = 'blk_' . $xobject->getVar('bid') . ':' . md5( serialize( $xobject->getVar( 'options', 'n' ) ) );
+             
+        if ( !$bcachetime || !$xoopsTpl->is_cached( $tplName, $cacheid ) ) {
+            $xoopsLogger->addBlock( $xobject->getVar('name') );
+            if ( ! ( $bresult = $xobject->buildBlock() ) ) {
+                return false;
+            }
+			$xoopsTpl->assign( 'block', $bresult );
+            $block['content'] = $xoopsTpl->fetch( $tplName, $cacheid );
+            $xoopsTpl->clear_assign('block');
+        } else {
+            $xoopsLogger->addBlock( $xobject->getVar('name'), true, $bcachetime );
+            $block['content'] = $xoopsTpl->fetch( $tplName, $cacheid );
+        }
+        return $block;
+	}
+	
+	function assignVars( &$template ) {
+		$template->assign( 'xoBlocks', $this->blocks );
+	}
+	
+	
+}
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/builder.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/xo-info.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/xo-info.php	2005-11-27 09:58:09 UTC (rev 44)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/xo-info.php	2005-11-27 10:13:07 UTC (rev 45)
@@ -0,0 +1,23 @@
+<?php
+/**
+* xoops_logos_PageBuilder bundle information file
+*
+* See the enclosed file LICENSE for licensing information.
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+*
+* @copyright    The XOOPS project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @package		xoops_logos
+* @subpackage	xoops_logos_PageBuilder
+* @version		$Id$
+* @author		Skalpa Keo <skalpa at xoops.org>
+* @since        2.3.0
+*/
+
+return array(
+	'xoBundleDisplayName' => 'XOOPSLogos page builder',
+	'xoBundleIdentifier' => 'xoops_logos_PageBuilder',
+	'xoClassPath' => '/builder.php',
+);
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/xo-info.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"



From skalpa at berlios.de  Sun Nov 27 11:15:20 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 27 Nov 2005 11:15:20 +0100
Subject: [Xoops4-svn] r46 - in XoopsCore/branches/tasks/121476-tplset-remove: XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj htdocs
Message-ID: <200511271015.jARAFK8P004153@sheep.berlios.de>

Author: skalpa
Date: 2005-11-27 11:15:18 +0100 (Sun, 27 Nov 2005)
New Revision: 46

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/render-2.0.php
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php
Log:
Moved blocks aggregation code from header.php to a custom class, and changed the 2.0 BC code accordingly

Modified: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/render-2.0.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/render-2.0.php	2005-11-27 10:13:07 UTC (rev 45)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/render-2.0.php	2005-11-27 10:15:18 UTC (rev 46)
@@ -3,6 +3,42 @@
 	$this->canvasTemplate	= './theme.html';
 	$this->pageTemplate		= '';
 	
+	
+	// Assign metas as 'xoops_meta_xxxx'
+	foreach ( $this->metas['meta'] as $name => $content ) {
+		$this->template->assign( 'xoops_meta_' . $name, $content );
+	}
+	// Assign xoops_js
+	$this->template->assign(
+		'xoops_js',
+		'//--></script><script type="text/javascript" src="' .
+		$this->metas['script']['include/xoops.js']['src'] . '"></script><script type="text/javascript"><!--'
+    );
+
+	// Assign blocks vars (old-style)
+	$blocks =& $this->template->get_template_vars( 'xoBlocks' );
+
+	if ( !@empty( $blocks['canvas_left'] ) ) {
+		$this->template->assign_by_ref( 'xoops_lblocks', $blocks['canvas_left'] );
+		$this->template->assign( 'xoops_showlblock', 1 );
+	}
+	if ( !@empty( $blocks['canvas_right'] ) ) {
+		$this->template->assign_by_ref( 'xoops_rblocks', $blocks['canvas_right'] );
+		$this->template->assign( 'xoops_showrblock', 1 );
+	}
+	if ( !@empty( $blocks['page_top'] ) ) {
+		$this->template->assign_by_ref( 'xoops_ccblocks', $blocks['page_top'] );
+		$this->template->assign( 'xoops_showcblock', 1 );
+	}
+	if ( !@empty( $blocks['page_topleft'] ) ) {
+		$this->template->assign_by_ref( 'xoops_clblocks', $blocks['page_topleft'] );
+		$this->template->assign( 'xoops_showcblock', 1 );
+	}
+	if ( !@empty( $blocks['page_topright'] ) ) {
+		$this->template->assign_by_ref( 'xoops_crblocks', $blocks['page_topright'] );
+		$this->template->assign( 'xoops_showcblock', 1 );
+	}
+
 	// XOOPS 2.0 themes need the content to be rendered and assigned to the var 'xoops_contents'
 	ob_start();
 	$this->renderZone( 'content' );

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php	2005-11-27 10:13:07 UTC (rev 45)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/header.php	2005-11-27 10:15:18 UTC (rev 46)
@@ -34,39 +34,49 @@
 	//var_export( $xoops->services['theme'] );
 
 
-
-	include_once XOOPS_ROOT_PATH.'/class/xoopsblock.php';
-
     $xoopsOption['theme_use_smarty'] = 1;
     // include Smarty template engine and initialize it
     require_once XOOPS_ROOT_PATH.'/class/template.php';
     $xoopsTpl = new XoopsTpl();
+    $xoopsTpl->currentTheme =& $xoops->services['theme'];
     $xoopsTpl->xoops_setCaching(2);
     if ($xoopsConfig['debug_mode'] == 3) {
         $xoopsTpl->xoops_setDebugging(true);
     }
-    $xoopsTpl->assign(array('xoops_theme' => $xoopsConfig['theme_set'], 'xoops_imageurl' => XOOPS_THEME_URL.'/'.$xoopsConfig['theme_set'].'/', 'xoops_themecss'=> xoops_getcss($xoopsConfig['theme_set']), 'xoops_requesturi' => htmlspecialchars($GLOBALS['xoopsRequestUri'], ENT_QUOTES), 'xoops_sitename' => htmlspecialchars($xoopsConfig['sitename'], ENT_QUOTES), 'xoops_slogan' => htmlspecialchars($xoopsConfig['slogan'], ENT_QUOTES)));
+    $xoopsTpl->assign(
+    	array(
+	    	'xoops_theme' => $xoopsConfig['theme_set'],
+	    	'xoops_imageurl' => XOOPS_THEME_URL.'/'.$xoopsConfig['theme_set'].'/',
+	    	'xoops_themecss'=> xoops_getcss($xoopsConfig['theme_set']),
+	    	'xoops_requesturi' => htmlspecialchars($GLOBALS['xoopsRequestUri'], ENT_QUOTES),
+	    	'xoops_sitename' => htmlspecialchars($xoopsConfig['sitename'], ENT_QUOTES),
+	    	'xoops_slogan' => htmlspecialchars($xoopsConfig['slogan'], ENT_QUOTES)
+	    )
+   	);
+
+    
     // Meta tags
     $config_handler =& xoops_gethandler('config');
     $criteria = new CriteriaCompo(new Criteria('conf_modid', 0));
     $criteria->add(new Criteria('conf_catid', XOOPS_CONF_METAFOOTER));
     $config =& $config_handler->getConfigs($criteria, true);
-    foreach (array_keys($config) as $i) {
-        // prefix each tag with 'xoops_'
-        $xoopsTpl->assign('xoops_'.$config[$i]->getVar('conf_name'), $config[$i]->getConfValueForOutput());
+    foreach ( array_keys($config) as $i ) {
+    	if ( substr( $config[$i]->getVar('conf_name'), 0, 5 ) == 'meta_' ) {
+    		$xoops->services['theme']->setMeta( 'meta',
+    			substr( $config[$i]->getVar('conf_name'), 5 ), $config[$i]->getConfValueForOutput() );
+    	}
     }
     //unset($config);
     // show banner?
+
+	$xoops->services['theme']->addScript( 'include/xoops.js' );
+
     if ($xoopsConfig['banners'] == 1) {
         $xoopsTpl->assign('xoops_banner', xoops_getbanner());
     } else {
         $xoopsTpl->assign('xoops_banner', '&nbsp;');
     }
-    // Weird, but need extra <script> tags for 2.0.x themes
-    $xoopsTpl->assign('xoops_js', '//--></script><script type="text/javascript" src="'.XOOPS_URL.'/include/xoops.js"></script><script type="text/javascript"><!--');
     // get all blocks and assign to smarty
-    $xoopsblock = new XoopsBlock();
-    $block_arr = array();
     if ($xoopsUser != '') {
         $xoopsTpl->assign(array('xoops_isuser' => true, 'xoops_userid' => $xoopsUser->getVar('uid'), 'xoops_uname' => $xoopsUser->getVar('uname'), 'xoops_isadmin' => $xoopsUserIsAdmin));
         $groups = $xoopsUser->getGroups();
@@ -74,99 +84,22 @@
         $xoopsTpl->assign(array('xoops_isuser' => false, 'xoops_isadmin' => false));
         $groups = XOOPS_GROUP_ANONYMOUS;
     }
-    $toppage = false;
     if (isset($xoopsModule) && is_object($xoopsModule)) {
         // set page title
         $xoopsTpl->assign('xoops_pagetitle', $xoopsModule->getVar('name'));
         $xoopsTpl->assign('xoops_dirname', $xoopsModule->getVar('dirname'));
-        $moduleid = $xoopsModule->getVar('mid');
-        if (preg_match("/index\.php$/i", xoops_getenv('PHP_SELF')) && $xoopsConfig['startpage'] == $xoopsModule->getVar('dirname')) {
-            $toppage = true;
-        }
     } else {
         $xoopsTpl->assign('xoops_pagetitle', htmlspecialchars($xoopsConfig['slogan'], ENT_QUOTES));
         $xoopsTpl->assign('xoops_dirname', "system");
-        $moduleid = 0;
-        if (!empty($xoopsOption['show_cblock'])) {
-            $toppage = true;
-        }
     }
-    // Get blocks
-    $block_arr =& $xoopsblock->getAllByGroupModule($groups, $moduleid, $toppage, XOOPS_BLOCK_VISIBLE);
 
-    foreach (array_keys($block_arr) as $i) {
-        $bcachetime = $block_arr[$i]->getVar('bcachetime');
-        if (empty($bcachetime)) {
-            $xoopsTpl->xoops_setCaching(0);
-        } else {
-            $xoopsTpl->xoops_setCaching(2);
-            $xoopsTpl->xoops_setCacheTime($bcachetime);
-        }
-        $btpl = $block_arr[$i]->getVar('template') != '' ? $block_arr[$i]->getVar('template') : "system_block_dummy.html";
-
-        if (empty($bcachetime) || !$xoopsTpl->is_cached('db:'.$btpl, 'blk_'.$block_arr[$i]->getVar('bid'))) {
-            $xoopsLogger->addBlock($block_arr[$i]->getVar('name'));
-            $bresult =& $block_arr[$i]->buildBlock();
-            if (!$bresult) {
-                continue;
-            }
-            $xoopsTpl->assign_by_ref('block', $bresult);
-            $bcontent =& $xoopsTpl->fetch('db:'.$btpl, 'blk_'.$block_arr[$i]->getVar('bid'));
-            $xoopsTpl->clear_assign('block');
-        } else {
-            $xoopsLogger->addBlock($block_arr[$i]->getVar('name'), true, $bcachetime);
-            $bcontent =& $xoopsTpl->fetch('db:'.$btpl, 'blk_'.$block_arr[$i]->getVar('bid'));
-        }
-
-        switch ($block_arr[$i]->getVar('side')) {
-        case XOOPS_SIDEBLOCK_LEFT:
-            if (!isset($show_lblock)) {
-                $xoopsTpl->assign('xoops_showlblock', 1);
-                $show_lblock = 1;
-            }
-            $xoopsTpl->append('xoops_lblocks', array('title' => $block_arr[$i]->getVar('title'), 'content' => $bcontent));
-            break;
-        case XOOPS_CENTERBLOCK_LEFT:
-            if (!isset($show_cblock)) {
-                $xoopsTpl->assign('xoops_showcblock', 1);
-                $show_cblock = 1;
-            }
-            $xoopsTpl->append('xoops_clblocks', array('title' => $block_arr[$i]->getVar('title'), 'content' => $bcontent));
-            break;
-        case XOOPS_CENTERBLOCK_RIGHT:
-            if (!isset($show_cblock)) {
-                $xoopsTpl->assign('xoops_showcblock', 1);
-                $show_cblock = 1;
-            }
-            $xoopsTpl->append('xoops_crblocks', array('title' => $block_arr[$i]->getVar('title'), 'content' => $bcontent));
-            break;
-        case XOOPS_CENTERBLOCK_CENTER:
-            if (!isset($show_cblock)) {
-                $xoopsTpl->assign('xoops_showcblock', 1);
-                $show_cblock = 1;
-            }
-            $xoopsTpl->append('xoops_ccblocks', array('title' => $block_arr[$i]->getVar('title'), 'content' => $bcontent));
-            break;
-        case XOOPS_SIDEBLOCK_RIGHT:
-            if (!isset($show_rblock)) {
-                $xoopsTpl->assign('xoops_showrblock', 1);
-                $show_rblock = 1;
-            }
-            $xoopsTpl->append('xoops_rblocks', array('title' => $block_arr[$i]->getVar('title'), 'content' => $bcontent));
-            break;
-        }
-        unset($bcontent);
-    }
-    //unset($block_arr);
-    if (!isset($show_rblock)) {
-        $xoopsTpl->assign('xoops_showrblock', 0);
-    }
-    if (!isset($show_cblock)) {
-        $xoopsTpl->assign('xoops_showcblock', 0);
-    }
-    if (!isset($show_lblock)) {
-        $xoopsTpl->assign('xoops_showlblock', 0);
-    }
+    /////////
+    $builder =& XOS::create( 'xoops_logos_PageBuilder' );
+    $builder->retrieveBlocks();
+    
+    $builder->assignVars( $xoops->services['theme']->template );
+    
+	
     if (xoops_getenv('REQUEST_METHOD') != 'POST' && !empty($xoopsModule) && !empty($xoopsConfig['module_cache'][$xoopsModule->getVar('mid')])) {
         $xoopsTpl->xoops_setCaching(2);
         $xoopsTpl->xoops_setCacheTime($xoopsConfig['module_cache'][$xoopsModule->getVar('mid')]);



From skalpa at berlios.de  Sun Nov 27 14:22:27 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Sun, 27 Nov 2005 14:22:27 +0100
Subject: [Xoops4-svn] r47 - in XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default: . modules modules/system modules/system/blocks
Message-ID: <200511271322.jARDMR3k028223@sheep.berlios.de>

Author: skalpa
Date: 2005-11-27 14:22:24 +0100 (Sun, 27 Nov 2005)
New Revision: 47

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/index.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_comments.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_login.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_mainmenu.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_newusers.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_notification.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_online.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_search.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_siteinfo.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_themes.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_topusers.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_user.html
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_waiting.html
Log:
Made a copy of the old system blocks templates to the old xoops20 default theme folder:
(so these ones will be used by old themes, while the new default ones will be used by new themes)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/index.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/index.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_comments.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_comments.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_login.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_login.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_mainmenu.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_mainmenu.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_newusers.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_newusers.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_notification.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_notification.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_online.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_online.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_search.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_search.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_siteinfo.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_siteinfo.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_themes.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_themes.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_topusers.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_topusers.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_user.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_user.html)

Copied: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default/modules/system/blocks/system_block_waiting.html (from rev 33, XoopsCore/branches/tasks/121476-tplset-remove/htdocs/modules/system/templates/blocks/system_block_waiting.html)



From skalpa at berlios.de  Mon Nov 28 11:50:23 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Mon, 28 Nov 2005 11:50:23 +0100
Subject: [Xoops4-svn] r48 - in XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes: . default-web default-web/img default-web/modules default-web/modules/system
Message-ID: <200511281050.jASAoNYb025602@sheep.berlios.de>

Author: skalpa
Date: 2005-11-28 11:50:18 +0100 (Mon, 28 Nov 2005)
New Revision: 48

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/block.xotpl
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/canvas-default.xotpl
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/body_bg.jpg
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/body_bg.png
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-banner_bg.png
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blockcontent_bg_blue.png
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blockcontent_bg_grey.png
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blocktitle_bg_blue.png
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blocktitle_bg_grey.png
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-rightcolumn_bg.png
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/separator.png
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/xoops-logo.png
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/modules/
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/modules/system/
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/modules/system/blocks/
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/page-default.xotpl
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/style.css
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/xo-info.php
Log:
Added new default theme (MSIE compat not here yet: try only with a real browser)

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/block.xotpl
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/block.xotpl	2005-11-27 13:22:24 UTC (rev 47)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/block.xotpl	2005-11-28 10:50:18 UTC (rev 48)
@@ -0,0 +1,4 @@
+<div class="xo-block ([$block.module])-([$block.name])">
+	<div class="xo-blocktitle">([$block.title])</div>
+	<div class="xo-blockcontent">([$block.content])</div>
+</div>

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/canvas-default.xotpl
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/canvas-default.xotpl	2005-11-27 13:22:24 UTC (rev 47)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/canvas-default.xotpl	2005-11-28 10:50:18 UTC (rev 48)
@@ -0,0 +1,61 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="([$xoops_langcode])" lang="([$xoops_langcode])">
+<head>
+	<meta http-equiv="content-type" content="text/html; charset=([$xoops_charset])" />
+	<meta http-equiv="content-language" content="([$xoops_langcode])" />
+
+	([include file='xotpl:xoops_pyro_Theme#templates/metas.xotpl'])
+
+	<link rel="SHORTCUT ICON" href="([xoImgUrl favicon.ico])" />
+
+	<link rel="stylesheet" type="text/css" media="screen" href="([xoImgUrl xoops.css])" />
+	<link rel="stylesheet" type="text/css" media="screen" href="([xoImgUrl style.css])" />
+
+	
+	<title>([$xoops_sitename]) - ([$xoops_pagetitle])</title>
+
+	([$xoops_module_header])
+
+</head>
+<body>
+
+<div id="xo-canvas">
+	<div id="xo-canvas-header">
+		<div id="xo-banner">
+			<div id="xo-banner-logo">
+				<a href="([xoAppUrl /www/])"><img src="([xoImgUrl img/xoops-logo.png])" alt="XOOPS" /></a>
+			</div>
+			([if $xoops_banner != '&nbsp;'])
+			<div id="xo-banner-ad">([$xoops_banner])</div>
+			([/if])
+		</div>
+	</div>
+	<div id="xo-canvas-main">
+		([if !empty($xoBlocks.canvas_left)])
+		<div class="xo-canvas-column xo-blockszone" id="xo-canvas-leftcolumn">
+		([foreach from=$xoBlocks.canvas_left key=n item=block])
+			([include file="`$xoTheme->folderName`/block.xotpl"])
+		([/foreach])
+		</div>
+		([/if])
+	
+		([if !empty($xoBlocks.canvas_right)])
+		<div class="xo-canvas-column xo-blockszone" id="xo-canvas-rightcolumn">
+		([foreach from=$xoBlocks.canvas_right key=n item=block])
+			([include file="`$xoTheme->folderName`/block.xotpl"])
+		([/foreach])
+		</div>
+		([/if])
+		([$xoTheme->renderZone('page')])
+		<br clear="all" />
+	</div>
+	<div id="xo-canvas-footer">
+		<a href="http://www.xoops.org/" target="_blank">
+			Powered by ([$xoops->xoShortVersionString])
+		</a>
+	</div>
+
+</div>
+  
+</body>
+</html>

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/body_bg.jpg
===================================================================
(Binary files differ)


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/body_bg.jpg
___________________________________________________________________
Name: svn:mime-type
   + image/jpeg

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/body_bg.png
===================================================================
(Binary files differ)


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/body_bg.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-banner_bg.png
===================================================================
(Binary files differ)


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-banner_bg.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blockcontent_bg_blue.png
===================================================================
(Binary files differ)


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blockcontent_bg_blue.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blockcontent_bg_grey.png
===================================================================
(Binary files differ)


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blockcontent_bg_grey.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blocktitle_bg_blue.png
===================================================================
(Binary files differ)


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blocktitle_bg_blue.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blocktitle_bg_grey.png
===================================================================
(Binary files differ)


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-blocktitle_bg_grey.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-rightcolumn_bg.png
===================================================================
(Binary files differ)


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/canvas-rightcolumn_bg.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/separator.png
===================================================================
(Binary files differ)


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/separator.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/xoops-logo.png
===================================================================
(Binary files differ)


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/img/xoops-logo.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/page-default.xotpl
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/page-default.xotpl	2005-11-27 13:22:24 UTC (rev 47)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/page-default.xotpl	2005-11-28 10:50:18 UTC (rev 48)
@@ -0,0 +1,30 @@
+
+	<div id="xo-page">
+		([if !empty($xoops_ccblocks)])
+		<div class="xo-blockszone" id="xo-page-topblocks">
+		([foreach item=block from=$xoops_ccblocks])
+			([include file="default-web/block.html"])
+		([/foreach])
+		</div>
+		([/if])
+		([if !empty($xoops_clblocks)])
+		<div class="xo-blockszone" id="xo-page-topleftblocks">
+		([foreach item=block from=$xoops_clblocks])
+			([include file="default-web/block.html"])
+		([/foreach])
+		</div>
+		([/if])
+		([if !empty($xoops_crblocks)])
+		<div class="xo-blockszone" id="xo-page-toprightblocks">
+		([foreach item=block from=$xoops_crblocks])
+			([include file="default-web/block.html"])
+		([/foreach])
+		</div>
+		([/if])
+		
+		([include file='xotpl:modules/news/templates/blocks/news_block_topics.html'])
+
+		<div id="xo-content">
+			([$xoTheme->renderZone('content')])
+		</div>
+	</div>

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/style.css
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/style.css	2005-11-27 13:22:24 UTC (rev 47)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/style.css	2005-11-28 10:50:18 UTC (rev 48)
@@ -0,0 +1,139 @@
+
+html, body {
+	margin:			0px;
+	background:		#ffffff url(img/body_bg.png) repeat-x left top;
+	background-attachment:	fixed;
+	color:			#000000;
+	font:			11pt sans-serif;
+}
+
+#xo-canvas {
+	margin:			15px;
+	background:		#EEEEEE;
+}
+
+#xo-canvas-header {
+	border-bottom:	1px solid #CCCCCC;
+	background:		#FFFFFF;
+	padding:		3px 3px 3px;
+}
+
+#xo-banner {
+	height:			60px;
+	border:			1px solid #000000;
+	padding:		2px;
+	background:		#2A75C5 url(img/canvas-banner_bg.png) repeat-x left top;
+}
+
+#xo-canvas-main {
+	border-top:		1px solid #FFFFFF;
+	padding:		6px;
+}
+
+.xo-canvas-column {
+	width:			160px;
+}
+#xo-canvas-leftcolumn {
+	float:			left;
+	border:			1px solid #666666;
+}
+#xo-canvas-rightcolumn {
+	float:			right;
+	padding-bottom:	128px;
+	background:		url(img/canvas-rightcolumn_bg.png) no-repeat center bottom;
+}
+
+#xo-page {
+	background:		#ffffff;
+	padding:		1em 0px;
+	border:			1px solid #CCCCCC;
+}
+
+#xo-canvas-leftcolumn + #xo-page, #xo-canvas-leftcolumn + * + #xo-page {
+	margin-left:	176px;
+}
+
+#xo-canvas-rightcolumn + #xo-page {
+	margin-right:	176px;
+}
+
+#xo-canvas-footer {
+	padding:		1px;
+	background:		#DDDDDD;
+	text-align:		center;
+	font-size:		80%;
+	font-family:	monospace;
+}
+#xo-canvas-footer, #xo-canvas-footer a {
+	color:			#666666;
+	text-decoration:	none;
+}
+
+
+#xo-canvas-leftcolumn .xo-blocktitle {
+	background:		url(img/canvas-blocktitle_bg_grey.png) repeat-x left top;
+	color:			#ffffff;
+	border-bottom:	1px solid #666666;
+	padding:		.2em .5em;
+	font-weight:	bold;
+	text-shadow:	1px 1px #000000;
+}
+
+#xo-canvas-leftcolumn .xo-blockcontent {
+	background:		#999999 url(img/canvas-blockcontent_bg_grey.png) repeat-x left top;
+}
+
+
+#xo-canvas-rightcolumn .xo-block {
+	padding:		8px 0px;
+	background:		url(img/separator.png) no-repeat center bottom;
+}
+#xo-canvas-rightcolumn :last-child {
+	background:		transparent none;
+}
+
+
+#xo-canvas-rightcolumn .xo-blocktitle {
+	font-size:		90%;
+	font-weight:	bold;
+}
+#xo-canvas-rightcolumn .xo-blockcontent {
+	font-size:		80%;
+}
+
+
+#xo-canvas-rightcolumn a {
+	color:				#666666;
+}
+#xo-canvas-rightcolumn a:hover {
+	text-decoration:	underline;
+}
+
+
+
+.xo-canvas-column a {
+	text-decoration:	none;
+	font:				80%;
+	color:				#CCCCCC;
+}
+.xo-canvas-column a:hover {
+	color:				#FFFFFF;
+}
+
+.system-main_menu .xo-blocktitle {
+	background:		url(img/canvas-blocktitle_bg_blue.png) repeat-x left top;
+}
+
+.system-main_menu .xo-blockcontent {
+	background:		#5E77D4 url(img/canvas-blockcontent_bg_blue.png) repeat-x left top;
+}
+
+.xo-canvas-column .system-main_menu  a {
+	color:				#B6C6EC;
+}
+
+.xo-block ul {
+	margin:				0px;
+	padding:			0px;
+	list-style-type:	none;
+}
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/style.css
___________________________________________________________________
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/xo-info.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/xo-info.php	2005-11-27 13:22:24 UTC (rev 47)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/xo-info.php	2005-11-28 10:50:18 UTC (rev 48)
@@ -0,0 +1,27 @@
+<?php
+
+
+
+
+return array(
+	'xoBundleIdentifier'	=> 'theme_default__web',
+	'xoBundleDisplayName'	=> 'XOOPS default theme (standards compliant)',
+	// This theme default templates
+	// templates paths must start with a "." to be considered relative to the theme folder
+	'canvasTemplate' => './canvas-default.xotpl',
+	'pageTemplate' => './page-default.xotpl',
+);
+
+
+
+
+
+
+
+
+
+
+
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/themes/default-web/xo-info.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"



From skalpa at berlios.de  Tue Nov 29 11:10:40 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Tue, 29 Nov 2005 11:10:40 +0100
Subject: [Xoops4-svn] r49 - XoopsCore/branches/tasks/121476-tplset-remove/htdocs
Message-ID: <200511291010.jATAAeh5015009@sheep.berlios.de>

Author: skalpa
Date: 2005-11-29 11:10:38 +0100 (Tue, 29 Nov 2005)
New Revision: 49

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/userinfo.php
Log:
Fixed 2 "only variables can be passed by ref" fatal errors with PHP 4.4/5.0.5+

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/userinfo.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/userinfo.php	2005-11-28 10:50:18 UTC (rev 48)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/userinfo.php	2005-11-29 10:10:38 UTC (rev 49)
@@ -112,7 +112,8 @@
 $xoopsTpl->assign('lang_interest', _US_INTEREST);
 $xoopsTpl->assign('user_interest', $thisUser->getVar('user_intrest'));
 $xoopsTpl->assign('lang_extrainfo', _US_EXTRAINFO);
-$xoopsTpl->assign('user_extrainfo', $myts->makeTareaData4Show($thisUser->getVar('bio', 'N'),0,1,1));
+$var = $thisUser->getVar('bio', 'N');
+$xoopsTpl->assign('user_extrainfo', $myts->makeTareaData4Show($var,0,1,1));
 $xoopsTpl->assign('lang_statistics', _US_STATISTICS);
 $xoopsTpl->assign('lang_membersince', _US_MEMBERSINCE);
 $xoopsTpl->assign('user_joindate', formatTimestamp($thisUser->getVar('user_regdate'),'s'));
@@ -126,7 +127,8 @@
 $xoopsTpl->assign('lang_notregistered', _US_NOTREGISTERED);
 
 $xoopsTpl->assign('lang_signature', _US_SIGNATURE);
-$xoopsTpl->assign('user_signature', $myts->makeTareaData4Show($thisUser->getVar('user_sig', 'N'),0,1,1));
+$var = $thisUser->getVar('user_sig', 'N');
+$xoopsTpl->assign('user_signature', $myts->makeTareaData4Show($var,0,1,1));
 
 if ($thisUser->getVar('user_viewemail') == 1) {
     $xoopsTpl->assign('user_email', $thisUser->getVar('email', 'E'));



From skalpa at berlios.de  Tue Nov 29 11:21:31 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Tue, 29 Nov 2005 11:21:31 +0100
Subject: [Xoops4-svn] r50 - XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include
Message-ID: <200511291021.jATALVVI016332@sheep.berlios.de>

Author: skalpa
Date: 2005-11-29 11:21:30 +0100 (Tue, 29 Nov 2005)
New Revision: 50

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/xoops.js
Log:
Enahnced xoopsCheckAll and changeDisplay so they now accept elements as parameters too, instead of only IDs

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/xoops.js
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/xoops.js	2005-11-29 10:10:38 UTC (rev 49)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/include/xoops.js	2005-11-29 10:21:30 UTC (rev 50)
@@ -52,12 +52,16 @@
 	xoopsGetElementById(id).style.fontSize = size;
 }
 
-function changeDisplay(id){
-	var elestyle = xoopsGetElementById(id).style;
-	if (elestyle.display == "") {
-		elestyle.display = "none";
+function changeDisplay( elt ) {
+	if ( elt && typeof(elt)!="object" )	elt=document.getElementById(elt);
+	if ( !elt ) return;
+	if ( elt.style.display != "none" ) {
+		elt.xoOrigDisplay = elt.style.display;
+		elt.style.display = "none";
+	} else if ( typeof(elt.xoOrigDisplay)!="undefined" ) {
+		elt.style.display = elt.xoOrigDisplay;
 	} else {
-		elestyle.display = "block";
+		elt.style.display = "";
 	}
 }
 
@@ -120,13 +124,15 @@
 		targetDom.disabled = false;
 	}
 }
-function xoopsCheckAll(formname, switchid) {
-	var ele = document.forms[formname].elements;
-	var switch_cbox = xoopsGetElementById(switchid);
-	for (var i = 0; i < ele.length; i++) {
-		var e = ele[i];
-		if ( (e.name != switch_cbox.name) && (e.type == 'checkbox') ) {
-			e.checked = switch_cbox.checked;
+function xoopsCheckAll( form, checkbox ) {
+	if ( !form || !checkbox )	return;
+	if ( typeof(form) != 'object' )			form=document.getElementById(form);
+	if ( typeof(checkbox) != 'object' )		checkbox=document.getElementById(checkbox);
+	if ( !form || !checkbox )	return;
+	
+	for (var i = 0; i < form.elements.length; i++) {
+		if ( form.elements[i] != checkbox && form.elements[i].type == 'checkbox' ) {
+			form.elements[i].checked = checkbox.checked;
 		}
 	}
 }



From skalpa at berlios.de  Wed Nov 30 00:18:25 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Wed, 30 Nov 2005 00:18:25 +0100
Subject: [Xoops4-svn] r51 - in XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj: . plugins
Message-ID: <200511292318.jATNIPC1026763@sheep.berlios.de>

Author: skalpa
Date: 2005-11-30 00:18:24 +0100 (Wed, 30 Nov 2005)
New Revision: 51

Added:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/compiler.xoAppUrl.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/compiler.xoImgUrl.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.xotpl.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty.php
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/xo-info.php
Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.db.php
Log:
Added missing files from xoops_template_Smarty I forgot to add to the SVN

Added: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/compiler.xoAppUrl.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/compiler.xoAppUrl.php	2005-11-29 10:21:30 UTC (rev 50)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/compiler.xoAppUrl.php	2005-11-29 23:18:24 UTC (rev 51)
@@ -0,0 +1,26 @@
+<?php
+/**
+* xoAppUrl Smarty compiler plug-in
+*
+* See the enclosed file LICENSE for licensing information.
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+*
+* @copyright    The XOOPS project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @author		Skalpa Keo <skalpa at xoops.org>
+* @package		xoops_template
+* @subpackage	xoops_template_Smarty
+* @since        2.3.0
+* @version		$Id$
+*/
+
+function smarty_compiler_xoAppUrl( $argStr, &$smarty ) {
+	global $xoops;
+	
+	$argStr = trim( $argStr );
+	
+	return "\necho '" . addslashes( $xoops->path( $argStr, true ) ) . "';";
+
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/compiler.xoAppUrl.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/compiler.xoImgUrl.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/compiler.xoImgUrl.php	2005-11-29 10:21:30 UTC (rev 50)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/compiler.xoImgUrl.php	2005-11-29 23:18:24 UTC (rev 51)
@@ -0,0 +1,33 @@
+<?php
+/**
+* xoImgUrl Smarty compiler plug-in
+*
+* See the enclosed file LICENSE for licensing information.
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+*
+* @copyright    The XOOPS project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @author		Skalpa Keo <skalpa at xoops.org>
+* @package		xoops_template
+* @subpackage	xoops_template_Smarty
+* @since        2.3.0
+* @version		$Id$
+*/
+
+function smarty_compiler_xoImgUrl( $argStr, &$smarty ) {
+	global $xoops;
+	
+	$argStr = trim( $argStr );
+	
+	if ( isset($smarty->template_engine->currentTheme) ) {
+		$path = $smarty->template_engine->currentTheme->resourcePath( $argStr );
+	} else {
+		$path = $argStr;
+	}
+
+	return "\necho '" . addslashes( $xoops->url( $path ) ) . "';";
+
+} 
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/compiler.xoImgUrl.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Modified: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.db.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.db.php	2005-11-29 10:21:30 UTC (rev 50)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.db.php	2005-11-29 23:18:24 UTC (rev 51)
@@ -89,6 +89,10 @@
 			trigger_error( "Cannot create db: resource handler templates list", E_USER_WARNING );
 		}
 	}
+	
+	if ( $tplName == 'system_notification_select.html' ) {
+		$tplName = 'system_notification_select.xotpl';
+	}
 	if ( isset( $list[$tplName] ) ) {
 		return $xoops->path( $list[$tplName] );
 	}

Added: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.xotpl.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.xotpl.php	2005-11-29 10:21:30 UTC (rev 50)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.xotpl.php	2005-11-29 23:18:24 UTC (rev 51)
@@ -0,0 +1,71 @@
+<?php
+/**
+ * Smarty plugin
+ * 
+ * Kept for XOOPS 2.0 backward compatibility only !!!
+ * 
+ * Use the new xotpl: handler to access XOOPS templates
+ * ------------------------------------------------------------- 
+ * File:     resource.db.php
+ * Type:     resource
+ * Name:     db
+ * Purpose:  Fetches templates from a database
+ * -------------------------------------------------------------
+ * @package xoops20
+ * @deprecated
+ */
+
+function smarty_resource_xotpl_source($tpl_name, &$tpl_source, &$smarty) {
+
+	if ( $tplPath = smarty_resource_xotpl_getpath( $tpl_name, $smarty ) ) {
+		if ( $tpl_source = file_get_contents( $tplPath ) ) {
+			$smarty->realTemplatePath = $tplPath;
+			return true;
+		}
+	}
+	return false;
+}
+
+function smarty_resource_xotpl_timestamp($tpl_name, &$tpl_timestamp, &$smarty) {
+
+	if ( $tplPath = smarty_resource_xotpl_getpath( $tpl_name, $smarty ) ) {
+		if ( $tpl_timestamp = filemtime( $tplPath ) ) {
+			return true;
+		}
+	}
+	return false;
+}
+
+function smarty_resource_xotpl_secure($tpl_name, &$smarty) {
+    return true;
+}
+
+function smarty_resource_xotpl_trusted($tpl_name, &$smarty) {
+	return false;
+}
+
+function smarty_resource_xotpl_getpath( $tplName, &$smarty ) {
+	global $xoops;
+	
+	if ( $smarty->currentTheme ) {
+		$name = str_replace( '/templates/', '/', $tplName );
+		$themed = $smarty->currentTheme->resourcePath( $name );
+		if ( substr( $themed, 0, 7 ) == 'themes/' ) {
+			$tplName = $themed;
+		} elseif ( substr( $tplName, -6 ) == '.xotpl' ) {
+			// If the template is not in the theme folder,
+			// check if it's not here, but with an .html extension
+			$name = substr( $name, 0, -6 ) . '.html';
+			$themed = $smarty->currentTheme->resourcePath( $name );
+			if ( substr( $themed, 0, 7 ) == 'themes/' ) {
+				$tplName = $themed;
+			}
+		}
+	}
+	return $xoops->path( $tplName );
+
+}
+
+
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/plugins/resource.xotpl.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty.php	2005-11-29 10:21:30 UTC (rev 50)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty.php	2005-11-29 23:18:24 UTC (rev 51)
@@ -0,0 +1,111 @@
+<?php
+/**
+ * xoops_template_Smarty component main file
+ *
+ * See the enclosed file LICENSE for licensing information.
+ * If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+ *
+ * @copyright   The Xoops project http://www.xoops.org/
+ * @license     http://www.fsf.org/copyleft/gpl.html GNU public license
+ * @since       2.3.0
+ * @package		xoops_template
+ * @subpackage	xoops_template_Smarty
+ * @version		$Id$
+ * @author		Skalpa Keo <skalpa at xoops.org>
+ */
+
+XOS::import( 'Smarty' );
+
+/**
+ * XOOPS core default Smarty implementation
+ * @since        2.3.0
+ * @package		xoops_template
+ * @subpackage	xoops_template_Smarty
+ */
+class xoops_template_Smarty extends Smarty {
+	
+	var $left_delimiter =	'([';
+	var $right_delimiter =	'])';
+
+	var $template_dir		= XOOPS_THEME_PATH;
+	var $compile_dir		= 'var/Application Support/xoops_template_Smarty';
+	var $cache_dir			= 'var/Caches/xoops_template_Smarty';
+
+	var $use_sub_dirs		= false;
+	
+	
+	var $currentFile		= '';
+
+	/**
+	 * Theme to apply to this template (if any)
+	 * 
+	 * @var object
+	 */
+	var $currentTheme		= false;
+	
+
+	function xoops_template_Smarty( $options = null ) {
+		global $xoops;
+		
+		$this->compile_dir	= $xoops->path( $this->compile_dir );
+		$this->cache_dir	= $xoops->path( $this->cache_dir );
+
+		if ( $xoops->xoRunMode & XO_MODE_DEV_MASK ) {
+			$this->compile_check = true;
+			$this->force_compile = true;
+			//$this->debugging = true;
+		}
+		$this->Smarty();
+
+		$path = str_replace( DIRECTORY_SEPARATOR, '/', dirname( __FILE__ ) );
+
+		array_unshift( $this->plugins_dir, "$path/plugins" );
+		array_unshift( $this->plugins_dir, "$path/smarty/plugins" );
+		
+		$this->register_prefilter( array( &$this, 'filterOldTemplates' ) );
+		
+		$this->assign_by_ref( 'xoops', $xoops );
+	}
+
+	
+    function display( $resource_name = null, $cache_id = null, $compile_id = null) {
+        return $this->fetch( $resource_name, $cache_id, $compile_id, true );
+    }
+
+    function fetch( $resource_name = null, $cache_id = null, $compile_id = null, $display = false) {
+    	if ( !isset( $resource_name ) ) {
+    		$resource_name = $this->currentFile;
+    	} else {
+    		$this->currentFile = $resource_name;
+    	}
+    	return parent::fetch( $resource_name, $cache_id, $compile_id, $display );
+    }
+
+	/**
+	 * Render output from template data
+	 * 
+	 * @param   string  $data		The template to render
+	 * @param	bool	$display	If rendered text should be output or returned
+	 * @return  string  Rendered output if $display was false
+	 **/
+    function fetchFromData( $tplSource, $display = false ) {
+        if ( !function_exists('smarty_function_eval') ) {
+            require_once SMARTY_DIR . '/plugins/function.eval.php';
+        }
+        return smarty_function_eval( array('var' => $tplSource), $this );
+    }
+
+	/**
+	 * Compiler prefilter to change 2.0 style delimiters to new ones
+	 */
+    function filterOldTemplates( $data, &$compiler ) {
+    	$file = ( substr( $compiler->_current_file, 0, 6 ) == 'xotpl:' ) ? $this->realTemplatePath : $compiler->_current_file;
+		if ( substr( $file, -5 ) == '.html' ) {
+			$data = str_replace( array( '<{', '}>' ), array( '([', '])' ), $data );
+		}
+    	return $data;
+    }
+
+}
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/smarty.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"

Added: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/xo-info.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/xo-info.php	2005-11-29 10:21:30 UTC (rev 50)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/xo-info.php	2005-11-29 23:18:24 UTC (rev 51)
@@ -0,0 +1,26 @@
+<?php
+/**
+* xoops_template_Smarty bundle information file
+*
+* See the enclosed file LICENSE for licensing information.
+* If you did not receive this file, get it at http://www.fsf.org/copyleft/gpl.html
+*
+* @copyright    The XOOPS project http://www.xoops.org/
+* @license      http://www.fsf.org/copyleft/gpl.html GNU public license
+* @since        2.3.0
+* @version		$Id$
+* @author		Skalpa Keo <skalpa at xoops.org>
+*/
+
+return array(
+	'xoBundleDisplayName' => 'Smarty template engine (XOOPS version)',
+	'xoBundleIdentifier' => 'xoops_template_Smarty',
+	'xoClassPath' => '/smarty.php',
+	'xoServices' => array(
+		'Smarty' => array(
+			'xoClassPath' => '/smarty/Smarty.class.php',
+		),
+	),
+);
+
+?>
\ No newline at end of file


Property changes on: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Smarty.xoobj/xo-info.php
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:keywords
   + "Author Date Id Rev URL"



From skalpa at berlios.de  Wed Nov 30 00:24:13 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Wed, 30 Nov 2005 00:24:13 +0100
Subject: [Xoops4-svn] r52 - XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj
Message-ID: <200511292324.jATNODdW027270@sheep.berlios.de>

Author: skalpa
Date: 2005-11-30 00:24:13 +0100 (Wed, 30 Nov 2005)
New Revision: 52

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php
Log:
Small fixes in addStylesheet() and for to ensure pages echoing content get this content displayed

Modified: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php	2005-11-29 23:18:24 UTC (rev 51)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Pyro/Theme.xoobj/theme.php	2005-11-29 23:24:13 UTC (rev 52)
@@ -204,7 +204,6 @@
 		if ( !empty($contentTpl) ) {
 			$this->contentTemplate = $contentTpl;
 		}
-		$vars['xoops']		=& $xoops;
 		$vars['xoTheme']	=& $this;
 		$this->template->assign( $vars );
 		$this->renderZone( 'canvas' );
@@ -227,12 +226,12 @@
 					$tpl = $this->path . substr( $tpl, 1 );
 				}
 				$this->template->display( $tpl );
-				if ( !empty($this->content) && $zone == 'content' ) {
-					echo $this->content;
-				}
 			} elseif ( $zone != 'content' ) {
 				$this->renderZone( $zones[$zone] + 1 );
 			}
+			if ( !empty($this->content) && $zone == 'content' ) {
+				echo $this->content;
+			}
 		}	
 	}
 	function renderAttributes( $coll ) {
@@ -292,9 +291,13 @@
     * @return void
     **/
     function addStylesheet( $src = '', $attributes = array(), $content = '' ) {
+    	global $xoops;
 		if ( !empty( $src ) ) {
 			$attributes['href'] = $xoops->url( $this->resourcePath( $src ) );
 		}
+		if ( !isset($attributes['type']) ) {
+			$attributes['type'] = 'text/css';
+		}
 		if ( !empty( $content ) ) {
 			$attributes['_'] = $content;
 		}



From skalpa at berlios.de  Wed Nov 30 00:25:56 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Wed, 30 Nov 2005 00:25:56 +0100
Subject: [Xoops4-svn] r53 - XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj
Message-ID: <200511292325.jATNPuJP027480@sheep.berlios.de>

Author: skalpa
Date: 2005-11-30 00:25:56 +0100 (Wed, 30 Nov 2005)
New Revision: 53

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/builder.php
Log:
Small fix for custom blocks (the dummy tpl was not looked for correctly)

Modified: XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/builder.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/builder.php	2005-11-29 23:24:13 UTC (rev 52)
+++ XoopsCore/branches/tasks/121476-tplset-remove/XOOPS/Frameworks/XoopsCore/Logos/PageBuilder.xoobj/builder.php	2005-11-29 23:25:56 UTC (rev 53)
@@ -83,7 +83,7 @@
 		if ( '' != ( $tplName = $xobject->getVar('template') ) ) {
 			$tplName = "xotpl:modules/{$block['module']}/templates/blocks/$tplName";
 		} else {
-			$tplName = "xotpl:modules/system/templates/blocks/system_block_dummy.html";
+			$tplName = "xotpl:modules/system/templates/system_block_dummy.html";
 		}
 		$cacheid = 'blk_' . $xobject->getVar('bid') . ':' . md5( serialize( $xobject->getVar( 'options', 'n' ) ) );
              



From skalpa at berlios.de  Wed Nov 30 13:24:34 2005
From: skalpa at berlios.de (skalpa at BerliOS)
Date: Wed, 30 Nov 2005 13:24:34 +0100
Subject: [Xoops4-svn] r54 - XoopsCore/branches/tasks/121476-tplset-remove/htdocs/install/class
Message-ID: <200511301224.jAUCOYnB032288@sheep.berlios.de>

Author: skalpa
Date: 2005-11-30 13:24:33 +0100 (Wed, 30 Nov 2005)
New Revision: 54

Modified:
   XoopsCore/branches/tasks/121476-tplset-remove/htdocs/install/class/mainfilemanager.php
Log:
Fixed mainfile.php creation (added clearstatcache() call)

Modified: XoopsCore/branches/tasks/121476-tplset-remove/htdocs/install/class/mainfilemanager.php
===================================================================
--- XoopsCore/branches/tasks/121476-tplset-remove/htdocs/install/class/mainfilemanager.php	2005-11-29 23:25:56 UTC (rev 53)
+++ XoopsCore/branches/tasks/121476-tplset-remove/htdocs/install/class/mainfilemanager.php	2005-11-30 12:24:33 UTC (rev 54)
@@ -63,6 +63,7 @@
             $this->error = true;
             return false;
         }
+        clearstatcache();
         $content = fread($file, filesize($this->path) );
         fclose($file);
 



